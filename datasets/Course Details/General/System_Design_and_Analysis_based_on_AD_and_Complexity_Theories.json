{
  "course_name": "System Design and Analysis based on AD and Complexity Theories",
  "course_description": "This course studies what makes a good design and how one develops a good design. Students consider how the design of engineered systems (such as hardware, software, materials, and manufacturing systems) differ from the “design” of natural systems such as biological systems; discuss complexity and how one makes use of complexity theory to improve design; and discover how one uses axiomatic design theory (AD theory) in design of many different kinds of engineered systems. Questions are analyzed using Axiomatic Design Theory and Complexity Theory. Case studies are presented including the design of machines, tribological systems, materials, manufacturing systems, and recent inventions. Implications of AD and complexity theories on biological systems discussed.",
  "topics": [
    "Engineering",
    "Computer Science",
    "Theory of Computation",
    "Nanotechnology",
    "Systems Engineering",
    "Systems Design",
    "Engineering",
    "Computer Science",
    "Theory of Computation",
    "Nanotechnology",
    "Systems Engineering",
    "Systems Design"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nCourse Goals\n\nAbility to design using basic principles of design\n\nInvention of products based on basic principles\n\nVarious ways of achieving robust design\n\nAbility to design complex systems, including software and hardware\n\nUnderstanding complexity of systems\n\nReduction of complexity of engineered systems\n\nTeaching using many examples and case studies from diverse fields\n\nLearning by working on real projects (Term projects)\n\nPrerequisites\n\n2.004, 2.006\n\nTextbooks\n\nSuh, N. P.\nAxiomatic Design: Advances and Applications\n. New York, NY: Oxford University Press, 2001. ISBN: 9780195134667.\n\n------.\nComplexity: Theory and Applications\n. New York, NY: Oxford University Press, 2005. ISBN: 9780195178760.\n\nGrading\n\nActivities\n\npercentages\n\nTwo One-hour Examinations\n\n25%\n\nHomework\n\n25%\n\nTerm Project\n\n50%",
  "files": [
    {
      "category": "Lecture Notes",
      "title": "lec202.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/76f82abf6d0f21c916025c9fd2c79e84_lec202.pdf",
      "content": "2.882\nSystem Design and Analysis based on\nAD and Complexity Theories\n\nReferences\n(1) Nam Pyo Suh, \"Axiomatic Design: Advances\nand Applications, Oxford University Press, New\nYork, 2001\n(2)Nam Pyo Suh, \"Complexity: Theory and\nApplications\", Oxford University Press, New\nYork, 2005\n(3) Nam P. Suh, The Principles of Design, Oxford\nUniversity Press, 1990\n\nYour name\nYour field\nWhy?\n\nFormat/Assumptions\n1. Active Learning\n2. Project execution\n3. Will assume no prior knowledge of\nAxiomatic\nDesign\nand\nComplexity\nTheory.\n\nLecture 1\nIntroduction to\nAxiomatic Design\n\nMajor Topics to be covered\n1. Axiomatic Design\nTheory\nApplications\nMany industrial examples\nActual design exercise\n2. Complexity Theory\nTheory\nApplications\n\nToday's Lecture\n1.\nIntroduction -- Read Chapter 1 of AD\n2.\nWill email Homework Problems\n\nWhy Axiomatic Design\n1. Engineering deals with design and\nmanufacture of complex systems\n2. Examples: Space Shuttle\nMicrosoft Operating Systems\nManufacturing Systems\nMaterials\nOrganizations\n\nDemands in Industry\nIndustrial competitiveness demands that\n1. Shorten the lead-time for the introduction\nof new products,\n2. Lower manufacturing cost,\n3. Improve the quality and reliability of\nproducts,\n4. Satisfy the required functions most\neffectively.\nHardware, software, and systems must be designed right to be\ncontrollable, reliable, manufacturable, productive, and otherwise\nachieve their goals. The performance of poorly designed hardware,\nsoftware and systems cannot be improved through subsequent\ncorrective actions.\n\nRelationship between design and analysis\n1.\nFeedback loop between analysis and\nsynthesis\n2.\nScientific paradigm -- reductionism\n3.\nSynthesis -- Many FRs\n\nRelationship between design and analysis\nFigure by MIT OCW.\nY =\n=\nX\nY\nX\n-\nG\nH-1 for GH >> 1\n~~ GH\nG\n1+GH\nH\nG\n+\n\nTypical Approach to \"Realization\" and\n\"Implementation\" of New Products\n%\nC om pl\nTim e\n100 %\n80 %\n\nPoor Planning, purely experience-based\ndesign decisions, and trial-and-error based\ndesign practice may lead to the following\nconsequences:\n1. Project failure\n2. Missed schedule\n3. Cost over-run\n4. High warranty cost\n5. Frequent maintenance\n6. \"Me, too\" product\n7. Unhappy customer\n\nProduct Development: Typical Approach\n%\nCompl\nTim e\n100 %\n80%\nCost of\nDevelp.\n\nProduct Development:Axiomatic Approach\n%\nCompl\nTime\n100 %\n80%\nCost of\nDevelp.\n\nTMA Projection System\nSeveral slides describing TMA projection\nremoved for copyright reasons.\n\nThe MIT CMP machine\nOur attempt to teach systems design\n4 S.M. students designed and manufactured the machine and the\ncontrol system (including software for system integration) in 2\nyears. The system operated -- as designed -- when turned on with\nminimal modification.\n1 Ph.D. student studied the CMP process.\nSpent $2 million -- Funded by an industrial firm.\nWhat we taught them was the principles of design, so no\ndebugging or testing of prototypes was needed.\n\nCopper Damascene Process\nCu 6\nCu 5\nPhoto removed for\ncopyright reasons.\nCu 4\nCu 3\nCu 2\nCu 1\nW 1\nReference: D. Edelstein et al., Tech. Dig. IEEE Int. Elec. Dev. Mtg., Washington D.C.,\npp. 773-776 (1997).\n\nHistory\nGoal\nTo establish the science base for\nareas\nsuch\nas\ndesign\nand\nmanufacturing\n\nHow do you establish science base in\ndesign?\nAxiomatic approach\nAlgorithmic approach\n\nAxiomatic Design\nAxiomatic Design applies to all\ndesigns:\n-Hardware\n-Software\n-Materials\n-Manufacturing\n-Organizations\n\nAxiomatic Design\nAxiomatic Design helps the design\ndecision making process.\n-Correct decisions\n-Shorten lead time\n-Improves the quality of products\n-Deal with complex systems\n-Simplify service and maintenance\n-Enhances creativity\n\nAxiomatic Design\n-Axioms\n-Corollaries\n-Theorems\n-Applications\n--\nhardware,\nsoftware,\nmanufacturing, materials, etc.\n-System design\n-Complexity\n\nLCD Projector Design\nSeveral slides removed for copyright reasons.\nSee Example 3.4 in Suh, Axiomatic Design (2001).\n\nIntroduction\nStack of modules\nStack of modules\nRobot\nLoading\nStation\nUnloading\nstation\nTrack\n\nSystem integration\nM ach in e A\n\nM ach in e B\nF ig u re 3\nA C lu ster o f tw o m ach in es th at are p h y sically co u p led to\nm an u factu re a p art.\nStack of modules\nStack of modules\nRobot\nLoading\nStation\nTrack\n\nS tack o f m o d u les\nS tack o f m o d u les\n\nEngine Design\nConsider\nspark-ignition\ninternal\ncombustion\nengine used in passenger cars.\n1.\nIs the IC engine a good design?\n2.\nWhat are the functional requirements (FRs)\nof an IC engine?\n3.\nHow would you improve the design?\n\nFunctional Requirements of\na Spark-Ignition IC Engine\n1. Maximize fuel efficiency\n2. Eliminate hydrocarbon emission\n3. Minimize CO emission\n4. Minimize NOx emission\n\nConventional Engine is highly coupled!\nThere is no way we can satisfy the EPA\nregulation on emission without using\ncatalytic converter.\n\nFebruary 7, 2005 Lecture\nSoftware -- Acclaro\n\nThink functionally first !!\nReview\nof\nspecial\nhomework\nproblems.\n\nIs this knob a good design or a poor design?\nFigure removed for copyright reasons.\nSee Figure 3.1 in Suh, Axiomatic Design (2001).\n\nIs this knob a good design or a poor\ndesign?\nWhat are the functional requirements of\nthe knob ??\n\nWhich is a better design?\n\nMetal\nShaft\nInjection\nmolded\nnylon Knob\nMilled Flat\nEnd of the\nshaft\nSlot\nMilled Flat\nEnd of the\nshaft\nA\nA\nSection view AA\n(a)\n(b)\n\nSolution: The one on the right. Why?\n\nMetal\nShaft\nInjection\nmolded\nnylon Knob\nMilled Flat\nEnd of the\nshaft\nSlot\nMilled Flat\nEnd of the\nshaft\nA\nA\nSection view AA\n(a)\n(b)\n\nTypical Design Process\nFigure by MIT OCW.\nShortcomings:\ndiscrepancies,\nfailure to improve\nFunctional requirements\nand constraints\nProduct attributes\nCompare\nReformulate\nProduct,\nprototype, process\nRecognize and\nFormalize\n(code)\nIdeate and\nCreate\nSocietal\nNeed\nAnalyze\nand/or Test\nMarketplace\n\nWho are the Designers?\nHow do we design? What is design?\nIs the mayor of Boston a designer?\nDesign Process\n1. Know their \"customers' needs\".\n2. Define the problem they must solve to satisfy the needs.\n3. Conceptualize the solution through synthesis, which involves the task\nof satisfying several different functional requirements using a set of\ninputs such as product design parameters within given constraints.\n4. Perform analysis to optimize the proposed solution.\n5. Check the resulting design solution to see if it meets the original\ncustomer needs.\n\nDefinition of Design\nDesign is an interplay between\nwhat we want to achieve and\nhow we want to achieve them.\n\nDefinition of Design\n\"What\nwe want\nto\nachieve\"\n\"How\nwe want\nto\nachieve\nthem\"\n\nExample: Refrigerator Door Design\nFigure removed for copyright reasons.\nSee E1.1 in Suh, Axiomatic Design (2001).\n\nMapping from Customer Needs to Functional\nRequirements\nExample:\nArrow's Impossibility Theorem\nConsider the case of having three choices, A, B and\nC. Three people were asked to indicate their\npreference among these three choices.\nBased on the input from these individuals, can we\nmake a decision as to what the group as a whole\nprefers?\n\nExample - Solution\nThe answer is \"No. The following table lists the preferences indicated\nby Smith, Kim and Stein:\nIndividuals\nPreferences\nChoices\nA vs. B B vs. C A vs. C\nSmith\nA>B>C, A>C\nA\nB\nA\nKim\nB>C>A, B>A\nB\nB\nC\nStein\nC>A>B, C>B\nA\nC\nC\nGroup preference\nA >B\nB>C\nC>A\nThe results show that the group is confused as to what it wants. It\nprefers A over B, and B over C, but it prefers C over A rather than A\nover C as one might have expected based on the first two choices.\n\nCreativity and Axiomatic Design\nAxiomatic design enhances creativity\nby eliminating bad ideas early and\nthus, helping to channel the effort of\ndesigners .\n\nHistorical Perspective on Axiomatic Design\nAxioms are truths that cannot be derived but for which\nthere are no counter-examples or exceptions.\nMany fields of science and technology owe their\nadvances to the development and existence of axioms.\n(1) Euclid's geometry\n(2) The first and second laws of thermodynamics\nare axioms\n(3) Newtonian mechanics\n\nAxiomatic Design Framework\nThe Concept of Domains\nFig. 1.1 Four Domains of the Design World. {x} are characteristic vectors of\neach domain\nFigure by MIT OCW.\nCustomer domain\nFunctional domain\nPhysical domain\nProcess domain\nMapping\nMapping\nMapping\n{CAs}\n{FRs}\n{DP}\n{PVs}\n\nCharacteristics of the four domains of the design\nworld\nDomains Character\nVectors\nCustomer Domain\n{CAs}\nFunctional Domain\n{FRs}\nPhysical Domain {DPs} Process Domain {PVs}\nManufacturing\nAttributes which\nconsumers desire\nFunctional\nrequirements\nspecified for the\nproduct\nPhysical variables\nwhich can satisfy the\nfunctional\nrequirements\nProcess variables that\ncan control design\nparameters (DPs)\nMaterials\nDesired performance\nRequired Properties\nMicro-structure\nProcesses\nSoftware\nAttributes desired in\nthe software\nOutput Spec of\nProgram codes\nInput Variables or\nAlgorithms Modules\nProgram codes\nSub-routines machine\ncodes compilers\nmodules\nOrganization\nCustomer satisfaction\nFunctions of the\norganization\nPrograms or Offices\nor Activities\nPeople and other\nresources that can\nsupport the programs\nSystems\nAttribute desired of\nthe overall system\nFunctional\nrequirements of the\nsystem\nMachines or\ncomponents,\nsub-components\nResources (human,\nfinancial, materials,\netc.)\nBusiness\nROI\nBusiness goals\nBusiness structure\nHuman and financial\nresource\n\nTable by MIT OCW. After Table 1.1 in [Suh 2001].\n\nDefinitions\nAxiom:\nAn axiom is a self-evident truth or fundamental\ntruth for which there is no counter examples or\nexceptions. It cannot be derived from other laws of\nnature or principles.\nCorollary:\nA corollary is an inference derived from axioms or\npropositions that follow from axioms or other\nproven propositions.\n\nDefinitions - cont'd\nFunctional Requirement:\nFunctional requirements (FRs) are a minimum set of\nindependent requirements that completely characterize the\nfunctional needs of the product (or software, organizations,\nsystems, etc.) in the functional domain. By definition, each\nFR is independent of every other FR at the time the FRs are\nestablished.\nConstraint:\nConstraints (Cs) are bounds on acceptable solutions. There\nare two kinds of constraints: input constraints and system\nconstraints. Input constraints are imposed as part of the\ndesign specifications. System constraints are constraints\nimposed by the system in which the design solution must\nfunction.\n\nDefinitions - cont'd\nDesign parameter:\nDesign parameters (DPs) are the key physical (or\nother equivalent terms in the case of software\ndesign, etc.) variables in the physical domain that\ncharacterize the design that satisfies the specified\nFRs.\nProcess variable:\nProcess variables (PVs) are the key variables (or\nother equivalent term in the case of software design,\netc.) in the process domain that characterizes the\nprocess that can generate the specified DPs.\n\nThe Design Axioms\nAxiom 1: The Independence Axiom\nMaintain the independence of the functional\nrequirements (FRs).\nAxiom 2:\nThe Information Axiom\nMinimize the information content of the\ndesign.\n\nExample 1.3 Beverage Can Design\nConsider an aluminum beverage can\nthat contains carbonated drinks.\nHow many functional requirements\nmust the can satisfy?\nHow many physical parts does it have?\nWhat are the design parameters\n(DPs)? How many DPs are there?\n\nDesign Matrix\nThe relationship between {FRs} and {DPs} can be\nwritten as\n{FRs}=[A] {DPs}\nWhen the above equation is written in a differential form\nas\n{dFRs}=[A] {dDPs}\n[A] is defined as the Design Matrix given by elements :\nAij = ∂FRi/∂DPi\n\nExample\nFor a matrix A:\nA\n[ ] =\nA11\nA12\nA13\nA21\nA22\nA23\nA31\nA32\nA33\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nEquation (1.1) may be written as\nFR1 = A11 DP1 + A12 DP2 + A13 DP3\nFR2 = A21 DP1 + A22 DP2 + A23 DP3\n(1.3)\nFR3 = A31 DP1 + A32 DP2 + A33 DP3\n\nUncoupled, Decoupled, and Coupled Design\nDecoupled Design\n(1.5)\nCoupled Design\nAll other design matrices\nA\n[ ] =\nA11\nA22\nA33\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nA\n[ ]=\nA11\nA21 A22\nA31 A32 A33\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nUncoupled Design\n(1.4)\n\nDesign of Processes\n{DPs}=[B] {PVs}\n[B] is the design matrix that defines the\ncharacteristics of the process design and is\nsimilar in form to [A].\n\nConstraints\nWhat are constraints?\nConstraints provide the bounds on the acceptable\ndesign solutions and differ from the FRs in that\nthey do not have to be independent.\nThere are two kinds of constraints:\ninput constraints\nsystem constraints.\n\nNew Manufacturing Paradigm - Robust Design\nTheorem 4 -- Ideal design\n\nExample: Shaping of Hydraulic Tubes\nTo design a machine and a process that can achieve\nthe task, the functional requirements can be\nformally stated as:\nFR1= bend a titanium tube to prescribed\ncurvatures\nFR2= maintain the circular cross-section of the\nbent tube\n\nTube Bending Machine Design (cont's)\nGiven that we have two FRs,\nhow many DPs do we need?\n\nExample: Shaping of Hydraulic Tubes\nFigure removed for copyright reasons.\nSee Figure E1.6 in Suh, Axiomatic Design (2001).\n\nExample: Shaping of Hydraulic Tubes\nFixed set of\ncounter-rotating\ngrooved rollers\nPivot\naxis\nFlexible set of\ncounter-rotating\ngrooved rollers\nfor bending\nTube between\nthe two rollers\nω 1 < ω 2\nω 1 = ω 2\nω 1\nω 2\nω 1\nω 2\nDP1= Differential rotation of the bending rollers to bend the tube\nDP2= The profile of the grooves on the periphery of the bending\nrollers\nFigure ex.1.4.a\nTube bending apparatus\n\nExample: Van Seat Assembly\n(Adopted from Oh, 1997)\nFigures removed for copyright reasons.\nSee Example 2.6 in Suh, Axiomatic Design (2001).\n\nExample: Van Seat Assembly\nTraditional SPC Approach to Reliability and Quality\nThe traditional way of solving this kind of problem has been to do\nthe following:\n(a) Analyze the linkage to determine the sensitivity of the\nerror.\nTable a Length of linkages and sensitivity analysis\nLinks Nominal Length (mm) Sensitivity (mm/mm)\nL12\n370.00\n3.29\nL14\n41.43\n3.74\nL23\n134.00\n6.32\nL24\n334.86\n1.48\nL27\n35.75\n6.55\nL37\n162.00\n5.94\nL45\n51.55\n11.72\nL46\n33.50\n10.17\nL56\n83.00\n12.06\nL67\n334.70\n3.71\n\nExample: Van Seat Assembly\n(b)\nAssess\nuncertainty\nthrough\nprototyping\nand\nmeasurement.\nThe manufacturer of this van measured the distance between\nthe front to rear leg span as shown in Fig. ex.2.5.d. The mean\nvalue of FR is determined to be 339.5 mm with a standard\ndeviation of σf. Then, we can fit the data to a distribution\nfunction. If we assume that the distribution is Gaussian, then the\nreliability is given by\nThe data plotted in Fig. ex.2.5.d yields a reliability of 95%.\n\nReliability =\n2πσ F\n∫\ne\n-(FR-FR)2 / 2σ F\n___\ndFR\n(a)\n\nExample: Van Seat Assembly\n(c) Develop fixtures and gages to make sure that the\ncritical dimensions are controlled carefully.\n(d) Hire inspectors to monitor and control the key\ncharacteristics using statistical process control (SPC).\n\nNew Manufacturing Paradigm - Robust Design\nThis design has one FR, i.e., F,the front to rear leg span. This is a function of 10\nDPs, i.e., 10 linkages. This may be expressed mathematically as\nF = f DP\n1, DP\n2 ,....DP\n(\n)\nδF = ∂f\n∂DP\nx δDP\nx +\n∂f\n∂DP\ni δDP\ni\ni =1, except i=x\n∑\nWhat we want to do is to make δF=0\n\nDecomposition, Zigzagging and Hierarchy\nFigure by MIT OCW.\nFigure 1.2 Zigzagging to decompose in the functional and the physical domains and\ncreate the FR- and DP hierarchies\nFR\nFR1\nFR11\nFR12\nFR121\nFR122\nFR123\nFR1231\nFunctional Domain\nPhysical Domain\nFR1232\nFR2\nDP\nDP1\nDP11\nDP12\nDP121\nDP122\nDP123\nDP1231\nDP1232\nDP2\n\nIdentical Design and Equivalent Design\nEquivalent Design:\nWhen two different designs satisfy the same set of the\nhighest-level FRs but have different hierarchical\narchitecture, the designs are defined to be equivalent\ndesigns.\nIdentical Design:\nWhen two different designs satisfy the same set of\nFRs and have the identical design architecture, the\ndesigns are defined to be identical designs.\n\nExample: Refrigerator Design\nFR1 = Freeze food for long-term preservation\nFR2 = Maintain food at cold temperature for short-\nterm preservation\nTo satisfy these two FRs, a refrigerator with two\ncompartments is designed. Two DPs for this\nrefrigerator may be stated as:\nDP1 = The freezer section\nDP2 = The chiller (i.e., refrigerator) section.\n\nExample: Refrigerator Design\nFR1 = Freeze food for long-term preservation\nFR2 = Maintain food at cold temperature for short-term\npreservation\nDP1 = The freezer section\nDP2 = The chiller (i.e., refrigerator) section.\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nX\nX\nFR\nFR\n\nExample: Refrigerator Design\nHaving chosen the DP1, we can now decompose FR1 as:\nFR11 = Control temperature of the freezer section in\nthe range of -18 C +/- 2 C\nFR12\n=\nMaintain\nthe\nuniform\ntemperature\nthroughout the freezer section at the preset\ntemperature\nFR13 = Control humidity of the freezer section to\nrelative humidity of 50%\n\nExample: Refrigerator Design\nFR11 = Control temperature of the freezer section in the range of -18 C +/- 2 C\nFR12 = Maintain the uniform temperature throughout the freezer section at the preset temperature\nFR13 = Control humidity of the freezer section to relative humidity of 50%\nDP11 = Sensor/compressor system that turn on and off\nthe compressor when the air temperature is\nhigher and lower than the set temperature in the\nfreezer section, respectively.\nDP12 = Air circulation system that blows air into the\nfreezer section and circulate it uniformly\nthroughout the freezer section at all times\nDP13 = Condenser that condenses the moisture in the\nreturned air when its dew point is exceeded\n\nExample: Refrigerator Design\nSimilarly, based on the choice of DP2 made, FR2\nmay be decomposed as:\nFR21 = Control the temperature of the chilled\nsection in the range of 2 to 3 C\nFR22 = Maintain\na\nuniform\ntemperature\nthroughout the chilled section within 1 C of\na preset temperature\n\nExample: Refrigerator Design\nFR21 = Control the temperature of the chilled section in the range of 2 to 3 C\nFR22 = Maintain a uniform temperature throughout the chilled section within 1 C of\na preset temperature\nDP21 = Sensor/compressor system that turn on and\noff the compressor when the air temperature\nis higher and lower than the set temperature\nin the chiller section, respectively.\nDP22 = Air circulation system that blows air into the\nfreezer section and circulate it uniformly\nthroughout the freezer section at all times\n\nExample: Refrigerator Design\nSeveral slides removed for copyright reasons.\nSee Example 1.7 in Suh, Axiomatic Design (2001).\n\nEquation (a) indicates that the design is a decoupled design.\nExample: Refrigerator Design\nThe design equation may be written as:\nFR12\nFR11\nFR13\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nXOO\nXXO\nXOX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP12\nDP11\nDP13\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\nDP22\nDP21\nFR22\nX\nFR21\nX\nX\n\nFull DM of Uncoupled Refrigerator Design\nDP1\nDP2\n____________________________________________________\nDP12\nDP11\nDP13\nDP22\nDP21\n____________________________________________________\nFR12\nX\nFR1\nFR11\nX\nX\nFR13\nX\nX\n_____________________________________________________\nFR2\nFR22\nX\nFR21\nX\nX\n_____________________________________________\n\nFull DM of Uncoupled Refrigerator Design\nDP1\nDP2\n____________________________________________________\nDP12\nDP11\nDP13\nDP22\nDP21\n____________________________________________________\nFR12\nX\nFR1\nFR11\nX\nX\nFR13\nX\nX\n_____________________________________________________\nFR2\nFR22\nX\nFR21\nX\n0/X\n_____________________________________________\n\nCrew survivability system for the Orbital\nSpace Plane\n\nDesign of Crew Survivability System for\nOSP\nThe highest-levels of FRs were decomposed\nto develop\nthe detailed design of TPS, Landing System,\nand Sensing System for Meteorite Damage.\n\nHigh-level Decomposition\nFunctional Requirements (FR)\nDesign Parameters (DP)\nEnsure crews survive launch ascent into\nOrbit\n[FR1] Ensure crews survives pre-launch\nFR1.1 Determine system readiness\nFR1.2 Provide passive protection\nfrom threats\nFR1.3 Respond to threat\n[FR2] Ensure crews survive phase I of\nascent (from liftoff to CESP staging)\n[FR3] Ensure crews survive phase II of\nascent (from CESP staging to OSP\nseparation)\nCrew survivability systems\n[DP1] Launch-pad survivability system\nDP1.1 System interface testing and\ninitialization\nDP1.2 Passive threat protection\nsystems\nDP1.3Threat response systems\n[DP2] Phase I survivability system\n[DP3] Phase II survivability system\n\nHigh-level Decomposition\n(Acclaro, Courtesy of ADSI)\nCourtesy of Axiomatic Design Solutions, Inc. Used with permission.\n\nDesign Matrix\n(Software - Acclaro, Courtesy of ADSI)\nCourtesy of Axiomatic Design Solutions, Inc. Used with permission.\n\nCourtesy of Axiomatic Design Solutions, Inc. Used with permission.\n\nDesign Outcome (selected examples)\nFigures removed for copyright reasons.\n\nDesign of Low Friction Sliding Surfaces\nwithout Lubricants\nWhat are the FRs?\nWhat are the constraints?\n\nDesign of Low Friction Sliding Surfaces\nwithout Lubricants\nFR1 = Support the normal load\nFR2 = Prevent particle generation\nFR3 = Prevent particle agglomeration\nFR4\n= Remove wear particles from the\ninterface\nConstraint: No lubricant\n\nFriction at Dry Sliding Interface\nUndulated Surface for Elimination of Particles\nFigures removed for copyright reasons.\nSee Figures 7.11 & 7.13 in Suh, Complexity (2005).\n\nDesign of Low Friction Sliding Surfaces\nwithout Lubricants\nThe design equation:\n⎪\n⎪\n⎭\n⎪⎪\n⎬\n⎫\n⎪\n⎪\n⎩\n⎪⎪\n⎨\n⎧\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪\n⎪\n⎭\n⎪⎪\n⎬\n⎫\n⎪\n⎪\n⎩\n⎪⎪\n⎨\n⎧\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪\n⎪\n⎭\n⎪⎪\n⎬\n⎫\n⎪\n⎪\n⎩\n⎪⎪\n⎨\n⎧\nV\nR\nA\nX\nX\nx\nX\nX\nDP\nDP\nDP\nDP\nX\nX\nx\nX\nX\nFR\nFR\nFR\nFR\nλ\n\nSuggested Solution\nTransform the system with time-dependent\ncombinatorial complexity\nto\na system with time-dependent periodic complexity."
    },
    {
      "category": "Lecture Notes",
      "title": "lec214.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/4c4466cd3025702b1e5ee110079352d2_lec214.pdf",
      "content": "Taesik Lee (c) 2004\n2.882 System Design and Analysis\nFebruary 14\n\nTaesik Lee (c) 2004\nWhat we'll do today\n- Information content\n- Robustness\n\nTaesik Lee (c) 2004\nReview\n- Design process / Domain\n- Functional Requirements\n- Design Parameters\n\nTaesik Lee (c) 2004\nReview\nDesign Domain\n-\nHow do you go about 'design'?\nWhat do we\nwant to\nachieve?\nHow\ndo we want to\nachieve it?\nWhat do\ncustomers\nwant?\nHow\ndoes our\nproduct/system\nsatisfy it?\nWhat are the\nsolutions to\nbe\ngenerated?\nHow\ndo we want to\ngenerate it?\n\nTaesik Lee (c) 2004\nReview\nFunctional Requirement (FR)\n-\nFunctional requirements (FRs) are a minimum set of\nindependent requirements that completely characterize\nthe functional needs of the artifact (product, software,\norganization, system, etc.) in the functional domain.\n-\nIndependently achievable, in principle.\n-\n\"The determination of a good set of FRs ...... requires skill, ...,\nand many iterations\"\n\nTaesik Lee (c) 2004\nReview\nWhat constitute a GOOD set of FRs?\n-\nMECE: Mutually Exclusive and Collectively Exhaustive\n-\nOne FR carries only one requirement\n-\nJuxtaposing two requirements into one doesn't make them a\nsingle requirement\n-\nSolution neutral\n-\n\"Cover the battery contact by a plastic sliding door\"\n-\nClarity/specificity\n-\nBad example: missing target range, time factor, etc.\n-\nLogical hierarchical structure\n\nTaesik Lee (c) 2004\nReview\nDesign Parameter (DP)\n-\nDesign parameters (DPs) are the key physical (or other\nequivalent terms in the case of software design, etc.)\nvariables in the physical domain that characterize the\ndesign that satisfies the specified FRs.\nDPs of a aluminum beverage belonging to the\nmain body piece\n- Body thickness\n- Shape of the bottom\n- ...\n\nTaesik Lee (c) 2004\nReview\nSearching for a DP\n-\n\"Nothing substitutes for Knowledge\"\n-\nBe open to wild idea\n-\nAnalogies\n-\nBenchmarking, Patents, Literatures, etc. in OTHER application\narea\n-\nVisualization\n-\nSketch your idea\n-\nStimuli\n-\nCirculating ideas\n-\nGet exposed to foreign situations\n\nTaesik Lee (c) 2004\nReview\nDesign Hierarchy\n-\nDecomposition by zigzagging\n-\nProcess of developing detailed requirements and concepts by\nmoving between functional and physical domain\n-\nYields a hierarchical FR-DP structure\nFR1\nFR11\nFR12\nFR111\nFR112\nFR121\nFR122\nFR1111\nFR1112\nFR1211\nFR1212\nDP1\nDP11\nDP12\nDP111\nDP112\nDP121\nDP122\nDP1111\nDP1112\nDP1211\nDP1212\n:\n:\n\nTaesik Lee (c) 2004\nReview\n-\nDecomposition\n-\nProcess of breaking down a large problem into a set of smaller\nones so that each of the sub-problems is manageable\n-\nZigzagging\n-\nDecomposition process must involve both functional and\nphysical domain by moving between the two domains\n-\nUpper-level choice of DP drives the FRs at the next level\n-\nLower-level FRs are a complete description of\nfunctional needs of the upper-level FR-DP pair\n-\nParent-Child relationship\n\nTaesik Lee (c) 2004\nInformation\nContents\nInformation content\n- Design range\n- System range\n- Probability of success\n- (Allowable) Tolerance\n\nTaesik Lee (c) 2004\nInformation\nContents\nDesign Range\n-\nExamples of \"range\" in FR statements\n-\nMaintain the speed of a vehicle at a designated mph in the\nrange of 0mph - 90mph\n-\nMaintain the speed of a vehicle at a x mph +/- 5mph\n-\nEnsure no leakage under pressure up to 100 bar\n-\nEnsure 99% successful ignition at the first attempt in the\ntemperature range of -30°C ~ 80°C\n-\nGenerate nailing forces of up to 2,000 N\n\nTaesik Lee (c) 2004\nInformation\nContents\nDesign Range\n-\nSpecification for FR\n-\nAcceptable range of values of a chosen FR metric; Goal-post\n-\nDifferent from \"tolerance\"\n-\nDifferent from \"operating range\"\n-\nTarget value (nominal), Upper bound, Lower bound\nFR\nFR\n- inf(or 0)\ninf\nx\nFR*\ny\nx\nx\nFR\nGreater than x\n(Larger the better)\nSmaller than x\n(Smaller the better)\nBetween x and y\n\nTaesik Lee (c) 2004\nInformation\nContents\nSystem Range\n-\nResponse/performance in FR domain, resulting from the chosen\n'design'\n-\nHere, 'design' includes both a chosen set of DPs and the way they\ndeliver/affect FRs\n-\nDue to various factors such as the input (DP) variation,\ninternal/external noise, etc., FR takes a range of values, forming\na range\nFR1\nFR2\np.d.f.\nf(FR1,FR2)\np.d.f.\nf(FR)\nFR\nSystem Range,\np.d.f. f(FR)\n|sr|\n\nTaesik Lee (c) 2004\nInformation\nContents\nInformation content\n∫\n=\nu\nl\ndr\ndr\ndFR\nFR\nf\nFR\nP\n)\n(\n)\n(\n∫\n-\n=\n-\n=\n-\n=\nu\nl\ndr\ndr\ndFR\nFR\nf\nFR\nP\nP\nI\n)\n(\nlog\n)\n(\nlog\nlog\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem\nRange,\np.d.f. f(FR)\nDesign\nRange\n|sr|\nCommon\nRange, AC\n|dr|\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range at time t0,\nf(FR, t0)\nDesign Range |dr|\nt\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range at time t0,\nf(FR, t0)\nDesign Range |dr|\nt\nWhere do we get f(FR)?\n\nTaesik Lee (c) 2004\nInformation\nContents\nInformation content for multiple FRs\nn\nn\np\nFR\nFR\nFR\nI\n,...,\n,1\n,\n,\n,\nlog\n)\n(\n-\n=\nL\n∫\n=\nhyperspace\ndesign\n,...,\n,1\n)\n,\n,\n,\n(\nn\nn\nn\ndFR\ndFR\ndFR\nFR\nFR\nFR\nf\np\nL\nL\nIf Uncoupled,\nn\ndrn\nn\nn\nn\ndr\ndr\ndr dr\ndrn\nn\nn\nn\np\np\np\ndFR\nFR\nf\ndFR\nFR\nf\ndFR\nFR\nf\ndFR\ndFR\ndFR\nFR\nFR\nFR\nf\np\n...\n\n)\n(\n)\n(\n)\n(\n\n...\n)\n,...,\n,\n(\n,...,\n,1\n=\n×\n×\n×\n=\n=\n∫\n∫\n∫\n∫∫\n∫\nL\nL\n)\n(\n...\n)\n(\n)\n(\n)\n(\n,\n,\n,\nn\nn\nFR\nI\nFR\nI\nFR\nI\nFR\nFR\nFR\nI\n+\n+\n+\n=\nL\n\nTaesik Lee (c) 2004\nInformation\nContents\nIf Decoupled,\nn\ndr dr\ndrn\nn\nn\nn\nn\ndr dr\ndrn\nn\nn\nn\ndFR\ndFR\ndFR\nFR\nf\nFR\nFR\nf\nFR\nFR\nFR\nFR\nf\nFR\nFR\nFR\nFR\nf\ndFR\ndFR\ndFR\nFR\nFR\nFR\nf\np\n...\n\n)\n(\n)\n(\n\n)\n,...,\n,\n(\n)\n,...,\n,\n(\n\n...\n)\n,...,\n,\n(\n,...,\n,1\nL\nL\nL\nL\n∫∫\n∫\n∫∫\n∫\n-\n-\n-\n=\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nc\nb\nO\na\nFR\nFR\n∫∫\n∫∫\n∫∫\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n=\n=\n=\n,1\n)\n(\n)\n(\n\n)\n(\n)\n(\n\n)\n,\n(\ndr\ndr\ndr dr\ndr dr\ndFR\nFR\nf\ndFR\nFR\nFR\nf\ndFR\ndFR\nFR\nf\nFR\nFR\nf\ndFR\ndFR\nFR\nFR\nf\np\nFor example,\n\nTaesik Lee (c) 2004\nInformation\nContents\n⎟\n⎠\n⎞\n⎜\n⎝\n⎛\n-\n=\n⋅\n-\n=\n\nFR\na\nb\nFR\nc\nDP\nc\nb\nFR\nc\nDP\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nc\nb\nO\na\nFR\nFR\n⎟\n⎠\n⎞\n⎜\n⎝\n⎛\n=\na\nFR\ng\na\nFR\nf\n)\n(\nLet g1 and g2 be the pdf of DP1 and DP2.\nFrom\nWe get f(FR1) and f(FR2|FR1) :\n⎟⎟\n⎟\n⎠\n⎞\n⎜⎜\n⎜\n⎝\n⎛\n×\n-\n=\nc\nFR\na\nb\nFR\ng\nc\nFR\nFR\nf\n)\n|\n(\n⎟\n⎠\n⎞\n⎜\n⎝\n⎛\n=\na\nFR\ng\na\nFR\nf\n)\n(\n∫∫\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n=\n,1\n)\n(\n)\n(\ndr\ndr\ndFR\nFR\nf\ndFR\nFR\nFR\nf\np\nSince\n,1\n)\n(\ndFR\na\nFR\ng\na\ndFR\nc\nFR\na\nb\nFR\ng\nc\np\ndr\ndr\n∫∫\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎣\n⎡\n⎟⎟\n⎟\n⎠\n⎞\n⎜⎜\n⎜\n⎝\n⎛\n×\n-\n=\n\nTaesik Lee (c) 2004\nInformation\nContents\nMultiple FR system range\nExample\nDesign range\nFR1: [-0.5 , 0.5]\nFR2: [-2.0 , 2.0]\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nFR\nFR\nDP1\nDP2\nFR2\nFR1\n\nTaesik Lee (c) 2004\nInformation\nContents\nAllowable tolerance\n-\nDefined for DP\n-\nTolerances that DPs can take while FRs still remaining completely\ninside design ranges\n-\nUnconditional tolerance\n-\nConservative tolerancing\n∆DP1 = ∆FR1\nA11\n∆DP2 = ∆FR2 -A21⋅∆DP1\nA22\n∆DP3 = ∆FR3 -A31⋅∆DP1 -A32 ⋅∆DP2\nA33\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDP\nDP\nDP\nA\nA\nA\nA\nA\nA\nFR\nFR\nFR\n\nTaesik Lee (c) 2004\nInformation\nContents\nAllowable tolerance\nFR2\nDP2\nDesign range\n⎥⎦\n⎤\n⎢⎣\n⎡\nX\nX\nO\nX\nFR1\nDP1\nAllowable tolerance area\nDesign range is mapped\nonto DP space\nA\nDP\nA\nFR\nDP\nA\nFR\nDP\n∆\n⋅\n-\n∆\n=\n∆\n∆\n=\n∆\n\nTaesik Lee (c) 2004\nInformation\nContents\nDetecting change in system range\n\"Monitoring marginal probability of each FR is not\nonly inaccurate but potentially misleading\"\nExample\nDesign range\nFR1: [-0.5,0.5]\nFR2: [-2,2]\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nFR\nFR\nDesign parameter variation\nInitial\nAfter change\nDP1: [-1,1]\nDP1: [-1,1]\nDP2: [0,1.5]\nDP2: [-1,1.6]\n\nTaesik Lee (c) 2004\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\np.d.f\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\np.d.f\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\nBefore DP2 change\nAfter DP2 change\nDP1: [-1,1]\nDP2: [0,1.5]\nDP1: [-1,1]\nDP2: [-1,1.6]\nInformation\nContents\npFR1\npFR2\npFR1× pFR2\npFR1,FR2\nBefore\n0.5\n0.9583\n0.4792\n0.5\nAfter\n0.5\n0.9654\n0.4827\n0.499\np.d.f\np.d.f\np.d.f\np.d.f\n\nTaesik Lee (c) 2004\nInformation\nContents\nSummary\n-\nJoint probability unless it is uncoupled design\n-\nAssuming DPs are statistically independent, working in DP domain\nis typically easier.\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nD P\nFR\nD P\nFR\nDP\nFR\nDP\nFR\nDP\nFR\nDP\n\nTaesik Lee (c) 2004\nInformation\nContents\n\"Information\"\n-\nIn AD information content, by imposing design\nrange, FR is transformed into a binary random\nvariable.\nui =\n1 (success) with\nP(FRi = success)\n0 (failure)\n1-P(FRi = success)\n|dr|\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range,\np.d.f. f(FR)\nDesign Range\n|sr\n|\nCommon\nRange,\nAC\nI(ui= 1) ≡- log2P(FRi =success)\nI ( p )\n0.2\n0.4\n0.6\n0.8\nP (FR =success)\nI (p ) [bit]\nH(P )\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n0.2\n0.4\n0.6\n0.8\nP(FR=success)\nH(p ) [bit]\n(a)\n(b)\nI ( p )\n0.2\n0.4\n0.6\n0.8\nP (FR =success)\nI (p ) [bit]\nH(P )\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n0.2\n0.4\n0.6\n0.8\nP(FR=success)\nH(p ) [bit]\n(a)\n(b)\nH(X) = - Σ pi log2 pi = E[I]\n?\n\nTaesik Lee (c) 2004\nRobustness\nRobustness\n-\nIn axiomatic design, robust design is defined as a design that always\nsatisfies the functional requirements,\n∆FRi > δFRi\neven when there is a large random variation in the design parameter δDPi.\n-\nTwo different concepts in robustness\n- Insensitive to 'noise'\n-\nInformation Axiom\n-\nTraditional robust design\n- Adaptive to change\n-\nIndependence Axiom\n-\nHod Lipson, Jordan Pollack, and Nam P. Suh, \"On the Origin of Modular Variation\", Evolution,\nEvolution, 56(8) pp. 1549-1556, 2002\n\nTaesik Lee (c) 2004\nRobustness\nExample: Measuring the Height of a House with a Ladder\nAngle = θ\nH\nL\n\nTaesik Lee (c) 2004\nRobustness\nExample: Measuring the Height of a House with a Ladder\nSolution:\nFor small δθ,\nwhere θ is the mean value of the estimated angle, L the length of the ladder, and H the\nheight.\nCarefully selecting parameter values can make a system much more robust at almost no\nadditional cost.\n(\n)\nL\nL\nH\nH\n)\nsin\ncos\ncos\n(sin\nsin\nδθ\nθ\nδθ\nθ\nδθ\nθ\n+\n=\n+\n=\n∆\n+\nδθ\nθ\nδ\nδθ\nθ\nθ\nδ\ncos\ncos\nsin\nL\nH\nL\nL\nH\nH\n=\n+\n=\n+\n\nTaesik Lee (c) 2004\nRobustness\nExample\n-\nFR = DP2 (1 - DP)\n0.0315\n0.0787\nDPb = 0.259924\nDPc = 0.943877\nFR\nDP\n0.0315\n0.0787\nDPb = 0.259924\nDPc = 0.943877\nFR\nDP\n\nTaesik Lee (c) 2004\nRobustness\nHow to make a system robust?\n-\nWhere does the variation come from?\n)\n(\n\n)\n(\n\n*\n*\n*\n*\n*\nC\nC\nC\nFR\nDP\nDP\nDP\nFR\nn\nn\nFR\nFR\nFR\nC\nC\nDP\nDP\nn\n-\n∂\n∂\n+\n-\n∂\n∂\n+\n∂\n∂\n=\n-\n=\n=\n=\nr\nr\nδ\n\nTaesik Lee (c) 2004\nRobustness\n)\n(\n\n)\n(\n\n*\n*\n*\n*\n*\nC\nC\nC\nFR\nDP\nDP\nDP\nFR\nn\nn\nFR\nFR\nFR\nC\nC\nDP\nDP\nn\n-\n∂\n∂\n+\n-\n∂\n∂\n+\n∂\n∂\n=\n-\n=\n=\n=\nr\nr\nδ\n0. Assign the largest possible tolerance\n0. Eliminate the bias ( E[FR] = FR* )\n1.\nEliminate the variation: SPC, Poka-Yoke, etc.\n2.\nDe-sensitize: Taguchi robust design\n3.\nCompensate\n⎟\n⎟\n⎠\n⎞\n⎜\n⎜\n⎝\n⎛\n-\n∂\n∂\n+\n∂\n∂\n-\n=\n-\n∂\n∂\n=\n=\n=\n)\n(\n\n)\n(\n*\n*\n*\n*\nDP\nDP\nDP\nFR\nn\nn\nFR\nC\nC\nC\nFR\nDP\nDP\nn\nC\nC\nr\nr\nδ\n\nTaesik Lee (c) 2004\nBring the system range back into design range: Re-\ninitialization\nRobustness\nExample: Design of Low Friction Surface\n-\nDominant friction mechanism: Plowing by wear debris\n-\nSystem range (particle size) moves out of the desired design range\n⇒Need to re-initialize\nFigure removed for\ncopyright reasons.\nFigure removed for\ncopyright reasons.\nN. P. Suh and H.-C. Sin, Genesis of Friction, Wear, 1981\nS. T. Oktay and N. P. Suh, Wear debris formation and\nAgglomeration, Journal of Tribology, 1992\n\nTaesik Lee (c) 2004\nRobustness\nDesign of Low Friction Surface\n-\nPeriodic undulation re-initializes the system range\nFigures (6-part diagram and two graphs)\nremoved for copyright reasons.\nS. T. Oktay and N. P. Suh, Wear debris formation and agglomeration, Journal of Tribology, 1992"
    },
    {
      "category": "Lecture Notes",
      "title": "lec216.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/221b98f61ce90bce4dc9fab2ebcdbb71_lec216.pdf",
      "content": "Taesik Lee (c) 2004\n2.882 System Design and Analysis\nFebruary 16\n\nTaesik Lee (c) 2005\nWhat we'll do today\n- Project discussion\n- Information content, Robustness\n\nTaesik Lee (c) 2005\nTerm Project Overview\n- Key dates\n- Today: Project topic discussion, kick-off\n[ ~ 6 wks]\n- April 4: Interim progress report\n[ ~ 5 wks]\n- May 11: Project presentation\n- May 16: Written project report due\n- Deliverables\n- Conceptual design solution\n- AD/Complexity analysis\n- Presentation, report\n\nTaesik Lee (c) 2005\nProject Topic Presentation\n\nTaesik Lee (c) 2005\nProject Examples from the previous year\n- Engine project\n- CEV architecture project\n\nTaesik Lee (c) 2005\nInformation content\n- Design range\n- System range\n- Probability of success\n- (Allowable) Tolerance\nInformation\nContents\n\nTaesik Lee (c) 2005\nDesign Range\n-\nExamples of \"range\" in FR statements\n-\nMaintain the speed of a vehicle at a x mph +/- 5mph\n-\nEnsure no leakage under pressure up to 100 bar\nReview\n-\nSpecification for FR\n-\nAcceptable range of values of a chosen FR metric; Goal-post\n-\nDifferent from \"tolerance\"\n-\nDifferent from \"operating range\"\n-\nTarget value (nominal), Upper bound, Lower bound\n\nTaesik Lee (c) 2005\nSystem Range\n-\nResponse/performance in FR domain, resulting from the chosen\n'design'\n-\nHere, 'design' includes both a chosen set of DPs and the way they\ndeliver/affect FRs\n-\nDue to various factors such as the input (DP) variation,\ninternal/external noise, etc., FR takes a range of values, forming\na range\nFR\np.d.f.\nf(FR)\nSystem Range,\np.d.f. f(FR)\n|sr|\nFR1\nFR2\np.d.f.\nf(FR1,FR2)\nReview\n\nTaesik Lee (c) 2005\nInformation content\n∫\n=\nu\nl\ndr\ndr\ndFR\nFR\nf\nFR\nP\n)\n(\n)\n(\n∫\n-\n=\n-\n=\n-\n=\nu\nl\ndr\ndr\ndFR\nFR\nf\nFR\nP\nP\nI\n)\n(\nlog\n)\n(\nlog\nlog\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range,\np.d.f. f(FR)\nDesign Range\n|sr|\nCommon Range,\nAC\n|dr|\nReview\n\nTaesik Lee (c) 2005\nMultiple FR system range\n\n=\n\nDP\nDP\nFR\nFR\nDesign range\nFR1: [-0.5 , 0.5]\nFR2: [-2.0 , 2.0]\nExample\nDP1\nDP2\nFR1\nFR2\nReview\n\nTaesik Lee (c) 2005\nDetecting change in system range\n\n=\n\nDP\nDP\nFR\nFR\nDesign range\nFR1: [-0.5,0.5]\nFR2: [-2,2]\n\"Monitoring marginal probability of each FR is not\nonly inaccurate but potentially misleading\"\nExample\nDesign parameter variation\nInitial\nAfter change\nDP1: U[-1,1]\nDP1: U[-1,1]\nDP2: U[0,1.5]\nDP2: U[-1,1.6]\nInformation\nContents\n\nTaesik Lee (c) 2005\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\nBefore DP2 change\nAfter DP2 change\n0.499\n0.4827\n0.9654\n0.5\nAfter\n0.5\n0.4792\n0.9583\n0.5\nBefore\npFR1,FR2\npFR1× pFR2\npFR2\npFR1\nDP1: U[-1,1]\nDP2: U[0,1.5]\nDP1: U[-1,1]\nDP2: U[-1,1.6]\nInformation\nContents\np.d.f\np.d.f\n\nTaesik Lee (c) 2005\nAllowable tolerance\nFR2\nFR1\nDP2\nDP1\n\nX\nX\nO\nX\nAllowable tolerance area\nDesign range is mapped\nonto DP space\nDesign range\nA\nDP\nA\nFR\nDP\nA\nFR\nDP\n∆\n⋅\n-\n∆\n=\n∆\n∆\n=\n∆\n-\nDefined for DP\n-\nTolerances that DPs can take while FRs still remaining completely\ninside design ranges\n-\nUnconditional tolerance\n-\nConservative tolerancing\nReview\n\nTaesik Lee (c) 2005\nLinear tolerancing vs. Statistical tolerancing\n\n=\n\n4.0\nDP\nDP\nFR\nFR\nDesign range\nFR1: [-0.6,0.6]\nFR2: [-1.8,1.8]\nDP2\nDP1\n0.6\n-0.6\n(0.6,1.56)\n(-0.6,2.04)\nAllowable tolerance\nDP1: [-0.6,0.6]\nDP2: [-1.56,1.56]\nLinear tolerancing\nStatistical tolerancing\n3σFR1 = 0.6 a σFR1 = 0.2\nTherefore, σDP1 = 0.2\nVar(FR2) = 0.42Var(DP1) + Var(DP2)\nThus, σDP2 = 0.5946\n3 σDP1 = 0.6\n3 σDP2 = 1.784\n\nTaesik Lee (c) 2005\nRobustness\n-\nIn axiomatic design, robust design is defined as a design that always\nsatisfies the functional requirements,\n∆FRi > δFRi\neven when there is a large random variation in the design parameter δDPi.\n-\nTwo different concepts in robustness\n- Insensitive to 'noise'\n-\nInformation Axiom\n-\nTraditional robust design\n- Adaptive to change\n-\nIndependence Axiom\n-\nHod Lipson, Jordan Pollack, and Nam P. Suh, \"On the Origin of Modular Variation\", Evolution,\nEvolution, 56(8) pp. 1549-1556, 2002\nReview\n\nTaesik Lee (c) 2005\nExample: Measuring the Height of a House with a Ladder\nAngle =\nθ\nH\nL\nReview\nδθ\nθ\nδ\nδθ\nθ\nθ\nδ\ncos\ncos\nsin\nL\nH\nL\nL\nH\nH\n=\n+\n=\n+\nWhat if L also has uncertainty?\n\nTaesik Lee (c) 2005\n)\n(\n\n)\n(\n\n*\n*\n*\n*\n*\nC\nC\nC\nFR\nDP\nDP\nDP\nFR\nn\nn\nFR\nFR\nFR\nC\nC\nDP\nDP\nn\n-\n∂\n∂\n+\n-\n∂\n∂\n+\n∂\n∂\n=\n-\n=\n=\n=\nr\nr\nδ\n0. Assign the largest possible tolerance\n0. Eliminate the bias ( E[FR] = FR* )\n1.\nEliminate the variation: SPC, Poka-Yoke, etc.\n2.\nDe-sensitize: Taguchi robust design\n3.\nCompensate\n\n-\n∂\n∂\n+\n∂\n∂\n-\n=\n-\n∂\n∂\n=\n=\n=\n)\n(\n\n)\n(\n*\n*\n*\n*\nDP\nDP\nDP\nFR\nn\nn\nFR\nC\nC\nC\nFR\nDP\nDP\nn\nC\nC\nr\nr\nδ\nReview\n\nTaesik Lee (c) 2005\nRobustness built into a system by design\nExample: Design of Low Friction Surface\n-\nDominant friction mechanism: Plowing by wear debris\n-\nSystem range (particle size) moves out of the desired design range\n⇒Need to re-initialize\nN. P. Suh and H.-C. Sin, Genesis of Friction, Wear, 1981\nS. T. Oktayand N. P. Suh, Wear debris formation and\nAgglomeration, Journal of Tribology, 1992\nRobustness\nTwo diagrams removed for copyright reasons.\nGraph and diagram removed for copyright reasons.\n\nTaesik Lee (c) 2005\nDesign of Low Friction Surface\n-\nPeriodic undulation re-initializes the system range\nS. T. Oktayand N. P. Suh, Wear debris formation and agglomeration, Journal of Tribology, 1992\nRobustness\nTwo figures (6-part diagram and pair of graphs) removed for copyright reasons."
    },
    {
      "category": "Lecture Notes",
      "title": "lec228_supplemnt.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/8e2279791333a2d0214158e2731253a4_lec228_supplemnt.pdf",
      "content": "MIT, 2.882 Spring 2005, Taesik Lee\nSupplementary Lecture Note on\nInformation Content\n\n2.882\nSpring 2005\nby Taesik Lee\n\n1. Information content for one-FR problem\n\nWe all know the definition of the information contents in Axiomatic Design. For a one-\nFR design,\n\n∫\n-\n=\n-\n=\n-\n=\nu\nl\ndr\ndr\ndFR\nFR\nf\nFR\nP\nP\nI\n)\n(\nlog\n)\n(\nlog\nlog\n\n(1)\n\nP(FR) is a probability of success for the functional requirement, i.e. the probability that a\nvalue of FR output by the designed system falls within the acceptable range. f(FR) is a\nprobability density function (or probability mass function in the case that the FR is a\ndiscrete variable) of the FR. Given f(FR), integrating the function over the acceptable\nrange, from drl to dru, gives the probability of success. A visual illustration of this is the\nfollowing graph that we have seen many times in the class and the textbook.\n\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range,\np.d.f. f(FR)\nDesign Range\n|sr|\nCommon Range,\nAC\n|dr|\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range,\np.d.f. f(FR)\nDesign Range\n|sr|\nCommon Range,\nAC\n|dr|\n\nFigure 1. Probability of success is obtained by integrating the probability density function of the FR,\nf(FR), over the Design Range. The area of the hatched section is equal to the value of the integration.\n\nExample: Computing probability of success for an FR ~ N(μ,σ2)\n\nNormal distribution (a.k.a. Gaussian distribution) is probably the most popular\ndistribution among many engineers. It is a bell-shaped curve centered on a mean, μ,\nwith variance, σ2. It is common to see outputs of a manufacturing process/system\nbeing assumed to follow a normal distribution. Use of normal distribution in\nstatistical modeling is not an arbitrary choice of a modeler. It is justified by the fact\nthat when many independent random factors act in an additive manner to create\n\nMIT, 2.882 Spring 2005, Taesik Lee\nvariability, data will follow the normal distribution. In statistics, this is formalized as\nthe Central Limit Theorem.\n\nIf a random variable, X, follows the normal distribution, N(μ,σ2), the probability of X\nbeing between a and b is the area, A, of the hatched section in Figure 2. A can be\ncomputed by subtracting A2 from A1 as shown in the figure.\n\nFR\np.d.f.\nf(FR)\nFR\nFR\n=\n-\nA\nA1\nA2\na\nb\nb\na\nFR\np.d.f.\nf(FR)\nFR\np.d.f.\nf(FR)\nFR\nFR\nFR\nFR\n=\n-\nA\nA1\nA2\na\nb\nb\na\n\nFigure 2. Computing probability of X being between a and b by considering two\nintegrations. The area, A equals to (A1 - A2).\nA1 and A2 can be easily obtained by using a standard normal distribution table found\nin most probability and statistics textbooks. Standard normal distribution is a normal\ndistribution where a random variable, Z, follows normal distribution with its mean at\n0 and a variance of 1, i.e. Z ~ N(0,1). The standard normal distribution table shows\nthe values (numerical approximations) for integrals of the normal distribution\nfunction.\n\n∫inf\n-\n=\n≤\n=\nΦ\nz\ndz\nz\nf\nz\nZ\nP\nz\n)\n(\n)\n(\n)\n(\n\n(2)\n\nIf we imagine that Figure 2 is drawn for Z, the probability that a ≤ Z ≤ b is\n\n)\n(\n)\n(\n)\n(\na\nb\nA\nA\nb\nZ\na\nP\nΦ\n-\nΦ\n=\n-\n=\n≤\n≤\n\n(3)\n\nand the value Φ(a) and Φ(b) can be found from the standard normal distribution\ntable.\n\nIn order to use the standard normal distribution table, the random variable X~N(μ,σ2)\nhas to be transformed to Z~N(0,1). That can be done by the following transformation:\n\nσ\nμ\n-\n= X\nZ\n\n(4)\n\nThus, for any FR~N(μ,σ2), we can use the standard normal distribution table to\ncompute the probability of success.\n\nFor example, suppose we have designed a system that yields FR ~ N(6,1). The design\nrange is given as 4≤FR≤7. See Figure 3.\n\nMIT, 2.882 Spring 2005, Taesik Lee\nFR\np.d.f.\nf(FR)\nDesign Range\nFR\np.d.f.\nf(FR)\nDesign Range\n\nFigure 3. FR ~ N(6,1). The design range is indicated by two vertical lines.\nSubstituting the given values into equation (4), we get Z+ = 1 and Z- = -2. Thus, the\nprobability of success (the hatched area in Figure 3) can be computed as\n\n)\n(\n)1(\n)1\n(\n\n)\n(\n-\nΦ\n-\nΦ\n=\n≤\n≤\n-\n=\n⎟⎠\n⎞\n⎜⎝\n⎛\n-\n≤\n≤\n-\n=\n≤\n≤\nZ\nP\nZ\nP\nFR\nP\n\n(5)\n\nNote that Φ(-2) equals to 1-Φ(2) from the symmetry of the normal distribution.\nEquation (5) becomes,\n\n))\n(\n1(\n)1(\n)1\n(\n)\n(\nΦ\n-\n-\nΦ\n=\n≤\n≤\n-\n=\n≤\n≤\nZ\nP\nFR\nP\n\n(6)\n\nReading from the standard normal distribution table, we get Φ(1) = 0.8413 and Φ(2)\n= 0.9772. Therefore, P(4≤FR≤7) = 0.8185.\n◘\n\nAs you may have noticed, transforming X = x to Z = z is equivalent to identifying how far\nx is from the mean of X in the unit of its standard deviation. In the above example, what\nwe saw was that FR=7 is (+1σ) apart from its mean and FR=4 is (-2σ) apart, thus Z+=1\nand Z-=-2.\n\nIt is common to hear someone saying \"our system's quality performance is at 3 sigma\nlevel.\" This means (with little possibility of different interpretation) that the probability\nof getting a 'good' output from the system is 99.73%. In other words, the system range\nfollows a distribution such that the design range corresponds to +/- 3σ of the distribution.\nYou can see from Table 1 that +/- 3σ level performance would yield about 2700 'bad'\noutputs per 1 million outputs (or ~3 bad outputs per 1,000 outputs). As the quality level\ngoes up, say to +/- 6σ level, it becomes ~2 bad outputs per billion outputs. That is why\nthe term 'six sigma' has become a catchphrase for the popular quality improvement\ninitiative.\n\nMIT, 2.882 Spring 2005, Taesik Lee\nTable 1. Sigma value and its quality level. For 3σ level, it is on the order of one bad output per\nthousand; for 6σ, it is on the order of one ppb(part per billion).\nz\nphi(z)\n1-phi(z)\nprob between +z, -z\nppm\nppb\n0.84134474\n0.15865526\n0.68268948\n317310.5\n0.977249938\n0.022750062\n0.954499876\n45500.12\n0.998650033\n0.001349967\n0.997300066\n2699.934\n0.999968314\n3.1686E-05\n0.999936628\n63.37207\n0.999999713\n2.87105E-07\n0.999999426\n0.57421\n574.21\n0.999999999\n9.90122E-10\n0.999999998\n0.00198\n1.980244\n\nIt should be noted that equation (1) does not include any information ('information' as in\ncommon use of the term) on the design parameter at all. The information content is only a\nfunction of the distribution of the functional requirement and the design range. As the\ndesign range is given also in a functional domain, you can see that the information\ncontent is defined solely in a functional domain. 'How we achieve the FR' is behind the\nscene, and the information content addresses the resulting performance, i.e. how well the\nfunctional requirement is satisfied, of the complete system. Therefore, in the strictest\nsense, the true information content can only be measured by observing the output of a\ncomplete system. This, in some sense, makes the information content less useful in\npractice: if we can measure the information content only after the system design is\ncomplete, how does it help us in the design phase? Although computing the true value of\ninformation content is impossible before the design is finished, some qualitative\nconclusions derived from the concept turn out to be useful in a design process. For\nexample, means to reduce the information content or the relationship between the\ninformation content and coupling hold true regardless of our ability to compute the value\nof the information content. Also, estimating information content from the knowledge\nabout design parameters and design matrix can be useful in comparing potential solutions.\n\nIf we assume that the variation of FRs is entirely attributed to the variation of DPs, then\nwe can estimate the information content of the FR given the knowledge about the DP. A\ndesign equation for one-FR design problem is,\n\n[ ]\n)\n(DP\nf\nDP\nA\nFR\n=\n=\n\n(7)\n\nGiven the distribution of DP and the mapping relationship from DP to FR (A or f), we can\nderive the distribution of FR, a system range (Figure 4). This can be done by either the\ndistribution function technique or the change-of-variable technique [refer to any statistics\ntextbook such as the one by Hogg & Tanis]. Although it is particularly easy when the\nmapping is linear or strictly in(de)creasing, it still takes some effort to do the derivation.\nInstead, it is much easier to map the design range to physical domain (Figure 5) because\nthe design range is simply an interval rather than a function. For example, in linear\nmapping, it is simply either stretching or shrinking the design range. This turns out to be\nparticularly convenient for multi-FR problems, which is discussed in the next section.\n\nMIT, 2.882 Spring 2005, Taesik Lee\nDP\np.d.f. g(DP)\nDistribution of\nDesign Parameter\nPhysical Domain\nFR\np.d.f. f(FR)\nDerived distribution of\nFunctional Requirement\nFunctional Domain\n\nFigure 4. System range can be derived from the distribution of DP. The task may become non-trivial\ndepending on the mapping relationship and DP distribution.\n\nFR\ndru\ndrl\nDesign Range\nFR\ndru\ndrl\nDesign Range\nFunctional Domain\nDP\ncu\ncl\nAllowable tolerance\nPhysical Domain\n\nFigure 5. An alternative is mapping the design range onto physical domain, which can be easily done\nin most cases. The mapped range in DP domain is called 'allowable tolerance.'\n\nThe range in DP domain, mapped from the design range, is called the allowable tolerance\nto avoid confusion with the design range while denoting the fact that once a DP value is\nwithin this range, the FR values will be within the design range. The probability of\nsuccess for FR is then equal to the probability of DP's falling within the allowable\ntolerance. This probability is obtained by integrating the p.d.f. of DP, g(DP), over the\nallowable tolerance. (Figure 6)\n\nDP\np.d.f. g(DP)\nFR\ndru\ndrl\nDesign Range\nFR\ndru\ndrl\nDesign Range\nFunctional Domain\nPhysical Domain\nAllowable tolerance\n\nFigure 6. Probability of success for FR is equal to the probability of DP's falling within the allowable\ntolerance.\n\n2. Information content for multi-FR problem\n\nWe can easily extend the definition of information content, equation (1), to multi-FR case:\n\nn\nn\np\nFR\nFR\nFR\nI\n,...,\n,1\n,\n,\n,\nlog\n)\n(\n-\n=\nL\n\n(8)\n\nwhere p1,2,...,n denotes the probability of success for all of the FRs. p1,2,...,n is the\nprobability that the value of FR1 output by the designed system falls within FR1 design\nrange, the value of FR2 within FR2 design range, etc. p1,2,...,n is defined as\n\nMIT, 2.882 Spring 2005, Taesik Lee\n∫\n=\nhyperspace\ndesign\n,...,\n,1\n)\n,\n,\n,\n(\nn\nn\nn\ndFR\ndFR\ndFR\nFR\nFR\nFR\nf\np\nL\nL\n\n(9)\n\nAs explained in the textbook, it should be emphasized that, unless the design is\nuncoupled, we have to make sure the probability of success is properly computed/\nestimated using the joint probability.\n\nIn computing the information content, the same arguments presented in section 1 remains\nvalid: 1) under the assumption that the only source of variation is DP, we can calculate\nthe probability of success given DP variation and [DM], and 2) in doing so, it is much\neasier to map the design range onto DP domain than deriving the joint system range from\nthe DP distributions.\n\nExample: Computing probability of success for two-FR problem\n\nConsider the following two-FR design problem.\n\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nFR\nFR\n\n(10)\n\nThe design ranges for FRs are given as -0.5≤FR1≤0.5 and -2≤FR2≤2. The\nvariation of DPs is given by two uniform distribution: DP1 ~ U[-1,1] and DP2\n~ U[0,1.5] where U[a,b] denotes a uniform distribution between a and b. Let\ng1 denote the probability density function of DP1 and g2 be the p.d.f. of DP2.\nThen, g1 and g2 are constant within the two bounds: g1 = 0.5 for -1≤DP1≤1,\nand g2 = 2/3 for 0≤DP2≤1.5. (see Figure 7)\n\nFirst, we need to assume that DPs are statistically independent to each other to\nsimplify the problem. Under the assumption, the joint probability density\nfunction of (DP1,DP2), g1,2, is simply a product of two uniform probabilities.\nThis, again, yields a uniform p.d.f. in DP1-DP2 plane:\n\ng1,2 (DP1,DP2) = 1/3\nif, -1≤DP1≤1 and 0≤DP2≤1.5\n(11)\n\notherwise\n\nFigure 7 is a graphical illustration of obtaining g1,2.\n\nMIT, 2.882 Spring 2005, Taesik Lee\nDP1\nDP2\n-1\n1.5\n2/3\n0.5\nDP1\nDP2\np.d.f. g(DP1,DP2) = h = 1/3\nh = 1/3\n-1\n1.5\nU[-1,1]\nU[0,1.5]\ng12(DP1,DP2)\n=\ng1(DP1)*g2(DP2)\nh\n\nFigure 7. Assuming DP1 and DP2 are statistically independent to each other, the joint\np.d.f. g1,2(DP1,DP2) is a product of g1 and g2. g1,2 is another uniform density function,\ni.e. constant 1/3.\nNow, we can map the design range onto DP domain to obtain the allowable\ntolerance (in this case, an area). The design range is represented by a rectangle\non the FR-plane (Figure 8a). From the design matrix,\n\nFR1 = DP1\nFR2 = DP1 + DP2\n\nIf we rearrange these equations such that DPs are expressed in terms of FRs,\n\nDP1 = FR1\nDP2 = -DP1 + FR2\n\nFR1 design range is given as -0.5≤FR1≤0.5. Thus, the first equation of the\nabove represents a vertical line in the area between -0.5≤DP1≤0.5 as shown in\nFigure 8b. The second equation represents a set of straight line with the slope\nof -1, and its intersection with DP2 axis ranges from -2 to 2 (given by FR2\ndesign range). See Figure 8c. Finally the allowable tolerance for DP1 and DP2\nis obtained by taking intersection of 8b and 8c.\n\nFR1\nFR2\nDP1\nDP2\nDP1\nDP2\n-0.5\n0.5\nDP1\nDP2\n-2\n∩\n=\n-2\n-0.5\n0.5\n(a)\n(b)\n(c)\n(d)\n\nFigure 8. Mapping the design range onto DP space to obtain the allowable tolerance.\n\nMIT, 2.882 Spring 2005, Taesik Lee\nAlternatively, since the design matrix is constant (linear mapping), we know\nthat four vertices of the design range will become the vertices of the allowable\ntolerance. These vertices can be easily calculated by multiplying the inverse of\nthe design matrix by the vertices of the design range.\n\nNow that we have the allowable tolerance and the joint probability density\nfunction of (DP1,DP2), the probability of DPs' being within the allowable\ntolerance is readily computed by integrating g1,2 over the allowable tolerance.\nSince g1,2 is constant, the integral is simply the product of g1,2 and the\noverlapping area between the allowable tolerance and the projection of g1,2:\n\nProbability = 1/3 * (1*1.5) = 1⁄2\n\nDP1\nDP2\n-2\n-0.5\n0.5\n-1\n1.5\nAllowable\nTolerance\nDP joint p.d.f.\n\nFigure 9. Probability of success is the integral of g1,2 over the allowable tolerance\nAssuming DPs are the only source of FR variation, we can say the probability\nof success of FR1 and FR2 equals to the probability we computed above.\n◘\n\nWe know that, if the design matrix is coupled or decoupled, the probability of success for\nFRs is not equal to the product of the probability of success for individual FRs: p1,2,...,N =\np1p2...pN. This individual probability, pi, is called the marginal probability (of success) of\nFRi. The marginal probability is defined based on the joint probability. For example, in a\n2-FR case:\n\n(12)\n∫\n∫\ninf\ninf\n-\n=\n=\n)\n,1\n(\n)1\n(\n)1\n(\n,1\n,\n,\ndFR\nFR\nFR\nf\nFR\nf\ndFR\nFR\nf\np\nFR\nu\nFR\nl\ndr\ndr\n\nf1(FR1) is called the marginal p.d.f. for FR1. Suppose we have a system that has FR1 and\nFR2. Les us say we only care about FR1 and measure the FR1 samples to obtain its\ndistribution. Then we can compute the probability of success for FR1 by examining the\n\nMIT, 2.882 Spring 2005, Taesik Lee\ndistribution with the FR1 design range. This probability is the marginal probability of\nsuccess for FR1.\n\nIt should be noted that the probability of success computed by multiplying the marginal\nprobabilities is not only inaccurate, but potentially misleading in drawing a conclusion\nfrom the observation. The following example illustrates the point.\n\nExample: Marginal probability vs. Joint probability\n\nThe two-FR design problem we saw in the earlier example is revisited.\n\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nFR\nFR\n\n(10)\n\nThe probability of success was obtained by the joint probability calculation,\nand it was 0.5.\n\nIn order to compute the marginal probability of FR1 and FR2, we must first\nderive the joint p.d.f. for (FR1,FR2). Since the DPs follow uniform\ndistribution and the mapping is linear, the derivation is easy: the derived joint\np.d.f. will also be that of a uniform distribution. We can map the projection of\nthe DP's joint p.d.f. onto the FR domain, and the joint p.d.f. of FR will simply\nbe the uniform p.d.f. over the mapped area. As the integral of any p.d.f. must\nbe 1, the height of the uniform p.d.f. of (FR1,FR2) is 1/(projection area) = 1/3.\n\nDP1\nDP2\np.d.f. g(DP1,DP2) = h = 1/3\nh = 1/3\n-1\n1.5\nh\nFR1\nFR2\nh = 1/2\n-1\n-1\n2.5\np.d.f. f(DP1,DP2) = h' = 1/3\nL\nS\n\nFigure 10. Deriving f1,2 from g1,2. DP's having the uniform distribution and its linear\nmapping make it simple.\n\nNow, the second equation of equation (12) becomes,\n\n∫\n∫\ninf\ninf\n-\ninf\ninf\n-\n=\n=\n)\n,1\n(\n)1\n(\n,1\ndFR\ndFR\nFR\nFR\nf\nFR\nf\nfor -1≤FR1≤1\n(13)\n\nMIT, 2.882 Spring 2005, Taesik Lee\nYou may notice that the integral\nis the length of the projected area\nalong FR2 axis (L in Figure 10). The figure suggests that the length is 1.5\nthroughout the -1≤FR1≤1 range. Thus,\n∫\ninf\ninf\n-\ndFR\n\nf1(FR1) = 1/3 * 1.5 = 0.5\nwhen -1≤FR1≤1\notherwise\n\nFor FR2,\n\n∫\n∫\ninf\ninf\n-\ninf\ninf\n-\n=\n=\n)\n,1\n(\n)\n(\n,1\ndFR\ndFR\nFR\nFR\nf\nFR\nf\nfor -1≤FR2≤2.5\n(14)\n\n∫\ninf\ninf\n-\ndFR is the length of the projected area along FR1 axis (S in Figure 10),\nand, unlike L, S is a function of FR2. By inspecting Figure 10, you can see\nthat S linearly increases from 0 to 1.5 as FR2 increases from -1 to 0.5. Then,\nfor 0.5<FR2<1.0, S is constant at 1.5. From FR2=1.0 to FR2=2.5, S decreases\nfrom 1.5 back to zero. S, a function of FR2, multiplied by 1/3 yields the\nmarginal p.d.f. f2 that has a trapezoidal shape. Figure 11 summarizes the above\ndiscussion with the design range also shown.\n\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\n\nFigure 11. The marginal p.d.f. for FR1 and FR2 can be computed from the joint p.d.f. of\n(FR1,FR2). Each of the two marginal p.d.f. is integrated within the design range to give\nthe marginal probability of success for FR1 and FR2, respectively.\n\nIntegrating each of the two marginal p.d.f. over its relevant design range\nyields the marginal probability of success. From Figure 11, you can figure out\nthat p1 = 0.5 and p2 = 0.9583. Product of these two marginal probabilities is\n0.4792. As expected, this value is a bit off from the correct value, p1,2 = 0.5.\n\np.d.f\np.d.f\n\nMIT, 2.882 Spring 2005, Taesik Lee\nNow suppose that DP2 variation has changed somehow (e.g. change of a\nsupplier) from U[0,1.5] to U[-1,1.6]. Following the same steps described\nabove, we can obtain p'1,2, p'1, and p'2. It turns out that p'1,2 = 0.499; p'1 = 0.5;\np'2 = 0.9654. Again, p'1*p'2 (= 0.4827) is slightly off from the correct value.\n\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\n\nFigure 12. Joint p.d.f. of (FR1,FR2) and the marginal p.d.f.'s for FRs.\nWhat is important here is that even though the probability of success by using\nthe joint p.d.f. shows a hint of performance degradation (p'1,2 < p1,2) , the other\nprobability of success by using two marginal probabilities indicates the\nopposite trend (p'1*p'2 > p1*p2). This can be a significant problem when\ndetecting mal-functioning is time-critical for recovering the system. Therefore,\nas emphasized earlier, it is very important to consider the joint p.d.f. when\nthere are multiple functional requirements that are not completely uncoupled.◘\n\nThis section explained how to compute information contents for multiple-FR problem\nusing 2-FR uniform distribution examples. Applying the same technique to three or\nmore-FR problems with general distribution will not be effective. Indeed, when it is not\nthe simplest case, computing information contents is perhaps best handled by a\nprobabilistic simulation technique such as Monte Carlo simulation.\np.d.f\np.d.f"
    },
    {
      "category": "Lecture Notes",
      "title": "lec228.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/fb177edab6fe68a8e92989267c151e8b_lec228.pdf",
      "content": "2.882 System Design and Analysis\nFebruary 28\nTaesik Lee (c) 2004\n\nWhat we'll do today\n- Information content for multi-FR\n- Basic statistics/probability\n- Allowable tolerance (linear tolerancing) vs. statistical\ntolerancing\nTaesik Lee (c) 2005\n\no\nReview\nInformation content\nu\ndr\n(\n)\nFR\nP\n) = o f (\ndFR\nFR\ndr l\nu\ndr\nI -\n= log P -\n= log\nFR\nP\n) -\n= log\ndFR\nFR\nf\n(\n(\n)\ndrl\nFR\ndru\np.d.f.\nf(FR)\ndrl\nSystem Range,\np.d.f. f(FR)\nDesign Range\n|sr|\nCommon Range,\nAC\n|dr|\nTaesik Lee (c) 2005\n\nNormal Distribution\nFR\n1s\np.d.f.\nf(FR)\nWe want to know this area\n(probability)\ns\nF(z), value from the standard\nnormal distribution function\n-1\nX ~ N(m, s2)\nThen, Z = (X-m)/s ~ N(0, 1)\nz\nphi(z)\n1-phi(z)\nprob between +z, -z\nppm\nppb\n0.84134474\n0.15865526\n0.68268948 317310.5\n0.977249938\n0.022750062\n0.954499876 45500.12\n0.998650033\n0.001349967\n0.997300066 2699.934\n0.999968314\n3.1686E-05\n0.999936628 63.37207\n0.999999713\n2.87105E-07\n0.999999426\n0.57421\n574.21\n0.999999999\n9.90122E-10\n0.999999998\n0.00198 1.980244\nTaesik Lee (c) 2005\n\nHW1, #5\n- System range, FR1 ~ N(m,s2)\n- Design range dr =< FR1 =< dru\nQ: Information Content ?\nl\n- l = (dru + dr)/2 - μ\nl\nFR\ndru\np.d.f.\nf(FR)\ndrl\nN(m,s2)\n(drl+dru)/2\nl\nl\nl\nl\ndr - (dr+dru)/2 + l\ndru - (dr+dru)/2 + l\nl\nIn terms of s multiple: {drl - (drl+dru)/2 + l}/s\n{dru - (dr+dru)/2 + l}/s\nTaesik Lee (c) 2005\n\nu\ny\nþ\ni\ni\ni\nu\ny\nþ\ni\ni\ni\nMultiple FR system range\nReview\nExample\nDP1\nDP2\nDesign range\nFR1: [-0.5 , 0.5]\nFR2: [-2.0 , 2.0]\nFR1\nFR 2\nØ\nŒo\n=\n0 ø\nœß\nDP1\nDP2\nFR1\nFR2\nDesign range\nmapped onto FR space;\nonly a projection is shown\nhere\nAssuming statistical\nindependence between\nof (DP1,DP2) is a product\nof pdf(DP1) and pdf(DP2)\nDP variation (joint pdf) is\nDP1 and DP2, the joint pdf\nTaesik Lee (c) 2005\n\nu\ny\nþ\ni\ni\ni\nu\ny\nþ\ni\ni\ni\nDetecting change in system range\nInformation\nContents\n\"Monitoring marginal probability of each FR is not\nonly inaccurate but potentially misleading\"\nExample\nDesign range\nFR1\nFR 2\nØ\nŒo\n=\n0 DP1\nDP2\nFR1: [-0.5,0.5]\nFR2: [-2,2]\nø\nœß\nDesign parameter variation\nInitial\nAfter change\nDP1: U[-1,1]\nDP1: U[-1,1]\nDP2: U[0,1.5]\nDP2: U[-1,1.6]\nTaesik Lee (c) 2005\n\nTaesik Lee (c) 2005\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n1.5\n-1\n0.5\nFR2\nFR1\n-1\n0.5\n0.5\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.5\n2.5\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\np.d.f\nFR1\nFR2\n-1\n-1\n-1\n0.3846\nFR2\nFR1\n-1\n0.5\n0.6\n(a)\n(b)\n(c)\n-2\nDesign range\nJoint p.d.f.\n(FR1,FR2)\n2.6\n2.6\n.6\n-2\nBefore DP2 change\nAfter DP2 change\nCorrect\nWrong\n0.499\n0.4827\n0.9654\n0.5\nAfter\n0.5\n0.4792\n0.9583\n0.5\nBefore\npFR1,FR2\npFR1× pFR2\npFR2\npFR1\nDP1: U[-1,1]\nDP2: U[0,1.5]\nDP1: U[-1,1]\nDP2: U[-1,1.6]\nInformation\nContents\nMarginal\npdf (FR2)\nMarginal\npdf (FR1)\nMarginal\npdf (FR2)\nMarginal\npdf (FR1)\npFR2\npFR1\npFR1\npFR2\np.d.f\np.d.f\np.d.f\np.d.f\n\n×\nReview\nAllowable tolerance\n-\nDefined for DP\n-\nTolerances that DPs can take while FRs still remaining completely\ninside design ranges\n-\nUnconditional tolerance\n-\nConservative tolerancing\nFR2\nDP2\nDP1\nAllowable tolerance area\nDesign range is mapped\nonto DP space\nDesign range\nØ\nŒo\nX\nO\nX\nX\nø\nœß\nFR1\nDFR1\nDP1\nD\n= A11\nDFR2 A21 DDP1\n-\nDDP2 =\nA22\nTaesik Lee (c) 2005\n\nu\ny\nþ\ni\ni\ni\nu\ny\nþ\ni\ni\ni\nLinear tolerancing vs. Statistical tolerancing\nFR1\nFR2\nØ\n= 1\n0 DP1\nDP2\nDesign range\nFR1: [-0.6,0.6]\nFR2: [-1.8,1.8]\nø\nŒo\nœß\n4.0\nLinear tolerancing\nStatistical tolerancing\nDP2\nDP1\n0.6\n(0.6,1.56)\n-0.6\n(-0.6,2.04)\n(-0.6,-1.56)\nAllowable tolerance\nDP1: [-0.6,0.6]\n3sFR1 = 0.6 a sFR1 = 0.2\nTherefore, sDP1 = 0.2\nVar(FR2) = 0.42Var(DP1) + 12Var(DP2)\nThus, sDP2 = 0.5946\n3 sDP1 = 0.6\nDP2: [-1.56,1.56]\n3 sDP2 = 1.784\nTaesik Lee (c) 2005"
    },
    {
      "category": "Lecture Notes",
      "title": "lec309.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/eab7387df28fbf6c9e36d3c351a61932_lec309.pdf",
      "content": "Chapter 4.\nDesign of Systems\n\nIntroduction\nWhat is a system?\n\nCMP machine\n\nEngineering Systems & Bio System\nSystem\nElement\nSubsystem\nComponent\nLeaf\n:\nSense of sight, smell and\ntaste\nSpace Shuttle, Mars Rover,\netc\nNervous system\n[Figures of human\nbiology removed for\ncopyright reasons.]\n[Figures of spacecrafts\nremoved for copyright\nreasons.]\nEyeball\nCellular structure in\nthe retina\nIndividual parts\nChemistry in these cells\n\nDefinition of a System:\nAn assemblage of\nsub-systems,\nhardware and software components, and\npeople\ndesigned to perform a set of tasks so as to\nsatisfy the specified FRs\nand constraints.\n\nExamples of Systems\nSoftware\nMachines\nManufacturing systems\nMaterials\nProducts\nGovernment\n\nIssues Related to System Design\n1. How should a complex system be designed?\n2. How should the complex relationships\nbetween various components of a system be\ncoordinated and managed?\n\nIssues Related to System Design\n3. How can the stability and controllability of a\nsystem be guaranteed?\n4. What is the role of human operators in a\nsystem?\n\nClassification of Systems\nAre all systems alike?\nHow should we classify systems?\n\nClassification of Systems\nShould the system be classified based on the\nphysical size of the system?\nor\nShould it be based on the number and nature of\nthe functions\nthat the system must perform?\n\nClassification of Systems\nWhy does the classification of systems\nbased on functions\nrather than physical size\nmake more sense?\n\nClassification of Systems\n-Large systems from Small systems\n-Static systems from Dynamic systems\n-Fixed systems from Flexible systems\n-Passive systems from Active systems\n-Open systems from Closed systems\n\nAxiomatic Design Theory\nfor Fixed Systems\nIs the design of systems different from the\ndesign of other things?\n\nAxiomatic Design Theory\nfor Fixed Systems\ni. The First Step in Designing a System: Define FRs of the\nSystem\nii. Mapping between the Domains: a Step in Creating\nSystem Architecture\niii. The Independence of System Functions\niv. Information Content for Systems: the Best Design\nv. Decomposition\nvi. System architecture\n\nMeasurement of Information content\nHow do we measure the information content of\na system that has many decomposed layers in its\nhierarchy?\n\nInformation Content of Systems\nHow do we measure the information content of a\nsystem that has many decomposed layers in its\nhierarchy?\nIsystem = Σ Ihighest level FRi = - Σ log (Ac)highest level FRi\nwhere (Ac)highest level Fri is the area of the common\nrange associated with each one of the highest level\nFRi.\n\nInformation Content of a Large System\nIsystem=Σ Ihighest level FRi= - Σ log (Ac)highest level FRi\nwhere (Ac)highest level FRi is the area of the common range\nassociated with each one of the highest level FRi.\n\nHow do we determine Isystem when\nΣ Ihighest level FRi is not known?\nIsystem = Σ log(p leaf) = - Σ log (Ac)leaf\nwhere (Ac)leaf is the area of the common range associated with each leaf.\nΣ log (Ac)leaf = Σ log (Ac)highest level FRi\n\nIn the case of a coupled design, it is expected that in\nmost cases,\nΣ log (Ac)leaf < Σ log (Ac)highest level FRi\nsince any change in any other FR in the same set of FRs\nat a given level will affect the Ac.\n\nInformation associated with physical\nintegration (i.e., assembly)\nIsystem = Σ log(p leaf) + Ia = - Σ log (Ac)leaf + Ia\nwhere Ia is the information associated with assembly of\nmodules.\nΣ log (Ac)leaf + Ia < Σ log (Ac)highest level FRi\n\nDefinition of Module\nDefinition of Module --- Mi\nFR1 = a DP1 = M1 * DP1\nFR2 = b DP1 + c DP2 = M2 * DP2\nwhere M2 = b (DP1 / DP2) + c.\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nc\nb\na\nFR\nFR\n\nDefinition of Modules\n∆FR1 = a ∆DP1 = M1 * ∆DP1\n∆FR2 = b ∆DP1 + c ∆DP2 = M2 * ∆DP2\n\nDecomposition of {FRs}, {DPs}, and {PVs}\nHow does the decomposition process affect the\noutcome of the design process?\n\nDefinition S1\n(Equivalent Designs)\nTwo designs are defined to be\n\"equivalent\"\nif they satisfy the same set of the highest level\nFRs within the bounds established by the same\nset of constraints,\neven though the mapping and decomposition\nprocess might have yielded designs that have\nsubstantially different lower level FRs and all\nDPs for each of these designs.\n\nDefinition S2: (Identical Designs)\nDesigns that fulfill the same set of the highest\nlevel FRs and satisfy the Independence Axiom\nwith zero information content are defined to be\n\"identical\" if their lower level FRs and all DPs\nare also the same.\n\nTheorem S1 (Decomposition and System\nPerformance)\nThe decomposition process does not affect\nthe overall performance of the design if\nthe highest level FRs and Cs are satisfied\nand if the information content is zero,\nirrespective of the specific decomposition\nprocess.\n\nTheorem S2: (Cost of Equivalent Systems)\nTwo \"equivalent\" designs can have a\nsubstantially different cost structure,\nalthough they perform the same set of\nfunctions and they may even have the\nsame information content.\n\nDesign and Operation of Large Systems\nWhat is a Large System?\nThe telephone system for Boston,\nThe government bureaucracy,\nAn assembly plant for automobiles,\nA software system that controls nuclear power\nplants, and\nBoeing 747 airplanes\n\nDesign and Operation of Large Systems\nIs it the physical size, the number of\ncomponents, or the number of functions that\nmake it large?\n\nWhat is a Large Flexible System?\nDefinition of a Large Flexible System\nA system is a large flexible system if the\ntotal number of FRs that the system must\nsatisfy during its lifetime is large and if at\ndifferent times, the system is required to\nsatisfy different subsets of FRs.\n\nAxiomatic Design of a Large Flexible System\nHow do we design a large flexible system?\n-Define FRs and Constraints\n-Knowledge base -- DPs for FRs\n-Develop design concepts -- A set of DPs for the\ndesign task\n-Physical integration\n-Develop alternative designs\n-Choose the best based on information measure\n\nThe knowledge base can be structured as follows:\nFR1 $ (DP1a, DP1b,...................., DP1m)\nFR2 $ (DP2a, DP2b,...................., DP2q)\nFR3 $ (DP3a, DP3b,...................., DP3w)\n............................................................\n............................................................\nFRn $ (DPna, DPnb,...................., DPns)\n\nSynthesis of a Large Flexible System\nSAAB,\nDeveloper of Defense Airplanes of Sweden\n\nSAAB's Research: Letter from Exec. VP,\nProfessor Billy Fredriksson\nWe have an interesting ongoing research on product\ndevelopment utilizing your Axiomatic Design Theory.\nBuilding on your theory Gunnar Holmberg (PhD-student\nfrom Saab) is using AD on high systems architecture level to\ndesign systems for life cycle flexibility. This is in order to\nefficiently add new unknown functionality through the life of\nthe systems.\nIt would be interesting and valuable to us to discuss this with\nyou. I am planning to go to US in April and plan to be at MIT\n23 April. Would you be available at MIT?\n\nSynthesis of a Large Flexible System\nSuppose the subsets of FRs change as a function of time as\nfollows:\n@ t = 0, the subsets are\n{FRs}0 = {FR1, FR5, FR7, FRn}\n@ t = T1, {FRs}1 = {FR3, FR5, FR8, FRm}\n@ t = T2, {FRs}2= {FR3, FR9, FR10, FRn}\nHow shall we choose DPs?\n\nSystem Synthesis through Physical Integration\nof DPs\nHow do we combine the lower-level DPs to\nsynthesize the higher-level DPs?\nV-Model\n\nSystem\nNeeds\nBiological\nSystem\nDefine\nFRs\nMap to\nDPs\nDecom-\npose\nDefine\nModules\nIdentify\nMolecular\nEntities\nEstablish\nInterfaces\nDetermine\nSystem\nMorphology\nBuild FR-DP Hierarchy\n(Top-Down)\nIntegrate Physical Entities\n(Bottom-Up)\nMap DPs to\nBiological Entities\nFigure1. V-model overview of system analysis using the Design Matrix. The V-Model\ndescribes how the Design Matrix of AD is used to study hierarchical nature of biological\nsystems\n\nDetailed\nsystem\nIntegrate\nphysical entities\n(Bottom -up)\nEstablish\ninterfaces\nConstruct local\nassemblies\nSatisfy system\nmorphology\nIdentify\nphysical\ncomponents\nDetailed\nsystem\nIntegrate\nphysical entities\n(Bottom -up)\nEstablish\ninterfaces\nConstruct local\nassemblies\nSatisfy system\nmorphology\nIdentify\nphysical\ncomponents\nCREDIBLE COST ASSESSMENT\n- Estimate the\nSystems Physical\nSolutions\n- Technical Scope Defined\nis Scope Estimated\nSystem Design & Development\nCustomer\nNeeds\nDefine\nFRs\nMap to\nDPs\nDefine\nModules\nBuild FR -DP\nhierarchy\n(Top -down)\nDecompose\nCustomer\nNeeds\nDefine\nFRs\nMap to\nDPs\nDefine\nModules\nBuild FR -DP\nhierarchy\n(Top -down)\nMapping DPs into\nphysical entities\nDecompose\nTECHNICAL CREDIBILITY\nSystem changes\nare assessed\n- NASA Requirements\n(Level 1 & 2)\n- Identifies Lowest\nLevel Requirements\n& Interactions\n\nThe V-Model\nCustomer\nAttributes\nSoftware\nProduct\nModule\nDefinition\nDefine FRs\nMapping\nDecomposition\nIdentify classes\nEstablish Interfaces\nCoding with System\nArchitecture\nBuild the software hierarchy\n(Top-Down Approach)\nBuild the object oriented model\n(Bottom-Up Approach)\nIdentify Leaves\n(Full Design Matrix)\nFR / DP Domain\nDP / PV Domain\nCA Domain\n\nTheorem S3 (Importance of High Level\nDecisions)\nThe quality of design depends on the selection\nof FRs and the mapping from domain to\ndomain. Wrong selection of FRs made at the\nhighest levels of design domains cannot be\nrectified through the lower level design\ndecisions.\n\nTheorem S4 (The Best Design)\nThe best design for a large flexible system\nthat satisfies n FRs\ncan be chosen among the proposed designs\nthat satisfy the Independence Axiom\nif the complete set of the subsets of {FRs}\nthat the large flexible system must satisfy\nover its life\nis known a priori.\n\nTheorem S5 (The Need for a Better Design)\nWhen the complete set of the subsets of {FRs}\nthat a given large flexible system must satisfy\nover its life\nis not known a priori,\nthere is no guarantee that\na specific design will always have the minimum information\ncontent for all possible subsets and thus, there is no\nguarantee that the same design\nis the best at all times.\n\nTheorem S6 (Improving the probability of\nsuccess)\nThe probability of choosing the best design for a large\nflexible system increases as the known subsets of {FRs}\nthat the system must satisfy approach the complete set\nthat the system is likely to encounter during its life.\n\nTheorem S7 (Infinite Adaptability versus\nCompleteness)\nThe\nlarge\nflexible\nsystem\nwith\nan\ninfinite\nadaptability (or flexibility) may not represent the\nbest design when the large system is used in a\nsituation where the complete set of the subsets of\n{FRs} that the system must satisfy is known a priori.\n\nTheorem S8 (Complexity of a Large Flexible\nSystem)\nA large system is not necessarily complex if it has a\nhigh probability of satisfying the {FRs} specified for\nthe system.\n\nTheorem S9 (Quality of Design)\nThe quality of design of a large flexible system is\ndetermined by the quality of the database, the\nproper selection of FRs, and the mapping process.\n\nRepresentation of the System\nArchitecture of Fixed Systems\nIs there a need to represent the system\narchitecture?\nHow do we present it in a concise manner?\n\nThree\ndifferent\nbut\nequivalent\nways\nof\nrepresenting a system:\n(1) FR/DP/PV hierarchies with corresponding design\nmatrices,\n(2) Module function diagram, and\n(3) Flow diagram.\n\nHierarchies in Design Domains through\nDecomposition of {FRs}, {DPs}, and {PVs}:\nRepresentation of the System Architecture\nWhat is a design hierarchy and how does that\nrepresent the system architecture?\n\nSuppose that we have completed a system design such\nthat the FR and the DP hierarchies are:\nFR1\nFR2\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nA11\nA22\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP1\nDP2\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\nFR11\nFR12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX\nO\nX\nX\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP11\nDP12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\nFR21\nFR22\nFR23\n⎧\n⎨ ⎪\n⎩ ⎪\n⎫\n⎬ ⎪\n⎭ ⎪ =\nX\nX\nX\nX\n⎡\n⎣\n⎢\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\n⎥\nDP21\nDP22\nDP23\n⎧\n⎨ ⎪\n⎩ ⎪\n⎫\n⎬ ⎪\n⎭ ⎪\n\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDP\nDP\nDP\nX\nX\nX\nX\nX\nFR\nFR\nFR\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\n⎥⎦\n⎤\n⎢⎣\n⎡\n=\n⎭\n⎬\n⎫\n⎩\n⎨\n⎧\nDP\nDP\nc\nb\na\nFR\nFR\n\nFigure removed for copyright reasons.\nSee Figure 4.1 in Suh, Axiomatic Design (2001).\n\nModules\nFR1231 = a DP1231 = M1231 * DP1231\nFR1232 = b DP1231 + c DP1232 = M1232 * DP1232\nwhere M1232 = b (DP1231 / DP1232) + c.\n\nDesign Matrix and Module-Junction Diagrams - Another\nMeans of System Representation\nSince there can be many modules distributed throughout a system, how can\nwe represent the inter-relationship among modules in a system design?\nFigures removed for copyright reasons.\nSee Figures 4.2-4.6 in Suh, Axiomatic Design (2001).\n\nM1\nM11\nM112\nM111\nS\nM122\nM121\nC\nC\nM12\nS\nS\nM12322\nM1231\nC\nM12323\nM12321\nM1232\nM123\nC\nS\nM213\nM212\nC\nM211\nC\nM214\nS\nM21\nM22\nM23\nC\nS\nM2\nS\nC\nSummation Junction\nControl Junction\nHardware Module\nSoftware Module\n\nSystem Control Command (SCC)\nHow do we operate a system?\n\nExample 4.1 Design of Wafer Processing Equipment\nVapor\nPrime\nVP chill\nCoating\nSoft Bake\nSB chill\nHB chill\nHard Bake\nDeveloping\nPEB chill\nPEB\n(Post Exposure\nBake)\nExposure\nSubstrate\nAdhesion promoter\nPhotoresist film\nSolvent evaporation\nChemical reaction\nin exposed area\nDeveloped image\n(negative resist)\n\nExample 4.1 Design of Wafer Processing Equipment\nStack of modules\nStack of modules\nRobot\nLoading\nStation\nUnloading\nstatio n\nTrack\n\nExample 4.1 Design of Wafer Processing\nEquipment\nConstraints are:\n-\nCost\n-\nFootprint\n-\nReliability\n-\nSafety\n-\nServiceability\n-\nManufacturability\n-\nContamination\n-\nMinimization of wafer temperature variation\n\nThe Highest Level FRs, DPs, and the Design\nMatrix\nFR1 = coat wafers with\ndesired resist film at desired\nthroughput rate\nX O O X DP1 = coating process modules\nFR2 = develop exposed film\nat desired rate\nO X O X DP2 = developing process modules\nFR3 = transport wafer from\ninput pt. to modules to\noutput pt.\nX X X X DP3 = transport system\nFR4 = control the system\nfunctions\nO O O X DP4 = system architecture\n\nThe design equation has a triangular matrix:\nFR4 = control the system functions\nX O O O DP4 = system architecture\nFR1 = coat wafers with desired resist\nfilm at desired throughput rate\nX X O O DP1 = coating process\nmodules\nFR2 = develop exposed film at desired\nrate\nX O X O DP2 = developing process\nmodules\nFR3 = transport wafer from input pt.\nto modules to output pt.\nX X X X DP3 = transport system\n\nDescription of the Decisions Made\nFR1 : Coating thickness = 0.5 - 0.8μm\nCoating uniformity within wafer = 15 A (3σ)\nwafer-to-wafer = 10\ncassette-to-cassette(24Hr.) = 13A\nFR2 : Critical Dimension (C.D.)\nwithin wafer = 0.010μm\nwafer-to-wafer = 0.005μm\ncassette-to-cassette(24Hr) = 0.010μm\nFR3 : various flow capability\nTransfer time ≤10 sec - Overhead time should\nnot be a throughput limiter\nFR4 : process recipe/plan generating high-level\ncommand (e.g. On/Off, Accel/Decel)\n\nThe Second Level FRs, DPs, and the Design Matrix\nParent FR : FR1 = coat wafers with desired resist film at desired throughput rate\nParent DP: DP1 = coating process modules\nConstraints : Decomposition of DP1 must not affect FR2, FR4\nFR11 = prepare wafer for coating X O O DP11 = thermal process module1\nFR12 = coat the wafer with resist O X O DP12 = (N1) spin coater\nFR13 = complete coating process O O X DP13 = thermal process module2\n\nDescription of the Decision Made at the Second\nLevel\nFR11 = wafer surface adhesion, surface temperature\nuniformity before coating, etc. (This will be taken into\naccount at the decomposition of FR11/DP11)\nFR12 = various photoresist capability to produce\nuniform and repeatable film (same spec. as with FR1)\nFR13 : final resist film thickness control. (This will be\ntaken into account when FR13/DP13 are decomposed.)\n\nMaster Matrix Chart\n\nDP11\nDP12\nDP13\nDP21\nDP22\nDP23\nDP31\nDP32\nDP41\nDP42\nDP43\nFR11\nX\nO\nO\nO1\nO\nO1\nO\nO\nX\nO\nX\nFR12\nO\nX\nO\nO\nO2\nO\nO\nO\nX\nO\nX\nFR13\nO\nO\nX\nO1\nO\nO1\nO\nO\nX\nO\nX\nFR21\nO1\nO\nO1\nX\nO\nO\nO6\nO6\nX\nO\nX\nFR22\nO\nO2\nO\nO\nX\nO\nO\nO\nX\nO\nX\nFR23\nO1\nO\nO1\nO\nO\nX\nO\nO\nX\nO\nX\nFR31\nX\nX\nX\nX\nX\nX\nX\nO\nX\nO\nO\nFR32\nX3\nO4\nX3\nX3\nO4\nX3\nX\nX\nO\nO\nX\nFR41\nO\nO\nO\nO\nO\nO\nO\nO\nX\nO\nO\nFR42\nO5\nO5\nO5\nO5\nO5\nO5\nO\nO\nO\nX\nO\nFR43\nO*\nO*\nO*\nO*\nO*\nO*\nO\nO\nX\nO\nX\n\nNotes :\n1. Thermal effect must be considered among\nthermal process modules - we can use some\nkinds of thermal shields or we can do that\nwith appropriate layout.\n2. Spin module must not affect each other in the\nsense of vibration, particle generation, etc.\n3. The evidence of this X is the utilization of\nIBTA robot.\n4. Standard method for wafer hand-off is required.\n5. Flexible or standard way of supervising\n(sensing)\n6. There must be no delay from stepper to\nthermal process module 3.\n\nM11\nM12\nM13\nS\nM21\nM22\nM23\nS\nM41\nM42\nM43\nS\nM31\nC\nM32\nS\nS\nC\nM1\nM2\nM3\nM4\nFlow chart at the second level\n\nM122\nM124\nM123\nM125\nC\nC\nM126\nC\nM131\nM132\nS\nM1\nM111\nM112\nS\nM11\nM12\nM13\nS\nM127\nM121\nFigure b Flow Chart [FR1x/FR1xx]\n\nM226\nM221\nM222\nM223\nM224\nM225\nC\nM231\nM232\nS\nM2\nM211\nM212\nS\nM21\nM22\nM23\nS\nC\nM126\nC\nFlow Chart [FR2x/FR2xx]\n\nMathematical Modeling, Simulation, and\nOptimization of Systems\n\nApplication of the Flow Diagram of the System\nArchitecture\nWhat is the system architecture good for?\n\nApplication of the Flow Diagram of the System\nArchitecture\n1. Diagnosis of system failure -\n2. Engineering change orders -\n3. Job assignment and management of a system\ndevelopment team -\n4. Distributed systems -\n5. System design through assembly of modules -\n6. System consisting of hardware and software -"
    },
    {
      "category": "Lecture Notes",
      "title": "lec328.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/93496983b4a0628e2c5b2012ebff2c47_lec328.pdf",
      "content": "Taesik Lee (c) 2005\nExam Revisit (I)\n-\nDiagonal term vs. Off-diagonal term\n-\nMatrix rearrangement\n⎪\n⎪\n⎭\n⎪⎪\n⎬\n⎫\n⎪\n⎪\n⎩\n⎪⎪\n⎨\n⎧\n⎥\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪\n⎪\n⎭\n⎪⎪\n⎬\n⎫\n⎪\n⎪\n⎩\n⎪⎪\n⎨\n⎧\nDP\nDP\nDP\nDP\nX\nX\nX\nO\nO\nX\nO\nO\nO\nX\nX\nX\nO\nX\nO\nX\nFR\nFR\nFR\nFR\n\nTaesik Lee (c) 2005\nExam Revisit (II)\n-\nAllowable tolerance / Probability of Success\n⎪⎪\n⎪\n⎪\n⎭\n⎪⎪\n⎪\n⎪\n⎬\n⎫\n⎪⎪\n⎪\n⎪\n⎩\n⎪⎪\n⎪\n⎪\n⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDPf\nDPe\nDPd\nDPc\nDPb\nDPa\nFR\nFR\nFR\n5.0\n2.0\n1.0\n5.0\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDPf\nDPd\nDPa\nFR\nFR\nFR\n5.0\n1.0\n5.0\n.0\n2.0\n.0\n5.0\n5.0\n2.0\n=\n∆\n+\n∆\n-\n=\n∆\n-\n=\n∆\n+\n∆\n-\n=\n∆\n=\n∆\n=\n∆\n+\n+\n+\n+\n+\nFR\nDP\nDP\nFR\nDP\nDP\nFR\nDP\n\nTaesik Lee (c) 2005\nExam Revisit (III)\nDP2\nDP1\n0.2\n-0.2\n0.1\n-0.1\n0.05\n-0.05\nDP2\nDP1\n0.2\n-0.2\n0.1\n-0.1\n0.2\n-0.2\n0.16\n0.05\n-0.05\n0.19\n-0.19\nA\nDP2\nDP3\n0.2\n-0.2\n0.1\n-0.1\n0.2\n-0.2\n0.16\n0.1\n-0.1\nJoint p.d.f. for (DP2,DP3)\nDP2\nDP1\n0.2\n-0.2\n0.1\n0.1\n-0.1\n-0.1\nJoint p.d.f. for (DP1,DP2)\nA\n\nTaesik Lee (c) 2005\nDesign of Manufacturing Systems\n\nTaesik Lee (c) 2005\n-\nWhat is a manufacturing system?\nPhoto removed for copyright reasons.\nPhoto removed for copyright reasons.\n1910... Ford Motor Company\n2010... Semiconductor Fab\n\nTaesik Lee (c) 2005\nDesign of fixed manufacturing systems\nfor discrete identical parts\nSmall Scale Problems\n\nTaesik Lee (c) 2005\nX\nPart\nProcess module for X\nIn/Out buffer\nΙ. Simple deterministic scheduling problem\nDesign a manufacturing system to eliminate the root cause\nof a problem (symptom)\nD\nE\nIN OUT\nRobot\nRobot\nRobot\nRobot\nD\nE\nIN OUT\nB\nC\nF\nA\nG\nB\nC\nF\nA\nG\n\nTaesik Lee (c) 2005\nPhotoresist processing\nVapor\nPrime\nVP chill\nCoating\nSoft Bake\nSB chill\nHB chill\nHard Bake\nDeveloping\nPEB chill\nPEB\n(Post Exposure\nBake)\nExposure\nSubstrate\nAdhesion promoter\nPhotoresist film\nSolvent evaporation\nChemical reaction\nin exposed area\nDeveloped image\n(negative resist)\n\nTaesik Lee (c) 2005\nDeterministic scheduling problem\nX\nD\nE\nA\nG\nIN OUT\nRobot\nB\nC\nD\nE\nF\nA\nG\nIN OUT\nRobot\nPart\nProcess module for X\nIn/Out buffer\nTime (sec)\nG\nF\nE\nD\nC\nB\nA\n# of\nmodules\nProcess\nMachine diagram removed for\ncopyright reasons.\n\nTaesik Lee (c) 2005\nLevel 1\nFRs\nDPs\n#.1\nPerform process steps\nwith desirable quality\nProcess modules\n#.2\nSatisfy process flow\nand throughput\nSystem configuration\n⎥⎦\n⎤\n⎢⎣\n⎡\n⎥\n⎦\n⎤\n⎢\n⎣\n⎡\n=\n⎥⎦\n⎤\n⎢⎣\n⎡\nDP2\nDP1\nX\nX\nX\nFR2\nFR1\nX\nLevel 2\nFRs\nDPs\n#.1\nManage the recipe\nRecipe handling\nmodule\n#.2\nSupport the system\nphysically\nSystem layout\n#.3\nMove wafer when\nprocess is over\nTransport system\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\nDP2.3\nDP2.2\nDP2.1\nX\nX\nX\nO\nO\nO\nX\nFR2.3\nFR2.2\nFR2.1\nX\nX\n\nTaesik Lee (c) 2005\nLevel 3 - Sub FRs/DPs of FR2.1\nFRs\nDPs\n#.1\nKeep TAKTprocess below\nTAKTsystem\nNumber of each process\nmodule\n#.2\nMaintain # of moves by main\nrobot not to degrade target\nthroughput\nNumber of IBTA\n#.3\nLocate process modules into\n200-APS frame\nLayout (module\narrangement)\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\nDP2.2.3\nDP2.2.2\nDP2.2.1\nX\nX\nX\nO\nO\nO\nX\nFR2.2.3\nFR2.2.2\nFR2.2.1\nX\nX\nLevel 3 - Sub FRs/DPs of FR2.2\nFRs\nDPs)\n#.1\nCoordinate transport\nfunction\nCommand and control\nalgorithm\n#.2\nMove wafer from CES\nto VP\nCES handler\n#.3\nFrom VP to VPC\nIBTA\n#.4\nFrom VPC to CT\nCentral handler\nM\nM\n#.\nFrom HB to HBC\nCentral handler\n#.\nFrom HBC to CES\nSI handler\n* Design matrix depends on\na process plan and selection\nof DPs.\n\nTaesik Lee (c) 2005\n-\nFR1: move wafer from process 1 to 2\n-\nFR2: move wafer from process 2 to 3\n-\n:\n-\nFR5: move wafer from process 5 to 6\n-\nDP1: robot 1\n-\nDP2: robot 2\n-\nt = 0\nFR = {FR1}\nDP = {DP1}\n-\nt = t1\nFR = {FR4}\nDP = {DP2}\n-\nt = t2\nFR = {FR2, FR3, FR5}\nDP = {DP1, DP2}\nCoupling due to an insufficient number of DPs\n\nTaesik Lee (c) 2005\nX\nPart\nProcess module for X\nIn/Out buffer\n-\nProblem definition\n- Conflict : more than one modules\ncompeting for a robot\n- The conflicts make the waiting time of\nwafers inconsistent, which degrades on-\nwafer result variation.\nP1\nT1\nP2\nT2\nP3\nT3\nSP\nP1\nT1\nP2\nT2\nP3\nSP\nP1\nT1\nP2\nT2\nP3\nSP\nP1\nT1\nP2\nT2\nP3\nP1\nT1\nP2\nT2\nP3\nP1\nT1\nP2\nT2\nP3\nT3\nSP\nP1\nT1\nP2\nT2\nP3\nT3\nSP\nP1\nT1\nP2\nT2\nP3\nT3\nSP\nP1\nT1\nP2\nT2\nP3\nSP\nP1\nT1\nP2\nT2\nP3\nConflict\nDelay time\nExample : Process timing diagram with a sending period(6 unit)\nB\nC\nD\nE\nA\nG\nIN OUT\nRobot\nB\nC\nD\nE\nA\nG\nIN OUT\n\nTaesik Lee (c) 2005\nDeterministic scheduling problem\n,...\n2,1,0\n\n,\n=\n⋅\n+\n+\n+\n=\n∑\n∑\n∑\n=\n-\n=\n=\nn\nSP\nn\nMvPl\nMvPk\nP\nt\ni\nj\nj\ni\nj\nj\ni\nj\nj\ni\nDividing both sides by its SP yields\n,...\n2,1,0\n\n,\n=\n+\n′\n+\n′\n+\n′\n=\n′\n∑\n∑\n∑\n=\n-\n=\n=\nn\nn\nMvPl\nMvPk\nP\nt\ni\nj\nj\ni\nj\nj\ni\nj\nj\ni\n)\nint( ′\n-\n′\n=\ni\ni\ni\nt\nt\nτ\nOriginal pick-up time\n0.5\n1.5\nIN\nA\nB\nC\nD\nE\nF\nG\nProcess\nTime (normalized by sending period)\nτD\nτC\nConflict\nTaking only the decimal,\nτi indicates the (normalized)\nmoment of ith transport task\nwithin a period\n\nTaesik Lee (c) 2005\nSolution\n-\nBasic concept\n- Break the conflicts among number of transport requests from process\nmodules\n- Use predetermined \"queue\" as a decoupler between process and\ntransport\n- Insert optimum queue at possible process steps\n,...\n2,1,0\n\n,\n\n*\n=\n+\n⋅\n+\n+\n+\n=\n∑\n∑\n∑\n∑\n=\n=\n-\n=\n=\nn\nq\nSP\nn\nMvPl\nMvPk\nP\nt\ni\nj\nj\ni\nj\nj\ni\nj\nj\ni\nj\nj\ni\n\nTaesik Lee (c) 2005\nSolution\nCondition for no-conflict:\n)1\n(,\n,...\n2,1\n;\n,\n,2,1\nfor\n~\n~\nmax\n*\n*\nmax\n-\n=\n=\n-\n≤\n-\n≤\ni\nj\nN\ni\nt\nt\nj\ni\n...\nτ\nτ\n\nme\nansport ti\nlongest tr\n:\n~\n)\n(\n\nmax\n'\n*\n*\nt\nq\na\na\nq\nq\nN\nk\nk\njk\nik\nj\ni\nj\nk\nk\ni\nk\nk\nj\ni\nj\ni\n∑\n∑\n∑\n=\n=\n=\n⋅\n-\n+\n-\n=\n′\n-\n′\n+\n-\n=\n-\nτ\nτ\nτ\nτ\nτ\nτ\nWhere\nOptimize values of qk along with sending period, subject to no-conflict\ncondition and process constraint (qcritical = 0 sec)\n∑\n=\nN\nj\nj\nq\n'\nmin\n\nTaesik Lee (c) 2005\nSolution\nAdjusted pick-up time\n0.5\n1.5\nIN\nB\nD\nA\nProcess\nTime (sec)\nDelay (sec)\nA\nB\nC\nD\nE\nA'\nF\nTransforming a potentially combinatorial\ncomplexity problem to a periodic problem\nSolution is obtained for one (and repeating) period\n\nTaesik Lee (c) 2005\nManufacturing Systems Design\nLarge Scale Problems\n\nTaesik Lee (c) 2005\nCustomer's view on Toyota products\n*The Wall Street Journal\nMay 4, 2000\nModels rated\nabove average\nModels rated\nat or below average\nGM\nChrysler\nFord\nNissan\nHonda\nToyota\n- World's No.2 Automaker\n- $12B profit (2003)\n- No1. JD Power Initial Quality Prize\n- Market capitalization of Toyota ($104B) >\nGM ($24B) + Ford ($23B) + DC ($37B) (2003.11.1)\n\nTaesik Lee (c) 2005\nTPS / Lean manufacturing system\nSet of 19 slides removed for copyright reasons.\nSource: Production System Design presentation by Dr. David Cochran\n\nTaesik Lee (c) 2005\nConclusion\nCartoon removed for copyright reasons."
    },
    {
      "category": "Lecture Notes",
      "title": "lec330_pt1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/2bea41ddbb7efcf66b475351cb99aed1_lec330_pt1.pdf",
      "content": "Axiomatic Design of Manufacturing Systems\n\nIntroduction to Manufacturing System\n\"What is a manufacturing system?\"\n\"What is an ideal manufacturing system?\"\n\"How should we design a manufacturing\nsystem?\"\n\"Can a manufacturing system be designed in a\nrational way based on scientific principles?\"\n\nIntroduction to Manufacturing System\nThe design of manufacturing systems has an\nimportant effect on\nManufacturing productivity\nReturn on investment\nMarket share\nWorker's satisfaction\nEnvironment\n\nIntroduction to Manufacturing System\n-Manufacturing systems consist of\nmachines, materials, people, and information.\n-The goal of a manufacturing system is to improve\ncustomer satisfaction\nthrough improvements in\nthe quality of products, short delivery time, and\nhigh labor productivity.\n-Manufacturing systems must be designed to\nsatisfy a specific set of FRs and constraints.\n\nEvolution of cost, quality and worker's satisfaction\nFigure by MIT OCW. After Sohlenius, 2005.\nCost\nQuality customer's satisfaction\nKEY\n1 = Handicraft\n2 = Taylorism\n3 = High Volume Automation\n4 = Flexible Automation\n5 = Concurrent Engineering\nWorker's\nsatisfaction\n\nIntroduction to Manufacturing System\nIs there \"the\" IDEAL MANUFACTURING SYSTEM?\nNO.\nAn ideal manufacturing system is not time-invariant!\nThe design of an ideal manufacturing system depends\nFunctional requirements (FRs)\nConstraints (C).\n\nIntroduction to Manufacturing System\n2. To reduce the capital investment\nMass production\nCapacity planning for machines\nGroup technology\nTransfer lines\nFlexible manufacturing systems\n3. In recent years, to reduce the materials cost\nManufacturing system design\n- Lean manufacturing system\n\nDriving Forces for Manufacturing Systems\n(From Sohlenius 2005)\nFigure by MIT OCW.\nThe 50's\nEfficiency of\nmanual labor\nEfficiency of\nmachine-tool\nutilization\nMinimize capital\ncost for products\nin process\nQuality &\nproductivity\nholistically\nCustomer,\nconcurrent\ndesign, lean\nproduction,\nenvironment\nOrder control\ncustomer adapt\nThe 60's\nThe 70's\nThe 80's\nThe 90's\n\nNumerical Control Machine Tool in 1951\nJ. T. Parsons, (Traverse City, Michigan)\nSmall machine shop with milling machine and dial\ngages\nU.S. Air Force funding of the Servo-mechanisms Lab\n(Gordon Brown, Jay Forrester, etc.)\nControversy\non\ncredit\nfor\nNC\nmachine\ntool\ndevelopment\nParsons received a National Technology Medal from\nPresident Ronald Reagan\n\nManufacturing Systems Concept proposed in\n1960's by M. Eugene Merchant (1970)\nFigure by MIT OCW.\nPERFORMANCE\nCOST AND CAPABILITIES\nCREATIVITY\n(product concepts)\nNEEDS\n(product requirements)\nfor production\nPRODUCTION\nPLANNING\nprogramming\nPRODUCTION\nCONTROL\nfeedback,\nsupervisory,\nadaptive\noptimizing\nPRODUCTION\nEQUIPMENT\nincluding\nmachine tools\nPRODUCTION\nPROCESSES\nremoval,\nforming,\nconsolidative\nFINISHED\nPRODUCTS\nfully assembled,\ninspected &\nready for use\nPRODUCT\nDESIGN\n\nCIRP Definition of Manufacturing System\nThe\nmanufacturing\nsystem\nis\ndefined\nas\n\"an\norganization in the manufacturing industry for the\ncreation of production. In the mechanical and electrical\nengineering industries a manufacturing system in\ngeneral has an integrated groups of functions: They are\nthe sales, design, manufacturing production, and\nshipping functions. A research function may provide a\nservice to one or more of the other functions.\n\nIntroduction to Manufacturing System\nFRs and Cs have been selected implicitly and intuitively\nand are affected by\n1.\nCost structure of the manufacturing\nenterprise\n2.\nAvailable technologies\n3.\nPerformance measurements\n4.\nCompetitive factors\n\nIntroduction to Manufacturing System\nHistorically the FRs of a manufacturing system\nhave changed to deal with the most costly item\nin manufacturing.\n1.\nAt the beginning of the 20th century, labor cost\nwas thought to be the dominant cost item.\nTo minimize the labor content.\nDivision of labor (F. W. Taylor)\nMore efficient and automated machines\n\nIntroduction to Manufacturing System\nThe Effect of Competitive Factors on Manufacturing\nSystems\n1.\nDemand Rate >> Manufacturing Capacity\nMass production - Henry Ford's era for\nautomobiles\n2.\nDemand Rate << Manufacturing Capacity\nFlexible manufacturing system that responds\nto customer preference\n\nIntroduction to Manufacturing System\n-How do societal changes affect the design of manufacturing\nsystems?\n- Globalization leading to specialization among nations\n- Environmental concerns leading to\n- Clean mfg operations\n- Life cycle issues\n- Re-manufacturing\n-Over-capacity of many consumer oriented products (cars, DRAMs, etc.)\n- Supply exceeds the demand\n- Customer satisfaction\n-Customer demands\n- Mass customization\n- Flexible manufacturing system\n\nIntroduction to Manufacturing System\nMuch of the research in the field of manufacturing systems\nhas been\n1.\nTo increase the efficiencies of existing\noperations and manufacturing processes\n2.\nTo optimize inventory levels\n3.\nTo maximize the utilization of\nmanufacturing capacity\nrather than through\na rational design of manufacturing systems.\n\nIntroduction to Manufacturing System\nWhat are typical manufacturing systems?\nTypically, manufacturing systems are classified in terms of\nthe physical machine arrangement.\nProduction job shop\nTransfer lines\nFlow lines\ngroup technology\nLean, linked cell manufacturing systems\n\nIntroduction to Manufacturing System\nThe cost of most manufacturing systems varies\ndepending on\nProduction volume\nDegree of automation\nLabor cost\nEquipment costs\nLocation.\n\nIntroduction to Manufacturing System\nWhat is wrong with the way manufacturing systems have\nbeen designed in recent years?\n\nIntroduction to Manufacturing System\nTwo manufacturing systems that have two identical\nsets of machines may have significantly different\nproduction rates and cost, depending on the\ndesign of manufacturing system.\n\nBasic Requirements of a Manufacturing System\nA manufacturing system must be designed consistent with the\ndesign axioms to be most efficient and reliable.\nIn a \"push\" system, we must be sure that a decoupled system\nis created to maintain the independence of FRs.\nIn these machines, \"decouplers\" are used to create functional\nindependence and satisfy various functional requirements\nwhile the part is subject to various processes in the\nmanufacturing system.\n\nBasic Requirements of a Manufacturing System\nFor manufacture of random sets of different types of parts\nthat require a number of different processes, a \"pull\nsystem\" appears to be the better than a \"push system\".\nIn a \"pull system\", the production rate is gated by the rate\nat which the finished part leaves the manufacturing system.\nThe \"pull\" system is neither inherently better nor worse\nthan a \"push\" system - it is simply a matter of having to\nsatisfy different sets of FRs.\n\nTheorem 25 (\"Push\" System vs \"Pull\" System)\nWhen identical parts are processed through a\nmanufacturing system, a \"push\" system can be\ndesigned with the use of decouplers (that control\nqueues) to maximize the productivity, whereas\nwhen\nirregular\nparts\nrequiring\ndifferent\noperations are processed, a \"pull\" system is the\nmost effective system.\n\nElements of Manufacturing Systems\nWhat are the key elements of a manufacturing system?\nA manufacturing system - a subset of the production\nsystem - consists of people, information and \"things\".\n\nElements of Manufacturing Systems\nTo make all these machines and people work together for the\ncommon goal of the system,\nwe must deal with\ninformation -- generation, collection, processing, transmission,\nand interpretation of information.\nInformation is typically embedded in hardware and software.\nIt forms the interface between diverse elements of a\nmanufacturing system, and integrates the functions of the\nsystem. Without the proper management of information, a\nmodern manufacturing system cannot function.\n\nAxiomatic Design of Fixed Manufacturing\nSystems for Identical Parts\nHighest-Level Design of a Fixed Manufacturing System\nFR1 = Maximize the return on investment\n(ROI)\n\nAxiomatic Design of Fixed Manufacturing\nSystems for Identical Parts\nHighest-Level Design of a Fixed Manufacturing System\nDP1 = Dedicated automated machine that\ncan produce the desired part at\nthe\nspecified production rate.\n\nAxiomatic Design of Fixed Manufacturing Systems\nfor Identical Parts\nHighest-Level Design of a Fixed Manufacturing System\nDP1 = Dedicated automated machine that can produce the desired part at\nthe specified production rate.\nThe FRs of the dedicated and automated machine\nmay be written as\nFR11 = Process the wafers\nFR12 = Transport the wafers\n\nAxiomatic Design of Fixed Manufacturing Systems\nfor Identical Parts\nFR11 = Process the wafers\nFR12 = Transport the wafers\nCorresponding DPs :\nDP11 = Process modules\nDP12 = Robots\nCs:\nC1= Throughput rate\nC2 = Manufacturing cost\nC3 = Quality of the product\nC4 = Yield (production of acceptable products divided by the\ntotal output)\n\n\"Push system\"\nA conflict can arise\nin scheduling the robot motion\nif two processes are completed\nwithin the time it takes\nfor robot to pick up and deliver a wafer\n(i.e., single robot motion).\n\nDecoupling of processes from transport\nDesign equation\nThe original system was a coupled design.\n\nFR11\nFR12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭ = X X\nX X\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP11\nDP12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\nDecoupling of processes from transport\nDesign equation\nSince this machine processes exactly identical parts, a\n\"push\" system may be designed, where the part will be\nsupplied to the machine on a regular time interval T.\nFR11\nFR12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX 0\nX X\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP11\nDP12\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n(6.1)\n\n\"Push system\"\nNumber\nof\nmodules\nni\nneeded\nfor\neach\nprocess\ncorresponding to T.\nwhere\nT= Cycle time\nM = No. of wafers per hour\n)\n2.6\n(\n,3\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n⎟⎠\n⎞\n⎜⎝\n⎛\n=\n=\nm\nInt\nT\nInt\nn\ni\ni\ni\nτ\nτ\n\n\"Push system\"\nTotal number of modules, n, required to process the\nwafers:\nwhere\nN is the number of tasks, i.e., processes.\nn =\nni\ni=1\nN\n∑\n(6.3)\n\n\"Push system\"\nDecompose FR12 (Transport the wafers) as\nFR121 = Decouple the process times\nFR122 = Minimize the total process time\nTC (or minimize the number of\nmodules)\nThe corresponding DPs are:\nDP121 = Decouplers with q's\nDP122 = The minimum value of TC\n\n\"Push system\"\nDesign equation\nFR 121\nFR 122\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX 0\nX X\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP 121\nDP 122\n⎧ ⎨ ⎩\n⎫\n⎬\n⎭\n(6.4)\n\n\"Push system\"\nTotal process time Tc\nwhere\ntP is the total process time\ntT is the total transport time.\nT C = t P + tT +\nqi\ni = 1\nN\n∑\n\n\"Push system\"\nTo minimize TC, we must satisfy the following two\nconditions:\nwhere N = number of processes.\nSince TC is not a continuous function, we have to solve it approximately.\n∂TC\n∂qi\ni =1\nN\n∑\n= 0\n∂2TC\n∂qi\ni =1\nN\n∑\n> 0\n(6.5)\n\n\"Push system\"\nAnalytical Solution for Queues in Decouplers\nHaving designed the manufacturing system, we\nmust replace those X's with mathematical\nexpressions if they can be modeled.\n\n\"Push system\"\nTi = Time the wafer has to be picked up upon the\ncompletion of process j in Module i\nwhere\ntP = total process time up to and including the i-th module\ntT = accumulated transport time up to i-1 (normalized\ntimes)\nTi =tP+tT\n(6.6)\n\n\"Push system\"\nTi (Time the wafer has to be picked up upon the\ncompletion of process j in Module i), may be written as\nNote: Total process tP = sum of the individual process times, tP,j\nTransport times, tT, = sum of the all robot transport time, tT,j\nTi =tP +tT =\ntP,j\nj=1\ni\n∑\n+\ntT,j\n(6.7)\nj=1\ni-1\n∑\n\n\"Push System\"\nnR = number of pick-up moves the robot can make\nin a given period T\nnR = T\ntT\n(6.8)\n\n\"Push System\"\nTime τi\n-- measured from the beginning of each period --\nat which the robot has to pick up a wafer\nwhere Int(x) is a function that rounds x down to the next nearest integer.\nτi =Ti-Int\ntP,j\nj=1\ni\n∑+ tT,j\nj=1\ni-1\n∑\n⎛\n⎝\n⎜\n⎞\n⎠\n⎟ = tP,j\nj=1\ni\n∑+ tT,j-Int\ntP,j\nj=1\ni\n∑+ tT,j\nj=1\ni-1\n∑\n⎛\n⎝\n⎜\n⎞\n⎠\n⎟\n(6.9)\nj=1\ni-1\n∑\n\n\"Push System\"\nT1\n* -T1 = q1\nT2\n* -T2 = q1 + q2\nT3\n* -T3 = q1 + q2 + q3\netc.\n\n\"Push System\"\n\nτi\n* -τi =\nqj\nj=1\ni\n∑=aijqj\n(6.11)\nwherethematrixaij isdefinedas\naij = 0\nwhen i > j\nwhen i < j\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\n\"Push System\"\nWe can approximately determine τi* by solving Eq. (6.9), by determining\nwhere the decouplers may be needed, and by approximating the values of\nqueues.\nτi\n*-τi\n{\n}= aij[ ] qj{}\n(6.12)\n\n\"Push System\"\nwhere\nq{}= a[ ]\n-1 ∆τ\n{ }= 1\naij\nA\n[ ] ∆τ\n{ }= A\n[ ] ∆τ\n{ }\n(6.13)\n\n∆τ = τ i -τi\n*\na[ ] ≡matrix with elements aij\na ji ≡determinant\nof matrix\na[ ]=\nakk = 1\ni=1\nN\n∏\nA\n[ ] = Adj aij[ ]= Aji\n[ ]\n\nAji =\n-1\n(\n)\ni + j M ji\nM ji ≡minor\nof a ji\n\nEquation (6.13) can be solved iteratively. To solve Eq. (6.13), we need to know {∆τ},\nwhich can be approximated by estimating reasonable values for τi* and by solving Eq. (6.9)\nfor τi. The value for τj* can be estimated by adding transport time to τi*, since |τi*- τj*|> tT,\nfor all j's except j=i. The solution can be improved by successive substitution of the\nimproved values of τi*. The determinant |aij| of the triangular matrix {a} is equal to the\nproduct of the diagonal elements.\nSince the best solution is the one that makes the total cycle time TC a minimum, we must\nseek for a set of values of qi that yield a minimum value for the total queue, Σqi. When the\nprecise control of processing time is critical, the queue qi associated with the process should\nbe set to equal to zero.\nTo solve Eq. (6.12) for the best set of queues q's, Oh (1998) and Oh and Lee (1999)\ndeveloped an optimization software program based on genetic algorithm. Multiplying these\nq's by T, we can obtain actual values of queues.\n\nExample 6.1 Determination of the queues of a fixed\nmanufacturing system that processes identical parts\nSteps\nModules Temp. (C)Duration +- tolerance (Seconds)\nA\n50 + 25\nB\n45 +/- 0\nC\n60 + 20\nD\n70 +10\nE\n35 +/- 0\n\nThe process times in Modules B, and E must be precise because of the\ncritical nature of the process. The cycle time is assumed to be the process\ntime plus the transport time both for placement and pick-up of the wafer.\nThe robot must pick up the wafers from a supply bin (load-lock) and\ndeliver it Module A and when the process is finished, it must pick up the\ncontainer from Module G and place it on a cassette. These operations\ntake 6 seconds each.\n\nSolution\nThe number of modules is dependent on the process time TC and the desired\nthroughput rate. The required number of modules is as follows:\nModules\nNumber of Modules\nA\nB\nC\nD\nE\nWithout any decouplers, there are simultaneous demands for the service of the\nrobot as shown in Fig. ex.6.1.a, which shows the time the process is finished in\neach of the modules within a given period T.\n\nOriginal Pick-up Time\nThe original pick-up time without any decouplers. There are conflicts\namong the transport demands from Modules A, B, C, E, and IN, since it\ntakes the robot 0.1 normalized time to travel between the modules.\n0.2\n0.4\n0.6\n0.8\n1.2\n1.4\n1.6\n1.8\nIN\nA\nB\nC\nD\nE\nProcess\nTime (normalized by sending period)\nconflicts\n\n\"Push Systetm\"\nSolution for q's\nThe best solution was obtained by finding a set of values that give the shortest cycle time\nTC solving Eq. (6.12) repeatedly and using a genetic algorithm. The solution yields the\nfollowing values for q's.\nqA = 19.7 sec\nqB = 0 sec\nqC = 9.3 sec\nqD= 9.3 sec\nqE = 0 sec\nThe queues for B and E zeros since the tolerance on these two modules is specified to be\nzero. Therefore, the queues of other modules has been adjusted to make these two queues\nto be zero.\n\nDecoupled Design for Pick-up Time\n0.2\n0.4\n0.6\n0.8\n1.2\n1.4\n1.6\n1.8\nIN\nA\nB\nC\nD\nE\nTime (normalized by sending period)\nThe actual pick-up time for Modules A, B, C, D, and E. A set of queues, qA=19.7,\nqB=0, qC=9.3, qD=9.3, and qE=0, are added to the original process times to resolve\nthe transport conflicts. It takes the robot 0.1 normalized time to travel between the\nmodules. Oh (1998) and Oh and Lee (2000).\n\n\"Push System\"\nOne of the interesting results of this solution is that the\nnumber of combinations for part flow reduces down from\nseveral thousands to a few, because the parts flow\nthrough the manufacturing system along deterministic\npaths.\nWhat the concept of decouplers has done is to change a\ncombinatorial problem into a periodic function that\nrepeats itself with a given cycle that is deterministic.\n\nWhat is the main message of this section?\n1.\nWhen identical parts processed by identical processes, we can\nuse a \"Push System\".\n2.\nBy decoupling a coupled design, we have reduced a problem that\nused to be treated as a combinatorial problem to a deterministic problem\nthat can be solved \"exactly\"!\n3.\nThe number of possible combinations was reduced from several\nthousands to two! The throughput rate is also controlled precisely\nbecause the system has been designed with a given throughput in mind.\n4.\nThe decoupled design of a manufacturing system that processes\nidentical parts can be modified without much effort.\n\nWhat is the main message of this section?\n5.\nThe shortcomings of the traditional approach to these problems\nsuch as operations research (OR) can be overcome by developing designs\nthat satisfy the Independence Axiom.\n6.\nThe ideas presented in this section can be applied to a variety of\nsystem problems that involve design, analysis, and optimization.\n7.\nThe important message is that if the system design violates the\nIndependence Axiom, it is extremely difficult to achieve the functional\nrequirements of a manufacturing system.\n8.\nThis solution does not allow random variations in process times.\nHow would you solve the problem with random variations?"
    },
    {
      "category": "Lecture Notes",
      "title": "lec330_pt2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/034f7027a6e8c5f5e982ae19fad6e401_lec330_pt2.pdf",
      "content": "Chapter 6\nDesign of Manufacturing Systems II\n\"Pull System\"\n\nEvolution of cost, quality and worker's satisfaction:\n1. Handicraft, 2.Taylorism, 3. High volume automation, 4.\nFlexible automation, 5. Concurrent engineering\n(From Sohlenius, 2005)\nFigure by MIT OCW. After Sohlenius, 2005.\nCost\nQuality customer's satisfaction\nKEY\n1 = Handicraft\n2 = Taylorism\n3 = High Volume Automation\n4 = Flexible Automation\n5 = Concurrent Engineering\nWorker's\nsatisfaction\n\nDriving Forces for Manufacturing Systems\n(From Sohlenius 2005)\nFigure by MIT OCW.\nThe 50's\nEfficiency of\nmanual labor\nEfficiency of\nmachine-tool\nutilization\nMinimize capital\ncost for products\nin process\nQuality &\nproductivity\nholistically\nCustomer,\nconcurrent\ndesign, lean\nproduction,\nenvironment\nOrder control\ncustomer adapt\nThe 60's\nThe 70's\nThe 80's\nThe 90's\n\nNumerical Control Machine Tool in 1951\n-J. T. Parsons, (Traverse City, Michigan)\nSmall machine shop with milling machine and dial\ngages\n-U.S. Air Force funding of the Servo-mechanisms Lab\n(Gordon Brown, Jay Forrester, etc.)\n-Controversy on credit for NC machine tool\ndevelopment\n-Parsons received a National Technology Medal from\nPresident Ronald Reagan\n\nManufacturing Systems Concept proposed in 1960's\nby M. Eugene Merchant (1970)\nFigure by MIT OCW.\nPERFORMANCE\nCOST AND CAPABILITIES\nCREATIVITY\n(product concepts)\nNEEDS\n(product requirements)\nfor production\nPRODUCTION\nPLANNING\nprogramming\nPRODUCTION\nCONTROL\nfeedback,\nsupervisory,\nadaptive\noptimizing\nPRODUCTION\nEQUIPMENT\nincluding\nmachine tools\nPRODUCTION\nPROCESSES\nremoval,\nforming,\nconsolidative\nFINISHED\nPRODUCTS\nfully assembled,\ninspected &\nready for use\nPRODUCT\nDESIGN\n\nCIRP Definition of Manufacturing System\nThe manufacturing system is defined as\n\"An organization in the manufacturing industry\nfor the creation of production. In the\nmechanical and electrical engineering\nindustries a manufacturing system in general\nhas an integrated groups of functions: They\nare the sales, design, manufacturing\nproduction, and shipping functions. A\nresearch function may provide a service to one\nor more of the other functions.\"\n\nIntroduction to Manufacturing System\nWhat are typical manufacturing systems?\nTypically, manufacturing systems are classified in terms of the\nphysical machine arrangement.\nProduction job shop\nTransfer lines\nFlow lines\ngroup technology\nLean, linked cell manufacturing systems\n\nIntroduction to Manufacturing System\nThe cost of most manufacturing systems varies\ndepending on\nProduction volume\nDegree of automation\nLabor cost\nEquipment costs\nLocation.\n\nAxiomatic Design Steps\nfor\na \"Pull System\"\nStep 1. Choose FRs in the Functional\nDomain\nFR1 = Maximize the return on\ninvestment (ROI)\nROI= Sales-Cost\nInvestment\n\nAxiomatic Design Steps\nStep. 2. Mapping of FRs in the Physical\nDomain to Determine DPs\nDP1a = Manufacturing system to provide\nproducts at a minimum cost\nor\nDP1b = Manufacturing system design to provide\nproducts customers demand\n\nAxiomatic Design Steps\nStep 3. Decompose FR1 in the Functional\nDomain - Zigzagging between the domains\nFR11 = Increase the sales revenue\nFR12 = Minimize the manufacturing cost\nFR13 = Minimize manufacturing investment\nROI = Sales-Cost\nInvestment\n\nAxiomatic Design Steps\nStep 4. Find the Corresponding DP1x's by Mapping\nFR1x's in the Physical Domain\nDecomposition of DP1a\nDP1a1 = Maximization of production output\nDP1a2 = Unit cost minimization\nDP1a3 = Machine utilization\nDecomposition of DP1b\nDP1b1 = Product design and manufacture to\nmaximize customer satisfaction\nDP1b2 = Target production cost\nDP1b3 = Investment in production with a systems\nthinking approach\n\nAxiomatic Design Steps\nStep 5. Determine the Design Matrix\nThe second design represented by DP1ax's satisfies FR1x.\n(2)\nSimilarly, the second design represented by DP1bx's satisfies\nFR1x.\n(4)\nFR11\nFR13\nFR12\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nXX 0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP1\na1\nDP1\na3\nDP1a2\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\nFR11\nFR12\nFR13\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP1\nb1\nDP1\nb2\nDP1b3\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 6. Zigzag\nDecompose FR11, FR12 and FR13 by going from the Physical\nto the Functional Domain and determine the corresponding\nDPs (Level 3)\nStep 6-a. Decompose FR11 (Increase the sales revenue) and\nDP11 (Product design and manufacture to\nmaximize customer satisfaction) and determine DPs\nFR111 = Sell products at the highest acceptable price\nFR112 = Increase market share (volume)\nDP111 = Customer perceived value of product improved\nDP112 = Broad product applications\n(6)\nFR111\nFR112\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX0\nXX\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP111\nDP112\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\nAxiomatic Design Steps\nStep 6. Zigzag\nStep 6-a. Decompose FR11 (Increase the sales revenue) and\nDP11 (Product design and manufacture to\nmaximize customer satisfaction) and determine DPs\nFR111 = Sell products at the highest acceptable price\nFR112 = Increase market share (volume)\nDP111 = Customer perceived value of product improved\nDP112 = Broad product applications\n(6)\nFR111\nFR112\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX0\nXX\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP111\nDP112\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\nSR =\n(Pricei\ni = 1\nn\n∑\n× Volumei)\n\nAxiomatic Design Steps\nStep 6-b. Decompose FR12 (Minimize the manufacturing\ncost) and Determine DPs\nFR12 (Minimize the production cost) may be decomposed with\nDP12 (Target production cost) in mind as\nFR121 = Reduce material costs\nFR122 = Reduce operational activity costs\nFR123 = Reduce overhead\nThe corresponding DPs may be stated as:\nDP121 = Target price given to suppliers\nDP122 = Targeted performance of operational activities\nDP123 = Right size business processes\nThe elements of the production cost are the cost of raw materials and\ncomponents, the direct cost, indirect cost, and administrative costs or\noverhead.\n\nAxiomatic Design Steps\nStep 6-b. Decompose FR12 (Minimize the manufacturing\ncost) and Determine DPs\nFR12 (Minimize the production cost) may be decomposed with\nDP12 (Target production cost) in mind as\nFR121 = Reduce material costs\nFR122 = Reduce operational activity costs\nFR123 = Reduce overhead\nThe corresponding DPs may be stated as:\nDP121 = Target price given to suppliers\nDP122 = Targeted performance of operational activities\nDP123 = Right size business processes\nDesign Matrix\nFR121\nFR122\nFR123\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\n0X0\n00X\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP121\nDP122\nDP123\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 6-c. Decompose FR13 (Minimize manufacturing\ninvestment) and select DPs\nFR13 (Minimize production investment) may be decomposed with\nDP13 (Investment in production with a system thinking approach) in\nmind as\nFR131 = Acquire machines with cycle time\nthe minimum takt time\nFR132 = Ensure flexibility to accommodate capacity\nincrements at lowest cost\nFR133 = Develop flexible tooling\nFR134 = Ensure flexibility to accommodate future\nproducts\n≤\n\nAxiomatic Design Steps\nFR131 = Acquire machines with cycle time (less than or equal to) the\nminimum takt time\nFR132 = Ensure flexibility to accommodate capacity\nincrements at lowest cost\nFR133 = Develop flexible tooling\nFR134 = Ensure flexibility to accommodate future\nproducts\nThe corresponding DPs may be stated as:\nDP131 = Machine design focused on customer demand\npace and value added work\nDP132 = Linked cell manufacturing systems\nDP133 = Flexible tooling design\nDP134 = Movable machines and reconfigurable\nstations to enable new cell design\n\nAxiomatic Design Steps\nStep 6-c. Decompose FR13 (Minimize manufacturing\ninvestment) and select DPs\nFR13 (Minimize production investment) may be decomposed with\nDP13 (Investment in production with a system thinking approach) in\nmind as\nDesign Matrix\nFR131\nFR132\nFR133\nFR134\n⎧\n⎨\n⎪\n⎩\n⎪\n⎫\n⎬\n⎪\n⎭\n⎪\n=\nX 000\nXX 00\n00 X 0\n000 X\n⎡\n⎣\n⎢\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\n⎥\nDP 131\nDP 132\nDP 133\nDP 134\n⎧\n⎨\n⎪\n⎩\n⎪\n⎫\n⎬\n⎪\n⎭\n⎪\n\nAxiomatic Design Steps\nStep 7. Fourth Level Decomposition\nStep 7-a. FR11 - Sales Revenue Branch\nFunctional requirement FR111 (Sell products at the highest\nacceptable price) must be decomposed with DP111 (Customer\nperceived value of product improved).\nFR111 may be decomposed as follows:\nFR1111 = Increase the appeal of products by\nproviding desired functions and features\nFR1112 = Increase the reliability of products\nFR1113 = On time delivery (for a variety of products)\nFR1114 = Decrease variation of the delivery time\nFR1115 = Provide effective after sales service\n\nAxiomatic Design Steps\nStep 7. Fourth Level Decomposition\nStep 7-a. FR11 - Sales Revenue Branch\nThe corresponding DPs are:\nDP1111 = Design of high quality products that meet\ncustomer needs as specified by FRs and Cs\nDP1112 = Robust design of products\nDP1113 = Production based on actual demand\nDP1114 = Predictable production output\nDP1115 = Service network\nThe design equation and matrices are as follows:\nFR 1111\nFR 1112\nFR 1113\nFR 1114\nFR 1115\n⎧\n⎨\n⎪ ⎪\n⎩\n⎪\n⎪\n⎫\n⎬\n⎪ ⎪\n⎭\n⎪\n⎪\n=\nX 0000\nXX 000\n0 XX 00\n0 XXX\n0 X 00 X\n⎡\n⎣\n⎢\n⎢\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\n⎥\n⎥\nDP 1111\nDP 1112\nDP 1113\nDP 1114\nDP 1115\n⎧\n⎨\n⎪ ⎪\n⎩\n⎪\n⎪\n⎫\n⎬\n⎪ ⎪\n⎭\n⎪\n⎪\n\nAxiomatic Design Steps\nStep 7. Fourth Level Decomposition\nFR112 (Increase market share (volume)) must be decomposed with\nDP112 (Broad product applications).\nFR111 may be decomposed as follows:\nFR1121 = Development of niche (new or custom)\nproducts\nFR1122 = Development of multiple solutions within\nthe product line\nThe corresponding DPs are:\nDP1121 = Short product development process\nDP1122 = Product variety\nThe design equation and matrices are as follows:\n(10)\nFR1121\nFR1122\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX0\nXX\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP1121\nDP1122\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\nAxiomatic Design Steps\nStep 7-b. FR12 - Production Cost Branch\nFR 122 (Reduce operational activity costs) and DP122 (Target production\ncost) may be decomposed as\nFR1221 = Reduce transport costs\nFR1222 = Reduce setup costs\nFR1223 = Reduce costs of manual operations (mach.\nload/unload, assembly, inspect.)\nFR1224 = Reduce fabrication costs\nFR1225 = Reduce maintenance costs\nThe corresponding DPs are:\nDP1221 = Product-flow oriented layout\nDP1222 = Setup performed with reduced resources\nDP1223 = Effective use of the workforce\nDP1224 = Fabrication parameters based on takt time to increase\ntool life\nDP1225 = Total productive maintenance program\nThe design is an uncoupled design.\n\nAxiomatic Design Steps\nStep 8. Fifth Level Decomposition\nStep 8-a. FR11 - Sales Revenue Branch\nFR 1112 (Increase the reliability of products) and DP1112 (Robust design of products)\nmay be decomposed as\nFR11121 = Determine the lowest tolerable stiffness of the product\nFR11122 = Determine the design range for manufacturing tolerance\nFR11123 = Select manufacturing operations with a system range that is\nwithin the design range\nThe corresponding DPs are:\nDP11121 = Mathematical model for stiffness determination\nDP11122 = Mathematical model for derivation of design range for PVs\nDP11123 = Selected machines with appropriate system range for PVs\nThe design equation and matrices are as follows:\n(12)\nThe design matrix is triangular and thus, it is a decoupled design.\nFR11121\nFR11122\nFR11123\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP11121\nDP11122\nDP11123\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 8. Fifth Level Decomposition\nStep 8-a. FR11 - Sales Revenue Branch\nFunctional requirement FR1113 (Decrease mean delivery time) must be decomposed\nwith DP1113 (Production based on actual demand).\nFR1113 may be decomposed as follows:\nFR11131 = Produce at the customer demand cycle time (or takt time)\nFR11132 = Produce the mix of each part type demanded per time interval\nFR11133 = Be responsive to the downstream customer's demand time\ninterval\nThe corresponding DPs are:\nDP11131 = Linked-cell manufacturing system balanced to customer demand\nDP11132 = Level production\nDP11133 = Reduced response time across the production system\nThe design matrix\nFR11131\nFR11132\nFR11133\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\n0X0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP11131\nDP11132\nDP11133\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nA Linked-cell Manufacturing System to Illustrate the Concept.\nThe machines are arranged in a cellular structure. In this figure, two workers are\nmoving in two loops opposite to the flow of the work piece (Cochran, 1998).\nFigure by MIT OCW.\nMachine both\nends\nBroach end slots\nDrill cross holes\nTurn piston groves\nDeburr\nScan harden journal\nStraighten\nCenterless grinder\nBroach teeth\nWash\nResistance harden teeth\nInduction temper\nStraighten\nCrack detect\nBuff OD rack\nSuper finish OD\nAssemble pistons\nLap journal\nFinal wash\n(rust prevent)\nOUT\nIN\n\nAxiomatic Design Steps\nStep 8. Fifth Level Decomposition\nStep 8-a. FR11 - Sales Revenue Branch\nFunctional requirement FR1114 (Decrease variation of the delivery time) and DP1114\n(Predictable production output) must be decomposed.\nFR1114 may be decomposed as follows:\nFR11141 = Respond quickly to production problems\nFR11142 = Produce with a predictable quality output\nFR11143 = Produce with a predictable time output\nThe corresponding DPs are:\nDP11141 = Visual control system to provide rapid response\nDP11142 = Production with no defects and the ability to identify root cause\nDP11143 = Predictable production resources\nThe design equation and matrices are as follows:\n(14)\nFR11141\nFR11142\nFR11143\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP11141\nDP11142\nDP11143\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 8. Fifth Level Decomposition\nStep 8-b. FR12 - Manufacturing Cost Branch\nFR 1223 (Reduce costs of manual operations (mach. load/unload, assembly,\ninspect.)) may be decomposed with DP122 (Effective use of the workforce) in mind as\nFR12231 = Reduce tasks that tie the operator to the machine\nFR12232 = Enable worker to operate more than one machine or station\nFR12233 = Plan the resources to produce with different production volumes\nThe corresponding DPs are:\nDP12231 = Machines & stations designed to run autonomously\nDP12232 = Work-loops implemented in a cell layout\nDP12233 = Standardized work-loops designed for different volumes\nThe design equation and matrices are as follows:\n(15)\nFR12231\nFR12232\nFR12233\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP12231\nDP12232\nDP12233\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 9. Sixth Level Decomposition: FR11 - Sales Revenue Branch\nFunctional requirement FR11131 (Produce at the customer demand cycle time (or\ntakt time) and DP11131 (Linked-cell manufacturing system balanced to customer\ndemand) may be decomposed as follows:\nFR111311 = Define customers, parts, and volumes for each sub-system or\ncell within production\nFR111312 = Design sub-system for a range of volume fluctuation\nDP111311 = Configuration of sub-systems to enable flow at the ideal range\nof cycle times\nDP111312 = Cell or sub-system designed to meet the minimum takt time\nThe design equation and matrices are as follows:\n(16)\nFR111311\nFR111312\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n=\nX 0\nXX\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nDP11131\nDP11132\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\nAxiomatic Design Steps\nFR11132 (produce the mix of each part type demanded per time interval) and DP11132\n(Level production) may be decomposed as follows:\nFR111321 = Produce in small run sizes\nFR111322 = Convey in small and consistent quantities\nFR111323 = Produce and supply only the parts needed\nThe corresponding DPs are:\nDP111321 = Short setup time\nDP111322 = Standard containers that hold small amounts of parts\nDP111323 = Information system to produce only the parts needed (Pull\nsystem)\nThe design equation and matrices are as follows:\n(17)\nThis design is a decoupled design and thus, satisfies the Independence Axiom.\nFR111321\nFR111322\nFR111323\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP111321\nDP111322\nDP111323\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nFR11133 (be responsive to the downstream customer's demand time interval) must be\ndecomposed with DP11133 (reduced response time across the production system) in\nmind. FR11133 may be decomposed as\nFR111331 = Reduce sub-system replenishment time to less than the\ncustomer demand interval.\nFR111332 = Ensure that sufficient parts are available to satisfy the\ncustomer demand interval.\nThe corresponding DPs are\nDP111331 = Elimination of wastes that cause excess lead-time\nDP111332 = Standard work-in-process (swip) quantity of parts\nThe design equation and matrices are as follows:\n(18)\nThis design is a decoupled design and thus, satisfies the Independence Axiom.\nFR111331\nFR111332\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n= X\nX\nX\n⎡\n⎣\n⎤\n⎦\nDP111331\nDP111332\n⎧ ⎨ ⎩\n⎫ ⎬ ⎭\n\nAxiomatic Design Steps\nFR11142 (produce with a predictable quality of output) must be decomposed with\nDP11142 (production with no defects and with the ability to identify root cause) in\nmind.\nFR111421 = Ensure capable processes.\nFR111422 = Decrease sources of variation due to multiple flow paths.\nFR111423 = Prevent making defects throughout.\nFR111424 = Do not advance defects to the next operation.\nThe corresponding DPs are:\nDP111421 = Capable machines, equipment, tools, and fixtures\nDP111422 = Single path through manufacturing system and external\nsupplier (no parallel processing)\nDP111423 = Use of standards and devices to prevent defects\nDP111424 = Use of successive checks to detect defects if they do occur\nThe design equation and matrices are as follows:\n(19)\nFR111421\nFR111422\nFR111423\nFR111424\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX\nX\nX\nX\nX\nX\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nDP111421\nDP111422\nDP111423\nDP111424\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n\nAxiomatic Design Steps\nStep 10. Seventh-Level Decomposition: FR11 - Sales Revenue Branch\nFR111312 (design sub-system for a range of volume fluctuations) must be\ndecomposed with DP111312 (sub-system designed to meet the minimum TAKT time) in\nmind.\nFR1113121 = Select appropriate manufacturing process.\nFR1113122 = Design manufacturing process cycle time at each station to\nmeet minimum TAKT time.\nFR1113123 = Design station fixtures to enable minimum TAKT time.\nThe corresponding DPs are:\nDP1113121 = Physics of the manufacturing process\nDP1113122 = Manufacturing process work content defined to be less than\nthe minimum TAKT time\nDP1113123 = Fixture design to provide quick load/unload (within\nrequired tolerance)\nThe design equation and matrices are\n(20)\nFR1113121\nFR1113122\nFR1113123\n⎧\n⎨\n⎩\n⎫\n⎬\n⎭\n=\nX\nX\nX\nX\nX\nX\n⎡\n⎣\n⎢\n⎤\n⎦\n⎥\nDP1113121\nDP1113122\nDP1113123\n⎧\n⎨\n⎩\n⎫\n⎬\n⎭\n\nFlow Chart of the Manufacturing System Design\nM1\nM 11\nSummation Junction\nControl Junction\nM 111\nM1114\nM 1113\nM 11131\nM 1111\nM 1112\nM 11121\nM11122\nM 11123\nM111312\nM 1113121\nM 1113122\nM 1113123\nM 11132\nM 111321\nM 111322\nM111323\nM 111311\nM 11133\nM 111331\nM 111332\nM 11142\nM 111422\n<111423\nM 111424\nM 111421\nM 11141\nM 11143\nM 1115\nM 112\nM 1121\nM1122\nM13\nM 132\nM133\nM134\nM 12\nM121\nM123\nM122\nM 1222\nM 1221\nM 1224\nM 1225\nM1223\nM 12231\nM 12232\nM12233\nM 131\n\nUse of the Flow Chart of\nthe Manufacturing System Design\n1.\nDiagnosis\n2.\nEngineering changes\n3.\nJob assignment and management\n4.\nDistributed systems\n5.\nSoftware development"
    },
    {
      "category": "Lecture Notes",
      "title": "lec404.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/2-882-system-design-and-analysis-based-on-ad-and-complexity-theories-spring-2005/fd4f0c29134e8704d2a4110d9383e6da_lec404.pdf",
      "content": "Complexity\nReference:\nNam P. Suh, Complexity: Theory and Applications,\nOxford University Press, 2005\n\nWhy complexity?\n- In many fields (engineering, economics, politics, academic\nadministration, etc.), one of the major goals is to reduce\ncomplexity.\n- In many fields, we want to understand the causes for\ncomplexity.\n- There is a great deal of confusion what we mean by\ncomplexity.\n- Computer scientists and mathematicians have considered\ncomplexity, which may not be applicable to design and\nengineering fields.\n(David P. Feldman and Jim Crutchfield, A Survey of \"Complexity Measures\", 1998 Complex Systems Summer School,\nSanta Fe Institute, 11 June 1998.\n\nIssues related to complexity\n- Why is \"something\" complex?\n- Why is \"something\" that appeared to be complex is\nnot complex once we understand it?\n- What is complexity?\n- Is it better to reduce complexity of an engineered\nsystem?\n- How do we reduce complexity?\n- Is the complexity of engineering systems different\nfrom that of socio-economic-political systems?\n- Is the complexity of natural systems different from\nengineered systems?\n\nConsider the task of cutting a rod?\n- Is this a complex task?\n- Suppose we must cut it to 1 m +/- 1 cm. Is\nthis a complex task?\n- Suppose we must cut the rod to 1 m +/- 1\nmicron?\n\nConsider the task of controlling the flow rate\nand the temperature of water using the faucet\nshown below?\nFigure removed for copyright reasons.\nSee Figure E3.3a in Suh, N. P.\nAxiomatic Design: Advances and Applications. New York, NY:\nOxford University Press, 2001. ISBN: 0195134664.\n\nIs this a complex task?\n- Suppose the task is to control the flow rate 1 +/- 0.3\ngallons per minute and the temperature within 90\n+/- 25 F.\n- Is it a complex task? Why? Why not?\n- If the flow rate has to be controlled to 1 gallon +/-\n0.01 gallons/minute and the temperature within 60\n+/- 0.2 F, it appears to be complex.\n- The task is more complex when these two FRs are\ncoupled by the design!\n\nInternational Space Station Beta Gimbal\nAssembly Failure\n\nOther basic questions:\n\"How do we guarantee the long-term\nstability of engineered systems?\"\n\"Why is there so much wasted effort in\ndeveloping new products?\"\n\n\"What is complexity?\"\n\nDeparture from Conventional View of\nComplexity\n- Most people have been trying to\nunderstand complexity in terms of\nphysical things.\n\nMany Different Definitions of\nComplexity\n- Computational complexity\n- Algorithmic complexity\n- Probabilistic complexity\n- ......\n- ......\n\nDeparture from Conventional View of\nComplexity\n- Most people have been trying to\nunderstand complexity in terms of\nphysical things.\n- Complexity must be viewed in the\nfunctional domain.\n\nFunctional Domain vs Physical Domain\n\"What we\nwant to\nachieve or\nknow\"\n{FRs}\n\"How w e\nplan to\nachieve\nthe goal\"\n{DPs}\n\nConsider the problem associated with\nsatisfying an FR.\nFR\nProb.\nDensity\nDesign\nrange\n\nIf the system range is inside the design range, FR\ncan easily be achieved. Therefore, it is not complex.\nProb. Density\nFunctional\nRequirement\nDesign\nRange\nSystem\nRange\n\nIn this case, FR cannot always be satisfied. There is\na finite uncertainty. Therefore, the task of\nachieving the FR appears to be complex.\nProb. Density\nFunctional\nRequirement\nDesign\nRange\nSystem\nRange\n\nDefinition of Complexity\nComplexity is defined as a measure of\nuncertainty in satisfying the functional\nrequirements.\n\nDefinition of Complexity as applied\nto natural science\nComplexity is defined as a measure of\nuncertainty in our ability to predict a certain\nnatural phenomenon to the desired accuracy.\n\nDefinition of Complexity\nComplexity,\nwhich is defined as a measure of uncertainty\nin satisfying the FRs,\nis a relative quantity.\n\nFour Different Kinds of Complexity\n- Time-Independent Real Complexity\n- Time-Independent Imaginary Complexity\n- Time-Dependent Combinatorial Complexity\n- Time-Dependent Periodic Complexity\n\n\"Complexity\" can be reduced by taking the\nfollowing actions:\n- Reduce Time-Independent Real Complexity\n- Eliminate Time-Independent Imaginary Complexity\n- Transform Time-Dependent Combinatorial\nComplexity into Time-Dependent Periodic Complexity\nImportant concept: Functional Periodicity\n\nFunctional Periodicity\n- Temporal periodicity\n- Geometric periodicity\n- Biological periodicity\n- Manufacturing process periodicity\n- Chemical periodicity\n- Thermal periodicity\n- Information process periodicity\n- Electrical periodicity\n- Circadian periodicity\n- Material periodicity\n\nTime-Independent Real Complexity\nTime-Independent Real Complexity --> Infinity.\nProb. Density\nFunctional\nRequirement\nDesign\nRange\nSystem\nRange\n\nWhat happens when there are many FRs?\n- Most engineered systems must satisfy many\nFRs at each level of the system hierarchy.\n- The relationship between the FRs determine\nhow difficult it will be to satisfy the FRs within\nthe desired certainty and thus complexity.\n\nIf FRs are not independent from each other,\nthe following situation may exist.\nPro b. De nsity\nFR1\nDe si g n\nRa n ge\nSyste m\nRa n ge\nPro b. De nsity\nFR2\nDe si g n\nRan ge\nSyste m\nRan ge\n\nAxiomatic design:\nMapping, hierarchies, and zigzagging\nFunctional\nDomain\nCustomer\nDomain\nPhysical\nDomain\nProcess\nDomain\nWhat?\nHow ?\nWhat?\nHow ?\nCustomer Needs\nFunctional\nRequirements\nDesign\nParameters\nProcess Variables\n\nDesign Axioms\n- Axiom 1 The Independence Axiom\nMaintain the independence of functional\nrequirements.\n- Axiom 2 The Information Axiom\nMinimize the information content.\n\nDesign Equation and Matrix\nThe relationship between {FRs} and {DPs} can be written as\n{FRs} = [A] {DPs}\nWhen the above equation is written in a differential form as\n{dFRs} = [A] {dDPs}\n[A] is defined as the Design Matrix given by elements :\nAij = ∂FRi/∂DPi\n\nUncoupled, Decoupled, and Coupled Design\n-\nDecoupled Design\n-\nCoupled Design\nAll other design matrices\nA\n[ ] =\nA11\nA22\nA33\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\nA\n[ ]=\nA11\nA21 A22\nA31 A32 A33\n⎡\n⎣\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\n- Uncoupled Design\n\nDesign Range, System Range, and\nCommon Range\nProbab.\nDensity\nDesign Rang e\nSystem\nRang e\nArea o f\nCommon\nRang e (Ac)\nFR\nBias\nVariation\nfrom the\npeak valu e\nTarget\n\nCoupling Increases Time-Independent Real\nComplexity!\nReal complexity of a decoupled system is, in general, larger than\nthat of a uncoupled design.\nUncoupled\nDecoupled\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDP\nDP\nDP\nA\nA\nA\nFR\nFR\nFR\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\n⎥\n⎥\n⎥\n⎦\n⎤\n⎢\n⎢\n⎢\n⎣\n⎡\n=\n⎪⎭\n⎪⎬\n⎫\n⎪⎩\n⎪⎨\n⎧\nDP\nDP\nDP\nA\nA\nA\nA\nA\nA\nFR\nFR\nFR\n∆DP1 = ∆FR1\nA11\n∆DP2 = ∆FR2\nA22\n∆DP3 = ∆FR3\nA33\nA\nDP\nA\nDP\nA\nFR\nDP\nA\nDP\nA\nFR\nDP\nA\nFR\nDP\n∆\n⋅\n-\n∆\n⋅\n-\n∆\n=\n∆\n∆\n⋅\n-\n∆\n=\n∆\n∆\n=\n∆\n\nComplexity of a Knob Design\nMe tal\nS h af t\nIn jec tio n\nm old ed\nn ylo n K n ob\nM ill ed Fl at\nEn d o f th e\nsh af t\nS lot\nKnob designs\n\nWhich is more complex?\nMe tal\nShaft\nInjec tio n\nmold ed\nnylo n K nob\nMill ed Flat\nEnd of th e\nshaft\nSlot\nMill ed Flat End\nof th e sha ft\nA\nA\nSe cti on view A A\n(a)\n(b)\nWhich knob has a higher complexity?\nKnob designs\n\nConventional Engine: Real Complexity\nSchematic removed for copyright reasons.\nConventional Engine\n\nA New Engine\nSchematic removed for copyright reasons.\nNew Engine\n\nSimulation Results of the New Engine (?)\nNew Engine\n\nWhat is Time-Independent Imaginary\nComplexity?\nImaginary complexity is defined as:\nUncertainty that is not real uncertainty,\nbut arises because of the \"designer's\"\nlack of knowledge and understanding of a\nspecific \"design\" itself.\n\nWhat is Time-Independent Imaginary\nComplexity?\nExample:\nCombination Lock\nImaginary complexity changes with a\npriori knowledge:\n(a) Without knowing any of the numbers\n(b) Know the numbers but the sequence is not\ngiven\n(c) Know both the numbers and the sequence\n\nTime-Independent Imaginary Complexity\nWhat is Imaginary Complexity ?\nProb. Density\nFunctional\nRequirement\nDesign\nRange\nSystem\nRange\n\nExample of Imaginary Complexity\n\nSelenium-\ncoated\nAluminum\ncylinder\nWiper\nRoll\nOriginal\nimage\nLight\nToner\ncontainer\nPaper-\nFeed\nRoll\nImage is\ncreated\nToner is coated\non surfaces of\nSelenium with\nelectric charges\nPaper\nSchematic drawing of the xerography based printing machine\n\nTime-Independent Imaginary Complexity\nConsider a triangular design matrix for a decoupled\ndesign:\nCI = - log2 P = log2 n!\nFR1\nFR2\nFR3\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\n=\nX00\nXX0\nXXX\n⎡\n⎣\n⎢\n⎢\n⎢\n⎤\n⎦\n⎥\n⎥\n⎥\nDP1\nDP2\nDP3\n⎧\n⎨\n⎪\n⎩ ⎪\n⎫\n⎬\n⎪\n⎭ ⎪\nn\nn!\np = 1/ n!\n0.5\n0.1667\n0.04167\n0.8333 x 10-2\n0.1389 x 10-2\n5,040\n0.1984 x 10-3\n40,320\n0.2480 x 10--4\n\nTime-Independent Imaginary Complexity\nCR = 0\n(CI)max = log2 m!\nProb. Density\nFunctional\nRequirement\nDesign\nRange\nSystem\nRange\n\nCMP Machine Designed and Built by Four\nNew Graduate Students\nFabricated machine\nCAD model\nFigures removed for copyright reasons.\nSee Figure 8.20 and 8.21 in Suh, N. P.\nAxiomatic Design: Advances and Applications. New York, NY:\nOxford University Press, 2001. ISBN: 0195134664.\n\nCMP machine\n- 2 platen, single head (200 mm)/Multi-step wafer polishing.\n- Developed at MIT to meet the research needs.\n- 9 servo motors/4 pumps/8 pressure regulators/60 on-off controllers.\n\nControl hardware\nAC Switch Panel\nDC Distribution Panel\nEncoder Filter\nMaster Switches\nADwin Controller\nServo Amplifiers\nServo Amplifiers & DC Supplies in the Back Panel\n\nTime-Dependent Combinatorial\nComplexity\nTime-dependent combinatorial complexity\narises because the future events occur in\nunpredictable ways and thus cannot be\npredicted.\nFor example, it occurs when the system\nrange moves away from the design range\nas a function of time.\n\nTime-Dependent Combinatorial Complexity\nPro b. D en sity\nFR\nDes ign\nRan ge\nThe Sy st e m Ra nge chan ge s\ncon tin uou sly a s a func tion of ti me.\nTim e Æ\n\nExample\nAirline Schedule\n\n3. Time-Dependent Combinatorial Complexity\nThe combinatorial complexity is defined as the complexity\nthat increases as a function of time due to a continued\nexpansion in the number of possible combinations with\ntime, which may eventually lead to a chaotic state or a\nsystem failure.\nExample: Job shop scheduling\nFuture scheduling is affected by the decisions made\nearlier and it's complexity is a function of the decisions made over its\npast history\n\n4. Time-Dependent Periodic Complexity\nThe periodic complexity is defined\nas the complexity that only exists in a finite period,\nresulting in a finite and limited number of probable\ncombinations.\nExample: Airline flight scheduling\nAll of the uncertainties introduced during the course of a\nday terminate at the end of a 24-hour cycle, and hence the complexity\ndoes not extend to the following day\n\nReduction of Time-Dependent Complexity\nTransform\na design with time-dependent combinatorial\ncomplexity\nto\na design with time-dependent periodic\ncomplexity\n\n\"Complexity\" can be reduced by taking the\nfollowing actions:\n- Reduce Time-Independent Real Complexity\n- Eliminate Time-Independent Imaginary Complexity\n- Transform Time-Dependent Combinatorial\nComplexity into Time-Dependent Periodic Complexity\n\nReduction of Combinatorial Complexity\nHow?\nThrough\n\"Re-initialization\" of the system\nby defining\na \"Functional Period\".\nNote: Functional period is defined by a repeating set of\nfunctions, not by time period, unless \"time\" is a set of\nfunctions.\n\nTransformation of Time-Dependent Combinatorial\nComplexity\n- Basic Idea\n1.\nMake sure that the design satisfies the\nIndependence Axiom.\n2.\nIdentify a set of FRs that undergoes a cyclic\nchange and has a functional period.\nIdentify the functional requirement that\nmay undergo a combinatorial process\n4.\n6.\n\"Reinitialization\"\n5.\nSet the beginning of the cycle as t=0\nT C com (FR i) ⇒\nC per (FR i )\n\nFunctional Periodicity\n-\nThe functional periodicity are the following types:\n(1) Temporal periodicity\n(2) Geometric periodicity\n(3) Biological periodicity\n(4)\nManufacturing process periodicity\n(5) Chemical periodicity\n(6) Thermal periodicity\n(7) Information process periodicity\n(8) Electrical periodicity\n(9) Circadian periodicity\n(10) Materials periodicity\n\nExample: Productivity of A Manufacturing\nSystem that Consists of Many Sub-Systems\n- How do we maximize the productivity of\na manufacturing system?\n- Example: Semiconductor Manufacturing"
    }
  ]
}