{
  "course_name": "Advanced System Architecture",
  "course_description": "This course provides a deep understanding of engineering systems at a level intended for research on complex engineering systems. It provides a review and extension of what is known about system architecture and complexity from a theoretical point of view while examining the origins of and recent developments in the field. The class considers how and where the theory has been applied, and uses key analytical methods proposed. Students examine the level of observational (qualitative and quantitative) understanding necessary for successful use of the theoretical framework for a specific engineering system. Case studies apply the theory and principles to engineering systems.",
  "topics": [
    "Engineering",
    "Systems Engineering",
    "Systems Design",
    "Engineering",
    "Systems Engineering",
    "Systems Design"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nLearning Objectives\n\nWhat We Will Do in This Course\n\nRead the academic literature, including our own notes and papers.\n\nLearn and practice some existing analytical methods, mainly network methods.\n\nAppreciate the wide range of domains where theory and methods have been applied.\n\nCritique existing theory and methods.\n\nShare our knowledge and experience.\n\nAnalyze some real systems in detail.\n\nDistil common concepts that emerge from theory and that apply to many kinds of systems.\n\nHow to Learn\n\nWe will learn about architecture/structure by examining a wide variety of systems such as biological, sociological, economic at a variety of levels in addition to the technological and organizational systems of most direct interest to us, because\n\nThese systems are similar in many ways, perhaps more than we think.\n\nSince we want to influence structure (not just accept it as we are interested in\ndesign\n), we will also explore how structure is determined by looking at system typologies and constraints that influence or determine the structure.\n\nWe will use network methods - a choice of level of abstraction.\n\nImportant Topics at the \"Research Front\"\n\nHow useful are the metrics that exist for architectural or structural attributes in the case of Engineering Systems (high complexity and heterogeneity)?\n\nCan we invent metrics for heterogeneous systems that are more useful indicators of important \"properties of real systems\"?\n\nCan we quantify important properties such as flexibility and find analytical relationships to some structural metrics?\n\nMore Research Front Topics\n\nTo what extent are intuitively important aspects of architecture quantifiable and measurable?\n\nAre there useful paradigms, patterns, principles or other lessons from natural systems that researchers on real system architectures can use - and how can they be used?\n\nAssuming we know what functions, performance, and abilities we want, what methods can be used to create a suitable architecture?\n\nAssuming we know what architecture we want, what are the most effective ways of influencing the architecture of complex, evolving engineering systems?\n\nTextbooks and Readings\n\nThe required text for this course is:\n\nWatts, Duncan.\nSix Degrees: The Science of a Connected Age\n. New York, NY: W.W. Norton & Co., 2004. ISBN: 0393325423.\n\nAdditional\nreadings\nconsisting of book excerpts and papers are assigned for most class sessions.\n\nThe course also uses this downloadable book that doubles as a user guide to UCINET software: Hanneman, R. A., and M. Riddle.\nIntroduction to social network methods\n.\n\nAssignments\n\nStudents complete three homework assignments during the term.\n\nCase Study Project\n\nStudents complete a team-based case study project, with periodic reports in class leading to a final presentation and a written report.\n\nGrading\n\nACTIVITIES\n\nPERCENTAGES\n\nIn-class Participation (Especially Reading Connections)\n\n15%\n\nAssignments (25%)\n\nAssignment 1\n\n5%\n\nAssignment 2\n\n5%\n\nAssignment 3\n\n15%\n\nProject (60%)\n\nFinal Written Report\n\n20%\n\nFinal Presentation\n\n15%\n\nModeling Status Presentation\n\n15%\n\n1st Status Presentation\n\n10%",
  "files": [
    {
      "category": "Resource",
      "title": "avnet.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/cfb0c6eab1faddc6481c93c36182a1fb_avnet.pdf",
      "content": "Mark Avnet's\nSystem Architecture Biases\n- One-word answer: Abstraction\n- I am not (nor did I ever want to be) trained as an\nengineer.\n- Interested in underlying principles as applied to\nphysical, biological, social, and engineered systems\n- Inter-relations and mappings between SA in all areas\n- Education\n- Undergrad in Physics (MIT)\n- Wanted a fundamental understanding of the universe\n- Graduated unsatisfied - Did not find the answers to my\nquestions in equations or in the laboratory\n- M.A. in STPP (GWU)\n- As with Physics, I wanted something bigger. Focused in\nSpace Policy - \"What's bigger than space?!\"\nESD.342 Advanced System Architecture\n\nMark Avnet's\nSystem Architecture Biases\n- Disciplinary Background\n- To the (limited) extent that I concern myself with\nengineering aspects of SA, I am influenced by\n- Two years as a software developer.\n- Some study of space systems engineering, but more\ninterested in mission design than spacecraft design.\n- Research Interests\n- Role of scientists in the policy process\n- Concurrent S.M. in Planetary Science with meta-analysis as\nan aspect of ESD research\n- One of the key questions\n- How can SA (eg. modularity and interface design) help to\nimprove cross-disciplinary communication between scientists\nand policymakers?\nESD.342 Advanced System Architecture"
    },
    {
      "category": "Resource",
      "title": "bonnefoy.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/82b4145cff8dcec1ed2124fb4ad1fe9f_bonnefoy.pdf",
      "content": "(c) 2005 Philippe A. Bonnefoy, Engineering Systems Division, Massachusetts Institute of Technology\nPAB\nPAB''ss Biases\nBiases\nAdvanced System Architecture\nAdvanced System Architecture\nSpring 2006\nSpring 2006\nFebruary 14th, 2006\nPresentation by: Philippe Bonnefoy\nInstructors: Chris Magee, Joel Moses and Daniel Whitney\n\n(c) 2005 Philippe A. Bonnefoy, Engineering Systems Division, Massachusetts Institute of Technology\nBackground and biases\n-\nEducation\n- Bachelor in Aerospace Engineering\n- M.S. Aeronautics & Astronautics\n- ESD PhD student\n-\nWay that people approach and think about problems\n- Discipline focused (e.g. aerodynamics, structure, etc.)\n- Holistic view and macro system thinking are often omitted in the\n\"traditional\" aerospace engineering world\n- Shift with the ESD system thinking type of approach\n-\nHard problems\n- Systems with humans\n- Systems that are \"complex\" (often due to the misunderstanding of the\nlink between the structure and the behavior of the system)\n- NP hard problems (solvability limitations)\n- Stochastic nature of phenomena\n\n(c) 2005 Philippe A. Bonnefoy, Engineering Systems Division, Massachusetts Institute of Technology\nBackground and biases\n- Expertise that are honored and respected\n- Data analysis and modeling\n- Quantitative methods\n- Intellectual rigor\n- Designs that are considered good and elegant\n- Complex and convoluted (engineer view)\nvs. Simple (artist view)\n- What's elegant for the designer may not be elegant for the user !\n(e.g. Hub and Spoke System)\n- A good design is (or should be):\n- Flexible, Robust, Safe, Durable, Sustainable, Reliable, etc."
    },
    {
      "category": "Resource",
      "title": "bounova.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/1520cfeb832f4207696e22ddec1d014b_bounova.pdf",
      "content": "February 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nMy Background\n- B.S. Theoretical Mathematics - MIT\n- B.S. Aeronautics and Astronautics - MIT\n- M.S. Aeronautics and Astronautics - MIT\n- PhD - somewhere in between\n- Space transportation architectures for long-term space\nexploration\n- Non-traditional problem solving\n\nFebruary 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nThinking about problems\n- Problem formulation (modeling) is 50% of the\nsolution\n- Traditional reductionist approach: separate the\nproblem into sub-problems and tackle them\nindividually\n- CDIO mantra - conceive, design, implement\noperate\n- Modern approaches: Spiral development, multi-\nobjective design optimization, lifecycle\nconsiderations\n\nFebruary 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nWhat are \"hard\" problems\n- Gravity works against us - lifting 100s of tones in\nEarth orbit\n- Complex tasks, remote environments\n- Safety - humans in space\n- Accident/hazard mitigation\n\nFebruary 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nAssumptions\n- Heavy assumptions about existing technology\n- Laws of Physics\n\nFebruary 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nHonored Expertise\n- Deep technical knowledge is revered\n- Ability to come up with a design/solution given\nlimited components (think Apollo 13)\n- Test-case oriented thinking\n- Back-of-the-envelope expertise\n\nFebruary 14, 2006\nESD.342 Assignment 1\nGergana Bounova\nGood or elegant designs\n- \"An engineer is someone who can do for a buck\nwhat any damn fool can do for 2\", Ed Crawley\n- Traditionally: Simple, clean-cut, cheap, minimalist,\nsatisfying requirements, something that works!\n- Modern View:\n- Design works today and will tomorrow\n- Reconfigurable, smart, self-repairable\n- Can survive remotely\n- Systems (designs) can be extended as new\ntechnologies come in"
    },
    {
      "category": "Resource",
      "title": "castro.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/788c934f72b3ede401f745691edf30d6_castro.pdf",
      "content": "Jo\nJoaao Castro\no Castro\nUniversity of Porto\nEE (Telecom, Electronic + Comp.)\nIST\nEngineering Design\nMIT\nEng. Sys. Division\nCisco\nSystems\nMetro\ndo Porto\nSonae.com\nUMIC\nPortuguese Gov.\nTypical observed approach:\n1. design optimal solution without constraints,\n2. recognize constraints,\n3. adapt or deal with constraints\nHard problem:\nLegacy. (replace it, even if it costs more!!)\nExpertise:\nSeniority (MdP),\nBest-idea-wins (Sonae, UMIC)\nMix (Cisco).\nGood design?\nSustainable.\nbut also \"Fire and forget\"\nMy choices:\nLegacy is important\nSystems with very large populations\nAdaptability + Flexibility + Evolvability\n└Propagation of change"
    },
    {
      "category": "Resource",
      "title": "franck.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/0ce91437e452930a7e1766825a2e5fb7_franck.pdf",
      "content": "Travis Franck\nClimate Change researchers have\ndifferent backgrounds:\nEconomists, physicists, ecologists, public\nhealth\nSystems are varied, complex, and\ninterconnected\nElegance: flexible, comprehensive,\neffective\n\nTravis Franck\nBooks: Ishmael, Limits to Growth\nSocial engineering of 1950's failed\nSystem Dynamics (loops and feedbacks)\nBehavioral economics\nComputer science"
    },
    {
      "category": "Resource",
      "title": "hanowsky.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/1112eab368a4bea534ed2cefa17f3737_hanowsky.pdf",
      "content": "Problems in Air Traffic Flow Management\nESD.342 Spring 2006\nAssignment #1\nMichael Hanowsky\nFebruary 14, 2006\n\nAirlines and the FAA collectively manage the flow\nof aircraft around the US\n- Objective:\n- Strategic and tactical routing of aircraft\n- Minimize the \"cost\": fuel, labor, risk, lost goodwill of customers\n- Analyze the entire system as a whole\n- Tools:\n- Mathematics\n- Optimal Algorithms\n- X \"is the provably best way to\" do something\n- Examples:\n- Creating an airline schedule\n- Rerouting aircraft during periods of inclement weather\n\nSome types of problems are difficult to solve\n- Problems are too large and, therefore, cannot be solved\nby optimal algorithms\n- Some aspects of the problem cannot be modeled\nmathematically\n- For example, how do you define equity?\n- Experience counts when it comes to modeling qualitative factors\nin a quantitative manner\n- There is a tradeoff between how much of a problem is\nconsidered mathematically and how easy the math is to\nsolve\n\nEvaluating a model\n- Analytical models always make some type of assumption\n- Data requirements\n- Practicality\n- Risk/Uncertainty\n- Static/Dynamics\n- Decision Makers\n- A good model\n- Minimizes major assumptions\n- Is conceptually sound/similar to the system\n- Can be used to predict future behavior\n- Can be solved in hours/days\n\nMore \"traditional\" approaches often conflict with\noptimization\n- In practice, the industry (FAA, airlines) approach the\nproblem differently\n- Decisions are made based upon \"feel\", intuition, or policy\n- Problems are often highly stochastic *and* qualitative\n- Decision are made on the fly by separate actors\n- \"Optimization\" work occurs only in isolated departments\n- In making decisions\n- Experiential learning is key\n- Difficult problems are those for which there is no prior\nexperience\n\nThe traditional approach values solutions\ndifferently, as well\n- A good solution\n- Follows procedure, allowing separate actors to make cohesive\ndecisions\n- Avoids crisis points and disasters\n- Is economically efficient\n- The disparity between the academic and practical\napproaches poses an additional challenge to research!"
    },
    {
      "category": "Resource",
      "title": "jijun.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/87420ca90ced1f6bac0d3bb4cda10119_jijun.pdf",
      "content": "Jijun's Biases\nMy education background:\n- Undergraduate in Mechanical Engr. (Beijing Univ. of Aero. & Astro. )\n- Master degree in Aero. & Astro. (Stanford Univ.)\n- One year graduate program in Industrial & System Engr. (UW - Madison)\n- Now in ESD PhD program (Research on Enterprise Architecting in LAI)\nHow do I think about problems?\n- Identify the problems want to solve\n- Laws of physics, principles from sub-discipline\n- Assumptions - engineering is always a way of approximation\n- Mathematical abstraction and modeling (analytical or numerical)\n- Computer - aided problem solving through iterative ways (simulation)\n- Validation: simulation or prototype\n- Implementation of designed solutions (not always work)\n\nJijun's Biases\nMy research on Enterprise Architecting\n- What is enterprise? -- Scope\n- \"What is\" question -- Architecture\n- \"What might be\" and \"What should be\" -- Architecting\n- Focus on \"enterprise modeling and simulation\"\n(why to model, what to model, levels of abstraction)\n- Approaches for modeling: Networks, Agent-based modeling, Engineering\nmethods,...\n- Simulate complex behaviors, such as:\nEmergence, Nonlinear dynamics, self-organization, co-evolution,...\n- Validate models: Fidelity of models, simulation vs. empirical case studies\n- Fields of knowledge I need to acquire: Network Analysis, Complexity Theory,\nComputational Organization Science,..."
    },
    {
      "category": "Resource",
      "title": "lindsey.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/7286983676a37f430dd36f09b39d67da_lindsey.pdf",
      "content": "Justin Lindsey - Background\nMIT Entrepreneur phase\nEntered MIT 1989 - Left early 90's to found Lavastorm\n55 million in venture capital, 180 people Boston and San Jose, I ran for 8 years.\nWe built big (as in millions of simultaneous users, billions of records, etc) systems\nmostly on the internet.\nNotable systems: Edgar Watch, FamilySearch, Monster.com, Alchemy.\nLarge Tech company phase\nFounded and ran Hewlett Packard's Advanced Solutions lab\nNotable solutions: delivered portable video on handhelds at the SLC Olympics to\nhigh-end hospitality clients (600 a day for 17 days), world wide print on demand\nsystem, real-time collaborative capture system.\nGovernment phase\nCTO for the FBI and now for the entire DOJ (ala DEA, ATF, FBI, US attorney's,\nBureau of Prisons, etc)\nCo-chaired the Presidents Architecture committee on EO 13356 which created a\nvision for a terrorism information sharing environment\nSystems: various systems that deliver investigative and analytic capabilities\nArchitectures: LEIS and ITISE\n\nJustin Lindsey - Biases\n1.\nConceptual integrity is the product of a few minds.\n2.\nModel of Architects as master builders.\n3.\nWe learn when we field actual capability, no matter how raw.\n4.\nThe world is the Lab.\n5.\nPragmatic view, talk is cheap, deliver capability now!\n6.\nAll problems are not of the same intrinsic value.\n7.\nA standard is good ... a component that encapsulates a standard is better.\n8.\nThe projects we do deliver the capability we have (aggregate project planning reality).\n9.\nAbstraction arbitrage works against making expertise explicit.\n10.\nArchitecture takes another word.\n11.\nA Solution solves a problem but a problem doesn't create a solution.\n12.\nTechnology can change the world!\n13.\nThe world doesn't like to change (aka change is hard)\n14.\nMission support is essential.\nPassion: delivering advanced capability through innovative applications of emerging\ntechnology."
    },
    {
      "category": "Resource",
      "title": "livengood.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/023a0cad6cef289504cf33a0292652da_livengood.pdf",
      "content": "Dan Livengood - Rearview Mirror\nB.S./M.S. from Washington University in St. Louis\nMajor: Systems Science and Engineering\nOperations Research\nControl Systems\n(Non) Linear Dynamic Systems\nSummer research positions\nWU lab: Modeled AF cargo transportation network\nLincoln Labs: Simulated tracking algorithms and analyzed\ntheir performance\n\nDan Livengood - Looking Ahead\nFirst year Ph.D. student in Engineering Systems\nDivision\nResearcher with Lean Aerospace Initiative\nPart of the Lean Product Development team\nModeling and systems architecture\nIterative nature\nPath dependence\nMetrics\nMeasuring -ilities"
    },
    {
      "category": "Resource",
      "title": "long.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/0ab4fe58d3ce469f2d06dd03e36d4b2f_long.pdf",
      "content": "David S. Long, ESD.342\n14 Feb 06\nPersonal Background\n-\nEducation\n- BS: Industrial Engineering and Management, 1988\n- North Dakota State University\n- MS: Engineering, 1997\n- California State University, Northridge CA\n-\nProfessional\n- Acquisition Project Manager - Core field\n- Two Product Centers\n- Flight Test Center\n- Air Logistics Center\n- Depot and Flightline Maintenance\n- Program Element Monitor\n- Selected to teach product development at AFIT, Fall 2008\n\nDavid S. Long, ESD.342\n14 Feb 06\nResearch Systems\n-\nAir Force Acquisition Processes\n- Defining Requirements in Multi-stakeholder Enterprises\n- Oversight as related to program cost, schedule and technical performance\n- Product Development for Systems of Systems\n-\nAerospace Employment Processes\n- Applying Lean principles up-front in the processes\n- Acquisition, Operations, Maintenance\n-\nC2ISR (Command & Control, Intelligence, Surveillance &\nReconnaissance)\n- Electronic Battlefield Interoperability Issues\n- Analyzing interoperability and incompatibility\n- Advantages of interoperability\n- Potential for increasing robustness by designing incompatibility\n- Incompatibility as a method to improve performance"
    },
    {
      "category": "Resource",
      "title": "report_roofnet.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/ec45defa251c579399efebb7ad15f5c1_report_roofnet.pdf",
      "content": "Image removed for copyright reasons.\nPhoto of someone holding a meraki device.\nImage removed for copyright reasons.\nPhoto of the inside of an electrical device with the size of a playing card.\n\n5. Reflections and Comparisons\nPlease refer to the ReflectionsandComparisons page.\nlast edited 2006-05-16 23:28:39 by 128\n\n2.2. 2004 SIGCOMM Traffic Data Issues\nThe manner in which the traffic data was collected limited the amount and type of analysis we could meaningfully perform. We\nhad great interest in considering the relationship between the RoofNet architecture and how it performed in terms of congestion\nand routing.\n2.2.1. No Global Clock Synchronization\nThe traffic data was not synchronized. Each RoofNet node locally estimated the time a packet was sent and received. Since the\nclocks at each node were not synchronized, there were multiple instances of packets arriving before they were sent if a global time\nwere assumed.\n2.2.2. No Global Unique Packet Identifiers\nThe packet numbers were not globally assigned. Each node locally assigned unique packet identifiers. This made tracking the\nroute packets took through the network impossible.\n3. Resolution of Inconsistencies and Issues\nTo resolve the inconsistencies and issues discussed in Section 2, we met with members of the Roofnet team.\n3.1. Resolution of Inconsistency 2.1.1.\nThe RoofNet team provided us with the coordinate data for 6 of the 8 inconsistent nodes.\nAs for the other two nodes: At the time of the experiments, node 36879 did not have a separate roof-mounted antenna, but did\nshare an apartment with 26206. They lost track of node 43220, but based on its local connections and an approximate idea of the\ngeographical layout of the network at that time, I guessed its location.\n3.2. Resolution of Inconsistency 2.1.2.\nWe were told that the origins of the map used in the 2004 SIGCOMM paper are lost to the mists of time. They told us to rely on\nthe resolved data.\n3.3. Resolution of Inconsistency 2.1.3.\nWe were given more specific Gateway information. The 2004 RoofNet map with Gateways highlighted is shown below:\n\nLEGEND:\n(Green) Building NE43: Gateway nodes 26222 and 23652\n(Yellow) Building 36: Gateway nodes 44466/3370\n(Red) Cherry Street: Gateway node 26206\n3.4. Resolution of Issues 2.2.1 and 2.2.2\nThe packet/traffic data issues meant we had no real way of modeling congestion or routing performance. Any kind of traffic flow\nanalysis would require some global knowledge of time. Thus, we could not perform congestion analysis using the 2004\nSIGCOMM data. The non-unique packet identifiers was not an issue with the 2004 SIGCOMM data because of the manner in\nwhich the experiments were conducted.\nlast edited 2006-05-16 23:37:04 by 128\n\nlast edited 2006-05-16 20:10:00 by vpn-eighty-six\n\nEffect of Increasing Attempted Data Rates\n1. Effect of Increasing Attempted Data Rates\nAs mentioned in the RoofNet Data (RawData) section of this report, the RoofNet SIGCOMM2004 data is broken up into 4\nseparate experiments. In each experiment, each node attempts to send data at a specified bit rate. This protocol is in contrast to the\nTCP/IP protocols that adjust the bit rate real-time to compensate for congestion and poor link quality. This section discusses the\nanalysis undertaken to understand the effect of increasing the attempted bit rates on the network topology.\n1.1. Data\nBy Experiment: Please refer to the Roofnet Data (RawData) section of this report.\nAggregate Data: The aggregate data is a dataset constructed from the distinct experiment data for the purposes of our\nproject. If a link between any two nodes exists at any point in time in any of the experiments, the link exists in the\naggregate data. Link quality measurements are taken to be the average over all instances of the link.\n1.2. Connectivity\nIn the class, we discussed connectivity as being a metric capturing the fraction of nodes connected in a network (lecture 6). In this\nsection, we focus our analysis of connectivity in terms of the number of edges in the network, average degree per node, and the\nMaximal In-degree and Out-degree. We can gain insight into the connectedness of the network topology as a whole by\ncomparing the connectedness as a function of attempted data rates. Later sections will explore other metrics for describing\nconnectivity.\nNot unexpectedly, we found that the connectivity of the RoofNet network varies as the attempted bit rates are increased. The\nconnectivity maps for each experiment are shown below. The maps were generated by importing the 2004 SIGCOMM traffic\ndata into OPNET. The reason for the \"thinning out\" of connectivity between the 1, 2, and 5.5 Mbps experiments is\nstraightforward. Higher data rates require more energy to be successfully transmitted from one node to another. Obstacles,\nmulti-path fade, distance, and atmostpheric phenomenon all affect the effective received energy of a signal. Thus, we expect fewer\nlinks as the data rate increases.\nStrangely, there are two links that suddenly appear in the 11 Mbps experiment that weren't in the other experiments. These two\nlinks are circled in the 11 Mbps connectivity map below. This result is contrary to expectation given the above reasoning.\nHowever, the data was collected in a matter of a few short hours over one night. It is entirely possible that some kind of\nobstruction existed during the first 3 experiments that did not exist in the fourth experiment. This obstruction could be something\nas simple as a tree moving in the wind, a large truck temporarily parked in between the two nodes, it stopped raining, etc.\n\nStill, the expectation that connectivity will \"thin out\" as data rate is increased is confirmed in the graphs below. We can see that\nthe number of edges in the network steadily decreases as the attempted data rate is increased. Likewise, the average degree per\nnode also steadily decreases, implying that the average number of links into and out of a given node \"thins out\". The differences\nin the Maximal In-degree and Out-degree plots imply the asymmetry of the links that is known to exist for the RoofNet network.\n\nLEGEND:\nBlue plus sign: symbolizes the results for each of the experiments, and Maximal Out-degree in the bottom graph.\nRed plus sign: symbolizes the Maximal In-degree in the bottom graph.\nYellow plus sign: attempts to locate the aggregate result assuming the apparent trend continues.\nYellow plus sign with blue trim: Same as Yellow plus sign but for the Maximal Out-degree.\nYellow plus sign with red trim: Same as Yellow plus sign but for the Maximal In-degree.\n1.3. Clustering and Path Length\nRelated to connectivity are the ideas of clustering and path length. The clustering coefficient captures some knowledge about\nclusters of connectivity by evaluating the degree to which nodes linked to a common node are likely to have direct connectivity.\nPath length likewise captures some aspects of connectivity by measuring how far (in terms of number of hops, for example) a\npacket must travel between a source node and a destination node. The more connected the network, the shorter one would expect\nthe path length to be.\nThe set of graphs below demonstrate the effect that increasing the attempted data rate seems to have on the clustering coefficient\nand the weighted and unweighted harmonic path lengths. The weighted path lengths account for the weight of each link on the\nbasis of its delivery probability. Unweighted assumes that any link that exists has a weight of 1, thus making it analogous to\nweighting based on the number of hops to traverse the network.\nThe clustering coefficient drops significantly between 1 Mbps and 2 Mbps, and steadily decreases to 11 Mbps. Thus, as the\nattempted data rate increases, it becomes more and more unlikely that nodes linked to a common node have direct connectivity\nbetween themselves. The sudden drop between 1 Mbps and 2 Mbps could imply some kind of phase transition (the links\ndropped happened to be important ones, for example), though more targeted studies would have to be done to confirm this\nhypothesis. One would thus expect the average path length in terms of the number of hops (unweighted) to increase just as\n\nrapidly between 1 and 2 Mbps and start to level off after that (though steadily increasing). Sure enough, this is exactly what\nhappens in the unweighted case.\nThe weighted harmonic path length follows this trend until the transition between 5.5 Mbps and 11 Mbps when there is a sharp\ndrop in the path length. The only effective difference between the weighted and unweighted case is that the weighted case applies\nmore weight to links with higher delivery probabilities. Thus, the greater the path length, the greater the probability of service\nshould be. This would imply that there is a sharp drop in the delivery probability between 5.5 Mbps and 11 Mbps. This\nexpectation seems to be confirmed by the data in the 2004 SIGCOMM paper (see Figure 4 below).\n\n1.4. Centrality\nThe centrality metric attempts to capture information about the amount of centralization in the network. The Degree Centrality\nmetric defines the node that is most central as the node with the most links (Lecture 6). The Network Centralization Index (care of\nUCINET) measures the overall degree of centrality in the network. Ie, how much the network is controlled by nodes that are\nmore important.\nFrom the graphs below, it appears that the greater the attempted data rate, the more the network is controlled by more important\nnodes. Meanwhile, the degree centrality (both in terms of In-degree and Out-degree) decreases. This result makes sense because\nthe more links that are dropped in the network as it \"thins out\" due to the increased attempted data rate, the more critical for\nperformance certain critical paths through the network become.\n1.5. Degree Distribution\n\nThe degree distribution is a histogram of the degrees of the nodes in the network. From the graphs below, it is interesting to note\nthat the shape of the cumulative degree distribution hardly changes at all as the attempted data rate increases, nor are these shapes\nvery different from cumulative degree distribution for the aggregate data. What does happen: the graph seems to shift to the left\nslightly and contract (\"bunch\" up). Could this imply some inherent structure in the RoofNet architecture? It is difficult to say\ngiven the limited data available, but it is a curiosity since so much else seems to change significantly as the attempted data rate is\nincreased.\nThere seems to be a more noticeable change in the histograms themselves. As the data rate increases, the peaks of the histogram\nshift left, seemingly corresponding with the shifting and contracting in the cumulative distribution.\n1 Mbps:\n2 Mbps:\n5.5 Mbps:\n11 Mbps\nRoofNet Asymmetrical Aggregate:\n\n1.6. Summary\nThis analysis demonstrates that changing the attempted data rate in wireless mesh networks has the effect of changing the\nnetwork topology. Furthermore, it seems to change the topology in largely predictable ways. Determining the extent of how this\neffect might be reproducible would require further analysis.\nlast edited 2006-05-16 20:14:45 by vpn-eighty-six\n\ndoesn't limit the users to talking only with servers/hubs. Instead, a user can be a user as well as an intermediate to transfer a\npacket. If a user can't directly talk with a gateway, it can take a multi-hop path through other users to finally connect with a\ngateway.\nThe betweenness centralities in MODEL 1 and MODEL2 are much higher than in the Roofnet network. This can be\nexplained by the importance of hubs in the two models. The following 3 charts about degree distribution, prestige and\nacquaintance can illustrate this point. All of these analytical results consistently show that Roofnet is very decentralized.\n3.\n4. Contrasting with Random Graph\nBy using the MATLAB routine that Gergana wrote for generating random graphs, a random graph (Erdos-Renyi graph) was\ngenerated with the parameters: n=41, p=0.35, E=638 (p=0.35 is because when all nodes are connected to each other, the links\nwould be 41*41; now there aer 638 links, so 638/41*41 = 0.35). The same numerical analysis as before was done for the random\ngraph as well as the Roofnet network after the data was processed. The results are shown below:\nSystem\nn\nm\nk\nc\nL1\nL2\nr\nCb\nCd,\nRoofnet(sym) 41 638 15.6 0.6986 0.4123 6.2269 0.0117 10.15% 32.69%\nRandom(sym) 41 638 15.6 0.779\n0.2909 4.7243 -0.0445 0.25%\n11.83%\nWe find that in terms of properties such as the clustering coefficient, degree correlation and degree distribution, the Roofnet\nnetwork is very similar to the random network. It has no preferential attachment.\nHowever, the betweenness centrality and degree centrality metrics of the RoofNet network are very different from the random\ngraph. It seems that there are some important nodes with high betweenness, which makes the betweenness centrality much higher\nthan for the random graph. Linking with the mechanism of how Roofnet works, this could be explained as follows: in Roofnet,\nnodes can't talk with just any of the nodes in the network (like in the random graph) because of being geographically too far from\neach other, so they have to link through some nodes geographically in-between. This implies that the real Roofnet network would\nindeed have a lot higher betweenness centrality.\ndegree distribution for random graph (symmetrical)\n\ndegree distribution for Roofnet (symmetrical)\n\nShows proportion of gateway, middle, periphery, and isolated nodes when paths of different quality are considered. The far left\nconsiders all existant paths, even of very low quality, and we see that there are no isolated nodes: there are 4 gateways, mostly\nmiddles, and two or three periphery. Periphery here means a node that is connected (not isolated), but which no other node is\nusing as a mid-point.\nAt the far right we see that only approximately 60% of the nodes have high quality paths to a gateway (>90% delivery\nprobability).\n5. Classifying Nodes\nHere we classify nodes according to their connectivity to a gateway:\nIsolated nodes are those that have difficulty finding a reasonable quality path to a gateway. \"Reasonable\" presently means\n\"better than 60%\".\nSingle-hop nodes are those adjacent to the gateway\nMulti-hop nodes are those that can reach a gateway via some other node\nMid-point nodes are those that relay packets towards a gateway on behalf of others\nPeriphery nodes are those that do not relay packets for others, which could be for a few reasons:\nthe periphery node itself does not have a good path to the gateway\nthe periphery node is already at the maximum hop-distance to the gateway\nother nodes do not have good paths to the periphery node\nThe single/multi-hop criteria and mid-point/periphery criteria are orthogonal. In other words, all four boxes in the following table\nare possible:\nSingle-hop Multi-hop\nMid-point\nPeriphery\nThe classification is performed automatically based on the charts below (the entire chart section of the report is generated by a\nscript, and the results are pasted in here).\n\n5.1. Legend\nx-axis: path quality (ie, delivery probability)\ngreen line: number of reachable gateways (\"betweeness out-degree\" in social network lingo)\nred line: number of nodes who can reach a gateway through this node (\"betweeness in-degree\" in social network lingo)\nblue line: number of immediately adjacent gateways\nmagenta line: number of paths that this node is a midpoint on (\"betweeness centrality\" in social network lingo)\nturquoise line: number of paths this node has to a gateway\n5.2. Patterns and Interpretations\nisolation: look at the green lines (how many gateways can it see?)\nimportance: look at red line (how many nodes is it a midpoint for?)\nredundancy: not yet implemented.\nonly a red line: gateway node\nvertical lines: stuff only works for lower path quality (to the left of the vertical line)\nno visible lines: all values are zero or one (one doesn't show up because it's a log scale; it's a log scale because the number\nof paths is typically much larger than the number of nodes, and these plots have both kinds of lines)\n5.3. The Charts\nClick on a chart to see it full size.\n5.3.1. Gateways\n\n5.3.2. Isolated Nodes\n\n5.3.3. Single-hop Mid-point Nodes\n\n5.3.4. Single-hop Periphery Nodes\n\n5.3.5. Multi-hop Mid-point Nodes\n\n5.3.6. Multi-hop Periphery Nodes\n\n6. Improving the Mesh by Strengthening an Edge\nSome parts of the network may be isolated from the gateways (ie, have only low quality paths, or no paths, to the gateways). The\nnetwork connectivity may be improved by 'strengthening' an edge. The question is, which edge should be strengthened? Our\nanalysis is: for each edge in the network with delivery probability greater than 5%, hypothetically increase its delivery probability\nto 99%, re-analyze the network, and determine how many previously isolated nodes have become connected. We re-analyze the\nnetwork at the 90% success rate (ie, a node will become re-connected if it gains a new path of >= 90% delivery success).\nWe assume that brand new edges cannot be added to the network. If a faint edge already exists, then we know it is possible to\ncommunicate between that pair of nodes. Nodes that are not presently able to communicate may be too far apart, or divided by\nobstacles, etc. The strength of an existing edge could be improved through a number of practical strategies, such as: adding an\nintermediate node, directional antennae, moving physical or electro-magnetic obstacles.\nFor the SIGCOMM'04 data we find that 14 nodes are considered isolated at the 90% level, and that there 342 edges with delivery\nprobability >= 5% (there are 220 edges below 5%). Improving any of the following four edges re-connects three nodes (and it\nhappens to be the same three nodes in each case):\nEdge\nStrength Reconnected Nodes\n3369 -> 26207\n0.45\n23752 3369 36878\n3369 -> 44466\n0.12\n23752 3369 36878\n36878 -> 44466 0.13\n23752 3369 36878\n23752 -> 44466 0.06\n23752 3369 36878\nThe figure below shows the geographical map of RoofNet with the re-connected nodes in the large yellow bubble in the bottom\nleft corner. The four black lines indicate the new edges in the table above. Gateways are highlighted with red bubbles. Other\nisolated nodes are highlighted with smaller yellow bubbles. The figure shows that isolated nodes are not necessarily geographical\noutliers, while geographical outliers tend to be isolated.\n\ntarget the network operator's efforts to make the network more robust.\nIt might be more profitable to compute the minimum cut-set between each node and the gateway.\nlast edited 2006-05-17 12:10:21 by c-65-96-163-242\n\nReflectionsAndComparisons\n1. Reflections and Comparisons\n1.1. Analogies to Other Systems\nDuring the analysis, we compared the RoofNet wireless mesh network with two models simulating LAN (local area network)\nand WAN (wide area network) systems. We developed a random graph to identify the differences between Roofnet and a random\ngraph. By examining the network architectural metrics, we have two hypotheses about the -ilities of Roofnet: one is that Roofnet\nis a very decentralized network relative to the internet; thus, it is robust and not a fragile network architecture (rather than \"robust\nyet fragile\" architecture of the internet network). The other is that Roofnet is very similar to a random graph in terms of the\nclustering coefficient and degree correlation properties; however, we find that RoofNet is centralized relative to the random graph\nbecause of its geographical and technical constraints.\n1.2. Learning from this Project\nWe learned how to use UCINET and MATLAB to perform network analyses. The application of tools and methods helped us to\nappreciate the numerical metrics and link the topology to the properties of the network architecture. These metrics can provide\nsome measure the network and help us to understand the network, especially when the network is extremely complex.\nWe also learned to think about complex system architectures in different ways. Without any expertise about Roofnet, we worked\non this project from an architectural perspective. The analysis gave us insights into the properties of this network vs. other\nnetworks. There certainly is a lot more work that can be done in this area! The two models we considered are quite simple. If we\nhad access to more (clean) data about Roofnet and the Internet, we might have been able to compare these two networks directly\nto see the differences between the -ilities of each network. It would still be interesting to examine the relationship between\ndecision (routing, congestion, etc) protocols on the topological properties of these types of networks.\nOn the other hand, it seems that it would be very difficult to gain any insight about a complex system using these metrics without\nspecific knowledge of the system. One has to know some technical aspect of the system to be able to link those metrics with the\nactual properties of the system to get anything useful and meaningful. The meaning of the metrics seem to be subject to a great\ndeal of interpretation based on the system under study.\n1.3. Comments on System Architecture Analysis and Description\nIt seems as though the metrics themselves need a lot of work. Either they are not enlightening because they tell us something we\nalready know about the network or they don't seem to say anything meaningful about the structure of the network (sometimes\nwith or without knowledge of the system under study). Perhaps it would be useful to focus on finding ways to parameterize the\nnetwork structure. One of the most interesting and telling studies seemed to be the parameterization of organization structure in\nthe Dodds, Watts, and Sable paper.\nlast edited 2006-05-16 19:43:11 by vpn-eighty-six"
    },
    {
      "category": "Resource",
      "title": "lc1_bkgrnd_moses.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/a077e4ddd1429aa840ba9c035d3dfefa_lc1_bkgrnd_moses.pdf",
      "content": "Advanced Systems Architecture\nLecture 1\nJoel Moses\n\nMy background and interests in\nsystems architecture\n-\nBorn in Israel to German and Romanian parents\n-\nCame to US 50 years ago\n-\nEducation\n- Pure math bachelors\n- Applied math masters\n- PhD in math/artificial intelligence/computer science\n-\nMIT activities\n- Dean of Engineering\n- Originated SDM program, began discussions of ESD\n- Provost (helped fundamentally change MIT's budget)\n- Institute professor, EECS prof, ESD prof\n- Acting Director, ESD, 2006\n\nBuilt MACSYMA system for algebra,\ncalculus, etc.\n- Uses abstract algebra heavily\n- Uses layered abstractions for formula manipulation\n- Head EECS department\n- Communication systems\n- VLSI\n- Found some management issues that are similar to issues in\nAI and software engineering\n\nBiases from Computer Science\n- Physics does not count (much)\n- Information-based systems vs. Energy-based\nsystems\n- \"Good\" software systems are universal\n- They can do anything that is computable\n- Uncertainty is not an issue if you assume that\nyou can do most anything equally well\n\nA guide to my interests in system\narchitecture\n-\nI do not differentiate much between system architecture and\norganizational structures (possibly due to flexibility in structure and\noperation of software systems)\n-\nI am less interested in system function or performance than other\ngoals, since in CS there are many ways to achieve function, and\nperformance has been less important due to Moore's Law (although\nperformance in computer architecture and systems is a real issue)\n-\nAnother reason I am less interested in performance is that I\nemphasize the changes that will take place in a system's function\nover time. In software it is relatively cheap to make certain changes,\nin contrast to, say, civil engineering projects. The rate of change in\nfunction is very important in my analysis. I emphasize medium rates\nof change. One shot systems (thus low rates of change) or systems\nthat undergo very many changes in function (e.g., WWW) are of less\ninterest to me, except as extremes that need to be understood, at\nleast partially.\n\nGuide to my interests (2)\n-\nI am most interested in understanding properties of generic types of\narchitectures, rather than specific architectures of particular\nsystems. The latter may be very complex, but likely can be\nunderstood in terms of the former\n-\nI am most interested in the generic types of architectures that are\nhierarchies, both tree structured hierarchies and layered hierarchies\nor mixtures of these. I maintain that the West, especially the US,\nmisunderstands the full nature of hierarchies\n-\nIn a world where things change a lot, architectures may be\ncharacteristics of systems that change less often, and thus are\nimportant as building blocks. The bones, arteries and nerves form\nthe architecture/structure of the body\n-\nI believe in relatively abstract modeling where one tries to get at the\nessence of an issue\n-\nI believe that 'ilities' are very important for us to understand,\nespecially ones that relate to change, such as flexibility. The ability\nto cope with continual change (of function) is the most important\ncharacteristic of systems for me.\n-\nTrade-offs between flexibility and complexity in relation to generic\narchitectural types is an important issue to me\n\nSome more of my attitudes\nregarding systems\n- I believe that one's background biases the way\none approaches complex systems\n- National ideologies (e.g., how individualistic or\ncommunitarian the society is) contain biases\nregarding the \"preferred\" overall generic\narchitecture of systems and organizations.\nNational ideologies are near the ultimate\nlegacies\n- If you know perfectly well what to do, then there\nis no problem, but usually one does not know\nexactly what to do, and the environment keeps\nchanging. Thus ideologies play an important role\nin influencing your preferences\n\nOther fields have studied systems and their\narchitectures/organizational structures\n- Political systems have been around for millennia\nand use a variety of organizational structures\n- Likewise for religious organizations\n- In fact, nearly every field in a university is\ninterested in some form of system architecture\nor organizational structure, since most are\ninterested in designs of various kinds\n- All such fields approach systems issues with\nassumptions that we in ESD need to understand\n- We need to especially understand the biases in\nvarious engineering fields"
    },
    {
      "category": "Resource",
      "title": "lc1_bkgrnd_whtny.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/4d135fbe38f40639548d7c173392f340_lc1_bkgrnd_whtny.pdf",
      "content": "8/24/2006 Background (c) Daniel E Whitney 1997-2006 1\nAssumptions and Biases\n- Every design and system has multiple phenomena\noperating at the same time\n- This has several consequences\n- Parts must be designed and tested separately\nand then tested together\n- Analytical models and simulations will not be\nable to encompass all the important things that\ncould happen or must be understood\n- A \"digital\" plug-play or modular approach will\nnot work and may not even lead to a good\ndesign\n\n8/24/2006\nBackground(c) Daniel E Whitney 1997-2006 2\nThings That Are Important\n-\nGeometry, geometric relationships, and visualization\n-\nMass and space occupancy\n-\nMotion (dynamic space occupancy, acceleration loads)\n-\nForces, loads, load paths\n-\nTight coupling that's unavoidable: propagation of loads, heat,\nfluid, vibration, fatigue - generally linkage of effects and time-\ndriven effects\n-\nEver-present constraints\n- Generic: the laws of physics\n- Specific, often enterprise-driven: space, weight, cost in this\nparticular design\n\n8/24/2006 Background\n(c) Daniel E Whitney 1997-2006 3\nThings We Usually Don't Think About\nBecause They Won't Happen\n- A theory that will tell us the right way to design\nsomething, tell us how far off the optimum we are,\nor tell us what to do to get to the optimal design\n- The idea that it will be right the first time\n- The idea that we will have time to be sure it is\nright\n- The idea that you can get it done without someone\nwho really knows what they are doing\n\n8/24/2006 Background\n(c) Daniel E Whitney 1997-2006 4\nOther Thoughts\n-\nThe \"right way\" usually is found and after a while a search is no longer\nneeded (airplane wing, car engine); no canonical architectures exist,\nsuch as trees, but consensus architectures for specific kinds of things\nemerge\n-\nNo single part is the hero that makes the product work; the product's\narchitecture, the way the parts work together, is the key thing\n-\nSometimes no agreement or convergence occurs (car door design)\n-\nMore design and testing time are devoted to finding and mitigating\nside effects than in assuring achievement of basic function and\nperformance\n\n8/24/2006 Background\n(c) Daniel E Whitney 1997-2006 5\nWhat's Basic to MechE\nA.\nAnalytical\n1.\nNeed to consider basic\nphysical phenomena as part of\nevery design exercise\n2.\nMust know the limits of the\nmodels\n3.\nMust do geometric reasoning\n4.\nEach phenomenon has its own\ndetailed models\n5.\n\"Stochastic world\" not a high\npriority\nB.\nDesign\n1.\nMain functions and failure modes\ninvolve multiple interacting\nphenomena and constraints in\nevery design\n2.\nSide effects operate at high power\n3.\nGood designs are \"elegant\"\n4.\n\"System view\" not a high priority\nin education or most practice\nareas - combination of good\ncomponents will do\n5.\nIntegrated models are unreliable\nor do not exist"
    },
    {
      "category": "Lecture Notes",
      "title": "lec1_bkgrnd_mage.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/e43b8bca0a59a4ba1b6af344ab89f4ce_lec1_bkgrnd_mage.pdf",
      "content": "C L Magee Biases\n- Based upon Practice Experience\n- Legacy is more important than one usually realizes in\nthe design of real systems\n- Standards and protocol design is the major way to\ninfluence the \"design\" of real world complex systems\n- Based upon Materials Science Education and\nResearch Experience\n- Physics as \"model\" discipline\n- Observations of reality are the gold standard\n- Mathematical models are essential for real progress\n- Materials Science Mantra as a Metaphor for what we\nare trying to do in Systems Architecture\n\nMore on CLM Biases\n- Physicists (and copiers) Biases\n- The key to any Scientific Advance is to \"explain the\ncomplex visible by some simple invisible\"\nJean\nPerrin\n- \"Unless you can quantitatively measure it, you do not\nknow what you are talking about\"\nLord Kelvin\n(Thompson)\n- Caveat ( age of earth estimated from Temperature of\nearth)\n- Came to Software/information technology later (1970's\nbut mostly 1990's)\n- Came to biology later (systematics of interest earlier but\nmostly 2000's)\n- Strong interest in Economics even in UG education\n\nThe Materials Science Mantra\n\"processing\">\"structure\"\n\"structure\">\"properties\"\nA Metaphor for Architecture of\nEngineering Systems ?\n\nTHE METAPHOR EXPANDED I\n- PROCESSING> STRUCTURE> PROPERTIES\n- Structure ~ Architecture\n- Where is Design?\n- Where is Behavior?\n- Structure determines/affects properties\n- Structure is a multi-dimensional term that includes\nmany scales and concepts simultaneously (and thus\nis not a \"simple invisible\")\n- Properties include attributes that encompass\ndynamics, behavior and \"ilities\".\n- Relationships between Structure and Properties are\nplentiful and became strongest as material classes\nunder detailed study increased\n\nTHE METAPHOR EXPANDED II\n- Processing determines Structure\n- Different Processing Modes (casting, forging, crystal\ngrowth, e- beam deposition, etc.) have different\ncontrol parameters ( Temperature gradient,\nstresses, pressure, magnetic and electrical fields,\ncomposition, etc.) that affect/determine properties.\n- Design is thus modifying the processing modes and\ncontrol parameters in to obtain the desired\ncombination of properties. Understanding structure\nis the chief enabler of effective design\n- Engineering Systems Analogies\n\nTHE METAPHOR EXPANDED III\n- Structure Characterization\n- Materials-Multiple Dimensional and very\nbroadly construed: examples.....\n- Engineering Systems Possibilities for\nArchitecture Characterization.. much of the\nfocus of this course in my metaphor\n\nLearnings from Materials Science\nExperience\n- Utility as Scientific framework has been\neasier to establish than as practice enabler\n- Possible Lessons\n- Both Structure and Properties have to be\nviewed flexibly to make real progress\n- Quantitative Theories relating properties and\nstructure are best evaluated while studying\nmultiple systems\n- Details matter (observation and models)\n- \"Concepts\" emphasis and meaning changes\n(e.g., genes)"
    },
    {
      "category": "Lecture Notes",
      "title": "lec1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/31440ed9b876651c3287b430ba75f77e_lec1.pdf",
      "content": "Adv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nAdvanced System Architecture\nESD.342/EECS 6.883\n- Goals of this course:\n- Gain an understanding of system architecture\n- Learn existing theoretical and analytical methods\n- Compare systems in different domains and\nunderstand what influences their architectures\n- Apply/extend existing theory in case studies\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nThe Faculty\n- Chris Magee\n- Joel Moses\n- Dan Whitney\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nESD's Domains\nStructure\nand its\nRelation to\nBehavior\nNetworks\nHierarchies\nOther Structural\nModels\nDecompositions\nComplexity\nOther Quantifications\nof Architectures\nIlities\nArchitectural\nDynamic\nEthical, etc\nArchitecture\nUncertainty\nIlities Related\nto\nRisk and\nUncertainty\nDynamics\nIlities Related to\nEthics\nSustainability\nSafety\nTechnical Ethics\nExtended Enterprises\nEconomic Ilities\nS-curves, etc\nNations, firms\n\"Extended\" Economics\nEnterprises\nPolicy\nBounded Rationality\nAgency\nComplexity and\nResponses to it\nHuman Behavior\n\"Systems Approach\"\nFocus of this course\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nWhat We Will Do in This Course\n- Read the academic literature, including our own\nnotes and papers\n- Learn and practice some existing analytical\nmethods, mainly network methods\n- Appreciate the wide range of domains where\ntheory and methods have been applied\n- Critique existing theory and methods\n- Share our knowledge and experience\n- Analyze some real systems in detail\n- Distil common concepts that emerge from theory\nand that apply to many kinds of systems\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nHow The Course Will Be Organized\n- Class lecture/discussion\n- Text: Six Degrees by Duncan Watts\n- Literature to read before class\n- Three homework assignments and exercises to\nlearn to use the software\n- Case study project with periodic reports in class\n- Class overheads, assigned reading, and optional\nreading posted on class website.\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nGrading Formula\n- 15% in-class participation (especially reading\nconnections)\n- 25% assignments\n- 5% Each for assignments 1 and 2\n- 15% for assignment 3\n- 60% Project\n- 20% Final Written Report\n- 15% Final Presentation\n- 15% Modeling Status Presentation\n- 10% 1st Status Presentation\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nClass Resources\n- You!\n- Course website\n- Syllabus and schedule\n- Assigned readings\n- Background readings\n- Class overheads\n- Collection of MATLAB routines for doing network analysis\n- Online book on social network analysis methods (subset of what\nwe will be using)\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nOur Viewpoint\n- Importance of data and domain knowledge\n- Value of doing case studies with quantitative\nresults\n- Understanding of relevant literature in other\ndomains like systems biology, ecology, and\neconomics\n- Importance of ideology in framing generic\narchitectures and attitudes toward them\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nWhy We Care\n- Lots of things have architectures\n- Physical things - objects, large natural systems\n- Human designed things - products, systems, missions,\norganizations, projects, infrastructures, software, databases,\npolitical and economic systems\n- Natural things - cells, organisms, herds, ecosystems\n- Their architectures either determine, strongly influence, or\nare correlated with their behavior and properties\n- Architectural progress and evolution can be observed in\nboth built and natural systems\n- There are multiple characteristics of architecture and thus\nthere can appear to be multiple architectures if viewed\nthrough these different lenses.\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nA \"Perfect\" Theory of Architecture\nWould Permit Us To:\n- Measure\n- Characterize\n- Understand at a fundamental level\n- Design, operate, evaluate, improve\n- Predict future behavior\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nA Definition of Architecture\nfrom a Practice Perspective\n\"An architecture is the conceptualization,\ndescription, and design of a system, its\ncomponents, their interfaces and relationships with\ninternal and external entities, as they evolve over\ntime.\"\nJohn W. Evans\nSource: \"Design and Inventive Engineering\" Tomasz\nArciszewski Fall 2004\n- Similar to: \"An architecture is a plan for change.\"\nJoel Moses\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nTwo definitions of Architecture\nfrom a Fundamental Perspective\n- The architecture of a complex system is a\ndescription of the structure or regularity of the\ninteractions of the elements of that system\n(inherently the non-random and longer lived\naspects of the system relationships).\n- The architecture of a complex system describes\nthe functional character of the elements and the\nstructure of the relationships among the elements\n\nBaldwin and Clark\nfundamental?)\ndefine common rules of design, structure,\ninterfaces, or behavior not otherwise declared,\nincluding performance evaluation\n- * are part of typical system engineering\n(intermediate between practice and\n- An architecture declares the modules and defines\ntheir functions*\n- It also declares and defines the interfaces,\nincluding which modules they relate and what\nrelations are supported*\n- Finally it declares or embraces standards that\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nInstructor Biases\n- Magee\n- Moses\n- Whitney\n- Your turn Feb 14 (see assignment 1)\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nSome Things Do Not Have Architectures\nwith Internal Structure\n- Random Networks\n- Perfect gases\n- Crowds of people\n- Their behavior can still be analyzed and often\nforms a baseline for comparison to things that do\nhave architectures with significant structure\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nStructural Typology\n- Totally regular\n- Grids/crystals\n- Pure Trees\n- Layered trees\n- Star graphs\n- Deterministic\nmethods used\n- Real things\n- T\nare interested\nhe ones we\nin\n- New methods\nor adaptations\nof existing\nmethods needed\n- No internal\nstructure\n- Perfect gases\n- Crowds of people\n- Classical\neconomics with\ninvisible hand\n- Stochastic\nmethods used\n- Less regular\n-\"Hub and spokes\"\n-\"Small Worlds\"\n-\"Grown\" including\ngrowth models\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nSystems Typology I\n-\nTechnical Systems\n-\nPower-oriented (e.g., cars, aircraft, their engines, etc.)\n-\nInformation-oriented\n-\nPhysically realized: e.g., telephone network, Internet\n-\nNon-physical: e.g., software, mathematical systems (Macsyma, Mathematica)\n-\nOrganizations (of humans)\n-\nTeams\n-\nHierarchies\n-\nNetworks\n-\nSocial/economic \"systems\"\n-\nMarkets\n-\nSocial Classes\n-\nSocial networks like coauthors, citation lists, e-mails, terrorists\n-\nBehaviors: e.g., rumors, diseases, herd mentality\n-\nBiological systems\n-\nCells\n-\nAnimal body plans\n-\nThe process and role of evolution\n-\nCategorizations and taxonomies of these systems also have architectures...\n-\nLinnean and other categorizations of \"the tree of life\"\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nSystems Typology II\n-\nOvertly designed\n-\nCan be an\narchitect\n-\nA design strategy\nis practical\n-\nProducts, product\n-\nInfrastructures\n-\nArchitect not common\n-\nProtocols and standards\nare crucial\n-\nDesign strategy may or\nmay not be practical\n-\nNatural systems\n-\nNo architect\n-\nFollow laws of physics\n-\nRespond to context\n-\nChange, develop\nfamilies\n-\nCars, airplanes\n-\nBell System\n-\nMay be designed when\nsmall\n-\nUsually grow with less\n-\nDifferentiate or\nspeciate\n-\nInteract hierarchically,\n-\nOrganizations\n-\nCentrally-planned\neconomies\ndirection from a\ncommon strategy when\nlarge\n-\nRegional electric grids\n-\nCity streets\n-\nFederal highway\nsystem\nsynergistically,\nexploitatively\n-\nCells, organisms, food\nwebs, ecological\nsystems\nIn all cases, there is legacy, possibly a dominant influence\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nSystems Typology III: Complex Systems Functional\nClassification Matrix from Magee and de Weck\nProcess/Operand\nMatter\n(M)\nEnergy\n(E)\nInformation\n(I)\nValue\n(V)\nTransform or\nProcess (1)\nGE\nPolycarbonate\nManufacturin\ng Plant\nPilgrim\nNuclear\nPower Plant\nIntel Pentium\nV\nN/A\nTransport or\nDistribute (2)\nFedEx\nPackage\nDelivery\nUS Power\nGrid System\nAT&T\nTelecommunic\nation Network\nIntl Banking\nSystem\nStore or\nHouse (3)\nThree Gorge\nDam\nThree Gorge\nDam\nBoston Public\nLibrary (T)\nBanking\nSystems\nExchange or Trade\n(4)\neBay Trading\nSystem (T)\nEnergy\nMarkets\nReuters News\nAgency (T)\nNASDAQ\nTrading\nSystem (T)\nControl or Regulate\n(5)\nHealth Care\nSystem of\nFrance\nAtomic\nEnergy\nCommission\nInternational\nStandards\nOrganization\nUS Federal\nReserve (T)\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nComments on Typologies:\nAttributes of Effective Classification\n-\nStandards for Taxonomy\n- Collectively Exhaustive and Mutually Exclusive\n- Internally Homogeneous\n- Stability\n- Understandable Representation and Naming\n-\nNone of the approaches really fulfill these criteria. Interestingly (more\nlater in course), no categorizations of man made systems have ever\nbeen found that fulfill these criteria. Natural systems categorizations\nhave been found that do fulfill these criteria (Linnaeus and\nMendeleyev) and these have even been the basis of future successful\npredictions.\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nHow to Learn\n- We will learn more about such architecture/structure\nby examining a wide variety of systems such as\nbiological, sociological, economic at a variety of levels\nin addition to the technological and organizational\nsystems of most direct interest to us, because\n- These systems are similar in many ways, perhaps more\nthan we think\n- Since we want to influence structure (not just accept it\nas we are interested in design), we will also explore\nhow structure is determined by looking at system\ntypologies and constraints that influence or determine\nthe structure\n- We will use network methods - a choice of level of\nabstraction\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nImportant topics at the \"Research Front\"\n- How useful are the metrics that exist for architectural or\nstructural attributes in the case of Engineering Systems\n(high complexity and heterogeneity)?\n- Can we invent metrics for heterogeneous systems that are\nmore useful indicators of important \"properties of real\nsystems\"?\n- Can we quantify important properties such as flexibility\nand find analytical relationships to some structural\nmetrics?\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nMore Research Front Topics\n- To what extent are intuitively important aspects of\narchitecture quantifiable and measurable?\n- Are there useful paradigms, patterns, principles or other\nlessons from natural systems that researchers on real\nsystem architectures can use - and how can they be used?\n- Assuming we know what functions, performance, and\nilities we want, what methods can be used to create a\nsuitable architecture?\n- Assuming we know what architecture we want, what are\nthe most effective ways of influencing the architecture of\ncomplex, evolving engineering systems?\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nTerms and Definitions\n- System\n- Function\n- Performance\n- Cost\n- Properties or characteristics\n- Complexity, uncertainty, emergence\n- Ilities - often have life-cycle importance\n- Flexibility\n- Robustness\n- Sustainability\n- Others?\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nForm and Function\n- Function\n- (narrow) what the system does, as opposed to\nPerformance and Ilities\n- (broad) combines function, performance and ilities\n- What is the relationship between Form and\nFunction?\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nOther System Characteristics\n- Complexity\n- Uncertainty\n- Emergence\n- Various definitions have been proposed\nWhat are the relationships, especially trade-offs,\nbetween forms, functions, ilities, performance and\nthese characteristics?\n\nAdv Sys Arch intro\n(c) Daniel E Whitney\n8/24/2006\nOther Words That We Will Use and\nNeed to Understand\n- Element, module, component, agent\n- Pattern (repeating)\n- Interface, boundary\n- Integrality, modularity, dependence,\nindependence, central control, distributed control,\nautonomy\n- Relationship, interaction, path\n- Hierarchy, layer, platform\n- Decomposition, integration\n- Cluster, clique"
    },
    {
      "category": "Lecture Notes",
      "title": "lec2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/c66cacc3511803bfc837c1965f4dbe18_lec2.pdf",
      "content": "Professor C. Magee, 2006\nPage 1\nLecture 2 Outline\n-\nTypologies of architectures (classification or taxonomy)\n- Context (or domain of knowledge)\n- Functional (object-process)\n- Structural\n-\nNetwork Analysis Activity and the improvement of models\n-\nTerms and Definitions\n- Engineering Systems\n- Network Analysis (graph theory)\n-\nResearch Front Issues\n\nProfessor C. Magee, 2006\nPage 2\nHow to Learn\n-\nWe will learn more about such architecture/structure by\nexamining a wide variety of systems such as biological,\nsociological, economic at a variety of levels in addition to the\ntechnological and organizational systems of most direct interest\nto us, because\n-\nThese systems are similar in many ways, perhaps more than we\nthink\n-\nSince we want to influence structure (not just accept it as we are\ninterested in design), we will also explore how structure is\ndetermined by looking at system typologies and constraints that\ninfluence or determine the structure\n-\nWe will use network methods - a choice of level of abstraction\n\nProfessor C. Magee, 2006\nPage 3\nSystems Context Typology I\n-\nTechnical Systems\n-\nPower-oriented (e.g., cars, aircraft, their engines, etc.)\n-\nInformation-oriented\n- Physically realized: e.g., telephone network, Internet\n- Non-physical: e.g., software, mathematical systems (Macsyma,\nMathematica)\n-\nOrganizations (of humans)\n-\nTeams\n-\nHierarchies\n-\nNetworks\n-\nSocial/economic \"systems\"\n-\nMarkets\n-\nSocial Classes\n-\nSocial networks like coauthors, citation lists, e-mails, terrorists\n-\nBehaviors: e.g., rumors, diseases, herd mentality\n-\nBiological systems\n-\nCells\n-\nAnimal body plans\n-\nThe process and role of evolution\n\nSystems Context Typology II\nProfessor C. Magee, 2006\nPage 4\n-\nOvertly designed\n-\nCan be an\narchitect\n-\nA design strategy\nis practical\n-\nProducts,\nproduct families\n-\nCars, airplanes\n-\nBell System\n-\nOrganizations\n-\nCentrally-\nplanned\neconomies\n-\nInfrastructures\n-\nArchitect not common\n-\nProtocols and\nstandards are crucial\n-\nDesign strategy may\nor may not be\npractical\n-\nMay be designed\nwhen small\n-\nUsually grow with\nless direction from a\ncommon strategy\nwhen large\n-\nRegional electric grids\n-\nCity streets\n-\nFederal highway\nsystem\n-\nNatural systems\n-\nNo architect\n-\nFollow laws of\nphysics\n-\nRespond to context\n-\nChange, develop\n-\nDifferentiate or\nspeciate\n-\nInteract\nhierarchically,\nsynergistically,\nexploitatively\n-\nCells, organisms,\nfood webs, ecological\nsystems\n-\nFriendship\ngroupings?\n-\nCo-author networks?\nIn all cases, legacy (similar to path dependency)\nis possibly a dominant influence\n\nProfessor C. Magee, 2006\nPage 5\nSystems Typology : Complex Systems Functional\nClassification Matrix from Magee and de Weck\nProcess/Operand\nMatter\n(M)\nEnergy\n(E)\nInformation (I)\nValue\n(V)\nTransform or Process\n(1)\nGE\nPolycarbonate\nManufacturing\nPlant\nPilgrim\nNuclear Power\nPlant\nIntel Pentium V\nN/A\nTransport or\nDistribute (2)\nFedEx Package\nDelivery\nUS Power Grid\nSystem\nAT&T\nTelecommunica\ntion Network\nIntl Banking\nSystem\nStore or\nHouse (3)\nThree Gorge\nDam\nThree Gorge\nDam\nBoston Public\nLibrary (T)\nBanking\nSystems\nExchange or Trade (4)\neBay Trading\nSystem (T)\nEnergy\nMarkets\nReuters News\nAgency (T)\nNASDAQ\nTrading\nSystem (T)\nControl or Regulate\n(5)\nHealth Care\nSystem of\nFrance\nAtomic Energy\nCommission\nInternational\nStandards\nOrganization\nUS Federal\nReserve (T)\n\nProfessor C. Magee, 2006\nPage 6\nSome Things Do Not Have Architectures\nwith Internal Structure\n-\nRandom Networks\n-\nPerfect gases\n-\nCrowds of people\n-\nTheir behavior can still be analyzed -indeed they are usually\neasier to analyze than real systems. Thus, they often form a\nbaseline for comparison to things that do have architectures\nwith significant structure\n\nStructural Typology\n-\nTotally regular\n- Grids/crystals\n- Pure Trees\n- Layered trees\n- Star graphs\n-\nDeterministic\nmethods used\n-\nReal things\n- The ones we\nare interested\nin\n-\nNew methods or\nadaptations of\nexisting methods\nneeded\n-\nNo internal structure\n- Perfect gases\n- Crowds of\npeople\n- Classical\neconomics with\ninvisible hand\n-\nStochastic methods\nused\n- Less regular\n-\"Hub and spokes\"\n-\"Small Worlds\"\n-Communities\n-Clusters\n-Motifs\nProfessor C. Magee, 2006\nPage 7\n\nProfessor C. Magee, 2006\nPage 8\nComments on Typologies:\nAttributes of Effective Classification\n-\nStandards for Taxonomy\n-\nCollectively Exhaustive and Mutually Exclusive\n-\nInternally Homogeneous\n-\nStability\n-\nUnderstandable Representation and Naming\n-\nNone of the approaches just reviewed really fulfill these criteria. Interestingly\n(more later in course), no categorizations of man made systems have ever\nbeen found that fulfill these criteria. Natural systems categorizations have\nbeen found that do fulfill these criteria (Linnaeus and Mendeleyev) and these\nhave even been the basis of future successful predictions.\n\nProfessor C. Magee, 2006\nPage 9\nWhat has been going on recently in\n\"The New Science of Networks\"?\n- The Physicists and their friends have come to this area strongly\nstarting with the paper in Nature by Watts and Strogatz in 1998\n- The publications started with a few per year and now have\nreached 1000's per year in various journals (plus 3 books).\n\nProfessor C. Magee, 2006\nPage 10\nPapers with \"Complex Networks\" in Title\n2,000\n2,310\n2,408\n2,603\n2,785\n3,087\n3,701\n4,820\nYear\nFigure by MIT OCW. Adapted from: Introduction to Complex Networks: Modeling, Control and Synchronization.\nBriefing by Guanrong Chen, director, Centre for Chaos Control and Synchronization, City University of Hong Kong,\nto the First Chinese Conference on Complex Networks, Wuhan, China, April 2005.\n2,400\n2,800\n3,200\n3,600\n4,000\n4,400\n4,800\n5,200\n\nProfessor C. Magee, 2006\nPage 11\nMagazines with major article on Networks\n-\nCircuits and Systems\n-\nScience\n-\nNew Scientist\n-\nNature\n-\nNature Reviews\n-\nProteomics\n\nProfessor C. Magee, 2006\nPage 12\nWhat has been going on recently in\n\"The New Science of Networks\"?\n- The Physicists and their friends have come to this area strongly\nstarting with the paper in Nature by Watts and Strogatz in 1998\n- The publications started with a few per year and now have\nreached 1000's per year in various journals (plus 3 books).\n- All of the effort builds upon work done by sociologists and\nOperations Researchers over the preceding 40 or more years.\n- Strong activities now exist at a variety of academic institutions:\n- The University of Michigan\n- Oxford University\n- The Sante Fe Institute\n- Columbia University\n- Notre Dame University\n- Many others\n\nProfessor C. Magee, 2006\nPage 13\nWhy might We (who are interested in\ndesign, management, behavior, etc.\nof complex systems) care?\n- A strong mathematical basis is being established for developing\nrelatively tractable models of large-scale complex systems\n- We need more modeling tools that are useful for large-scale\nsystems with many elements, interactions and complex\nbehaviors\n- Quantifiable metrics are being developed that may be of use in\npredicting behavior of complex large-scale systems\n- We need such metrics as they would be valuable in\ndesigning and managing our systems\n- Algorithms for extracting information from complex systems\nare being developed and these can improve \"observability\" of\nsuch systems.\n- New visual representations for complex systems are being\ndeveloped\n\nProfessor C. Magee, 2006\nPage 14\nComparative Progress in Understanding\nand performance: CLM\nobjective/subjective observations\n- 1940-2000 improvement\n- Small-scale electro-mechanical systems (x40-100)\n- Energy transformation systems (x 10-20)\n- Information processing systems (x to )\n- Cosmology (x 30-100)\n- Paleontology (x 50)\n- Organizational theory and practice (x 1.1 to 2)\n- Economic systems (x 1.1 to 2)\n- Complex large-scale socio-technological systems (?)\n- Possible reasons for large differences for organization issues\n- Lack of attention by deep thinkers\n- Low utilization of mathematical tools\n- \"Hardness\" of problem particularly human intent\n- Difficulties with detailed quantitative observation to\nimprove models (hiding of data, privacy etc.)\n\nProfessor C. Magee, 2006\nPage 15\nThe Iterative Learning Process\ndeduction\ninduction\ndeduction\ninduction\nObjectively obtained quantitative data (facts, phenomena)\nhypothesis ( model, theory that can be disproved)\nAs this process matures,\nwhat new can the models accomplish?\nThe major accomplishment will be the rapid facilitation\nof a transition to engineering (vs. craft approaches) for the\ndesign of complex social/ technological systems\n\nProfessor C. Magee, 2006\nPage 16\nWhat is needed to greatly improve the\npractice of complex social/ technological\nsystem design?\n- The major opportunity is to transition from the \"pre-\nengineering\" (experiential or craft) approach now widely used\nto a solid (post 1870 at least) engineering approach to these\ndesign problems. What does this entail?\n- If you are doing work where all factors involved are\nquantitatively and accurately determined from mathematical\napproaches, you are possibly doing accounting or actuarial\nwork but you are not doing engineering design because you are\nnot doing creative work.\n- If you are pursuing a creative end but are using no quantitative\nmethods developed from a scientific perspective, you are\npossibly a sculptor or a painter but are certainly not an engineer\n- The critical need to greatly accelerate the rate of improvement\nin practice is objective methods for quantitative observation to\ndevelop reliable and well-understood \"simple\" models.\n\nProfessor C. Magee, 2006\nPage 17\nTerms and Definitions\n-\nSystem\n-\nFunction\n-\nPerformance\n-\nProperties or characteristics\n- Complexity, uncertainty, emergence\n-\nIlities - often have life-cycle importance\n- Flexibility\n- Robustness\n- Sustainability\n- Others?\n\nProfessor C. Magee, 2006\nPage 18\nForm and Function\n-\nFunction\n- (narrow) what the system does, as opposed to\nPerformance and Ilities\n- (broad) combines function, performance and ilities\n-\nWhat is the relationship between Form and Function?\n\nProfessor C. Magee, 2006\nPage 19\nOther System Characteristics\n-\nComplexity\n-\nUncertainty\n-\nEmergence\n-\nVarious definitions have been proposed\nWhat are the relationships, especially trade-offs, between forms,\nfunctions, ilities, performance and these characteristics?\n\nProfessor C. Magee, 2006\nPage 20\nNetwork Analysis Terminology\n\nNetwork Analysis Essentials\n- Network Analysis (or Science?) consists of a\nrelatively simple way (Euler was first) of\nmodeling or representing a system\n-\nEach Element (or subsystem or) is a node\n-\nThe relationship between nodes (elements or) is\na link\n- The appeal of generality of application is based upon\nthe very simple model for a system described by this\nrepresentation combined with the mathematics of\ngraph theory for quantifying various aspects of such\nmodels.\n- A limitation for widespread utility is the simplicity\n- The research front is where people are sacrificing as\nlittle simplicity as possible while making the models\nreflect more reality and thus have increased utility\nProfessor C. Magee, 2006\nPage 21\nLink\nNode\nFigure by MIT OCW.\n\nProfessor C. Magee, 2006\nPage 22\nNetwork Analysis Terminology\n-\nNode = Vertex (Element, Component, Subsystem, Agent?)\n-\nLink = Edge (Relationship, Interaction, Interface?,Flow?)\n-\nRandom, rewiring,\n-\nDegree (average degree, degree distribution)\n-\nPath Length (Path)\n-\nSize, density, sparseness, Connectivity\n-\nCommunity = Clique, (cluster?, module?), modularity\n-\nDegree Correlation Coefficient\n- Centrality, Prestige, closeness, proximity, Betweenness,\nAssortative Mixing, Homophily\n- Motifs = Patterns\n- Self-similarity, Scale-Free?, Scale Rich?\n- Preferential Attachment\n- Metrics, Constraints\n\nProfessor C. Magee, 2006\nPage 23\nMetrics (as used in this class)\n-\nA network analysis metric is a quantitative characteristic of a\nsystem that is derived from representing the observed system\nas a network (and applying graph theory or other means of\nquantitative calculation)\n\nProfessor C. Magee, 2006\nPage 24\nNetwork metrics\n- Size\n- Density of interactions, sparseness\n- Path Length -dependence on size\nImage removed due to copyright reasons.\n\nProfessor C. Magee, 2006\nPage 25\nNetwork Metrics I\n- n, the number of nodes\n- m, the number of links\n- m/n is the average degree <k> as the number of links on a given\nnode, k, is the degree.\n- m/[(n)(n-1)] or <k>/(n-1)is the \"sparseness\" or normalized\ninterconnection \"density\"\n- Path length, l\n- \"Small Worlds\"\n- In a \"Small World\", l is relatively small\n- And at given <k>, l ~ to ln n or less rapid rise is taken to\nmean \"Small World\" (where clustering is high)\n∑\n≥\n-\n=\nj\ni\nij\nd\nn\nn\nl\n)1\n(\n\nProfessor C. Magee, 2006\nPage 26\nImportant topics at the \"Research Front\"\n-\nHow useful are the models and metrics that exist for\narchitectural or structural attributes in the case of Engineering\nSystems (high complexity and heterogeneity)?\n-\nCan we quantify important properties such as flexibility and\nfind analytical relationships to some structural metrics?\n-\nCan we invent models and metrics for heterogeneous systems\nthat are more useful indicators of important \"properties of real\nsystems\"?\n\nProfessor C. Magee, 2006\nPage 27\nSee Newman, M. E. J. \"The Structure and Function of Complex Networks.\" SIAM Review 45, no. 2 (2003): 167-256. Society for Industrial and Applied Mathematics.\nAn undirected network\nwith only a single type\nof node and a single\ntype of link\nA\nA network with varying\nnode and link weights\nA directed network in\nwhich each link has a\ndirection\nA network with\na number of discrete\nnode and link types\nB\nC\nD\nMissing are networks that have nodes with multiple functions and that have multiple types of links. For\nexample, nodes that transform energy and also calculate and that have links that pass information, control\nsignals, energy, etc.\nVARIOUS CLASSES OF NETWORKS\nFigures by MIT OCW.\n\nNetwork Analysis Essentials\n- Network Analysis (or Science?) consists of a\nrelatively simple way (Euler was first) of\nmodeling or representing a system\n- Each Element (or subsystem or) is a node\n- The relationship between nodes (elements or)\nis a link\n- The appeal of generality of application is based\nupon the very simple model for a system described\nby this representation combined with the\nmathematics of graph theory for quantifying\nvarious aspects of such models.\n- A limitation for widespread utility is the simplicity\n- The research front is where people are sacrificing\nas little simplicity as possible while making the\nmodels reflect more reality and thus have\nincreased utility\nProfessor C. Magee, 2006\nPage 28\nLink\nNode\nFigure by MIT OCW.\n\nProfessor C. Magee, 2006\nPage 29\nMore Research Front Topics\n-\nTo what extent are intuitively important aspects of architecture\nquantifiable and measurable?\n-\nAre there useful paradigms, patterns, principles or other lessons from\nnatural systems that researchers on real system architectures can use\n- and how can they be used?\n-\nAssuming we know what functions, performance, and ilities we\nwant, what methods can be used to create a suitable architecture?\n-\nAssuming we know what architecture we want, what are the most\neffective ways of influencing the architecture of complex, evolving\nengineering systems?\n\nProfessor C. Magee, 2006\nPage 30\nLecture 2 Outline\n-\nTypologies of architectures (classification or taxonomy)\n- Context (or domain of knowledge)\n- Functional (object-process)\n- Structural\n-\nModels and their improvement-network analysis activity\n-\nTerms and Definitions\n- Engineering Systems\n- Network Analysis (graph theory)\n-\nResearch Front Issues\n-\nComments on assignment #1"
    },
    {
      "category": "Lecture Notes",
      "title": "lec3_hw2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/5680ffd3867c58be5719b5af151eb148_lec3_hw2.pdf",
      "content": "Professor C. Magee, 2006\nPage 1\nESD 342 Session 3\nFaculty: Magee, Moses, Whitney\nFebruary 14, 2006\n\nProfessor C. Magee, 2006\nPage 2\nPoint of View & Biases Presentations\n-\nReverse Alphabetical Order: Please write down or remember\nwho you follow and come to the front as soon as that person\nfinishes or as soon as the moderator declares that their 3\nminute limit is reached as we are very tight on timing\n- Yang, Wirthlin, Weibel, Vaisnav, Underwood,\nTapia-Ahumada, Sudersanam, Steel, Song, Noor,\nNicol, Mozdzanowska, Martin, Long,\nLivengood, Lin, Lindsey, Hanowsky,\nFrank, Drayside, Castro, Bounava,\nBonnefoy, Avnet\n\nProfessor C. Magee, 2006\nPage 3\nPossible Importance of Point of View/\nBias Exercise\n-\nPotential Strength\n- Contributions to knowledge (intellectual or research) and\ncontributions to practice can be enhanced by having a\ndefinite point of view and/or personal style.\n-\nPotential Drawback\n- \"It isn't what you do not know that gets you into trouble\nbut what you think you know that just ain't so\"\n\nProfessor C. Magee, 2006\nPage 4\nAssignment #2: Systems Proposed for\nProject Work\n-\nAssignment #2 posted on 2/14\n- One written page submitted to all three instructors by 1 PM\non Wednesday, February 22.\n- 30 copies brought to class for discussion on Thursday, Feb.\n23.\n- Each student is to make an independent proposal to fulfill\nthis assignment but down-selection will be used to form 3\n(or possibly 2 or 4) person teams for the remainder of the\nproject.\n-\nIssues to think about in the choice of a system to propose:\n- Why intensive study of this system may help all of us learn\nmore about architecture\n- The existence of data sources that might allow building and\nexercising network models of (or helpful in understanding)\nthe system\n\nProfessor C. Magee, 2006\nPage 5\nA Few \"Thought-starter\" Project Ideas\n-\nContinue one of last year's projects-see web site\n-\nImprove detail of Western Power Grid or some other part of the\nelectric power grid\n-\nAnalyze a software system or a language over time\n-\nBuild and analyze a collection of social network data and its time\ndependence\n-\nInvestigate and model the old Bell System PSTN, possibly including\nits growth over time\n-\nInvestigate and model competitive and supply-chain systems of\ncorporations (analyst information)\n-\nBuild networks from \"people who bought this book also bought...\" or\nsomething analogous from eBay or MySpace\n-\nMap the New England power grid from 1965 or 2003 blackout reports\n-\nCompare public transit layouts in large cities world wide\n-\nMake an agent model of distribution system growth, such as nerves,\ncapillaries, transit or highways"
    },
    {
      "category": "Lecture Notes",
      "title": "lec4.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/8c4de1f3e6df9d9ae32a17db9ee6e6c6_lec4.pdf",
      "content": "8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nNetworks in System Architecture\n- Goals of this class:\n- Background on graph theory and network\nrepresentations - more to come in the\nfollowing weeks\n- Network applications to system\nrepresentations and analyses\n- Quantitative evaluations possible\n- Examples\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nWhy Study Networks?\n- Networks capture relationships\n- Networks have structure (possibly random)\n- Various metrics exist that capture various aspects\nof this structure\n- In some cases the structure or the metrics can be\nrelated to important properties of the system or its\nbehavior\n- A theory for engineering systems based on these\nmethods is just getting started\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nEvery (Network) Model Is a Choice of\nLevel of Abstraction\n- \"High\" abstraction\n- Summarize, generalize, compare\n- Don't need domain knowledge\n- \"Low\" abstraction\n- Valid detail\n- Explainable differences\n- Need domain knowledge\n- Models and analyses at many levels are needed\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nNRC Report on \"Network Science\"\nResearchers across diverse domains\nshare an implicit understanding that a\nnetwork is more than topology alone.\nIt also entails connectivity, resource\nexchange, and locality of action.\n- Connectivity. A network has a well-\ndefined connection topology in which\neach discrete entity (node) has a finite\nnumber of defined connections (links)\nto other nodes. In general, these links\nare dynamic.\n- Exchange. The connection topology\nexists in order to exchange one or\nmore classes of resource among\nnodes. Indeed, a link between two\nnodes exists if and only if resources of\nsignificance to the network domain\ncan be directly exchanged between\nthem.\n- Locality. The exchanged resource is\ndelivered, and its effects take place,\nonly in local interactions (node to\nnode, link to link). This locality of\ninteraction entails autonomous agents\nacting on a locally available state.\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGraphs and Networks\n- A graph is a collection of nodes connected\nby arcs (directed, with arrows) or links\n(undirected, no arrows)\n- In graph theory, undirected links are called\nedges\n- A network is a graph\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nSingle Mode and Multimode\n- Single mode network\n- Nodes are identical\n- Multimode\n- Nodes can be in different classes\n- People\n- Events attended by those people\n- Equivalent to two or more single mode networks\n- Common multimode is bipartite\nFigures removed for copyright reasons.\nSee Newman, M. E. J., and J. Park. \"Why social networks are different from other\ntypes of networks.\" Phys Rev E 68, no. 036122 (2003).\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGraph/Network \"Rules\"\n- Links connect pairs of nodes\n- Links can be directed or undirected\n- Nodes can have any number of impinging\nlinks\n- Dual graphs can be formed\n- Arcs become nodes\n- Nodes become arcs\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nNodes Can Be\n- Places\n- Things\n- Jobs, tasks, process steps\n- Calculations or calculation steps\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nArcs/links Can Be\n- Physical paths, mechanical joints\n- Abstract or real relationships\n- Directed: A commands B, is the father of B, occurs\nbefore B...\n- Undirected: A lives near B, is on the same side as B...\n- Indications of flow of material or information\n- Annotated to represent capacity, direction, content\n- Carriers of single or multiple geometric\ndimensions\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGraphs Can Be Classified As...\n- Metric (arcs have real lengths, and node locations\nobey the triangle inequality)\n- Non-metric (the layout is purely logical)\n- Planar (can be drawn so that no arcs cross)\n- Connected or unconnected\n- Connected: a path exists between every pair of nodes\n- Simple: no self-loops, ≤1 link between nodes\n- Able/unable to support a looped path or a path that\ntouches every node\n- These are not mutually exclusive\n\nA Classification of Networks\nFormal Tree-Structured\nUnique Path to the T\n(No horizontal links\nStrictly Ordered\nPure Layered Struct\nNo layer-skipping\nHorizontal links allow\nPartially Ordered\nHierarchies\nOrdered\nTop Node\nRegular\nGeneral Networks\nNon-Hierarchical\nUnordered\nNo top node\nNetworks\nArcs, Nodes\nArc joins exactly 2 n\nThis classification is\na formal tree-structured\nhierarchy\nSimple\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nAdvantages of Graph Representations\n- Abstraction\n- Sharp focus on relationships\n- Ability to calculate many relevant\nproperties of the modelled system,\nincluding many that accommodate huge\ngraphs\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nDisadvantages or Shortcomings of\nTypical Models\n- Multiple properties often require separate graphs\n- Nodes and arcs are usually treated as identical\n- Seeking abstraction\n- Not knowing enough about the system\n- Exceptions: arcs with costs, bounded flow or one-way\nflow, nodes classified as toll-takers, sources, sinks, and\npass-throughs\n- Theory does not deal with the graph as a whole the\nway, say, set theory does\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nReal and \"Not Real\" Networks\n- Real: road network, mechanical assembly\n- Not real(?): coauthor or movie actor network\n- Real but documentable only in a statistical sense:\ntransmission of flu or rumors\n- Much depends on the word \"also\"\n- A writes a paper with B and also one with C\n- A reacts with B and also with C\n- A is bolted to B and also bolted to C\n- B sends signals to A which also sends signals to C\n- B eats A which also eats C\nA\nC\nB\nA\nC\nB\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGraph Theory\n- Euler is the pioneer\n- How many paths, routes, faces\n- Planar and not planar\n- Shortest paths\n- Likelihood of a giant cluster\n- For random graphs, the authority is Erdos\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nSome Theoretical or Canonical Graph\nTypes\n- Planar\n- Random\n- Grid structured\n- Trees\n- Hub and spokes\n- Possessing Hamilton or Euler circuit\n- Hamilton: touching every node once\n- Euler: touching every arc once\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nExamples of various types of networks.\nan undirected network\nwith only a single type of\nvertex and a single type\nof edge\na network with a number\nof discrete vertex and\nedge types\na network with\nvarying vertex and\nedge weights\na directed network\nin which each edge\nhas a direction\nAcyclic and cylic\ndifference following slide\nSource: M. E. J. Newman, The Structure and Function of Complex Networks, SIAM Review, Vol. 45, No. 2, pp . 167-256, 2003 Society for Industrial and Applied Mathematics\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nThe 2 best studied information networks;\ncitation network and the World Wide Web\nWorld Wide Web, a network of text pages\naccessible over the Internet, in which the vertices\nare pages and the directed edges are hyperlinks.\nThere are no constraints on the Web that forbid\ncycles and hence it is in general cyclic.\nCitation network of academic papers in which\nthe vertices are papers and the directed edges\nare citations of one paper by another. Since\npapers can only cite those that came before\nthem the graph is acyclic -it has no closed\nloops.\nSource: M. E. J. Newman, The Structure and Function of Complex Networks, SIAM Review, Vol. 45, No. 2, pp . 167-256, 2003 Society for Industrial and Applied Mathematics\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nAnother Well-Studied Network: The\nKarate Club\nThis not how\nthe club split.\nNode 9 is\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n\"Traditional\" Network Theory\n- Main paradigm is flows\n- Shortest paths, max flow or lowest cost paths\n- Assignment, enumeration\n- Traveling salesman and other routing problems\n- Many problems can be converted to graph\nnotation and solved using network methods\n- Basic text is Network Flows by Ahuja, Magnanti,\nand Orlin\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nExample Networks\n- Road map\n- Electric circuit or pipe system\n- Structure of bridge or building, with load paths\n- Organizational chart or social network\n- Markov chain\n- Control circuit feedback loop\n- Phone system\n- Chemical reaction\n- Sequential event plan\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMore Example Analyzable Networks\n- Manufacturing process\n- Assembly sequence\n- Schedule\n- Family tree\n- Ecological food chain\n- Taxonomy of living things, rocks, and other\nnatural hierarchies\n- Naval battle, military campaign\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nPossible Analyses\n- Finding an ordering on the nodes\n- Schedule, seating arrangement, space allocation,\nassembly sequence\n- Enumerating cut sets\n- Analyzing electric circuits and other applications\nof linear algebra\n- Calculating mechanism properties like mobility\nand constraint\n- Calculating control system stability\n- Estimating or calculating system complexity\n- Paths: shortest, max capacity, least cost, critical,\nfirst passage time, etc. Second place, 3rd place, etc\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMatrix Representation\n»A=[0 1 0 1;1 0 1 1;0 1 0 0;1 1 0 0]\nA =\n0 1 0 1\n1 0 1 1\n0 1 0 0\n1 1 0 0\n»\nA is called the adjacency matrix\nA(i, j) =1 if there is an arc from i to j\nA( j,i) =1 if there is also an arc from j to i\nIn this case A is symmetric and the graph is undirected\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nBasic Graph Definitions and\nCalculations\n- Nodal degree, in-degree, out-degree\n- Average degree\n- Degree sequence\n- Rewiring\n- Degree correlation\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nBasic Facts About Undirected Graphs\n- Let n be the number of nodes and m be the\nnumber of links\n- Then average nodal degree is\n- The Degree sequence is a list of the nodes\nand their respective degrees\n- The sum of these degrees is\n- D=sum(A) in Matlab\n- sum(sum(A)) = 2m\n< k >= 2m /n\nD = [3 1 1 1]\ndi\ni=1\nn\n∑\n= 2m\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nRewiring\n- A way to deliberately transform a graph\n- Several ways this is done\n- Unhooking one end of a link and hooking it in\nsomewhere else\n- Adding a new link\n- Pairwise rewiring that preserves the original\ndegree sequence\n- This can disconnect the graph unless you take care\nto reject rewirings that do so\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nRewiring - 2\nUnhook-rehook links\nPreserving degree\nAdd links\nFigure by MIT OCW. After Watts & Strogatz, 1998.\nRegular\nRandom\nSmall-world\nIncreasing Randomness\np = 0\np = 1\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMore Definitions and Calculations\n- Geodesic - shortest path between two nodes\n- Average path length = avg of all geodesics\n- Graph diameter = longest geodesic\n- Clustering coefficient = fraction of all\npossible triangles actually present\n- More on these in later classes\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nPlanar Graph Example\nn = number of nodes\nm = number of links\nf = number of facets\nf = m -n + 2\nE ≤3n -6\n∴fmax = 2n -4\nMeshness Ratio M = f / fmax\nTrails made by ants in planar sand piles have average\nnodal index <k> = 2.2 and M ~ 0.1\nNote: for connected planar graphs:\n< k >max= 6n -12\nn\nn→inf\n⎯\n→\n⎯\n⎯ 6\n< k >min= 2n -2\nn\nn→inf\n⎯\n→\n⎯\n⎯ 2\n0 ≤M ≤1\n\"Efficiency and Robustness in Ant Networks of Galleries,\"\nJ. Buhl, J. Gautrais1, R.V. Sol e, P. Kuntz, S. Valverde2, J.L. Deneubourg, and G. Theraulaz,\nEur. Phys. J. B 42, 123-129 (2004)\n< k >\nn→inf\n⎯\n→\n⎯\n⎯ 4M + 2\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMatlab Routines\n- On Stellar there are several Matlab routines\nthat calculate many of these simple statistics\n- Of course you can write your own.\n- I have downloaded many Matlab graph\ntheory routines but many seem to have bugs\nor do not work the way I expect.\n- Always test any routine (your own or\nsomeone else's) on some simple graphs first\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\ng =\n»isconnected(g)\nans =\n0 % i.e., false\n»g=g+g' %' = transpose\ng =\n»isconnected(g)\nans =\n1 % i.e., true\nSimple Test\n\"Yeah. Sorry. I only built it for undirected graphs.\"\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nAnother\nFunny I didn't catch that before.\nLine 49 of dfs.m should have a return statement.\nOn 1/15/06, Daniel Whitney wrote:\n> Kevin\n>\n> Sorry to bother you with what I suppose is a simple question:\n>\n> Can you tell me why connected_graph returns true for the adj_mat\n>\n> »adj_mat=[0 1 0 0;1 0 0 0;0 0 0 1;0 0 1 0]\n>\n> adj_mat =\n>\n> 0 1 0 0\n> 1 0 0 0\n> 0 0 0 1\n> 0 0 1 0\n>\n> »connected_graph(adj_mat,0)\n>\n> ans =\n>\n> 1\n>\n> »\n>\n> This graph is obviously disconnected. Your\n> routine draw_graph confirms this - see attached\n> jpg.\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nLink Between Networks and Systems\n- Hierarchical descriptions\n- General network descriptions\n- Depiction of the decomposition process as a\ntree\n- Depiction of the synthesis process as\nclustering\n- Early thinkers: Simon, Alexander\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nAlexander's Depiction of System Design\nRequirements conflict\nA system and its\ninternal relationships\nGood\npartition\nResult of clustering many\nconflicting requirements\nBad\npartition\nC. Alexander\nNotes on the Synthesis of Form,\nCambridge: Harvard U Press, 1964\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n- Simon: modularity related to evolution, survival,\nand complexity (1962)\n- Can't survive (due to propagating failures) unless there\nis some independence between modules\n- The modules form into (nested/closed) hierarchies\n- Evolution can proceed in separate activities\n- Also: decomposable systems are less complex\n- Alexander: modularity related to efficient design\nprocedures (1964)\n- Can't make design decisions (due to interactions)\nunless they are clustered meaningfully and dealt with in\nbulk\n- Design can proceed as independent steps\n- The right clusters may not be the obvious visible ones\n- Both: perfect clean decomposition is impossible\nSimon and Alexander\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n\"New\" Network Theory\n- Not new in social science\n- Main paradigm is connections and their\nimplications: connectedness of the graph, statistics\nof nodal index k = links/node\n- Identification of common statistical properties in a\nwide variety of graphs of real systems, both\nnatural and man-made\n- Clusters, cliques\n- Scale free and power law properties\n- Analyses of percolation, spread of diseases and\nrumors, vulnerability to attack\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nDiameter and Structure\n- How many plane changes are needed to fly from\ncity A to city B and how does this change as the\nnetwork grows?\n- In a point to point network, the number might\ngrow linearly with the number of cities in the\nnetwork, unless there is a link between most pairs\n(max n(n-1)/2 links needed)\n- In a hub-spokes network, the number may hardly\ngrow at all even if almost no cities are directly\nlinked\n- Of course, the distance flown and time spent\nflying and waiting are longer for hub-spokes\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nPart of Western Power Grid\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nDrawn by Spencer Lewis for last year's class\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGlynn & Pelland's Maps of Decisions\nand Locations\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nHierarchical Organization of\nModularity in Metabolic\nNetworks\nE. Ravasz, A. L. Somera,\nD. A. Mongru, Z. N. Oltvai,\nA.-L. Baraba si\nSCIENCE VOL 297\n30 AUGUST 2002 p 1551\nA.\nScale free\nB.\nModular, not scale free\nC.\nNested modular, scale free\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n(A) The topologic overlap matrix\ncorresponding to E. coli metabolism, together\nwith the corresponding hierarchical tree\n(top) that quantifies the relation between the\ndifferent modules.\n(B) Three-dimensional\nrepresentation of the reduced E. coli metabolic\nnetwork. Each node is color coded by the predominant\nbiochemical class to which it belongs\nand is identical to the color code applied to the\nbranches of the tree shown in (A).\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nHierarchy of Metabolism\n(C) Enlarged view of the substrate module of pyrimidine\nmetabolism. The colored boxes denote the first\ntwo levels of the three levels of nested modularity\nsuggested by the hierarchical tree.\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nClustering of Metabolic Reactions\n(D)\nA detailed diagram of the metabolic reactions\nthat surround and incorporate the pyrimidine\nmetabolic module. Red-outlined boxes denote\nthe substrates directly appearing in the reduced\nmetabolism and the tree shown in (C).\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n\"Motifs\" in Networks\nFigure by MIT OCW.\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nBoilers\nTurbines\nPipes\nFWD\nAFT\nFR1\nER 1\nFR 2\nER 2\nFWD\nAFT\nSTB\nPORT\nValves\ny\nx\nx\ny\nA\nB\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nA\nB\nMechanical Drawing\nNetwork Graph\na\nb\nNote: The network graph is the\ndual of the mechanical drawing\nShip Steam System\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nCape Cod Roadways\nSagamore\nBourne\nCotuit\nChatham\nOrleans\nP'Town\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nRoute 6A\nRoute 6\nRoute 28\na\nb\nc\nd\ne\nf\nh\ng\nj\ni\nMany\nlike\nthis\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nNetwork Analysis of Electric Circuits\nTopology of technology graphs: Small world patterns in electronic circuits,O Ramon\nFerrer i Cancho, Christiaan Janssen, and Ricard V. Sole, PHYSICAL REVIEW E,\nVOLUME 64 046119 S 1 thru - 5\nThis article does not use the\nword planar\n(a) A lowly clustered logic circuit having C=0.0013<Crand=0.015 and d=4.33=drand=4.22.\nThe graph has N=236 vertices and (k)=3.64.\n(b) A highly clustered logic circuit having c=0.053>Crand=0.0099 and d=5.06=drand=4.99.\nThe graph has N=320 vertices, and (k)=3.175.\n\n10/16/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nPossible Data Sets\n- Western Power Grid\n- Example at the end of Alexander Notes on\nthe Synthesis of Form\n- Most any road map\n- Coauthors, metabolites\n- Pajek web site (huge networks)\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nTutorial Book\n- http://faculty.ucr.edu/~hanneman/nettext/in\ndex.html\n- Linked to UCINET software\nhttp://www.analytictech.com/ucinet/ucinet.htm\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nResources, with search paths\n-\nGoogle>graph theory>\n- http://people.freenet.de/Emden-Weinert/graphs.html\n- http://www.c3.lanl.gov/mega-math/gloss/graph/gr.html\n- http://www.utm.edu/departments/math/graph/\n- http://mathworld.wolfram.com/topics/GraphTheory.html\n-\nGoogle>social science network analysis>\n- http://www.sfu.ca/~insna/INSNA/soft_inf.html\n- http://www.research.att.com/sw/tools/graphviz/ (found on\nINSNA/soft_inf, software toolkit for drawing graphs and networks)\n-\nGoogle> graph theory analysis software>\n- http://www-personal.umich.edu/~mejn/courses/2004/cscs535/ (Mark\nNewman's course at U of M)\n- http://eclectic.ss.uci.edu/~drwhite/Anthro179a/SocialDynamics02.ht\nml >\nhttp://mlab48.itc.uci.edu/~eclectic/drwhite/Complexity/SpecialIssue.h\ntm\n- http://directory.google.com/Top/Science/Math/Combinatorics/Software/G\nraph_Drawing/\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMore Resources\n-\nGoogle> graph theory analysis software>\n- http://www.ececs.uc.edu/~berman/gnat/ (a research group)\n- http://mathforum.org/library/topics/graph_theory/?keyid=1007717\n1&start_at=51&num_to_see=50 (The Math Forum @ Drexel)\n- http://www.ai.mit.edu/~murphyk/Bayes/bayes.html (Bayesian\nbelief networks)\n- http://www.math.niu.edu/~rusin/known-math/index/05-XX.html\n(combinatorics) > http://www.math.niu.edu/~rusin/known-\nmath/index/05CXX.html (graph theory)\n- http://www.indiana.edu/%7Ecortex/connectivity_toolbox.html\n(matlab toolbox)\n- http://www.mathworks.com/matlabcentral/fileexchange/loadFile.d\no?objectId=3941&objectType=file (another matlab toolbox)\n- http://jung.sourceforge.net (a java toolkit)\n- http://www-personal.umich.edu/~mejn/pubs.html (Mark\nNewman's publications)\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nMore\n- http://nicomedia.math.upatras.gr/courses/mnets/in\ndex_en.html (Univ of Patras course with readings)\n- http://web.mit.edu/knh/www/11531.html (another\nMIT course)\n- http://en.wikipedia.org/wiki/Small_world_phenom\nenon#The_scale-free_network_model\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nProminent Network Researchers\n- Barabasi http://www.nd.edu/~alb/\n- Doyle http://www.cds.caltech.edu/~doyle/\n- http://www.cds.caltech.edu/~doyle/CmplxNets/\n- http://hot.caltech.edu/\n- Newman http://www-personal.umich.edu/~mejn/\n- Strogatz http://tam.cornell.edu/Strogatz.html\n- Watts http://smallworld.columbia.edu/watts.html\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nBackup\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nGraphs and Matrices\n- A graph can be converted to a matrix and vice\nversa: node-node, node-arc, arc-arc\n- A graph where an arc links only 2 nodes is\nequivalent to a 2 dimensional matrix\n- A graph where an arc links n nodes is equivalent\nto an n dimensional matrix\n- When form or structural patterns must be\nobserved, matrices may be the better\nrepresentation, especially if there are very many\nnodes and arcs\n- MATLAB is applicable\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nLink Between Networks and Linear\nAlgebra\nu\nv\nx\ny\n1-a\n1-d\n-c\n-b\nu\nv\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥ = a\nb\nc\nd\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\nx\ny\n⎡\n⎣ ⎢\n⎤\n⎦ ⎥\n\"Solve\" for x and y given u and v by putting voltages\non the u and v terminals and reading the voltages on the\nx and y terminals\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\n\"Scale Free\" and \"Scaling\"\n- Scale free refers to\ndistributions of degrees\nin the degree distribution\nthat are highly varied\nrather than being\nbunched around a\nparticular value\n- Scale free also means\nthat there is no absolute\nvalue in the distribution,\nbut rather only a ratio\nFrom Li, Lun, David Alderson, John C. Doyle, and Walter Willinger.\n\"Towards a theory of Scale-free Graphs: Definition, Properties, and Implications.\nInternet Mathematics 2 no. 4 (2006): 431-523. Reproduction courtesy of\nA K Peters, Ltd. and David Alderson. Used with permission.\n\n8/24/2006\n(c) Daniel E. Whitney\nNetworks.ppt\nThe Aura of Scale Free\n- From ~1998 to 2004 there was a frenzy of\npublication in which one system after another was\n\"discovered\" to be scale free\n- It was claimed that these systems must have some\nunderlying common elements or principles\n- The reality may be less exciting: there are many\nsystems with high variability but they have not\ngotten much attention before."
    },
    {
      "category": "Lecture Notes",
      "title": "lec5.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/5e18ea1129b7d261f0046332fe676306_lec5.pdf",
      "content": "Professor C. Magee, 2006\nPage 1\nClass 5 - Project Choice Discussion\n-\nEveryone should have a copy of the Project System Title\nTable Handout\n- Write your (readable) name on the line near the bottom\n- Identify where in the list your \"Title\" (as shortened in many\ncases by the faculty) appears\n- Add the following late additions (anyone not appearing)\n-\nIn the order shown in the Table, 1 minute presentations (and 1\nminute or so of questions and discussions) will be held for\neach proposed system led by the proposer.\n-\nAs the presentations are given, choose which other system\nproposal you would be willing to work on ..(at least 3 other\nsystems must be so marked)\n-\nYou may choose the \"All are OK\" line at the bottom of the\nTable but the criteria as shown in the assignment that will be\nimportant in choosing effective projects are:\n\nProfessor C. Magee, 2006\nPage 2\nProject System Choice Criteria\n-\nWhy the proposed system is interesting\n-\nWhat you hope to learn by studying it\n-\nWhat data sources are you aware of that may help you build a\nspecific model that can be objectively exercised\n-\nWhat you hope the results of the study will add to our\ncollective knowledge about system architecture\n\nProfessor C. Magee, 2006\nPage 3\nOther Organizational Items\n-\nThe project choice and teams will be posted on the web site by\nthe end of business Friday.\n-\nThe UCINET tutorial will be on Tuesday Morning at 8AM\n(hopefully here or next door)\n-\nAssignment #3 will be posted by the end of today"
    },
    {
      "category": "Lecture Notes",
      "title": "lec6.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/3f52837eed9bbdee37893c79dbe7c514_lec6.pdf",
      "content": "Professor C. Magee, 2006\nPage 1\nLecture 6: Quantitative Aspects Of\nNetworks III: Outline\n-\nNetwork Analysis Terminology notated\n-\nConnectivity\n-\nSome Social Network Concepts-intuition and calculation\n- transitivity (clustering)\n- centrality\n- degree, closeness, betweenness, information, eigenvector\n-\nprestige and acquaintance\n-\ndegree distributions\n- skew (and non-skew) distributions\n- fitting power laws to observed data\n- the normality of power laws\n- truncation\n- Structural implications and growth assumptions\n-\nExamples of some metrics from broad Assign. # 3 \"systems\"\n-\nProject Discussion\n\nProfessor C. Magee, 2006\nPage 2\nNetwork Analysis Terminology -notated\n-\nnode (vertex), link (edge) CM2,\n-\nsize, sparseness, metrics CM2\n-\ndegree, average degree, degree\nsequence DW4\n-\ndirected, simple DW4\n-\ngeodesic, path length, graph\ndiameter DW4\n-\ntransitivity (clustering),\nconnectivity, reciprocity CM6\n-\ncentrality (degree, closeness,\nbetweenness, information,\neigenvector) CM6\n-\nprestige, acquaintance CM6\n-\nideal graphs (star, line, circle,\nteam) CM6\n-\ndegree distribution, power laws,\nexponents, truncation, CM6\n-\nModels (random, \"small world\",\npoisson, preferential attachment)\n-\nconstraints, hierarchy, rewiring\n-\ncommunity structure, cliques,\nhomophily, assortative mixing,\ndegree correlation coefficient\n-\nmotifs, coarse- graining\n-\nnavigation, search, epidemics and\ncascades\n-\nself-similarity, scale-free, scale-\nrich\n-\ndendograms, cladograms and\nrelationship strength\n\nProfessor C. Magee, 2006\nPage 3\nNetwork Metrics (from lectures 2 and 4)\n- n, the number of nodes\n- m, the number of links\n- 2m/n is the average degree <k> as the number of links on a given\nnode, k, is the degree.\n- m/[(n)(n-1)] or <k>/2(n-1)is the \"sparseness\" or normalized\ninterconnection \"density\"\n- Path length, l\n∑\n≥\n-\n=\nj\ni\nij\nd\nn\nn\nl\n)1\n(\n\nProfessor C. Magee, 2006\nPage 4\nConnectivity\n-\nFraction of nodes connected in a network\n-\nOf interest in resilience/robustness which we will cover in a\nlater lecture and then an inverse path length definition is useful\n-\nCan also be of interest during network formation or as links are\nadded to a set of nodes\n-\nIs also of interest in community determination (or\ndecomposition) as one tries to arrive at a disconnected set of\ngroups by (for example) cutting as few links as possible\n-\nStatistical \"percolation\" models are often used in network\nformation and destruction studies and then a specific network\nmodel (for example, random) is applied to calculate\nconnectivity.\n\nProfessor C. Magee, 2006\nPage 5\nConnectivity:\n(For the Poisson random graph)\nSee Newman, M. E. J. \"The Structure and Function of Complex Networks.\" SIAM Review 45, no. 2 (2003): 167-256. Society for Industrial and Applied Mathematics.\nMean Degree z\nGiant Component Size S\nMean Component Size\ns\n<\n<\n0.5\nMean component size (solid line),\nexcluding the giant component if\nthere is one\nGiant component\nsize (dotted line)\nFigure by MIT OCW.\n\nProfessor C. Magee, 2006\nPage 6\nSocial Network Analysis\n-\nMany structural metrics have been invented and used by Social\nScientists studying social networks over the past 70+ years.\n-\nThese are well-covered in Wasserman and Faust -Social\nNetwork Analysis (1994) The following slides cover a few\nselected examples in one area from that book. The purpose is\nto give some feel for the application of such metrics which\nattempt to measure structural properties of direct interest for\nanalysis\n-\nWe should also note that transitivity (clustering) and almost all\nother metrics discussed in this lecture were familiar to and\nused by social network scientists before the recent upsurge in\nactivity over the past 7 years.\n\nProfessor C. Magee, 2006\nPage 7\nTransitivity or Clustering coefficient, C\n-\nMeasures quantitatively the degree to which nodes which each\nhave relationships with a common node are likely to have a direct\nrelationship.\nnodes\nof\ntriples\nconnected\nof\nnumber\nnetwork\nin\ntriangles\nof\nnumber\nx\nC\n1 =\n;\n∑\n=\ni\ni\nC\nn\nC\ni\non\ncentered\ntriples\nof\nnumber\ni\nnode\nto\nconnected\ntriangles\nof\nnumber\nCi =\n\nProfessor C. Magee, 2006\nPage 8\nExample calculation of transitivity\ncoefficients\nThis network has one triangle and eight connected triples, and therefore has a\nclustering coefficient, , of 3 x 1/8 = 3/8 The individual vertices have local\nclustering coefficients, of 1, 1, 1/6, 0 and 0, for a mean value, = 13/30.\nC\nC\nFigure by MIT OCW.\nSee Newman, M. E. J. \"The Structure and Function of Complex Networks.\" SIAM Review 45, no. 2 (2003): 167-256. Society for Industrial and Applied Mathematics.\n\nProfessor C. Magee, 2006\nPage 9\nTransitivity or Clustering coefficient, II\n-\n(Almost) always > than expected from random networks thus\noffering some support for earlier assertions that real networks\nhave some non-random \"structure\" (more later)\n- Thus, assessing transitivity is a quick check whether you\nhave a random graph where C = <k>/n. Indeed the size\ndependence of transitivity can be useful to calculate\n-\nHigher order clusters (groups of n related nodes) also of\ninterest but no clean way (yet) to separate lower order and\nhigher order tendencies\n-\nIn directed graphs, n=2 effects (the proportion of nodes that\npoint at each other) can be of interest and is labeled\nreciprocity.\n\nProfessor C. Magee, 2006\nPage 10\nCentrality\n-\nNumerous metrics exist in the Social Networks Literature for\nassessing the \"centrality\" of a social network.\n- Centrality metrics attempt to characterize the level of\n\"centralization\" of control or action on this network\n- One application is to assess how important a given actor (node)\nis in the network (ranking of nodes according to link\ninformation)\n- Another application is to assess overall how much of the control\nof the network is controlled by the \"more important\" actors\n- The relative importance of single channels/links and groups of\nlinks has also been of interest.\n-\nWe will look at a several of the social science defined metrics and\nexplore the definitions by looking at \"ideal toy graphs\": Team\n(family or full) graphs, Circle (or line) graphs and Star graphs.\n\nProfessor C. Magee, 2006\nPage 11\nDegree Centrality\n-\nActor (can be individual, group\nor organization depending on\nwhat is being studied). The\nactor in the example we will\nuse is a \"Family\". Most central\nis the node with the most links.\n-\nGroup (all actors in network)\n- = 1 for a star graph\n- = 0 for a circle graph or\n\"team\"\n- = 1/(n-1) for line graph\n)\n(\n'\n-\n=\n∑\nn\nx\nn\nC\nj\nij\ni\nD\n)]\n)(\n[(\n)]\n(\n)\n(\n[\nmax\n-\n-\n-\n= ∑=\nn\nn\nn\nC\nn\nC\nC\nn\ni\ni\nD\nD\nD\n\nProfessor C. Magee, 2006\nPage 12\nPadgett's Florentine Families:\n15th Century Marriage Relations\nn1:Acciaiuoli\nn4:Bischeri\nn15:Strozzi\nn5:Castellani\nn6:Genori\nn7:Guadagni\nn8:Lamberteschi\nn9:Medici\nn11:Peruzzi\nn12:Pucci\nn13:Ridolfi\nn14:Salvati\nn2:Ablizzi\nn16:Tornabuoni\nn3:Barbadori\nn10:Pazzi\n\nProfessor C. Magee, 2006\nPage 13\nFlorentine Families Centrality Metrics I:\nDegree\nAcciaiuoli\nAblizzi\nBarbadori\nBischeri\nCastellani\nGenori\nGuadagni\nLamberteschi\nMedici\nPazzi\nPeruzzi\nPucci\nRidolfi\nSalvati\nStrozzi\nTornabuoni\nCentralization\n0.071\n0.214\n0.143\n0.214\n0.214\n0.071\n0.286\n0.071\n0.429\n0.071\n0.214\n---\n0.214\n0.143\n0.286\n0.214\n0.257\n)\n(\ni\nD n\nC′\n)\n(\ni\nC n\nC′\n)\n(\ni\nB n\nC′\n)\n(\ni\nI n\nC′\n\nProfessor C. Magee, 2006\nPage 14\nCloseness Centrality\n-\nActor\n- Closest is shortest\n(geodesic) distance from\nother nodes =1 for max\ncloseness and 0 for min\n-\nGroup\n- = 0 for circle graph or full\nnetwork\n- = 1 for star graph\n- 0.277 for line (7 nodes)\n- can estimate several ways\nincluding dispersion\n∑\n=\n-\n=\nn\nj\nj\ni\ni\nC\nn\nn\nd\nn\nn\nC\n'\n)\n,\n(\n)\n(\n)\n/(\n)1\n)(\n(\n)]\n(\n[\n'\nmax\n-\n-\n-\n-\n= ∑\n=\nn\nn\nn\nn\nC\nC\nC\nn\ni\ni\nC\ni\nC\nC\n\nProfessor C. Magee, 2006\nPage 15\nFlorentine Families Centrality Metrics II\nCloseness\nAcciaiuoli\nAblizzi\nBarbadori\nBischeri\nCastellani\nGenori\nGuadagni\nLamberteschi\nMedici\nPazzi\nPeruzzi\nPucci\nRidolfi\nSalvati\nStrozzi\nTornabuoni\nCentralization\n0.071\n0.214\n0.143\n0.214\n0.214\n0.071\n0.286\n0.071\n0.429\n0.071\n0.214\n---\n0.214\n0.143\n0.286\n0.214\n0.257\n0.368\n0.483\n0.438\n0.400\n0.389\n0.333\n0.467\n0.326\n0.560\n0.286\n0.368\n---\n0.500\n0.389\n0.438\n0.483\n0.322\n)\n(\ni\nD n\nC′\n)\n(\ni\nC n\nC′\n)\n(\ni\nB n\nC′\n)\n(\ni\nI n\nC′\n\nProfessor C. Magee, 2006\nPage 16\nBetweeness Centrality I\n-\nActor\n- Power or influence comes\nfrom being an intermediary\n-\nz is the number of\ngeodesics between two\npoints\n-\nGroup\n- =1 for star graph\n- =0 for circle\n- =0.311 for 7 node line\n- Tree Hierarchy = xx\n]\n/)\n)(\n[(\n/)\n(\n)\n(\n'\n-\n-\n= ∑<\nn\nn\nz\nn\nz\nn\nC\nk\nj\njk\ni\njk\ni\nB\n)]\n(\n)\n(\n[\n'\nmax\n'\n-\n-\n= ∑=\nn\nn\nC\nn\nC\nC\nn\ni\ni\nB\nB\nB\n\nProfessor C. Magee, 2006\nPage 17\nDefinition of Hierarchy\n-\nNot covered in ESD Terms and Definitions but..\n-\nHierarchy: A description of a group of elements (system?)\nwhere each element is graded or ranked and then arranged in a\nstructure that separates elements according to rank which each\ndescending rank being in some way subordinate to the next\nhigher rank (this leads to a level number or node depth).\nAlthough hierarchy often describes power or authority\nrelationships, it is also used in describing levels of abstraction\nand other system features. Closed and Open hierarchies have\nalso been distinguished.\n-\nHierarchies can take on a variety of structures ranging from\nPure layers to pure trees.\n\nProfessor C. Magee, 2006\nPage 18\nFlorentine Families Centrality Metrics:\nBetweeness\nAcciaiuoli\nAblizzi\nBarbadori\nBischeri\nCastellani\nGenori\nGuadagni\nLamberteschi\nMedici\nPazzi\nPeruzzi\nPucci\nRidolfi\nSalvati\nStrozzi\nTornabuoni\nCentralization\n0.071\n0.214\n0.143\n0.214\n0.214\n0.071\n0.286\n0.071\n0.429\n0.071\n0.214\n---\n0.214\n0.143\n0.286\n0.214\n0.257\n0.368\n0.483\n0.438\n0.400\n0.389\n0.333\n0.467\n0.326\n0.560\n0.286\n0.368\n---\n0.500\n0.389\n0.438\n0.483\n0.322\n0.000\n0.212\n0.093\n0.104\n0.055\n0.000\n0.255\n0.000\n0.522\n0.000\n0.022\n---\n0.114\n0.143\n0.103\n0.092\n0.437\n)\n(\ni\nD n\nC′\n)\n(\ni\nC n\nC′\n)\n(\ni\nB n\nC′\n)\n(\ni\nI n\nC′\n\nProfessor C. Magee, 2006\nPage 19\nPadgett's Florentine Families:\n15th Century Marriage Relations\nn1:Acciaiuoli\nn4:Bischeri\nn15:Strozzi\nn5:Castellani\nn6:Genori\nn7:Guadagni\nn8:Lamberteschi\nn9:Medici\nn11:Peruzzi\nn12:Pucci\nn13:Ridolfi\nn14:Salvati\nn2:Ablizzi\nn16:Tornabuoni\nn3:Barbadori\nn10:Pazzi\n\nProfessor C. Magee, 2006\nPage 20\nBetweeness Centrality II\n-\nActor\n- Power or influence comes\nfrom being an intermediary\n-\nz is the number of\ngeodesics between two\npoints\n-\nGroup\n- =1 for star graph\n- =0 for circle\n- =0.311 for 7 node line\n-\nBetweeness Centrality has\nbeen most applied of the\ncentrality metrics in Social\nNetwork Analysis (1994)\n]\n/)\n)(\n[(\n/)\n(\n)\n(\n'\n-\n-\n= ∑<\nn\nn\nz\nn\nz\nn\nC\nk\nj\njk\ni\njk\ni\nB\n)]\n(\n)\n(\n[\n'\nmax\n'\n-\n-\n= ∑=\nn\nn\nC\nn\nC\nC\nn\ni\ni\nB\nB\nB\n\nProfessor C. Magee, 2006\nPage 21\nInformation Centrality\n-\nActor\n-\nEstimates the information\nvalue of the connections\n-\nshorter distances are better but\nare not the only paths used\n-\nT is the trace, R a row sum\nand c an element in a matrix\nconstructed from the\nsociomatrix with information\ncontent\n-\nActor indices are proportions\nof total \"information\" flow\ncontrolled by a single actor\nand sums to 1 in network\n-\nNo group index (1997)\nn\nR\nT\nc\nn\nC\nii\ni\nI\n/)\n(\n)\n(\n-\n+\n=\n∑\n=\ni\ni\nI\ni\nI\ni\nI\nn\nC\nn\nC\nn\nC\n)\n(\n)\n(\n)\n(\n'\n\nProfessor C. Magee, 2006\nPage 22\nFlorentine Families Centrality Metrics\nAcciaiuoli\nAblizzi\nBarbadori\nBischeri\nCastellani\nGenori\nGuadagni\nLamberteschi\nMedici\nPazzi\nPeruzzi\nPucci\nRidolfi\nSalvati\nStrozzi\nTornabuoni\nCentralization\n0.071\n0.214\n0.143\n0.214\n0.214\n0.071\n0.286\n0.071\n0.429\n0.071\n0.214\n---\n0.214\n0.143\n0.286\n0.214\n0.257\n0.368\n0.483\n0.438\n0.400\n0.389\n0.333\n0.467\n0.326\n0.560\n0.286\n0.368\n---\n0.500\n0.389\n0.438\n0.483\n0.322\n0.000\n0.212\n0.093\n0.104\n0.055\n0.000\n0.255\n0.000\n0.522\n0.000\n0.022\n---\n0.114\n0.143\n0.103\n0.092\n0.437\n0.049\n0.074\n0.068\n0.074\n0.070\n0.043\n0.081\n0.043\n0.095\n0.033\n0.069\n---\n0.080\n0.050\n0.070\n0.080\n---\n)\n(\ni\nD n\nC′\n)\n(\ni\nC n\nC′\n)\n(\ni\nB n\nC′\n)\n(\ni\nI n\nC′\n\nProfessor C. Magee, 2006\nPage 23\nEigenvector Centrality-UCINET\n-\nUCINET-help, help topics, index (on toolbar), eigenvector centrality\n-\nGiven an adjacency matrix A, the centrality of vertex i (denoted ci), is given by\nci =aSAijcj where a is a parameter. The centrality of each vertex is therefore\ndetermined by the centrality of the vertices it is connected to. The parameter a is\nrequired to give the equations a non-trivial solution and is therefore the\nreciprocal of an eigenvalue. It follows that the centralities will be the elements\nof the corresponding eigenvector. The normalized eigenvector centrality is the\nscaled eigenvector centrality divided by the maximum difference possible\nexpressed as a percentage.\n-\nFor a given binary network with vertices v1....vn and maximum eigenvector\ncentrality cmax, the network eigenvector centralization measure is S(cmax -\nc(vi)) divided by the maximum value possible, where c(vi) is the eigenvector\ncentrality of vertex vi.\n-\nThis routine calculates these measures and some descriptive statistics\nbased on these measures. This routine only handles symmetric data and in\nthese circumstances the eigenvalues provide a measure of the accuracy of the\ncentrality measure. To help interpretation the routine calculates all positive\neigenvalues but only gives the eigenvector corresponding to the largest\neigenvalue.\n\nProfessor C. Magee, 2006\nPage 24\nEigenvector Centrality (from Newman and\nBrin and Page)\n- Each node has a weight that is defined to be\nproportional to the weights of all nodes that point to\nthe node (i)\n- And\n- And then Ax = x\n- Thus the weights are an eigenvector of the\nadjacency matrix (A) with eigenvalue\nj\nj\nij\ni\nx\nA\nx\n∑\n-\n=\nλ\nix\nλ\nλ\n\nProfessor C. Magee, 2006\nPage 25\nFlorentine Families Centrality Metrics\n(with Eigenvector Centrality)\nAcciaiuoli\nAblizzi\nBarbadori\nBischeri\nCastellani\nGenori\nGuadagni\nLamberteschi\nMedici\nPazzi\nPeruzzi\nPucci\nRidolfi\nSalvati\nStrozzi\nTornabuoni\nCentralization\n0.071\n0.214\n0.143\n0.214\n0.214\n0.071\n0.286\n0.071\n0.429\n0.071\n0.214\n---\n0.214\n0.143\n0.286\n0.214\n0.257\n0.368\n0.483\n0.438\n0.400\n0.389\n0.333\n0.467\n0.326\n0.560\n0.286\n0.368\n---\n0.500\n0.389\n0.438\n0.483\n0.322\n0.000\n0.212\n0.093\n0.104\n0.055\n0.000\n0.255\n0.000\n0.522\n0.000\n0.022\n---\n0.114\n0.143\n0.103\n0.092\n0.437\n0.049\n0.074\n0.068\n0.074\n0.070\n0.043\n0.081\n0.043\n0.095\n0.033\n0.069\n---\n0.080\n0.050\n0.070\n0.080\n---\n)\n(\ni\nD n\nC′\n)\n(\ni\nC n\nC′\n)\n(\ni\nB n\nC′\n)\n(\ni\nI n\nC′\n.19\n.35\n.30\n.40\n.37\n.11\n.41\n.12\n.61\n.06\n.39\n.48\n.20\n.50\n.46\n.43\n\nProfessor C. Magee, 2006\nPage 26\nCentrality II\n-\nNumerous metrics exist in the Social Networks Literature for\nassessing the \"centrality\" of a social network.\n- Centrality metrics attempt to characterize the level of\n\"centralization\" of control or action on this network\n- One application is to assess how important a given actor (node)\nis in the network\n- Another application is to assess overall how much of the control\nof the network is controlled by the \"more important\" actors\n- The relative importance of single channels/links and groups of\nlinks has also been of interest.\n-\nCentrality utility:\n- The calculation methods have been applied in search, navigation\nand community structure models but otherwise the \"Network\nScience\" Community does not utilize these measures. CM bias is\nthat they are probably useful in social and other networks.\n- Hidden Hierarchy, robustness -communication and other\nmeanings are all dependent on effects such as those defined and\nsome of these measures (betweenness and eigenvector\ncentrality) deserve more attention in modern network analysis.\n\nProfessor C. Magee, 2006\nPage 27\nRelated newer Centrality-like metrics\n-\nJon Kleinberg (Computer Science at Cornell) has done much\nof the leading work in search and navigation (more later).\n-\nIn some of his earliest work on this topic (1997-1999), he\n\"invented\" some useful new metrics for looking at important\nnodes (particularly on directed networks and probably most\nuseful in the domain he was interested in-- the www)\n-\nHe looked for ways to find related sets of \"Authorities\" and\n\"Hubs\" and differentiated these from single \"high in-degree\nnodes\"\n\nProfessor C. Magee, 2006\nPage 28\nHubs\nAuthorities\nA Densely Linked Set of Hubs and Authorities\nUnrelated page of\nlarge in-degree\nFigure by MIT OCW.\nSee Kleinberg, Jon. M. \"Authoriative Sources in a Hyperlinked Environment\" Journal of the ACM 46, no. 5\n(1999): 604-632.\n\nProfessor C. Magee, 2006\nPage 29\nPrestige and Acquaintance Calculation\nAuthority: not only referred to by many nodes, but also by many\nHubs. (measurement: prestige)\nHub: not only refers to many nodes, but also to many Authorities.\n(measurement: acquaintance)\nThese metrics are proving useful in directed citation networks\n(Mo-Han Hsieh thesis work on Internet Standards)\nSolve for x and y.\nAx = λy\nATy = μx\nA : adjacency matrix\nxi : prestige (of node i)\nyi : acquaintance\n\nProfessor C. Magee, 2006\nPage 30\nLecture 6: Quantitative Aspects Of\nNetworks III: Outline\n-\nNetwork Analysis Terminology notated\n-\nConnectivity\n-\nSome Social Network Concepts-intuition and calculation\n- clustering (transitivity)\n- centrality\n- degree, closeness, betweenness, information, eigen\n- prestige and acquaintance\n-\ndegree distributions\n- skew (and non-skew) distributions\n- fitting power laws to observed data\n- the normality of power laws\n- truncation\n- Structural implications and growth assumptions\n-\nExamples of some metrics from broad Assign. # 3 \"systems\"\n-\nProject Discussion\n\nProfessor C. Magee, 2006\nPage 31\nDegree Distributions\n-\nDefine as the fraction of nodes in a network with degree k. This is\nequivalent to the probability of randomly picking a node of degree k\n-\nA plot of can be formed by making a histogram of the degrees of\nthe nodes. This is the degree distribution of the network.\n-\nHistograms\n- Normal (and nearly so)\n- Skewed (and heavily skewed)\n-\nSuggest some normal or nearly normal distributions..\nkp\nkp\n\nTwo nearly normal distributions\nProfessor C. Magee, 2006\nPage 32\nHistogram of heights in centimeters of American males.\nData from the National Health Examination Survey,\n1959-1962 (US Department of Health and Human Services).\nHistogram of speeds in miles per hour of cars on\nUK motorways. Data from Transport Statistics 2003\n(UK Department for Transport).\nHeights of Males\nPercentage (%)\nSpeeds of Cars\nFigure by MIT OCW.\nSee Newman, M. E. J. cond-mat/0412004v2\n\nProfessor C. Magee, 2006\nPage 33\nA heavily skewed distribution\n0.001\nPercentage of Cities\nPopulation of City\nPopulation of City\n0.002\n0.003\n0.004\n2x105\n4x105\n10-8\n10-6\n10-4\n10-2\nFigure by MIT OCW.\nNewman, M. E. J. cond-mat/0412004v2\nSee\n\nProfessor C. Magee, 2006\nPage 34\nDegree Distributions II\n-\nDefine as the fraction of nodes in a network with degree k. This is\nequivalent to the probability of randomly picking a node of degree k\n-\nA plot of can be formed by making a histogram of the degrees of\nthe nodes. This is the degree distribution of the network.\n-\nHistograms\n- Normal (and nearly so)\n- Skewed (and heavily skewed)\n-\nReasons for normal vs. skewed?\n-\nPower law (skewed)\n-\nPlot ln\nvs. ln k, slope =\nWhy might cumulative plot be superior?\nkp\nkp\nα\n-\nk\npk ~\nα\nkp\n\nProfessor C. Magee, 2006\nPage 35\n0.5\n1.5\nSamples\nSamples\nSamples with Value > x\nSamples\n10-5\n10-3\n10-1\n10-9\n10-7\n10-5\n10-3\nX\n10-1\n10-4\n10-2\nX\nA\nC\nD\nB\nNewman, M. E. J. cond-mat/0412004v2\nSee\n\nProfessor C. Magee, 2006\nPage 36\nBarabasi and Albert(1999) A is actor collaboration, B is www\nand C is the Western Power Grid (incorrectly identified as power law)\n10-6\nk\nk\nk\n10-5\n10-4\nP(k)\n10-3\n10-2\n10-1\n10-8\n10-6\n10-4\n10-2\n10-4\n10-3\n10-2\n10-1\nA\nB\nC\nFigure by MIT OCW.\n\nFrom \"Classes of Small World Networks,\" showing the same power grid data\nclearly not a power law by use of (appropriate) cumulative distribution (chart b)\nCourtesy of National Academy of Sciences, U. S. A. Used with permission.\nSource: Amaral, L. A. N., A. Scala, M. Bertelemy, and H. E. Stanley. \"Classes of Small World Networks.\" Proc Natl Acad Sci\n97 (2000): 11149-52. (c) National Academy of Sciences, U.S.A.\nProfessor C. Magee, 2006\nPage 37\n\nProfessor C. Magee, 2006\nPage 38\nComparison of Models with Structural\nMetrics : Degree distribution\n-\nDoes the existence of a power law for degree distributions for\nnetworks indicate existence of a specific mechanism for\nformation?\n- No, power laws are consistent with a wide variety of\nmechanisms for network formation (Newman, \"Power\nlaws, Pareto distributions and Zipf's law\"2004/5)\n-\nDoes the existence of power laws for degree distributions for\nnetworks indicate the existence of a certain kind of structure\nfor the network?\n- No, power laws are consistent with a wide variety of\nnetworks having various structures and some without\ncentral hubs (Li et al)\n- Moreover, power laws are the equivalent of normal\ndistributions at high variation (Samorodnitsky and Taqqu)\n\nProfessor C. Magee, 2006\nPage 39\nCentral Limit Theorem\nThe mean of a sequence of n iid random variables with\n- Finite μ (and variance)\n-\napproximates a normal distribution in the limit of a large n.\n(\n)\n\n<\n)\n(\n\n>\ninf\n-\n+\nδ\nδ\ni\ni\nx\nE\nx\nE\nFrom Systems engineering lecture by Dan Frey\n\nProfessor C. Magee, 2006\nPage 40\nMarginal and Markov process defined\n-\nMarginal probability- In a multivariate distribution, the\nprobability of one variable, or function of several of these\nvariables, taking a specific value (or falling in a range)\n- Metric: An outer measure on a product space, by\nrestriction to one of the two factors: if is an outer\nmeasure on X x Y , the marginal probability is a measure\nthat satisfies\n-\nMarkov chain or process. A sequence of events, usually\ncalled states, the probability of each of which is dependent\nonly the event immediately preceding it.\nμ\nα\n)\n(\n)\n(\nY\nx\nA\nA\nμ\nα\n=\n\nProfessor C. Magee, 2006\nPage 41\nPower laws are ubiquitous\nLow\nvariability\nGaussian\nExponential\nCentral Limit\nTheorem\n(CLT)\nMarginalization\n(Markov property)\nHigh\nvariability\nPower law\nCLT\nMarginalization\nMaximization\nMixtures\nMore normal than Normal\nFrom seminar by John Doyle at GT in Nov. 2004\n\nProfessor C. Magee, 2006\nPage 42\nComparison of Models with Structural\nMetrics : Degree distribution\n-\nDoes the existence of a power law for degree distributions for\nnetworks indicate existence of a specific mechanism for\nformation?\n- No, power laws are consistent with a wide variety of\nmechanisms for network formation (Newman, \"Power\nlaws, Pareto distributions and Zipf's law\"2004/5)\n-\nDoes the existence of power laws for degree distributions for\nnetworks indicate the existence of a certain kind of structure\nfor the network?\n- No, power laws are consistent with a wide variety of\nnetworks having various structures and some without\ncentral hubs (Li et al)\n- Moreover, power laws are the equivalent of normal\ndistributions at high variation (Samorodnitsky and Taqqu)\n-\nPower laws are very useful for representation and\nmanipulation of data but are not strongly indicative of\nstructure or behavior (despite what you may read)\n\nProfessor C. Magee, 2006\nPage 43\nDegree Distributions III\n-\nDefine as the fraction of nodes in a network with degree k. This is\nequivalent to the probability of randomly picking a node of degree k\n-\nA plot of can be formed by making a histogram of the degrees of\nthe vertices. This is the degree distribution of the network. Some\ndistributions\n-\nRandom Graph- binomial\n(poisson at large n)\n-\nExponential\n-\nPower Law\n-\nlognormal\nkp\n!k\ne\nk\np\nk\nk\nk\n>\n<\n-\n>\n<\n≅\nκ\nk\nk\ne\np\n-\n≈\nα\n-\nk\npk ~\nkp\n)\n)\n(ln\nexp(\n)\n(ln\nσ\nμ\n-\n-\n≈\nk\nk\np\n\nProfessor C. Magee, 2006\nPage 44\nDegree Distributions IV\n-\nOther Distributions\n- Power law with exponential cutoff is \"common\"\n- For bipartite graphs, there are two degree\ndistributions, one for each type of node (multipartite\none for each type of node)\n- For directed graphs, each node has an in-degree and\nan out-degree and the degree distribution becomes a\nfunction of two variables (j and k for in and out\ndegrees). Since in and out degrees can be strongly\ncorrelated, the joint distribution also contains\ninformation about the network.\n-\nMaximum Degree (Power Law)\n)\n/(\nmax ~\n-\nα\nn\nk\n\nProfessor C. Magee, 2006\nPage 45\nNetwork Metrics (from lectures 2, 4 and\nnow lecture 6)\n- n, the number of nodes\n- m, the number of links\n- 2m/n is the average degree <k> as the number of links on a given\nnode, k, is the degree.\n- m/[(n)(n-1)] or <k>/(n-1)is the \"sparseness\" or normalized\ninterconnection \"density\"\n- Path length, l\n- Connectivity\n- Clustering (2 definitions)\n- Centrality (5 definitions + prestige and acquaintance)\n- Degree Distribution\n- Compare some systems (see handout for assignment # 3)\n∑\n≥\n-\n=\nj\ni\nij\nd\nn\nn\nl\n)1\n(\n\nProfessor C. Magee, 2006\nPage 46\nNetworks structural characteristics:\nPreliminary summary of results\n-\nMost measures-even simple ones- show that real systems\n(represented as networks) have \"structure\" (linking regularities\nbeyond random).\n-\nReal system architectures will not be describable by a single\nstructural metric or feature. One must consider, size,\nsparseness, degree distribution, transitivity (and probably\ncentrality and others) simultaneously in order to begin to\nunderstand a specific complex system and its\nsimilarities/differences from other complex systems.\n-\nAlthough there are numerous metrics available, these are not\nnecessarily (or even likely) to be the simplest or best to\ndescribe the systems we are interested in compactly.\n-\nHowever, invention of new characteristics without fully\nunderstanding and exploring existing metrics is most likely to\nintroduce unnecessary confusion rather than enlightenment\n(the 2 transitivity coefficients example)\n\nProfessor C. Magee, 2006\nPage 47\nReferences for Lecture 6\n-\nOverall key references\n-\nWasserman and Faust, Social Network Analysis: Methods and\nApplications, Cambridge University Press (1994)\n-\nM. E. J. Newman, \"The structure and function of complex networks\"\nSIAM Review vol. 45, 167-256 (2003) (posted in assignment section)\n-\nJ. Scott, Social Network Analysis: A Handbook Sage Publications\n(2000)\n-\nFor Centrality related\n-\nW & F (above) plus UCINET help and Hanneman book\n-\nJon. M. Kleinberg \"Authoriative Sources in a Hyperlinked\nEnvironment\" Journal of the ACM, Vol. 46, no. 5, 1999,pp 604-632\n-\nFor Power Laws\n-\nM. E. J. Newman, \"Power Laws, Pareto Distrubutions and Zipf's law,\ncond-mat/0412004v2 (will post with lecture 6)\n- Samorodnitsky,G. and Taqqu, S., Stable Non-Gaussian Random\nProcesses: Stochastic Processes with Infinite Variance,\nChapman and Hall, London, (1994)\n-\nA Barabasi and R. Albert, \"The Emergence of Scaling Laws in Random\nNetworks\", Science 286, pp 509-512 (1999)\n-\nAmaral, L. A. N., Scala, A., Bertelemy, M. and Stanley, H. E. \"Classes\nof Small World Networks\", Proc. Nat. Acad. Sci. 97, 11149-52 (2000)"
    },
    {
      "category": "Resource",
      "title": "final_airtrans.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/dd8c94b93597c93f1d0264696b44094d_final_airtrans.pdf",
      "content": "(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nAir Transportation System\nAir Transportation System\nArchitecture Analysis\nArchitecture Analysis\nProject Final Presentation\nProject Final Presentation\nAdvanced System Architecture\nAdvanced System Architecture\nSpring 2006\nSpring 2006\nMay 9th, 2006\nPresentation by:\nPhilippe Bonnefoy\nRoland Weibel\nInstructors: Chris Magee, Joel Moses and Daniel Whitney\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nMotivation\n- Future demand is expected to increase significantly due\nto the introduction of new classes of aircraft, such as\nVery Light Jets and Unmanned Aerial Vehicles\n- There are several constraints on system evolution driven\nby infrastructure, economics, safety, and technology\n- The air transportation system is facing and will continue\nto face significant challenges in terms of meeting\ndemand for mobility\n- Current multi-agency effort to establish a roadmap for\nthe \"Next Generation of Air Transportation System\"\n- Future (evolved) architecture of the system require\nunderstanding of the structure of the current system\n- Lack of integrated quantitative analysis of structure of\nthe current system\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nObjective of the project\n- Better understand the architecture of the current system\nthrough network analyzes\n- Understand\n- the network characteristics of individual system layers\n- Influence of constraints, desired properties (i.e. safety, capacity,\netc.) in explanation of network characteristics\n- comparison of network characteristics across different layers,\nthrough coupling of infrastructure or comparison of different\nnetwork characteristics across layers\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nOverview of the System\nInfrastructure\nlayer\nTransport layer\nSystem layer\nGround\nAirspace\nDemand layer\nPopulation, income,\nlocation of businesses\nSUPPLY\nScheduled\nUnscheduled\nDEMAND\nScheduled\nUnscheduled\nIntra-layer\ncomparison\nCross-layer\ncomparison\nImage removed for\ncopyright reasons.\nAirplane.\nImage removed for\ncopyright reasons.\nAirplane.\nImage removed for\ncopyright reasons.\nChart of jet routes.\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nTransport Layer Analysis\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\n0.001\n0.01\n0.1\nDegree\nCumulative Probability p(>k)\nWide/Narrow Body &\nRegional Jets\nWB/NB/RJ + with primary &\nsecondary airports\naggregated\nAnalysis of the Wide-Body/Narrow Body\n&Regional Jet Flight Network\nDegree Distribution\nRegional Jets\nRegional Jets\nWide Body Jets\nWide Body Jets\nNarrow Body Jets\nNarrow Body Jets\n(Images removed for\ncopyright reasons.)\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nAnalysis of the Wide-Body/Narrow Body &\nRegional Jet Route Network\ny = 1.85x-0.49\n0.01\n0.1\nDegree\nCumulative Probability p(>k)\nWB/NB/RJ + w ith primary &\nsecondary airports aggregated\nBeyond Pow er Law\nPow er (WB/NB/RJ + w ith primary &\nsecondary airports aggregated)\nCoefficient of the degree distribution\npower law function: γ = 1.49\nHypotheses for the exponential cut-off:\n- Nodal capacity constraints\n- Connectivity limitations between core\nand secondary airports\nDegree Distribution Analysis\nNetwork Characteristics\nNetwork\nn\nm\nDensity\nClustering\ncoeff.\nr\nCentrality vs.\nconnectivity\n-0.39\n13/20\nmost central also part\nof the top 20 most\nconnected\n0.64\nScheduled\ntransportation\nnetwork\n0.052\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nAnalysis of the Light Jet Route Network\nLight Jets\nLight Jets\n0.0001\n0.001\n0.01\n0.1\nDegree\nCumulative Frequency (n(>k))\nDegree Distribution\nImage removed for copyright reasons.\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nAnalysis of the Light Jet Route Network\nDegree distribution identified as\nresulting from sub-linear preferential\nattachment.\nDegree Distribution Analysis\nNetwork Characteristics\nNetwork\nn\nm\nDensity\nClustering\ncoefficient\nr\n0.12\n0.0045\nLight Jet Network\n(Unscheduled)\n0.005\n0.0001\n0.001\n0.01\n0.1\nDegree\nCumulative Frequency (n(>k))\nPower law network\ndegree signature\nLight Jet\nNetwork\n⎥\n⎦\n⎤\n⎢\n⎣\n⎡\n⎟⎟\n⎠\n⎞\n⎜⎜\n⎝\n⎛\n-\n-\n-\n=\n-\n-\n-\nγ\nμ\nγ\nγ\nγ\nexp\n.\nk\nk\na\nnk\nwith:\nγ = 0.57\nμ = 0.16\na = 0.13\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nUnderlying Processes and Attributes Influencing\nthe Sub linear Attachment Dynamics\nHypotheses:\n-\nSpatial Constraints\n- Aircraft range (number of airports reachable given aircraft range\ncompatibilities)\n-\nNodal Capacity\n- Airport capacity\n-\nUnderlying demand drivers\n- Population distribution\n-\nModal competition\n- Focusing on the nodes\n- Scheduled transportation with the transition from on-demand traffic to\nscheduled traffic\n- Focusing on the arcs\n- Economics, passenger mode choice\n- Demand for long range on-demand flights (modal competition)\nInvestigated\nin Report\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nOverview of the System\nInfrastructure\nlayer\nTransport layer\nSystem layer\nGround\nAirspace\nDemand layer\nPopulation, income,\nlocation of businesses\nSUPPLY\nScheduled\nUnscheduled\nDEMAND\nScheduled\nUnscheduled\nIntra-layer\ncomparison\nCross-layer\ncomparison\nImage removed for\ncopyright reasons.\nAirplane.\nImage removed for\ncopyright reasons.\nAirplane.\nImage removed for\ncopyright reasons.\nChart of jet routes.\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nScheduled Traffic WB/NB/RJ\n(weighted degree)\nUnscehduled Traffic LJ\n(weighted degree)\nAirport-Level Interactions between\nTransport Layers\nTEB\nATL\nSEA\nORD\nCMH\nCLT\nDFW\nScheduled\nOn-Demand\nTransport layer\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nOverview of the System\nInfrastructure\nlayer\nTransport layer\nSystem layer\nGround\nAirspace\nDemand layer\nPopulation, income,\nlocation of businesses\nSUPPLY\nScheduled\nUnscheduled\nDEMAND\nScheduled\nUnscheduled\nIntra-layer\ncomparison\nCross-layer\ncomparison\nImage removed for\ncopyright reasons.\nChart of jet routes.\nImage removed for\ncopyright reasons.\nAirplane.\nImage removed for\ncopyright reasons.\nAirplane.\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nAnalysis of the Demand Layer\n-\nSingle Layer Analysis\nPopulation/Airport Gravity Model\nbased on 66,000 Census Track data\nDistribution of\npopulation around\nairports does not\nfollow a power law\n⎭⎬⎫\n⎩⎨⎧\n=\n=\n= ∑\n∈\nj\nct\nj\ni\nct\ni\nC\nct\nct\ni\nd\nd\nct\nC\nt\ns\np\nb\ni\n,\n,\nmin\n..\nNotations:\nPct: population of census track ct\nbi: size of population basin around\nairport i\nct: census track\ndi,j: Euclidean distance\n0.00001\n0.0001\n0.001\n0.01\n0.1\n0.0\n0.1\n1.0\n10.0\nSize of population basin (b) [in millions]\nCumulative Density Function p(>b)\nPower law network\ndegree signature\nPopulation distribution\n(based on the gravity model)\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nInfrastructure Layer Analysis\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nInfrastructure layer analysis\n- Problem\n- Airspace is a shared resource between various type of traffic\n(e.g. scheduled commercial, unscheduled commercial, general\naviation, etc.)\n- What is the level of interaction between types of traffic at key\npoints in the airspace\n- Network analysis\n- Betweenness centrality\n- Connectivity\n- Methodology\n- Shortest-path search through fully-connected airport network\nalong ground-based Navigational Aids\n- For scheduled & unscheduled traffic data\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nUnweighted Betweenness Centrality -\nUnscheduled\nLegend\n5-9%\n4-5%\n3-4%\n2-3%\n1-2%\n0-1%\nPercentage of geodesics\nthrough each Navaid\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nUnweighted Betweenness Centrality -\nScheduled\nLegend\n5-9%\n4-5%\n3-4%\n2-3%\n1-2%\n0-1%\nPercentage of geodesics\nthrough each Navaid\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\n0%\n1%\n2%\n3%\n4%\n5%\n6%\n7%\n8%\n9%\nDegree\nBetweenness Centrality\n0%\n1%\n2%\n3%\n4%\n5%\n6%\n7%\n8%\n9%\nDegree\nBetweenness Centrality\nDegree vs. Betweenness for Navaid/Airport\nNetworks\nUnscheduled\nScheduled\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nConclusions\n- Distribution of Scheduled & Unscheduled Nodes\n- Scheduled: power law with exponential cut-off\n- Unscheduled: product of exponential and power law\n- Air transportation system is not scale free\n- Several System Attributes That Impose Scale on System\n- Apparent in degree sequences investigated\n- Apparent in utilization of airports and navigational aids\n- Influences such as capacity, economics, and policy are acting to\nlimit nodal connections and edge flows\n- Several Implications for future growth of the Air\nTransportation System\n- Constraints important in future system evolution\n- Analysis forms basis for further understanding of constraints and\ngrowth dynamics\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nQuestions & Comments\nThank you\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nInfrastructure Layer Analysis\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nNavigation Infrastructure Analysis\n- Nodes: FAA-Defined\nNavigational Aids of Different\nTypes\n- VORs, Reporting Points, etc\n- Links: Air Routes Between\nNodes\n- Victor (low alt) & Jet Routes (high alt)\n- Network Metrics\n- Clustering Coefficient (Watts method) - Proxy for robustness of\nnetwork\n- Correlation Coefficient\n- Architecture Analyses\n- Shortest-Path Navigational vs. Direct Distance between\nAirports\n- Nodal Betweenness/Centrality\nNodes & Link Highlighted\nImage removed for copyright reasons.\nChart of jet routes.\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nDegree Sequence\n10 11 12 13 14 15\nDegree\nFrequency\nOther Points\nVOR/VORTAC\n10 11 12 13 14 15\nDegree\nFrequency\nVictor Airways\n-All Points (left)\n-VOR/VORTAC (below)\n10 11 12 13 14 15\nDegree\nFrequency\nOther Points\nVOR/VORTAC\n10 11 12 13 14 15\nDegree\nFrequency\nJet Routes\n-All Points (left), VOR/VORTAC (right)\nNavAid Network\nn\nm\nC (Watts)\nr\n0.1928\n-0.0166\n-0.0728\n0.2761\nJet Routes\nVictor Airways\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nNavigation Architecture Analysis\n- End Nodes: Navaids corresponding to published\nairports\n- Geodesic (shortest path by navigational distance)\ncomputed between top 1,000 airport pairs\n- Airports ranked based on 2004 FAA traffic data\n- A-Star search algorithm implemented to find shortest distance along\nnetwork\n- Results - Dynamics Along Network\n- Navigational Distance Compared to Shortest Path Distance by\nAirport Ranking - Maximum \"direct-to\" efficiency\n- Betweenness centrality to be calculated for navigation nodes as\nmeasure of their utilization\n- Number of shortest-paths through nodes as a proportion to total\nshortest paths\n\n(c) 2006 Philippe A. Bonnefoy, Roland E. Weibel, Engineering Systems Division, Massachusetts Institute of Technology\nNavigation Distance Results\n6.0%\n6.5%\n7.0%\n7.5%\n8.0%\n8.5%\n9.0%\nNumber of Airport Pairs\n% Distance Reduction\n∑∑\n>\n=\nairports\nairports\nn\ni\nn\ni\nj,j\nij\nd\nd\n)\nd\ndˆ\n%reduction\n-\n="
    },
    {
      "category": "Resource",
      "title": "final_cent_decen.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/d76bd4e219c7b2d9804bbdbf55d0645c_final_cent_decen.pdf",
      "content": "Advanced Systems\nArchitecture\nFinal Report - 11 May 2006\nTeam: Joao Castro, Nirav Shah, Robb Wirthlin\nFaculty supervisor: Chris Magee\nESD.342\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nDefining the problem\n- Hypothesis: Systems that are structured\nor centrally designed are different than\nthose that are unstructured or emerge in\nan evolutionary fashion\n- Approach: Observe transportation\nnetworks and knowledge networks with\nnetwork analysis tools for comparison\nbetween types of systems\n\nKnowledge\nTransportation\nCentralized\nDecentralized\nWikipedia\nEnc. Brittanica\nLondon\nBoston\nBeijing\nMoscow\nMark Avnet\nSlide\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nBottom-line\nStructured vs. Unstructured\nPlanned vs. Evolved\nStructured vs. Unstructured\nPlanned vs. Evolved\n- Information Networks are different:\n- Different path lengths\n- Different depth of information\n- Evolving to a common structure(?)\n- Transportation Networks:\n- No common structure among each class\n- Without constraints migrates to common structure(?)\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nOutline\n- Organization structure\n- Product\n- Analysis & Conclusions\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nOrganizations\nWikipedia\nEncyclopedia\nBrittanica\nOnline E. B.\nDate\nEstablished\nRange of access: Free\nlimited use up to full-\naccess memberships\nStaff\n1 ruling body\n1 tech support body\n>1 million editors\n1 mgmt body\n1 scientific body\n4000 editors\nFunding\nDonation\nFor-profit\nAccessibility\nFree\nPurchase\nPeer Review\nLittle; becoming more\nfrequent\nYes\nFunding\nStaff\nOwner\nPrivate/semi-private operations\nPublic service (non-profit)\nPublic authorities\nSubways\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nOutline\n- Organization structure\n- Product\n- Analysis & Conclusions\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nWikipedia (product)\n- Top 10 Editions user space\nEdition\n# Edits [1]\n# Articles\n[1]\n# Users\n[1]\n# Admins\n[1]\n% Visitors\n[2]\nInternet\nusers [4]\n285.0M\n53.3M\n26.2M\n10.6M\n86.3M\n6.8M\n28.8M\n10.8M\n32.0M\n45.2M\n<1\nLang.\nRanking [3]\n1- en\n2- de\n3- fr\n4- pl\n5- ja\n6- sv\n7- it\n8- nl\n9- pt\n10- es\n[1] - download.wikipedia.org\n[2] - alexa.com\n[3] - wikipedia\n[4] - internetworldsats.com\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nWikipedia (product)\n- Wikipedia\n- Full English edition is very big\n- Decompressed pages, text and revision are > 450GB !!\nLanguage\nedition\nDate\nArticles\nPage\ntable\nPagelinks\ntable\nRevision\ntable\nText\ntable\nEnglish\n2006-03-03\n255 MB\n1.5 GB\n-\n-\nPortuguese\n2006-03-01\n20 MB\n114 MB\n-\n-\nSimple English\n2006-03-02\n1.3 MB\n8.5 MB\n6.74 MB\n224 MB\nSource: download.wikipedia.org\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nEncyclopaedia Britannica\n(product)\n-\n15 Editions\n-\n1st Edition (1768-1771):\n-\nconsolidation of important subjects into lengthy, comprehensive treatises\n-\ninclusion of many shorter, dictionary-type articles on technical terms and other\nsubjects.\n-\n2nd Edition (1777-1784):\n-\ninclusion of biographical articles and the expansion of geographic articles to\ninclude history.\n-\nSupplement to the 4th, 5th, & 6th Editions (1815-1824):\n-\nalmost all the articles were original signed contributions.\n-\n7th Edition (1830-1842):\n-\ninnovation of a general index\n-\n9th Edition(1875-1889):\n-\nUS ownership\n-\n11th Edition (1910-11):\n-\nsplitting up of the traditional lengthy, comprehensive treatises into somewhat\nmore particularized articles. (as a result the 11th edition had 40,000 articles--more\nthan double the 9th edition's 17,000--although its total amount of text was not much\ngreater)\nRef:\n\" Encyclopædia Britannica .\" Encyclopædia Britannica. 2006. Encyclopædia Britannica Online. 9 May 2006 <http://www.search.eb.com/eb/article-2111>.\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nEncyclopaedia Britannica\n(product)\n-\n15 Editions\n-\n14th Edition (1929):\n-\nSpace was found for new articles by cutting down the style and detail of the 11th\nedition, from which a great deal of material was carried over in shortened form.\n-\nMore than 3,500 authors of all nationalities contributed articles.\n-\nAlso the 14th Edition initiated an important change in editorial method--continuous\nrevision. the encyclopaedia was revised and reprinted annually.\n-\nAlso begun in 1938 was the volume called Britannica Book of the Year, which\ncovered developments of the year preceding publication.\n-\n15th Edition (1974):\n-\nnew set consisted of 28 volumes in three parts serving different functions: the\nMicropædia (Ready Reference), Macropædia (Knowledge in Depth), and Propædia\n(Outline of Knowledge).\n-\nA major revision of the 15th edition in 1985. The Macropædia was greatly\nrestructured, plus a separate two-volume Index; and both the Micropædia and the\nPropædia were redesigned, reorganized, and revised. The entire set consisted of 32\nvolumes.\n-\nThe company began a massive revision of the encyclopaedia database in 1999.\n-\n1994 Britannica Online\n-\n1999 Britannica.com launched\nRef:\n\" Encyclopædia Britannica .\" Encyclopædia Britannica. 2006. Encyclopædia Britannica Online. 9 May 2006 <http://www.search.eb.com/eb/article-2111>.\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nSubway Systems (product)\nYear Started\nNumber of\nStations\nkm of track\nPlanned vs.\nEvolved\nLondon\nEvolved\nPlanned\nEvolved\nEvolved\nPlanned\nPlanned\nBeijing\n197.7\nBoston\n101.5\nBerlin\n144.2\nMoscow\n278.3\nTokyo\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nLondon Underground\nImage removed for copyright reasons.\n1921 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube21.jpg\nImage removed for copyright reasons.\n1933 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube33.gif\nImage removed for copyright reasons.\n1938 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube38.jpg\nImage removed for copyright reasons.\n1948 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube48.jpg\nImage removed for copyright reasons.\n1968 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube68.jpg\nImage removed for copyright reasons.\n1977 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube77.jpg\nImage removed for copyright reasons.\n1987 map of London subway.\nhttp://www.clarksbury.com/cdl/maps/tube87.jpg\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nOutline\n- Organization structure\n- Product\n- Analysis & Conclusions\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nSubway Metrics\nSmall-worlds ???\nn\nm\n<k>\nC1\nC2\nl\n0.1595\n5.394\n3.409\n3.562\nBerlin\n2.96\n0.117\n0.0812\n5.164\n0.0957\nMoscow\n3.21\n0.106\n0.0791\n3.916\n0.1846\nTokyo\n2.77\n0.078\n0.0522\n6.432\n-0.0911\n6.037\nBeijing\n2.83\n0.237\n0.0667\n-0.1053\nBoston\n2.09\n0.074\n0.0317\n-.3011\nMoscow\n(w/ rail)\n3.00\n0.080\n0.0591\n0.2601\nr\nLondon\n3.02\n0.222\n0.0997\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nSubway measures for Centrality\nOne planned, one evolved\nboth have high centrality???\nDegree\nCloseness\nBetweeness\nEigenvector\nLondon\n3.321\n19.157\n4.882\n9.453\nBeijing\n10.099\n30.234\n8.922\n22.053\nBoston\n10.476\n29.293\n13.484\n23.693\nBerlin\n4.000\n19.991\n5.705\n11.089\nMoscow\n6.431\n26.350\n5.951\n14.652\nTokyo\n1.901\n15.965\n3.746\n8.173\nMoscow\n(w/ rail)\n2.222\n16.923\n3.759\n6.231\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nBritannica circle of knowledge\nTerms:\nAdenomyosis\nAlgebra\nAluminium\nBaseball\nBasketball\nBeekeeping\nBrigadier\nCellular_automaton\nChristmas\nColonization_of_Africa\nColor_photography\nCriminology\nDesign\nDNA\nElisabeth_of_Bavaria\nEntrepreneur\nFrancisco_Franco\nGolf\nHans_Christian_Andersen\nHistory_of_Manchester\nIce_cream\nIndia\nIndustrial_Revolution\nJames_Chaney\nLocomotive\nMassari\nMeditation\nMoscow\nNobel_Peace_Prize\nParis\nPolitics\nPopulation\nRadio\nStradivarius\nWorld_war_II\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nPath length compared\nAverage Path Length\nWikipedia: 2.8\nBritannica: 9.4\nDistance in EB\nObserved distance\nEn. Wikipedia\nEBrittanica\nE.B. Online ?\n\nImpact of hierarchy\nHistory of Manchester\nParis\nMoscow\nPopulation\nBritannica\nWikipedia\nThis illustrates the difference that a hierarchy makes\n- Hierarchy pushes unrelated topics away\n- Wikipedia still aggregates\nvery close topics together\nbut blurs very different\nsubjects\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nExample of horizons\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nArticle horizon\nSource: simple.wikipedia.org\nChristmas\nAlgebra\nPolitics\nBaseball\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nVisualizing growth in wikipedia\n\"Historygrams\"\nRequires rich data set. Only\nwikipedia had it.\n80% (1584 of 1973) of the horizon\narticles were created after the\noriginal article\nMonths\n# Articles created\nMonths\n# Articles created\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nHistorygrams\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nVisualizing growth in wikipedia\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nTimeline of Knowledge Events\nInitial knowledge entry; seed database; large articles with many \"dictionary-type articles\"\nInitial organization of knowledge entries - \"Index\" or \"Portal\"\nOriginal author contributions\nEncyclopaedia Britannica\nWikipedia\nFormal Knowledge Hierarchy introduced\nEarly 2001\nMid 2001\n~2005\n20xx?\nOnline presence established\nDatabase Revision; Cross-linking of knowledge\nExample of Clockspeed\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nSystems placed in DWS graph\nWikipedia\nBritannica\nLondon\nBoston\nBeijing\nBritannica\nonline\nBritannica\nLondon\nWikipedia\n?\nBeijing\nFuture\nCourtesy of National Academy of Sciences, U.S.A. Used with permission.\nSource: Dodds, P. S., D. J. Watts, and C. F. Sabel. \"Information exchange and the robustness of\norganizational networks.\" Proc Natl Acad Sci 100, no. 21 (2003): 12516-12521.\n(c) National Academy of Sciences, U.S.A.\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nLearning Summary\n- There are no obvious visible differences to the End User\n- Knowledge is accessible; transportation between nodes happens\n- As expected, a tree structure produces longer paths\nbetween articles than one without\n- Online repositories of knowledge mitigate any differences in\nstructure (due to technology).\n- Transportation Systems are subject to long-term constraints\nsuch as legacy and geography that make changes slow.\n- Convergence to a common structure(??)\n- We believe our initial hypothesis may be challenged as systems\nevolve to a \"multi-scale like\" state\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nDeliverable/We will provide\n- Wikipedia\n- How to build a local testbed and integrate with Matlab\n- E.Britannica\n- Circle of Knowledge dataset & graph\n- Source code\n- Wikipedia Horizon networks (matlab)\n- Wikipedia Historygram (matlab)\n- Wikipedia Distance (python + \"6 degrees of wikipedia\")\n\n(c) 2006 Students: Joao Castro, Nirav Shah, Robb Wirthlin - ESD, Massachusetts Institute of Technology\nReferences\n-\nGeneral\n-\n\"Information Exchange and the robustness of organizational networks\", Dodds, Watts, Sabel, 2003\n-\nEncyclopedias\n-\nGiles, J., Internet encyclopaedias go head to head. NATURE, 2005. Vol 438(15 December 2005): p. 990-\n901.\n-\nWikipedia\n-\nWikipedia (www.wikipedia.org)\n-\nSix degrees of wikipedia (tools.wikimedia.de/sixdeg)\n-\nLarry Sanger. 2005. The Early History of Nupedia and Wikipedia: A Memoir. In Open Source 2.0. O'Reilly\nMedia ISBN 0596008023\n-\nJakob Voss. Measuring Wikipedia. 10th International Conference of the International Society for\nScientometrics and Informetrics 2005. Stockholm: International Society for Scientometrics and Informetrics.\n(24th--28th Jul 2005). 221-231.\n-\nBritannica\n-\nForeword and Editor's preface to the 1978, 15th edition of Encyclopaedia Britannica\n-\nE.Britannica Print 15th ed, 1994\n-\nE.Britannica Online (www.britannica.com)\n-\nSubways\n-\nDan Whitney archive\n-\nKato, Shinichi, Development of Large Cities and Progress in Railway Transportation, Japanese Railway &\nTransport Review No. 8 (pp. 44-48)\n-\nBodrick, Benson, Labyrinths of Iron: A History of the World's Subways, Newsweek Books, August 1981\n-\nLondon Tube Maps (www.clarksbury.com/cdl/maps.html)\n-\nUrbanRail (www.urbanrail.net)"
    },
    {
      "category": "Resource",
      "title": "final_mapk.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/6108b266a3ddc712ece4dbd89396d61f_final_mapk.pdf",
      "content": "MAPK Signaling Pathway Analysis\nMAPK Signaling Pathway Analysis\nESD.342\nESD.342 -- Spring 2006\nSpring 2006\nMay 11th 2006\nPresentation by:\nGergana Bounova, Michael Hanowsky and Nandan Sudarsanam\nFaculty: Chris Magee\n\nAgenda\n- Background\n- Network Statistics: the Usual Suspects\n- Structural Analysis: Motifs and Communities\n- Other Datasets, Benchmarking\n- Future Directions and Scope\n\nMAPK Signaling Pathway\n- Cellular Level Biological Network\n- Signaling pathways are used to respond to external stimuli and\nregulate cellular activities\n- MAPK's (Mitogen Activated Protein Kinase) - Transfer\ninformation through chemical reactions and mechanistic physical\ninteractions.\n- One pathway, three species - does that give us any information\n- Literature and Data sources\n- Literature sources in Protein network analysis\n- The proteomics initiative\n- Nature of data - an incomplete map\n- KEGG database (Kyoto Encyclopedia of Genes and Genomes):\nsignaling transduction pathways\n- DIP (Database of Interacting Proteins): all known interacting\nproteins\n\nNetwork Statistics - Comparisons\nDrosophila\nYeast\nHuman\n# nodes\n# edges\nEdge/node\n1.000\n1.000\n1.264\nDirected?\nNo\nNo\nNo\nConnected?\nYes\nNo (5 comp)\nNo (16 comp)\nMax,mean,min deg\n6,2,1\n8,2.154,1\n15,2.831,1\nMax degree node\nDeg correlation\n-0.630\n-0.146\n-0.306\nMax,mean,min,betw\n27,23.737,20\n103,62.796,54\n4639,1035.538,384\nMax betw node\n3,14,15,16,17\nClust coeff C1,C2\n0.064\n0.008\nMax clust coeff node\n-\n# triangle loops\nMean path length\n3.836 (20% n)\n6.370 (11% n)\n6.454 (4% n)\nNetwork diameter\n8.000\n16.000\nconsistently\nclose to 1\nnegative\nconsistently\nclose to 0\nLow reachability\nfor small networks\n\nNetwork statistics - Drosophila\nDrosophila\nUndirected\nDirected\nRandom - Preserved\nDegree Sequence\n# nodes\n# edges\nEdge/node\n1.000\n1.000\n1.000\nDirected\nNo\nYes\nNo\nConnected\nYes\nNo\nYes\nMax,mean,min deg\n6,2,1\nIn: 3,1,0, out: 5,1,0\n6,2,1\nMax degree node\nIn: 3, out: 9\nDeg correlation\n-0.630\n-\n-0.203\nMax,mean,min,betw\n27,23.737,20\n14,8,1\n19, 19, 19\nMax betw node\n3,14,15,16,17\n10,11,12,18,19\nn/a\nClust coeff C1,C2\n0, 0\n0, 0\n0.140\nMax clust coeff node\n-\n-\n# triangle loops\nMean path length\n3.836\n4.075\n3.427\nDiameter\n8.000\n7.000\nas expected\ndegree\nbetweenness\n-5-4-3-2-1 0 1 2 3 4\nclustering coefficient\npath length\ndegree\nbetweenness\n0.5\nclustering coefficient\npath length\ncompletely different!\nconsistent\n\nNetwork statistics - Yeast\nYeast\nUndirected\nDirected\nYeast - Random Generated,\nPreserved Degree Sequence\n(GC)\n# nodes\n52 (GC)\n# edges\nEdge/node\n1.000\n1.000\n1.077\nDirected?\nNo\nYes\nNo\nConnected?\nNo (5 comp)\nNo\nYes\nMax,mean,min deg\n8,2.154,1\n8,2,0\n8, 2.154,1\nMax degree node\nIn: 6, out: 45\nDeg correlation\n-0.146\n-\n-0.092\nMax,mean,min,betw\n103,62.796,54\n28,12.125,1\n85, 56.7, 52\nMax betw node\n8,19\n13, 21\nClust coeff C1,C2\n0.0638, 0.0376\n0.0202, 0.0119\n0.000\nMax clust coeff node\n# triangle loops\nMean path length\n6.370\n4.779\n4.910\nNetwork diameter\n16.000\n11.000\n10.000\ndegree\nbetweenness\n0.5\nclustering coefficient\npath length\ndegree\nbetweenness\n-5-4-3-2-101234\nclustering coefficient\npath length\n\nNetwork statistics - Human\nHuman\nUndirected\nDirected\nHuman undirected, randomly-generated (GC)\n# nodes\n# edges\nEdge/node\n1.264\n1.264\n1.415\nDirected?\nNo\nYes\nNo\nConnected?\nNo (16 comp)\nNo\nYes\nMax,mean,min deg\n15,2.831,1\n15,2.527,0\n15, 2.831, 1\nMax degree node\nIn: 23, out: 98\nDeg correlation\n-0.306\n-0.323\nMax,mean,min,betw\n4639,1035.538,384\n383,37.669,1\n362, 241.6, 160\nMax betw node\n25,33,41,70,72,73,82\nClust coeff C1,C2\n0.0075, 0.0045\n0, 0\n0.122\nMax clust coeff node\n-\n# triangle loops\nMean path length\n6.454\n3.931\n4.286\nNetwork diameter\n11.000\n9.000\nBecoming more evident: the real pathway has more built-in flexibility,\neven though reachability remains low\n\nMotifs - Background\n- Coarse Graining - an important bottom-up method of understanding\nnetwork structure, by uncovering global patterns.\n-\nThis helps us go beyond the global features and understand the relevance of certain\nstructural elements.\n-\nMotifs are statistically significant patterns of connections that recur through out the network.\nThey serve as the basic building blocks of the network.\n-\nStudies have shown that each network motif performs a key information processing function\nin biological networks.\n-\nExamples of Motifs studied in Biological networks:\nDirected 4-Node Motifs\nDirected 3-Node Motifs\nUndirected 4-Node Motifs\n\nMotif Occurrences\nMotif index\nD.Mel\nD.Mel. rand\nYeast\nYeast rand\nHuman\nHuman rand\n-\n-\n-\n-\n-\nMotif index\nD.Mel\nD.Mel. rand\nYeast\nYeast rand\nHuman\nHuman rand\n-\n-\n-\n-\n-\n-\n-\n-\nMotif index\nD.Mel\nD.Mel. rand\nYeast\nYeast rand\nHuman\nHuman rand\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n\nThe Newman-Girvan View\n\nAll Protein Datasets\n-\nYeast original: 8992 nodes, 5952 links\n- First refinement: 2554 nodes, 5728 edges\n- Second refinement: 2408 nodes, 5668 edges\n- Edge/node: 2.4, clust=0.294, meanL=5.197,\ndiam=14\n-\nDrosophila original: 28052 nodes, 22819 links\n- First refinement: 7451 nodes, 22636 edges\n- Second refinement: 7355 nodes, 22593 links\n- Edge/node: 3.072, clust=0.016, meanL=8.009\n-\nHuman original: 28155 nodes, 1397 links\n- First refinement: 1085 nodes, 1346 links\n- Second refinement: 939 nodes, 1276 links\n- Edge/node: 1.359, clust=0.235, meanL=6.822\nYeast Core Proteins Main Component\nHuman Proteins Connected Component\n\nConclusions & Future Work\n- Analyzed three pathway sets structurally and detected\nsome similar patterns (modules, communities)\n- Found betweenness as the best signature of pathways\nand a sign of flexibility in biological networks\n- Building blocks are preserved across pathways, and\ncertain motifs found by others do appear statistically\nsignificant (such as bi-fan, for example)\n- Plan to perform coarse-graining on larger datasets to\nlook for further structural matching\n- Benchmarking of motifs and other statistical measures\nwith whole known protein datasets\n\nReferences\n-\nItzkovitz, S., Levitt, R., Kashtan, N., Milo, R., Itzkovitz, M., and Alon. U.,\nCoarse-Graining and Self-Dissimilarity of Complex Networks. arXiv:q-\nbio.MN/0405011 v1, May 2004.\n-\nJeong, H., Mason, S. P., Barabasi, A.-L. & Oltvai, Z. N., Lethality and\ncentrality in protein networks. Nature 411, 41-42 (2001).\n-\nMaslov, S. & Sneppen, K. Specificity and stability in topology of protein\nnetworks. Science 296, 910-913 (2002).\n-\nMilo, R., Shen-Orr, S. S., Itzkovitz, S., Kashtan, N. & Alon, U., Network\nmotifs: simple building blocks of complex networks. Science 298, 824-827\n(2002).\n-\nSole, R. V., Pastor-Satorras, R., Smith, E., and Kepler,T. B., A model of\nlarge-scale proteome evolution, Advances in Complex Systems 5, 43{54\n(2002).\n-\nWuchty, S., and Almaas, E., \"Peeling the Yeast protein network,\"\nProteomics. 2005 Feb;5(2):444-9. 5(2), pp. 444-449, 2005.\n\nDistribution Comparisons - Human\ndegree\nbetweenness\n0.2\n0.4\nclustering coefficient\npath length\ndegree\nbetweenness\n0.5\nclustering coefficient\npath length"
    },
    {
      "category": "Resource",
      "title": "final_powergrid.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/2e302b19ec162ae2d961db49742a04f0_final_powergrid.pdf",
      "content": "The Regional Power Grid Team\nPresentation # 3: Network Results\nKaren Tapia-Ahumada\nJehanzeb Noor\nKatherine Steel\nMay 09, 2006\n\nPower Grid Team, 2006\nPower Grid Agenda Items\nBuilding Network Matrix and Images\nNetwork Level Results\nZone Level Results\nComparisons and Insights\nComments, Questions and Answers\n\nPower Grid Team, 2006\nGroups 1 Æ Red (zones 1 - 3)\nGroups 2 Æ Blue (zones 4 - 5)\nGroups 3 Æ Green (zones 6 - 8)\nBuilding Adjacency Matrix: 8 zones to 3 groups\n\nPower Grid Team, 2006\nAdjacency Matrix for Grid\nHierarchy is\nevident from the\nstructure of this\nadjacency matrix\nTools Used:\nUCINET, Pajek,\nMatlab, MSExcel\n\nMore than 1600 nodes and more than 2500 links\n\nEach block (below diagonal) pertains to a zone in this power pool\n\nOff-diagonal entries (far off) show inter-zonal and high voltage links\n\nPower Grid Team, 2006\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nOverall Power Grid\n\nPower Grid Team, 2006\nDegree Distribution Histogram\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nOverall\n1.562\n3.117\n14.35\n6.521\nNo\n0.149\n0.002\n0.10\n\nMost nodes (more than 90%) only have two other connections\n\nVery few (only 27) nodes have a degree above 10\n\nMost nodes are localized, with few central ones (critical to network)\n\nPower Grid Team, 2006\nDegree Distribution on log-lin\nCumulative degree distribution - Overall Grid\nOrdered degree\nCumulative degree distribution\n\nExponential degree distribution (looking at whole curve)\n\nDistribution depends on the scale chosen for degrees\n\nSmall world effect - high clustering coefficient and similar path length as\ncompared to a random network\n\nPower Grid Team, 2006\nHomogenized Network Image\n\nTwo congested zones in the grid (in yellow) namely zone 4 and zone 8\n\n345 kV lines are \"backbone\" for grid level, 115 kV lines for zonal level\n\nLess congested zones have smaller lines and sparsely distributed nodes\n\nPower Grid Team, 2006\nZonal Analysis - Zone 1\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nDegree distribution - Zone 1\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nCumulative degree distribution - Zone 1\nOrdered degree\nCumulative degree distribution\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 1\n1.495\n2.952\n9.514\n4.939\nNo\n0.155\n0.014\n-.094\n\nPower Grid Team, 2006\nDegree distribution - Zone 2\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nCumulative degree distribution - Zone 2\nOrdered degree\nCumulative degree distribution\nZonal Analysis - Zone 2\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 2\n1.259\n2.504\n9.174\n5.376\nNo\n0.073\n0.018\n.001\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\n\nPower Grid Team, 2006\nDegree distribution - Zone 3\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nZonal Analysis - Zone 3\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 3\n1.250\n2.421\n7.809\n5.114\nNo\n0.179\n0.026\n.208\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nCumulative degree distribution - Zone 3\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nNotes on Zones 1 - 3\nThese three zones are the most sparse in\nterms of nodes and links, and relatively small\nLots of localized generation - zone 3 has some\nlarge units (export power to rest of grid)\nDegree correlations of zone 1, zone 2 are ~0,\nzone 3 is ~0.2 (highly connected generators)\nAverage path length is smaller than overall\nEdge to node ratio is low\n\nPower Grid Team, 2006\nZonal Analysis - Zone 5\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 5\n1.284\n2.568\n6.287\n4.747\nNo\n0.160\n0.029\n-0.16\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nDegree distribution - Zone 5\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nCumulative degree distribution - Zone 5\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nZonal Analysis - Zone 6\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 6\n2.102\n2.851\n9.500\n4.696\nNo\n0.231\n0.021\n-0.09\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nDegree distribution - Zone 6\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nCumulative degree distribution - Zone 6\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nDegree distribution - Zone 7\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nZonal Analysis - Zone 7\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 7\n1.465\n2.93\n7.902\n5.309\nNo\n0.121\n0.010\n-.086\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nCumulative degree distribution - Zone 7\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nNotes on Zones 5 - 7\nThese zones are intermediate in terms of nodal\n(and also population) density, load vs. generation\nbalances out\nHigh voltage lines in these zones are also grid's\nbackbone\nThe degree correlation is negative for all three,\nwhich is different from other zones\nRemoving these interconnecting lines to other\nzones leaves one zone (5) highly disconnected\n\nPower Grid Team, 2006\nZonal Analysis - Zone 4\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 4\n1.697\n3.394\n7.853\n4.889\nNo\n0.111\n0.009\n0.34\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nDegree distribution - Zone 4\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nCumulative degree distribution - Zone 4\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nZonal Analysis - Zone 8\nLinks:\n< 115 Æ Black\n115 Æ Red\n230 Æ Green\n345 Æ Blue\nOthers\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nZone 8\n1.588\n3.176\n6.282\n4.671\nNo\n0.193\n0.014\n0.08\nNodes:\nGenÆ Red\nLoad Æ Blue\nBus Æ Yellow\nTr Æ Black\nOthers\nDegree distribution - Zone 8\n9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\nDegree\nFrequency\nZone 8\nCumulative degree distribution - Zone 8\nOrdered degree\nCumulative degree distribution\n\nPower Grid Team, 2006\nNotes on Zone 4 and Zone 8\nThis sub-group, especially zone 4, is very densely\npopulated and generation-starved. Congestion\ncomponent of locational marginal price is high\nSmaller lines form the backbone of these zones,\nthat is lots of load nodes coming off the grid\nTwo critical nodes lies in zone 8, which also has fair\namount of office buildings and industry Æ demand\nAvg. path length is relatively short, m/n is higher\nClustering coefficient is relatively higher, degree\ncorrelation is positive (as high as 0.34 in zone 4)\n\nPower Grid Team, 2006\nZonal Comparative Analysis - Summary Metrics\nEntity\nN\nM\nm/n\n<k>\nMax k\nL\nlogn/log<k>\nAlpha\nC\n<k>/n\nR\nWestGrid\n1.335\n2.67\n18.990\n8.661\nNo\n0.080\n0.001\n0.004\nNewGrid\n1.562\n3.117\n14.354\n6.521\nNo\n0.149\n0.002\n0.100\nZone 1\n1.495\n2.952\n9.514\n4.939\nNo\n0.155\n0.014\n-0.094\nZone 2\n1.259\n2.504\n9.174\n5.376\nNo\n0.073\n0.018\n0.001\nZone 3\n1.250\n2.421\n7.809\n5.114\nNo\n0.179\n0.026\n0.208\nZone 4\n1.697\n3.394\n7.853\n4.889\nNo\n0.111\n0.009\n0.340\nZone 5\n1.284\n2.568\n6.287\n4.747\nNo\n0.160\n0.029\n-0.160\nZone 6\n2.102\n2.851\n9.500\n4.696\nNo\n0.231\n0.021\n-0.090\nZone 7\n1.465\n2.93\n7.902\n5.309\nNo\n0.121\n0.010\n-0.086\nZone 8\n1.588\n3.176\n6.282\n4.671\nNo\n0.193\n0.014\n0.080\n\nThere are less than two links per node, signifying lots of them are terminal\n\nClustering coefficient is 0.15 and average path length ~14\n\nPearson coefficient positive which is different from technological networks\n\nPower Grid Team, 2006\nComments on Comparisons\nA random network generated using the\nsame structure as the grid has:\nAverage path length = 15\nA clustering coefficient on the order of 10-3\nHubs have effect, power grid is small-world\nMost other metrics are like Western Power\nGrid, except clustering coefficient and\nPearson degree correlation are much higher\n\nPower Grid Team, 2006\nExistence of Hubs & Robustness\nRemoving critical (e.g. very highly connected nodes)\nhas an effect on avg. path length\nFor example, node #687 has effect (major\ngenerator in the most congested zone)\nRemoving this node increases avg. path length\nNetwork accessibility affected by targeted node\nremoval of the ones with the highest degree\n\nPower Grid Team, 2006\nOverall Grid Resilience\nDiameter = 37 (vs. 40 for the random network)\n\nFrom node 19 (gen. in zone 1) to node 860 (load in zone 4)\nResilience analysis\n\nDiameter: from 37 to 67\n\nMean geodesic: 14.35 to 21.30 (critical nodes in zone 8)\n\nNode 1503 (generation unit), Node 1616 (backbone bus)\nOverall Network Resilience\n0.0%\n0.5%\n1.0%\n1.5%\n2.0%\nFraction nodes removed (highest first)\nL\nNode\nNode 1503\n\nPower Grid Team, 2006\nComments, Questions and Answers\n- Please share any new ideas for interesting and useful analyses\nThanks! (Karen, JZ, Steel)\n\nPower Grid Team, 2006\nMore on Network Metrics\nConstraints on clustering and connectivity\ncost and demographics dictate the constraints\nonly geographic proximity can define a cluster\nNetwork Betweenness Centralization = 0.33\nNetwork Closeness Centralization = 0.08\nHighly connected nodes: 1616 (345kV bus), 1503\n(gen), 475-478 (gen), 1197 (gen), 1555 (load),\n502 (gen), 687 (load)\n1616 and 1503 are important nodes"
    },
    {
      "category": "Resource",
      "title": "final_pstn.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/8b9289ad0d99fe834ee78160b2d08434_final_pstn.pdf",
      "content": "(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nPSTN\nBy\nJijun Lin\nDan Livengood\nChintan Vaishnav\nMay 11th 2006\nFaculty Advisor: Dan Whitney\nESD 342, Advanced Systems Architecture\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nOverview\n- A new historical perspective\n- Call scenarios and architectural comparison\n- Static: Network Metrics\n- Dynamic: Pearson's Coefficient in evolving network\n- Robustness in new networks\n- Constraints and responses\n- Contributions and future work\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nPSTN Economic Regulation (US)\n1934-1984\n(national)\n1984-1996\n(each region)\nAfter 1996\n(each state)\nAT&T\nAT&T\nMCI\nSprint\nRegional\nBells\n(Nine Total\nOne per\nRegion)\nAT&T\nMCI\nSprint\nI\nL\nE\nC\nC\nL\nE\nC\nC\nL\nE\nC\nC\nL\nE\nC\nOur analysis focuses on an ILEC and a CLEC for a single state\nMaxi\nBell\nMini\nBell\nNano\nBell\nFigure by MIT OCW.\nInternational gateway\nexchange (Centre de Transit 3)\nNational tandem exchanges\n(Tertiary trunk switching\ncenters)\nRegional tandem exchanges\n(Secondary trunk switching\ncenters)\nLocal tandem exchanges\n(Primary trunk switching\ncenters)\nLocal\nexchanges\nSubscriber lines\nSatellite links\nSubmarine\ncables\nInternational\nnetwork\nTrunk network\nLocal\nnetwork\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nLevel Skipping vs. Dynamic\nNon-Hierarchical Routing (DNHR) 1980s\nBefore DNHR -\nLevel Skipping\nDNHR\nImproved quality via level skipping\n- Switch quality no longer main constraint\n- 5-level hierarchy structure no longer\nrequired\n- New constraints are the capacity on\nthe links and switch reliability\n- Statistical analysis allows for dynamic\nplanning of routes in pre-set time\nperiods\nClass 1\nRegional Center\nClass 2\nSectional Center\nClass 3\nPrimary Center\nClass 4\nToll Center\nClass 5\nEnd Office\nFive-level toll switching plan in use from the 1950s.\nA variety of routings was possible with a maximum\nof nine trunks in tandem.\nFigure by MIT OCW. After Andrews & Hatch, 1971.\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nDNHR - Flattening the Hierarchy (1980s)\nArchitecture influenced by\nDNHR:\nNow Nano, Mini and Maxi can have similar architecture,\nbut different coverage\nEnd System\nBackbone\nCentral Offices\nFigure by MIT OCW.\nREGIONAL CENTERS\nFigure by MIT OCW.\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nCall Scenarios\nIn-network\nLocal Calls\nInter-network\nLocal &\nLong-distance\nCalls\nInter-network\nLocal &\nLong-distance\nCalls\nIn-network\nLocal Calls\nNano\nMini\nFive Networks\n2005 Nano Network\n2010 Nano Network\nMini Network\n2005 Nano + Mini\n2010 Nano + Mini\nNano\nMini\nBetween Nano, Mini and Nano + Mini networks, we can study all call\nscenarios\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nArchitecture of Nano Network\n(in-network local calling)\nNano Bell's Plan for Migration from 2005 to 2010\n1. Get redundant fiber outlets\n2. Get every node on fiber (preferably ring)\nN = 104\nz = 2.327\nM = 121\nl = 7.308\nC = 0.0262\nN = 123\nz = 2.452\nM = 152\nl = 8.729\nC = 0.0206\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nArchitecture of Mini Network\n(in-network local calling)\nN = 171\nz = 5.218\nM = 446\nl = 2.582\nC = 0.1179\nFour Types of Tandems\nLocal\nAccess\nToll\nWhy are Nano and Mini different?\nLegacy Architecture\nRegulatory Obligations\nVoice vs. Data Network\nIs there a parameter that indicates the difference in Nano vs.\nMini Network?\n\nNano vs. Mini Networks\nParameter\nNano 2005\nNano 2010\nMini Only\nN\nM\nz (<k>)\n2.327\n2.452\n5.216\nl\n7.308\n8.729\n2.582\nlog n/ log <k>\n5.499\n5.365\n3.113\nC\n0.0262\n0.0206\n0.1179\n<k>/n\n0.022\n0.020\n0.031\nr\n0.2196\n0.3277\n-0.6458\nIs sharply different r\nindicative of differences\nin technology?\nPerhaps not....\nWe know from level-skipping and DNHR that Central Offices (not just\nthe tandems) are connected in Mini's network, so r must be higher.\nBut we simply can't get this information because of\nprivacy/competitive reasons.\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nWhat happens to Pearson's if we had more\nrouting information for Mini Bell?\nr = -0.6458\nr = 0.7403\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nWhat happens to Pearson's if we had more\nrouting information for Mini Bell?\n- Degree correlation changes from -0.6458 to 0.7403 by\nrandomly adding 0 up to 1755 edges)\n- On average, zero degree correlation happens at adding\n185 edges\n-0.8\n-0.6\n-0.4\n-0.2\n0.2\n0.4\n0.6\n0.8\nNumber of randomly added links\nPearson degree correlation\nSimulation of pearson degree correlation(average over 50 runs)\nadd 182 edges (10.4%)\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nNano Connected to Mini Network\n(inter-network local or long distance)\nParameter\nNano 2005\nNano 2010\nMini Only\nMini+Nano 2005\nMini+Nano 2010\nN\nM\nz (<k>)\n2.327\n2.452\n5.216\n4.85\n4.84\nl\n7.308\n8.729\n2.582\n3.71\n4.275\nlog n/ log <k>\n5.499\n5.365\n3.113\n3.557\n3.606\nC\n0.0262\n0.0206\n0.1179\n0.196\n0.2136\n<k>/n\n0.022\n0.020\n0.031\n0.018\n0.016\nr\n0.2196\n0.3277\n-0.6458\n-0.1882\n-0.1552\nAll critical measures of Nano + Mini fall in between Nano and Mini\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nRobustness in Fiber Rings\ncollapsed vs. separate SONET rings\nT\nH1\nH2\nH3\nT\nH1\nH2\nH3\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nX\nCollapsed Rings\nSeparate Rings\nPhysically separate SONET rings are at least twice as resilient.\nCan we test this?\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nRobustness to Loss of Nodes or Edges in\nNano Bell\n- Algorithms\n- Randomly remove nodes\n- Randomly remove edges\n- Replicate the experiments for 500 times\nMax nodes\nNano 2005\nNano 2010\n0.584\n0.902\n1.068\n3.228\n1.522\n3.662\nMax edges\nNano 2005\nNano 2010\n0.57\n0.968\n1.274\n4.48\n1.256\n12.252\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nRobustness to Loss of Nodes or Edges in\nNano Bell\nRandomly remove nodes\nRandomly remove edges\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\nSimulation results of edge failures(500 runs)\nNumber of edges needed to be taken off before\nthe rest of network becomes disconnected\nProbablity\n\nNano 2005\nNano 2010\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\nSimulation results of nodes failure (500 runs)\nNumber of nodes needed to be taken off before\nthe rest of network becomes disconnected\nProbability\n\nNano 2005\nNano 2010\nResults shows Nano 2010 is more robust than Nano 2005\nIn terms of removing nodes and edges\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nSummary of Constraints\n- Technical\nConstraint\nImprovement\nCopper\nFiber\nCabling Distance\n(Attenuation)\nBandwidth (Sampling and\nError correction)\n< 1Km\n(without repeaters)\n< 70 Km\nSN Ratio\nSpeed of\nElectronics\n< 100 Mbps\n< few Gbps\n- Economic\n-\nCost of Fiber: Overcome by the economies of scale in fiber manufacturing. A\nlow-end fiber cable costs similar to high-end copper cable\n-\nCost of Electronics: Still a constraint. Electronics to run fiber network costs 3-4\ntime higher than electronics for running copper network\n- Regulatory\n-\nPayment of Access Charges: Overcome by DNHR and flattened hierarchy\n-\nUnbundling and Equal Access: Constraints upgrade of Access (Nano Bell)\nTandems\n- Operational\n-\nCost of Digging: Overcome by overcapacity\n-\nPhysical breaks: Overcome by physically separate rings\n-\nLegacy: Overcome by new companies (Nano Bells) through ground-up ring\narchitecture\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nContributions\n- The new hierarchy is flat: from 5 to ~3 levels\n- The new network is a hybrid of copper and fiber\n- The new architecture is a tree structure with rings\n- The new routing scheme is DNHR (Dynamic Non-\nHierarchical Routing) instead of level skipping\n- The Pearson's correlation coefficient has been changing\nfrom negative to positive as the network evolves\n- The network analysis confirms the increased robustness\nof the new fiber network architecture\n\n(c) 2006 Student: Jijun Lin, Daniel Livengood, Chintan Vaishnav, Engineering Systems Division, Massachusetts Institute of Technology\nRecommendations for Future Work\n- Find more data, preferably electronically\n- The best you can do is to get Telcordia's LERG (~ $1600)\n- Enhance PSTN analysis by introducing link and node\nproperties\n- Link Properties: bandwidth, traffic loads\n- Node Properties: switching capacity, customers served, traffic\ncharacteristics\n- Historical, time-based data would show the network's\nevolution and the effects of legacy on Mini Bells\n- Comparison and joint modeling of PSTN with the Internet\n- What are the structural differences in the networks?\n- What are the different design assumptions (circuit vs. packet switching)\nthat influenced each network?\n- How much overlap occurs between these two networks?"
    },
    {
      "category": "Resource",
      "title": "final_roofnet.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/0f2992cd64e2a7b6960c7268b35868a8_final_roofnet.pdf",
      "content": "Roofnet\nRoofnet\nFree Wireless Internet in Cambridge\nFree Wireless Internet in Cambridge\nESD 342\nESD 342\nPresented by: Derek Rayside, Yingxia Yang\nPresented by: Derek Rayside, Yingxia Yang\nJennifer E Underwood\nJennifer E Underwood\nSupervised by: Joel Moses\nSupervised by: Joel Moses\n\nRoofnet Revisited\nRoofnet Revisited\nThe goal of Roofnet project is to provide\nThe goal of Roofnet project is to provide\nbroadband wireless Internet access to\nbroadband wireless Internet access to\nusers in Cambridge\nusers in Cambridge\nNetwork engineered to study\nNetwork engineered to study\n\nRoofnet Background\nRoofnet Background\nOne of the first networks to measure and\nOne of the first networks to measure and\nroute based on delivery probability\nroute based on delivery probability\nNovel routing algorithms\nNovel routing algorithms\nFound that links varied greatly even over a\nFound that links varied greatly even over a\nsingle day\nsingle day\nDoesn't require a technician to set up like\nDoesn't require a technician to set up like\nother systems\nother systems\nSelf\nSelf--configures\nconfigures\nMoving away from rooftop deployment and\nMoving away from rooftop deployment and\ntoward\ntoward \"\"small and many\nsmall and many\"\" similar to sensor\nsimilar to sensor\nnetwork\nnetwork\n\nAgenda\nAgenda\nData resolution\nData resolution\nAnalysis of network topological properties\nAnalysis of network topological properties\nand variation in connectivity strengths as\nand variation in connectivity strengths as\nattempted data rate increases\nattempted data rate increases\nAnalysis and benchmarking of network\nAnalysis and benchmarking of network\ntopological properties for aggregate data\ntopological properties for aggregate data\nAnalysis of robustness\nAnalysis of robustness\nAnalysis of periphery nodes performance\nAnalysis of periphery nodes performance\nIndicated as problem by Roofnet group\nIndicated as problem by Roofnet group\nPolitical situation\nPolitical situation\nConclusions\nConclusions\n\nData Resolution\nData Resolution\nCoordinate data in the SIGCOMM2004 paper\nCoordinate data in the SIGCOMM2004 paper\nsupplementary information:\nsupplementary information:\nInconsistencies resolved with Roofnet team\nInconsistencies resolved with Roofnet team\nGateway nodes\nGateway nodes\nBuilding NE43: 26222 and 23652\nBuilding NE43: 26222 and 23652\nBuilding 36: 44466/3370\nBuilding 36: 44466/3370\nCherry St.: 26206\nCherry St.: 26206\nTraffic data arranged by\nTraffic data arranged by \"\"experiment\nexperiment\"\"\nAttempted bit rates: 1, 2, 5.5, and 11 Mbps\nAttempted bit rates: 1, 2, 5.5, and 11 Mbps\nOne node sends while others listen and record\nOne node sends while others listen and record\n\nRoofnet Map w/ Gateways Circled\nRoofnet Map w/ Gateways Circled\n\nNetwork Analysis across Experiments\nNetwork Analysis across Experiments\n2 Mbps\n1 Mbps\n5.5 Mbps\n11 Mbps\n\nNetwork Analysis across Experiments\nNetwork Analysis across Experiments\nAsymmetric topology\nAsymmetric topology\nNodes\nEdges\nAggregate\n27.4\n0.10450\n0.56250\n5.59620\n-\n27.9\n0.08660\n2.34210\n4.79870\n0.00300\n24.3\n-0.00097\n0.64614\n6.44820\n0.01160\n5.5\n21.5\n0.02930\n0.59485\n6.58540\n0.01370\n17.7\n0.04210\n0.50873\n6.79820\n0.00260\nAttempted\nData Rate\nAvg\nDegree\nMaximal\nout-degree\nMaximal\nin-degree\nDegree\nCorrelation\nClustering\nCoefficient\nUnweighted\nharmonic\npath length\nWeighted\nharmonic\npath length\nAggregate\n34.06\n31.5\n9.19\n20.18\n29.46\n7.86\n20.4\n24.05\n8.69\n5.5\n20.04\n18.76\n10.27\n14.3\n14.39\n10.7\nAttempted\nData Rate\nDegree\nCentrality\nout-degree\n[%]\nDegree\nCentrality\nin-degree\n[%]\nNetwork\nCentralization\nIndex [%]\n\nDegree Distributions as\nDegree Distributions as\nAttempted Data Rates Increase\nAttempted Data Rates Increase\nx\n2 Mbps\n1 Mbps\n5.5 Mbps\n11 Mbps\n\nPrestige as\nPrestige as\nAttempted Data Rates Increase\nAttempted Data Rates Increase\n1 Mbps\n2 Mbps\n11 Mbps\n5.5 Mbps\n\nAcquaintance as\nAcquaintance as\nAttempted Data Rate Increases\nAttempted Data Rate Increases\n1 Mbps\n2 Mbps\n11 Mbps\n5.5 Mbps\n\nNetwork Analysis of Aggregate Data\nNetwork Analysis of Aggregate Data\nThis is done by comparing different\nThis is done by comparing different\nnetwork architectures:\nnetwork architectures:\nReal Roofnet network\nReal Roofnet network\nModel1: LAN\nModel1: LAN\nModel2: WAN\nModel2: WAN\n\nRoofnet network\nRoofnet network\nAsymmetric\nAsymmetric\nSymmetric\nSymmetric\n\nModel 1(LAN)\nModel 1(LAN)\nModel 2 (WAN)\nModel 2 (WAN)\n\nMetrics Calculation\nMetrics Calculation\n32.69%\n9.19%\n0.0633\n5.5962\n0.367\n0.5625\n13.7\nRoofnet\n(asym)\n32.69%\n10.15%\n0.0117\n6.2269\n0.4123\n0.716\n15.6\nRoofnet\n(sym)\n7.88%\n46.13%\n-0.355\n13.4575\n0.9048\n0.025\nWAN\n(Model\n2)\n34.17%\n52.34%\n-0.8623\n9.8306\n0.6039\n0.1\nLAN\n(Model\n1)\nCd\nCb\nr\nl2\nl1\nC\nk\nm\nn\nL1: average path length\nL2: Harmonic path length\nr: degree correlation\nCb: Betweenness Centrality (Network Centrality Index)\nCd: Degree Centrality\n\nDegree Distribution\nDegree Distribution\nModel 2\nModel 1\nRoofnet (sym)\nRoofnet (asym)\n\nPrestige\nPrestige\n0.05\n0.1\n0.15\n0.2\n0.25\nEigenvalue measurement\n# of nodes\nHistogram of prestige for Roof(sym)\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n0.4\n0.45\n0.5\nEigenvalue measurement\n# of nodes\nHistogram of prestige for Model 1\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n0.4\n0.45\nEigenvalue measurement\n# of nodes\nHistogram of prestige for Model 2\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\nEigenvalue Measurement\n# of nodes\nHistogram for prestige of Roofnet(asym)\n\nAcquaintance\nAcquaintance\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n0.4\n0.45\n0.5\nEigenvalue measurement\n# of nodes\nHistogram of acquaintance for Model1\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\n0.4\n0.45\nEigenvalue measurement\n# of nodes\nHistogram of acquaintance\n0.05\n0.1\n0.15\n0.2\n0.25\n0.3\n0.35\nEigenvalue measurement\n# of nodes\nHistogram of acquaintance for Roof(sym)\n0.05\n0.1\n0.15\n0.2\n0.25\nEigenvalue measurement\n# of nodes\nHistogram of acquaitance for Roof(sym)\n\nRobustness Analysis\nRobustness Analysis\nRobustness\n0.2\n0.4\n0.6\n0.8\n1.2\nNumber of removal nodes\nC=S/(N-Nr)\nBetweenness\nRandom\nModel1\nModel2\n\nPeriphery: where\nPeriphery: where''s the edge?\ns the edge?\nRoofnet definition of periphery:\nRoofnet definition of periphery:\nNodes with neighbors with low packet delivery\nNodes with neighbors with low packet delivery\nprobabilities, or too many hops\nprobabilities, or too many hops\nAsymmetrical\nAsymmetrical\n\nExOR\nExOR: Opportunistic Routing\n: Opportunistic Routing\nTraditional routing: sender decides on\nTraditional routing: sender decides on\nroute, midpoints try to execute\nroute, midpoints try to execute\nExOR\nExOR: try multiple paths, hope for luck\n: try multiple paths, hope for luck\nEvery link has a probability of failure\nEvery link has a probability of failure\nHow to pick the right one?\nHow to pick the right one?\nDon\nDon''t: send to\nt: send to \"\"all\nall\"\", see who gets it\n, see who gets it\n\"\"All\nAll\"\" = 10\n= 10 \"\"best\nbest\"\" midpoints\nmidpoints\nClosest midpoint that received takes over\nClosest midpoint that received takes over\nTells others to forget about that packet\nTells others to forget about that packet\nExOR\nExOR doubles throughput\ndoubles throughput\n\nWireless in Cambridge: Actors\nWireless in Cambridge: Actors\nRoofnet\nRoofnet Research Group @ MIT\nResearch Group @ MIT\nDevelop routing protocols\nDevelop routing protocols\nNot involved in deployment\nNot involved in deployment\nMuniMesh\nMuniMesh\nKurt\nKurt Keville\nKeville and Bob Keyes (\nand Bob Keyes (\"\"wifi\nwifi activists\nactivists\"\"))\nKurt happens to be an MIT employee\nKurt happens to be an MIT employee\nBob is writing a book on municipal mesh\nBob is writing a book on municipal mesh wifi\nwifi\nCambridge Public Internet\nCambridge Public Internet\nCity: Mary Hart and Linda Turner\nCity: Mary Hart and Linda Turner\nOther: Housing Authority, Museum of Science,\nOther: Housing Authority, Museum of Science,\nHealth Alliance, Harvard\nHealth Alliance, Harvard\n\nPast and Future\nPast and Future\nEarly 2005\nEarly 2005\nCambridge decides to offer free wireless\nCambridge decides to offer free wireless\nMid 2005\nMid 2005\nMuniMesh\nMuniMesh approaches city\napproaches city\nNovember 2005\nNovember 2005\nCommittee formed\nCommittee formed\nSummer 2006\nSummer 2006\nBeta deployment\nBeta deployment\nTriangle covering parts of Area 4\nTriangle covering parts of Area 4\nMain gateways:\nMain gateways: MIT,\nMIT, Lombardi building\nLombardi building\nbeside city hall, one other city building\nbeside city hall, one other city building\nCity Manager is holding the financial reins\nCity Manager is holding the financial reins\n\nPractical Problems\nPractical Problems\nGetting signal inside buildings\nGetting signal inside buildings\nTropos\nTropos: more external light\n: more external light--pole repeaters\npole repeaters\nRoofNet\nRoofNet: run cable to roof\n: run cable to roof\nMuniMesh\nMuniMesh: radio to roof\n: radio to roof\nRoof issues\nRoof issues\nNo power, no\nNo power, no ethernet\nethernet, unhappy landlords\n, unhappy landlords\nMuniMesh\nMuniMesh: solar powered roof repeaters\n: solar powered roof repeaters\nCost of equipment\nCost of equipment\nRoofnet\nRoofnet: $700 per node\n: $700 per node\nMuniMesh\nMuniMesh: $100 per node\n: $100 per node\nSeparate home radio from rooftop repeater\nSeparate home radio from rooftop repeater\nReprogram COT\nReprogram COT NetGear\nNetGear router for in home\nrouter for in home\nRepeater will still be expensive\nRepeater will still be expensive\n\nConclusions\nConclusions\nUnexpected result: Increasing attempted\nUnexpected result: Increasing attempted\ndata rate changes the effective\ndata rate changes the effective\narchitecture\narchitecture\nRoofnet architecture is noticeably different\nRoofnet architecture is noticeably different\nfrom the representative baseline\nfrom the representative baseline\nLAN/WAN internet models\nLAN/WAN internet models\nRoofnet architecture is robust and not\nRoofnet architecture is robust and not\nfragile (as the designers intended)\nfragile (as the designers intended)\n\nBack\nBack--up Slides\nup Slides"
    },
    {
      "category": "Resource",
      "title": "final_socialnets.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/cba8bee1cf207d9c5f966565e80c2c16_final_socialnets.pdf",
      "content": "Wikipedia: working with large networks\nJustin Lindsey\nDave Long\nAlex Mozdzanowska\nMay 9, 2006\n\nProject Goals\n\nAnalyze and understand the Wikipedia networks\n{\nUnderstand the growth patterns of Wikipedia by\nanalyzing different languages\n{\nChose and analyze subsets of data by selecting specific\nrepeating patterns\n{\nAnalyze the patterns of an entire language network\n\nWork with a large set of data\n\nWikipedia Properties\n\nData: Wikipedia Online Encyclopedia\nLanguage\n# Nodes\n# Links\nSmallest\n1,544\n10,017,000\nLargest\n604,611\n\nNodes: Wiki pages\n\nLinks: html links between pages\n\n206 of the 229 Languages included in the study\n{\nExcluded are:\n\n10 smallest\n\n2 largest (German and English)\n\n11 Languages with no data\n\nNodes and Links\n\nNumber of Connected Nodes Used to Represent Total\nNodes\n\nDifferent languages give an indication of how Wiki\nnetworks grow over time\n\nAverage Node Degree and Network\nDensity\n\nNode degree increases during initial growth, but growth\nslows\n\nDensity is high initially, but drops off to close to zero\n\nClustering and Correlation Coefficients\n\nClustering and correlation settle around a constant\nnumber as the networks grow\n\nLow clustering and correlation may indicate that networks\ngrow in a random fashion\n\nSize of Network as Determined by Age\nand Speaking Population\n\nPattern Analysis\n\nData: Wikipedia Online Encyclopedia\n\nNodes: Wiki pages\n\nLinks: html links between pages\nLanguage\n# Nodes\n# Links\nLatin (LA)\n~10 thousand\n~100 thousand\n~72 thousand\nWest Frisian (FY)\n~6 thousand\n\nNetwork Analysis Approach - I\nMatch Analysis - This Approach is focused on finding\na region of interest and zooming in for more\nanalysis\nThe Approach:\n\nIdentify useful signature\n\nScan network for nodes that match signature\n\nCreate sub networks with matching nodes as roots\n\nPerform detailed analysis on sub networks\n\nSimple Signature - The 31\nExample of approach I:\nWhile looking at FY.wiki, we became curious about\nnodes that had the simple pattern of 31 out edges\n\nThere were 20 such nodes in the network.\n\nWe selected 5 of them\n\nWe created 5 sub networks with one of each of the\n5 matches respectively as root nodes.\n\nWe then performed analysis on the sub networks.\nHere are the results:\n\nNetwork Analysis Approach - I\nWest\nFrisian\nDataset\nNodes\nLinks\nClustering\ncoefficient\nAve Path\nLength\nDegree\nDist (deg)\nDeg Dist\n(vertex)\nA\n72.8\n24.2\n5.63\n23.3\nB\n3.3M\n4.7M\n7.5M\n29M\nC\n31,750\n-0.033\n34M\n6.8M\n21M\n25M\n0.0231\n35M\n26M\nD\n33,943\n-0.031\n0.0244\nE\nC_ave\n0.000290\n-0.059\n0.00181\n35,541\n-0.032\n0.0236\n0.022\n\nOut edges = 31\n\nConnected = Yes\n\nSimple = No (loops exist)\n\nDirected = Yes\n\nSymmetric = No\n\nNetwork Analysis Approach - II\nAggregate Analysis - This approach is focused on\nsummarizing the state of the entire network. Much\nas you could use Fourier series to identify the\nfrequency content of a signal.\nThe Approach:\n\nIdentify appropriate \"frequency content\" equivalent\n\nCalculate Network Signature based on specific\n\"frequency content\" component\n\nCompare Network Signature to other Network\nSignatures of interest:\n{\nThe same network over time (normal vs attack mode)\n{\nComparable networks for which detailed behavior is\nknown (classify a network as a specific type or in a\nspecific mode)\n\nSimple \"frequency content\" - Depth 2 -\nOut Degree\nExample of the approach II:\nIn many command and control structures the number\nof reports (or people with whom they converse)\nthat my reports (or people with whom I converse)\nhave is a useful indicator\nSo we\n\nSelected 2 level Out Degree as a useful \"frequency\ncontent\" sifter\n\nWe calculated the number of nodes that had a\ngiven out degree and then the out degree of each\nof their children\n\nHere are the results:\n\nSurface Map of Network Signatures (FY)\n\nSurface Map of Network Signatures (LA)\n\nWhat we learned\n\nDealing with very Large networks requires different\nmethods that respect computational time and\nspace requirements.\n{\nAdjacency Matrices don't cut it - Sparse Matrices, Node\nPairs, or Node Children lists are required.\n\nMatch Analysis allowed us to treat a large network\nas a collection of smaller networks of interest\nwhich in turn allowed use of traditional \"small\nnetwork\" analysis tools.\n\nAggregate Analysis allowed us to finger print the\nstate of large networks and compare in time and to\nother networks of interest.\n\nChallenges\n\nIn Match Analysis care must be taken to identify an\nappropriate signature that has sufficient relaxation\nas to catch more than the single node from which\nthe signature was derived and still be a\nmeaningful indicator\n\nIn Aggregate Analysis, whatever \"frequency\ncontent\" sifter is selected will be applied over the\nentire network and can quickly explode\ncomputationally if not selected with care\n\nDomain knowledge is required to determine most\ninteresting signature or \"frequency content\" to use\nfor meaningful analysis\n\nPossible Future Projects\n\nPossible Continuations of Project\n\nAdd an author and user dimension to the analysis\n{\nLook at how the number of authors grows with the size of\nthe Wiki\n{\nLook at how the number of users grows and how often\nthey visit the website\n\nAnalyze the evolution of one or more Wiki\nlanguages networks\n{\nLimited data is available, contacting the managers of the\npage may be necessary\n{\nDevelop theory for quickly establishing communities"
    },
    {
      "category": "Resource",
      "title": "final_team_struc.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/75aea439220e260bab37fc63b7266683_final_team_struc.pdf",
      "content": "ESD.342 Franck, Nicol, Song, 2006\nPage 1\nTeam Structure in Climate\nChange Research\nTravis Franck\nRobert Nicol\nJaemin Song\n\nESD.342 Franck, Nicol, Song, 2006\nPage 2\nAgenda\n- Introduction\n- Update from 2nd Presentation\n- Results of Network Analysis\n- Characteristics of entire network\n- Characteristics of individual volume\n- Lessons for international research\nprojects\n\nESD.342 Franck, Nicol, Song, 2006\nPage 3\nIPCC Report Preparation Process\nIPCC approves outline\nGovernment and organizations\nNominate experts\nBureaux select authors\nAuthors prepare draft\nExpert review\nAuthors prepare final draft\nGovernment review\nWG accepts/approves report and publish\n1990: IPCC First Assessment Report\n1995: IPCC First Assessment Report\n2001: IPCC First Assessment Report\nImages removed for copyright reasons.\nVolumes of Climate Change 2001.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 4\nMotivation\n- Explore team collaborations on a global research\neffort to understand climate change\n- Identify relevant influence metrics\n- Use metrics to identify key players\n- Extract key relationships from citation Network\n- Test hypothesis of IPCC social network formation\n\nESD.342 Franck, Nicol, Song, 2006\nPage 5\nAnalysis of the Entire IPCC Report\n\nESD.342 Franck, Nicol, Song, 2006\nPage 6\nEntire Network\n-# of authors: 17901\n-# of edges: 71341\n-<k>: 3.98\n\nESD.342 Franck, Nicol, Song, 2006\nPage 7\nCluster Coefficients\nCluster Coeff.\n(Pajek CC1)\nBiology\n(Newman, 2001)\nPhysics\n(Newman, 2001)\nResult\n0.022191\n0.066\n0.414\n-Not highly clustered\n-Lower clustering than other co-authorship studies\n-Note: Most likely different equations, so might not be\ndirectly comparable\n\nESD.342 Franck, Nicol, Song, 2006\nPage 8\nPower Law Check\nDegree Distribution in Log-Log\n0.001\n0.01\n0.1\n<k>\nDensity\nDegree Distribution\nFit\n-Possible reason: Restricted set of papers\n\nESD.342 Franck, Nicol, Song, 2006\nPage 9\nTop 20 Table\nAuthor\nCentrality\nBetweeness\nPhD\nYear\nDiscipline\nAffiliation 1\nAffiliation 2\nT.M.L.Wigley\n0.02930 U of Adelaide\n1967 Physics\nU of Waterloo\nU of East Anglia\nR.Leemans\n0.01589 Uppsala University\nEcology\nWageningen U\nUK AEA\nC.Rosenzweig\n0.01510 U of Massachusetts\n1991 Environmental Science NASA\nRIVM\nJ.F.B.Mitchell\n0.01465 Belfast\n1973 Physics\nHadley Centre\nJ.E.Penner\n0.01402 Harvard\n1977 Mathematics\nLLNL\nUCAR\nI.C.Prentice\n0.01373 Cambridge\n1977 Environmental Science U of Bristol\nU of Michigan\nP.D.Jones\n0.01132 U of Newcastle\n1977 Environmental Science U of East Anglia\nM.E.Schlesinger\n0.01089 UCLA\n1976 Atmospheric Science\nU of Illinois U-C\nJ.A.Patz\n0.01081 Case Western\n1987 Molecular Biology\nJohns Hopkins\nIPCC\nM.Heimann\n0.01068 U of Bern\n1982 Biogeochemistry\nMax Planck Instit U of Wisconsin\nF.S.Chapin\n0.01035 Stanford\n1973 Biology\nU of Alaska\nIPCC\nA.HendersonSeller\n0.00989\nAtmospheric Science\nHonored with AusNAS\nR.S.J.Tol\n0.00882 Vrije\n1997 Economics\nEnergy EconomicANSTO\nM.Hulme\n0.00855 U of Wales\nU of East Anglia Carnegie Mellon\nS.H.Schneider\n0.00787 Columbia\n1971 Physics\nStanford\nTyndall Centre\nK.P.Shine\n0.00770\nMeteorology\nU of Reading\nMacArthur\nY.Zhang\n0.00769 U of Washington\n1996 Atmospheric Science\nIPCC\nG.Marland\n0.00755 U of Minnesota\n1972 Geology\nIndiana State U\nIPCC\nF.Giorgi\n0.00749 Georgia Tech\n1986 Physics\nNCAR\nOak Ridge Nationa\nW.H.Schlesinger\n0.00706 Cornell\n1976 Biology\nDuke\nENER (Italy)\nS.Brown\n0.00700\nBiogeochemisty\nHadley Centre\nM.Weber\n0.00691\nTechnical U Muni UK AEA\nD.Rind\n0.00638 Columbia\n1976 GCM\nEarth Institute\nColumbia\nJ.B.Smith\n0.00626 M.S. Public Policy\n1982 Economics\nEPA\nStratus Consulting\n\nESD.342 Franck, Nicol, Song, 2006\nPage 10\nR.S.J.Tol Neighborhood\nPhoto removed for copyright reasons.\nPhoto of Dr. R.S.J. Tol.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 11\nHow MIT Ranks\nAuthor\nCentrality\nBetweeness Rank\nPhD\nYear\nDiscipline\nAffiliation 1\nR.Prinn\n0.00047097\n875 MIT\n1971 Atmospheric SciencMIT\nH.D.Jacoby\n0.00032858\n1196 Harvard\n1967 Economics\nMIT\nM.Grubb\n0.00540247\n39 Imperial College 1985* Economics\nU of Cambridge\n-\nProf. Jacoby thought that MIT might not be represented b/c:\n- WGIII (vol 3) didn't examine MIT's models (more\npolitical).\n- MIT chooses not to be dragged into the fray.\n- Our models are used by others.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 12\nLongest Path\n- Longest Path\n- 19 edges\n- 20 authors\n\nESD.342 Franck, Nicol, Song, 2006\nPage 13\nDetails of Long Path\nAuthor\nFull Name\nNationality\nPhD\nField/Year\nDiscipline\nAffiliation 1\nB.Aniansson\nBritt Aniansson\nSwedish*\nNegotiations\nSwedish Council for\nU.Svedin\nUno Svedin\nSwedish*\nNegotiations\nSwedish Council for\nC.Folke\nCarl Folke\nSwedish*\nEconomics\nRoyal Swedish Acad\nM.Gadgil\nMadhav Gadgil\nIndian\nHarvard\nBiology*/1969\nEcology\nIndian Institute of Sc\nJ.A.McNeely\nJeffery McNeely\nUS\nUCLA\nAnthropology/196X\nBiodiversity\nIUCN\nW.V.Reid\nWalter Reid\nUS\nU of Washinton Zoology/1987\nBiodiversity\nDirector of the Millen\nJ.Goldemberg\nJose Goldemberg Brazilian\nU of Sao Paulo Physics\nEnergy\nInstituto de Eletrotec\nJ.R.Moreira\nJose R. Moreira\nBrazilian\nU of Sao Paulo Physics\nInstituto de Eletrotec\nG.Marland\nU of Minnesota Geology/1972\nGeology\nIndiana State Univer\nI.Fung\nInez Fung\nMIT\nMeteorology/1977\nAtmospheric Science UC Berkeley\nP.A.Matson\nPamela A. Matson US*\nOregon State\nEcology/1983\nEarth Science\nUC Berkeley\nW.H.Schlesinger\nCornell\nBiology\nDuke\nS.A.Prior\nStephen A. Prior\nUS*\nAuburn\nAgronomy/1993\nEarth Science\nNational Soil Dynam\nB.A.Kimball\nBruce A. Kimball\nUS*\nColorado State Ecology/1997\nUSDA\nM.Johnson\nMark Johnson\nUS*\nCornell\nSoil Chemistry/1986\nEarth Science\nEPA\nJ.King\nJohn W. King\nUS*\nU of Minnesota Geology/1983\nOceanography\nUniversity of Rhode\nD.J.Noakes\nDavid L. G. Noakes Canadian*\nUC Berkeley\nZoology/1971\nZoology\nUniversity of Guelph\nV.V.Ivanov\nVladimir Ivanov\nRussian*\nSt. Petersberg\nOceanography/1992\nOceanography\nUniversity of Plymou\nA.P.Nagurnyi\nAndrei P. Nagurnyi Russian*\n(arctic fish/ocean)\nAARI\nP.A.Abaza\n(arctic fish/ocean)\n\nESD.342 Franck, Nicol, Song, 2006\nPage 14\nAnalysis of IPCC Volumes\n\nESD.342 Franck, Nicol, Song, 2006\nPage 15\n3 Volumes\nV1: Scientific Basis - pure science\nV2: Impacts, Adaptation and Vulnerability\n- science (50%) + policy & economics (50%)\nV3: Mitigation - science (20%) + policy & economics (80%)\n# of authors\n# of papers\nm\nV1\nV2\nV3\n\nESD.342 Franck, Nicol, Song, 2006\nPage 16\nHypothesis 1\nH: Each field has a different structure in the\ncollaboration network.\n1) Collaboration statistics\n<k>\n# papers of single author\n# of authors per paper\nV1\n5.76\n209 (2.97%)\n3.78\nV2\n3.03\n1069 (10.61%)\n2.83\nV3\n2.07\n669 (19.22%)\n2.23\nScientists tend to collaborate more than social scientists.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 17\nHypothesis 1\n2) Distance and Cluster\nAverage Path\nLengths\nUnreachable\npairs (%)\nLongest Path\nLengths\n34.50\n74.45\n86.96\nLargest\nCluster\nV1\n4.85\n80.92 %\nV2\n6.09\n50.49 %\nV3\n5.98\n36.02 %\nV1\nV2\nV3\nfrequency\nMany of social scientists tend to have own individual research group\nand do not collaborate with other research groups.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 18\nHypothesis 1\n3) Centrality\nBetweenness\nDegree\nCloseness\nV1\n0.045\n0.023\n0.009\n0.014\n0.237\nV2\n0.024\n0.167\nV3\n0.028\n0.143\nScientists' collaboration network is the most centralized.\n\nHypothesis 2\nESD.342 Franck, Nicol, Song, 2006\nPage 19\nH: There might exist political influence in selection of\njournal articles in IPCC report.\n1) Nationality\nNationality distribution of Top 20 authors\nV1\nV2\nV3\nAustralia\nGermany\nNetherlands\nUK\nUSA\nOther\ndeveloped\ncountries\ndeveloping\ncountries\nonly 1 out of 60\n\nESD.342 Franck, Nicol, Song, 2006\nPage 20\nHypothesis 2\n2) IPCC Editors\n# of editors\n# of editors in top 20\n# of editors in top 50\nV1\n9 (6.5%)\n9 (4.5%)\n11 (9.5%)\n18 (12.9%)\nV2\n19 (9.5%)\nV3\n23 (19.8%)\nEditors have a great influence in the V3.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 21\nHypothesis 2\nV1\nV2\nV3\nAustralia\nCanada\nGermany\nJapan\nNetherlands\nRussia\nUK\nUSA\nOther\ndeveloped\ncountries\nDeveloping\ncountries\nNationality distribution of IPCC editors\n%\n2) IPCC Editors\nThis looks like we have enough researchers from developing countries\n\nESD.342 Franck, Nicol, Song, 2006\nPage 22\nHypothesis 2\n2) IPCC Editors\nV1\nV2\nV3\nCanada\nGermany\nJapan\nNetherlands\nUK\nUSA\nOther\ndeveloped\ncountries\nDeveloping\ncountries\nNationality distribution of IPCC editors in top 50\nEditors who have a big influence on the network are mostly\nfrom USA and UK.\n\nESD.342 Franck, Nicol, Song, 2006\nPage 23\nLessons for International Research\nProjects\n\nESD.342 Franck, Nicol, Song, 2006\nPage 24\nLessons\n- Climate change is a science-based problem\n- Most Top 20 Authors were senior\nscientists/researchers\n- Climate change is a cross-cutting challenge, yet little\nintegrated research\n- Most collaborations were scientist-only\n- Efforts should be made to increase collaborations\namong ecologists, economists, scientists, and policy-\nmakers\n- \"Affirmative action\" for developing country researchers\nto offset capacity issues\n- Associate them with the most \"central\" researchers\n\nESD.342 Franck, Nicol, Song, 2006\nPage 25\n-\nThank you.\n-\nQuestions?\n\nESD.342 Franck, Nicol, Song, 2006\nPage 26\nJ.B.Smith Neighborhood"
    },
    {
      "category": "Resource",
      "title": "finl_planet_data.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/6d28985549f6b0781c3b4b45eb18bce6_finl_planet_data.pdf",
      "content": "Social Network Analysis of\nthe Planetary Data System\nFinal Presentation\nKate Martin\nMark Avnet\nMay 9, 2006\nESD.342\nAdvanced System Architecture\n\nOverview Planetary Data System\nImage courtesy of NASA.\n\nDecomposing the PDS Database\ninto 3 Bipartite Networks ...\nPDS Database\nData Set 1-Mode\nData Set 2-Mode\nInstrument Host 2-Mode\nPDS Node 2-Mode\nAuthor 1-Mode\nUnweighted\nWeighted\n... Yields 12 separate 1-Mode networks\nfor comparative analysis\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small-magnitude k values, but the regions that follow a power law\nare small for many of the networks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case where\nr << 1)\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small-magnitude k values, but the regions that follow a power\nlaw are small (and possibly non-existent) for many of the\nnetworks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case where\nr << 1)\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small-magnitude k values, but the regions that follow a power law\nare small for many of the networks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case where\nr << 1)\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small-magnitude k values, but the regions that follow a power law\nare small for many of the networks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case where\nr << 1)\n\nAffiliation networks lead to\ntriangle motifs and high\nclustering coefficients\nAuthors\nData Sets\nNetwork of authors with\ndata sets as edges\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small-magnitude k values, but the regions that follow a power law\nare small for many of the networks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case where\nr << 1)\n\nNewman-Type Table for the 12 PDS Networks\n- Network-Specific Results\n- Small k values, but the regions that follow a power law are small\nfor many of the networks\n- Short path lengths and high clustering coefficients\n- Degree Correlation\n- \"Social\" and \"information\" networks have r > 0\n- \"Technological\" networks have r < 0 (except in one case\nwhere r << 1)\n\nNewman-Type Table for the 12 PDS Networks\n- General Observations\n- Results depend on the choice of how to represent the\nnetwork\n- Weighting can give a more accurate picture but can also\ncause the metrics to lose their meaning\n\nNewman-Type Table for the 12 PDS Networks\n- General Observations\n- Results depend on the choice of how to represent\nthe network\n- Weighting can give a more accurate picture but can also\ncause the metrics to lose their meaning\n\nNewman-Type Table for the 12 PDS Networks\n- General Observations\n- Results depend on the choice of how to represent the\nnetwork\n- Weighting can give a more accurate picture but can\nalso cause the metrics to lose their meaning\n\nCompletely Connected Areas\n==> High clustering\ncoefficients\nand\nHigh Pearson degree\ncorrelation\n\nr = 0.68\nr = 0.039\n# Nodes w/ k >=\n# Nodes w/ k >=\nCumulative Degree Distributions\nAuthors by Instrument Host\nInstrument Hosts\n# Nodes w/ k >=\n# Nodes w/ k >=\n20 40 60 80 100 120 140 160\n5 10 15 20 25 30 35 40 45 50\nDegree\nDegree\nAuthors by Instrument Host\nInstrument Hosts\n100 150 200 250 300\nDegree\nDegree\n\nCommunity Structure\nDo PDS nodes represent\ncommunities? NO\nNode size: Betweenness\nShape: Newman-Girvan\nColor: PDS Node Association\n\nCommunity Structure\nDo Instrument Hosts\nrepresent communities?\nYES\nNode size: Betweenness\nShape: Newman-Girvan\nColor: Instrument Host Association\n\nCommunity Structure\nDo Instrument Hosts\nrepresent communities?\nYES\nNode size: Betweenness\nShape: Newman-Girvan\nColor: Instrument Host Association\n\nCentrality and Network Representation\n- As before, weighting can affect the results.\n- Higher centrality without weighting.\n- Some measures are affected, and others are not.\n- Some measures are not valid for some networks.\n- Centrality tends to be highest for the network of PDS\nNodes (with authors as edges).\n\nCentrality and Network Representation\n- As before, weighting can affect the results.\n- Higher centrality without weighting.\n- Some measures are affected, and others are not.\n- Some measures are not valid for some networks.\n- Centrality tends to be highest for the network of PDS\nNodes (with authors as edges).\n\nCentrality and Network Representation\n- As before, weighting can affect the results.\n- Higher centrality without weighting.\n- Some measures are affected, and others are not.\n- Some measures are not valid for some networks.\n- Centrality tends to be highest for the network of PDS\nNodes (with authors as edges).\n\nCentrality and Network Representation\n- As before, weighting can affect the results.\n- Small Bodies is a much better center without weighting.\n- Some measures are affected, and others are not.\n- Some measures are not valid for some networks.\n- Centrality tends to be highest for the network of PDS\nNodes (with authors as edges).\n\nCentrality and Network Representation\n- As before, weighting can affect the results.\n- Higher centrality without weighting.\n- Some measures are affected, and others are not.\n- Some measures are not valid for some networks.\n- Centrality tends to be highest for the network of PDS\nNodes (with authors as edges).\n\nWhat's Your Szego Number?\n- Top two \"best centers\" determined for each of the\n12 networks by each of the 4 metrics\n- The most commonly appearing nodes selected as\nthe \"best centers\" for each network (above)\n- Not surprisingly, two catch-alls are among the best\ncenters (2nd and third) of instrument hosts\n- K. Szego is the Erdos of the Planetary Data\nSystem\n\nWhat's Your Szego Number?\n- Top two \"best centers\" determined for each of the\n12 networks by each of the 4 metrics\n- The most commonly appearing nodes selected as\nthe \"best centers\" for each network (above)\n- Not surprisingly, two catch-alls are among the best\ncenters (2nd and third) of instrument hosts\n- K. Szego is the Erdos of the Planetary Data\nSystem\n\nWhat's Your Szego Number?\n- Top two \"best centers\" determined for each of the\n12 networks by each of the 4 metrics\n- The most commonly appearing nodes selected as\nthe \"best centers\" for each network (above)\n- Not surprisingly, two catch-alls are among the best\ncenters (2nd and third) of instrument hosts\n- K. Szego is the Erdos of the Planetary Data\nSystem\n\nFuture Work\n- Look at the sub-network within one of the PDS nodes to\ndetermine centrality and community structure within a subfield.\n- Consider PDS Data Access Statistics.\n- Only collected by NASA for access at the PDS node level by hostname\n(rather than individual). PDS staff may be able to collect data for data\nset and instrument host access, but it is not being done now.\n- We have collected the available usage statistics for some nodes (Small\nBodies, Engineering, and PPI) and are in contact with all of the node\nmanagers.\n- Create bipartite networks of authors and subject areas from a\nmajor planetary science conference.\n- American Astronomical Society's Division for Planetary Sciences (DPS)\nAnnual Meeting has been suggested by R.P. Binzel (one of the authors\nhere at MIT).\n- Compare results to those presented here. Are the community structure\nand centrality around instrument host and subject area specific to the\nPDS or more generalizable?\n- Gather data on funding and political support for missions and\nfor PDS nodes to determine the dynamics between scientists\nand policymakers and how that relates to the results presented\nhere. (Possible component of Mark's research)"
    },
    {
      "category": "Resource",
      "title": "project_info.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/6130e3c1e261f99ba7c556059d8f486e_project_info.pdf",
      "content": "ESD.342 Spring 2006\nProject Information\nProject Goals:\n-\nAnalyze and attempt to improve upon an existing large scale system (or\norganization)\n-\nUnderstand the domain of the system (and its history, if relevant)\n-\nUse Course Material on the system\n- Pay attention to data availability and quality, and note any observational\nlimits\n- Test methods and tools for usefulness\n- Identify opportunities for quantitative analysis and necessary qualitative\naspects\n- Identify hierarchy of various types if applicable\n- Apply network analysis and other quantitative tools\n- Identify architectural types and compare to canonical forms\n- Understand system ilities and constraints\n- Make comparison to other systems\n\nProject Deliverables:\n- Meetings with assigned project faculty: should occur at least once in each\nphase, that is, a week or two before each presentation\n- March 23: Each project team gives a 7 minute presentation on their project\nstatus\n- April 25: Each project team gives a 7 minute presentation on the quantitative\naspects of their project (network analysis and other tool application)\n- May 9 and May 11: Each project team to give 15 (2 person teams) or 20 minute\nfinal presentations on their project.\n- Presentation Constraints:\no Each project member is required to give a minimum of two (partial)\npresentations during the term.\no The short presentation times and multiple presenters will require careful\nplanning/rehearsal.\n\n- May 16: Final Written report due at noon for all projects.\n\nFinal Presentation Objectives:\n- Help class learn about use of course material in actual system by interesting and\ninformative examples.\n- Creative application and testing of several conceptual aspects of course material.\n- The work should involve observational as well as modeling or theory approaches and\ntry to connect this analysis to change or design issues for the system\n\nFinal Report Content:\n-\nSystem description\n-\nStimulus, main actors, stakeholders\n-\nSources of needs and requirements\n-\nSystem Extent (Boundary and quantities)\n-\nMission statements, explicit if it exists or \"reasonably presumed\" for\npurposes of project\n-\nSystem historical background and evolution\n-\nHistory of each version fielded, if applicable\n-\nImportant changes in system architectural structure, defined by methods\nwe have been discussing\n-\nIts size, scale, network metrics or other descriptors over time as possible\n-\nAssessment of system effectiveness over time including current critical issues\n-\nRelated to mission statement\n-\nRelated to system characteristics like flexibility, complexity, robustness,\ncost, performance etc.\n-\nRelated to metrics derived from network analysis or others\n-\nPotential architectural Improvements\n-\nReflections and comparisons (what worked and didn't with respect to methods\nand tools learned this term)\n-\nAnalogies to other systems or kinds of systems\n-\nWhat did you learn by doing this project\n-\nWhat aspects of system architecture analysis and description did you find\nstrong or weak, more or less useful, etc.\n-\nWritten Material must be less than 20 pages of text (1.5 spaced) but can include\nvarious additional graphs and tables."
    },
    {
      "category": "Resource",
      "title": "esd_architecture.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/fab1bacbc50d83dec0e62bc0e7f6eb07_esd_architecture.pdf",
      "content": "ENGINEERING SYSTEMS\nMONOGRAPH\nThe ESD Architecture Committee\n\nEdward Crawley, Olivier de Weck, Steven Eppinger, Christopher Magee,\nJoel Moses, Warren Seering, Joel Schindall, David Wallace, Daniel Whitney (Chair)\nTHE INFLUENCE OF ARCHITECTURE IN ENGINEERING\nSYSTEMS\n\nMarch 29-31, 2004\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nTHE INFLUENCE OF ARCHITECTURE IN\nENGINEERING SYSTEMS\nThe ESD Architecture Committee\n\nEdward Crawley, Olivier de Weck, Steven Eppinger, Christopher Magee, Joel Moses,\nWarren Seering, Joel Schindall, David Wallace, Daniel Whitney (Chair)\nABSTRACT\nThe field of Engineering Systems is distinguished from traditional engineering design in part by\nthe issues it brings to the top. Engineering Systems focuses on abstractions like architecture and\ncomplexity, and defines system boundaries very broadly. It also seeks to apply these concepts to\nthe process of creating systems. This paper summarizes the role and influence of architecture in\ncomplex engineering systems. Using the research literature and examples, this paper defines\narchitecture, argues for its importance as a determinant of system behavior, and reviews its ability\nto help us understand and manage the design, operation, and behaviors of complex engineering\nsystems.\nA. INTRODUCTION\nTypical engineering design education focuses on specific aspects of design, such as the technical\nbehavior of a set of elements interconnected in a certain way. By contrast, Engineering Systems\nfocuses on a number of abstract concepts first because they provide a general framework for\nguiding the development of many diverse kinds of systems, so that these systems will provide the\ndesired functions in the desired ways. Among these abstract concepts is that of system\narchitecture. In this paper, we explore this concept and provide a number of ways of appreciating\nsystem architecture's importance in both the practical aspects of system design and in the\nintellectual aspects of understanding complex systems from a variety of viewpoints.\nThe paper begins with a definition of architecture and its influence on functional behavior, extra\ndesired properties like flexibility and reliability (collectively called \"ilities\"), complexity, and\nemergent behaviors. Architectures are not static but instead evolve over long periods as\ntechnologies mature. They also evolve during the normal course of designing an individual\nsystem. These evolutionary patterns are useful in understanding architecture's importance.\nThe paper next provides several examples of architectures and illustrates how architecture\naffects the way systems are designed, built, and operated. The examples include aircraft,\nautomobiles, infrastructures, and living organisms.\nThe importance of architecture is framed in three domains of importance: as a way to understand\ncomplex systems, to design them, to manage them, and to provide long-term rationality by means\nof standards. The abstract concepts of modularity and integrality are shown to be useful for\ncategorizing systems and illustrating how architectural form can influence important system\ncharacteristics. Several contrasts are noted between relatively small, deliberately designed\nproducts and evolutionary, less-managed large infrastructures.\nArchitecture's ability to influence the functions and allied properties of systems is shown to extend\nto robustness, adaptability, flexibility, safety, and scalability. Examples from recent research are\ngiven to show how some of these properties might be measured using network models of\nparticular architectures.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nFinally, the paper identifies a number of important near- and long-term research challenges\nregarding the potential for understanding architecture to the point where a system's behaviors\ncan be completely determined. Among the barriers are complexity, bounded human rationality,\nand human agency.\nB. WHAT IS SYSTEM ARCHITECTURE?\nSystem architecture is an abstract description of the entities of a system and the relationships\nbetween those entities. Architecture is important in most technical fields, including not only civil\narchitecture of buildings but of physical products, software, computer networks, large engineering\nsystems, and infrastructures. The architecture of a system has a strong influence on its behavior.\nEvery system has an architecture. Architectures may arise in the process of deliberate de novo\ndesign of a system; by evolution from previous designs with strong legacy constraints; by obeying\nregulations, standards, and protocols; by accretion of smaller systems with their own\narchitectures; or by exploration of form and behavioral requirements via dialogue between users\nand architects, to name a few known mechanisms. While natural architectures may hold lessons\nfor us, including the influence of evolution under constraints, we are mainly concerned here with\nman-made architectures of complex engineering systems.\nMan-made system architectures are created as part of the process of creating and designing\nsystems. These systems are intended to have certain primary functions, plus other properties that\nwe call \"ilities:\" durability, maintainability, flexibility, and so on. The primary functions have\nimmediate value while the ilities tend to have life-cycle value. Like the ilities, the architectures\nthemselves are long-lived either because they determine the design of several generations of\nproducts or because the resulting systems are themselves long-lived. In most cases, it is very\nchallenging to design a complex system that achieves all of its primary functions and all of its\nilities. In some instances one has to resolve tradeoffs between desirable properties for the short\nterm versus desirable life-cycle properties. An example is the life-cycle property of extensibility,\nwhich might require including interfaces for future system elements that are not present in the\noriginal version. Such interfaces must be designed, will generally require additional resources,\nand might increase initial system complexity. The benefits of such architectural decisions are\nuncertain and might only be realized in the future, or not at all. Methods for evaluating uncertain\nevents and providing for them in advance are discussed in De Neufville (2004).\nSome systems, such as familiar products of industry (cars, aircraft, computers) are designed\naccording to a deliberate process that includes carefully thinking through what their architectures\nshould be, although the thinking and the resulting architectures can vary widely in\nappropriateness for their intended purposes. Other systems, such as large infrastructures, may\ngrow by accretion or annexation from smaller systems. Even when the smaller systems have\ndeliberate and well-conceived architectures, the resulting agglomerated system may not have a\ncohesive or consistent architecture, a fact that may inhibit the system's ability to function.\nRegional electric power grids are an example.\nComplex systems have behaviors and properties that no subset of their elements have. Some of\nthese are deliberately sought as the product of methodical design activity. While achieving these\nbehaviors, the designers often accept certain undesirable behaviors or side effects, In addition,\nsystems have unanticipated behaviors commonly called emergent. Emergent behaviors may turn\nout to be desirable in retrospect, or they may be undesirable. Emergent behaviors are similar to\nincidental interactions identified in Ulrich and Eppinger (2000). Automobiles not only enabled\npersonal transport but revolutionized society in many unexpected ways, such as growth of\nsuburbs and shopping malls, courtship habits, and a sense of personal freedom. Other examples\nof this are in Table 1.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\n\nAnticipated\nEmergent\nDesirable\nElectric power networks share\nthe load.\nHub-spokes airline routes\nshorten the length of trips.\nBlackouts are associated with\nincreased births.\nHub-spokes plus waiting time\ncreates a business opportunity\nin airport malls.\nUndesirable\nPower networks can\npropagate blackouts.\nHub-spokes causes huge\nswings in workload and\nresource utilization at airports.\nBlackouts are associated with\nincreased births.\nAirport operators become\ndependent on mall rental\nincome, making it difficult to\nmodify airline route structures.\nTable 1: Examples of Desirable and Undesirable Anticipated and Emergent System\nProperties Influenced by Architecture\nThe desirability/undesirability as well as the anticipated/emergent nature of these examples are\ndebatable and are offered for discussion purposes only. (Hub-spokes example from Allen,\nNightingale, and Murman 2004.)\nFinally, the architecture of a system is an important determinant of its complexity, for good or ill.\nSometimes, architectures are designed or evolve to minimize complexity, but, as systems grow in\nsize, a point is usually reached where a system's complexity becomes overwhelming, imposing a\nlimit on what one can do to operate the system, predict its behavior, or change it. Many systems\ngain both their benefits and their vulnerabilities from what would appear to be complexity, such as\nthe interconnections in the nation's electrical grid. These interconnections permit power to flow\nfrom regions with excess to those with shortages, a common occurrence. If each region had its\nown grid, there would be no way to share the load. But exactly the same complexity works in the\nopposite direction as well. When the shortage in one region is too great and that region's grid\nbreaks down, this breakdown can propagate along the same connections and bring down other\nparts of the grid that have no problems. Empirical evidence for the influence of complexity is\ngiven by Sterman (2000), who describes instances of \"policy resistance:\" systems whose\nbehavior gets worse as people doggedly apply what they think is the correct policy.\nThe above points are summarized in Figure 1.\nArchitecture\nFunction\nBehavior\nComplexity\nEmergent\nBehavior\n\"ilities\"\n\nFigure 1: Architecture Plays a Central Role in Giving a System Its Behavior and \"Ilities,\" as\nWell as Generating Emergent Behavior and Complexity\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nSystem engineering theory teaches designers to create a hierarchy of functions and physical\nobjects. In most cases, these are system behaviors or characteristics, such as safety, handling,\nor fuel economy, that are visible to the customer. During system design, the requirements of\nupper levels in the hierarchy are decomposed and flowed down to the lower levels. This is\nintended to create separate manageable pieces that can be worked on independently. Carried to\nits extreme, this process is called \"reductionism.\" Major challenges include remembering all the\nrequirements, keeping them consistent, and understanding the many interactions between\nbranches of the hierarchy. These interactions cause problems during integration at the end of\nproduct development and challenge the basic assumptions underlying reductionism.\nSystem engineering theory works most smoothly when the product can be broken into modules\nthat are relatively independent. Such products or systems are called modular. When products\ncannot be decomposed simply, or when their behaviors interact, they are called integral. There\nare good technical reasons, such as weight or energy efficiency, that some systems must contain\nsome measure of integrality. Correspondingly, there are good non-technical reasons, such as the\nability to upgrade or customize a product, that systems must also contain some measure of\nmodularity. A continuing tension in system design is the result.\nMore generally, reductionism relies on the assumption that a divide-and-conquer strategy will\nreally work, that understanding the behavior of each element and defining each interface correctly\nand completely will assure a properly working system. This assumption brings with it a host of\nother attitudes and methods, generally called top-down, that assume that things can be\npreplanned and scripted, and that following the script is the way to get a successful result.\nIn contrast to top-down is bottom-up, in which requirements and system design are expected to\nemerge over time and by means of trial and error. Under these assumptions, no complete script\ncan be written, not all of the events and decisions can be anticipated or scheduled, and the final\nresult is unknown. On this basis, a step-by-step design process beginning with definition of the\narchitecture is impossible. At the very least, the early steps will be revisited. Even if the design of\neach individual system proceeds more or less top-down, the architecture of an industry or class of\nsystem has historically evolved on a bottom-up basis. This is especially true in complex\nsituations. A nuanced procedure for balancing these approaches is given by Cutcher-\nGershenfeld, Field, Hall, Kirchain, Marks, Oye, and Sussman (2004).\nCreating an architecture is often called architecting. Rechtin's description of this process broadly\nrepresents the de novo design situation plus intense dialogue between architect and customer\n(Rechtin 1990). It involves determining what the system is supposed to do and how specifically it\nwill do it. Rechtin's view of architecting is similar to the embodiment stage (Pahl and Beitz 1991)\nin classical engineering design, when functions are expressed as objects arranged in space so\nthat they can accomplish the desired functions. Achievement of the ilities is also a factor during\nthe embodiment stage, according to Rechtin and Pahl and Beitz. The process of generating form\nfrom function usually does not deliver a unique form. The final choice is guided by application of\nthe principles of engineering design as well as by the desire to conform to the ilities. Furthermore,\nin traditional engineering design, the ilities are derived from careful consideration of customers or\nusers of the system. In the enterprise view of complex engineering systems (Allen, Nightingale\nand Murman 2004), Ilities also arise from enterprise culture and values, such as the safety-\nconsciousness of Volvo.\nThe process of creating an architecture often follows a process of decomposition, in which a top-\nlevel concept of the system's required functions is broken down into subfunctions, and at the\nsame time the most abstract version of its physical form is broken down into subsystems capable\nof performing the subfunctions. The process of decomposition continues in this way until single\nparts are reached. Decomposition at lower levels often can be accomplished only by choosing\nparticular concepts or instantiations of the system. System design does not always follow a\nrelentless top-down decomposition process to the single-part level but may stop partway when\nstandard or previously used items are adopted in full. It is also frequently true that architects and\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\ndesigners iterate between upper and lower levels of the system decomposition as the designers\nlearn more about the implications of their architectural decisions.\nWithin the architecting process, several types of architectures are involved (Levis 1999). These\nare\n>\nThe functional architecture (a partially ordered list of activities or functions that are\nneeded to accomplish the system's requirements)\n>\nThe physical architecture (at minimum a node-arc representation of physical\nresources and their interconnections)\n>\nThe technical architecture (an elaboration of the physical architecture that\ncomprises a minimal set of rules governing the arrangement, interconnections, and\ninterdependence of the elements, such that the system will achieve the\nrequirements)\n>\nThe dynamic operational architecture (a description of how the elements operate\nand interact over time while achieving the goals)\nFurthermore, architectures may evolve over time. This is true of typical products like cars and\naircraft and is particularly important with respect to long-lived systems like infrastructures. An\ninfrastructure's evolution is governed by many factors, such as its geographic dispersal and its\nhigh societal impact. A system like the telephone network or the organization chart of a company\nbegins simply, with a few elements and simple relationships. As it grows, elements are added,\nnew complexities arise, and the system may have to be re-architected. Wise is the architect\nwhose system can grow within the original rules, element types, and structural arrangements.\nMost companies must be repeatedly reorganized. Other systems that involve large investments in\nphysical plant cannot be re-architected. The goal of the architect is to minimize the severe\nconstraints imposed by legacy, some of which are highly disadvantageous.\nThe life history of a decomposition process, both for familiar products and long-lived\ninfrastructures, comprises at least two evolutions. One evolution defines the architecture of an\nentire technological class of entities and follows the \"S\" curve (Utterback 1994). The other\nevolution follows a contingent series of choices during the design of a given entity in that class.\nThe \"S\" curve history starts with an interactive search by users and designers for requirements\nand matching architecture. A pure top-down process cannot succeed in the early phases of a\ntechnology or industry. Even after users and designers understand each other, systems evolve to\nmeet requirements in new ways. In aircraft propulsion, the top-level architectural decision\nbetween piston (radial geometry) and turbine (axial geometry) mechanizations was made\ndecades ago. We do not often go down the piston side of the choice tree any more. Within the\nturbine choice tree, many decisions are no longer looked at seriously because technology,\nmaterials, or safety considerations have cemented those decisions into place. Thus, as\ntechnologies mature, the active choices are pushed lower and lower, ultimately to the component\nlevel. Sometimes hybrid architectures, such as turboprops, will emerge to exploit new markets or\nto backfill market segments abandoned by earlier architecture/technology concepts. This reflects\nthe Henderson-Clark (1990) breakdown of innovation (radical, architectural, component, and\nincremental). When a major/disruptive break occurs, it is necessary to undo choices at\nincreasingly higher levels of the decomposition tree.\nIn an individual system design project, a decomposition is made in the form of a series of choices,\nany one of which represents a form-function realization, and any one of which could run into a\nserious problem. If the problem threatens the whole design, a series of decisions above must be\nrevisited. This can be especially difficult if the budget or schedule available to these decisions has\nbeen exhausted. The inability to operate confidently at lower levels of this tree, free of the fear of\nthe whole thing unraveling, constitutes one of the hazards of designing complex systems.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nC. EXAMPLES OF ARCHITECTURES\nArchitecture comprises entities and the structure of relationships and interfaces between them.\nThe relationships can be geometric, temporal, logical/informational, or based on exchange of\nmatter, information, energy, or value. Architectures can describe end items like cars or highways,\nor they can describe patterns and rules by which such end items should be designed or built.\nArchitectures must also contain a plan for how the system should be operated under nominal and\noff-nominal conditions.\nThus, aircraft architectures can be classified as fixed wing or rotary wing. Within fixed wing, we\nhave straight or angled wings distinct from the fuselage, delta wings, and blended wing\narchitectures. We also used to have mono-wing, bi-wing and tri-wing configurations, but the latter\nchoices were gradually abandoned. Each of these is suited to a different class of operation,\nspeed, flight pattern, payload, or flying characteristics. The architect chooses wing and body\nshapes in order to achieve the desired functions.\nThe architecture of wheeled vehicles began as \"body on axles,\" the typical form of chariots and\nfarm wagons. Sometime in the past, springs were added and the architecture became \"body on\nframe separated by springs.\" This architecture persisted into the era of automobiles until the mid-\n1960s when the technology of steel stampings made reinforced shell bodies feasible, giving rise\nto the unitized body in which there is no separate frame. Sloan (1996) describes several\nintermediate forms that appeared and disappeared in the 1920s and '30s, such as radiator and\nrear seat over axles, and low-slung frame.\nJet engines have two dominant forms today, the low-bypass and high-bypass types. See Figure\n2. The high-bypass type gains its thrust from a jet-driven propeller called the fan, and has a large\nfrontal area and diameter. It is suitable for commercial planes when situated under the wings. The\nlow-bypass type is more like a rocket that gains thrust by emitting hot gas out the back. It is long\nand thin and is suitable for mounting inside the fuselage of a combat jet. The cockpit of such a\nplane is mounted ahead of the engine. A high-bypass engine could not be mounted in this way on\na fighter jet. It is also more difficult to rapidly change the RPM and thus the thrust of a high-\nbypass engine as is required by combat maneuvers. For a history of these engines, see Smith\nand Mindell (2000).\nCompressor\nCombust or\nTurbine\nCockpit\nWing\nFan\nCompressor\nCombust or\nTurbine\nWing\nHigh Bypass Type Jet Engine\nLow Bypass Type Jet Engine\n\nFigure 2: Schematic Comparison of Architectures of Two Types of Jet Engines\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nAircraft architectures are also described by product families such as the Boeing 737-xxx series.\nMembers of such a family share a common fuselage diameter and certain other characteristics\nsuch as control systems and cockpits, but may differ in fuselage or wing length. New members of\nthe family must conform to certain rules of design and production, so that they can be made in the\nsame factory and flown by the same pilots without undue retraining. These rules also comprise a\nkind of architecture--that of the product family itself. They comprise standards that govern some\nfeatures of the entities (fuselage elements) as well as the interfaces (main fuselage joints) that tie\nthem together.\nAircraft manufacturing also presents architectural choices. Figure 3 shows two methods for\nassembling aircraft fuselage and installing distributive and interior systems. Each has its\nadvantages and disadvantages. \"Trough and drape\" is more feasible for small aircraft than for\nlarge, for which \"build and join barrel sections\" is commonly used.\nAircraft Manufacturing\nArchitecture\nTrough and Drape\nBuild and Join\nBarrel Sections\nFavors achieving\ncircular geometry\nFavors pre-outfitting\nof individual sections\nFavors installation\nof long\ndistributive systems\nFavors completion\nof large amounts\nof work prior to\nfinal assembly\nPermits adding\nfamily members\nby creating new\nbarrels\nPermits top-loading\nof many interior\npieces\n\nFigure 3: Alternatives for Building Aircraft Cylindrical Fuselage Sections\nAnother example of an architecture that governs the creation of multiple systems is the wired\nnational telephone network. This system has three layers, each with its own architecture. At the\nlocal level, there is a central exchange that can link any of 9,999 phones to each other or can link\none of them to a phone in a nearby exchange in the same region. Inter-regional trunks link the\nregions in the layer above the local layer. At the top is a layer of long distance links that can be\nswitched based on current loads to create alternate routes for long distance calls between distant\nregions. Each layer has multiple connections within it and a few connections to the other layers.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nWithin the top two layers, it is possible to create many alternate paths for calls to follow. Thus, the\nsystem can be scaled to carry more calls and is robust against disruptions to major links and\nhubs.\nFigure 4 is a map of the California electric transmission grid, showing the main high voltage lines.\nIt is an accretion of the investments of at least nine separate entities. Connections, not shown, to\nother states obviously add links and loops to what is shown.\n\nFigure 4: California Electric Transmission Grid\nAt least nine distinct grids are shown. Line layouts and generator locations are influenced\nby geography, population centers, location of water, and regulations,\nto name a few (von Meier 2003).\n\nThe fact that architectures can arise in different ways presents some challenges to academics\nwishing to understand architecture. The de novo case is the least constrained and thus allows\nanalysis of a sort of \"pure\" situation similar to removing friction in order to understand the basics\nof dynamics. Understanding the pure case allows us to define an ideal process and perhaps\nsome ideal architectures, as well as to generate benchmarks that can be used for comparison to\nreal architectures that conform to the constraints mentioned above. Yet few if any architectures\nare actually created in the pure environment. Thus, the next intellectual challenges are to\nunderstand the interactions of form, functions, and constraints that practicing architects must deal\nwith, and to understand how to balance these factors to create a \"good\" architecture.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nSumming up, we may observe that a wide variety of systems have architectures and that\narchitecture is what gives systems their behaviors, both good and bad. The process of creating\narchitectures is central to creating working systems that fill defined needs in defined ways within\ncertain constraints.\nThere are, however, no algorithmic procedures for creating architectures, that is, for choosing\nelements or choosing how to link them together, so that the desired behaviors will definitely be\nachieved. Furthermore, there are no tools that permit us to reason out what unintended behaviors\nwill emerge just by inspecting the arrangement or understanding the behaviors of the individual\nelements. Thus, architecture is a necessary but incompletely understood property of complex\nengineering systems, and architecting is a necessary but incompletely understood step in\ncreating them. This does not mean that more rigorous ways of analyzing and synthesizing\narchitectures are beyond our collective reach. One of the goals of research in system architecture\nis precisely this--to uncover a set of principles, methods, and tools that will help system\narchitects in the future.\nD. WHY IS SYSTEM ARCHITECTURE IMPORTANT?\nArchitecture is important practically and intellectually. It is necessary in order to design systems\nwell and to understand their behavior. Some architectures are easier to manage during design,\nothers easier to manage during operation. Some are more robust to deliberate attack while others\nare more robust to random failures. Some of these aspects of architecture are discussed next.\n1. ARCHITECTURE IS A WAY TO UNDERSTAND COMPLEX SYSTEMS\nArchitecture as \"arrangement of entities and relationships between them\" conveys many of the\nways the system will behave. In a highway system, one can count the number of alternate routes\nand the capacity of each, and thus can predict the system's overall capacity. The structure of an\nairline's service network can be set up as hubs and spokes, permitting the airline to fly\npassengers between far-separated cities via short routes and few plane changes.\nArchitecture as \"rules to follow when creating a system\" conveys coordination rules, so that\ndifferent people at different times and places can create systems that are compatible in various\nways. This is efficient not only because of the advantages of coordination but also because\nelements and interconnection patterns with known behavior can be reused, increasing the speed\nwith which such systems can be designed and put into operation.\nSome architectural designs can follow canonical patterns whose behavior is fairly well\nunderstood. Hub and spokes mentioned above is one example and is one case of a network.\nToken rings and buses are other forms of architectures, particularly popular in computer\nnetworks. A tree structure is another standard architectural form. Here each element is linked to\neach other element by one route only. Formal organizations are usually trees, but informally they\nbehave like more general networks in which people find alternate routes by which to\ncommunicate with each other.\nNot only are a system's desired operating modes influenced by its architecture, but so are some\nof its failure modes. Thus an architecture that permits only one path between elements may fail if\na leg of any path breaks. All of a tree below a broken node is isolated from the rest of the tree.\nSome architectures can be represented fairly completely as networks. In such cases, a lot can be\ndetermined about their behavior from graph theory. Current literature usually assumes identical\nnodes and identical links. Various authors (Doyle and Carlson 2000; Barabasi and Albert 1999;\nWatts and Strogatz 1998; Strogatz 2001) have studied the properties of such graphs in order to\ndetermine their behavior if certain nodes are removed, or if control of the network's routes is\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\ndecentralized. A general network is vulnerable to random failures while a hub and spokes\nnetwork is not, since hubs can easily carry traffic routed to them around broken nodes. But a\ndeliberate attack on one or more hubs will disable this kind of network fairly quickly whereas a\ngeneral network does not present opportunities for efficient deliberate attack. The time taken by a\nmessage to go between random nodes and the vulnerability of a forest to lightning strikes are\nother examples of analyses that can be performed on such general models.\n2. ARCHITECTURE IS A WAY TO DESIGN COMPLEX SYSTEMS\nDesigners can use architecture to help create systems with desired behaviors and can structure\nthose architectures to make the task of design and manufacture easier, although these goals\nsometimes can be in conflict. Architecture as \"rules to follow when creating a system\" has already\nbeen discussed. In addition, architects speak of integral and modular architectures as differing\nstyles with their own advantages and disadvantages.\nRoughly speaking, modular architectures consist of modules, each with one or a few distinct\nfunctions, connected to each other with a few simple, well-defined interfaces. In the ideal limiting\ncase, all interactions between modules occur over these predefined interfaces, and all system\nbehavior is encompassed by module behavior and interactions across the defined interfaces. On\nthe other hand, integral architectures contain modules that perform multiple functions and interact\nover many interfaces, some defined by the architect and some emergent as a result of module\nbehavior or opportunistic interactions. In some limiting cases, there are no discernable modules.\nMost real systems are in between the limiting cases.\nModular architectures are the easiest to decompose, sometimes according to the functions\nperformed, sometimes according to how they are designed and built, sometimes according to\nhow they are used or perceived by users (Ulrich and Eppinger 2000; Baldwin and Clark 2000). In\nthe ideal limiting case, the system can be built simply by plugging the modules together. The\nliterature on drivers of modularity and decomposition is large. The notion of \"elegant\" architecture\napplies when the system architecture is very similar across multiple decomposition criteria. This is\nthe case, for example, when the system modules are identical for design, manufacturing,\nprocurement, and operational considerations. An example of an elegant architecture is the Apollo\nProgram. Here, the command module, service module, lunar excursion module, as well as the\nSaturn rocket represented modules of a larger architecture, with many interconnections within the\nmodules and few between them.\nConventional aircraft comprising separate wings and fuselages accomplish the functions of\nproviding lift, carrying fuel, and housing passengers using separate portions of the aircraft.\nTypically wings and fuselages are designed by different engineers and made in different factories.\nThe Airbus Consortium was structured to take advantage of this architecture. Wings are made in\nthe UK, fuselage barrel sections in Germany, tail sections in Spain, and final assembly and\nintegration take place in France. But there are some disadvantages in terms of coordination as\nwell as transportation of large subassemblies. For example, the International Space Station may\nhave suffered from certain mismatches between physical and organizational architectures.\nOn the other hand, blended-wing and delta-wing aircraft combine many functions in the same\nstructural regions. Such systems are integral. Their design and construction can be more difficult,\nbut their operational efficiency can be superior to that of more modular systems. They may\ncontain fewer interfaces or may require only one element to carry out several functions, whereas\nmodular architectures tend to have distinct elements assigned to each function. The extra\ninterfaces between modules add weight and occupy space that can be used to accomplish other\ngoals in an integral system. Extra manufacturing and assembly time may also be required of\nmodular systems.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nThe option to modularize is often limited by the absolute level of power used or conveyed by\nsystem elements. Portions of jet engines may have to be made integral simply in order to manage\nthe power; however, elements of microelectronic products can be modularized almost at will\nbecause their very low power transmission is incidental to the main function of processing\ninformation. As modularity is enforced, some of this power can be wasted--something that\ncannot be done in jet engines (Whitney 1996).\nAlso, for many systems, such as vehicles (cars, airplanes, spacecraft, submarines), there exist\nimportant packaging constraints that force all subsystems and modules to fit within a constrained\nvolume in physical space. Vehicles have to carry much of the energy for their own travel within\nthat constrained volume. One may argue that the existence of such constraints pushes architects\nand designers to make choices that promote volume and mass efficiency at the expense of purely\ndecoupled, uncoupled, or elegant architectures. Fixed infrastructures and various kinds of non-\nmobile industrial machines might not have to satisfy such constraints, and, as a result, their\narchitectures might be different. The independence axiom of axiomatic design promotes\ndecoupling functional and physical elements of the architecture (Suh 2001). The virtues of such\npractices stem mainly from reduced complexity of design, manufacture, and system integration.\nWhen performance, efficiency, and packaging constraints dominate, such clean, decoupled\narchitectures might not always be feasible.\nModular architectures can also be designed and built as distinct subassemblies, and some of this\nwork can be distributed among many companies in a supply chain. The coordination of such work\nis aided by careful definition and oversight of the interfaces and relationships between these\nsubassemblies, along with maintenance of standards for measurement. In many cases it is\ndesirable to make the functional boundaries the same as the physical boundaries, an additional\nconstraint on the architecture that permits subassemblies to be functionally tested prior to final\nassembly.\nCommercial products are often given modular architectures that permit them to be customized on\nthe spot in response to customer orders. Assembly sequences and supply chain dynamics are\narranged, so that most of the product can be built in common and customization can be delayed\nto an economically or logistically advantageous point (called the decoupling point or the push-pull\nboundary) (Simchi-Levi et al. 2002).\nBaldwin and Clark (2000) have studied modularity and conclude that there are three kinds.\n>\nModularity in design (each function is designed separately and placed in one\nphysical object, or several functions and their objects are combined and designed\ntogether)\n>\nModularity in production (a group of functions or physical objects is built or bought\nas a package)\n>\nModularity in use (the customer can combine several functions or physical objects\nand use them, choose them when buying, or upgrade them together)\n\nThe important thing to understand is that the three different kinds of modules may be different. As\nillustrated in Figure 5, a module that exists in production may include parts of many modules that\nexist in design, This can cause confusion, cut systems in two, and create disconnected pieces of\nrequirements that must be satisfied by different suppliers who may not have the skills. The\nexample in the figure was provided by Francois Fourcade, who was product line manager for a\nfront-end module for a French car supplier. Its customer cancelled the program, and the supplier,\nseeing no way to make a profit in view of the technical and business complexities, has not bid on\nthis kind of item since.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\n\nFigure 5: A \"Module in Production\" Consisting of Front Bumper, Bolster, Grill, and Lights\nContains portions of several systems but not all of any one. It is easy to install on the car but hard\nto design and test.\nAs shown in Figure 6, some kinds of products are easier to modularize than others. More integral\nproducts need to be designed at the highest level of the hierarchy, or their design requires a lot of\ncoordination of the \"modules\" at lower levels.\n\nMono-\ncoque\nBFI\n(unibody)\nBOF\nSF\n(spaceframe)\n\n=============================================\nINCREASING\nINTEGRALITY\nLOW TECH\nVLSI\n14 WHEEL\nTRUCK\nTRACTOR\nBODY ON\nFRAME CAR\nUNIBODY\nCAR\nFORMULA 1\nRACING CAR\nJET ENGINE\n\nFigure 6: Examples of Products with Different Degrees of Integrality\nTop: Dominant architectures of automobiles. (Illustration provided by Prof. Olivier de Weck, MIT\nESD) Bottom: As integrality increases, it is harder to divide the product into independent modules.\n(Illustration provided by Prof Jasper Steyn, University of Pretoria.)\nAccording to the theory of axiomatic design, the best design is one where each function is\nimplemented in a way that is independent of implementation of any other function (Suh 2000).\nThis permits the maximum in independence and simplicity. It is impossible to define all of these\nrelationships at once, however. Instead, one has to start with the top-level functions and define\nsome top-level technological choices or implementations. These give rise to a second layer of\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nfunctional requirements, which in turn are linked to more detailed or subordinate technical\nimplementations. This decomposition process continues in a zig-zag fashion to the lowest level in\nthe hierarchy. While there is general agreement that simpler designs with independent functions\nare desirable, there is less agreement about whether this is possible in complex systems.\nThe processes for designing complex systems can also be said to have architectures, as can the\norganizations that carry out the design. Processes can have modules and interconnections\nbetween them, and these can all evolve over time. Steward (1995); Allen, Nightingale, and\nMurman (2004); and Browning et al. (2002) discuss alternate organizational patterns and show\nthe influence of conforming or not conforming organizational structures to product and system\narchitectures.\nThere is some evidence that complex phenomena become understandable only after their\nessential modules have been identified and characterized. A corollary requirement for\nunderstanding is that these modules act the same way in all combinations and that the types of\ninteractions and interfaces can be enumerated and characterized.\n3. ARCHITECTURE IS A WAY TO DESIGN STANDARDS AND\nPROTOCOLS TO GUIDE THE EVOLUTION OF LONG-LIVED SYSTEMS\nStandards provide a way for systems to be designed by different and distant sets of designers\nusing the patterns set by the standards. An early example is standard weights and measures,\nwhich permit decomposing and outsourcing system design to a supply chain. Later examples\ninclude pipe threads, electrical quantities, communication codes and protocols, and software file\ninterchange standards. Standards often apply to interfaces, a prime focus of system architecture.\nOnce in place, these standards provide the ability to evolve systems over time, design upgrades\nto existing systems, and to innovate a class of systems under the umbrella of the standard. The\nstandard allows the system designers to skip an often difficult step in design and focus their\nefforts on the immediate challenges. Standards also permit systems to be made of a judicious\ncombination of standard components and bespoke ones.\nAn example of a long-lived standard that gave rise to a whole set of avionics architectures in\naircraft, spacecraft, and military communications systems is MIL-STD-1553.\nMIL-STDs comprise, among other things, standard procedures for doing repetitive things. Even\nthe design of products and systems can be subjected to standards, such as the German DIN\nsystem. The DIN for product development was based on Pahl and Beitz (1991).\nIn some domains, such as VLSI, standard components have been adopted as one way to reduce\nuncertainty in complex semiconductor product development. These components, either stand-\nalone chips or nano-scale circuit devices within a chip, act as the main function carriers of such\nsystems. In typical high-power mechanical systems, the standard components are more often\nsupport items like fasteners. The most important main function carriers are usually designed to\nsuit. Whitney (1996) discusses the reasons for this.\n4. ARCHITECTURE IS A WAY TO MANAGE COMPLEX SYSTEMS\nSystem architects often seek to design the systems so that they will be easily managed after they\nare built. System modules or segments may be defined by where they are or how easily they can\nbe observed or controlled rather than by what they do. What they do may be perceived quite\ndifferently by operators than by designers. Thus, elements that might be designed or\nmanufactured more efficiently as a single integrated unit might be nevertheless divided into two or\nmore distinct units in order to make operation or repair easier.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nComplex products and systems are hard to design and operate because a) they contain complex\ncomponents, and b) those components interact in complex and sometimes unpredictable ways. It\ntakes a long time for someone to learn all the interactions that are known, much less learn how to\nfind the hidden ones. Data from several lines of research indicate that individual attributes are\nsupported by six to twelve underlying and interacting items, and sometimes more (Whitney et al.\n1999). The interactions comprise long chains that can snake through assemblies, tooling,\norganizations, and supply chains. Only the most senior employees, given the chance, are likely to\nunderstand the whole chain in any given situation. Management incentives and career-path\nplanning are needed to ensure that a critical mass, perhaps 10 percent of all technical\nemployees, have a chance to develop this kind of knowledge and put it into use.\nA user or operator of a system may see it in a way that is totally different from the way its\ndesigners or builders see it. Its \"modules\" may be operating or failure modes, rather than physical\nelements. Such modes may combine elements that were not necessarily designed or built\ntogether.\nThe impact of complexity in an architecture may be felt most strongly by users or operators. If the\ninterconnections or interactions are many, hidden, or changing, the operators may be unable to\nunderstand the system and operate it properly. Users may drive the system into unstable\noperating regimes, as happened at Chernobyl, or they may do the wrong thing because they do\nnot know the state of the system, as happened at Three Mile Island. Thus, one must distinguish\nbetween interface complexity and behavioral or structural complexity. Interface complexity is a\nsubjective measure of complexity as experienced by users, operators, or assemblers of the\nsystem. This subjective perception of complexity is often expressed by the adjective\n\"complicated\" rather than the adjective \"complex.\" Structural and behavioral system complexity\nare theoretically measurable, independently of the observer, provided one can agree on the\nmetrics. It is good systems architecting practice to think about the relationship between interface\nand structural/behavioral complexity in the context of the needs of downstream stakeholders.\nIt is important to note that the designers of such systems may be unaware that they are creating\ncomplexity. The system may grow by individually understandable increments that lead to an\nincomprehensible system in due time. Careful planning can prevent this, but such planning must\nbe centralized and managed consistently over the entire life of the system. This can happen\nunder monopoly conditions as existed in the US telephone system for decades. The US electric\npower grid was not built by a central planning agency or a monopoly.\nE. TYPES OF ARCHITECTURES\nThis section expands on some of the issues raised in earlier sections. Here we deal with\nstructures or architectures for architectures and try to make some general observations.\nThe following figures propose a structure for architectures. Figure 7 displays the first-level\ndecomposition of things with architectures. Each subsequent figure expands a portion of Figure 7\nto lower levels of hierarchy. In many engineering systems, several of these types of entities will\nbe involved. Thus, not only are their individual architectures important, but so is matching, or the\nconsequences of mismatching, the architectures of the entities that interact.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nThings With Architectures\nEntities\nOther Architectures That\nInform Or Constrain The\nArchitectures Of Entities\nNatural Systems\nDesigned\nBy People\nStandards &\nProtocols\nProduct Families\nAnd Platforms\nFigure 7: First-Level Decomposition of Architectures\nIn Figure 7 we make a few main distinctions. First, entities are distinguished from architectures\nthemselves, since both can have architectures. Not every possible architecture on the right is\nlisted, but a couple of importance (standards and protocols, and product families and platforms)\nare noted because they provide constraints on the architecture of things on the left designed by\npeople that are intellectually or commercially important. Natural systems are included because\ntheir architectures are the subject of high interest (carbon cycle, for example) or because they\nmay offer exemplars for the design of things that might as a consequence have certain desirable\nproperties.\nFigure 8 pursues the branch in Figure 7 that deals with entities designed by people. On the left\nare distinguished two kinds of entities whose internal constraints make their possible\narchitectures quite different. These differences extend to the ways they are designed and how\nthey behave. On the right (with abstractness increasing to the right) are things with architectures\nthat have no necessary physical existence. The lack of physical existence frees them of many\nconstraints that inhibit architectural choice or implementation in physical things. For example,\nthinking in network terms, nothing limits the number of arcs that can emanate from a node in a\nnon-physical system, but heat, weight, or mechanical constraint are examples of influences that\nlimit this number in physical things. (Bounded human rationality, however, may provide a limit in\nnon-physical things.)\n\nDesigned by People\nPhysical\nNon-Physical\nEnergetic\nHardware\nInformation\nProcessors\nSoftware Organizations\nIntellectual\nFrameworks\nTypical\nProducts\nInfrastructures\n\nFigure 8: Several Important Things Designed by People\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nFigure 9 displays an expansion of one important node from Figure 8, namely that of\norganizations. A few important kinds are shown. Government and non-governmental\norganizations are shown mainly because they provide contexts such as regulations that constrain\narchitectures of other designed things, both physical and non-physical. Companies and\nenterprises are important in themselves because they can have many possible architectural\nforms and because those forms interact with and encourage or inhibit the design of other entities,\nsuch as products. At the lowest level in this figure there is increasing abstractness, diversity, and\nlack of structure proceeding from left to right.\n\nOrganizations\nGovernment Regulators\nGovernment Operators\nNGOs\nCompanies\nEnterprises Larger\nThan Single Govt\nAgencies Or Companies\nIndividual\nPrograms\nCoordinated\nMultiple Programs\nJoint\nVentures\nSupply\nChains\nMultiple\nDivisions\n\nFigure 9: Two Levels of Decomposition of Organizations as Examples of Non-physical\nThings with Architectures That Are Designed by People\nThe last section of Figure 7, intellectual frameworks, appears in Figure 10. Pursuit of this domain\nis as old as philosophy, but it is included here because our committee has engaged in it, and\nthose who design organizations and their knowledge have done so as well. Again, these\narchitectures can encourage or inhibit the creation of important entities listed elsewhere in the\nfigures. Also, there is again a somewhat increasing level of abstractness proceeding from left to\nright.\n\nIntellectual\nFrameworks\nKnowledge\nRepresentations\nData\nStructures\nOrganizational Forms:\nMatrix\nFunction\nProgram\nCanonical\nArchitectures\n\nFigure 10: A Decomposition of Intellectual Frameworks\nFor example, it is known that organizational forms differ widely and are variously suited or\nunsuited for managing situations in Figure 9, such as individual programs or coordinated multiple\nongoing programs (overlapped car development activities, for example).\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nF. DOMAINS WHERE ARCHITECTURE IS IMPORTANT\nArchitecture is important to both naturally occurring and overtly designed systems since\narchitecture conveys behavior.\nExamples of naturally occurring systems whose architectures have been studied are biological\nsystems (ecosystems, cells and small organisms--see Figure 11, the carbon cycle, and the\netiology of diseases) and social systems (villages, military units, workplaces). Among the models\nbuilt are networks, dynamic simulations, and control systems. Network theory and graph theory\nhave been used to measure the networks, discover connections and cliques, and determine how\ninformation, energy, and material flow between elements (Kitano 2002; Sterman 2000). Naturally\noccurring systems are of interest in their own right as well as because they may tell us something\nabout how to provide overtly designed systems with desirable properties such as robustness to\nelement failure.\n\nFigure 11: The Topologic Overlap Matrix Corresponding to E. coli Metabolism, with the\nCorresponding Hierarchical Tree That Quantifies the Relation between the Different\nModules (Ravasz et al. 2002)\nSome physical systems have emerged without design but perform complex functions and have\ndistinct architectures. These include informal social networks that spring up within defined\norganizational structures. Another well-known example is the Internet, which has no central\ncontrol or growth rules. It is relatively efficient and effective but is hard to manage when uniformity\nis needed, such as for diffusing security precautions.\nSome infrastructure systems conform to natural constraints, such as railroads and highways that\nfollow terrain, river valleys, or mountain passes. In some cases the routes are thousands of years\nold and have been repeatedly reconstructed using new technology. In some cases, new\ntechnologies allow designers to push back on some constraints (tunnels through the Alps,\nChunnel, bridge connecting Denmark and Sweden), albeit at significant cost.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nFinally, there are overtly designed physical systems, such as cars, planes, airports, factories,\nshopping malls, and supply chains. Each of these seeks to perform certain functions and must\nconform to a variety of physical and administrative constraints during construction and use,\nincluding the laws of nature, building codes, industrial standards, safety regulations, and work\nrules, to name few. Some such systems, like the DC-3 aircraft, fulfill their intended role and do so\nunchallenged throughout a long life cycle. Others, like the B-52, outlive their original function and\nrepeatedly take on new ones not conceived of when they were designed. Yet others, like the B-\n58, barely serve their original function and go out of service quickly, unable to be used for\nanything else. The deeper architectural reasons for these different outcomes are not well\nunderstood. The word \"flexible\" is used to describe such systems, but a universal formula for\ncreating flexible systems does not exist.\nIn some cases, flexibility comes at a price--namely, efficiency in some form. Flexibility may\nrequire over-design, generic components, extra interfaces, or changeover time. A less flexible\nsystem might have more focused components, fewer interfaces, and no loss due to changeover.\nThe need for flexibility shows that the process of architecting requires a model of future usage of\nthe system, including an understanding of uncertainties in the environment, competition,\nregulations, and future user needs. This is a central issue addressed by a parallel ESD committee\non uncertainty management.\nThe architectures of most overtly designed systems usually emerge from long iterations between\npotential users and the system architects and engineers. The DC-3 followed the rejected DC-1\nand DC-2 as the engineers sought to meet the specifications and the users saw what was\npossible economically and physically. The B-52 might be seen as a successful iteration following\nthe less successful B-48 and B-50. The structure of General Motors' products in the 1920s\nemerged as the company discovered how to implement the strategy of \"a car for every purse and\npurpose\" while at the same time maintaining some rationality of families and reuse of expensive\ncomponents like engines (Sloan 1996).\nSimilarly, different architectures of production systems have emerged successively over time in\nresponse to different needs. The principle of division of labor permitted specialization and\neconomy of scale. The assembly line brought the work to the worker to cut wasted motion and\nworked best when identical products were made over and over using the same route and\nsequence of work. Flexible manufacturing systems sought to combine efficient use of individual\nworkstations with flexible transport systems, permitting different routes for different products in\nthe same factory. Common car body architectures are intended to permit different kinds of cars to\nbe made on the same single route-single sequence assembly line. Each of these architectures\nmeets, in different ways, different needs for efficiency and flexibility, two of many ilities.\nAs with the aircraft cited above, each of these architectures emerged and was not successfully\ndesigned on the first try. Each has its own strengths and vulnerabilities as well as emergent\nbehaviors. Assembly lines led to boredom and, combined with hierarchical management, to\nindustrial strife, while flexible manufacturing systems presented difficult scheduling problems.\nBoth were unanticipated, and both have been mitigated by additional architectural and\nmanagerial initiatives.\nAnother reason why architectures of designed systems emerge is immaturity of technology and\nproduct alike. Utterback (1994) and others (for example, see Christensen 1997) have noted the\ncycles of industrial evolution in domains like typewriters and disk drives. When a technology is\nnew, no one knows what it is or what it can do. There is an exploratory phase when many\ninnovators and users try different things. At some point, for various reasons, a so-called dominant\ndesign emerges. This design is usually an architecture. An example is the 1920s single metal\nwing aircraft with stressed metal skin, which was adopted after twenty-plus years of exploration\nwith multiple wings, cloth wings, wings with struts and guy wires, and so on. Only now is this\narchitecture being questioned by both Airbus and Boeing. Once the dominant design emerges,\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\ninnovation switches from product architecture to process architecture, including production,\nsupply, and distribution systems.\nThus requirements themselves are apparently emergent properties of systems, making their\ndesign necessarily an exploratory process, at least when the system's technology or the desired\nfunctions have not been implemented before.\nG. EMERGING PRINCIPLES OF ARCHITECTING\nThe previous discussion highlighted the importance of architectures in many different domains\nfrom product development to large infrastructures. One may ask whether there are generalizable\ninsights to be gained across these domains. One may even go further and attempt to uncover or\nformulate \"principles of architecting.\" A principle is a statement that is almost universally true and\nis long enduring. We contrast principles of architecting with methods and tools, which might\nbecome obsolete on shorter time scales.\nProf. Ed Crawley has been collecting principles of architecting over the last five years in his\ncourse on systems architecture at MIT, and there is empirical evidence that such principles might\nexist, regardless of whether one considers, civil, computer, product or other architectures.\nPrinciples can be either descriptive (how things are) or prescriptive (how things ought to be).\nAn example of a principle of systems architecting is: Robust functionality drives essential\ncomplexity. This is a descriptive statement that introduces a third notion of complexity, aside from\nstructural/behavioral and interface complexity as described above. Essential complexity is a\ntheoretical lower bound to the complexity of a system, required to achieve a specified function or\nset of functions with desired precision, efficiency and repeatability. The existence of such a lower\nbound has not been proven. This is in sharp contrast to lower bounds in other disciplines, e.g.,\nShannon's bound in information theory.\nLet us consider a very simple example to explore the proposed essential complexity principle of\nsystems architecting. An example of simple systems of varying complexity are bottle cork\nremovers. They come in various shapes and sizes, and use a variety of working principles (spiral\nscrews, vacuum pumps, gas injectors...). They are all designed to fulfill essentially the same\nfunction. Expressed in its essential form, this function is to get the cork out of the neck of the\nbottle. Most commercial realizations operate by exerting an axial force on the cork, reacting this\nforce axially on the bottle. Those that tend to fulfill the function more robustly, e.g., requiring less\nforce, also tend to be more complex. That is, they have more system elements and interactions,\nand may require more steps to operate. Good system designers attempt to design for simplicity,\nbut usually some amount of gratuitous complexity is introduced. This unnecessary amount of\ncomplexity is the difference between the (unknown) essential complexity and the actual\ncomplexity of the final product or system. Good architectures, according to this principle, have\nminimal gratuitous complexity.\nFurther principles of architecture might emerge over time, but they can only be viewed as\nheuristic guidance until they are proven by rigorous mathematical proofs and physical evidence in\nactual systems. There is debate whether such rigor is achievable or necessary in practice.\nTable 2 categorizes some of the activities involved in architecting a complex engineering system.\nThese are partitioned into two phases and two types of considerations. While these activities do\nnot rise to the level of principles, it is felt that these steps are involved in the creation of many--if\nnot all--architected systems.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\n\nTechnical Matters\nNon-Technical Matters\n\"Direct\" design aimed at\nachieving the main\nfunctions--these are the\nfunctions required\nimmediately upon initial\nfielding of the system\nDetermine structure that\nachieves properties and\nbehavior\nManage complexity \"in the\nbox\" using clustering,\ninterface clarity, and other\nprinciples of architecting\nBe mindful of uncertainty\nPrepare for verification at\nmultiple levels\nConsider multiple\nstakeholders\nManage complexity at the\nhuman interfaces\nMatch system architecture to\nthe architecture of the\ncontext and stakeholder\norganizations\nPrepare for validation at\nmultiple levels\nPlanning for the life cycle\n(manufacturing, operations,\nupgrade, retirement) plus\nachieving the ilities\n(reliability, flexibility,\noperability, etc.)\nBe mindful of emergence,\nincluding technological\nevolution and disruptions\nPrepare for upgrades,\ncustomization, repair\nSee to reliability, durability,\nscalability\nConsider multiple\nstakeholders\nBe mindful of emergence,\nincluding human agency\nBe mindful of changing\nmissions and circumstances\nTable 2: Considerations Applicable to Architecting Complex Engineering Systems\nThe term \"be mindful\" is an acknowledgement that systematic procedures do not exist for\nobtaining many desirable features of a complex system.\nDirect design encompasses traditional engineering that is aimed at achieving the system's main\nrecognized functions. Life-cycle planning addresses the ilities as well as activities normally\nassociated with the system's life. Technical matters begin with the act of architecting itself\n(structure > properties > behavior) but extend to other requirements. Non-technical matters\ninclude non-physical architectures and the activities of people as users, passive participants, or\nobservers of the system.\nH. CRITICAL PROPERTIES OF SYSTEMS AFFECTED BY\nARCHITECTURE\n1. DELIVERY OF BASIC FUNCTION\nArchitecture as \"arrangement of entities and relationships between them\" or as \"relationship\nbetween form and function\" is the designer's solution to the problem of finding a physical\nembodiment that will deliver the required functions. Example decisions include that cited above\nbetween the basically radial style of piston and high-bypass jet engines on the one hand and the\nbasically axial style of low-bypass jet engines. Each of these delivers thrust but in very different\nfunctional ways.\nTraditionally, design to achieve basic function focuses on performance, time to market, cost, and\nrisk. Maier and Rechtin (2000, figure 5.2) show these four quantities as being in tension with each\nother. One of the main jobs of architects and product designers is to understand and resolve this\ntension. Traditional engineering education tends to focus on performance. Adding time and cost\ncreates a complex interaction in which elements of each must be traded off in order to arrive at a\ndesign. Risk is the most difficult dimension to understand and address. A wide array of methods,\nintellectual frameworks, and computerized tools has emerged to support this process. These\ninclude traditional engineering design (Pahl and Beitz 1991), axiomatic design (Suh 2001),\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nproduct design and development (Ulrich and Eppinger 2000), constraint management (Goldratt\n1991), computer-aided design and manufacturing software, the design/dependency structure\nmatrix (Steward 1995), time to market and time to profit metrics, among others. It can be debated\nwhether risk should be treated as a separate entity, or whether it acts as a qualifier on\nperformance, schedule and cost (Browning et al. 2002).\n2. OTHER PROPERTIES\nFrom a traditional point of view, it is comparatively easy to say what the functions of a product,\nsystem, or enterprise should be. An airplane must fly, a manufacturing company must design and\ndeliver products, and so on. But it has to do these things well, and here is where properties called\nilities come into play. Examples include robustness, adaptability, flexibility, safety, and scalability,\nto name a few. The architecture has a strong influence on how the ilities are achieved and how\ntheir achievement interacts among themselves and with the basic function.\nDoyle says that comparatively little effort is devoted to assuring that an entity like an airplane will\nprovide the required functions of lift and forward speed. The rest is overwhelmingly large and\ncomprises providing safety, redundancy, amenities, automated functions, and so on. But this\nstatement must be tempered by the thought that lift and forward speed may not be a complete\nstatement of the required function. Only by considering the aircraft in the narrowest sense can\nthis list be considered complete. At a minimum it must deliver lift and speed with sufficient safety\nand fuel efficiency. It also must be able to take off and land on required or available runways and\nmust be able to make an emergency landing right after takeoff. These additional basic functions\nadd severe constraints to speed and lift specifications. Things are further complicated when\nvarious types of internal and external payloads and delivery processes are considered.\nBoeing manufacturing employees acknowledge that the design engineers mainly focus on\nassuring that the aircraft will not physically break during takeoff, flight, and landing. The rest,\nincluding manufacturability, is addressed by others who petition the design engineers to pay\nattention to these other needs. Similarly at Ford, the body engineers focus mainly on structural\nintegrity, stiffness, crash-resistance, and squeaks and rattles. The manufacturing engineers\nperform a function similar to those of their Boeing counterparts.\nMore generally, the requirements must be stated in the context of the enterprise. This means that\nthe product has to satisfy a combination of interlocking technical and business requirements. The\naircraft must be able to take off fully loaded with revenue cargo and over its lifetime must return a\nprofit to its owner who will pay ten times more for fuel and maintenance that its original purchase\ncost. Not only must the gravity-lift equation balance but the cost-revenue equation must do so as\nwell. At Boeing this is called \"making the business case close,\" and failure to close the business\ncase is often the reason why aircraft programs are cancelled or aircraft do not succeed in the\nmarket.\nThe architecture of the product has a large influence on how these other properties are achieved,\nas well as how well and how efficiently. An example was given in Figure 3.\nThe next few subsections discuss specific ilities.\na) Robustness\nRobustness is defined as \"the demonstrated or promised ability of a system to perform under a\nvariety of circumstances, including the ability to deliver desired functions in spite of changes in\nthe environment, uses, or internal variations that are either built-in or emergent\" (ESD 2002).\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nRobustness may be implemented in several ways, including by paying attention to the reliability of\nsystem elements as well as reliability of interconnections. In addition, robustness may be\nenhanced by the structure of the system, such as by providing alternate paths or backup\nsystems. An intellectual framework for designing robust systems revolves around the P-diagram,\nwhich is a discipline for identifying \"noises\" from within or outside the system (see Figure 12).\nEngineers are asked to create a P-diagram for their component, subsystem, or system.\nIdentification of the noise factors is the most difficult part of this process, since this identification\nrequires engineers to think beyond the boundaries of their part. A lot of knowledge about\ninteractions from other systems, including customers, is needed. At Boeing, the pilot is\nconsidered a possible noise source. As more comprehensive subsystems and systems are\nconsidered, developing their P-diagrams involves more people. There is some question as to\nwhether the noise factors for an entire system can be identified.\n\nFigure 12: The P-Diagram.\n(Source: http://thequalityportal.com)\nThe P-diagram approach, however, does not address the role of architectural form in providing\nrobustness. The network theorists (Barabasi, Doyle, and others) note that different network\narchitectures are differently able to resist attack. Doyle, however, says that additional effort at\nproviding robustness only adds layers of system elements and connections, providing only\nadditional complexity and points of potential failure (Doyle and Carlson 2000). Perrow (1999)\nmakes the same observation. Thus there is no consensus on whether architectural form by itself\ncan impart robustness to a system. Nevertheless, it is known that certain forms are easier to\nunderstand, partition to avoid cascading failures, diagnose, and maintain. These generally have a\nmore modular structure and were designed with careful attention to keeping the modules\nseparate.\nb) Adaptability\nAdaptability is defined as \"the ability of a system to change internally to fit changes in its\nenvironment,\" usually by self-modification to the system itself (ESD 2002). Such systems contain\nsensors, control algorithms, and human operators. The technical portions must be designed to be\nstable while the human elements must be trained to distinguish desired signals from distracting\nnoise. The technical architecture of such control systems is well developed but holds some risks\nwhen decisions must be made quickly and the behavior of the system is not well understood, or\nwhen the human interface is not well designed (Perrow 1999).\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nc) Flexibility\nFlexibility is defined as \"the property of a system that is capable of undergoing classes of\nchanges with relative ease. Such changes can occur in several ways: a system of roads is\nflexible if it permits a driver to go from one point to another using several paths. Flexibility may\nindicate the ease of 'programming' the system to achieve a variety of functions. Flexibility may\nindicate the ease of changing the system's requirements with a relatively small increase in\ncomplexity and rework\" (ESD 2002). Flexible systems include product families that can be\nconfigured to meet changing markets. An example is a family of aircraft where the fuselage can\nbe lengthened merely by adding short sections fore and aft of the center section. At an enterprise\nlevel, a flexible system can deliver products or services quickly and accurately in response to\nreal-time demands. An example is Dell's manufacturing, supply chain, and fulfillment system. In\nboth example cases, the flexibility arises from the architecture of the system itself, which exploits\ndefined interfaces to permit substitutions at predefined points in the product or process.\nFlexibility can be thought of as a means of managing risk, specifically risk that the system as\ndesigned will not meet its requirements some time in the future. The flexibility committee's paper\n(de Neufville et al. 2004) notes that financial options theory can be applied to determine the value\nof providing (at some cost) the flexibility to respond to future contingencies. These options permit\nsome decision about the system to be delayed until more information is available. Financial\noptions have been used this way for decades. They have the advantage that future value can be\ncalculated. In addition, there is some equivalence of value between different options since they all\ncan be reduced to money and can be readily substituted for one another. Whether this can be\naccomplished in physical systems is the subject of future research.\nd) Safety\nSafety is defined as \"the property of being free from accidents or unacceptable losses.\"\nAssociated with this definition are several others: An accident is \"an undesired and unplanned\n(but not necessarily unanticipated) event that results in a specified level of loss\" (human,\neconomic, etc). A hazard is \"a state or sets of conditions that, together with worst-case external\nconditions, can lead to an accident.\" Risk is \"the level of hazard combined with the likelihood of\nthe hazard leading to an accident, and the duration of exposure to the hazard\" (Leveson 1995).\nEndowing a system with safety involves determining, among other things, how safe is safe\nenough. This question is beyond the scope of architecture alone; however, architecture can\nimprove or reduce safety in various ways. Systems whose architecture is transparent are easier\nto diagnose, and hazards may be easier to detect and prevent. No method exists, however, to\ncompare the safety of two architectures.\ne) Scalability\nScalability is defined as \"the ability of a system to maintain its performance and function, and\nretain all its desired properties when its scale is increased greatly, without causing a\ncorresponding increase in the system's complexity\" (ESD 2002). Ways of increasing the scale of\na system include increasing the number of elements, increasing the number of possible paths or\nconnections between elements, increasing the \"traffic\" capacity of links or connections, or all of\nthe above. The degree to which the complexity of the system increases depends greatly on how\nthe structure is designed and how or if it changes as the scale is increased. Some architectures\npermit additional scale by adding identical subsystems. Short and long truss-style bridges and\nshort and tall buildings can be made this way. Others permit additional scale by adding differently\nstructured layers. An example is the US national wired telephone system.\nMost systems incur increased complexity as their scale increases. Taller buildings require\nsegmented elevator systems since a single elevator cannot be built taller than a limit that is now\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nless than building height. Coordination of these elevators to permit people to travel the full height\nof the building can be complex. Some plans for mega-buildings envision creating separate\nstacked modules for full-time living that do not require residents to move beyond their module.\nThis reduces the complexity problem to that of the identical layers method.\nReally large systems pose particular challenges. Each has its own architecture and scaling\nproperties. Some are built in an evolutionary way rather than being manufactured repetitively\naccording to a standard pattern that was established before construction begins. Some, like the\nInternational Space Station, cannot be assembled and tested before being put into use. They are\nso complex, and their operating environment is so hard or costly to duplicate, that they cannot be\ntested end to end prior to deployment. In some cases, very large infrastructures can be\nimplemented in pieces and each piece can be tested before it is added to the existing system.\nThis approach is sometimes referred to as \"staged deployment.\" Staged deployment for large\nconstellations of communications satellites has been proposed as a way to reduce economic\nrisks for systems such as Iridium and Globalstar, which were designed \"all at once\", rather than in\na staged manner (de Weck et al. 2003). But success in these tests does not guarantee that\nunexpected behaviors will not emerge after the larger system begins to operate. This and other\nissues of scale remain unresolved.\nI. OPEN RESEARCH QUESTIONS\nIn this section, we list a number of research questions that may have definite answers or may\nbecome recurrent themes without final resolution. The list is not intended to be exhaustive, but\nrather to be illustrative and provocative. Our hope is that the field of engineering systems\narchitecture will create an effective way of thinking about complex systems, generate a shared\nvocabulary, develop and validate research methodologies, and improve the practice of generating\nand evaluating system architectures.\nThe list of questions follows:\nSystems that are complex enough to be of interest to the Engineering Systems Division exhibit\nemergent behavior. Some emergent behavior may be beneficial because it gives the system\ndesired qualities that the parts of the system do not have by themselves. But some emergent\nbehavior is detrimental because it represents sneak paths or other unpredicted behavior that is\nnot wanted. How can we get the good without the bad, or at least predict and mitigate the bad?\nPerhaps this should be called \"emergence management.\"\nIs emergence management possible, or do the methods we use now (testing, redundancy,\nsensors, etc.) only add complexity and introduce emergence elsewhere in the system?\nIs complexity inevitable in systems that are commercially meaningful or that do enough good\nthings well to make them worth building? Are there less complex alternatives that could do the job\njust as well, such as locally generated electricity as an alternative to central generators and\ncomplex distribution grids?\nIn principle, all the behaviors of a system could be predicted if we pursued reductionism to its\nlimit, modeling and testing every element and every combination of elements, but this limit is\nunachievable in practical cases. Emergence is the opposite of reductionism.\nCognitive limits prevent us from thinking of everything. They also prevent us from making perfect\nmodels of real systems. Incomplete or inaccurate models are another source of emergence.\nAre there architectures that can minimize the effects of cognitive limits? Hierarchies are one such\narchitecture, but can they be used in all systems and do they apply to all types and\nconsequences of cognitive limits?\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nWill human agency inevitably create emergent behavior? Agency can arise due to cognitive limits\nor willful intent. Perrow (1999) argues that some systems will always be too complex to design or\noperate properly and thus should not be built. Weick et al. (1999) argue that people's ability to\nimprovise and use their accumulated experience is the only known barrier to emergence, but this\nargument applies only in emergencies in the examples they cite.\nSystems where reductionism appears to work are often those that exhibit a great deal of\nmodularity. An example is low-power micro-electronics. In these cases the individual modules can\nbe modeled and their models validated separately. Additionally, their behavior when connected\ninto systems is reasonably predictable. This is accomplished by several means, such as\nenforcing standardization and forcing interfaces to be one-way, via huge impedance mismatches.\nWhat are the limits of extending this approach to all systems?\nHow many kinds of things can usefully be said to have architectures? Examples include systems,\nproducts, organizations, and processes.\nWhat are ilities, and can they be classified? A suggested classification comprises two types:\nthose used during system design to anticipate future uncertainties, such as manufacturing,\nnormal use, abnormal use, technological or market evolution, and so on; and qualifiers on\nperformance or fitness, such as cost, robustness, safety, or reliability.\nCan systems be classified? Classes could include primary function delivered, logical or physical\nstructural type, operating power level, type of enterprise (public/private), type of use pattern\n(product, infrastructure), or degree of evolution over time. What characteristics do all classes\nshare, and what characteristics distinguish them?\nHow can the relative or absolute complexity of a system be measured, or can systems even be\nordered according to complexity? Can other system characteristics, such as reliability, be\nnormalized with respect to complexity in order to create a scale of expectations against which the\nreliability per unit of complexity (for example) can be judged?\nHow do we evaluate the ilities content of a system?\nMore generally, how can the \"goodness\" of a system be evaluated?\nWhat is the difference between designing a new system and designing one to fit legacy systems,\npredefined and populated product families, existing standards of product, interface, or process?\nHow much in terms of functions or ilities is lost when these constraints are applied, what is\ngained, and is the gain worth it?\nTo what degree do these constraints inhibit the inclusion of new technologies, or do new\ntechnologies simply invalidate old architectures?\nHow do we represent the architecture of a system? How many things need to be in the\nrepresentation? For example, a network can represent the simple binary relationships between\nsystem elements, but it may require another network to describe some of the strengths or\nhistories of these relationships. Some relationships might be static (i.e., they are permanently\npresent); others might only exist temporarily or during certain operating or failure modes. What\naspects of an architecture cannot be represented by a network or networks, and how should they\nbe represented? Can there be a unified representation of system architectures that captures\nsimultaneously both structure (objects) and behavior (processes), or must we inevitably resort to\nmultiple, related views?\nIf we say that systems have properties, structure, and behaviors (alternately structure, functions,\nand organization), what methods exist for describing, modeling, testing, and synthesizing these?\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nAre certain kinds of structures or architectures known to be good and would this apply across the\nvariety of domains discussed here? It is often recommended that functional and physical\nstructures should correspond, having similar clusters. This is obviously a cognitive aid, but is it\nalways a good thing in other dimensions of function or ilities? For example, combat systems have\ndistributed physical structure in order to be robust against point damage. Another example is\nhighly clustered networks: they provide shorter paths and are much more robust to random node\ndamage but much less robust to deliberate attack on the hubs than are random networks.\nAre natural systems good exemplars for designed engineered systems? Some natural systems\nhave ilities that we would like engineered systems to have, such as flexibility and robustness,\neven when individual modules are not very reliable.\nDo different observers or participants in an architecture require different representations?\nExamples include the designer, the user, the manager of a family of items in an architecture, a\nsafety or risk analyst.\nIs there a process for generating an architecture that will have certain desired properties while\navoiding certain undesired ones? Typically, architectures themselves emerge from an\nevolutionary process that weeds out unfit ones according to market pressures on functions or\npressures on the ilities. There are heuristics but no theory or guaranteed algorithms.\nHow determinative is architecture (compared to detailed design, module behavior, and behavior\nof users or operators) in deciding how a system will behave, how it comes out on the scales of\nilities, etc.? For example, Doyle and Carlson (2000), Barabasi et al. (2002), Strogatz (2001), and\nWatts (1999) argue in various ways that highly clustered networks are better in some respects\nthan random ones even if the nodes are the same. But up to now these analyses have assumed\nidentical nodes and arcs. What if these are allowed to be different? Is structure still dominant?\nJ. CONCLUSIONS\n>\nThe architecture is the form of the system and is the dominant factor in its\nbehavior. In some cases the function can be deduced by inspecting the form while\nin others (for example, software), the form conveys nothing about the function.\n>\nSystems have behaviors that no subsets of their elements have. These behaviors\nare products of the interactions between the elements. They may be anticipated\nand designed in, or they may be unanticipated, in which case they are called\nemergent. Both anticipated and emergent properties may be desirable or\nundesirable.\n>\nEmergent properties, desirable and undesirable, exist because we do not\nunderstand the system or its interactions with its context completely.\n>\nTo the extent that emergent behavior is caused by unpredictable factors such as\nhuman agency, future changes to the system, or the inability to model every\npossible system state, it may never be possible to prove that a given architecture\nhas or does not have a particular behavior.\n>\nThe aim of system design, and of architectural design within system design, is to\nobtain the desired behaviors (functions plus ilities) while suppressing undesirable\nbehaviors. The system's architecture is chosen to enhance achievement of these\ngoals. A key issue for future research is to learn how to create systems with the\ndesired behaviors and to predict and suppress the undesired ones.\n>\nSystems have multiple architectures and hierarchies of architectures. This can\noccur because of the choice in defining the system's boundary. It also occurs\nbecause the system has both a physical architecture and numerous virtual\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\narchitectures that seek to capture important aspects or views of its behavior. Many\nof these virtual architectures correspond to mental models of different behaviors.\n>\nMultiple representations are needed to describe systems and their architectures.\nMany aspects of system architectures can be described by networks of one kind or\nanother, but not all architectures can be described this way (houses,\nmicroprocessors). Network analysis is the most abstract architectural modeling\nmethod and holds promise for elucidating general properties of architectures;\nhowever, typical networks represent only connectivity. Hence, more specific\nmodels than those currently in use will likely be needed.\n>\nThere are some basic architectural elements from which more complex\narchitectures can be built. Some kinds of desirable system behaviors can be\nobtained by using these primitives singly or in combination. Thus it is desirable to\nunderstand these elements more completely in order to understand how to use\nthem in architectural design. (This is a version of the statement that structure\nbegets properties which beget behavior.) Standards and standard components and\nprocedures can be thought of as primitives.\nK. SELECTED BIBLIOGRAPHY\nAlbert, Reka, and Albert-Laszlo Barabasi. 2002. Statistical Mechanics of Complex\nNetworks. Rev Mod Phys 24 (January):47-97.\nAllen, Thomas, Deborah Nightingale, and Earll Murman. 2004. Engineering Systems: An\nEnterprise Perspective. Paper presented at the MIT Engineering Systems Symposium, 29-31\nMarch, at Cambridge, Mass. http://esd.mit.edu/symposium/monograph.\nEngineering Systems Division (ESD). 2002. ESD Symposium Committee Overview. In\nProceedings of MIT ESD Internal Symposium. Cambridge, Mass.: ESD. http://esd.mit.edu/WPS.\nBaldwin, Carliss Y., and Kim B. Clark. 2000. Design Rules: Volume 1. The Power of\nModularity. Cambridge, Mass.: MIT Press.\nBarabasi, A. L., and R. Albert. 1999. Emergence of Scaling in Random Networks. Science\n286(5439):509-512.\nBarabasi, A. L., H. Jeong, et al. 2002. Evolution of the Social Network of Scientific\nCollaborations. Physica A 311(3-4):590-614.\nBrowning, T. R., J. J. Deyst, S. D. Eppinger, and D. E. Whitney. 2002. Adding Value in\nProduct Development by Creating Information and Reducing Risk. IEEE Trans on Engineering\nManagement 49(4):443-458.\nCarlson, J. M., and J. Doyle. 2002. Complexity and Robustness. Proceedings of the\nNational Academy of Sciences of the United States of America 99:2538-2545.\nCarlson, J. M., and J. Doyle. 1999. Highly Optimized Tolerance: A Mechanism for Power\nLaws in Designed Systems. Phys Rev E 60(2):1412-1427.\nChristensen, Clayton M. 1997. The Innovator's Dilemma. Boston: Harvard Business School\nPress.\nde Weck, O., R. de Neufville, and M. Chaize M. 2003. Enhancing the Economics of\nCommunication Satellites via Staged Deployment and Orbital Reconfiguration. Paper AIAA-2003-\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\n6317, presented at the AIAA Space 2003 Conference and Exhibition, 23-25 September, at Long\nBeach, California.\nDe Neufville, Richard, et al. 2004. Uncertainty Management for Engineering Systems\nPlanning and Research. Paper presented at the MIT Engineering Systems Symposium, 29-31\nMarch, at Cambridge, Mass. http://esd.mit.edu/symposium/monograph.\nDoyle, J., and J. M. Carlson. 2000. Power Laws, Highly Optimized Tolerance, and\nGeneralized Source Coding. Physical Review Letters 84(24):5656-5659.\nFine, C. H. 1998. Clockspeed. Reading, Mass.: Perseus Books.\nGoldratt, E. M. 1992. The Goal: A Process of Ongoing Improvement, 2nd ed. Great\nBarrington, Mass.: North River Press Publishing Corporation.\nHenderson, R. M., and K. B. Clark. 1990. Architectural Innovation: The Reconfiguration of\nExisting Product Technologies and the Failure of Established Firms. Administrative Science\nQuarterly 35(1):9-30.\nKitano, H. 2002. Systems Biology: A Brief Overview. Science 295(1 March):1662-1664.\nLeveson, N. 1995. Safeware. Boston: Addison-Wesley.\nLevis, A. 1999. System Architectures. Pages 427-454 in Handbook of Systems Engineering\nand Management, edited by A. P. Sage and W. B. Rouse. New York: John Wiley & Sons.\nMaier, M. W., and E. Rechtin. 2000. The Art of Systems Architecting, 2nd ed. Boca Raton,\nFla.: CRC Press.\nPahl, G., and W. Beitz. 1991. Engineering Design. London: Springer.\nPerrow, C. 1999. Normal Accidents, revised ed. Princeton, N.J.: Princeton University Press.\nRavasz. E., A. L. Somera, D. Mongru, Z. N. Oltvai, and A.-L. Barabasi. 2002. Hierarchical\nOrganization of Modularity in Metabolic Networks. Science 297(30 August):1551-1555.\nRechtin, E. 1990 Systems Architecting Prentice Hall PTR\nReynolds, D., J. M. Carlson, et al. 2002. Design Degrees of Freedom and Mechanisms for\nComplexity. Physical Review E 66(1).\nSimchi-Levi, D. P. Kaminsky, and E. Simchi-Levi. 2002. Designing and Managing the\nSupply Chain: Concepts, Strategies and Case Studies, 2nd ed. New York: McGraw-Hill.\nSloan, Alfred. 1996. My Years with General Motors. New York: Doubleday.\nSmith, G., and D. A. Mindell. 2000. The Emergence of the Turbofan Engine. Pages 107-\n156 in Atmospheric Flight in the Twentieth Century, edited by Peter Galison and Alex Roland.\nVol. 3. ARCHIMEDES New Studies in the History and Philosophy of Science and Technology.\nDordrecht: Kluwer Academic Publishers.\nSterman, J. 2000. Business Dynamics: Systems Thinking and Modeling for a Complex\nWorld. Boston: Irwin/McGraw-Hill.\n\nE N G I N E E R I N G S Y S T E M S M O N O G R A P H\nSteward, Donald. 1995. Systems Analysis and Management: Structure, Strategy, and\nDesign. Fair Oaks, Calif.: Problematics.\nStrogatz, S. 2001. Exploring Complex Networks. Nature 410(8 March):268-276.\nSuh, N. P. 2001. Axiomatic Design. New York: Oxford University Press.\nCutcher-Gershenfeld, J., F. Field, R. Hall, R. Kirchain, D. Marks, K. Oye, and J. Sussman.\n2004. Sustainability as an Organizing Principle for Large-Scale Systems. Paper presented at the\nMIT Engineering Systems Symposium, 29-31 March, at Cambridge, Mass.\nhttp://esd.mit.edu/symposium/monograph.\nUlrich, Karl T., and Steven D. Eppinger. 2000. Product Design and Development, 2nd ed.\nNew York: Irwin/McGraw-Hill.\nUtterback, J. M. 1994. Mastering the Dynamics of Innovation: How Companies Can Seize\nOpportunities in the Face of Technological Change. Boston: Harvard Business School Press.\nvon Meier, Alexandra. 2003. California Energy Commission: Power Delivery Systems\nOverview, June 4. http://ciee.ucop.edu/dretd/03_06_04_Power.pdf\nWatts, D. J. 1999. Small Worlds: The Dynamics of Networks between Order and\nRandomness. Princeton, N.J.: Princeton University Press.\nWatts, D. J., and S. Strogatz. 1998. Collective Dynamics of \"Small-World\" Networks. Nature\n393(4 June):440-442.\nWeick, K., K. Sutcliffe, and D. Obstfeld. 1999. Organizing for High Reliability. Res in Org\nBeh 21:81-123.\nWhitney, D. E. 1996. Why Mechanical Design Will Never be Like VLSI Design. Research in\nEngineering Design 8:125-138.\nWhitney, D., Q. Dong, J. Judson, and G. Mascoli. 1999. Introducing Knowledge-based\nEngineering into a Tightly Coupled Product Development Environment. Paper presented at the\nASME Design Engineering Technical Conferences, 12-16 September, in Las Vegas, Nev."
    },
    {
      "category": "Resource",
      "title": "esd_terms.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/be22816050be790cdbe36b4e97b99549_esd_terms.pdf",
      "content": "ESD Terms and Definitions (Version 14)\n\nThe ESD Symposium Committee\nMarch 29, 2002\nUpdated January 31, 2006 for\nAdvanced System Architecture ESD.40\n\nI.\nComplexity in Engineering Systems\n\nArguably the key concept in Engineering Systems is complexity. Thus we discuss it at\ngreater length than the other terms that will follow. There are many definitions of\ncomplex systems, but we shall concentrate on just two. A system is behaviorally complex\nif its behavior is difficult to predict, analyze, describe, or manage. In contrast a system is\nstructurally complex if the number of parts is large and the interconnections between its\nparts are intricate or hard to describe briefly. Systems that are structurally complex are\nusually behaviorally complex. Systems that have complex behavior need not have\ncomplex structure, since we know of relatively simple mechanical systems whose\nbehavior are chaotic, and hence complex. On the other hand, most behaviorally complex\nsystems are structurally complex as well.\n\nComplex engineering systems are not simply technical in nature, but rely on people and\ntheir organizations for the design, manufacturing and operation of the system, and are\ninfluenced by and influence the societal and physical context as well.\n\nII.\nBasic Terms related to Engineering Systems\n\nEngineering - bringing to reality useful artifacts and algorithms that heretofore did not\nexist; in English, especially in England, the term is often associated with maintenance\nand operation, especially of engines, but the French root (ingenieur) is related to\ningenious (ingenieux).\n\nSystem - A set of interacting components having well-defined (although possibly poorly\nunderstood) behavior or purpose. Alternately: A system is an instance of a set of\nelements having relationships with one another sufficiently cohesive to distinguish the\nsystem from its environment thereby giving the system an identity. It can then also be\nsaid to have a purpose. The concept is subjective in that what is a system to one person\nmay not appear to be a system to another.\n\nSystem Architecture -\n\nPractical definition:\n\nAn architecture is the conceptualization, description, and design of a system, its\ncomponents, their interfaces and relationships with internal and external entities, as they\nevolve over time.\n\nFundamental definitions:\n\n1. The architecture of a complex system is a description of the structure or\nregularity of the interactions of the elements of that system (inherently the non-random\nand longer lived aspects of the system relationships).\n2. The architecture of a complex system describes the functional character of the\nelements and the structure of the relationships among the elements.\n\nIntermediate definition:\n\nAn architecture declares the modules and defines their functions\n\nIt also declares and defines the interfaces, including which modules they relate\nand what relations are supported\n\nFinally it declares or embraces standards that define common rules of design,\nstructure, interfaces, or behavior not otherwise declared, including performance\nevaluation\n\nEngineering System - a system designed or evolved by humans having some purpose;\nlarge scale and complex engineering systems, which are of most interest to the\nEngineering Systems Division, will have a management or social dimension as well as a\ntechnical one.\n\nSystem Environment - a set of conditions external to and affecting a system;\nenvironments include both natural and man-made conditions\n\nNatural environment - natural surroundings and context (e.g., air, water); the natural\nenvironment can sometimes be considered the core of a system, with engineering systems\nproviding interfaces to it\n\nComplex system - a system with components and interconnections, interactions, or\ninterdependencies that are difficult to describe, understand, predict, manage, design, or\nchange. (This implies non-random and non-simple structure.)\n\nThe concept of complexity has several meanings: dynamic (in the sense of\ncomplex behavior), and static or structural (in the sense that a complex system is\ncomposed of many components interconnected in intricate ways). In addition,\nwhile the complexity of a system can be a quantifiable and even an absolute\nquantity, what makes a system appear complicated to people is subjective\n(simplicity is in the eye of the beholder); how complicated the system appears\ndepends on the nature of the interface of the system that is presented to its users.\n\nInterdependence - the relationship between entities that cannot exist or operate\nwithout each other; independent entities exist and operate without influence from\neach other; interdependencies may be intended or unintended\n\nInteraction - the property of entities that exchange something material or\n\nimmaterial that constitutes or contributes to their interdependence\n\nInterconnection - the relationship between entities that are physically or abstractly\nconnected and the connection provides the pathway for the interaction; software\nconnections are often abstract\n\nThese three terms are clearly interrelated (pun intended). We distinguish at least\nthree types of interdependence: one is the interdependence that may occur among\ncomponents or subsystems in a given design of a system, a second is the\ninterdependence created when global constraints (such as weight, volume, cost, or\n2nd Law of thermodynamics) force a redesign, and a third is one that occurs as a\nresult of subdivision of tasks or the management of the flow of materiel or\ninformation.\n\nComponents - parts of a system relative to that system; a component can be a system too\nif it contains other components\n\nLarge scale systems - systems that are large in scale and/or scope; such systems have a\nlarge number of components; as a result large scale physical systems will be distributed\nover a region that is large relative to its smallest components;\n\nDesigning -an open-ended human process whereby plans for useful artifacts and\nprocesses are created\n\nFunction(s) -broad: desired behavior(s) of a system or a component; these behaviors are\npresumably desired because they contribute to a stated purpose; more specifically,\nfundamental behaviors (not including the ilities - see below) of an engineering system\nthat fulfill its stated purpose. In Computer Science, the function is simply what the system\ndoes. How well it is done is generally called performance. Characteristics such as the\n\"ilities\" are other properties that a system has. This usage is followed in ESD. 342 as well.\n\nProperties-term used to describe all characteristics of a system that determine its usefulness\nto a variety of stakeholders and thus includes all functions (and performance), ilities and\nfactors such as size, weight, cost\n\nRequirements - the properties that an engineered system is supposed to achieve, deliver,\nor exhibit;\nEffectiveness -ratio of performance of function(s) achieved to the totality of\nfunctions and performance desired\n\nEfficiency - ratio of function(s) achieved to resources used\n\nLife cycle - The sequence of phases that an engineering system undergoes, which can be\ndivided into three major parts: Conceiving, developing, and deploying. Conceiving\nincludes identification of need/opportunity, initiation of requirement elicitation and\ngathering. Developing includes analysis, design, implementation manufacture or\nproduction, and testing. Deploying includes assimilation, use, maintenance, modification\nor upgrade, repair, retirement, dismantling, recycling, disposal, erasure or remediation,\nand possible replacement; replacement is a critical element in creating a cycle\n\nSystems changes - multiple dimensions by which systems change, including the rate of\nchange (e.g., evolutionary, moderate, revolutionary), the structural direction of change\n(e.g., top-down, bottom-up, networked), or the breadth of change (e.g., pilot initiatives,\nwall-to-wall)\n\nIII.\nIlities and related system issues\n\nIlities- desired properties of systems, such as flexibility or maintainability, often ending\nin 'ility.' These properties of systems are not necessarily part of the fundamental set of\nrequirements on the system's functions or performance\n\nFlexibility - the ability of a system to undergoing changes with relative ease in operation,\nduring design, or during redesign. The basic metric is the degree of change per unit of\neffort (or cost including engineering, investment etc.)\n\nAgility - ability of a system to be both flexible and undergo change rapidly\n\nResilience - the property of a system that can quickly return to its original function and\nperformance following a disturbance or shock; a resilient system may use its flexibility to\nachieve robustness\n\nRobustness - related to resilience, demonstrated or promised ability to perform under a\nvariety of circumstances; ability to deliver desired functions in spite of changes in the\nenvironment, uses, or internal variations that are either built-in or emergent (see below)\n\nAdaptability - - the property of a system that can change its structure, processes and\nbehavior to meet changing requirements in its environment; in biology when adaptation is\nsuccessful the organism will increase the likelihood of its reproduction; the changes\nunder adaptability may be more complex than is available from flexibility\n\nScalability- the ability of a system to maintain its performance and function, and retain all\nits desired properties when its scale is increased greatly without having a corresponding\nincrease in the system's complexity\n\nAn increase in scope (that is, an increase in the system's functional capabilities)\nusually involves an increase in scale, yet scalability does not normally imply ease\nwith increasing the scope of a system without unduly increasing its complexity.\nSuch ease is usually related to the structure of the system's architecture (see\nbelow) and its flexibility\n\nModularity The concept includes two different aspects- at times it means the degree to\nwhich a system can be decomposed into subsystems that can be designed and/or\nmanufactured independently of each other; at other times it is taken to mean the degree of\ndirect association of functions with particular elements and their interactions. In biology:\nrepeating patterns of the same or similar structure.\n\nExtensibility - the degree to which sets of components of a system can be extended to a\nhigher level of abstraction\n\nFail-safe - ability to be guided to a safe state, if the system cannot deliver the full desired\nfunction due to failure(s)\n\nSafety- the property of being free from accidents (see below) or unacceptable losses\n\nDurability - ability to deliver a specified level of function for a specified length of time\n\nSustainability - broad: maintaining economic growth and viability while meeting\nconcerns for environmental protection, quality of life, and social equity; narrow: a\nproperty of an engineering system having optimal resource preservation and\nenvironmental management over time\n\nQuality- ability to deliver requirements at a \"high\" level, as perceived by people relative\nto other alternatives that deliver the same requirements\n\nReliability - the probability that a system or component will satisfy its functional and\nperformance requirements over a given period of time and under given conditions\n(acknowledges that no system can meet its functional and performance requirements\nunder all possible conditions)\n\nRepairability -the ability to be returned to the original state of function when some\nfunction is lost\n\nMaintainability - the ability of a system to be kept in an appropriate operating condition;\nthe system should also possess the property of repairability\n\nIII Design/manufacturing concepts and approaches\n\nManufacturing - The processes by which materials are made, parts or components are\nfabricated from materials, and products are assembled from parts; software is\nimplemented rather than manufactured\n\nManufacturing Systems - The equipment, processes, people, organization and\nknowledge, as well as the interactions of these that are involved in the manufacturing of a\ngiven end product\n\nLean Manufacturing - A pull based and flexible manufacturing system that is responsive\nto customer demand, where skilled workers, just-in-time manufacturing processes, and\ncontinuous improvement are combined to produce perfect first-time-quality output\n\nSystems architecting - The process by which standards, rules, system structures and\ninterfaces are created in order to achieve the requirements of a system; trade-off studies\nmay precede the determination of system requirements\n\nSystems engineering -a process for designing systems that begins with requirements, that\nuses and/or modifies an architecture, accomplishes functional and/or physical\ndecomposition, and accounts for the achievement of the requirements by assigning them\nto entities and maintaining oversight on the design and integration of these entities;\nsystems engineering originally arose in the context of aerospace projects in the 1950's,\nbut has been applied more broadly since then.\n\nSystems architecting creates a system design at a high, abstract level, whereas\nsystems engineering is often associated with refining such a design; by blending\nthe two processes one accomplishes the assignment of functions to physical or\nabstract entities, and the definition of interactions and interfaces between the\nentities\n\nOptimization - a process or methodology for maximizing the function of a system\n\nMulti-criteria optimization - the simultaneous optimization of several criteria\n\nFunctional decomposition - the division of functions into sub-functions while retaining\nall inputs to and outputs from the level above; the decomposed elements perform all the\nfunctions of their parents in the decomposition\n\nLogical decomposition - the division of information system components into their logical\nconstituent parts\n\nPhysical decomposition -the division of physical systems into simpler subsystems and\ncomponents\n\nIntegration -the act of anticipating or executing a combination of components of a system\nwith the expectation that all system requirements will be achieved.\n\nSystem structures - abstractions useful within systems in order to understand, control and\nfacilitate the complex interactions - current possibilities include platforms, modules,\nnetworks, teams, and hierarchies, and subsets and combinations thereof\n\nHierarchy - Hierarchies create a ranking of elements in a system. In a layered hierarchy\none of any pair of elements is above, below or at the same level as the other. In a tree-\nstructured hierarchy one adds the possibility that a pair of elements have no hierarchical\nrelationship.\n\nReuse -In the design of systems, repeated use or application in different places of the\ndesign of parts, manufacturing tools and processes, analysis, and particularly knowledge\ngained from experience; using the same object in different systems or at different times in\nthe same system\n\nModule - A part of a system that is constructed to have minimal, standardized\ninteractions with the rest of the system (and is thus often reusable). Alternately, a part of\na system that is intended to be the main or only actor in providing a given function or\nsubfunction of the system.\n\nPlatform -a module or set of components that splits a system into two parts so that\nchanges can, in principle, be made on either side of the platform interface without\naffecting the other side as long as appropriate standards are followed; platform\nimplementation: all parts or components on the side of the platform interface farther from\nthe end user, namely the parts or components needed to achieve the desired abstract\ninterface.\n\nIntegral architecture - an architecture in which the number of functions or behaviors is\nsignificantly larger than the number of designed entities or components, implying that\nsome components are involved in multiple functions\n\nModular architecture - an architecture in which the number of functions is roughly\ncomparable to the number of designed entities or components; an architecture in which\nthe interactions and interfaces between the components are relatively simple\n\nInterfaces - a boundary or interconnection between systems or their components that\ndefine or support interrelationships; interfaces may be intended or unintended\n\nIV Risk/uncertainty/safety in design/manufacturing and operation\n\nAmbiguity - open to having several possible meanings; may also be uncertain\n\nUncertainty A lack of knowledge about the inputs to a model or process, the model or\nprocess itself, or future events that will influence the outcome\n\nAccident - an undesired and unplanned (but not necessarily unexpected) event that\nresults in (at least) a specified level of loss (called a loss event); losses can be economic\nlosses, losses of human lives, losses of function, losses of time, etc.\n\nHazard - a state or sets of conditions that, together with worst-case external conditions,\ncan lead to an accident\n\nRisk - the level of hazard combined with the likelihood of the hazard leading to an\naccident, and the duration or exposure of the hazard; a combination of the likelihood,\nseverity and lack of detectability of an accident or loss event\n\nOpportunity - likelihood and possible beneficial impact of uncertainty\n\nV Management and related Social Science Issues\n\nOrganization - the structure of roles and responsibilities of people who are engaged in\nsome common purpose\n\nEnterprise - a defined scope of economic organization or activity, which will return value\nto the participants through their interaction and contribution\n\nLean enterprise - an enterprise that delivers value to its stakeholders, while minimizing\nwaste (waste can be in terms of materials, human lives, capital, time, physical plant,\nequipment, information, and energy)\n\nLearning Organization - an organization that systematically reviews its experience with\nits internal and external environment and acquires knowledge in order to improve its\nfunctioning\n\nNegotiation - an interactive process aimed at communication and agreement among\nmultiple stakeholders who have both common and competing interests\n\nSocio-technical systems - broad: systems in which both human and non-human elements\ninteract, where the social or management dimensions tend to dominate\n\nSocio-technical systems design - the design of work systems that attempts to optimize\nhuman psychological and physiological dimensions along with the technical aspects\n\nPolicy studies - studies of courses of action, chosen from alternatives, that guide present\nand future decisions by, for example, governmental bodies\n\nInterdisciplinary - involving two or more academic disciplines or professional practices\n\nVI General Concepts and Approaches related to Systems\n\nSystem point of view - a conviction that system behaviors are qualitatively different from\nthe behaviors of a system's components, that system design requires doing more than\ndesigning the components, and that special effort is required to understand systems and\ntheir behavior over and above what is required to understand any individual component\n\nSystem thinking - includes holism, an ability to think about the system as a whole; focus,\nan ability to address the important system level issues; emergence (see below),\nrecognition that there are latent properties in systems; and trade-offs, judgment and\nbalance, which enable one to juggle all the various considerations and make a proper\nchoice\n\nSystem theories -theories that attempt to explain the interacting and combining behavior\nof a system as well as how the interaction of its components contribute to the behavior of\nthe system\n\nGeneral Systems Theory - Originated by Bartanlaffy in the 1950's; an approach to\nmodeling systems using sets of differential equations\n\nCybernetics - Originated by Norbert Wiener; models systems using feedback\nprocesses\n\nSystem Dynamics - Originated by Jay Forrester; used to model systems in the\nsocial sciences and management; uses networks of nodes and feedback relationships\namongst them\n\nComplexity theory (in the sense of the Santa Fe Institute) - a set of approaches to\nunderstanding systems that encompasses chaos theory and related theories; used to\nunderstand biological systems as well as physics-based ones.\n\nComplexity theory (as used in computer science) - approaches to the analysis of the\ncomputing time and effort required by various algorithms; usually relies on\ntechniques in combinatorics and logic\n\nOperations Research - a scientific approach to executive decision-making,\nincluding problem formulation, mathematical modeling, and system optimization.\n\nSystem Modeling - vocabularies, symbols, rules, and representations (behavioral,\nstructural) that make use of the vocabularies, symbols, and rules for the purpose of\ndisplaying and predicting the structure and behavior of systems, or which represent in\nsymbolic form or operational ways one or more aspects of the system under study\n\nNetwork models of systems - models of systems at relatively high abstraction,\nemphasizing elements and their interactions, typically using the symbols and methods of\ngraph theory\n\nEmergent properties - properties or behaviors of a system that are discovered (i.e.,\nproperties that were there but latent), those that emerge spontaneously over time or space,\nand those that arise in response to behavior of other systems and environments; in a\nhierarchical view of systems, emergent properties show up at one level of the hierarchy,\nbut not at lower levels\n\nSynergy -mutually advantageous behaviors or properties that exist only because distinct\nelements are joined or can interact\n\nMulti-agent models - models of systems that emphasize independent actions of\nindividual elements that obey rules based on their internal states and knowledge (perhaps\nlimited) of the states of other elements"
    },
    {
      "category": "Resource",
      "title": "whitny_modul_lmt.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/bbd8c18aa8cdb740e78835c409525b9a_whitny_modul_lmt.pdf",
      "content": "3/26/05\nPHYSICAL LIMITS TO MODULARITY\nBy\nDaniel E Whitney\nSenior Lecturer\nMIT Engineering Systems Division\nABSTRACT\nArchitecture, specifically the definition of modules and their\ninterconnections, is a central concern of engineering systems theory. The\nfreedom to choose modules is often taken for granted as an essential design\ndecision. However, physical phenomena intervene in many cases, with the\nresult that 1) designers do not have freedom to choose the modules, or 2) that\nthey will prefer not to subdivide their system into as small units as is possible.\nA distinction that separates systems with module freedom from those\nwithout seems to be the absolute level of power needed to operate the system.\nVLSI electronics exemplify the former while mechanical items like jet engines are\nexamples of the latter. It has even been argued that the modularity of VLSI\nshould be extended to mechanical systems. This paper argues that there are\nfundamental reasons, that is, reasons based on natural phenomena, that keep\nmechanical systems from approaching the ideal modularity of VLSI. The\nargument is accompanied by examples.\nThis paper is an updated version of one written 6 years ago,1 which in turn\nis based on several limited circulation reports and working papers.2 Recent\nupdates note the fact that power levels in central processor (CPU) chips are\nreaching astounding levels, and that several symptoms of integrality now can be\nseen in VLSI systems, providing some validation of this paper's argument.\n1. Introduction and Historical Note\nA number of important military and commercial systems fall into the class\nof \"complex electro-mechanical-optical\" (CEMO) items, examples of which\ninclude missile seeker heads and instant cameras. Each of these contains motors,\nsensors, control systems, optical trains, and, in the case of the camera, a complete\nchemical system for developing images on film. About 15 years ago, the author\nand his colleagues had research support from DARPA to advance the science of\n1 [Whitney, 1996]\n2 [Whitney, Nevins, De Fazio and Gustavson]. The author wishes to acknowledge the contributions of his\nco-authors of this report.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nmodeling and designing complex mechanical assemblies. The authors made\nsome progress in their research [De Fazio, et al] but DARPA turned its interest\nincreasingly toward electronics and VLSI. Our sponsors urged us to \"get smart\"\nand emulate VLSI design and fabrication methods in order to advance the art of\nCEMOs. We, in turn, argued, unsuccessfully, that CEMO systems were\nfundamentally different from VLSI and could not be conceptualized or designed\nas VLSI systems are. [Whitney, Nevins, De Fazio and Gustavson] [Whitney,\n1996].\nThe distinction between typical mechanical systems and VLSI has gained\nnew relevance as attention has turned to developing a theory of engineering\nsystems. Key to that theory is the concept of architecture, the scheme by which\nfunctions are allocated to physical objects and the scheme by which those objects\ninteract. [Ulrich and Eppinger]. Architectures are often characterized by the\ndegree to which they are \"integral\" or \"modular,\" and many arguments are\nadvanced in favor of modular architectures. In this paper we will argue that\ndesigners of mechanical systems do not have as great freedom to define modules\nor to choose the degree of modularity as do designers of low power systems like\nVLSI. To the extent that this is true, the theory of engineering systems will have\nto take account of such fundamentals while evolving metrics for evaluating\narchitectures and defining system design techniques.\n2. The Attractiveness of the VLSI Model of Engineering Design\nIt is widely agreed that design methods and especially computer support of\ndesign is generally more mature in electronics than it is in CEMO products. This\nrealization has given rise to speculation that VLSI digital design and\nmanufacturing methods might be applied to CEMO products with good results.\nThe question is whether there are fundamental blockages to such a transfer of\nmethod, or whether the transfer has not taken place simply because of inertia or\nlack of appreciation of the potential benefits.\nClaimed benefits of the VLSI design paradigm include:\nDesign benefits: VLSI systems are extremely complex, small, and efficient,\nand can be designed by relatively few people empowered by well-integrated\ndesign tools; a microprocessor with 3 million \"parts\" can be designed and\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nbrought to full production in three years by about 300 people, whereas a car with\nabout 10000 parts requires the efforts of 750 to 1500 people over about four years,\nand an airplane with 3 million parts may require 5000 people for five years.\nFurthermore, the different VLSI modules can be designed relatively\nindependently and thus in parallel, saving time. VLSI modules can be given\nstandard interfaces, permitting plug and play design and opening up whole\nindustries to new kinds of competition and innovation.\nManufacturing benefits: the \"same\" manufacturing processes or even the\nsame manufacturing equipment can be used to make an \"endless variety\" of\nVLSI items; by contrast, especially at the most efficient high volumes, CEMO\nproduction facilities are dedicated to one design or at most a few variations of\nlimited scope.\n\"Business\" benefits: Product architectures can be tailored to the way a\nproduct will be sold or distributed. A more modular architecture permits\nmodules to be identified as the differentiators that will be customized for\ndifferent purchasers. Differentiation can occur at attractive points in the product\ndelivery process, such as at the very end of the assembly line, at the distributor's\nplace of business, or even by the customer. [Lee] Modular architectures lend\nthemselves to outsourcing, permitting companies to share risk or gain access to\nknowledge and capabilities not available in-house. [Fine and Whitney] It has\neven been argued that modularity is a fundamental source of value in systems\nbecause it affords opportunities for innovation, provided that certain \"design\nrules\" are followed. [Baldwin and Clark]\nAre these benefits transferable from VLSI to CEMO items? To begin the\ndiscussion, it is necessary to classify CEMO items and choose one class for\nfurther discussion.\nCEMO products can be classified roughly as follows:\n- those that are primarily signal processors\n- those that process and transmit significant power\nExamples of the two classes can be found in Table 1.\nS\nSIGNAL PROCESSORS\nPROCESS AND TRANSMIT\nIGNIFICANT POWER\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nfour digit mechanical gear gas meter\ndial (1 mW?)\n- Polaroid camera (30W peak?)\nball-head typewriter (30 mW peak at\n- missile seeker head( 50W peak?)\nthe ballhead?)\nsewing machine (1 W?)\nlaser printer (1 KW, much of which is\nheat)\nMarchand calculator (10W?)\nautomobile automatic transmission (50\nKW+)\nautomobile (100 KW+)(half or more\ndissipated as heat from engine)\nairplane (10 MW±)\nship (40 MW+)\nTable 1. Examples of CEMO Signal Processors and Power Processors\nThe distinction is not merely academic, for two reasons. A major trend in\nrecent decades has been the replacement of mechanical signal processors first by\nanalog electronics and more recently by digital electronics. Signal processing\nbehavior is generally carried out more economically, accurately, and reliably by\nelectronics. The replacement is physically possible because signal processing is,\nor can be, accomplished at very low power levels because the power is merely\nthe manifestation of a fundamentally logical behavior. The power itself is not\nactually required to perform any physical function, such as motion.\nHowever, the replacement has not occurred where significant power is the\nbasis for the system's behavior and the main expression of its basic functions.\nThe discussion that follows focuses on such power-level CEMOs. The presence\nof significant power in CEMOs and its absence in VLSI is the root of the\nreasoning in this paper.\n3. Sketch of VLSI Design\nThere are basically three classes of VLSI, distinguished by the\naggressiveness of their design in terms of circuit density, size of individual\ncircuit elements, and width of connecting lines: dynamic random access\nmemories (DRAMs), microprocessors, and application-specific integrated circuits\n(ASICs). DRAMs represent the cutting edge, requiring the smallest features and\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nredesign of individual device elements at every new generation. ASICs are at the\nother end, having relatively large devices and line widths and relatively fewer\ndevices on a chip. Microprocessors are in between.3\nA generic approximate list of the steps comprising design of a\nmicroprocessor is as follows:\nIn Stage 1, elementary devices are created, validated, and entered into a\nlibrary along with design rules and associated analysis tools that reasonably\nguarantee successful fabrication. In Stage 2, complex systems are created as\ndesigners draw standard validated components from the library and hook them\ntogether into systems. In stage 3 the item is manufactured. A more complete\ndescription is in Table 2.\nStage 1\n1. a set of design rules (line widths, device sizes) is established\n2. elementary devices, such as gates, are designed, and simulations of their\nbehavior are generated\n3. processes are designed and validated for these devices (this can be a very\nlengthy and difficult step, involving severe materials, chemical, optical,\nthermal, stress, and other problems; dozens or hundreds of people and millions\nof dollars may be required)4\n4. validated devices are entered into a cell library, along with their simulations;\nthe design rules for these devices, which reasonably guarantee successful\nfabrication, are imbedded in the cell layouts\nStage 2\n3Information for this section was obtained from the following sources: interview 9/19/94 with Fred Harder\nof Hewlett-Packard; various discussions with Gene Meieran of Intel during 1994 and 95; presentation to the\nMIT VLSI Seminar series by Ted Equi of DEC, March 15, 1994; presentation \"Trends in Integrated Circuit\nDesign\" by Mark Bohr of Intel, 11/22/94; proceedings of NSF Workshop on New Paradigms for\nManufacturing chaired by Dr Bernard Chern, May 2-4, 1994 and discussions with symposium participants,\nespecially Carver Mead and Carlo Sequin; members of the ad hoc National Research Council study team\non Information Technology in Manufacturing, especially Louise Trevillyan of IBM and Gene Meieran of\nIntel; presentations \"Component Design Process\" by John Dhuse and \"Mask Design\" by Barbara Christie,\nMark Chavez, and Tara Brown, all of Intel, Feb 1, 1994.\n4 When people in this industry are asked about difficulties designing VLSI systems, they usually respond\nby indicating how difficult the systems are to fabricate rather than how difficult they are to design.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\n1. systems are designed on a top-down basis, proceeding from flowcharts to\nlogic diagrams to circuit diagrams or device interconnections, each step of\nwhich can be simulated to check function as well as side effects like heat\ndissipation\n2. designers draw devices from the library and combine them into large\nsystems, following the interconnection plan or logic layout, and obeying a grid\nstructure to allocate real estate; this method restricts designers' freedom to use\nspace in the most efficient manner; the alternative, used until about 1980, is to\npermit designers to create devices to fit the space; in effect this combines device\ndesign and validation with system design, which would be fatal to rapid design\nof complex systems\n3. systems are again simulated by combining device simulations\n4. logic and timing errors are found and eliminated\n5. device geometries are drawn to scale, photomasks are made, and entire\nsystems are fabricated\n6. The next generation of smaller devices is usually created by geometrically\nshrinking the library devices. The next generation after that requires new\ndevices, new processes, and new verifications. New material systems may also\nbe created across generation boundaries.\nTable 2. Stages of Design of VLSI Systems (not including manufacturing)\nFew items in all of technology can be designed so automatically by\nproceeding from step to step, algorithmically converting requirements and\nsymbolic representations of behavior into specific geometry without intervention\nby a person. Few designed items have such consistent abstract representations\nfrom one design stage to the next, or representations whose structure and\ngeometry capture so much of the ultimate function of the system.\nFigure 1 captures the essence of the above process, dividing the effort into\nthree distinct stages: component design, system design, and manufacturing\nprocess design.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nFigure 1. Sketch of VLSI System Design and Manufacturing\nThe point of the above design process description is that if digital logic can\nbe used, system design and device design are decoupled. Design occurs at the\nsystem level by combining modules, once verified devices are in the library. The\nresult is that extremely complex digital systems can be designed with dramatic\nreduction in cost and product development time. This basic point will be\nexpanded in Section V of the paper.\n4. Sketch of CEMO Design\nThe situation in CEMO design is quite different from VLSI. The Boeing 777\nhas, by various estimates, between 2.5 million and 7.5 million parts. Design took\nabout 5 years and involved about 5000 engineers at Boeing plus some thousands\nof others at avionics, engine, and other subcontractors.\nIn CEMO design, there is nothing comparable to Stage 1 and there is no cell\nlibrary from which parts can be drawn, with a few exceptions. These exceptions\nare mainly such items as fasteners, motors, valves, pipe fittings, and finishes like\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\npaint. They are typically catalog items supplied by subcontractors and are not\noften designed to suit the CEMO product. See Figure 2.\nFigure 2. Simplified Sketch of Typical CEMO Product Design. Design steps\nshown occur after generation of requirements is complete. Compared to Figure\n1, there is no equivalent in the form of a free-standing Stage 1 Component\nLibrary Preparation and Stage 2 System Design. Main function carriers must be\ndesigned from scratch or adapted from prior designs and modified to be\nconsistent with evolving system concepts. System analysis and verification tools\nare almost totally absent. Analysis tools are not integrated and cover one\nphysical medium or phenomenon at a time. Only in special cases can\nmanufacturing tooling or processes be created directly from CAD data.\nThe designer puts most of the effort into\n- converting an elaborate set of requirements on function, size, space,\npower, longevity, cost, field repair, recurring maintenance, and user interface\ninto a geometric layout,\n- identifying subsystems that will carry out the functions\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\n- allocating functions and space to the subsystems within the allowed space\n- breaking the subsystems into individual parts\n- designing those parts and fitting them into the allocated space\n- determining allowable variations in part and system parameters\n(tolerances on geometry, voltage, pressure, temperature, hardness, surface finish,\netc.)\n- predicting off-nominal behaviors and failure modes and designing\nmitigators into the parts and systems\n- identifying fabrication and assembly methods, their costs, and yields\n- identifying design verification plans (simulations and prototypes of both\nparts and systems at various levels of fidelity)\n- revisiting many of the initial decisions up to the system level if their\nconsequences, as discovered in later steps, result in technical or financial\ninfeasibilities\nWhile this list sounds superficially like the tasks of VLSI design, the process\nis profoundly different because each part and subsystem is an individual on\nwhich all the above steps must be applied separately. Each part will typically\nparticipate in or contribute to several functions and will perform in several\nmedia (gas, solid, electricity, heat...)\nPut another way, CEMO and VLSI items differ in how one designs the\n\"main function carriers,\" the parts that actually carry out the product's desired\nfunctions:\n- in VLSI these parts are made up by combining library devices; a few\ndevice types are leveraged into systems with millions of parts; a modular\napproach to system design works, in which parts can be designed and operated\nindependently\n- in CEMO these parts are designed specifically for the product, although\nthey may be variants of past parts designed for similar products; thousands of\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\ndistinct parts must be designed to create a product with a similar total number of\nparts, and many must be verified first individually and again in assemblies by\nsimulation and/or prototype testing; a modular approach works sometimes, but\nnot in systems subjected to severe weight, space, or energy constraints; in\nconstrained systems, parts must be designed to share functions or do multiple\njobs; design and performance of these parts are therefore highly coupled.\nBy contrast with VLSI design, the abstract representations of CEMO\nsystems contain very little information about the ultimate performance, and lack\nthe ability to capture the multitude of behaviors that span multiple physical\nphenomena and their interactions. As argued below, these interactions are\nunavoidable, difficult to predict, and often determinative of ultimate\nperformance, reliability, failure modes, and so on.\n5. Fundamental Differences Between VLSI and CEMO Design\nThe previous sections were primarily preparation, review and restatement\nof things known to many readers, and establishment of vocabulary and\nassumptions. This section comprises the heart of the author's contribution, an\nattempt to restate the foregoing in a more logical way, appealing to fundamental\nfactors and avoiding to the extent possible any historical factors or artifacts.\nI think there are fundamental reasons why VLSI systems are different from,\nand substantially easier to design than, mechanical systems, and I think the\ndifferences will persist. My conclusions are summarized in Table 3 and the\nreasoning is sketched below. An essential feature of the argument is to\ndistinguish carefully between parts or components on the one hand and products\nor systems on the other.\nISSUE\nVLSI\nMechanical Systems\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nComponent\nDesign and\nVerification\nModel-driven single function\ndesign based on single\nfunction components; design\nbased on rules once huge effort\nto verify single elements is\ndone; few component types\nneeded\nMulti-function design with\nweak or single-function models;\ncomponents verified\nindividually, repeatedly,\nexhaustively; many component\ntypes needed\nComponent\nBehavior\nIs the same in systems as in\nisolation; dominated by logic,\ndescribed by mathematics;\ndesign errors do not destroy\nthe system\nIs different in systems and in\nisolation; dominated by power,\napproximated by mathematics,\nsubject to system- and life-\nthreatening side effects\nSystem Design\nand\nVerification\nFollows rules of logic in\nsubsystems, follows those rules\nup to a point in systems;\nlogical implementation of main\nfunctions can be proven\ncorrect; system design is\nseparable from component\ndesign; simulations cover all\nsignificant behaviors; main\nsystem functions are\naccomplished by standard\nelements; building block\napproach can be exploited and\nprobably is unavoidable;\ncomplete verification of all\nfunctions is impossible\nLogic captures a tiny fraction of\nbehavior; system design is\ninseparable from component\ndesign; main function design\ncannot be proven correct; large\ndesign effort is devoted to side\neffects; component behavior\nchanges when hooked into\nsystems; building block design\napproach is unavailable,\nwasteful; complete verification\nof avoidance of side effects is\nimpossible\nSystem\nBehavior\nDescribed by logical union of\ncomponent behaviors; main\nfunction dominates\nNo top level description exists;\nunion of component behaviors\nirrelevant; off-nominal\nbehaviors may dominate\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nTable 3. Summary of Differences Between VLSI and Mechanical Systems\nThe primary fundamental factors distinguishing CEMO and VLSI systems\nare stated in the six points below:\nPoint 1: CEMO Systems Carry Significant Power, from kilowatts to\ngigawatts. A characteristic of all engineering systems is that the main functions\nare accompanied by side effects or off-nominal behaviors. In VLSI, the main\nfunction consists of switching between 0 and 5 (or 3 or 2.4) volts, and side effects\ninclude capacitance, heat, wave reflections, and crosstalk. In mechanical systems\ntypical side effects include imbalance of rotating elements, crack growth, fatigue,\nvibration, friction, wear, heat, and corrosion. The most dangerous of mechanical\nsystems' side effects occur at power levels comparable to the power in the main\nfunction. In general there is no way to \"design out\" these side effects. A VLSI\nsystem will interpret anything between 0 and 0.5 volts as 0, or between 4.5 and 5\nvolts as 5. There is no mechanical system of interest that operates with 10%\ntolerances. A jet engine rotor must be balanced to within 10-2% or better or else\nit will simply explode. Multiple side effects at high power levels are a\nfundamental characteristic of mechanical systems.\nOne result of this fact is that mechanical system designers often spend more\ntime anticipating and mitigating a wide array of side effects than they do\nassembling and satisfying the system's main functions. This dilution of design\nfocus is one reason why mechanical systems require so much design effort for\napparently so little complexity of output compared to VLSI. But this judgment is\nmistaken. A correct accounting of \"complexity of output\" must include the side\neffects, which are also \"outputs\" that cannot be ignored during design and are\nusually quite complex.5\nSystems that operate by processing power are subject to a variety of scaling\nlaws that drive the number and size of components. For example, [Thompson]\nshows that as steamships got larger, it was necessary to increase the number of\nboilers rather than simply build one larger boiler. In VLSI there has so far been\nno limit to the number of components that theoretically can be put on one chip,\nfor example. This number has grown unabated according to Moore's Law for\n5 [Ulrich and Eppinger] call these \"incidental interactions.\"\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nover 40 years. Below we argue that VLSI is now running into typical CEMO\nproblems associated with high power that are already intercepting this decades-\nold trajectory.\nPoint 2. VLSI Systems are Signal Processors. Their operating power level is\nvery low and only the logical implications of this power matter (a result of the\nequivalence of digital logic and Boolean algebra). Side effects can be\noverpowered by correct formulation of design rules: the power level in cross\ntalk can be eliminated by making the lines farther apart; bungled bits can be\nfixed by error-correcting codes. Thus, in effect, erroneous information can be\nhalted in its tracks6 because its power is so low or irrelevant, something that\ncannot be done with typical side effects in power-dominated CEMO systems.7\nFurthermore, VLSI elements do not back-load each other. That is, they do\nnot draw significant power from each other but instead pass information or\ncontrol in one direction only.8 VLSI elements don't back load each other because\ndesigners impose a huge ratio of output impedance to input impedance, perhaps\n6 or 7 orders of magnitude. If one tried to obtain such a ratio between say a\nturbine and a propeller, the turbine would be the size of a house and the\npropeller the size of a muffin fan. No one will build such a system. Instead,\nmechanical system designers must always match impedances9 and accept back-\nloading. This need to match is essentially a statement that the elements cannot\nbe designed independently of each other.\nAn enormously important and fundamental consequence of no back-\nloading is that a VLSI element's behavior is essentially unchanged almost no\nmatter how it is hooked to other elements or how many it is hooked to. That is,\nonce the behavior of an element is understood, its behavior can be depended on\nto remain unchanged when it is placed into a system regardless of that system's\ncomplexity. This is why VLSI design can proceed in two essentially independent\nstages, module design and system design, as described above.\n6 This point (that information can be blocked when desired but significant power cannot) was made by Dr.\nMark Matthews of University of Bath, UK in an interview with the author.\n7If fanout limits are reached, amplifiers can be inserted at some cost in space, power, and signal\npropagation time. But this is not fundamental.\n8 These are called \"one-way interfaces\" by Crawley.\n9 The purpose of impedance-matching is to maximize power transfer from the source to the load. But in\nVLSI, power transfer is not the goal, and in traditional VLSI, the wasted power has been negligible.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nFurthermore, due to the mathematical nature of VLSI digital logic and its\nlong-understood relation to Boolean algebra, the performance of VLSI systems\ncan often be proven correct, not simply simulated to test correctness. But even\nthe ability to simulate to correctness is unavailable to mechanical system\ndesigners. Why is this so?\nPoint 3: Single vs Multiple Functions per Device. An important reason why\nis that mechanical components themselves are fundamentally different from\nVLSI components. Mechanical components perform multiple functions, and\nlogic is usually not one of them. This multi-function character is partly due to\nbasic physics (rotating elements transmit shear loads and store rotational energy;\nboth are useful as well as unavoidable) and partly due to design economy. VLSI\nelements perform exactly one function, namely logic. They do not have to\nsupport loads, damp vibrations, contain liquids, rotate, slide, or act as fasteners\nor locators for other elements.\nFurthermore, each kind of VLSI element performs exactly one logical\nfunction. Designers can build up systems bit by bit, adding elements as\nfunctions are required. A kind of cumulative design and design re-use can be\npracticed, allowing whole functional blocks, such as arithmetic logic units, to be\nreused en bloc. The absence of back-loading aids this process. However, a kind\nof resource conservation dominates mechanical design: if one element were\nselected for each identified function, such systems would inevitably be too big,\ntoo heavy, or too wasteful of energy. For example, the outer case of an automatic\ntransmission for a car carries drive load, contains fluids, reduces noise, maintains\ngeometric positioning for multitudes of internal gears, shafts, and clutches, and\nprovides the base for the output drive shafts and suspension system.\nNot only is there no other way to design such a case, but mechanical\ndesigners would not have it any other way. They depend on the multi-function\nnature of their parts to obtain efficient designs. Building block designs are inevitably\neither breadboards or kludges. But the multi-function nature of mechanical parts\nforces designers to redesign them each time to tailor them to the current need,\nagain sapping the effort that should or could be devoted to system design. VLSI\ndesigners, by contrast, depend on the single function nature of their components to\novercome the logical complexity challenges of their designs. One can observe the\nconsequences of this fundamental difference by observing that in VLSI the \"main\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nfunction carriers\" are standard proven library elements while in mechanical\nsystems only support elements like fasteners are proven library elements;\neverything else is designed to suit.\nThe existence of multiple behaviors in CEMO systems means that no\nanalysis based on a single physical phenomenon will suffice to describe the\nelement's behavior; engineering knowledge is simply not that far advanced, and\nmulti-behavior simulations similarly are lacking. Even single-behavior\nsimulations are poor approximations, especially in the all-important arena of\ntime- and scale-dependent side effects like fatigue, crack growth, and corrosion,\nwhere the designers really worry. In these areas, geometric details too small to\nmodel or even detect are conclusive in determining if (or when, since many are\ninevitable) the effect will occur. And when component models are lacking, there\nis a worse lack of system models and verification methods.\nPoint 4: Ability or Inability to Separate Component Design from System\nDesign. The fundamental consequence of back-loading is that mechanical\nelements hooked into systems no longer behave they way they did in isolation.\n(Automotive transmissions are always tested with a dynamometer applying a\nload; so are engines.) Furthermore, these elements are more complex than VLSI\nelements due to their multi-function behavior. This makes them harder to\nunderstand even in isolation, much less in their new role as part of systems.\nVLSI elements are in some sense the creations of their designers and can be\ntailored to perform their function, which is easy in principle to understand.\nMechanical elements are not completely free creations of their designers unless,\nlike car fenders, they carry no loads or transmit no power.\nThe fact that mechanical components change behavior when connected into\nsystems means that systems must be designed together with components, and\ndesigns of components must be rechecked at the system level. No such second\ncheck is required in VLSI, as long as the design rules are obeyed.10 For this\n10This statement requires that \"design rule\" be interpreted to mean that component functions are preserved,\nnot simply that the manufacturing process will not generate defects. Verification of design rules thus needs\nto include functional testing of entire devices. If or when it does not, then the above statement is invalid,\nand system level checking for component misbehavior will be needed. The more aggressive a design is in\nterms of packing components together, the more likely such checks will be necessary. Thermal effects\ncaused by combining too many high dissipation components near each other can also cause system level\nproblems. Thus practical VLSI will not be like ideal VLSI.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nreason, CEMO items cannot be designed by the strict top-down Stage 1 - Stage 2\nprocess described above for VLSI systems.\nPoint 5. Ability or Inability to Define Interfaces. VLSI systems transmit so\nlittle power that their interfaces can be designed based on other criteria. The\ninterfaces are much bigger, for example, than they need to be to carry such small\namounts of power. The conducting pins on electrical connectors that link disk\ndrives to motherboards are subjected to more loads during plugging and\nunplugging than during normal operation. Their size, shape, and strength are\nmuch larger than needed to carry out their main function of transferring\ninformation. This excess shape can be standardized for interchangeability\nwithout compromising the main function. No such excess design scope is\navailable in high power systems. Interfaces take up space and weight and must\nbe designed specifically to their application.\nPoint 6. Ability or Inability to Confine Interactions to the Defined\nInterfaces. An essential feature of modularity is that interactions occur at, and\nonly at, the defined interfaces. Low power and the logical nature of functions\nand interactions underlie this feature. Integral systems, by contrast, exhibit\nbehaviors that are not predicted by module behavior and do not occur at the\ndefined interfaces between modules. These were called side-effects above. Their\nhigh power and multi-phenomena character permit them to \"leak out\" and move\nbetween modules in unpreventable and often unpredictable ways, along\nundefined and often unpredictable paths. In essence, this fact marks the point at\nwhich the VLSI approach stops being applicable to CEMO systems.\n6. Historical Trends11\nThe top-down VLSI design process was enabled in the late 1970s by Carver\nMead and Lynn Conway whose textbook12 showed how to use library elements\nwith proven behavior and design rules to create \"cookbook\" designs. Even\nuniversity students were able to design working VLSI systems. Before that time\n11Material for this subsection is drawn from interviews with Fred Harder of Hewlett-Packard, the\nintroduction to the NSF Workshop report on New Paradigms for Manufacturing written by Carver Mead,\nand the forthcoming 2004 MIT System Design and Management thesis by Samuel Weinstein.\n12[Mead and Conway]\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\none had to be an experienced electrical engineer to design VLSI. That is, one had\nto know about the electrical behavior of circuit elements and had to design each\nlogical device anew in order to build up an integrated circuit. Designs were\nindividualistic and did not necessarily conform to design rules in support of\nmanufacturability. Design success, especially in terms of layout and space\nutilization, depended on the skill and style of individual designers.\n\"[Today,] virtually all high-performance designs today use highly\nstructured methodology, with well-defined datapaths and separate control logic,\nas taught in the VLSI design courses starting in the mid 1970's. These designs\nclearly out-perform random-logic designs, which were the industry norm during\nthe period...\"13\nFrom the late 70s, when the Mead-Conway method began to be adopted\nand supported with computer tools, until around 1990 one could be a logic\ndesigner and create VLSI. That is, one could begin with a functional statement of\nthe chip's requirements and systematically follow the process outlined in Section\n3 and, with help from domain experts and the CAD tools, emerge with a\nworkable design. A downside to the Mead-Conway approach was that the\nlibrary elements (called \"standard cells\") were not adjusted in shape when they\nwere placed on the chip. The practical result is that such designs take up more\nspace than space-optimized designs produced by EEs in the 1970s.\nApparently, the period from about 1978 and 1990 was a golden age in VLSI\ndesign. This period has come to an end, more or less, for several reasons. First,\nso many elements are now required for advanced processors that the loss of\nspace created by using canned library elements can no longer be tolerated.\nLarger chips are more vulnerable to manufacturing failures, especially tiny\nparticles of dirt.14 Process yield is the focus of manufacturing, and low yields\n13Mead, NSF~Workshop introduction op cit.\n14The theoretical basis for this effect is called \"Murphy's Law\" after a person actually named Murphy. His\nanalysis utilized classical operations research methods and showed that the probability of a chip being\ndamaged by a dirt particle is proportional to the area of the chip divided by the area of the wafer. If there\nare N chips on a wafer and k particles large enough to cause damage land on each unit area of the wafer,\nthen the probability of a chip being destroyed by a particle is proportional to k/N. Thus larger chips and\nfewer chips per wafer are more vulnerable, and chips with smaller features are vulnerable to smaller\nparticles, which are more numerous. The most vulnerable of all is a technology called wafer scale\nintegration, meaning in effect one huge chip per wafer. This technology has yet to become practical\nbecause of dirt particles: only one particle per wafer is needed to render its one chip useless.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nmean loss instead of profit. Second, smaller elements and more closely spaced\nconductors require the skill of EEs to design and debug properly. No longer can\none blindly convert logic to circuits and expect them to work. Obeying the\ndesign rules will result in a chip that is too large, while pushing the rules\nrequires understanding the currents and fields. Element design and system\ndesign are no longer independent, and VLSI design is taking on the character of\nmechanical design. So we have come full circle, and it again requires EEs to\ndesign VLSI.\nVLSI systems are among the most complex things designed, and logical or\nsystem level errors can occur. They represent the same kinds of errors that occur\nin other system designs: lack of coordination, imperfect interface specifications\nbetween subsystems, lack of a comprehensive database with all product data\navailable to all designers, incompatible versions of the design being used by\ndifferent groups of designers, and so on. System level tools to handle these\nproblems are either not available or are just becoming available. The best tools\nhandle individual steps or aspects of the design. The industry will have to\naddress this problem because circuit complexity will rise even as product\ndevelopment time must fall.15\nRecent developments in VLSI can be seen as a validation of the above\nargument. These developments also provide a test of the main hypothesis in this\npaper. [Weinstein] The trend in VLSI, following Moore's Law, has been to put\nmore and more components on a single chip and to operate the logic at higher\nand higher frequencies. At the same time, individual logic devices on chips have\nbecome smaller and smaller, so that the chips themselves have not grown very\nmuch. A simple model of switching circuit operation reveals that power\ndissipation grows with switching frequency, and that power dissipation per unit\narea of a chip grows with frequency and inversely with device size. The result is\nthat current chips generate huge amounts of waste heat, enough to destroy the\nchip if it is not taken away. [Cohn] In fact, inability to remove heat is the barrier\ntoday to increasing chip capability, whereas Moore's Law will likely not be\nstopped by materials or processing limits for a decade or more. This huge heat\n15Typical microprocessors in 1996 had about 3 million transistors. [Geppert] Industry experts estimated\nat that time that some kinds of chips would have as many as 50 to 100 million transistors by 2000, a figure\nthat was achieved in 2003. The growth in transistors per chip greatly exceeds the growth in productivity of\nchip designers, even with the CAD tools presently available. [BW 94]\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nproduction is a classic example of an interaction occurring across an undefined\ninterface, and is a new event in VLSI.\nMobile computing systems like laptop computers are most acutely affected\nby this trend. The effects manifest themselves as hot laps and low battery life.\nComputing is marketed to the public in terms of increasing CPU frequency, but\ncomputer manufacturers and chip designers realize that users care about hot laps\nand battery life more than they care about the next increment in CPU speed.\nLaptop designers have resorted to a wide variety of almost desperate actions,\nsuch as using heat pipes and multiple fans, in an attempt to solve this problem.16\nIntel has quietly switched its marketing emphasis from CPU speed to battery\nlife. [Wall Street Journal] Instead of simply selling CPUs as modules to\ncomputer manufacturers, Intel increasingly invests in \"thermal management\"\n(via internal R&D and buying or investing in companies with new software or\nenergy storage technologies) and provides advice and patented heat transfer\nmethods to its customers. This effectively creates integration in the supply chain.\n[Evans]\nMore startling is the prediction that methane-powered fuel cells will soon\nfind their way into laptops. [BW 2003] Imagine pouring lighter fluid into your\ncomputer and then carrying it through airport security.\nThese trends indicate that VLSI is starting to become more like CEMO\ndesign for the reason predicted at the beginning of this paper: integrality is an\nunavoidable property of high power systems.\n7. Final Remarks\n[Baldwin and Clark] suggest that modularity manifests itself in three\ndomains:\nModularity in design\nModularity in manufacturing\nModularity in use\n16 The Apple G5 desktop computer contains seven fans, and no laptop version has come to market as of\nJanuary 2005.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\nIn each of these areas, CEMO systems will not be as modular as VLSI and\nsimilar systems are. Furthermore, the extreme of modularity may not be the best\nchoice for some CEMO systems in at least some of these domains.\nIn design, we have seen that CEMO systems cannot be designed in a\nunidirectional way with modules designed first followed by system design using\nthe modules. In fact, integrated CEMO designs are often called \"refined,\"\nindicating that great effort was invested in combining elements, capitalizing on\nmultiple behaviors to achieve design objectives efficiently, and so on.17\nThe ideal of modularity permits one to simulate the system and test or\nprototype only the modules. Under these conditions, the cost of a system grows\nessentially linearly with the number of modules. In more integral systems,\ntesting requires building a system, and substitution of one module for another\nrequires another whole system to be built and tested in order to uncover any\nemergent interactions between the new module and the reused ones.\nDesign is easier in VLSI than in CEMO systems because in VLSI systems,\nthe information at the system level is entirely logical and connective. This\ninformation is transformed and augmented from stage to stage in the design\nprocess but its essential logical/connective identity is preserved all the way to\nthe masks. This is not possible in mechanical systems, where the abstractions are\nnot logical homologues (much less homomorphs) of the embodiments and likely\nnever will be. Instead, tremendous conversion is needed, with enormous\nadditional information required at each stage. A stick figure diagram of an\nautomatic transmission captures only the logic of the gear arrangements and\nshifting strategy. It fails totally to capture torques, deflections, heat, wear, noise,\nshifting smoothness, and so on, all of which are essential behaviors. Function-\nsharing is not a matter of choice in CEMO systems, and side effects cannot be\neliminated.\nIn manufacturing, the same issues can arise. If the system is to some degree\nintegral, then several advantages of modular systems will be unavailable. These\n17 Fuselage skins of Boeing aircraft have different thicknesses in different areas in order to optimize stress\ndistribution and reduce weight. A typical skin has about four different thicknesses. Regions as small as the\nsize of your hand are given their own thickness, which can differ from neighboring thicknesses by as little\nas a millimeter.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\ninclude omission of final system tests at the end of the production line18 as well\nas easy substitution of suppliers that build \"the same\" module. Upgrades and\nengineering change orders will similarly have to be verified at the system level\nand cannot be counted on to follow plug and play expectations. Interestingly,\nmuch progress has been made in CEMO systems in creating even more\nintegrated parts by means of advanced injection molding, die casting, and rapid\nprototyping techniques.\nThe reason why \"an enormous variety of VLSI products can be built\" from\nthe same process is that the variety is embodied at the system level. At the\ncomponent level, only one item can be made by each process. VLSI escapes the\nconsequences of the process-dependence of components because VLSI systems\ncan be designed independently of component design. On the mechanical side,\nthis separation does not exist.19\nIn use, the same limitations will exist, preventing users from quickly\nsubstituting upgrades or third party items.\nIn summary:\n- System design methods based on extensions of the VLSI model will\ngreatly underestimate design and debugging time of CEMO systems.\n- Methods of evaluating the excellence of a design that derive from the\nVLSI model will value the wrong things and fail to value the right things about\ngood CEMO designs\n- Theories based on the VLSI model aimed at evaluating architectures will\nnot properly value CEMO integrality.\n- CEMO systems will not become more modular in the future\n18 But DELL tests each finished computer. Why? Mainly to detect module failures in the hardware. If\nthere are software errors (other than corrupted installations) then the problems are distinctly integral.\n19An exception to this may be found when the \"process\" is assembly. This is the case where a family of\nproducts can be created at the time of assembly by using a variety of similar parts. An example is\ndescribed by [Whitney, 1993] in which Denso makes a wide variety of instrument panel meters, alternators,\nand radiators by this strategy.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\n- Design of CEMO systems will not evolve toward the two stage separation\nmethod applicable to VLSI\n- Yet, technical and \"business\" pressures will pull opposite ways in the\nCEMO domain, with the technical seeking the advantages of integrality and\nbusiness seeking the advantages of modularity.\n- As VLSI systems push toward greater performance, they will encounter\nconditions and barriers that are familiar to CEMO designers. The reasons will be\nthe same: increased power associated with their operation and similarly high\npower side effects will drive VLSI to be less modular and to lose some of the\nadvantages that modularity brings.\n8. References\n[BW 1994] \"They've Got the Whole World on a Chip,\" Business Week, April\n23, 1994, pp 132-35.\n[BW 2003] \"Japan: Fuel Cell Nation,\" Business Week, October 6, 2003.\n[Baldwin and Clark] Baldwin, C., and Clark, K., Design Rules, Boston:\nHarvard University Press, 1999.\n[Cohn] Cohn, David, IBM, \"Low-Power Computing Technologies:\nOrganizational Issues and Engineering Complexities,\" plenary presentation to\n2002 ASME Design Engineering Technical Conference, Montreal.\n[De Fazio, et al] De Fazio, T. L., and 10 co-authors, \"A Prototype for Feature-\nBased Design for Assembly,\" ASME J. Mech. Des., v 115 no 4, Dec, 1993, pp 723\n34.\n[Evans] Evans, Thomas C., \"Statistical Usage Models in Mobile Processor\nThermal Design and Testing,\" MIT Leaders for Manufacturing Thesis, May 2003.\n[Fine and Whitney] Fine, Charles, and Whitney, Daniel, \"Is the Make-Buy\nDecision a Core Competence?\" Moreno Muffatto and Kulwant Pawar (eds.),\nLogistics in the Information Age, Servizi Grafici Editoriali, Padova, Italy, 1999, pp.\n31-63.\n[Geppert] Geppert, Linda, \"Not Your Father's CPU,\" IEEE Spectrum, Dec.,\n1993, pp 20 - 23.\n[Lee] Lee, H., \"Effective Inventory and Service Management Through\nProduct and Process Redesign,\" Operations Research, vol 44, no 1, Jan-Feb 1996,\npp 151-159.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc\n\n3/26/05\n[Mead and Conway] Mead, Carver, and Conway, Lynn, Introduction to\nVLSI Systems, Reading, Mass.: Addison-Wesley, 1980.\n[Paynter] Paynter, H. M., Analysis and Design of Engineering Systems, MIT\nPress, 1960\n[Stix] Stix, Gary, \"Toward 'Point One,'\" Scientific American, Feb., 1995, pp 90\n- 96\n[Thompson] Thompson, D. W., On Growth and Form, quoted in Newman, J.\nR., The World of Mathematics, New York: Simon and Schuster, 1956, p 1009.\n[Ulrich] Ulrich, Karl, \"The role of Product Architecture in the\nManufacturing Firm,\" Research Policy, v 24, 1995.\n[Ulrich and Eppinger] Ulrich, K. T., and Eppinger, S. D., Product Design and\nDevelopment, New York: Irwin, 2001.\n[Wall Street Journal] Clark, Don, \"Big Bet Behind Intel Comeback: In Chips,\nSpeed Isn't Everything,\" Wall Street Journal, Nov 18, 2003, page 1.\n[Weinstein] Weinstein, Sam, \"Power Management As a System-Level\nInhibitor of Modularity in the Mobile Computer Industry,\" MIT SDM\nThesis, January 2004.\n[Whitney, Nevins, De Fazio and Gustavson] Whitney, D E, Nevins, J L, De\nFazio, T L, and Gustavson, R E, \"Problems and Issues in Design and Manufacture\nof Complex Electro-mechanical Systems,\" C S Draper Lab Report R- 2577, Dec.,\n1993.\n[Whitney, 1993] Whitney, D. E., \"Nippondenso Co. Ltd: A Case Study of\nStrategic Product Design,\" Research in Engineering Design, #5, Dec, 1993, pp 1\n20.\n[Whitney, 1996] Whitney, D. E. \"Why Mechanical Design Will Never be Like\nVLSI Design,\" Research in Engineering Design, (1996) 8: 125-138.\nMacintosh HD:Users:danielwhitney:Documents:Written\nItems:Physical_modularity21.doc"
    },
    {
      "category": "Resource",
      "title": "matlab_slides.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/eed5c4bfe2effb1024c6c4b7e644ed60_matlab_slides.pdf",
      "content": "Simple Network Analysis\nwith MatLab\nGergana Bounova\nESD.342\nFebruary 23, 2006\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nMatLab Basics\nOfficial MathWorks tutorial:\nhttp://www.mathworks.com/academia/student_center/tutorials/launchpad.html\nList of all MatLab functions\nhttp://www.mathworks.com/support/functions/alpha_list.html\nSearch by name, topic, description\nMatLab prompt:\n>> date\n>> help 'what'\n>> lookfor 'something'\n>> help lookfor\nLOOKFOR Search all M-files for keyword.\nSee also dir, help, who, what, which.\n>> diary (filename,on,off)\n>> load mydata.mat\n>> type filename.m (.txt)\n\nLoading data: ExcelLink, etc\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nWorking Example: Bike\nReferences: Daniel Whitney, \"Degree Correlations and Motifs in Technological\nNetworks\", Source: http://esd.mit.edu/WPS/esd-wp-2005-10.pdf\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGraph Representation in MatLab\nDepends on what you are going to do! Computation, extracting\ndata/properties, visualization...\nAdjacency matrix A\nnode by node (nxn), if i and j are connected A(i,j)=1, otherwise A(i,j)=0; for\nmultiple edges A(i,j)=2,3,...\nsum(A) = graph degree sequence (self-loops give an exception)\nIncidence matrix C\nnode by edge (nxm), if node i is an endpoint for edge j, then C(i,j)=1,\notherwise C(i,j)=0\nsum(C) = [2 2 2 ...2] - every edge has 2 endpoints\nCool formula: A = CxCT - 2I\nList: every node points to the nodes it's connected to\nText: for other programs input (Pajek)\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nMatLab Code I\n>> clear all\n>> % Load bike data\n>> load bike_data\n>> who\n>> size(adj_bike)\n>> size(deg_bike)\n>> deg_bike - sum(adj_bike)\n>> % Graph Representations **************************************************\n>> inc = adj2inc(adj_bike);\n>> size(inc)\n>> sum(inc) % should give a vector of 2s\n>> % num_edges = sum(sum(adj_bike))/2 for an undirected graph\n>> % should be same as second dimension of incidence matrix\n>> numedges = num_edges(adj_bike)\n>> % Lists\n>> str = adj2str(adj_bike);\n>> % number of children and number of degrees should be the same\n>> str(1).child\n>> degrees(1)\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGraph Diagnostics\nissymmetric.m: A=AT?\nissimple.m: are there self-loops or double edges?\nisdirected: A=AT?\nisconnected.m: is there a path from every node to\nevery other node?\nissparse.m: k << nxm, k - # of non-zero entries\nAll of the above return Boolean variables\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nMatLab Code II\n>> issymmetric(adj_bike)\nans =\n>> issimple(adj_bike)\nans =\n>> isdirected(adj_bike)\nans =\n>> isconnected(adj_bike)\nans =\nbikenet (Pajek)\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGraph Properties\nLOCAL\nGLOBAL\nshortest path (i-j)\nmean path length\nbetweenness (i)\nbetweenness distribution\ndegree (ave, max, in-out)\ndegree distributions\nclustering coefficient (i)\nmean clustering coeff.\nharmonic path length (i-j)\nmean harmonic path\nnumber of k-neighbors (i)\nk-neighbors distribution\ndiameter\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nMatLab Code III\ndegree distribution\n>> degree_dist(adj_bike)\nvertex degree\n>> clust_coeff(adj_bike)\nans = 0.3933\nfrequency\n>> diagnose_powerlaw?\nvertex ordered index\ndegree\ncumulative degree distribution\nhistogram\n>>ave_path_length(adj_bike)\nans = 0.9973\n>> diameter(adj_bike)\ndegree\nans = 9\ndegree_dist.m\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGraph Construction/Structure\nmin spanning tree\nconnected components\ndual graphs (dual.m)\nsubgraph and motifs\ngrowth models\nRandom, preferential, min-cost, max-span\nk-regular graphs\nrandom_graph.m\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nMatLab Code IV: Random Graphs\n>> adj = random_graph(10)\n>> adj = random_graph(10,0.1)\n>> adj = random_graph(10,0.1,20)\n>> adj = random_graph(10,0.1,20,'normal')\n>> adj = random_graph(10,0.1,20,'custom',@mypdf)\n>> degrees = [3 1 1 1];\n>> adj = graph_from_degrees(degrees)\n2 versions\n~ 50% success rate (in producing simple graphs)\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nBike Distribution Random Graphs\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nGergana Bounova\nESD.342\nFeb 23, 2006\nNetwork Visualization - Pajek\nhttp://vlado.fmf.uni-lj.si/pub/networks/pajek/\ndraw_circ_graph.m\nMatLab-Pajek:\n>> adj2pajek(adj,'graph.net')\nOpen graph.net in Pajek\nGtrl + G\n-1\n-0.5\n0.5\n-1\n-0.5\n0.5\nv1\nv2\nv3\nv4\nv5\nv6\nv7\nv8\nv9\nv10\nv11\nv12\nv13\nv14\nv15\nv16\nv17\nv18\nv19\nv20\nv21\nv22\nv23\nv24\nv25\nv26\nv27\nv28\nv29\nv30\nv31\nv32\nv33\nv34\nv35\nv36\nv37\nv38\nv39\nv40\nv41\nv42\nv43\nv44\nv45\nv46\nv47\nv48\nv49\nv50\nv51\nv52\nv53\nv54\nv55\nv56\nv57\nv58\nv59\nv60\nv61\nv62\nv63\nv64\nv65\nv66\nv67\nv68\nv69\nv70\nv71\nv72\nv73\nv74\nv75\nv76\nv77\nv78\nv79\nv80\nv81\nv82\nv83\nv84\nv85\nv86\nv87\nv88\nv89\nv90\nv91\nv92\nv93\nv94\nv95\nv96\nv97\nv98\nv99\nv100\nv101\nv102\nv103\nv104\nv105\nv106\nv107\nv108\nv109\nv110\nv111\nv112\nv113\nv114\nv115\nv116\nv117\nv118\nv119\nv120\nv121\nv122\nv123\nv124\nv125\nv126\nv127\nv128\nv129\nv130\nv131\n\nSpecialized (Engineering) Metrics\nRobustness:\nTopological: if you knock out x% of nodes/edges,\nhow many % survive\nFunctional: by how much (%-wise) function degrades\nSpan, coverage, geometry considerations\nCost, performance\ntotal launch mass (space), network throughput, comm\nlink costs, number of cities served\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nOff the Shelf (MatLab Functions)\ndist, pdist, linkage, dendrogram, cluster, kmeans\nSimulink (circuits), neural net toolbox, comp bio\ntoolbox\nStatistics toolbox: distributions\nList of all MatLab functions\nhttp://www.mathworks.com/support/functions/alp\nha_list.html\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nYour Own Toolbox\nWrite functions\nSave them in the same directory\nSet workpath (accessible from anywhere)\nHave Fun!\nGergana Bounova\nESD.342\nFeb 23, 2006\n\nAppendix: tutorial.m\n% MatLab tutorial script\n% Gergana Bounova, February 22, 2006\nclear all\n% Load bike data\nload bike_data\nwho\nsize(adj_bike)\nsize(deg_bike)\n% Graph Representations ********************************\ninc = adj2inc(adj_bike);\nsize(inc)\nsum(inc) % should give a vector of 2s\n% num_edges = sum(sum(adj_bike))/2 for an undirected graph\n% should be same as second dimension of incidence matrix\nnumedges = num_edges(adj_bike)\n% Lists\nstr = adj2str(adj_bike);\n% number of children and number of degrees should be the same\nstr(1).child\ndegrees(1)\nGergana Bounova\nESD.342\nFeb 23, 2006\n% Graph Diagnostics ***********************************\nissymmetric(adj_bike)\nissimple(adj_bike)\nisdirected(adj_bike)\nisconnected(adj_bike)\n% Global metrics\ndegree_dist(adj_bike)\nclust_coeff(adj_bike)\ndiameter(adj_bike)\nave_path_length(adj_bike)\nbetweenness(adj_bike)\nharmonic_path_length(adj_bike)\n% Graph construction ***********************************\nrandom_graph(10)\nrandom_graph(10,0.1,20)\nrandom_graph(10,0,0,'normal')\nrandom_graph(10,0,0,'custom',@mypdf)\ndegs = [3 1 1 1];\nrandom_graph(10,0,0,'custom',@mypdf,degs)\nadj_bike1 = graph_from_degrees(degs);\n% Graph visualization ***********************************\nadj2pajek(adj_bike,'bike.net');"
    },
    {
      "category": "Resource",
      "title": "ucinet_slides.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/esd-342-advanced-system-architecture-spring-2006/30e24548b8916e91c49d1977a91a9dcb_ucinet_slides.pdf",
      "content": "Simple Network Analysis\nwith UCINET\nMo\n-Han Hsieh\nESD.342\nFeb. 28, 2006\nEngineering Systems Division\nMo-Han Hsieh\n\nAgenda\n- UCINET Basics\n- The UCINET Environment\n- A Quick Demo\n- Import Data\n- Export Data\n- Data Processing\n- Tips of Using UCINET\nEngineering Systems Division\nMo-Han Hsieh\n\nUCINET Basics\n- Official User's Guide of UCINET\n- http://www.analytictech.com/Ucinet_Guide.doc\n- Official UCINET Tutorial\n- http://faculty.ucr.edu/~hanneman/nettext/\n- Help in UCINET\n- Help > Help Topics\n- Contents: Introduction Section, DL, and Standard Datasets.\n- Index: search by keywords.\nEngineering Systems Division\nMo-Han Hsieh\n\nThe UCINET Environment (I)\n- Main window\n- File, Data, Transform, Tools, Network,\nOptions, and Help.\nEngineering Systems Division\nMo-Han Hsieh\n\nThe UCINET Environment (II)\n- The UCINET dataset\n- One dataset consists of Two files.\n- File with extension ##D: actual data.\n- File with ext. ##H: information about the data.\n- In referring to a dataset, refer to the .##H file.\nEngineering Systems Division\nMo-Han Hsieh\n\nThe UCINET Environment (III)\nThe UCINET Environment (III)\n- A typical UCINET procedure\nInput Parameters\nOutput Text\nProcedure\nInput Datasets\nOutput Datasets\n- Output text in Log Files\n- File>View Previous Output...\nEngineering Systems Division\nMo-Han Hsieh\n\nA Quick Demo\n- Dataset: KNOKBUR (.##H & .##D)\n- 10 organizations and two relationships.\n- Directed graph.\n- Money exchange in one matrix, and\ninformation exchange in the other.\n- See Knoke & Kuklinski (1982) for details.\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window: Data>Display...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Set Filename:\nKNOKBUR.##H\nEngineering Systems Division\nMo-Han Hsieh\n\nOutput log #1\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window: Draw\nFile>Open>\nUcinet dataset>N\network\nEngineering Systems Division\nMo-Han Hsieh\n\nName of file to open: KNOKBUR.##H\nEngineering Systems Division\nMo-Han Hsieh\n\nGraph representation of the network\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window:\nNetwork>Centrality>Degree...\nEngineering Systems Division\nMo-Han Hsieh\n\nInput dataset: KNOKBUR.##H\nEngineering Systems Division\nMo-Han Hsieh\n\nOutput log #2\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window:\nFile>View Previous Output...\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window:\nData>Spreadsheets>Matrix\nEngineering Systems Division\nMo-Han Hsieh\n\nUCINET Spreadsheet:\nFile>Open>\nFreemanDegree.##h\nEngineering Systems Division\nMo-Han Hsieh\n\nSpreadsheet of\nFreemanDegree.##h\nEngineering Systems Division\nMo-Han Hsieh\n\nImport Data\n- UCINET spreadsheet\n- Adjacency matrix\n- Manually input data or cut and paste from elsewhere\n- From Excel file\n- DL format\n- Full matrix & rectangular matrix\n- Multiple matrices\n- nodelist1 & nodelist2\n- ranklist1\n- edgelist1 & edgelist2\n- More information about DL language\n- Main window: Help>Help Topics>Contents>DL\nEngineering Systems Division\nMo-Han Hsieh\n\nUCINET spreadsheet\nData>Spreadsheets>Matrix\nEngineering Systems Division\nMo-Han Hsieh\n\nManually Input Adjacency Matrix\nEngineering Systems Division\nMo-Han Hsieh\n\nImport Adjacency Matrix from an Excel File\nEngineering Systems Division\nMo-Han Hsieh\n\nData>Import>Excel matrix\nEngineering Systems Division\nMo-Han Hsieh\n\nExcel file to import:\nExcel file to import: KNOKBUR_Example.xls\nKNOKBUR_Example.xls\nOutput dataset:\nKNOKBUR_Example\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: Full Matrix\n- Full Matrix Format\ndl n=4 format=fullmatrix\ndata:\n0 1 1 0\n1 0 1 1\n1 1 0 0\n0 1 0 0\n- Save it as a text file (e.g. TEST.txt).\nEngineering Systems Division\nMo-Han Hsieh\n\nData>Import>DL...\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: Rectangular Matrices\ndl nr = 6, nc = 4\ndata:\n0 1 1 0\n1 0 1 1\n1 1 0 0\n0 1 0 0\n1 0 1 1\n1 1 0 0\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: Labels\n- DL file may contain labels of the nodes\ndl n=4\nlabels:\nMIT, \"MIT ESD\", MIT.ESD.342, ESD_Students\ndata:\n0 1 1 0\n1 0 1 1\n1 1 0 0\n0 1 0 0\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: Multiple Matrices\ndl n = 4, nm = 2\nlabels:\nGroupA,GroupB,GroupC,GroupD\nmatrix labels:\nMarriage,Business\ndata:\n0 1 0 1\n1 0 0 0\n0 0 1 0\n1 0 0 1\n!\n0 1 1 1\n1 0 0 0\n1 0 0 1\n1 0 1 0\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: External Data\n- Data file can be read from other sources\ndl n = 8\nlabels:\na1,a2,a3,a4,a5,a6,a7,a8\ndatafile C:\\DATA\\External_Data.DAT\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: nodelist1 (I)\ndl n = 4, format = nodelist1\nlabels:\nA,B,C,D\ndata:\n1 2 3\n2 1 3 4\n3 1 2\n4 2\nD\nC\nB\nA\nD\nC\nB\nA\nResulting Matrix =>\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: nodelist1 (II)\ndl n = 4, format = nodelist1\nlabels:\nA,B,C,D\ndata:\nResulting Matrix =>\n1 2 3\nA B\nC D\n2 1 3\nA 0\n2 4\nB 1\n3 1 2\nC 1\n4 2\nD 0\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: nodelist1 (III)\ndl n = 4, format = nodelist1\nlabels embedded\ndata:\nA B C\nB A C D\nC A B\nD B\nD\nC\nB\nA\nD\nC\nB\nA\nResulting Matrix =>\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: nodelist2\ndl nr=3, nc=4 format = nodelist2\nrow labels embedded\ncolumn labels embedded\ndata:\nGP1 A B\nGP2 C D\nGP3 A D\nGP3\nGP2\nGP1\nD\nC\nB\nA\nResulting Matrix =>\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: ranklist1\ndl n=4 format = ranklist1\nlabels embedded\ndata:\nA B C\nB C D A\nC A B D\nD A C\nD\nC\nB\nA\nD\nC\nB\nA\nResulting Matrix =>\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: edgelist1\ndl n=4 format = edgelist1\nlabels:\nA,B,C,D\ndata:\n1 2 1\n1 3 2\n2 1 1\nResulting Matrix =>\nA B\nC D\n2 3 1\nA 0\n2 4\nB 1\n3 1 1\n3 2 na\nC 1\n4 2 5.2\nD 0\n5.2 0\nEngineering Systems Division\nMo-Han Hsieh\n\nDL Format: edgelist2\ndl nr=3 nc=5, format = edgelist2\nlabels embedded:\ndata:\nA1 B1 1\nA1 B2 1.5\nResulting Matrix =>\nA1 B3 2\nA2 B1 1\nA3 B2 3\nA3 B4 2\nA3 B5 1\nB1 B2 B3 B4 B5\nA1 1\n1.5 2\nA2 1\nA3 0\nEngineering Systems Division\nMo-Han Hsieh\n\nExport Data\n- Export UCINET dataset to\n- Excel file\n- Number of columns < 257\n- DL format\n- Easy to do cut and paste\n- Example: Cut and paste as a Matlab data file.\n- Other format\nEngineering Systems Division\nMo-Han Hsieh\n\nExport Dataset\nData>Export>DL...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\n- Most of the data processing functions are\nin Data and Transform submenus.\n- Some useful functions\n- Data>Affiliations...\n- Data>Extract...\n- Data>Remove isolates\n- Data>Join...\n- Data>Permute...\n- Data>Transpose...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Affiliations...\nEngineering Systems Division\nMo-Han Hsieh\n\nConvert 2\n-mode data to 1-mode\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Extract...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Remove isolates\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Join...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Permute...\nEngineering Systems Division\nMo-Han Hsieh\n\nData Processing\nData>Transpose...\nEngineering Systems Division\nMo-Han Hsieh\n\nMain window: Transform\nEngineering Systems Division\nMo-Han Hsieh\n\nTips of Using UCINET\n- Before using an UCINET function\n- Check it out in Help>Help Topics>Index\n- Purpose, Description, Parameters, Log File, Timing, Comments,\nand References.\n- Timing is sometimes important\n- Function with O(N^3) can be a problem for networks with\nmore than 1,000 nodes.\n- Setup the following two directories before start\nworking with the UCINET\n- File>Change Default Folder...\n- Options>Output folder\nEngineering Systems Division\nMo-Han Hsieh\n\nReferences\n- Borgatti, Everett and Freeman, UCINET 6\nfor Windows: User's Guide. Harvard:\nAnalytic Technologies.\n- Borgatti, S.P., Everett, M.G. and Freeman,\nL.C. 2002. Ucinet 6 for Windows. Harvard:\nAnalytic Technologies.\nEngineering Systems Division\nMo-Han Hsieh"
    }
  ]
}