{
  "course_name": "Knowledge-Based Applications Systems",
  "course_description": "This course covers the development of programs containing a significant amount of knowledge about their application domain. The course includes a brief review of relevant AI techniques; case studies from a number of application domains, chosen to illustrate principles of system development; a discussion of technical issues encountered in building a system, including selection of knowledge representation, knowledge acquisition, etc.; and a discussion of current and future research. The course also provides hands-on experience in building an expert system (term project).",
  "topics": [
    "Business",
    "Information Technology",
    "Engineering",
    "Computer Science",
    "Artificial Intelligence",
    "Data Mining",
    "Software Design and Engineering",
    "Business",
    "Information Technology",
    "Engineering",
    "Computer Science",
    "Artificial Intelligence",
    "Data Mining",
    "Software Design and Engineering"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nPrerequisites\n\n6.034\n, equivalent course, or equivalent experience.\n\nReadings\n\nThere are substantial readings from original literature that go with each lecture. A series of short reading summary assignments will accompany the readings in order to help students focus on the important issues and to give credit for doing the reading.\n\nLectures\n\nStudents are expected to have done the reading and to participate in class discussion.\n\nAssignments and Grading\n\nThe main components of the course are the Term Project, Project Reports, Problem Sets, and Reading Summaries. For details, please see the\ncalendar\n. Grades in the course will be determined by the term project (including your paper describing the project and your presentation of it), by your participation in class, and by performance on homework assignments (project reports, problem sets, reading summaries).",
  "files": [
    {
      "category": "Resource",
      "title": "joshua_reference.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/0060b0387118dcf889f73f033b069d42_joshua_reference.pdf",
      "content": "Joshua Reference Manual\n\niii\nMarch 1999\nTable of Contents\nTable of Contents\nPage\nOverview\nof\nAdvanced\nJoshua\nConcepts\n1.1\nThe\nJoshua\nProtocol\nof\nInference\n1.2\nThe\nDefault\nImplementation\nof\nthe\nProtocol\n1.3\nCustomizing\nthe\nJoshua\nProtocol\nStoring\nand\nRetrieving\nKnowledge\nin\nJoshua:\nthe\nVirtual\nDatabase\n2.1\nWhat\nis\na\nVirtual\nDatabase?\n2.2\nPredications\nas\nInstances\n2.3\nThe\nJoshua\nDatabase\nProtocol\n2.3.1\nThe\nContract\nof\nthe\nGeneric\nFunction\njoshua:insert\n2.3.2\nThe\nContract\nof\nthe\nGeneric\nFunctions\njoshua:askdata\nand\njoshua:fetch\n2.3.3\nThe\nContract\nof\nthe\nGeneric\nFunction\njoshua:uninsert\n2.3.4\nThe\nContract\nof\nthe\nGeneric\nFunction\njoshua:clear\n2.4\nJoshua's\nDefault\nDatabase:\nthe\nDiscrimination\nNet\n2.4.1\nOrganization\nof\nthe\nDefault\nDiscrimination\nNet\nThe\nJoshua\nRule\nFacilities\n3.1\nAdvanced\nFeatures\nof\nJoshua\nRules\n3.2\nThe\nJoshua\nRule\nCompiler\n3.2.1\nThe\nForward\nRule\nCompiler\n3.2.2\nThe\nBackward\nRule\nCompiler\n3.3\nOrdering\nRule\nExecution\n3.4\nControlling\nRule\nInvocation\n3.5\nThe\nJoshua\nRule\nIndexing\nProtocol\n3.5.1\nThe\nContract\nof\nthe\nTrigger\nAdding\nFunctions\n3.5.2\nThe\nContract\nof\nthe\nTrigger\nDeleting\nFunctions\n3.5.3\nThe\nContract\nof\nthe\nTrigger\nLocating\nFunctions\n3.5.4\nThe\nContract\nof\nthe\nTrigger\nMapping\nFunctions\nThe\nJoshua\nQuestion\nFacilities\n4.1\nControlling\nQuestion\nInvocation\n4.2\nThe\nJoshua\nQuestion\nIndexing\nProtocol\n4.2.1\nThe\nContract\nof\njoshua:addbackwardquestiontrigger\n4.2.2\nThe\nContract\nof\njoshua:deletebackwardquestiontrigger\n4.2.3\nThe\nContract\nof\njoshua:locatebackwardquestiontrigger\n4.2.4\nThe\nContract\nof\njoshua:mapoverbackwardquestion\ntriggers\n\niv\nTable of Contents\nMarch 1999\nTruth\nMaintenance\nFacilities\n5.1\nThe\nTruth\nMaintenance\nProtocol\n5.1.1\nThe\nContract\nof\nthe\nJoshua\nTMS\nProtocol\nFunctions\n5.1.2\nThe\nContract\nof\na\nJoshua\nTMS\nJustification\n5.1.3\nTMS\nUtility\nRoutines\n5.1.4\nSignalling\nContradictions\nand\nManaging\nBacktracking\n5.1.5\nSignalling\nTruth\nValue\nChanges\n5.2\nThe\nJoshua\nLTMS\n5.2.1\nClause\nJustification\nStructures\nJoshua\nMetering\n6.1\nJoshua\nMetering\nTypes\n6.1.1\nJoshua\nTell\nMetering\n6.1.2\nJoshua\nAsk\nMetering\n6.1.3\nJoshua\nMerge\nMetering\n6.2\nChoosing\nJoshua\nMetering\nTypes\nControlling\nData\nand\nRule\nIndexing\n7.1\nCustomizing\nthe\nData\nIndex\n7.1.1\nCustomizing\nthe\nData\nIndex\nWithout\nStoring\nPredications\n7.2\nCustomizing\nthe\nRule\nIndex\n7.3\nCustomizing\nthe\nRule\nCompiler\n7.3.1\nCustomizing\nthe\nMatchers\nGenerated\nby\nthe\nRule\nCompiler\nThe\nJoshua\nObject\nFacility\n8.1\nIntroduction\nto\nthe\nJoshua\nObject\nFacility\n8.2\nBasic\nCapabilities\nof\nthe\nJoshua\nObject\nFacility\n8.3\nUsing\nPaths\nto\nRefer\nto\nthe\nStructure\nof\nan\nObject\n8.4\nType\nHierarchy\nin\nthe\nJoshua\nObject\nFacility\n8.5\nPartWhole\nHierarchy\nin\nthe\nJoshua\nObject\nFacility\n8.6\nOther\nCapabilities\nof\nSlots\n8.6.1\nInitial\nValues\nof\nSlots\n8.6.2\nSet\nValued\nand\nSingle\nValued\nSlots\n8.6.3\nSlots\nand\nTruth\nMaintenance\n8.6.4\nSlots\nand\nAttached\nActions\n8.6.5\nInvoking\nMethods\nAssociated\nwith\nthe\nObject\nAssociated\nwith\na\nSlot\n8.6.6\nEqualities\nBetween\nSlot\nValues\n8.7\nOther\nOptions\nin\nDefineObjectType\n8.8\nThe\nPredicates\nUsed\nin\nthe\nJoshua\nObject\nFacility\nJoshua\nLanguage\nDictionary\n9.1\nDictionary\nEntries\n\nv\nMarch 1999\nList of Figures\nList of Figures\nPage\nThe\nJoshua\nProtocol\nof\nInference\nType\nNetwork\nfor\nnonTMS\nPredicates\nType\nNetwork\nfor\nLTMS\nPredicates\nThe\nDefault\nImplementation\nof\nthe\nProtocol\nof\nInference\nThe\ntell\ndataindexing\nprotocol\nand\nits\ndefault\nimplementation\nThe\naskdata\nprotocol\nand\nits\ndefault\nimplementation\nThe\nuntell\nprotocol\nand\nits\ndefault\nimplementation\nThe\nclear\nprotocol\nand\nits\ndefault\nimplementation\nSample\nDiscrimination\nNet\nDisplay\nSummary\nof\nJoshua\nRule\nOperation\nSample\nRete\nNetwork\nSample\nRete\nNetwork\nDisplay\nSample\nRete\nNetwork\nDisplay\nwith\nFilter\nNodes\nSample\nRete\nNetwork\nDisplay\nwith\nor\nNode\nRete\nNetwork\nFor\nRule\nwith\nNested\nAnds\nRule\nIndexing\nProtocol\nThe\nTriggerAdding\nProtocol\nand\nDefault\nImplementation\nThe\nTriggerDeleting\nProtocol\nand\nDefault\nImplementation\nThe\njustify\nprotocol\nand\nits\ndefault\nimplementation\nThe\naskrules\nprotocol\nand\nits\ndefault\nImplementation\nThe\nQuestion\nProtocol\nThe\nQuestion\nTrigger\nAdding\nProtocol\nand\nDefault\nImplementation\nThe\nQuestion\nTrigger\nDeleting\nProtocol\nand\nDefault\nImplementation\nThe\naskquestions\nprotocol\nand\nits\ndefault\nimplementation\nExample\nTrace\nof\nCondition\nHandler\nExample\nof\nsetting\nup\na\nnogood\nclause\nTell\nmetering\nof\nthe\nunmodelled\ngoodtoeat\npredicate.\nTell\nmetering\nof\nthe\nmodelled\ngoodtoeat\npredicate.\nKnowledge\nStructures\nCan\nBe\nDiversely\nImplemented\nGraph\nof\nthe\nMixed\nChaining\nRule\nFoo\nTrace\nof\nThe\nMixed\nChaining\nRule\nFoo\nGraph\nof\nMixed\nChaining\nRule\nFoo\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nPredications\nBeing\nMapped\ninto\nan\nObject\nRepresentation\nOther\nCapabilities\nof\nthe\nObject\nFacility\nA\nResistor\nand\nits\nRepresentation\nas\nan\nObject\nThe\nObjectType\nHierarchy\nof\nTwoTerminal\nDevices\nEquality\nLinks\nin\na\nTwo\nResistor\nVoltage\nDivider\nGraph\nof\nthe\nMixed\nChaining\nRule\nFoo\n\nvi\nList of Figures\nMarch 1999\nTrace\nof\nThe\nMixed\nChaining\nRule\nFoo\nGraph\nof\nMixed\nChaining\nRule\nFoo\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\n\nMarch 1999\nOverview of Advanced Joshua Concepts\n1. Overview of Advanced Joshua Concepts\nJoshua\nis\nan\nextensible\nsoftware\nproduct\nfor\nbuilding\nand\ndelivering\nexpert\nsystem\napplications.\nIt\nis\nimplemented\non\nthe\nSymbolics\nand\nIvory\nfamilies,\non\ntop\nof\nthe\nSymbolics\nGenera\nenvironment.\nJoshua\nis\noptimized\nfor\napplications\nwhere\nper\nformance\nand\ndelivered\nfunctionality\nare\nimportant.\nUser's\nGuide\nto\nBasic\nJoshua,\nthe\nfirst\nmanual\nin\nthe\nJoshua\ndocumentation\nset,\ngives\nan\nintroduction\nto\nthe\nJoshua\nlanguage\nand\ndevelopment\nenvironment.\nIt\ncov\ners\neverything\nyou\nneed\nto\nknow\nto\nprogram\nusing\nJoshua's\nbuiltin\nfacilities.\nAmong\nJoshua's\nstrengths\nis\nthat\nthis\nsystem\nis\na\ncoherent,\nmultilevel\nenviron\nment,\nmaking\nadvanced\nfeatures\navailable\nwhen\nyou\nneed\nthem.\nJoshua\nis\nbuilt\naround\nsome\ncore\nfunctions,\nthe\nProtocol\nof\nInference,\nwhich\nare\naccessible\nto\nthe\nuser\nfor\nmodification.\nThis\nmodularity\nand\naccessibility\noffer\npowerful\nadvanced\nfeatures:\nuser\ninterfaces,\ncontrol\nstructures,\nstorage\nstructures\ncan\nall\nbe\ncustomized\nto\nreflect\nwhat\nis\nmost\nnatural\nfor\nthe\napplication;\nexternal\ndatabases\ncan\nbe\naccessed;\nexisting\nsoftware\ntools\ncan\nbe\nseamlessly\nintegrated\ninto\nthe\nJoshua\napplication;\nperformance\ncan\nbe\nfinetuned.\nThis\ndocumentation\nvolume,\nJoshua\nReference\nManual,\ndescribes\nin\ndetail\nthe\npro\ntocol\nof\ninference\nand\nthe\ndefault\nimplementation\nof\nthat\nprotocol\nsupplied\nas\npart\nof\nthe\nJoshua\nsystem.\nIn\naddition,\nit\ndescribes\nhow\nyou\ncan\ncustomize\nJoshua\nto\nyour\nown\nparticular\napplication.\nWe\noften\nrefer\nto\nthis\ntailoring\nor\ncustomization\nprocess\nas\nmodeling.\nThe\nspecific\ntopics\ncovered\nhere\ninclude:\n-\nThe\nDatabase\nProtocol\n-\nThe\nDefault\nDiscrimination\nNet\n-\nThe\nRule\nCompiler\n-\nThe\nRule\nIndexing\nProtocol\n-\nThe\nQuestion\nIndexing\nProtocol\n-\nThe\nTruth\nMaintenance\nFacilities\n-\nThe\nJoshua\nLTMS\n-\nControlling\nData\nand\nRule\nIndexing\nThe\nimplementation\nof\nthe\nJoshua\nprotocol\nof\ninference\ndepends\nheavily\non\nthe\nob\njectoriented\nprogramming\nfacilities\nof\nSymbolics\nCommon\nLisp.\nThese\nsame\nfea\ntures\nwill\nbe\nincluded\nin\nthe\nCommon\nLisp\nObject\nSystem.\nA\nworking\nknowledge\nof\n\nOverview of Advanced Joshua Concepts\nMarch 1999\nthe\nconcepts\nof\nthis\nstyle\nof\nobjectoriented\nprogramming\nwill\nbe\nhelpful\nin\nunder\nstanding\nhow\nto\ncustomize\nthe\nprotocol\nof\ninference.\nFor\nmore\ninformation,\nsee\nthe\nsection \"Flavors\"\nin\nSymbolics\nCommon\nLisp\nProgramming\nConstructs.\n1.1. The Joshua Protocol of Inference\nEach\ndifferent\nJoshua\npredicate\nis\nimplemented\nas\nan\nobject\ntype\n(flavor\nin\nSym\nbolics\nCommon\nLisp\nterminology,\nclass\nin\nthe\nCommon\nLisp\nObject\nSystem).\nEach\nprotocol\nstep\nis\nimplemented\nas\na\ngeneric\nfunction,\nso\nthat\ngeneric\ndispatch\ncan\nse\nlect\nthe\nmethod\nappropriate\nfor\nthat\nfunction\nand\nthat\npredicate.\nBy\ndefining\nyour\nown\nmethods\nfor\nprotocol\nfunctions\nfor\nparticular\npredicates\nor\ngroups\nof\npredi\ncates,\nyou\ncustomize\nJoshua's\nbehavior\nfor\nthose\nfunctions\nand\npredicates.\nThe\nprotocol\nof\ninference\nis\na\nway\nof\ngrouping\nthe\nmany\nsteps\nof\nthe\ninferencing\nprocess\ninto\na\nfunctional\nhierarchy.\nFigure1\nshows\nthe\nhierarchy\nof\ngeneric\nfunc\ntions.\nThis\ngrouping\nof\nthe\nprotocol\nfunctions\nsplits\nthe\nprotocol\ninto\nrelatively\nindepen\ndent\nparts.\nFor\nexample,\nan\nimplementation\nof\nthe\nTMS\nprotocol\nshould\nwork\nwith\njust\nabout\nany\nimplementation\nof\nthe\ndatabase\ninterface.\nThis\nindependence\nen\nhances\nsharing\nof\ncode\nbetween\ndifferent\napplications,\nand\nmakes\nthe\nwhole\nproto\ncol\neasier\nto\nunderstand.\nThe\nprotocol\nimposes\na\nlevel\nof\nmodularity\non\nyour\napplication\nwhich\nwill\nhelp\nyou\norganize\nyour\nprogram\nand\nthink\nabout\nits\nmany\nparts\nin\na\nmore\ncoherent\nway.\nConversely,\nthe\nmany\nlevels\nof\nthe\nprotocol\nallow\nyou\nto\ncustomize\nthe\nprotocol\nwith \"just\nthe\nright\namount\"\nof\neffort.\nAlthough\ncomprehensive\nchanges\nmay\nre\nquire\nsignificant\neffort,\nsimple\nchanges\nrequire\nminimal\neffort.\nIn\nall\ncases,\nthe\ncareful\norganization\nand\ndefinition\nof\nthe\nprotocol\nwill\nmake\nyour\napplications\neasi\ner\nto\ndesign,\nbuild,\nand\nunderstand.\n1.2. The Default Implementation of the Protocol\nThe\nJoshua\nsystem\nprovides\na\ncomplete\nimplementation\nof\nthe\nprotocol\nof\ninfer\nence.\nWe\nrefer\nto\nthis\nas\nthe\ndefault\nimplementation,\nto\nencourage\ncustomization\nof\nthe\nprotocol.\nWe\nexpect\nthat\nthe\ndefault\nimplementation\nwill\nbe\nperfectly\nadequate\nfor\nprototyping\nand\nfor\nlarge\nparts\nof\nproductionquality\napplications.\nWhere\nthe\ndefault\nimplementation\nis\nlacking,\neither\nin\nfeatures\nor\nperformance,\ncustomization\ncan\nbe\ndone.\nThe\nfinegrained\ncontrol\noffered\nby\nJoshua\nallows\nthis\ncustomization\nto\nbe\napplied\nwhere\nnecessary,\nwhile\nthe\nrest\nof\nan\napplication\ncan\ncontinue\nto\nuse\nthe\ndefault\nimplementation.\nThe\ndefault\nimplementation\nof\nthe\nprotocol\nof\ninference\nis\nprovided\nby\na\nset\nof\nob\nject\ntypes\n(flavors\nin\nthe\ncurrent\nimplementation)\nwhich\nhave\nmethods\ndefined\nfor\nall\nthe\ngeneric\nfunctions\nof\nthe\nprotocol.\nThe\nobject\ntypes\nare\narranged\nso\nthat\nthey\nmay\nbe\nused\neither\nby\nthe\ndefault\nimplementation\nor\nby\nuserdefined\nimple\nmentations.\nFigure2\nshows\nthe\nnetwork\nof\ntypes\nused\nby\nthe\ndefault\nimplementa\ntion\nof\nnonTMS\npredicates,\njoshua:defaultpredicatemodel.\n\nMarch 1999\nOverview of Advanced Joshua Concepts\nRULE-INDEXING PROTOCOL\nadd-forward-rule-trigger\ndelete-forward-rule-trigger\nmap-over-forward-rule-triggers\nUSER INTERFACE\nadd-backward-question-trigger\nsay\ndelete-backward-question-trigger\nlocate-backward-question-trigger\nRULE CUSTOMIZATION PROTOCOL\nexpand-forward-rule-trigger\nexpand-backward-rule-action\npositions-forward-rule-matcher-can-skip\nlocate-forward-rule-trigger\nadd-backward-rule-trigger\ndelete-backward-rule-trigger\nlocate-backward-rule-trigger\nmap-over-backward-rule-triggers\nTMS PROTOCOL\njustify\nunjustify\nsupport\nnotice-truth-value-change\nDATABASE INTERFACE\ninsert\ntell\nclear\nask\nask-data\nfetch\nuntell\nuninsert\nnontrivial-tms-p\ncurrent-justification\nall-justifications\nQUESTION PROTOCOL\nmap-over-backward-question-triggers\nact-on-truth-value-change\nprefetch-forward-rule-matches\nwrite-backward-rule-matcher\nwrite-forward-rule-semi-matcher\nwrite-forward-rule-full-matcher\nask-rules ask-questions\n\nOverview of Advanced Joshua Concepts\nMarch 1999\nFigure\n1.\nThe\nJoshua\nProtocol\nof\nInference\nFigure\n2.\nType\nNetwork\nfor\nnonTMS\nPredicates\nFigure\nshows\nthe\nnetwork\nof\ntypes\nfor\nthe\nLTMS\nimplementation,\nltms:ltms\npredicatemodel.\nFigure\n3.\nType\nNetwork\nfor\nLTMS\nPredicates\nNotice\nthat\nit\nis\nbuilt\nby\nadding\nltms:ltmsmixin\nto\njoshua:defaultpredicate\nmodel,\nand\nso\nincludes\nas\na\nsubgraph\nall\nthe\nparts\nof\njoshua:defaultpredicate\nmodel.\nSo\nthe\nbasic\npredicate\nbehavior\nof\nLTMS\npredicates\nin\nthe\ndefault\nLTMS\nmodel\ncomes\nfrom\njoshua:defaultpredicatemodel,\nand\nltms:ltmsmixin\nprovides\nthe\nTMS\nbehavior.\nFigure\nshows\nwhich\nmethods\nare\nassociated\nwith\neach\ncomponent\nof\nthe\nimple\nmentation\nobject\ntypes.\nThe\nimplementation\ntechniques\nchosen\nfor\nthe\ndefault\nshould\nbe\nefficient\nover\na\nwide\nrange\nof\nJoshua\nprograms\nand\napplications.\nThese\ntechniques\nare\nrobust\nand\ngeneral.\nParticular\nattention\nhas\nbeen\npaid\nto\noptimizing\nthem\nfor \"typical\"\nappli\ncations,\nand\nthey\nshould\nprove\nsufficient\nfor\nmost\nJoshua\nprogrammers'\nneeds.\nIn\naddition,\nthe\ndefault\nimplementation\nhas\nbeen\noptimized\nfor\nthe\nSymbolics\nCommon\nLisp\nand\nGenera\nenvironment.\n\nMarch 1999\nOverview of Advanced Joshua Concepts\nFigure\n4.\nThe\nDefault\nImplementation\nof\nthe\nProtocol\nof\nInference\n1.3. Customizing the Joshua Protocol\nWhen\nthe\ndefault\nimplementation\nof\nthe\nprotocol\nof\ninference\nis\nlacking,\nwhether\nin\nfeatures\nor\nperformance,\nyou\nshould\ncustomize\nthe\nprotocol.\nSince\neach\nstep\nof\nthe\nprotocol\nof\ninference\nis\nimplemented\nas\na\ngeneric\nfunction,\nyou\ncan\ndefine\nyour\nown\nmethods\nfor\nthese\nfunctions.\nIn\nthis\nway\nyou\ncan\nmodify\nthe\nbehavior\nof\nJoshua.\nEach\nprotocol\nfunction\nhas\na\ncontract,\nor\nset\nof\nthings\nit\nmust\ndo.\nAs\nlong\nas\nthe\ncontract\nis\nfollowed,\nthe\nJoshua\nsystem\nwill\nfunction\ncor\nrectly.\nThe\ndefault\nimplementation\nsupplies\nmethods\nwhich\nimplement\neach\nproto\ncol\nfunction\ncorrectly.\nThe\ndefault\ntechniques\nhave\nbeen\nchosen\nto\nbe\nrobust,\ngen\neral,\nand\nefficient.\nHowever,\nfor\nany\nparticular\nproblem\nthere\nmay\nbe\nmore\neffi\ncient\nways\nto\nimplement\nparts\nof\nthat\nproblem.\nWe\nwill\ndescribe\neach\ngrouping\nof\nprotocol\nfunctions\nto\nshow\nthe\ndifferent\nways\nthat\nthe\nprotocol\ncan\nbe\ncustomized.\nAn\nimportant\nfeature\nof\nthe\nprotocol\nis\nthe\nmultilevel\nnature\nof\nthe\ngeneric\nfunction\ntree.\nThis\nallows\nfinegrained\ncontrol\nover\nthe\ncustomization,\nso\nthat\nyou\ncan\nspecify\nas\nmuch\nor\nas\nlittle\nof\nthe\nbehavior\nas\nyou\nneed.\nIf\nyou\ndefine\nmethods\nfor\nhighlevel\nfunctions,\nyou\nare\ntaking\nover\nmost\nor\nall\nof\nthe\nbehavior.\nIf\nyou\nwish\nto\nchange\nthe\nbehavior\nin\nless\ndrastic\nways,\nyou\nwould\ndefine\nmethods\nfor\nlowerlevel\nfunctions.\nDescriptions\nand\nexam\nples\nfor\neach\npart\nof\nthe\nprotocol\nwill\nexplain\nthe\nlevels\nand\nhow\nthe\ndifferent\nparts\nof\nthe\nprotocol\ninteract.\n\nOverview of Advanced Joshua Concepts\nMarch 1999\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\n2. Storing and Retrieving Knowledge in Joshua: the\nVirtual Database\n2.1. What is a Virtual Database?\nConceptually,\na\ndatabase\nis\nan\ninfinitely\nextensible\ncollection\nof\nfacts.\nIn\nJoshua,\na\ndatabase\nis\na\nstructure\nwhere\nyou\nstore\nstatements\ntogether\nwith\nassociated\ninfor\nmation,\nsuch\nas\ntruth\nvalues.\nThe\ndata\nis\nin\nthe\nform\nof\npredications.\nThe\nJoshua\ndatabase\nprotocol\nmakes\na\nvirtual\ndatabase\npossible.\nThat\nis,\nthe\nproto\ncol\ngives\nyou\nthe\ncapability\nto\nimplement\nyour\ndata\nstructures\nin\nany\nway\nsuitable\nto\nyour\nneeds;\nin\nfact,\nsince\ndifferent\ndata\nstructures\ncan\ncoexist,\nyou\ncan\nchoose\nthe\nbest\ndata\nrepresentation\nfor\neach\nindividual\nproblem\npiece.\nThis\nflexibility\nmeans\nyou\ncan\nminimize\nstorage\nand\nlookup\ntime\nfor\nparticular\nkinds\nof\ndata,\nthereby\nincreasing\nthe\nefficiency\nof\nyour\napplication.\nThe\nJoshua\ndatabase\nprotocol\nconsists\nof\nfive\ndatabase\ngeneric\nfunctions,\njoshua:insert,\njoshua:askdata,\njoshua:fetch,\njoshua:uninsert,\nand\njoshua:clear,\nthat\nare\nseparated\nfrom\nthe\ndatabase\nimplementation\nfunctions.\nThis\nmodular\norga\nnization\nprovides\nfor\na\nstable,\nconsistent\ninterface\nto\ndiversely\nimplemented\ndata\nstructures.\nJoshua's\ndefault\ndatabase\nis\nimplemented\nas\na\ndiscrimination\nnet.\nThis\nis\na\ngener\nalpurpose\ndata\nstructure,\ncommonly\nused\nin\nAI,\nthat\nis\nreasonably\nefficient\nover\na\nwide\nrange\nof\napplications.\nHowever,\nfor\na\nfixed\nproblem,\nyou\ncan\nusually\ndo\nbet\nter.\nThis\nchapter\ndiscusses\nthe\ngeneral\ncontract\nof\nthe\nfive\ndataindexing\nfunctions,\nas\nwell\nas\ntheir\ndefault\nimplementation.\nWe\nalso\ncover\nthe\norganization\nof\nthe\ndis\ncrimination\nnet.\n2.2. Predications as Instances\nPredications\nhave\na\ndual\nrole\nin\nJoshua.\nThey\nstore\ndata,\nand\nthus\nare\na\nknowl\nedge\nrepresentation,\nthat\nis\nthey \"mean\"\nsomething;\nthey\nalso\nhave\nprogram\nac\ntions\nassociated\nwith\nthem,\nand\nin\nthat\nsense\nthey \"do\"\nsomething.\nPredications\ncan\nbe\nremembered,\nasked\nabout,\nprinted,\nand\nso\non,\nas\nspecified\nby\nthe\ngeneric\nfunctions\nin\nthe\nJoshua\nprotocol.\nAlthough\npredications\nlook\nlike\nlists\nwith\nsquare\nbrackets,\nthey\nare\nreally\ninstances\nand\neach\nof\nthe\noperations\nyou\nperform\non\nthem\nis\na\ngeneric\nfunction.\n(Readtables\nchange\nbracketed\ninput\nto\nappropriate\njoshua:makepredication\nforms;\nprint\nmeth\nods\narrange\nfor\npredications\nto\nbe\nprinted\nwith\nbrackets.\nBut\nunderneath\nthe\nuser\ninterface,\npredications\nare\njust\ninstances.)\nThis\nlets\nJoshua\nkeep\ninterface\nand\nim\nplementation\nseparate\nin\ndealing\nwith\npredicates,\nin\nthe\nsame\nway\nthe\nFlavor\nsys\ntem\nseparates\ninterface\n(generic\nfunctions)\nfrom\nimplementation\n(methods).\nYou\nuse\njoshua:definepredicate\nto\nspecify\nthe\nimplementation\nfor\na\ngiven\npredicate\nby\nmixing\nin\nall\nits\nbase\nmodels\n(or\nflavors).\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\n2.3. The Joshua Database Protocol\nRecall\nthat\nthe\ninterface\nto\nthe\nJoshua\ndatabase\nis\ncontrolled\nby\nthe\nfour\nprotocol\ngeneric\nfunctions,\njoshua:tell,\njoshua:ask,\njoshua:untell,\nand\njoshua:clear.\njoshua:tell\nInserts\npredication\nobjects\n(predications\nand\nrelated\ninforma\ntion)\ninto\nthe\ndatabase.\njoshua:ask\nRetrieves\nthese\npredication\nobjects\nfrom\nthe\ndatabase.\njoshua:untell\nRemoves\na\npredication\nobject\nfrom\nthe\ndatabase.\njoshua:clear\nFlushes\nthe\ndatabase.\nEach\nof\nthese\nfour\nfunctions\ndispatches\nto\na\nmethod\nthat\ncalls\non\nother\ngeneric\nfunctions\nto\ndo\npart\nof\nits\nwork.\nThe\ngeneric\nfunctions\nthat\nmanage\nthe\ndata\nin\ndexing\nare:\njoshua:insert\nDoes\ndata\nindexing\nfor\njoshua:tell.\nPuts\na\npredication\nwhere\njoshua:fetch\ncan\nfind\nit.\njoshua:askdata\nPerforms\nunification\nand\ncalls\nthe\ncontinuation\non\nobjects\nre\ntrieved\nby\njoshua:fetch.\nIf\nthe\ndatabase\ndoes\nnot\nactually\nre\ntain\nthe\npredication\nyou\njoshua:tell,\njoshua:askdata\nis\nthe\nplace\nwhere\none\nshould\nbe\nreconstructed.\njoshua:fetch\nDoes\ndata\nindexing\nfor\njoshua:ask.\nFinds\na\npredication\nobject\nin\nthe\nplace\nthat\njoshua:insert\nput\nit.\njoshua:fetch\nalways\ncalls\nits\ncontinuation\non\na\npredication\nthat\nwas\nfound\nin\nthe\ndatabase.\njoshua:uninsert\nDoes\ndata\nindexing\nfor\njoshua:untell.\nRemoves\na\npredication\nobject\nfrom\nthe\nplace\nthat\njoshua:insert\nput\nit.\njoshua:clear\nThe\njoshua:clear\nmethod\ntakes\ncare\nof\ndata\nflushing,\nthat\nis,\nof\nresetting\nthe\ndatabase\nso\nthat\nit\nis\ncompletely\nempty.\nThe\nProtocol\nlets\nyou\nchange\nthe\nway\npredications\nare\nstored\nin\nthe\nvirtual\ndatabase.\nThe\nsection \"Customizing\nthe\nData\nIndex\"\ncovers\nthis\ntopic.\nThe\npoint\nto\nnote\nhere\nis\nthat\nif\nyou\ncustomize\nyour\ndatabase\nyou\nmust\nalways\nin\nclude\nmethods\nfor\nall\nfive\n(or\nsometimes\nfour)\ngeneric\nfunctions,\nnamely,\njoshua:insert,\njoshua:fetch\nor\njoshua:askdata,\njoshua:uninsert,\nand\njoshua:clear.\nThis\nis\nbecause\nthey\nmust\nbe\nconsistent\nin\ntheir\nfunctionality;\njoshua:tell\nmust\nknow\nwhere\nto\nput\ndata,\njoshua:ask\nand\njoshua:untell\nmust\nknow\nwhere\nto\nfind\ndata,\nand\njoshua:clear\nmust\nknow\nhow\nto\nflush\ndata.\n(It\nis\nnot\nalways\nnecessary\nto\nwrite\na\nnew\nmethod\nfor\njoshua:askdata,\nsince\nit\nrelies\non\njoshua:fetch\nfor\ndatabase\naccess.\nSimilarly,\njoshua:askdata\nwhen\ncustomized,\nmight\nnever\ncall\njoshua:fetch.)\njoshua:insert,\njoshua:fetch,\njoshua:askdata,\njoshua:uninsert,\nand\njoshua:clear\ndispatch\nto\nthe\nappropriate\nmethod\nfor\nthe\nmodel\nthe\npredicate\nis\nbuilt\non.\nThe\nde\nfault\nmethod\nfor\njoshua:ask\nis\non\ndefaultaskmodel.\nThe\ndefault\nmodel\nfor\npredi\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\ncations\nis\njoshua:discriminationnetdatamixin,\nwhich\nimplements\nthe\ngeneric\ndatabase\nas\na\ndiscrimination\nnet.\n(Note\nthat\nyou\nwould\nseldom\ncall\njoshua:insert\nor\njoshua:uninsert\ndirectly,\nexcept\nwhen\ndebugging\na\ndata\nmodel.)\nThe\ngeneral\ncontract\nof\njoshua:insert,\njoshua:askdata,\njoshua:fetch,\njoshua:uninsert,\nand\njoshua:clear,\nas\ndistinct\nfrom\ntheir\nparticular\nimplementa\ntion,\nis\ndetailed\nin\nthe\nfollowing\nsections:\"The\nContract\nof\nthe\nGeneric\nFunction\njoshua:insert\", \"The\nContract\nof\nthe\nGeneric\nFunctions\njoshua:askdata\nand\njoshua:fetch\", \"The\nContract\nof\nthe\nGeneric\nFunction\njoshua:uninsert\", \"The\nCon\ntract\nof\nthe\nGeneric\nFunction\njoshua:clear\".\nFor\nan\nexample\nof\nhow\nthese\nfunctions\nwork\ntogether:\nSee\nthe\nsection \"Customiz\ning\nthe\nData\nIndex\",\npage\n81.\n2.3.1. The Contract of the Generic Function joshua:insert\njoshua:insert\nstores\npredication\nobjects\nin\nthe\ndatabase,\nor\nat\nleast\nrecords\nenough\ndata\nfrom\nwhich\njoshua:askdata\ncan\nreconstruct\nthese\npredication\nobjects.\nThis\nfunction\ndoes\nnot\ndeal\nwith\nthe\nother\noperations\nof\njoshua:tell,\nnamely,\njustifica\ntion\nand\nlocating\nforward\nrules.\nThese\nare\nthe\nresponsibility\nof\njoshua:justify,\njoshua:mapoverforwardruletriggers,\nand\njoshua:noticetruthvaluechange.\nSee\nthe\nsection \"The\nJoshua\nRule\nFacilities \",\npage\n23.\nBy\nmodularizing\nthe\nopera\ntions\nof\njoshua:tell,\nwe\nlet\nyou\npinpoint\nthe\nspecific\nfunctionality\nyou\nmight\nwant\nto\nmodify;\nfor\ninstance,\nyou\ncan\nstill\nuse\nthe\nexisting\njoshua:insert\nfunction,\neven\nif\nyou\ndefine\nyour\nown\nway\nof\ndoing\njustification\nand\nlocating\nforward\nrules.\n(If\nyou\nwant\nto\nredefine\njustification,\nforward\nrule\nmapping,\nand\ndata\nindexing,\nall\nat\nonce,\nyou\nwould,\nprobably,\nwant\nto\nredefine\nthe\nfunction\njoshua:tell\nitself.\nBut\nin\nalmost\nall\ncases\nit\nis\nsufficient\nto\nmove\ndown\na\nlevel\nand\nrewrite\nonly\nthe\npiece\nof\nfunctionality\nyou\nneed.)\nAlthough\nyou\ncan\nredefine\nthe\ndatabase\nstructure,\njoshua:insert\nalways\nexpects\nda\nta\nin\nthe\nform\nof\npredications.\nOnce\ninstalled\nby\njoshua:tell,\npredications\nare\nob\njects\ncontaining\nstate\ninformation\nsuch\nas\njustifications.\nThe\nsystem\nusually\nex\npects\nto\ndeal\nwith\nthese\nobjects,\nnot\nwith\ncopies\nor\npatterns;\nfor\nexample,\nthe\ncon\ntinuation\nof\njoshua:ask\nis\ncalled\nwith\nan\nargument\nwhich\ncontains\nthe\nactual\npredication\nobject\nretrieved\nfrom\nthe\ndatabase.\njoshua:insert\nmust\nreturn\ntwo\nvalues.\nIf\nthe\npredication\nis\nbeing\nadded\nfor\nthe\nfirst\ntime,\njoshua:insert\nreturns\nit,\nas\nwell\nas\nthe\nvalue\njoshua::t.\nIf\na\nvariant\nof\nthe\npredication\nalready\nexists\nin\nthe\ndatabase,\njoshua:insert\nreturns\nthe\ncanonical\nversion\nof\nit\n(the\nversion\nalready\ninserted\nin\nthe\ndatabase),\ntogether\nwith\nthe\nvalue\njoshua::nil.\njoshua:insert\nuses\nthe\njoshua:variant\ntest\nto\ndetermine\nif\nthe\npredication\nit\nis\nin\nserting\nalready\nexists\nin\nthe\ndatabase.\nPatterns\np1\nand\np2\nare\nvariants\nunder\nthe\nfollowing\nconditions:\n-\nIf\nthe\nconstants\nin\np1\nare\njoshua::eql\nto\nthe\nconstants\nin\np2.\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\n-\nIf\nthe\nvariables\nin\np1\nand\np2\nare\nin\nthe\nsame\nplaces,\nand\nif\nthere\nis\na\nrenaming\nof\nvariables\nthat\nmakes\nthem\nthe\nsame.\n-\nRecursive\nstructures\n(such\nas\nlists\nand\npredications)\ninside\na\npredication\nmust\nbe\nrecursively\nvariants.\nFor\nmore\ndetail:\nSee\nthe\nfunction\njoshua:variant,\npage\n252.\nFigure\nshows\nthe\norganization\nof\nthe\njoshua:tell\ndatainserting\nprotocol\ninclud\ning\nthe\ndefault\nimplementation\nof\njoshua:insert.\n2.3.2. The Contract of the Generic Functions joshua:ask-data and joshua:fetch\nLike\nthose\nof\njoshua:tell,\nthe\noperations\nof\njoshua:ask\nare\nmodularized\nto\nallow\nfinetuning\nof\nfunctionality\nchanges.\nThe\ndataindexing\nfunctionality\nof\njoshua:ask\nis\nalso\nbroken\ndown\ninto\nseparate\nfunctionality\nassumed\nby\njoshua:askdata\nand\njoshua:fetch.\nThe\ncontract\nof\njoshua:askdata\nis\nto\ndo\nunification\non\nthe\nobjects\npassed\nto\nit\nby\njoshua:fetch,\nand\nto\ncall\nthe\njoshua:ask\ncontinuation\non\nthe\nunified\nquery\nand\nits\nsupport.\njoshua:askdata\ndoes\nnot\ndeal\nwith\nbackward\nrules\nor\nquestions;\nthese\nare\nthe\nre\nspective\nresponsibility\nof\njoshua:askrules,\nand\njoshua:askquestions,\nwhich\nin\nturn\npass\noff\nto\njoshua:mapoverbackwardruletriggers\nand\njoshua:mapover\nbackwardquestiontriggers.\njoshua:askdata\nis\nnot\nrequired\nto\nfind\nthe\ncanonical\npredication\nin\nthe\ndatabase.\nThat\nis\nthe\nresponsibility\nof\njoshua:fetch.\nIf\nthe\ndata\nmodel\ndoes\nnot\nstore\nthe\nac\ntual\npredication,\nbut\nrather\ninformation\nfrom\nwhich\na\ncopy\nof\nthe\npredication\nmay\nbe\nreconstructed,\njoshua:askdata\nis\nthe\nplace\nwhere\nthis\nreconstruction\nshould\nbe\ndone.\nLoosely\ndefined,\nthe\ncontract\nof\njoshua:fetch\nis\nto\nget\na\nsuperset\nof\nobjects\nthat\nmight\nunify\nwith\nthe\nquery\n(including\nthose\nobjects\nmatching\nthe\npattern\nit\nis\ngiven).\nNote\nthat\nwhile\njoshua:fetch\ndeals\nwith\nits\ninput\nobjects\nas\npatterns\nthat\nmust\nbe\nmatched,\nthe\ncontinuation\nmust\nbe\ncalled\non\npredication\nobjects\nfound\nin\nthe\ndatabase.\njoshua:fetch\ndoes\nnot\ncheck\ntruth\nvalues\nof\njoshua:*true*\nor\njoshua:*false*;\njoshua:askdata,\non\nthe\nother\nhand,\ndoes.\njoshua:fetch\nis\nnot\nrequired\nto\ndo\nunification,\nas\nthat\nis\nthe\nresponsibility\nof\njoshua:askdata;\nthe\ncontract\nof\njoshua:fetch\nmerely\nspecifies\nthat\nit\ndo\nwhatever\nis\nconvenient\nat\nthe\ndatabase\nlevel.\nThus\njoshua:fetch\ncan\nfetch\nanything\nthat\nmight\nunify\nwith\nits\npattern,\nskipping\nonly\ndefinite\nfailures.\nFor\nsome\nexamples\nof\nthis:\nSee\nthe\nsection \"Organization\nof\nthe\nDefault\nDiscrimination\nNet\",\npage\n17.\nHow\nand\nto\nwhat\nextent\njoshua:fetch\nfilters\nobjects\nis\nup\nto\nthe\nimplementation.\nSince\nfiltering\nis\ncheap\nand\nunification\nis\nexpensive,\nthe\nmore\nfiltering\nyou\ncan\ndo,\nthe\nbetter.\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\ninsert\n[Generic Function]\ntell\njustify\n[Generic Function]\n[Generic Function]\n.\n.\n.\n(tell default-tell-model)\n[Method]\nDefault implementation of tell\n(insert discrimination-net-data-model)\n[Method]\ndiscrimination-net-insert\n[Function]\nDefault implementation of insert\nFigure\n5.\nThe\ntell\ndataindexing\nprotocol\nand\nits\ndefault\nimplementation\nOne\nproper,\nbut\nslow,\nimplementation\nof\njoshua:fetch\nis\nto\ncall\nthe\ncontinuation\non\nevery\npredication\nin\nthe\ndatabase,\nand\nlet\nunification\ndo\nthe\nfiltering.\nThat\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\nwould\nbe\ncorect,\nbut\nslow\n(like\na\ndatabase\nwithout\nindices).\nHere's\nan\nexample.\n(defvar\n*slowdatabase*\nnil\n\"Just\na\nlist\nof\nall\nthe\nfacts.\")\n(definepredicatemodel\nslowdatamodel\n()\n())\n(definepredicatemethod\n(insert\nslowdatamodel)\n()\n;;\nif\nthis\nis\nnew\ndata,\npush\nit\nonto\nthe\nlist.\n;;\nOtherwise\nreturn\nthe\ncanonical\nversion.\n(let\n((found\n(find\nself\n*slowdatabase*\n:test\n#'variant)))\n(if\nfound\n(values\nfound\nnil)\n(progn\n(push\nself\n*slowdatabase*)\n(values\nself\nt)))))\n(definepredicatemethod\n(fetch\nslowdatamodel)\n(continuation)\n;;\nindiscriminately\nsuggest\nevery\nfact\nas\na\ncandidate\n(mapc\ncontinuation\n*slowdatabase*))\n(definepredicatemethod\n(clear\nslowdatamodel)\n(cleardatap\nignore)\n;;\nclearing\nthe\ndatabase\nis\njust\nsetting\nit\nto\nnil\n(when\ncleardatap\n(setq\n*slowdatabase*\nnil)))\n(definepredicatemethod\n(uninsert\nslowdatamodel)\n()\n;;\nuninsert\njust\ndeletes\nself\nfrom\nthe\nlist\n(setq\n*slowdatabase*\n(delete\nself\n*slowdatabase*)))\n(compileflavormethods\nslowdatamodel)\n(definepredicate\nslow\n(arg1\narg2)\n(slowdatamodel\ndefaultpredicatemodel))\nThe\ndefault\nimplementation\nof\njoshua:fetch\nuses\nthe\ndiscrimination\nnet.\nSee\nthe\nsection \"Joshua's\nDefault\nDatabase:\nthe\nDiscrimination\nNet\",\npage\n16.\nFigure\n6,\nshows\nthe\norganization\nof\nthe\njoshua:ask\ndataretrieval\nprotocol\nincluding\nthe\ndefault\nimplementation\nof\njoshua:askdata\nand\njoshua:fetch.\n2.3.2.1. Signalling a Condition When joshua:ask-data or joshua:fetch Can't Handle a\nQuery\nThe\nJoshua\nDatabase\nProtocol\nallows\nyou\nto\nstructure\nyour\ndata\nin\nways\nthat\nare\nappropriate\nfor\nyour\napplication;\nsometimes\nthis\ninvolves\ntrading\noff\ngenerality\nfor\nperformance.\nFor\nexample,\nif\na\nsignificant\nportion\nof\nyour\ndata\nconsists\nof\nobject\nattributevalue\ntriples\n(such\nas\nthe\ncolor\nof\nthe\nblock\nis\nblue),\nthen\nyou\nmight\nwant\nto\nuse\nan\nobjectoriented\nrepresentation\n(such\nas\njoshua::flavor\ninstances)\nto\nstore\nthis\ndata.\nHowever,\nusing\nthis\nrepresentation\nmakes\nit\nawkward\nor\nslow\nto\nrespond\nto\na\nquery\nthat\nasks\nfor\nevery\nobject\nwith\na\nspecific\nproperty,\nsuch\nas:\n[haseyecolor\n?who\nblue]\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nask\n[Generic Function]\n[Method]\nfetch\n[Generic Function]\n(fetch discrimination-net-data-mixin)\n[Method]\ndiscrimination-net-fetch\n[Function]\n[Generic Function]\nDefault Implementation of ask-data\nask-data\nask-rules\nask-questions\n[Generic Function]\n[Generic Function]\n(ask-data default-ask-model)\n(ask default-ask-model)\n[Method]\nDefault Implementation of fetch\n.\n.\n.\n.\n.\n.\nFigure\n6.\nThe\naskdata\nprotocol\nand\nits\ndefault\nimplementation\nAn\nimplementation\nof\njoshua:askdata\nor\njoshua:fetch\nwould\nideally\nanswer\nsuch\na\nquery\neven\nif\nit\ndid\nso\nslowly.\nHowever,\nsuch\nqueries\nmay\nbe\nof\nsuch\nlittle\nvalue\nto\nan\napplication\nthat\na\ndeveloper\ndecides\nnot\nto\nwaste\neffort\non\nimplementing\na\nmethod\nthat\ncan\nrespond\nto\nthe\nquery.\nIt\nis\nimportant,\nhowever,\nthat\njoshua:fetch\nand\njoshua:askdata\nmethods\ndo\nnot\ncause\nerrors\nwhen\nfaced\nwith\na\nquery\nthat\nthey\ndo\nnot\nwish\nto\nhandle.\nOne\nreason\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\nfor\nthis\nis\nthat\nthe\ncommand\nShow\nJoshua\nDatabase\nmay\npost\nsuch\na\nquery\neven\nif\nthe\napplication\nnever\nmakes\nsuch\nqueries\non\nits\nown.\nThe\ncontract\nof\njoshua:askdata\nand\njoshua:fetch\nrequires\nthese\nmethods\nto\njoshua::signal\na\nspecific\ncondition\nwhen\nthey\ndecline\nto\nhandle\na\nquery.\nThe\nbase\nflavor\nfor\nsuch\ncondition\nobjects\nis\nji:modelcanthandlequery.\nA\nsecond\ncondition\nflavor\n(built\non\nthis\nbase\nflavor)\nis\ncalled\nji:modelcanonlyhandlepositive\nqueries\nwhich\n(as\nthe\nname\nsuggests)\nshould\nbe\nused\nif\nthe\nimplementation\nis\npre\nsented\nwith\na\nnegated\nquery,\nbut\nonly\nexpects\nqueries\nwhich\nare\nnot\nnegated.\nThe\nfollowing\nis\nan\nexample\nof\nhow\nto\nuse\nthese\nconditions:\n(definepredicatemethod\n(askdata\nobjectmodel)\n(truthvalue\ncontinuation)\n(unless\n(eql\ntruthvalue\n*true*)\n(signal\n'ji:modelcanonlyhandlepositivequeries\n:query\nself\n:model\n'portdirectionmodel))\n(withstatementdestructured\n(object\nvalue)\n()\n(typecase\nobject\n(unboundlogicvariable\n(signal\n'ji:modelcanthandlequery\n:model\n'portdirectionmodel\n:query\nself))\n(otherwise\n<\nwhatever\nyou\nreally\nwant\nto\ndo\n>\n))))\n2.3.3. The Contract of the Generic Function joshua:uninsert\nThe\ncontract\nof\njoshua:uninsert\nis\nto\nremove\na\nsingle\npredication\nobject\nthat\njoshua:insert\nstored\ninto\na\nparticular\nmodel.\njoshua:untell\npasses\nall\nTMS\nissues\nto\njoshua:unjustify.\nThe\nclearing\nof\ninternal\ncaches\n(such\nas\nthe\nRete\nnet),\nis\nhandled\nautomatically,\neven\nif\nyou\nsupply\nyour\nown\nmethod\nfor\njoshua:uninsert.\nFigure\n7,\nshows\nthe\norganization\nof\nthe\njoshua:untell\ndata\nremoval\nprotocol\nin\ncluding\nthe\ndefault\nimplementation\nof\njoshua:uninsert.\n2.3.4. The Contract of the Generic Function joshua:clear\nThe\ncontract\nof\njoshua:clear\nis\nto\nremove\nall\nfacts\nthat\njoshua:insert\nstored\ninto\na\nparticular\nmodel.\nNote\nthat\nif\nyou\nwrite\na\nmodel\nthat\nredefines\njoshua:insert\nand\njoshua:fetch,\nyou\nalmost\ncertainly\nneed\nto\nwrite\n(or\ninherit)\na\ncorresponding\njoshua:clear\nmethod.\nFigure\nshows\nthe\norganization\nof\nthe\ndatabase\nclearing\nprotocol,\nincluding\nits\nde\nfault\nimplementation.\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nuninsert\n[Generic Function]\nuntell\n[Generic Function]\nunjustify\n[Generic Function]\n(untell default-tell-model)\n[Method]\n[Function]\n(uninsert discrimination-net-data-model)\n[Method]\ndiscrimination-net-uninsert\nDefault implementation of uninsert\nDefault implementation of untell\n.\n.\n.\nFigure\n7.\nThe\nuntell\nprotocol\nand\nits\ndefault\nimplementation\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\nclear\nclear\n(clear discrimination-net-data-mixin)\ndiscrimination-net-clear\n[Lisp Function]\n[Generic Function]\n[Method]\n[Function]\nDefault Implementation of clear\nFigure\n8.\nThe\nclear\nprotocol\nand\nits\ndefault\nimplementation\n2.4. Joshua's Default Database: the Discrimination Net\nJoshua\nuses\na\ndata\nstructure\ncalled\na\ndiscrimination\nnet\nfor\ndata\nstorage\nand\nre\ntrieval.\nThis\nis\na\nstandard,\ndomain\nindependent\ndata\nstructure;\nit\nis\norganized\nso\nthat\nin\ngeneral\nthe\ntime\nneeded\nto\nlook\nup\nan\nitem\nis\nindependent\nof\nthe\nnumber\nof\nitems\ncontained\nin\nthe\ndatabase.\n(In\nsome\nspecific\nproblems\nyou\ncan\ndo\nbetter\nthan\na\ndiscrimination\nnet.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.)\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nThe\ndefault\ndiscrimination\nnet\nis\nwritten\nto\nsupport\nthe\nbasic\nmodel,\njoshua:discriminationnetdatamixin.\nNote:\nA\ngood\nintroduction\nto\nthe\npractical\nmatters\nof\ndiscrimination\nnetworks\ncan\nbe\nfound\nin\nEugene\nCharniak,\nChristopher\nK.\nRiesbeck,\nand\nDrew\nV.\nMcDermott,\nArtificial\nIntelligence\nProgramming,\nsecond\nedition\n(New\nJersey:\nLawrence\nErlbaum\nAssociates,\n1987),\nchs.\nand\n11.\nIn\nchapter\nthe\nauthors\ndiscuss\neight\ndesign\nde\ncisions\ninvolved\nin\nthe\ncreation\nof\na\ndiscrimination\nnet.\nHere\nis\nthe\nlist\nof\nthese,\nand\nthe\nJoshua\ndesigners'\nchoice\nin\neach\ncase:\n1.\nAre\nvariables\nallowed\nin\nthe\ndata\npatterns?\nYes\n2.\nAre\nvariables\nallowed\nin\nthe\nquery\npatterns?\nYes\n3.\nDoes\none\nkeep\ntrack\nof\nvariable\nbindings\nduring\nfetching?\nNo.\n4.\nShould\none\nreturn\na\nlist\nor\na\nstream\nof\npossibilities?\nPass\nclosure\ndown\ninto\ndn\nfetcher.\n5.\nShould\none\nuse\nCAR\nor\nCARCDR\nindexing?\nCAR.\n(Except\nfor\ntail\nvariables.)\n6.\nShould\none\nuniquify\nsubexpressions?\nYes.\n7.\nShould\none\ncompletely\ndiscriminate\nthe\ndata?\nYes.\n8.\nShould\none\nuse\nmultiple\nindexing?\nNo.\nPlease\nrefer\nto\nthe\naforementioned\nbook\nfor\nfurther\ndetails.\n2.4.1. Organization of the Default Discrimination Net\nThe\norganization\nof\na\nstorage\nstructure\nsuch\nas\na\ndiscrimination\nnet\nhas\nto\ndo\nwith\nthe\nway\nin\nwhich\nthe\nstructure\ndifferentiates\n(discriminates)\nthe\nobjects\nthat\nit\nstores.\nThe\ndiscrimination\nnet\nis\norganized\nto\nlimit\nthe\nsearch\nby\neliminating\nin\nvalid\nsearch\ntargets.\nThis\nis\ncalled\nassociative\nlookup;\nit\nanswers\nqueries\nlike, \"find\neverything\nin\nthe\ndatabase\nthat\nlooks\nlike\nthis.\"\nTo\nsee\nhow\nthe\ndiscrimination\nnet\nstores\npredications,\ndisplay\na\ngraph\nof\nthe\ndis\ncrimination\nnet\nwith\nthe\nform:\n(graphdiscriminationnet\nji:*datadiscriminationnet*)\nThe\ngraphic\nrepresentation\nof\nthe\ndatabase\ncan\nalso\nbe\na\nuseful\ndebugging\naid\nif\nyou\nare\ndebugging\nan\nadvanced\nmodel\nthat\ncalls\nthe\ndiscrimination\nnet,\nor\nif\nyou\nsuspect\na\nperformance\nbottleneck\nin\nthe\ndiscrimination\nnet.\n(You\nmight,\nfor\nexam\nple,\nlook\nfor\na\nnode\nwith\nan\nunnecessarily\nlarge\nnumber\nof\ninferiors.)\nThe\nargument\nji:*datadiscriminationnet*\ncontains\nthe\nroot\nnode\nof\nthe\ndiscrimi\nnation\nnet\nto\nbe\ngraphed.\nThe\ndefault\nroot\ncontains\nthe\ntoken\nji::*begin\npredication*;\nthis\nmerely\nstands\nfor\nan\nobject\nthat\nbegins\npredications\nin\nthe\ndis\ncrimination\nnet.\nFigure\n9,\npage\nshows\na\nsample\ngraph\ndisplay\nof\na\ndatabase\ncontaining\npredica\ntion\nobjects\nwith\nvarious\narguments\n(lists,\nlogic\nvariables,\nnested\npredications,\nnumber,\nstring,\nconstant),\nto\nshow\nhow\nthey\nare\nstored.\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\n[hobby\nal\n(eating\nsleeping)]\n[hobby\njane\n(sailing\nskiing\nhiking)]\n[foo\n?x\n?x]\n[foo\n?x\n?y]\n[foo\n[doodle\n2]]\n[foo\n[doodle\n?x]]\n[foo\nbar\n?x]\n[foo\nbar\n2]\n[alcoholcontent\nvodka\n\"100%\"]\n[haseyecolor\njane\nbrown]\n[haseyecolor\nfred\ngreen]\n;list\nargument\n;list\nargument\n;logic\nvariable\narguments\n(repeated)\n;logic\nvariable\narguments\n;nested\npredication\nargument\n;nested\npredication\nwith\nlogic\nvariable\n;logic\nvariable\nargument\n;numeric\nargument\n;string\nargument\nFigure\n9.\nSample\nDiscrimination\nNet\nDisplay\nThe\nnet\nlooks\nlike\na\ntree\nseen\nhorizontally,\nwith\nthe\nroot\nnode\nat\nthe\nleftmost\nside.\nThe\nimmediate\ndescendants\nof\nthe\nroot\nare\npredicates.\nThe\nleaf\nnodes\nlist\nthe\npredication(s)\nthat\nare\nstored\nin\nthat\nnode.\nWhen\nmore\nthan\none\npredication\nis\nbuilt\nfrom\nthe\nsame\npredicate\n(as\nis\nthe\ncase\nwith\n[haseyecolor\n...]\nand\n[foo\n...]\nin\nthe\nfigure),\nthe\ntree\nbranches,\nwith\nsep\narate\nbranches\ndiscriminating\nthe\narguments\nfor\neach\npredication.\nThus,\nif\nwe\nare\nlooking\nfor\na\npredication\nbuilt\non\n[foo\n...],\nthe\nretrieval\nfunction\njoshua:discriminationnetfetch\n(called\nby\nthe\njoshua:fetch\nmethod\nof\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\njoshua:discriminationnetdatamixin)\ncan\nignore\nall\npredication\nbranches\nother\nthan\nthose\nstarting\nfrom\n[foo\n...].\nThe\nsearch\narea\nis\nfurther\nnarrowed\ndown\nwhile\nsearching\na\npredicate\ntree:\nif\nyou\nare\nlooking\nfor\npredication\npattern\n[foo\nbar\n...],\nthe\nlookup\nfunction\ncan\nignore\nthe\nother\nbranches\nof\n[foo\n...],\nand\ntravel\nonly\nthrough\nthe\narguments\nbranching\noff\nfrom\nthe\nbar\nnode.\nFigure\nshows\nthe\nindividual\nstorage\nof\nconstant\narguments,\nstring\narguments,\nnumeric\narguments,\nand\nnested\npredications.\nWhen\nthe\ndiscrimination\nnet\nencoun\nters\na\nnested\npredication\nlike\n[foo\n[doodle\n2]]\nin\nthe\ngraph\nexample,\nit\nre\ndiscriminates\nthe\nnested\npredication\nfrom\nthe\nroot,\nand\nuses\nthe\nresulting\n(unique)\nleaf\nnode\nas\na\ntoken\nfor\nthe\nnested\npredication.\nThe\nnested\npredication\nalso\nap\npears\nin\nthe\ncontaining\npredication;\nhere\nit\nis\nstored\nin\na\nnode\nlabelled\nNested\npredication.\nDiscrimination\nof\narguments\nhelps\nto\nlimit\nthe\nnumber\nof\nitems\nthat\nare\nretrieved.\nSo,\nfor\nexample,\nif\nyou\nwant\nto\nlook\nup\nall\npersons\nwith\ngreen\neyes,\njoshua:fetch\ntraverses\nthe\nbranches\nfor\nboth\n[haseyecolor\nFred\n...]\nand\n[haseyecolor\nJane\n...],\nbut\nrejects\nthe\nlatter\nbecause\nthe\ncolor\narguments\ndon't\nmatch.\nHere\nare\nsome\nexamples\nusing\nconstant\nand\nstring\narguments.\n;\ndiscrimination\nnet\nfilters\nnonmatching\nconstant\nand\nstring\narguments\n(fetch\n[haseyecolor\n?person\ngreen]\n#'print)\n[HASEYECOLOR\nFRED\nGREEN]\nNIL\n(fetch\n[haseyecolor\njane\n?color]\n#'print)\n[HASEYECOLOR\nJANE\nBROWN]\nNIL\n(fetch\n[haseyecolor\n?who\n?color]\n#'print)\n[HASEYECOLOR\nFRED\nGREEN]\n[HASEYECOLOR\nJANE\nBROWN]\nNIL\n(fetch\n[alcoholcontent\n?x\n\"100%\"]\n#'print)\n[ALCOHOLCONTENT\nVODKA\n\"100%\"]\nNIL\n(fetch\n[alcoholcontent\nvodka\n?x]\n#'print)\n[ALCOHOLCONTENT\nVODKA\n\"100%\"]\nNIL\nTwo\ntypes\nof\narguments,\nnamely,\nlists\nand\nlogic\nvariables,\nare\nnot\nstored\nindividu\nally.\nThis\nis\nreflected\nin\nthe\nway\njoshua:fetch\ndeals\nwith\nqueries\ncontaining\nsuch\narguments.\nAll\nlists\nare\nequivalent\nto\nthe\ndiscrimination\nnet.\nThey\nare\nstored\nin\na\nnode\nwhose\ntoken\nis\nji::*embeddedlist*.\nThe\ngrapher\ndisplays\nthis\nas\nList.\nThat\nis,\nall\nlists\nlook\npretty\nmuch\nthe\nsame\nto\nthe\ndiscrimination\nnet.\nSee\nthe\nbranches\nfor\npredi\ncate\nhobby\nin\nfigure\n9.\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\nSince\nlists\nare\nnot\ndiscriminated\nat\nthe\ndatabase\nlevel,\nand\nthe\nlookup\nfunction\nis\nnot\nresponsible\nfor\nunification,\njoshua:fetch\ngets\nall\npossibilities\nwhen\ndealing\nwith\nlist\narguments.\nIn\nthe\nexample\nbelow,\neven\nthough\nwe\nspecify\nto\njoshua:fetch\nthe\nexact\npattern\nto\nfind,\nwe\nget\neverything\nthat\nstarts\nwith\nthe\ntarget\npredicate,\nincluding\nanswers\nthat\ndon't\nnecessarily\nunify\nwith\nthe\nquery.\n;\ndiscrimination\nnet\ndoes\nnot\ndiscriminate\nlists\n;\nfetch\ngets\nall\npossible\nanswers\n(fetch\n[hobby\n?x\n(eating\nsleeping)]\n#'print)\n[HOBBY\nJANE\n(SAILING\nSKIING\nHIKING)]\n[HOBBY\nAL\n(EATING\nSLEEPING)]\nNIL\nSince\nno\nunification\nis\ndone\nat\nthe\ndatabase\nlevel,\nlogic\nvariable\narguments\nare\nnot\ndiscriminated,\nbut\nrather\nstored\nin\na\nnode\nwhose\ntoken\nis\nji::*variable*.\nThe\ngra\npher\ndisplays\nthis\nas\nVar.\nThat\nis,\nall\nvariables\nlook\npretty\nmuch\nalike\nto\nthe\ndis\ncrimination\nnet.\nSo,\nfor\nexample,\nalthough\nthe\nlogic\nvariables\nin\n[foo\n?x\n?x]\nand\n[foo\n?x\n?y]\nare\ndistinct\nto\nthe\nunifier,\nboth\npredications\nare\nstored\nidentically,\nas\nwe\nsee\nin\nfigure\n9,\nand\nboth\nappear\nin\nthe\nsame\nrightmost\nnode.\nAs\nit\ndoes\nwith\nlists,\nthe\nlookup\nfunction\ngets\nall\npossibilities\nwhen\ndealing\nwith\nlogic\nvariables\neither\nin\nthe\nlookup\npattern\nor\nin\nthe\ndatabase.\n;\ndiscrimination\nnet\ndoes\nnot\ndiscriminate\nlogic\nvariables\n;\nfetch\ngets\nall\npossible\nanswers\n(fetch\n[foo\n?x\n?x]\n#'print)\n;;\nthis\nfinds\nsix\nanswers,\neven\nthough\nonly\nthree\nwill\npass\n;;\nthe\nunification\ntest\nin\naskdata\n[FOO\n[DOODLE\n?X]]\n[FOO\n[DOODLE\n2]]\n[FOO\nBAR\n2]\n[FOO\nBAR\n?X]\n[FOO\n?X\n?Y]\n[FOO\n?X\n?X]\nNIL\n\nMarch 1999\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\n(fetch\n[foo\n?x]\n#'print)\n[FOO\n[DOODLE\n?X]]\n[FOO\n[DOODLE\n2]]\n[FOO\n?X\n?Y]\n[FOO\n?X\n?X]\nNIL\n(fetch\n[foo\nbar\n2]\n#'print)\n[FOO\nBAR\n2]\n[FOO\nBAR\n?X]\n[FOO\n?X\n?Y]\n[FOO\n?X\n?X]\nNIL\n\nStoring and Retrieving Knowledge in Joshua: the Virtual Database\nMarch 1999\n\nMarch 1999\nThe Joshua Rule Facilities\n3. The Joshua Rule Facilities\nThe\nbasics\nof\nrule\nsyntax\nand\noperation\nwere\npresented\nin\nthe\nsection \"Rules\nand\nInference\".\nFigure\n10,\npage\nsummarizes\nthe\nmain\npoints\nof\nthis\nearlier\ndiscus\nsion\nhere,\nfor\nquick\nreference.\nRule Type Triggered\nby\nTrigger\nPart\nPredications\nIn Trigger\nRule Fires\nWhen\nAction\nPart\nRule Success\n(all if-parts\nsatisfied)\nForward\nTELL\nif-part\nCompound\nTriggers\nSatisfied\nthen-part Rule executes\naction part\nBackward\nASK\nthen-part\nSingle\nTrigger\nAsked\nif-part\nASK calls\ncontinuation\nFigure\n10.\nSummary\nof\nJoshua\nRule\nOperation\nThis\nchapter\namplifies\nsome\nof\nthe\nbasics,\nand\ndiscusses\nthe\nrule\ncompiler\nand\nrule\nindexing.\nThe\nrule\ncompiler\ntranslates\nyour\nrules\ninto\nLisp.\nRule\nindexing\nis\nthe\nway\nthe\nsystem\nadds,\ndeletes,\nand\nfinds\nrules.\nGiven\nan\ninitial\nset\nof\nfacts,\nrules\nallow\nus\nto\ninfer\nor\ndeduce\nadditional\nnew\nfacts,\nthat\nare\nconsequences\nor\nconclusions.\nSince\nrules\ndefine\nhow\nthe\nsystem\nreasons\nabout\nits\nknowledge,\nthey\nare\none\nmeans\nof\ncontrolling\nthe\nacquisition\nand\nexten\nsion\nof\ncurrent\nknowledge.\nJoshua\nprograms\ncan\nuse\neither\nforward\nchaining\nor\nbackward\nchaining\nrules,\nor\nboth.\nForward\nchaining\nis\ntriggered\nby\na\njoshua:tell\nstatement\nand\nits\naction(s)\ncan\nresult\nin\nmore\njoshua:tell\nstatements,\nadding\nnewly\ndeduced\nfacts\nto\nthe\ndatabase.\nBackward\nchaining\nis\ntriggered\nby\nan\njoshua:ask\nstatement,\nand\nits\naction(s)\ninvolve\nthe\njoshua:ask\nmechanism,\nthat\nis,\nit\nworks\nfrom\nexisting\ndata\nrather\nthan\ninferring\nnew\ndata.\nSeen\ndeclaratively,\na\nforward\nor\nbackward\nrule\nis\nsimply\na\nspecial\nkind\nof\nfact,\nstating\na\nlogical\ntruth.\nIn\nother\nwords,\nthere\nis\nnothing\nspecial\nin\nterms\nof\nlogic\nto\ndistinguish\na\nforward\nfrom\na\nbackward\nrule,\nsince\nboth\nare\nderived\nfrom\nmodus\nponens.\nSeen\nmechanistically,\nthere\nis\na\ndistinction\nbetween\nforward\nand\nbackward\nrules,\nin\nterms\nof\nthe\nprocessing\ndirectives\neach\ngives\nthe\nsystem.\nThere\nare\nmany\nways\nof\ndoing\ninference.\nFor\nmost\nengineering\napplications,\nhow\never,\nforward\nand\nbackward\nchaining\nare\ncomputationally\nefficient\nproblem\nsolvers\nthat\nbalance\nthe\npower\nof\nmathematical\nlogic\nwith\nthe\nefficiency\nof\nthe\ncomputing\nmechanism.\nBoth\nof\nthese\nrules\nare\nsound,\nbut\nthey\nare\nincomplete.\nSoundness\nmeans\nthat\nusing\nthese\nrules\nof\ninference\nalways\nproduces\nlogically\n(mathemati\ncally)\ncorrect\nconclusions.\nIncompleteness\nmeans\nthat,\nin\nsome\ncases,\nsome\ncorrect\nconclusions\nwill\nnot\nbe\nfound.\n\nThe Joshua Rule Facilities\nMarch 1999\nSoundness\nis\nobviously\na\ndesirable\ncharacteristic.\nIncompleteness\nis\nundesirable,\nbut\ncomplete\nrules\nof\ninference\nare\ncomputationally\nless\nefficient;\nalso\nfor\nmost\npractical\napplications\nincompleteness\ndoesn't\nseem\nto\nbe\na\nproblem.\n(One\napplica\ntion\narea\nwhich\ndoes\nrequire\ncompleteness\nis\nmathematical\ntheorem\nproving.)\nIn\ngeneral,\nthen,\nthe\nJoshua\nprogrammer\nneed\nnot\nworry\nabout\nthese\nformal\nprop\nerties\nof\nthe\nJoshua\ninferencing\nmechanism.\nBut\nlooking\nat\nyour\nprogram\nin\nterms\nof\nlogic\ncan\ngive\nyou\nsome\nguidance\nin\ndebugging\nit.\nIn\nbrief,\nwe\ncan\nseparate\nbugs\ninto\nfour\ncategories:\n1.\nDrawing\nincorrect\nconclusions.\n2.\nNot\ndrawing\ncorrect\nconclusions.\n3.\nNontermination\n(\"infinite\nloops\").\n4.\nErrors\ndetected\nwhen\nrules\ncall\nLisp\nfunctions\nincorrectly.\nSoundness\ntells\nus\nthat\nif\nour\nsystem\nis\ndrawing\nincorrect\nconclusions,\nthere\nmust\nbe\nan\nincorrect\npiece\nof\ndata\nor\nan\nincorrect\nrule.\nWhen\nthe\nsystem\nis\nfailing\nto\ndraw\nsome\ncorrect\nconclusion,\nit\nmay\nbe\ndue\nto\nin\ncorrect\ndata\nor\nrules,\nor\nit\nmay\nbe\ndue\nto\nthe\nincompleteness\nof\nthe\nrule\nof\ninfer\nence.\nIn\nthat\ncase,\nit\nis\nnecessary\nto\nchange\nthe\nprogram\nin\nways\nwhich\nleave\nit\nlogically\nthe\nsame,\nbut\nchange\nthe\nstructure\nenough\nto\nallow\nthe\ninference\nmecha\nnisms\nto\ncope\nwith\nit.\nThis\nchange\ncan\neither\nbe\nadding\nrules\nor\ndata\nwhich\nare\nlogically\nredundant,\nor\nit\ncan\nbe\nrestructuring\nthe\nrules\nor\ndata.\n3.1. Advanced Features of Joshua Rules\nThis\nsection\nsummarizes\nthe\nfull\nsyntax\nof\nboth\nforward\nand\nbackward\nchaining\nrules.\nBoth\nforward\nand\nbackward\nrules\nallow\nvarious\nkeywords\nto\nbe\nattached\nto\nthe\npat\nterns\nof\nthe\nIfpart\nof\nthe\nrule.\nBoth\nForward\nand\nBackward\nrules\nallow\nthe\nKey\nword\n:support\nfollowed\nby\na\nlogicvariable:\n(defrule\nfoobar\n(:forward)\nIf\n[and\n[foo\n?x\n?y]\n:support\n?f1\n[bar\n?y\n?z]\n:support\n?f2]\nThen\n(format\nt\n\"~&I\nwon\nwith\nF1\n=\n~s\nand\nF2\n=\n~s\"\n?f1\n?f2))\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[bar\n?x\n?y]\n:support\n?f1\n[bar\n?y\n?z]\n:support\n?f2]\nThen\n[foo\n?x\n?z])\nThis\nindicates\nthat\nthe\nlogicvariable\nshould\nbe\nbound\nto\nthe \"support\"\nfor\nthis\npattern.\nIn\nthe\ncase\nof\na\nforward\nrule,\nthe\nsupport\nis\nsimply\nthe\nfact\nwhich\nmatched\nthe\ncorresponding\npattern.\nThus\n\nMarch 1999\nThe Joshua Rule Facilities\n(tell\n[and\n[foo\n2]\n[bar\n3]])\nwill\ncause\nthe\nfirst\nrule\nabove\nto\nprint:\nI\nwon\nwith\nF1\n=\n[FOO\n2]\nand\nF2\n=\n[BAR\n3]\nBackward\nrules\nturn\ntheir\nIfpart\ninto\na\nseries\nof\nnested\njoshua:ask's.\nWhen\nthe\nfirst\njoshua:ask\nfinds\na\nmatch,\nit\ncalls\na\ncontinuation\nwhich\nperforms\nthe\nnext\njoshua:ask.\nThe\nargument\nto\nthis\ncontinuation\nis\na \"backwardsupport\"\nstructure,\nsee\nthe\nsection \"Continuation\nArgument\",\npage\n125.\nThe\nsupport\nkeyword\nin\na\nbackward\nrule\nbinds\nthe\nlogicvariable\nto\nthe\nbackward\nsupport\ncorresponding\nto\nits\nquery.\nThus\nwith\nthe\nfollowing\nrule\nand\ndata:\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[bar\n?x\n?y]\n:support\n?f1\n[bar\n?y\n?z]\n:support\n?f2\n(progn\n(format\nt\n\"~&I\nwon\nwith\nF1\n=\n~s\nand\nF2\n=\n~s\"\n?f1\n?f2)\n(succeed))\n]\nThen\n[foo\n?x\n?z])\n(tell\n[and\n[bar\n2]\n[bar\n3]])\nThe\nquery:\n(ask\n[foo\n3]\n#'printquery)\nwill\ncause\nthe\nfollowing\noutput:\nI\nwon\nwith\nF1\n=\n([BAR\n2]\n[BAR\n2])\nand\nF2\n=\n([BAR\n3]\n[BAR\n3])\n[FOO\n3]\nThis\nbackward\nsupport\nmay\nbe\nused\nto\nprovide\na\njustification\n(for\na\nTMS)\nwhen\na\nbackward\nrule\ncaches\nthe\nresults\nof\nits\nwork,\nas\nfollows:\n\nThe Joshua Rule Facilities\nMarch 1999\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[bar\n?x\n?y]\n:support\n?f1\n[bar\n?y\n?z]\n:support\n?f2\n(progn\n(tell\n[foo\n?x\n?z]\n:justification\n'(foobar\n(,(askdatabasepredication\n?f1)\n,(askdatabasepredication\n?f2))))\n(succeed))\n]\nThen\n[foo\n?x\n?z])\nBackward\nrules\nalso\nsupport\ntwo\nother\nkeywords\n:dobackwardrules\nand\n:do\nquestions.\nThese\ncan\nbe\nused\nto\ncontrol\nthe\nbehavior\nof\nthe\njoshua:ask\ncorre\nsponding\nto\na\nbackward\naction.\nIf\nthe\n:dobackwardrules\nkeyword\nis\npresent\nthen\nthe\nvalue\nfollowing\nit\nshould\nevaluate\nto\neither\njoshua::t\nor\njoshua::nil;\nif\nit\nis\njoshua::nil,\nthen\nthis\nquery\nwill\nnot\nattempt\nto\nuse\nrules\nto\nsatisfy\nthe\nquery,\noth\nerwise\nrules\nwill\nbe\nused.\nSimilarly,\nthe\n:doquestions\nquestions\ncontrols\nwhether\nbackward\nquestions\nwill\nbe\ninvoked\nto\nquery\nthe\nuser.\nThe\ndefault\nvalue\nis\nthat\nbackward\nrules\nare\nused\nand\nthat\nquestions\nwill\nbe\nattempted\nif\nthe\nquery\nwhich\ncaused\nthis\nrule\nto\nbe\ninvoked\nallowed\nquestions\nto\nbe\nused.\n3.2. The Joshua Rule Compiler\nThe\nrule\ncompiler\nis\nthe\npart\nof\nJoshua\nthat\ntranslates\nthe\nrules\nyou\nwrite\ninto\nLisp.\nThis\nsection\ndescribes,\nin\ngeneral\nterms,\nhow\nthe\nrule\ncompiler\noperates.\nKnowledge\nof\nhow\nthe\nrule\ncompiler\noperates\nis\nimportant\nif\nyou\nwould\nlike\nto\nex\ntend\nthe\nrule\ncompiler\nlater\non\nby\ndefining\nyour\nown\nmethods\nfor\nthe\nrule\ncom\npiler's\ngeneric\nfunctions.\nThe\nrule\ncompiler\nuses\nseveral\ngeneric\nfunctions\nto\ngenerate\ndata\nstructures\nthat\ndrive\nthe\nrest\nof\nrule\ncompilation.\nThese\nfive\ngeneric\nfunctions\nare\nas\nfollows:\njoshua:expandforwardruletrigger\njoshua:expandbackwardruleaction\njoshua:writebackwardrulematcher\njoshua:writeforwardrulesemimatcher\njoshua:writeforwardrulefullmatcher\nThe\nfunctions\nhandle\nforward\nchaining\nand\nbackward\nchaining\nfor\nboth\ntriggers\nand\nactions.\nRecall\nthat\nthe\ntrigger\nof\na\nforward\nchaining\nrule\nis\nthe\nifpart,\nand\nthe\naction\nis\nthe\nthenpart.\nFor\nbackwardchaining\nrules,\nthe\ntrigger\nis\nthe\nthen\npart,\nand\nthe\naction\nis\nthe\nifpart.\nSee\nthe\nsection \"Rules\nand\nInference\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nAny\nuserwritten\njoshua:defrule\nexpression\nexpands\ninto\ntwo\nthings:\n-\nTrigger\ncode\nthat\ndecides\nwhen\nto\nexecute\nthe\nrule\n\nMarch 1999\nThe Joshua Rule Facilities\n-\nA\nfunction,\nwritten\nby\nthe\nrule\ncompiler,\nthat\nbecomes\nthe\nrule\nbody.\n3.2.1. The Forward Rule Compiler\nIn\nthis\nsection\nwe\nexamine\nwhat\nhappens\nwhen\nthe\nrule\ncompiler\nencounters\na\nfor\nward\nchaining\nrule\nof\nthe\nform:\n(defrule\n<name>\n(:forward\n<...>)\nif\n<trigger>\nthen\n<action>)\n(The\ncode\nwithin\nbroken\nbrackets\nis\na\nschematic\nrepresentation\nof\nthe\nactual\ncode\nyou\nsupply.)\n3.2.1.1. Compiling the Action Part of a Forward Rule\nThe\naction\npart\nof\na\nforward\nrule\nis\nnot\ngeneric,\nit\nis\nalways\nhandled\nthe\nsame\nway:\n1.\nIf\nthe\naction\nis\na\nLisp\nform,\ninsert\nit\ninto\nthe\nrule\nbody.\n2.\nIf\nthe\naction\nis\na\npredication,\n(except\nan\njoshua::and)\ninsert\n[tell\npredication\n:justification\n<a\njustification\nthat\ndepends\non\nthe\ntriggers>]\nIf\nthe\naction\nis\nan\njoshua::and\npredication,\nrecurse\nover\nits\narguments\nas\nin\n(1)\nand\n(2).\n3.2.1.2. Forward Rule Triggers: the Rete Network\nA\nforward\nchaining\nrule\nshould\nfire\nas\nsoon\nas\nits\ntrigger\nis\nmatched\nby\npredica\ntions\nin\nthe\ndatabase.\nHowever,\nthe\ntrigger\npart\nof\na\nrule\ntypically\nconsists\nof\nsev\neral\npatterns\nlinked\nby\nthe\nconnective\nand.\nFor\nsuch\na\nrule\nto\nfire,\ntwo\nconditions\nmust\nbe\nmet:\n1.\nEach\npattern\nmust\nmatch\nsome\npredication\nin\nthe\nvirtual\ndatabase.\n2.\nThe\nmatches\nmust\nbe\nconsistent.\nAny\nlogic\nvariable\nwhich\nis\nbound\nby\nmatch\ning\none\nof\nthe\npatterns\nmust\nbe\nbound\nto\nthe\nsame\nvalue\nby\nall\nof\nthe\npat\nterns.\nSince\neach\npattern\nof\nthe\nrule\nmay\nmatch\nseveral\npredications\nin\nthe\ndatabase\n(and\nthese\nmatches\nlead\nto\ndifferent\nbindings\nof\nthe\nlogic\nvariables),\nfinding\nconsistent\nsets\nof\nmatches\ninherently\ninvolves\na\nform\nof\nsearch.\nThe\nfiring\nof\na\nforward\nchaining\nrule\nshould\nnot\ndepend\non\nthe\norder\nin\nwhich\nthe\npredications\nwhich\nmatch\nthe\nrule's\npatterns\nare\nasserted.\nA\nrule\nshould\nfire\nas\nsoon\nas\na\nconsistent\nset\nof\nmatches\nis\navailable.\nIn\neffect,\neach\ntime\na\npredication\nchanges\ntruthvalue,\na\nsearch\nis\nconducted\nfor\nsuch\nconsistent\nmatches.\nThe\ntask\nof\nthe\nrule\ncompiler\nis\nto\nbuild\na\ndatadriven\nstructure\nwhich\ncan\nconduct\nthis\nsearch\nin\nan\nefficient\nmanner\nwhenever\nthe\ntruthvalue\nof\na\npredication\nin\nthe\nvir\ntual\ndatabase\nchanges.\nThis\nstucture\nis\ncalled\na\nRete\nNetwork;\nthe\ntriggers\nof\na\nforward\nrule\nare\nnodes\nin\nthis\nnetwork,\nspecifically\nmatch\nnodes.\n\nThe Joshua Rule Facilities\nMarch 1999\n(Rete\nnetworks\nwere\noriginally\nused\nin\nProduction\nSystem\nlanguages\nsuch\nas\nOPS\n5.\nFor\nmore\ninformation\non\nRete\nnetworks,\nsee\nC.\nForgy\n1982. \"Rete:\nA\nFast\nAlgo\nrithm\nfor\nthe\nMany\nPattern/Many\nObject\nPattern\nMatch\nProblem.\"\nArtificial\nIntelli\ngence\n19:\npp.\n1737.)\nHere's\nan\nexample\nrule\nwith\na\nmultiple\ntrigger\n\na\nset\nof\npredications\nlinked\nby\nand:\n(defrule\nexample\n(:forward)\nif\n[and\n[foo\n?x]\n[bar\n?x\n?y]\n[bar\n?y\n?z]]\nthen\n<someaction>))\nThis\nrule\nshould\nfire\ntwice\nif\nthe\nfollowing\npredications\nare\nin\nthe\ndatabase:\n[foo\n1]\n[bar\n2]\n[bar\n3]\n[foo\n2]\n[bar\n4]\nOne\nfiring\nshould\nhave\nthe\nfollow\nbinding\nof\nlogic\nvariables:\n?x →\n1,\n?y →\n2,\n?z →\nThe\nsecond\nfiring\nshould\nhave\nthe\nfollowing\nset\nof\nbindings:\n?x →\n2,\n?y →\n3,\n?z →\nThe\nrete\nnetwork\naccomplishes\nthis\ntriggering\nrelatively\nefficiently.\nThis\nrule's\nRete\nnetwork\nconceptually\nlooks\nlike\nthe\ndrawing\nin\nfigure\n11.\nNote\nhow\nthe\nvari\nable\nbindings,\ndenoted\nin\nbraces,\nflow\ndown,\nuntil\nthe\nrule\nis\nfully\ntriggered.\nThis\nRete\nnetwork\nconsists\nof\ntwo\ntypes\nof\nnodes:\nmatch\nnodes\nand\nmerge\nnodes.\nMatch\nnodes\ncontain\nmatch\nprocedures\ngenerated\nby\nthe\nrule\ncompiler;\neach\nmatch\nprocedure\ncorresponds\nto\na\nparticular\npattern\nof\nthe\nrule.\nWhen\na\npredication\nchanges\ntruthvalue\n(and\nassumes\na\ndefinite\ntruthvalue\nfor\nthe\nfirst\ntime),\nthe\nmatch\nnode\nis\nlocated\nin\nthe\nrule\nindex.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndex\ning\nProtocol\",\npage\n36.\nThe\nmatch\nprocedure\nis\nthen\ninvoked\nwith\nthe\npredication\nas\nargument;\nits\njob\nis\nto\ndetermine\nif\nthe\npredication\ncan\nbe\nunified\nwith\nits\ncor\nresponding\npattern.\nIf\nthe\nunification\nsucceeds,\nthe\nmatch\nprocedure\nreturns\na\nbinding\nenvironment\nwhich\nmaps\neach\nlogicvalue\nto\nthe\nvalue\nassigned\nto\nit\nby\nthe\nunification.\nThis\nenvironment\nis\nremembered\nin\nthe\nmatch\nnode.\nMatch\nnodes\nalso\ncontain\npointers\nto\nsubordinate\nmerge\nnodes.\nThe\nmatch\nnode\npasses\nthe\nbinding\nenvironments\nstored\nin\nit\ndown\nto\neach\nmerge\nnode\nsubordinate\nto\nit.\nMerge\nnodes\nreceive\nbinding\nenvironments\nfrom\ntheir\nleft\nand\nright\ninputs\nand,\nif\npossible,\nproduce\na\nconsistent\nextension\nof\nthose\nenvironments\nas\noutput.\nWhen\na\nnew\nenvironment\nis\nsent\nto\na\nmerge\nnode\nfrom\na\nleft\nparent,\nthe\nmerge\nnode\nchecks\nthis\nenvironment\nagainst\nevery\nenvironment\nstored\nin\nits\nright\nparent.\nSimilarly,\nwhen\nan\nenvironment\narrives\nfrom\nthe\nright\nparent,\nthe\nmerge\nnode\nchecks\nit\nagainst\nevery\nenvironment\nstored\nin\nthe\nleft\nparent.\n\nMarch 1999\nThe Joshua Rule Facilities\nMatch node 0\nMatch node 1\nMatch node 2\n[foo ≡ x]\nfor [bar ≡ x ≡ y]\nfor [bar ≡ y ≡ z]\nMerge node 3\nMerge node 4\n{≡ x}\n{≡ x, ≡ y}\n{≡ y, ≡ z}\n{≡ x, ≡ y}\n{≡ x, ≡ y, ≡ z}\nExecution queue\nFigure\n11.\nSample\nRete\nNetwork\nThe\ncheck\nfor\nconsistency\nbetween\npairs\nof\nenvironments\nis\nperformed\nby\na\nmerge\nprocedure\ngenerated\nby\nthe\nrule\ncompiler\nand\nstored\nin\nthe\nmerge\nnode.\nEach\nmerge\nprocedure\ncorresponds\nto\na\nset\nof\npatterns.\nIn\nthe\nrule\nshown\nin\nfigure\nthe\nmerge\nnodes\ncorrespond\nto\nthe\nsets:\n[foo\n?x]\n[bar\n?x\n?y]\n>\nMerge\nNode\n[foo\n?x]\n[bar\n?x\n?y]\n[bar\n?y\n?z]\n>\nMerge\nNode\nIn\neffect,\neach\nmerge\nnode\nin\nthis\nRete\nnetwork\nadds\nin\nthe\nbindings\nresulting\nfrom\nthe\nmatching\nof\none\nadditional\npattern.\nThis\nis\nnormally\nthe\ncase;\nhowever,\nthe\nuse\nof\na\nnested\ngroup\nof\npatterns\nconnected\nby\nand\ncan\nlead\nto\nother\nmerge\npatterns.\nEach\nMerge\nnode\ncontain\npointers\nto\nsubordinate\nmerge\nnodes.\nWhen\nthe\nmerge\nnode\nsuccessfully\nunifies\na\npair\nof\nbinding\nenvironments,\nit\ncreates\nan\nextended\nen\nvironment\nwhich\nit\nstores\nin\nthe\nnode;\nit\nalso\nsends\nthe\nextended\nenvironment\nto\neach\nmerge\nnode\nsubordinate\nto\nit.\nA\nmerge\nnode\nwhich\ncorresponds\nto\nthe\nfull\nset\nof\npatterns\nin\nthe\ntrigger\npart\nof\nthe\nrule\ninitiates\nexecution\nof\nthe\nrule.\nTo\nsummarize,\nmatch\nnodes\nare\nthe\ntriggers\nproduced\nby\nthe\nrule\ncompiler.\nThey\nare\ninvoked\nwhen\na\npredication\nfirst\nassumes\na\ndefinite\ntruthvalue\n(as\nthe\nresult\nof\njoshua:tell\nor\njoshua:justify,\nfor\nexample).\nA\nmatch\nnode\nchecks\nif\nthe\npredica\ntion\nmatches\na\nparticular\npattern.\nIf\nso,\nit\nproduces\nan\nenvironment\nwhich\nis\nsent\nto\nsubordinate\nmerge\nnodes.\nThese\ncheck\nif\nthe\nenvironments\nproduced\nby\nmatch\ning\ndifferent\npatterns\nare\nconsistent\n(in\nthe\nsense\nthat\nthey\nproduce\ncompatible\nlogic\nvariable\nbindings).\nMerge\nnodes\npass\ntheir\nenvironments\nalong\nto\nother\nmerge\nnodes\nuntil\na\nterminal\nmerge\nnode\nfor\na\nrule\nis\nreached.\nAt\nthat\npoint\nall\n\nThe Joshua Rule Facilities\nMarch 1999\nthe\npatterns\nfor\nthe\nrule\nhave\nbeen\nconsistently\nmatched\nand\nthe\nrule\nmay\nbe\nexe\ncuted.\nAll\nthese\nenvironments\nare\nremembered,\nso\nthat\nrules\ncan\nbe\npartially\ntrig\ngered\nand\nnot\nhave\nto\nredo\nthe\npartial\ntrigger\ncombination.\nThe\ncommand\nGraph\nForward\nRule\nTriggers\nlets\nyou\ndisplay\nthe\nRete\nnetwork\nfor\nthe\nrule\n(s)\nspecified.\nFigure12shows\nthe\ngraph\nfor\nthe\nrule\nEXAMPLE.\nFigure\n12.\nSample\nRete\nNetwork\nDisplay\nJoshua's\nRete\nnetworks\nactually\ninclude\nfour\nkinds\nof\nnodes,\nmatch\nnodes,\nmerge\nnodes,\nprocedural\nnodes\nand\nor\nnodes.\nWe\nhave\nalready\nseen\nmatch\nand\nmerge\nnodes;\nwe\nnow\nturn\nto\nthe\nother\ntwo\ntypes\nof\nrete\nnetwork\nnodes.\nSome\nrules\ninclude\nprocedural\ntriggers,\ni.e.\nLisp\ncode\nin\nthe\nifpart\nof\nthe\nrule.\nPro\ncedural\ntriggers\ncan\nplay\neither\nof\ntwo\nroles:\nfilters\nand\ngenerators.\nA\nfilter\nis\na\npiece\nof\nLisp\ncode\nthat\nreturns\nt\nor\nnil\nbut\ndoes\nnot\nbind\nnew\nlogic\nvariables.\nA\ngenerator\nis\na\npiece\nof\nLisp\ncode\nthat\nbinds\nnew\nlogic\nvariables\n(using\njoshua:ask\nor\njoshua:unify)\nand\ncalls\njoshua:succeed\n(possibly\nmany\ntimes).\nCalling\njoshua:succeed \"endorses\"\nthe\ncurrent\nvariable\nbindings,\nthus\nallowing\nthe\nrule\nbody\nto\nexecute\nwith\nthose\nbindings.\nThe\nRete\nnetworks\nfor\nthese\nrule\nhave\nprocedural\nnodes\ncorresponding\nto\nthis\ncode.\nHere's\na\nsimple\nexample\nof\na\nprocedural\ntrigger,\nacting\nas\na\nfilter\non\nthe\nprevious\nbindings:\n(defrule\nfilterexample\n(:forward)\nif\n[and\n[foo\n?x]\n(>\n?x\n5)\n[bar\n?x\n?y]]\nthen\n<someaction>))\nFigure\nshows\nthe\ngraph\nfor\nthe\nrule\nfilterexample.\nThis\nfilter\nensures\nthat\nthe\nlogic\nvariable\n?x\nis\nbound\nto\na\nvalue\nlarger\nthan\n5.\nWithin\nthe\nfilter\nyou\ncan\nrefer\nto\nthe\nvalues\nbound\nto\nthe\nlogic\nvariables\nin\nprevi\nous\npatterns.\nGenerators\ncan\nsideeffect\nthe\ncurrent\nvariable\nbindings\nand\nthey\ncan\njoshua:succeed\nseveral\ntimes.\nHere\nis\nan\nexample\nof\na\ngenerator:\n\nMarch 1999\nThe Joshua Rule Facilities\nFigure\n13.\nSample\nRete\nNetwork\nDisplay\nwith\nFilter\nNodes\n(defrule\neatingtest\n(:forward)\nIf\n[and\n[goodtoeat\n?x]\n[hungry\n?y]\n(loop\nfor\neatingmode\nin\n'(orally\nintravenously)\ndo\n(withunification\n(unify\n?z\neatingmode)\n(succeed)))\n[caneat\n?y\n?z]]\nThen\n...)\nHere\nthe\ntriggers\ncheck\nto\nsee\nif\n?x\nis\nsomething\ngood\nto\neat\nand\n?y\nis\nhungry.\nFor\nevery \"eating\nmode\"\nthat\n?y\ncan\nuse,\nthe\nrule\nunifies\n?z\nto\nthat\nmode\nand\ncalls\njoshua:succeed.\nWhen\na\nforward\nchaining\nrule\nuses\nor\nto\nlink\ntogether\ntrigger\npatterns,\nthe\nrule\ncompiler\nbuilds\nan\nor\nnode\nin\nthe\nRete\nnetwork.\nFor\nexample,\nthe\nrule\nabove\ncould\nhave\nalso\nbeen\nwritten\nas\nfollows:\n(defrule\neatingtest\n(:forward)\nIf\n[and\n[goodtoeat\n?x]\n[hungry\n?y]\n[or\n[eatingmode\n?y\norally]\n[eatingmode\n?y\nintravenously]]\n[caneat\n?y\n?z]]\nThen\n...)\nThen\nwe\nwould\nget\na\nRete\nnetwork\nwith\nan\nor\nnode\nwhich\njoins\nthe\ntwo\nmatch\nnodes\nfor\nthe\n[eatingmode\n?y\norally]\nand\nthe\n[eatingmode\n?y\nintravenously]\npatterns,\nas\nshown\nin\nfigure\n14.\nThe\nforward\nrule\nsyntax\nallows\narbitary\nnesting\nof\ngroups\nof\npatterns\nlinked\nby\nand\nand\nor.\nSemantically\nthere\nis\nno\nreason\nto\nnest\none\nand\ngroup\nwithin\nanother;\nhowever,\nthere\nis\na\nprocedural\ndifference.\nEach\nnested\nand\ngroup\nforms\nits\nown\nsub\nrete\nnetwork\n(i.e\nits\nown\nmerge\ngroup)\nwhich\nis\nthen\nmerged\nwith\nthe\npatterns\nfrom\nthe\nenclosing\ngroup.\nConsider\nthe\nfollowing\nrule\nwith\na\nnested\nand\ngroup:\n(defrule\nnestedand\n(:forward)\nif\n[and\n[foo\n?x]\n[and\n[bar\n?x\n?y]\n[bar\n?y\n?z]]]\nthen\n<\n...\n>)\n\nThe Joshua Rule Facilities\nMarch 1999\nFigure\n14.\nSample\nRete\nNetwork\nDisplay\nwith\nor\nNode\nThe\nrete\nnetwork\nfor\nthis\nrule\nis:\nFigure\n15.\nRete\nNetwork\nFor\nRule\nwith\nNested\nAnds\nNotice\nthat\nthe\ntwo\nBAR\npatterns\nmerge\nfirst\nand\nthen\nthe\nresult\nof\nthis\nis\nmerged\nwith\nthe\nFOO\npatterns.\nSuppose\nthat\nit\nis\nunlikely\nthat\nthe\nresults\nof\nmatching\nthe\ntwo\nBAR\npatterns\nwill\nsuccessfully\nmerge\nbut\nthat\nit\nis\nvery\nlikely\nthat\nthe\nresult\nof\nmatching\nthe\nFOO\npattern\nwill\nalmost\ncertainly\nmerge\nsuccessfully\nwith\nthe\nresult\nof\nmatching\nthe\nfirst\nBAR\npattern.\nThe\nrete\nnetwork\nshown\nwill\nimprove\nefficiency\nby\nnot\ngenerating\na\nmerged\nenvironment\nresulting\nfrom\nmatching\nthe\nfirst\ntwo\npatterns\nwhen\nit\nis\nlikely\nthat\nthis\nintermediate\nresult\nwill\nnot\nsuccessfully\nmerge\nwith\nthe\nresult\nof\nmatching\nthe\nlast\npattern.\nIn\nmost\ncases,\nthe\ncode\ngenerated\nby\nthe\nrule\ncompiler\ncan\nbe\nmade\nsignificantly\nmore\ncompact\nusing\na\nfew\nsimple\ntechniques,see\nthe\nsection \"Optimizing\nForward\nRule\nCompilation\nfor\nSemi\nUnification\".\nThe\nforward\nrule\ncompiler\nmay\nbe\ncustomized\nby\nuse\nof\nthe\nJoshua\nprotocol\nfunc\ntions:\njoshua:expandforwardruletrigger,\njoshua:writeforwardrulefull\nmatcher,\njoshua:writeforwardrulesemimatcher,\nand\njoshua:positionsforward\nrulematchercanskip.\n\nMarch 1999\nThe Joshua Rule Facilities\nThe\njoshua:expandforwardruletrigger\nprotocol\nfunction\nallows\nyou\nto\ncontrol\nhow\ntrigger\npatterns\nare\ncompiled\nby\nfirst\nallowing\nyou\nto\nexpand\nthe\ntrigger\ninto\na\nset\nof\nexpressions\nwhich\nare\nunderstood\nby\nthe\nrule\ncompiler.\nThe\njoshua:writeforwardrulefullmatcher\nand\njoshua:writeforwardrulesemi\nmatcher\nprotocol\nfunctions\nallow\nyou\nto\ncontrol\nthe\ngeneration\nof\nthe\npattern\nmatching\ncode\ncorresponding\nto\neach\nforward\nrule\ntrigger.\nThe\njoshua:positionsforwardrulematchercanskip\nprotocol\nfunction\nis\ncalled\nby\njoshua:writeforwardrulesemimatcher;\nit\nallows\nyou\nto\nprovide\nadvice\nto\nthe\nmatch\ngenerator\nabout\nwhat\nparts\nof\na\npattern\nhave\nalready\nbeen\nchecked\nby\nthe\nrule\nindexer.\nSee\nthe\nsection \"Customizing\nthe\nRule\nIndex\",\npage\n88.\n3.2.2. The Backward Rule Compiler\nThis\nsection\ndescribes\nthe\nrule\ncompiler's\noperation\non\nbackward\nchaining\nrules.\nHere,\nin\nschematic\nform,\nis\na\nbackward\nchaining\nrule.\n(defrule\n<name>\n(:backward\n<...>)\nif\n<action>\nthen\n<trigger>)\nAs\nthis\nindicates,\nthe\ntrigger\nof\na\nbackward\nchaining\nrule\nis\nthe\nthenpart\nof\nthe\nrule.\nA\nbackward\ntrigger\nis\na\nsingle\npredication.\nThe\nmatcher\nfor\nthe\ntrigger\nof\na\nbackward\nchaining\nrule\nis\nsimple:\nmatch <trigger>\ninvoke rule body\nFor\nthe\naction\npart\nof\na\nbackward\nchaining\nrule,\nthe\nrule\ncompiler\ncreates\na\nfunc\ntion\nthat\nis\ncalled\nwhen\nthe\nrule\nis\ninvoked.\n(defun\n<name>\n(args\n...\n<continuation>\n...)\n...\nBODY\n...\n(funcall\n<continuation>)\nCalling\nthe <name>\nis\nreferred\nto\nas\nfiring\nthe\nrule,\nand\ncalling\nthe <continuation>\nis\nreferred\nto\nas\nsucceeding.\nThe\nBODY\ndecides\nwhen\nto\ncall\nthe\ncontinuation,\nthis\nbeing\nthe\nmain\ntask\nof\nthe\naction\npart\nof\na\nbackward\nchaining\nrule.\nThree\ntypes\nof\nactions\nare\npossible.\n1.\nThe\naction\nis\na\nsingle\npredication\n(excluding\njoshua::and),\nand\nthe\nrule\ncom\npiler\ngenerates\nan\njoshua:ask\nfor\nthat\npredication:\n(ask\n<predication>\n<continuation>)\n2.\nThe\naction\nincludes\nmultiple\npredications\njoined\nby\nan\njoshua::and\n\nThe Joshua Rule Facilities\nMarch 1999\n[and\np1\np2\n...\npn]\nand\nthe\nrule\ncompiler\ngenerates\na\nset\nof\nnested\njoshua:ask\nfunctions:\n(ask\np1\n#'(lambda\n(p1support)\n(ask\np2\n...\n(ask\npn\n...))))\nNote\nthat\nthe\nlast\ncontinuation\n(the\ninnermost\njoshua:ask)\nis\nthe\ncontinua\ntion\nargument\nto\nthe\nrule.\n3.\nThe\naction\npart\nof\na\nbackward\nchaining\nrule\nis\na\nLisp\nform.\nIn\nthis\ncase,\nthe\nform\nis\ncalled\nand\nif\nit\nreturns\nnonnil,\nthe\nfiring\nof\nthe\nrule\ngoes\non.\nUsers\ncan\nforce\nrule\nfiring\nto\ncontinue\nby\nhaving\nthe\nform\ncall\njoshua:succeed\nex\nplicitly.\nHere\nis\nan\nexample\nof\nthis\nkind\nof\naction.\n(defvar\n*knownfoods*\n'(chinesefood))\n(defrule\ngoodtoeatrule\n(:backward)\nif\n(typecase\n?x\n(sys:unboundlogicvariable)\n;;\nif\n?x\nis\nunbound\nsucceed\nonce\nfor\nevery\nelement\nof\n*knownfoods*\n(loop\nfor\nfood\nin\n*knownfoods*\ndoing\n(unify\n?x\nfood)\n(succeed))\n;;the\ncase\nwhere\n?x\nis\nbound\nis\nomitted.\n...\n)\nthen\n[goodtoeat\n?x])\nIn\nthis\nway,\nthe\nprocedural\nLisp\ncode\nin\nthe\nifpart\ncan\nact\neither\nas\na\nfilter\nor\na\ngenerator.\nThis\ntreatment\nof\nLisp\ncode\nis\nthe\nsame\nas\nfor\nforward\nrules.\nSee\nthe\nsection \"The\nForward\nRule\nCompiler\",\npage\n27.\nThe\nperson\nthat\ncalls\nthis\nrule\nis\ninterested\nin\nobtaining\na\nlist\nof\neverything\nthat\nis\ngood\nto\neat\nor\nin\nfinding\nout\nif\na\nspecific\nfood\nis\ngood\nto\neat.\nThe\nbehavior\nof\nthe\nbackward\nrule\ncompiler\ncan\nbe\ncustomized\nby\nuse\nof\nJoshua\nprotocol\nfunctions:\njoshua:expandbackwardruleaction\nand\njoshua:write\nbackwardrulematcher.\nThe\njoshua:expandbackwardruleaction\nprotocol\nfunction\nallows\nyou\nto\ncontrol\nhow\nthe\naction\npart\nof\na\nbackward\nrule\n(i.e.\nthe\nIfpart)\npatterns\nare\ncompiled\nby\nfirst\nallowing\nyou\nto\nexpand\nthe\nactions\ninto\na\nset\nof\nexpressions\nwhich\nare\nunder\nstood\nby\nthe\nrule\ncompiler.\nThe\njoshua:writebackwardrulematcher\nprotocol\nfunction\nallows\nyou\nto\ncontrol\nthe\ngeneration\nof\nthe\npattern\nmatching\ncode\ncorresponding\nto\nthe\nbackward\nrule's\ntrigger\n(i.e.\nits\nthen\npart).\n\nMarch 1999\nThe Joshua Rule Facilities\n3.3. Ordering Rule Execution\nWhen\nyou\ndefine\na\nrule,\nthe\nkeyword\n:importance\nlets\nyou\nspecify\nthe\norder\nof\nrule\nexecution.\nThis\nkeyword\ntakes\na\nvalue\nthat\ncan\nbe\nany\nnumeric\nargument,\na\nsymbol,\nor\na\nform.\nThe\nlarger\nthe\nnumber,\nthe\nhigher\nthe\npriority.\nHigh\npriority\nrules\nrun\nfirst.\nSome\nexpense\nis\nassociated\nwith\nusing\n:importance.\nIn\nforward\nchaining\nrules\nor\ndering\ncauses\na \"bestfirst\"\nsearch\nof\nrules\naccording\nto\nthe\nvalue\nassociated\nwith\n:importance.\nBackward\nchaining\nonly\norders\nthe\nlocal \"bestfirst\"\nsearch\nof\nrelated\nrules.\nUsing\n:importance\nis\nconvenient,\nbut\nreduces\nefficiency.\nThe\nsystem\nis\nmost\neffi\ncient\nwhen\nonly\none\nrule\nat\na\ntime\nis\napplicable.\nA\nsituation\nwhere\nmore\nthan\none\nrule\nis\napplicable\nusually\nindicates\nthat\ninsufficient\nknowledge\nis\nbuilt\ninto\nthe\nrules.\nFor\nexample,\na\npicturetaking\nprogram\nmight\nhave\nthree\nseparate\nrules\nre\nsponding\nto\na\nrequest\nfor\na\npicture:\none\nrule\nfocuses\nthe\ncamera,\nanother\nreads\nthe\nlight\nmeter,\nand\nanother\nsets\nthe\ntime\nand\naperture.\nIf\nyou\nnow\ntell\nthe\nsystem\nto\ntake\na\npicture,\nit\nwill\nnot\nknow\nwhich\nof\nthe\nthree\nrules\nto\nexecute\nfirst.\nAlthough\nthe\n:importance\nfeature\ncould\nbe\nused\nto\norder\nthe\nexecution\nof\nthese\nrules,\nit\nwould\nbe\nclearer\nand\nmore\nrobust\nto\nmake\nthe\nrules\nmore\nexplicit\nabout\ntheir\npre\nconditions,\nthereby\nrestricting\ntheir\napplicability\n(your\nfocusing\nrule\nmight\nonly\ntrigger\nif\nthe\nlight\nmeter\nshows\nacceptable\nreadings,\nand\nso\non).\nThe\n:importance\nfeature\ncan\nbe\nquite\nuseful\nto\ncontrol\nperformance\ntradeoffs,\nsuch\nas\ntrying\na\ncheap\nalgorithm\nfirst,\nin\npreference\nto\nmore\nexpensive\nalgorithms.\n(Readers\nfamiliar\nwith\nthe\nproduction\nsystem\nmodel\nused\nin\nOPS5\nwill\nrecognize\nthat\nthe\n:importance\nfeature\nserves\na\nsimilar\nrole\nfor\nforward\nrules\nto\nthe\nconflict\nresolution\nstrategy\nof\na\nproduction\nsystem).\nSometimes\nit\nis\nuseful\nto\nbe\nable\nto\nsuspend\nforward\nrule\ntriggering\nuntil\nthe\nexe\ncution\nof\na\nblock\nof\ncode\nhas\ncompleted.\nThe\ncode\nmight\ncontain\na\nnumber\nof\njoshua:tell's\nand\njoshua:untell's\nintermixed\nin\nsuch\na\nway\nthat\nthe\nchanges\nto\nthe\ndatabase\nare\nnot\ncoherent\nuntil\nthe\nentire\nblock\nof\ncode\nhas\nfinished\nexecuting.\nJoshua\nprovides\na\nspecial\nform\nwhich\noffers\nthis\nform\nof\ncontrol.\nSee\nthe\nmacro\njoshua:withatomicaction,\npage\n254.\n3.4. Controlling Rule Invocation\nTypically\nduring\na\njoshua:tell\nor\nan\njoshua:ask,\nthe\ndatabase\nis\nsearched\nfirst\n(joshua:insert,\nor\njoshua:fetch,\nrespectively),\nafter\nwhich\nthe\nappropriate\ntrigger\nmapping\nfunction\n(forward,\nbackward,\nor\nbackward\nquestion)\nis\nexecuted,\nto\nfind\nand\nrun\nrelevant\nrules\nor\nquestions.\nSeveral\nfacilities\nare\navailable\nto\nlet\nyou\nmodi\nfy\nthis\nsequence.\nWhen\nyou\nset\nthe\njoshua:ask\nkeyword\n:dobackwardrules\nto\nnil,\nbackward\nrule\ninvocation\nis\ninhibited,\nand\nthe\nsystem\ndoes\na\ndatabase\nlookup\nonly.\nExample:\n\nThe Joshua Rule Facilities\nMarch 1999\n(definepredicate\nage\n(person\nage))\n(definepredicate\nattainedmajority\n(person))\n(defrule\noldenough\n(:backward)\nif\n[and\n[age\n?person\n?age]\n(>\n?age\n21)]\nthen\n[attainedmajority\n?person])\n(tell\n[age\nFred\n21])\n(ask\n[attainedmajority\nFred]\n#'printquery\n:dobackwardrules\nnil)\nNIL\n;\ninformation\nis\nnot\nin\nthe\ndatabase\n(ask\n[attainedmajority\nFred]\n#'printquery)\n[ATTAINEDMAJORITY\nFRED]\n;\nbackward\nrule\nis\ninvoked\nNIL\nSix\nbuiltin\nflavors\nare\nalso\navailable\nfor\npredicates\nused\nin\njoshua:ask\ngoals.\nThese\nflavors\ndo\nsubsets\nof\nwhat\njoshua:ask\nnormally\ndoes,\nby\nleaving\nout\none\nor\nmore\nof\nthe\nsteps\njoshua:askdata,\njoshua:askrules,\nor\njoshua:askquestions.\nThus\nthe\nmodels\nsave\na\ncertain\namount\nof\noverhead\nwhen\ntheir\npredicates\nare\nused\nas\ngoals\nto\njoshua:ask.\nThe\nsteps\nwhich\nare\ndone\nare\nindicated\nby\nthe\nnames:\n-\njoshua:askdataonlymixin\n-\njoshua:askrulesonlymixin\n-\njoshua:askquestionsonlymixin\n-\njoshua:askdataandrulesonlymixin\n-\njoshua:askdataandquestionsonlymixin\n-\njoshua:askrulesandquestionsonlymixin\n3.5. The Joshua Rule Indexing Protocol\nJoshua\nmanages\nrules\nby\nmanipulating\nrule\ntriggers.\nThere\nare\nfour\ntrigger\nopera\ntions,\nnamely:\n-\nAdding\ntriggers\n-\nDeleting\ntriggers\n-\nLocating\ntriggers\n-\nIterating\nover\ntriggers\nRule\nindexing\nrefers\nto\nthe\nprotocol\nsteps\nthat\ndetermine\nhow\nthese\nrule\noperations\nare\nperformed.\n\nMarch 1999\nThe Joshua Rule Facilities\nOften\nsystems\nspend\nmost\nof\ntheir\ntime\nlooking\nfor\napplicable\nrules,\nas\nopposed\nto\nexecuting\nthem.\nIf\nthis\nis\nthe\ncase,\ncustomizing\nthe\ntrigger\nindex\ncan\nhelp.\nThis\nis\nthe\nprocess\nof\nchanging\nthe\nway\nthe\nsystem\nstores,\nremoves,\nlooks\nup,\nand\niterates\nover\ntriggers.\nIf\nyou\nprovide\na\nconsistent\nalternative\nimplementation\nof\nthese\nac\ntions,\nyou\nhave\nchanged\nthe\nway\nyour\nprogram\nlooks\nfor\nrules.\nThis\nis\ndiscussed\nin\ndetail\nelsewhere:See\nthe\nsection \"Customizing\nthe\nRule\nIndex\",\npage\n88.\nThis\nchapter\ncovers\nthe\nprotocol\nand\nimplementation\ndetails\nthat\nyou\nneed\nto\nknow\nabout\nbefore\nyou\nattempt\nto\ncustomize\nthe\nrule\nindex.\nIf\nyou\nare\nusing\nthe\ndefault\nrule\nindex,\nyou\nmay\nnot\nfind\nthese\ntopics\nof\nimmediate\ninterest.\nThe\nrule\nindexing\nprotocol\nuses\nseparate\nfunctions\nfor\nforward\nand\nbackward\nrule\nindexing\noperations.\nHere\nis\nthe\nlist\nof\nfunctions.\njoshua:addforwardruletrigger\nAdd\na\nforward\nrule\ntrigger\njoshua:addbackwardruletrigger\nAdd\na\nbackward\nrule\ntrigger\njoshua:deleteforwardruletrigger\nRemove\na\nforward\nrule\ntrigger\njoshua:deletebackwardruletrigger\nRemove\na\nbackward\nrule\ntrigger\njoshua:locateforwardruletrigger\nFind\na\nforward\ntrigger\ndata\nindex,\nand\ncalls\na\ncontinuation\non\nit.\njoshua:locatebackwardruletrigger\nFind\na\nbackward\ntrigger\ndata\nindex,\nand\ncalls\na\ncontinuation\non\nit.\njoshua:mapoverforwardruletriggers\nCall\na\ncontinuation\non\nall\nforward\ntriggers\nthat\nmight\nunify\nwith\na\ngiven\npredication\njoshua:mapoverbackwardruletriggers\nCall\na\ncontinuation\non\nall\nbackward\ntriggers\nthat\nmight\nunify\nwith\na\ngiven\npredication\nFigure\nshows\nhow\nthe\nruleindexing\nfunctions\nrelate\nto\neach\nother.\nLike\nthe\ndata\nindexing\nfunctions,\nthe\ntrigger\nindexing\nfunctions\nwork\ntogether\nin\nthe\nsense\nthat\nthey\nmust\nshare\na\nknowledge\nof\nthe\ntrigger\nstorage\nlocation.\nThe\nadding\nfunctions\nmust\ninstall\na\ntrigger\nin\na\nplace\nsuch\nthat\nthe\nmapping\nand\ndelet\ning\nfunctions\ncan\nfind\nit.\nThe\ndeleting\nfunctions\nmust\ndelete\ntriggers\nfrom\nplaces\nwhere\nthe\nmapping\nfunctions\nlook\nfor\nthem.\nThe\ntrigger\nobject\nthat\nis\nprocessed\nby\nthe\nruleindexing\nprotocol\nis\ncreated\nby\nthe\nrule\ncompiler.\nExactly\nwhat\nthis\nobject\nis\ndepends\non\nwhat\nkind\nof\nrule\nis\ninvolved.\nFor\na\nforward\nrule,\nthe\ntriggers\nare\nRete\nmatch\nnodes.\nSee\nthe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNetwork\",\npage\n27.\nInvoking\na\ntrigger\nmeans\na\ncall\nto\nsome\nRete\nnetwork\ncode\nto\nstart\nthe\nmatch\nprocess.\nFor\nbackward\nrules\nthe\n\nThe Joshua Rule Facilities\nMarch 1999\nRULE-INDEXING PROTOCOL\nadd-forward-rule-trigger\ndelete-forward-rule-trigger\nmap-over-forward-rule-triggers\nlocate-forward-rule-trigger\ndelete-backward-rule-trigger\nlocate-backward-rule-trigger\nmap-over-backward-rule-triggers\nadd-backward-rule-trigger\nFigure\n16.\nRule\nIndexing\nProtocol\n(unique)\ntrigger\nis\nalso\na\nmatch\nprocedure,\nbut\nwithout\nsome\nof\nthe\ncomplications\nof\nthe\nRete\nmechanism.\nThe\ncontract\nof\nthe\nrule\nindexing\nfunctions\nis\nvery\nsimilar\nto\nthat\nof\nthe\ndata\nin\ndexing\nfunctions.\n(See\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.)\n3.5.1. The Contract of the Trigger Adding Functions\nThe\nprotocol\nfunctions\njoshua:addforwardruletrigger\nand\njoshua:add\nbackwardruletrigger\nare\nanalogous\nto\nthe\ndataindexing\nfunction\njoshua:insert.\nWhen\na\nnew\nrule\nis\ncompiled,\nthe\ncompiler\nuses\nthe\nappropriate\nversion\nof\nthe\ntrigger\nadding\nfunctions\n(forward\nor\nbackward)\nto\nadd\na\ntrigger\nobject\nto\nthe\ndata\nstructure\nthat\nholds\ntrigger\nobjects.\nWhen\na\nnew\nforward\ntrigger\nis\ninstalled,\nthe\ndatabase\nmust\nbe\nsearched\nfor\nfacts\nthat\nmight\nmatch\nthe\nnew\ntrigger.\njoshua:addforwardruletrigger\ndoes\nthis\ndatabase\nlookup\nby\ncalling\nthe\nprotocol\nfunction\njoshua:prefetchforwardrule\nmatches;\nthe\ndefault\nversion\nof\nthis\nprotocol\nfunction\nsimply\ncalls\njoshua:ask\nto\nfind\nthe\nappropriate\nfacts.\nIn\nthe\ndefault\nimplementation,\nthe\nfinding,\nbuilding,\nand\nupdating\nof\ntrigger\nstor\nage\nstructures\nis\nthe\nresponsibility\nof\nthe\ntrigger\nlocating\nfunctions,\njoshua:locate\nforwardruletrigger,\nand\njoshua:locatebackwardruletrigger.\nSee\nthe\nsection\n\"The\nContract\nof\nthe\nTrigger\nLocating\nFunctions\",\npage\n39.\nFigure\nshows\nthe\nprotocol\nfor\nthe\ntrigger\nadding\nfunctions\nand\ntheir\ndefault\nimplementation.\nSee\nthe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNetwork\",\npage\n27.\n3.5.2. The Contract of the Trigger Deleting Functions\nThe\nprotocol\nfunctions,\njoshua:deleteforwardruletrigger\nand\njoshua:delete\nbackwardruletrigger\nare\nanalogous\nto\nthe\ndataindexing\nfunction\njoshua:uninsert.\nThese\ntrigger\ndeleting\nfunctions\nare\nused\nby\njoshua:undefrule\nto\nremove\na\ntrigger\nobject\nfrom\na\nlist\nof\ntriggers.\nThe\ndefault\nimplementation\nstores\ntrigger\ninformation\nin\na\ndiscrimination\nnet.\n\nMarch 1999\nThe Joshua Rule Facilities\nadd-forward-rule-trigger\n[Generic Function]\n(add-forward-rule-trigger default-protocol-implementation-model)\n[Protocol Method]\n(locate-forward-rule-trigger default-protocol-implementation-model)\n[Protocol Method]\nlocate-forward-rule-trigger\n[Generic Function]\n(locate-backward-rule-trigger default-protocol-implementation-model)\nlocate-backward-rule-trigger\n[Generic Function]\n[Protocol Method]\n(add-backward-rule-trigger default-protocol-implementation-model)\nadd-backward-rule-trigger\n[Generic Function]\n[Protocol Method]\nprefetch-forward-rule-matches\nFigure\n17.\nThe\nTriggerAdding\nProtocol\nand\nDefault\nImplementation\nThe\ntrigger\ndeleting\nfunctions\nrely\non\nthe\ntrigger\nlocating\nfunctions\nto\ndo\nthe\nac\ntual\nremoval\nof\nthe\ntrigger\nand\nto\nupdate\nthe\ntrigger\nstorage\nlocation.\nSee\nthe\nsec\ntion \"The\nContract\nof\nthe\nTrigger\nLocating\nFunctions\",\npage\n39.\nFigure\nshows\nthe\nprotocol\nfor\nthe\ntrigger\ndeleting\nfunctions\nand\ntheir\ndefault\nimplementation.\n3.5.3. The Contract of the Trigger Locating Functions\nThe\ncontract\nof\nthe\nprotocol\nfunctions\njoshua:locateforwardruletrigger\njoshua:locatebackwardruletrigger\nand\njoshua:locatebackwardquestion\ntrigger\nis\nto\nfind,\nbuild,\nand\nupdate\nforward\nand\nbackward\ntrigger\nstorage\nstruc\n\nThe Joshua Rule Facilities\nMarch 1999\n(delete-forward-rule-trigger default-protocol-implementation-model)\n[Protocol Method]\nlocate-forward-rule-trigger\n[Generic Function]\ndelete-forward-rule-trigger\n[Generic Function]\n[Protocol Method]\n(locate-forward-rule-trigger default-protocol-implementation-model)\n(delete-backward-rule-trigger default-protocol-implementation-model)\n(locate-backward-rule-trigger default-protocol-implementation-model)\nlocate-backward-rule-trigger\ndelete-backward-rule-trigger\n[Generic Function]\n[Protocol Method]\n[Generic Function]\n[Protocol Method]\nFigure\n18.\nThe\nTriggerDeleting\nProtocol\nand\nDefault\nImplementation\ntures.\nThe\nupdating\nportion\nof\nthe\ncontract\nis\nimplemented\nby\na\ncontinuation\nargu\nment\nto\njoshua:locateforwardruletrigger,\njoshua:locateforwardruletrigger\nand\njoshua:locatebackwardquestiontrigger.\nThis\ncontract\nis\nimplemented\nas\nfollows:\n-\nThe\nlocate\nmethod\nfinds\nthe\nplace\nwhere\nthe\ntrigger\nis\nto\nbe\nstored,\nor\nbuilds\nit,\nif\nit\ndoes\nnot\nyet\nexist\n-\nThe\nmethod\ncalls\nits\ncontinuation\nfunction,\npassing\nit\nthe\nlist\nof\nexisting\ntrig\ngers\nthat\nit\njust\nfound.\n-\nThe\ncontinuation\nfunction:\n°\nChecks\nif\nthe\ntrigger\nbeing\nadded\n(deleted)\nis\nnew,\nor\nif\nit\nis\na\nvariant\nof\nan\nexisting\ntrigger\n(one\ntrigger\nmay\nrepresent\nseveral\nvariant\npatterns).\n\nMarch 1999\nThe Joshua Rule Facilities\n°\nUpdates\nits\nlist\nof\ntriggers\nto\nreflect\nthe\naddition\nor\ndeletion\nof\nthe\ntrigger,\nif\nit\nis\nnot\na\nvariant.\n°\nReturns\nthree\nvalues:\n1.\nA\nnew\nlist\nof\ntriggers\n(or\nthe\nold\none,\nif\nnothing\nhas\nchanged).\n2.\nA\nboolean\nflag\nindicating\nwhether\nor\nnot\nit\nmodified\nthe\nlist\nof\ntriggers\n3.\nThe\ncanonical\ntrigger\nfor\nthis\npattern.\nIf\nthe\ntrigger\nbeing\nadded\nis\na\nvariant\nof\nan\nexisting\ntrigger,\nthen\nthe\nexisting\ntrigger\nwill\nbe\nreturned\nas\nthe\ncanonical\ntrigger.\nIf\nthe\ntrigger\nbeing\ninserted\nis\nthe\nfirst\nsuch\npattern,\nthen\nit\nwill\nbe\nreturned\nas\nthe\ncanonical\ntrigger.\n-\nThe\nlocate\nmethod\nupdates\nthe\ntrigger\nindex\nstructure\nif\nthe\ncontinuation\nindi\ncates\nthat\na\nchange\nis\nappropriate.\n-\nThe\nlocate\nmethod\nreturns\nthe\ncanonical\ntrigger\nas\nits\nvalue.\nFigures\nand\nshow\nthe\ntrigger\nlocating\nprotocol\nand\nits\ndefault\nimplementa\ntion.\nPlease\nconsult\nthe\ndictionary\nentries\nfor\nthe\ngeneric\nfunctions\njoshua:locate\nbackwardruletrigger,\njoshua:locateforwardruletrigger\nand\njoshua:locate\nbackwardquestiontrigger\nfor\nmore\ndetailed\ninformation\nabout\nthis\nprotocol.\n3.5.4. The Contract of the Trigger Mapping Functions\nThe\ntrigger\nmapping\nprotocol\nfunctions,\njoshua:mapoverforwardruletriggers\nand\njoshua:mapoverbackwardruletriggers\nare\nresponsible\nfor\nlooking\nup\nrule\ntriggers\nfor\njoshua:tell\nand\njoshua:ask\nin\nthe\nplace\nwhere\nthe\nindexing\nfunctions\nhave\nstored\nthese\ntriggers.\nThe\nmapping\nfunctions\nwalk\nover\nall\ntriggers\nthat\nmight\nunify\nwith\nthe\njoshua:tell\nor\njoshua:ask\npattern,\nand\ncall\nthe\ncontinuation\non\neach\ncandidate\ntrigger.\nIf\nyou\nare\nwriting\nyour\nown\ntrigger\nstorage\nmethods,\nyour\nimplementation\nof\nthe\ntrigger\nmapping\nfunctions\nmust\nbe\nconsistent\nwith\nthe\nimplementation\nof\nthe\ntrigger\nadding,\nlocating,\nand\ndeleting\nfunctions.\nSee\nthe\nsec\ntion \"Customizing\nthe\nRule\nIndex\",\npage\n88.\n3.5.4.1. Finding Forward Rule Triggers\nWhen\njoshua:tell\ninstalls\na\nnew\nfact\ninto\nthe\ndatabase,\nthe\nsystem\nmust\nfind\nall\nforward\nrules\nthat\ncan\nbe\n(partially)\ntriggered\nby\nthis\nnew\nfact.\nIt\nis\nthe\ncontract\nof\njoshua:mapoverforwardruletriggers\nto\nlook\nup\nthe\nappropriate\nrule\ntriggers.\nIn\nthe\ndefault\nimplementation,\nforward\nrule\ntriggers\nare\nRete\nNetwork\nnodes\nbuilt\nby\nthe\ncompiler.\nThe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNetwork\",\ndiscusses\nthis\ntopic\nin\nmore\ndetail.\nAs\nwe\nsee\nfrom\nfigure\n19,\nfinding\nthe\nlist\nof\ntriggers\nhappens\nin\nthe\ncourse\nof\njus\ntifying\nthe\nnewly\ninserted\nfact.\n\nThe Joshua Rule Facilities\nMarch 1999\ntell\n[Generic Function]\n(tell default-tell-model)\n[Method]\nDefault implementation of tell\nDefault implementation of act-on-truth-value-change\n(act-on-truth-value-change default-tell-model)\n(act-on-truth-value-change default-protocol-implementation-model :before)\n(act-on-truth-value-change default-protocol-implementation-model :after)\n[Methods]\n(map-over-forward-rule-triggers default-protocol-implementation-model)\nmap-over-forward-rule-triggers\n[Generic Function]\n[Protocol Method]\nDefault implementation of map-over-forward-rule-triggers\ndiscrimination-net-fetch\n[Function]\njustify\n[Generic Function]\ninsert\n[Generic Function]\n.\n.\n.\n(justify default-tell-model)\n[Method]\nact-on-truth-value-change\n[Generic Function]\nDefault implementation of justify\nFigure\n19.\nThe\njustify\nprotocol\nand\nits\ndefault\nimplementation\n\nMarch 1999\nThe Joshua Rule Facilities\nThe\nsequence\nis\nas\nfollows:\nThe\njoshua:tell\nmethod\nforces\nthe\ntruth\nvalue\nof\nthe\njust\ninserted\npredication\nto\nbe\njoshua:*unknown*\nif\nthe\npredication\nis\nnew\n(not\na\nvariant\nof\nan\nexisting\nfact).\nThe\njoshua:tell\nmethod\nthen\ncalls\njoshua:justify.\nUsing\nthe\npredication's\ncurrent\ntruth\nvalue\nof\njoshua:*unknown*,\nits\noriginal\ntruth\nvalue\nin\nthe\njoshua:tell\nstatement,\nand\nits\njustification\nas\ngiven\nin\nthe\nkey\nword\nargument\nto\njoshua:tell,\njoshua:justify\nis\nresponsible\nfor:\n-\nSetting\nthe\ncorrect\ntruth\nvalue\nfor\nthe\npredication\n-\nNotifying\nthe\nTMS\n(if\none\nis\nbeing\nused)\nto\npropagate\nthis\ntruth\nvalue,\nand\nto\nmake\nthe\ncurrent\nworld\nconsistent\nwith\nthis\nvalue.\nThe\ndefault\njoshua:justify\nmethod\n(which\nassumes\nthat\nno\nTMS\nis\nbeing\nused)\nim\nplements\nthis\ncontract\nas\nfollows:\n-\nForces\nthe\ntruth\nvalue\nto\ncorrespond\nto\nthe\nvalue\npassed\nto\nthe\nmethod\nin\nan\nargument\n-\nIf\nthis\nvalue\ndiffers\nfrom\nthe\ncurrent\nvalue\nof\nthe\npredication\n(which\nis\nstill\nju::unknown),\nthe\njoshua:justify\nmethod\ncalls\njoshua:*unknown*),\nthe\njoshua:justify\nmethod\ncalls\njoshua:noticetruthvaluechange\nand\njoshua::act\nontruthvaluechange.\njoshua:actontruthvaluechange\nhas\na\nprimary\nmethod,\nand\n:before\nand\n:after\nmethods.\nThe\nprimary\nmethod\ndoes\nnothing\nand\ncan\nbe\noveridden\nby\nthe\nuser,\nwhile\nthe\n:after\nmethod\ndoes\nsome\ninternal\nbookkeeping\nfor\nthe\nTMS.\n(This\nis\nalso\ntrue\nof\nthe\njoshua:noticetruthvaluechange\nprotocol\nfunction).\nThe\n:before\nmethod\nis\nthe\none\nof\ninterest.\nIt\ncalls\njoshua:mapoverforwardruletriggers\nand\nempties\nthe\nforward\nrule\nqueue.\nThe\njoshua:mapoverforwardruletriggers\nmethod\ncalls\njoshua:discrimination\nnetfetch\nto\nget\nthe\napplicable\ntriggers.\nThe\ncontinuation\nargument\nto\nthe\nmap\nping\nfunction\nperforms\nthe\nunification\nif\nit\nis\ncalled.\nFor\nmore\non\nthe\njustification\nprotocol:\nSee\nthe\nsection \"The\nTruth\nMaintenance\nProtocol\",\npage\n54.\n3.5.4.2. Finding Backward Rule Triggers\nWhen\nyou\nuse\njoshua:ask\nto\nsatisfy\na\ngoal,\nJoshua\nfirst\nlooks\nin\nthe\ndatabase\nand\nthen\ntries\nto\nrun\napplicable\nbackward\nrules\nand\nquestions.\nThe\nprotocol\nfunction\njoshua:askrules\nis\nthe\ncomponent\nof\njoshua:ask\nthat\nfinds\nbackward\nrules\nto\nrun,\nand\nthat\nempties\nthe\nbackward\nrule\nqueue.\n(joshua:ask\ndata\ntries\nto\nfind\ndatabase\nfacts\nto\nsatisfy\nthe\ngoal,\nand\njoshua:askquestions\ntries\nto\nfind\nand\nrun\napplicable\nquestions.\nSee\nthe\nsection \"The\nContract\nof\nthe\nGeneric\nFunctions\njoshua:askdata\nand\njoshua:fetch\",\npage\n10.\nSee\nthe\nsection\n\"The\nContract\nof\nthe\nTrigger\nLocating\nFunctions\",\npage\n39.\n)\n\nThe Joshua Rule Facilities\nMarch 1999\njoshua:askrules\ncalls\njoshua:mapoverbackwardruletriggers\nto\nfind\nappropri\nate\nbackward\nrule\ntriggers.\nFigure\nshows\nthe\njoshua:askrules\nprotocol\nand\nde\nfault\nimplementation.\n[Method]\nmap-over-backward-rule-triggers\n[Generic Function]\n(ask-rules default-ask-model)\nask\n[Generic Function]\n(ask default-ask-model)\n[Method]\nDefault Implementation of ask-rules\n[Generic Function]\nask-rules\nask-data\n[Generic Function]\n.\n.\n.\nask-questions\n[Generic Function]\n.\n.\n.\n(map-over-backward-rule-triggers\n[Method]\ndiscrimination-net-fetch\n[Function]\ndefault-protocol-implementation-model)\nDefault Implementation of map-over-backward-rule-triggers\nFigure\n20.\nThe\naskrules\nprotocol\nand\nits\ndefault\nImplementation\n\nMarch 1999\nThe Joshua Rule Facilities\njoshua:mapoverbackwardruletriggers\nsearches\nthe\nindex\nof\nbackward\nrule\ntrig\ngers\nto\nfind\nbackward\nrules\nthat\ncan\nsolve\nthe\ngoal.\nThis\nfunction\nworks\nanalo\ngously\nto\nthe\ndataindexing\nfunction\njoshua:fetch\nthat\ngets\ndatabase\nfacts\nfor\njoshua:askdata.\nUnification\nis\ndone\ninside\nthe\nrule;\nif\nunification\nsucceeds,\nthe\nrule\nperforms\nthe\nactions\nin\nthe\nifpart.\nThe\ndefault\nrule\nindex\nstores\ntrigger\ninformation\nin\na\ndiscrimination\nnet.\nThe\nde\nfault\njoshua:mapoverbackwardruletriggers\nmethod\nthus\nuses\njoshua:discriminationnetfetch\nto\nsearch\nfor\nbackward\ntriggers.\n\nThe Joshua Rule Facilities\nMarch 1999\n\nMarch 1999\nThe Joshua Question Facilities\n4. The Joshua Question Facilities\nThe\nbasics\nof\nquestion\nsyntax\nand\noperation\nwere\npresented\nearlier:\nSee\nthe\nsection\n\"Asking\nthe\nUser\nQuestions\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nHere\nwe\nelaborate\na\nbit\non\nways\nof\ncontrolling\nquestion\ninvocation.\nSee\nthe\nsection \"Controlling\nQues\ntion\nInvocation\",\npage\n47.\nThe\nbulk\nof\nthe\nchapter\ndiscusses\nquestion\nindexing,\nthat\nis,\nthe\nway\nJoshua\nadds,\ndeletes,\nand\nfinds\nquestions.\nThis\nmaterial\nis\nprimarily\nuseful\nif\nyou\nwant\nto\npro\nvide\nyour\nown\nimplementation\nof\nthese\noperations.\nIf\nyou\nare\nusing\nthe\ndefault\nquestion\nindexing,\nthe\ntopics\ndiscussed\nhere\nare\nprobably\nof\nno\nimmediate\ninterest.\n4.1. Controlling Question Invocation\nTypically\nduring\nan\njoshua:ask\nthe\ndatabase\nis\nsearched\nfirst\n(joshua:fetch),\nafter\nwhich\nthe\nappropriate\nrule\ntriggermapping\nfunction\n(forward\nor\nbackward)\nis\nexe\ncuted,\nto\nfind\nand\nrun\nrelevant\nrules.\nAs\na\nlast\nstep,\nquestion\ntriggermapping\nfunctions\nare\nexecuted,\nto\nfind\nand\nrun\nbackward\nquestions\n(if\n:doquestions\nwas\nset\nto\nnonnil).\nSix\nbuiltin\nflavors\nfor\npredicates\nused\nin\njoshua:ask\ngoals\nare\navailable\nto\nlet\nyou\nmodify\nthe\nabove\nsequence.\nThese\nflavors\ndo\nsubsets\nof\nwhat\njoshua:ask\nnormally\ndoes,\nby\nleaving\nout\none\nor\nmore\nof\nthe\nsteps\njoshua:askdata,\njoshua:askrules,\nor\njoshua:askquestions.\nThus\nthe\nmodels\nsave\na\ncertain\namount\nof\noverhead\nwhen\ntheir\npredicates\nare\nused\nas\ngoals\nto\njoshua:ask.\nThe\nsteps\nwhich\nare\ndone\nare\nindicated\nby\nthe\nnames:\n-\njoshua:askdataonlymixin\n-\njoshua:askrulesonlymixin\n-\njoshua:askquestionsonlymixin\n-\njoshua:askdataandrulesonlymixin\n-\njoshua:askdataandquestionsonlymixin\n-\njoshua:askrulesandquestionsonlymixin\n\nThe Joshua Question Facilities\nMarch 1999\n4.2. The Joshua Question Indexing Protocol\nJoshua\nmanages\nquestions\nby\nmanipulating\nquestion\ntriggers.\nThere\nare\nfour\ntrig\nger\noperations,\nnamely:\n-\nAdding\ntriggers:\njoshua:addbackwardquestiontrigger\n-\nDeleting\ntriggers:\njoshua:deletebackwardquestiontrigger\n-\nLocating\ntriggers:\njoshua:locatebackwardquestiontrigger\n-\nIterating\nover\ntriggers:\njoshua:mapoverbackwardquestiontriggers\nFigure\nshows\nhow\nthe\nquestion\nindexing\nfacilities\nrelate\nto\neach\nother.\nadd-backward-question-trigger\ndelete-backward-question-trigger\nlocate-backward-question-trigger\nQUESTION PROTOCOL\nmap-over-backward-question-triggers\nFigure\n21.\nThe\nQuestion\nProtocol\nThe\ncontract\nof\nthe\nquestion\nindexing\nfunctions\nis\nvery\nsimilar\nto\nthat\nof\nthe\ndata\nindexing\nfunctions.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\n4.2.1. The Contract of joshua:add-backward-question-trigger\nThe\nprotocol\nfunction\njoshua:addbackwardquestiontrigger\nis\nanalogous\nto\nthe\ndataindexing\nfunction\njoshua:insert.\nWhen\na\nnew\nquestion\nis\ncompiled,\nthe\ncom\npiler\nuses\njoshua:addbackwardquestiontrigger\nto\nadd\na\ntrigger\nobject\nto\nthe\ndata\nstructure\nthat\nholds\ntrigger\nobjects.\nIn\nthe\ndefault\nimplementation,\nthe\nfinding,\nbuilding,\nand\nupdating\nof\ntrigger\nstor\nage\nstructures\nis\nthe\nresponsibility\nof\nthe\ntrigger\nlocating\nfunction,\njoshua:locate\nbackwardquestiontrigger.\nTailoring\nof\nbackward\nquestion\nindexing\nis\nusually\nac\ncomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locatebackwardquestiontrigger\nand\njoshua:mapoverbackwardquestiontriggers\nfunctions.\nFigure\nshows\nthe\ntrigger\nadding\nprotocol\nand\nits\ndefault\nimplementation.\n4.2.2. The Contract of joshua:delete-backward-question-trigger\njoshua:undefquestion\ncalls\nthis\nprotocol\nfunction\nwith\nthe\npattern\nfrom\nthe\ntrig\nger\npart\nof\na\nbackward\nquestion.\nThe\nfunction \"unindexes\"\nthe\ntrigger\ndata\nstruc\nture\nof\nthe\nbackward\nquestion\nthat\ncorresponds\nto\nthe\npattern,\nmaking\nthe\nques\ntion\ninaccessible.\n\nMarch 1999\nThe Joshua Question Facilities\nadd-backward-question-trigger\n[Protocol Method]\n(locate-backward-question-trigger default-protocol-implementation-model)\n[Generic Function]\n(add-backward-question-trigger default-protocol-implementation-model)\nlocate-backward-question-trigger\n[Protocol Method]\n[Generic Function]\nFigure\n22.\nThe\nQuestion\nTrigger\nAdding\nProtocol\nand\nDefault\nImplementation\nIn\nthe\ndefault\nimplementation,\nthe\nfinding,\nbuilding,\nand\nupdating\nof\ntrigger\nstor\nage\nstructures\nis\nthe\nresponsibility\nof\nthe\ntrigger\nlocating\nfunction,\njoshua:locate\nbackwardquestiontrigger.\nTailoring\nof\nbackward\nquestion\nindexing\nis\nusually\nac\ncomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locatebackwardquestiontrigger\nand\njoshua:mapoverbackwardquestiontriggers\nfunctions.\nFigure\nshows\nthe\ntrigger\ndeleting\nprotocol\nand\nits\ndefault\nimplementation.\ndelete-backward-question-trigger\n(delete-backward-question-trigger default-protocol-implementation-model)\n(locate-backward-question-trigger default-protocol-implementation-model)\nlocate-backward-question-trigger\n[Generic Function]\n[Protocol Method]\n[Generic Function]\n[Protocol Method]\nFigure\n23.\nThe\nQuestion\nTrigger\nDeleting\nProtocol\nand\nDefault\nImplementation\n4.2.3. The Contract of joshua:locate-backward-question-trigger\nThe\njoshua:locatebackwardquestiontrigger\nmethod\nis\nresponsible\nfor\nmanaging\nthe\ndata\nstructures\nused\nto\nindex\nbackward\nquestion\ntriggers.\nEach\nbackward\nchaining\nquestion\nhas\na\nunique\ntrigger\nstructure,\nindexed\nby\nthe\npattern\n(and\nits\ntruth\nvalue)\nof\nthe\nquestion.\nJust\nas\njoshua:insert\nmaps\nvariant\npredications\nto\na\nunique\nlocation\nin\na\ndata\nindex,\njoshua:locatebackwardquestiontrigger\nlocates\n\nThe Joshua Question Facilities\nMarch 1999\nthe\nunique\nplace\nin\na\nquestion\nindex\nwhere\nJoshua\nstores\na\nbackward\nchaining\nquestion's\ntrigger\nstructure.\njoshua:locatebackwardquestiontrigger\nis\nused\nas\na\nsubroutine\nof\nboth\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackwardquestion\ntrigger.\nKnowledge\nof\nhow\nto\nindex\na\npattern\nis\nlocalized\nin\nthe\njoshua:locate\nbackwardquestiontrigger\nmethods,\nwhile\nthe\nknowledge\nof\nthe\ninternal\nstructure\nof\nthe\nbackward\ntrigger\ndata\nstructures\nis\nlocalized\nin\njoshua:addbackward\nquestiontrigger\nand\njoshua:deletebackwardquestiontrigger.\nThese\ntwo\nhigher\nlevels\nroutines\ncall\njoshua:locatebackwardquestiontrigger\npassing\nto\nit\ncontinu\nation,\na\nfunction\nwhich\nunderstands\nhow\nto\nmanipulate\nsets\nof\nbackward\nquestion\ntrigger\ndata\nstructures.\nFor\nmore\ndetails\nsee\nthe\nsection \"The\nContract\nof\nthe\nTrigger\nLocating\nFunctions\",\npage\n39.\n4.2.4. The Contract of joshua:map-over-backward-question-triggers\njoshua:mapoverbackwardquestiontriggers\nis\nresponsible\nfor\nlooking\nup\nback\nward\nquestion\ntriggers\ncapable\nof\nsatisfying\na\nquery\ngiven\nto\njoshua:ask.\nIt\nsearches\nthe\nquestions\nindex\nto\nfind\na\nset\nof\nbackward\nquestion\ntriggers\nwhose\npat\nterns\nmight\nunify\nwith\npredication\n(the\nquery\ngiven\nto\njoshua:ask),\nand\ncalls\ncon\ntinuation\nonce\nfor\neach\nbackward\nquestion\ntrigger\nfound,\nthereby\ninvoking\nthe\nquestion.\nIf\nyou\nare\nwriting\nyour\nown\ntrigger\nstorage\nmethods,\nyour\nimplementation\nof\nthe\ntrigger\nmapping\nfunction\nmust\nbe\nconsistent\nwith\nthe\nimplementation\nof\nthe\ntrig\nger\nadding,\ndeleting,\nand\nlocating\nfunctions.\njoshua:mapoverbackwardquestiontriggers\nis\nthe\ndual\nprotocol\nfunction\nto\njoshua:locatebackwardquestiontrigger.\nFigure\nshows\nthe\njoshua:mapoverbackwardquestiontriggers\nprotocol\nand\ndefault\nimplementation.\n4.2.4.1. Finding Backward Question Triggers\nThe\nprotocol\nfunction\njoshua:askquestions\nis\nthe\ncomponent\nof\njoshua:ask\nthat\nfinds\nbackward\nquestions\nto\nrun,\nand\nthat\nempties\nthe\nbackward\nquestion\nqueue.\n(joshua:askdata\ntries\nto\nfind\ndatabase\nfacts\nto\nsatisfy\nthe\ngoal,\nand\njoshua:ask\nrules\ntries\nto\nfind\nand\nrun\napplicable\nrules.\nSee\nthe\nsection \"The\nContract\nof\nthe\nGeneric\nFunctions\njoshua:askdata\nand\njoshua:fetch\",\npage\n10.\nSee\nthe\nsection \"Finding\nBackward\nRule\nTriggers\",\npage\n43.)\nFigure\nshows\nthe\njoshua:askquestions\nprotocol\nand\ndefault\nimplementation.\n\nMarch 1999\nThe Joshua Question Facilities\nask\n[Generic Function]\n(ask default-ask-model)\n[Method]\nask-data\n[Generic Function]\n.\n.\n.\nask-questions\n[Generic Function]\n[Generic Function]\nask-rules\n.\n.\n.\n[Method]\nmap-over-backward-question-triggers\n[Generic Function]\n(ask-questions default-ask-model)\nDefault Implementation of ask-questions\n(map-over-backward-question-triggers\n[Method]\ndiscrimination-net-fetch\n[Function]\ndefault-protocol-implementation-model)\nDefault Implementation of map-over-backward-question-triggers\nFigure\n24.\nThe\naskquestions\nprotocol\nand\nits\ndefault\nimplementation\n\nThe Joshua Question Facilities\nMarch 1999\n\nMarch 1999\nTruth Maintenance Facilities\n5. Truth Maintenance Facilities\nWe\nhave\ncovered\nthe\nbasic\ninformation\nabout\nTruth\nMaintenance\nearlier:\nSee\nthe\nsection \"Justification\nand\nTruth\nMaintenance\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nThis\nchapter\nprovides\na\ndetailed\nexplanation\nof\nthe\nTruth\nMaintenance\npart\nof\nthe\nJoshua\nprotocol.\nIt\nalso\nexplains\nhow\na\ndifferent\nTruth\nMaintenance\nSystem\n(TMS)\nof\nyour\nown\ndesign\ncan\nbe\ninterfaced\nto\nJoshua.\nFinally,\nit\nprovides\na\ndetailed\nex\nplanation\nof\nthe\nTMS\nsupplied\nwith\nJoshua.\n(If\nyou\nare\ninterested\nin\ninterfacing\na\nnew\nTMS\nof\nyour\nown\ndesign\nto\nJoshua\nthis\nchapter\nwill\nprovide\nuseful\ninformation\nto\nyou,\nhowever\nthe\ninformation\nprovided\nmay\nnot\nbe\nsufficient.\nIf\nyou\ndo\nwish\nto\ninterface\na\nTMS\nto\nJoshua,\nwe\nstrongly\nadvise\nthat\nyou\ncontact\nthe\nSymbolics\nConsulting\nServices\nfor\nassistance\nin\nbuild\ning\nthe\ninterface.)\nThe Funtions of a Truth Maintenance System\nA\nTruth\nMaintenance\nSystem\nperforms\nseveral\nuseful\nfunctions\nfor\nJoshua:\n1.\nThe\nTMS\nis\nresponsible\nfor\nmaintaining\na\nrecord\nof\nwhy\npredications\nare\nbe\nlieved\nto\nbe\ntrue\nor\nfalse\n(hence\nthe\nname\nTruth\nMaintenance);\nthese\nrecords\nare\ncalled\njustifications.\n2.\nThe\nTMS\ncan\nuse\nthese\njustifications\nto\nexplain\nthe\nreason\nwhy\na\npredication\nis\ncurrently\nbelieved\nto\nbe\ntrue\n(or\nfalse).\nAs\na\nspecial\ncase\nof\nthis,\nthe\nTMS\ncan\nidentify\nthe\nprimitive\nbeliefs\n(i.e.\nassumptions\nand\npremises)\nthat\nare\nthe\nultimate\nreason\nfor\nbelieving\nthe\npredication.\n3.\nThe\nTMS\ncan\nconsistently\npropagate\nchanges\nin\ntruthvalues.\nFor\nexample,\nsuppose\nthat\nthe\nsole\nreason\nwhy\npredication\nB\nis\nbelieved\nto\nbe\ntrue\nis\nthat\nit\nwas\ndeduced\nfrom\npredication\nA.\nIf\nA\nshould\never\nchange\nits\ntruthvalue\nto\njoshua:*unknown*,\nthen\nthe\nTMS\nshould\nalso\nchange\nthe\ntruthvalue\nof\nB\nto\njoshua:*unknown*.\nSimilarly,\nif\nA\nshould\never\nchange\nits\ntruthvalue\nback\nto\njoshua:*true*,\nthen\nB\nshould\nhave\nits\ntruthvalue\nrestored\nto\njoshua:*true*.\n4.\nIt\ncan\nconsistently\nremove\na\njustification\nfrom\na\npredication.\nIf\nthis\njustifica\ntion\nis\nthe\nsole\nreason\nwhy\nthe\npredication\nis\nbelieved,\nthen\nthe\nTMS\nmust\nchange\nthe\ntruth\nvalue\nof\nthe\npredication\nto\njoshua:*unknown*\nand\npropa\ngate\nthe\nchange\nof\ntruthvalue.\n5.\nFinally,\nthe\nTMS\nis\nresponsible\nfor\nensuring\nthat\nthe\ndatabase\ndoes\nnot\ncon\ntain\na\ncontradiction.\nWhenever\nboth\na\nfact\nand\nits\nnegation\nare\nasserted\nto\nbe\ntrue,\nit\nis\nthe\nTMS's\njob\nto\ndetermine\nwhat\nprimitive\nbeliefs\n(i.e.\nassumptions\nand\npremises)\nare\nultimately\nresponsible\nfor\nthe\ncontradictory\nbeliefs.\nThe\n\nTruth Maintenance Facilities\nMarch 1999\nTMS\ncan\nthen\ninform\nJoshua's\nerror\nhandlers\nof\nthe\nsituation\nby\nsignalling\na\njoshua:tmscontradiction\ncondition.\nThe\nhandler\nwhich\nhandles\nthe\ncondition,\nmay\nthen\nchose\nto\nunjustify\none\nof\nthe\nprimitive\nbeliefs\nunderlying\nthe\ncon\ntradiction\nin\nthe\nhopes\nof\nremoving\nthe\ncontradiction.\nTypes of Truth Maintenance Systems\nThere\nare\nseveral\ndifferent\nvarieties\nof\nTruth\nMaintenance\nSystems\nand\nthese\ndif\nfer\nalong\nseveral\ndimensions.\nSome\nTMS's\nsuch\nas\nJohan\ndeKleer's\nATMS\nmain\ntains\nseveral\nviewpoints\nconcurrently.\nThe\nLTMS\nprovided\nas\na\ndefault\nin\nJoshua\nprovides\na\nsingle\nviewpoint\nat\nany\none\ntime,\nbut\nallows\nyou\nfreely\nto\nswitch\nback\nand\nforth\nbetween\nthese\nviewpoints.\nBoth\nof\nthese\nstyles\nof\nTMS\nhave\nunique\nad\nvantages\nand\nneither\nis\nappropriate\nin\nall\ncircumstances.\nAnother\ndimension\nalong\nwhich\nTMS's\ndiffer\nis\nwhether\nthey\nallow\nnonmonotonic\njustifications\nin\nwhich\none\nstatement\nis\nbelieved\nbecause\nanother\nfact\nhas\njoshua:*unknown*\ntruthvalue.\nJon\nDoyle's\nTMS\nsupported\nthis\ncapability.\nThe\nLTMS\ndoes\nnot\ndirectly\nsupport\nthis\ncapability\nbut\nallows\nit\nto\nbe\nsimulated\nusing\nthe\njoshua:noticetruthvaluechange\nand\nthe\njoshua:actontruthvaluechange\nprotocol\nmethods.\nA\nthird\ndimension\nalong\nwhich\nTMS's\nvary\nis\nwhether\ntheir\njustification\nstructures\nare\nunidirectional\nor\nmultidirectional.\nMany\nTMS's\n(such\nas\nDoyle's\nand\ndeKleer's)\nuse\na\njustification\nstructure\nin\nwhich\nthere\nis\na\nunique\nconclusion\nand\nseveral\nan\ntecedents.\nWhen\nall\nof\nthe\nantecendents\nachieve\ntheir\ndesired\ntruthvalues,\nthe\nconclusion's\ntruthvalue\nis\nchanged\nto\nthat\nindicated\nby\nthe\njustification.\nIn\neffect,\nthese\nTMS's\nperform\nonly\nthe\nsimplest\nlogic\ninference,\nnamely\nmodus\nponens.\nThe\nLTMS\nprovided\nwith\nJoshua\n(and\nthe\n3valued\nTMS\nof\nDavid\nMcAllester\nupon\nwhich\nit\nis\nbased)\nis\na\nmultidirectional\nTMS.\nIn\nthe\nLTMS,\nconstituents\nof\na\njusti\nfication\nare\nnot\nrestricted\nto\nplaying\na\nunique\nrole\nas\nconsequent\nor\nantecedent.\nInstead,\nthe\nLTMS\nwill\nchange\nthe\ntruthvalue\nof\nany\nconstituent\nof\nthe\njustifica\ntion\nwhenever\nthe\ntruthvalues\nof\nall\nthe\nother\nconstituents\nforce\nthis\nchoice.\n5.1. The Truth Maintenance Protocol\nThe\nJoshua\nprotocol\nprovides\na\nuniform\nmechanism\nfor\ninterfacing\na\nTMS\nof\nyour\nown\ndesign\nif\nthe\none\nsupplied\nwith\nJoshua\ndoes\nnot\nmeet\nyour\nneeds.\n(The\ncur\nrent\nversion\nof\nJoshua\nwill\nnot\ncompletely\nsupport\na\nmultipleviewpoint\nTMS\nsuch\nas\nthe\nATMS,\nbecause\nof\na\ndifficultly\nof\ninterfacing\nthe\ntriggering\nmethod\nfor\nfor\nwardchaining\nrules ⎯\nthe\nRete\nNetwork ⎯\nwith\nthe\nATMS.\nThis\nwill\nbe\nresolved\nin\na\nsubsequent\nrelease\nof\nJoshua.\nIf\nyou\nneed\nthis\ncapability\nnow,\nSymbolics\nper\nsonnel\ncan\nhelp\nyou\nfigure\nout\nhow\nto\nbuild\nthe\nappropriate\ninterface.)\n5.1.1. The Contract of the Joshua TMS Protocol Functions\nThe\ninterface\nbetween\nJoshua\nand\na\nTMS\nconsists\nof\nseveral\nJoshua\nprotocol\nfunc\ntions:\n\nMarch 1999\nTruth Maintenance Facilities\n-\njoshua:nontrivialtmsp:\nA\nprotocol\nmethod\nthat\nshould\nreturn\nt\nfor\nany\npredi\ncation\nwhich\nuses\na\nTMS.\nThis\nmethod\nis\nsupplied\nby\nthe\npredicatemodel\nbasic\ntmsmixin\nwhich\nshould\nbe\nmixed\ninto\nany\npredicate\nmodel\nthat\nimplements\na\nTMS.\n-\njoshua:justify:\nThe\nprotocol\nmethod\nthat\nis\nused\nto\ntell\nthe\nTMS\nto\nadd\na\nnew\njustification.\n(This\nis\nmost\noften\ninvoked\nindirectly\nby\nproviding\na\n:justification\nargument\nto\njoshua:tell).\n-\njoshua:unjustify:\nThe\nprotocol\nmethod\nthat\nis\nused\nto\ntell\nthe\nTMS\nto\nremove\na\njustification\nfrom\na\npredication.\n-\njoshua:currentjustification:\nThe\nprotocol\nmethod\nthat\nis\nused\nto\nask\na\npredica\ntion\nfor\nthe\njustification\nthat\nis\nresponsible\nfor\nits\ncurrent\ntruthvalue.\nIf\nthe\npredication\nhas\njoshua:*unknown*\ntruthvalue\nthis\nshould\nreturn\nnil.\n-\njoshua:alljustifications:\nReturns\nall\njustifications\ninto\nwhich\nthe\npredication\nenters\neither\nas\na\nsupporting\npredication\nor\nas\nthe\npredication\nsupported\nby\nthe\njustification.\n-\njoshua:noticetruthvaluechange:\nThe\nprotocol\nmethod\nused\nby\nthe\nTMS\nto\ntell\nthe\nrest\nof\nJoshua\nto\nupdate\ninternal\ndata\nstructures\nto\nreflect\nthe\nfact\nthat\na\npredication\nhas\nchanged\nits\ntruthvalue.\n-\njoshua:actontruthvaluechange:\nThe\nprotocol\nmethod\nused\nby\nthe\nTMS\nto\ntell\nthe\nrest\nof\nJoshua\nthat\na\npredication\nhas\nchanged\nits\ntruthvalue.\nIn\nresponse,\nother\nparts\nof\nthe\napplication\nmay\ninitiate\nnew\ninferential\nprocesses\nor\nproduce\nvisible\nside\neffects\n(such\nas\nupdating\na\ndisplay).\n5.1.2. The Contract of a Joshua TMS Justification\nThe\nTMS\nprotocol\nfunctions\nallow\nJoshua\nto\ntell\nthe\nTMS\nto\ncreate\njustifications.\nThe\nformat\nof\nthese\njustifications\nis\nleft\ncompletely\nup\nto\nthe\ndesigner\nof\nthe\nTMS\n(in\nthe\nLTMS,\njustifications\nare\nimplemented\nas\nclauses\nSee\nthe\nsection \"Clause\nJustification\nStructures\",\npage\n65.\nHowever,\nit\nis\nnecessary\nfor\nJoshua\nto\nbe\nable\nto\nunderstand\nsome\nof\nthe\ninformation\ncontained\nin\na\nJustification,\nhowever\nit\nis\nimplemented.\nJustifications\nare\ntherefore\nrequired\nto\nobey\na\nsimple\ncontract;\nthey\nmust\nbe\nable\nto\ndestructure\nthemselves\ninto\nseveral\nparcels\nof\ninformation,\ndefined\nby\nthe\nJoshua\nprotocol.\nJustifications\nused\nin\na\nJoshua\nTMS\nmust\nbe\nunderstood\nby\nthe\ngeneric\nfunction\njoshua:destructurejustification.\n(If\njustifications\nare\nimplemented\nas\nflavor\nin\nstances,\nthis\nmerely\namounts\nto\ndefining\na\njoshua:destructurejustification\nmethod\nfor\nthe\nflavor\nof\nthe\njustification.\nThis\nis\nthe\napproach\nused\nin\nthe\nLTMS\nprovided\nwith\nJoshua).\nConceptually,\nevery\njustification\nmust\ncontain\nthe\nfollowing\ninformation:\n\nTruth Maintenance Facilities\nMarch 1999\n-\nMnemonic:\nA\nname\nproviding\nadditional\ninformation,\nsuch\nas\nwhat\nrule\ncreated\nthis\njustification\nor\nthe\ntype\nof\na\nprimitive\njustification\n(:premise,\n:assumption,\nand\nso\non.)\n-\nConclusion:\nThe\npredication\nsupported\nby\nthe\njustification.\n-\nTruesupport:\nThose\nfacts\nwhich\nmust\nhave\ntruthvalue\njoshua:*true*\nin\norder\nfor\nthe\nconclusion\nto\nfollow.\n-\nFalsesupport:\nThose\nfacts\nwhich\nmust\nhave\ntruthvalue\njoshua:*false*\nin\norder\nfor\nthe\nconclusion\nto\nfollow.\n-\nUnknownsupport:\nThose\nfacts\nwhich\nmust\nhave\ntruthvalue\njoshua:*unknown*\nin\norder\nfor\nthe\nconclusion\nto\nfollow.\nJustifications\ndon't\nactually\nhave\nto\ncontain\nall\nthis\ninformation;\nthe\njoshua:destructurejustification\ngeneric\nfunction\nsimply\nmust\nreturn\na\nvalue\nfor\neach\nof\nthese\nitems.\nA\nTMS\n(such\nas\nthe\nLTMS)\nwhich\ndoes\nnot\nallow\nunknown\nsupport\ndoes\nnot\nactually\nhave\nto\nhave\na\nfield\nin\nthe\njustification\nfor\nthis\ninforma\ntion,\nsince\nit\nis\nuniformly\nempty.\nHow\nthe\nTMS\nstores\ninformation\nin\na\njustifica\ntion\nis\ncompletely\nat\nthe\ndiscretion\nof\nthe\nTMS\nimplementor,\nas\nlong\nas\nthe\nproto\ncol\nis\nobeyed.\n5.1.3. TMS Utility Routines\nJoshua\nprovides\na\nnumber\nof\nutility\nroutines\nthat\nwill\nwork\nwith\nany\nTMS\nthat\nobeys\nthe\nprotocol.\nAny\npredication\nthat\nwants\nto\nuse\na\nTMS\nshould\nmix\nin\nthe\nJoshua\npredicatemodel\njoshua:basictmsmixin;\nthis\nprovides\ndefault\nimplementa\ntions\nfor\ntwo\nprotocol\nmethods\n(joshua:nontrivialtmsp\nand\njoshua:support).\nIt\nalso\ndefines\nthe\ngenerationmark\ninstance\nvariable\nwhich\nis\nused\nby\nthe\ndefault\njoshua:support\nmethod\nand\nmay\nbe\nuseful\nfor\nother\nTMS\nimplementors.\nThis\nin\nstance\nvariable\ncan\nbe\nused\nby\nany\nTMS\nwhich\nfinds\nit\nconvenient.\nThe\nutilities\ncurrently\nprovided\nare:\n-\njoshua:support:\nReturn\nthe\nprimitive\nassertions\nwhich\nultimately\nunderlie\nthe\nbelief\nin\na\npredication.\nThis\nis\na\nprotocol\nmethod\nwhich\ncan\nbe\noverridden\nby\nan\nother\nTMS\nimplementation,\nalthough\nit\nis\nunlikely\nthat\nthis\nwould\nbe\ndesirable.\n-\njoshua:supportwithname:\nReturns\na\nsubset\nof\nthe\nprimitive\nassertions\nunder\nlying\na\npredication's\nbelief.\nOnly\nthose\npredications\nwith\na\njustification\nwhose\nMnemonic\nis\nthe\nsecond\nargument\nto\nthis\nfunction\nare\nreturned.\n-\njoshua:assumptionsupport:\nReturns\nthat\nsubset\nof\nthe\nprimitive\nsupport\nof\na\npredication\nwhich\nare\njustified\nby\na\njustification\nwhose\nMnemonic\nis\n:assumption.\n\nMarch 1999\nTruth Maintenance Facilities\n-\njoshua:premisesupport:\nReturns\nthat\nsubset\nof\nthe\nprimitive\nsupport\nof\na\npred\nication\nwhich\nare\njustified\nby\na\njustification\nwhose\nMnemonic\nis\n:premise.\n-\njoshua:explain:\nPrints\nan\nexplanation\nof\nwhy\na\npredication\nis\nbelieved\nto\nhold\nits\ncurrent\ntruthvalue.\nThis\nroutine\nwalks\nback\nthrough\nthe\ntree\nof\njustifica\ntions\nthat\nsupport\na\nfact,\nprinting\none\nlevel\nof\nexplanation\nfor\neach\nlevel\nof\njus\ntification.\n-\njoshua:removejustification:\nTakes\na\njustification\nas\nargument\nand\nremoves\nit\nfrom\nthe\nJoshua\nworld.\nThis\nis\na\nconvenient\nfunction\nin\nsome\ncontexts;\nit\nis\nde\nfined\ntrivially\nin\nterms\nof\njoshua:currentjustification,\njoshua:unjustify\nand\njoshua:destructurejustification.\n-\njoshua:graphtmssupport:\nTakes\na\nset\nof\npredications\nas\narguments.\nProduces\na\ngraph\ndisplay\nof\nthe\nTMS\njustification\nstructures\nsupporting\nthese\npredica\ntions.\nThis\ngraph\ncontinues\nbackward\nuntil\nreaching\npredications\nwhich\nhave\nprimitive\njustifications.\nAn\nimplementor\nof\na\nTMS\nmight\nneed\nto\nuse\na\nfew\nbits\nas\nflags\nas\npart\nof\nthe\nin\nternal\nalgorithms\nof\nthe\nTMS.\nThese\ncan\nof\ncourse\nbe\nprovided\nas\ninstance\nvari\nables\nthat\nare\npart\nof\nthe\nTMS\nmixin.\nHowever\na\nfew\nsingle\nbit\nflags\nare\nprovided\nin\nall\npredications\nwhich\nmay\nbe\naccessed\nas\n(TMSBits\n(PredicationBits\nPred\nication)).\n5.1.4. Signalling Contradictions and Managing Backtracking\nWhen\na\nTMS\ndetects\na\ncontradiction\nit\nmust\nsignal\na\ncondition\nSee\nthe\nsection\n\"Signalling\nConditions\"\nin\nSymbolics\nCommon\nLisp\nProgramming\nConstructs.\nThe\ncondition\nsignalled\nshould\nbe\nan\ninstance\nof\na\nflavor\nbased\non\njoshua:tms\ncontradiction.\nAll\nsuch\nconditions\nshould\ncontain\nat\nleast\nthe\nfollowing\ninforma\ntion:\n-\nThe\nContradictory\nPredication:\nIf\nthe\ncontradiction\nis\ndetected\nby\nthe\nTMS\nin\nsuch\na\nway\nthat\nit\ncan\nlocalize\nthe\nblame\ncompletely\nin\nan\nindividual\npredication\nthen\nthis\nfield\nshould\ncontain\nthat\npredication.\nSome\nTMS's\nprovide\nan\nentry\npoint\nthrough\nwhich\nthe\nuser\ncan\ndeclare\na\nparticular\npredication\nto\nbe\nunac\nceptable\neven\nthough\nit\ndoes\nnot\nhave\njoshua:*contradictory*\ntruthvalue\n(in\nthe\nLTMS\nprovided\nwith\nJoshua\nthis\nis\ncalled\nltms:backtrack).\nIf\nsuch\nis\nthe\ncase\nthis\nfield\nshould\ncontain\nthe\npredication\nso\nblamed.\nThis\nfield\nis\ncalled\njoshua:tmscontradictioncontradictorypredication.\n-\nThe\nUnsatisfiable\nJustification:\nIn\nsome\nTMS's\n(in\nparticular\nthe\nLTMS\npro\nvided\nwith\nJoshua)\ncontradictions\nare\ndetected\nbecause\na\njustification\nbecomes\nunsatisfiable.\nIn\nsuch\na\ncase\nthis\nfield\nshould\ncontain\nthis\ninvalid\njustification.\nIf\nthe\nuser\nhas\ndeclared\na\nparticular\npredication\nto\nbe\nunacceptable\nand\nthat\npredi\ncation\nhas\na\ncurrent\njustification,\nthen\nthat\njustification\nshould\nbe\nincluded\nin\nthis\nfield.\nThis\nfield\nis\ncalled\njoshua:tmscontradictionjustification.\n\nTruth Maintenance Facilities\nMarch 1999\n-\nAll\nthe\nprimitive\nsupport:\nGiven\nan\nunacceptable\npredication\nor\nan\nunsatisfi\nable\njustification\n(i.e.\na\ncontradiction),\nthe\nTMS\nmust\ndetermine\nthe\nset\nof\nprim\nitively\nsupported\npredications\nthat\nare\nin\nthe\nsupport\ntree\nof\nthe\ncontradiction.\nPrimitively\nsupported\npredications\nare\nthose\nwhose\njustifications\ninvolve\nno\noth\ner\npredication.\nThis\nfield\nis\ncalled\njoshua:tmscontradictionsupport.\n-\nThe\nsubset\nof\nthis\nwhich\nare\npremises:\nA\nTMS\nmay\nmake\na\ndistinction\nbe\ntween\npredications\nthat\nmay\nbe\nretracted\nand\nthose\nwhich\nare\nconsidered \"im\nmutable\nlaws\nof\nthe\nuniverse\".\nThis\nfield\nof\nthe\ncondition\nshould\ncontain\nthe\nsubset\nof\nthe\nprimitive\nsupport\nwhich\nis\nconsidered\nunretractable,\ni.e.\npremises.\nThis\nfield\nis\ncalled\njoshua:tmscontradictionpremises.\n-\nThe\nsubset\nof\nthis\nwhich\naren't\npremises:\nThis\nfield\nof\nthe\ncondition\nsignalled\nshould\ncontain\nthat\npart\nof\nthe\nprimitive\nsupport\nwhich\nare\nallowed\nto\nbe\nre\ntracted.\nThis\nfield\nis\ncalled\njoshua:tmscontradictionnonpremises.\nThere\nis\na\ndefault\nhandler\nfor\nthe\njoshua:tmscontradiction\ncondition\nprovided\nin\nJoshua\nwhich\nhandles\ntwo\nspecial\ncases\nautomatically.\nIf\nthe\ncondition\nsignalled\ncontains\nexactly\none\nmember\nof\nthe\nnonpremise\nprimitive\nsupport\nset,\nthen\nthe\nhandler\nautomatically\nretracts\nthis\nsingle\npredication\n(i.e.\nit\nremoves\nits\ncurrent\njustification).\nIf\nthe\ncondition\ncontains\nno\nnonpremise\nprimitive\nsupport,\nthen\nthe\ndefault\nhandler\nsignals\nanother\ncondition\nwhich\nshould\nbe\nbased\non\njoshua:tms\nhardcontradiction.\nThe\nintent\nis\nthat\nthis\ncondition\nis\none\nthat\na\nuser\nmight\nwant\nto\nconsider\nreally\nwrong,\nso\nwe\nprovide\na\nspecific\ncondition\nfor\nthis\ncase.\nFor\nthe\ndefault\nhandler\nto\nknow\nwhat\ncondition\nto\nsignal,\nthe\nfirst\ncondition\nmust\nim\nplement\na\nmethod\nfor\nthe\njoshua:tmscontradictionhardcontradictionflavor\ngeneric\nfunction;\nthis\nmust\nreturn\nthe\nname\nof\nthe\nflavor\nto\nbe\nsignalled\nfor\na\njoshua:tmshardcontradiction.\n(For\nexample,\nsee\nthe\nbeginning\nof\njoshua:code;ltms).\nBy\ncondition\nbinding\neither\nor\nboth\nof\nthese\nconditions\na\nprogram\ncan\ncompletely\ncontrol\nthe\nbacktracking\nprocess.\n5.1.4.1. Using TMS Conditions: a Balance Beam Example\nSuppose\nthat\nwe\nwere\nwriting\na\nplanning\nsystem\nfor\na\nblocks\nworld\nconstruction\ntask\nthat\nincludes\nbalance\nbeams\nlike\nthe\nfollowing:\nDuring\nthe\ntask\nof\nconstructing\na\nconfiguration\nlike\nthe\none\nabove,\nwe\nmust\nbe\ncareful\nthat\nwe\nnever\nunbalance\nthe\nbeam\nenough\nto\ntip\nover\nthe\nwhole\nconfigura\ntion.\nOne\nsituation\nthat\nmight\nresult\nin\nsuch\nan\nunbalance\nis\nif\nwe\nplace\na\nblock\n\nMarch 1999\nTruth Maintenance Facilities\non\none\nside\nwithout\na\ncounter\nbalancing\nblock\nat\nthe\nother\nend.\nAnother\ndangerous\nsituation\nresults\nwhen\none\nblock\nis\ngrossly\noutweighed\nby\na\nblock\nat\nthe\nother\nside.\nWe'll\ncall\nthe\nfirst\nsituation\nBLOCKUNBALANCEDBYBROTHER\nand\nthe\nsecond\nBLOCK\nOVERBALANCEDBYBROTHER.\nThe\nfollowing\nare\nthe\npredicates\nwe\nuse\nto\ndescribe\nthis\ndomain:\n(definepredicate\non\n(block\nbalancebeam\nposition)\n(ltms:ltmspredicatemodel))\n(definepredicate\nweight\n(block\nweight)\n(ltms:ltmspredicatemodel))\n(definepredicate\nblockunbalancedbybrother\n(block\nsupporter)\n(backtrackwhentruemixin\nltms:ltmspredicatemodel))\n(definepredicate\nblockoverbalancedbybrother\n(block\nsupporter\notherblock)\n(backtrackwhentruemixin\nltms:ltmspredicatemodel))\nNotice\nthat\nBLOCKOVERBALANCEDBYBROTHER\nand\nBLOCKUNBALANCEDBYBROTHER\nboth\nmix\nin\nthe\nBACKTRACKWHENTRUEMIXIN.\nThis\nflavor\ndefines\na\njoshua:noticetruth\nvaluechange\nmethod\nthat\nsignals\na\ncontradiction\nif\nthe\npredication\nit\nis\nmixed\nin\nto\never\nbecomes\njoshua:*true*.\n(definepredicatemodel\nbacktrackwhentruemixin\n()\n()\n(:requiredflavors\nltms:ltmsmixin))\n(definepredicatemethod\n(actontruthvaluechange\nbacktrackwhentruemixin)\n(ignore)\n(when\n(eql\n(predicationtruthvalue\nself)\n*true*)\n(ltms:backtrack\nself)))\nSee\nthe\nsection \"Notifying\nthe\nLTMS\nof\nContradictions\",\npage\n70.\nWhen\nsuch\na\ncondition\nis\nsignalled,\nwe\nwant\nto\ntake\nrecovery\nactions,\nby\nadding\nblocks\nthat\nwill\nkeep\nthe\nbeam\nfrom\ntipping\nover.\nThere\nare\ntwo\nsuch\ntechniques.\nThe\nfirst\nis\na\nscaffold:\nThe\nsecond\nis\na\ncenter\nweight:\nThe\nfollowing\npredicates\nand\nrules\ndescribe\nand\nreason\nabout\nthese\ntechniques:\n(definepredicate\nscaffold\n(block\nbalancebeam\nposition)\n(ltms:ltmspredicatemodel))\n(definepredicate\nisscaffolded\n(block\nposition)\n(ltms:ltmspredicatemodel))\n(definepredicate\niscounterweighted\n(block)\n(ltms:ltmspredicatemodel))\n(defrule\ndetectscaffolding\n(:forward)\nIf\n[scaffold\n?block\n?supporter\n?position]\nthen\n[isscaffolded\n?supporter\n?position])\n\nTruth Maintenance Facilities\nMarch 1999\n(defrule\ndetectcounterweighting\n(:forward)\nIf\n[and\n[on\n?block\n?supporter\ncenter]\n[weight\n?block\nveryheavy]]\nthen\n[iscounterweighted\n?supporter])\n(defun\niscounterweighted\n(balancebeam)\n(let\n((counterweighted\nnil))\n(mapoverdatabasepredications\n'[iscounterweighted\n,balancebeam]\n#'(lambda\n(ignore)\n(setq\ncounterweighted\nt)))\ncounterweighted))\n(defun\nisscaffolded\n(balancebeam\nposition)\n(let\n((scaffolded\nnil))\n(mapoverdatabasepredications\n'[isscaffolded\n,balancebeam\n,position]\n#'(lambda\n(ignore)\n(setq\nscaffolded\nt)))\nscaffolded))\n\nMarch 1999\nTruth Maintenance Facilities\n(defrule\ndetectunbalance\n(:forward)\nif\n[and\n[on\n?block\n?supporter\nleft]\n:support\n?f1\n[on\nnothing\n?supporter\nright]\n:support\n?f2]\nthen\n(unless\n(or\n(iscounterweighted\n?supporter)\n(isscaffolded\n?supporter\n'left))\n(let\n((missingassumptions\n(list\n(tell\n[not\n[iscounterweighted\n?supporter]]\n:justification\n:assumption)\n(tell\n[not\n[isscaffolded\n?supporter\nleft]]\n:justification\n:assumption))))\n(tell\n[blockunbalancedbybrother\n?block\n?supporter]\n:justification\n'(unbalanced\n(,?f1\n,?f2)\n,missingassumptions\nnil))\n)))\n(defrule\ndetectoverbalance\n(:forward)\nif\n[and\n[on\n?block1\n?supporter\nleft]\n:support\n?f1\n[weight\n?block1\nlight]\n:support\n?f2\n[on\n?block2\n?supporter\nright]\n:support\n?f3\n[weight\n?block2\nheavy]\n:support\n?f4\n]\nthen\n(unless\n(isscaffolded\n?supporter\n'right)\n(let\n((missingassumption\n(tell\n[not\n[isscaffolded\n?supporter\nright]]\n:justification\n:assumption)))\n(tell\n[blockoverbalancedbybrother\n?block1\n?supporter\n?block2]\n:justification\n'(Overbalance\n(,?f1\n,?f2\n,?f3\n,?f4)\n(,missingassumption))))))\nThe\nrules\nDETECTOVERBALANCE\nand\nDETECTUNBALANCE\nare\nresponsible\nfor\nnoticing\nsituations\nin\nwhich\nthe\nbalance\nbeam\nwill\nfall\nover.\nWhen\none\nof\nthese\nrule\nnotices\nsuch\na\nsituation\nit\ncauses\na\njoshua:tmscontradiction\nto\nbe\nsignalled\nby\njoshua:telling\na\nBLOCKOVERBALANCEDBYBROTHER\nor\na\nBLOCKUNBALANCEDBYBROTHER\npredication\n(in\neffect,\nthe\nrule \"gripes\"\nabout\nthe\nsituation\nto\nuse\nthe\nterm\nused\nin\nScott\nFahlman's\nBUILD\nprogram).\nThe\napplication\ncan\nrespond\nto\nthese \"gripes\"\nby\nbinding\na\ncondition\nhandler\nthat\nrectifies\nthe\nproblem\n(Falhman\nused\nthe\nname \"gripe\ncatcher\"\nfor\nthe\nequivalent\nfunctionality\nin\nBUILD).\nSee\nthe\nsection \"Introduction\nto\nSignalling\nand\nHandling\nConditions\"\nin\nSymbolics\nCommon\nLisp\nProgramming\nConstructs.\nHere\nare\ntwo\nfunctions\nthat\ncan\nbe\nused\nas \"gripe\ncatchers\":\n\nTruth Maintenance Facilities\nMarch 1999\n(defun\nhandleoverbalancedcondition\n(conditionobject)\n(let\n((contradictorypredication\n(tmscontradictioncontradictorypredication\nconditionobject)))\n(if\n(typep\ncontradictorypredication\n'blockoverbalancedbybrother)\n(let\n((noscaffolding\n(find\n'isscaffolded\n(tmscontradictionnonpremises\nconditionobject)\n:key\n#'(lambda\n(thing)\n(predicationpredicate\n(multiplevaluebind\n(ignore\nsupportee)\n(destructurejustification\nthing)\nsupportee))))))\n(withstatementdestructured\n(lightguy\nsupporter\nheavyguy)\ncontradictorypredication\n(format\nt\n\"~&Overbalance\nof\n~s\non\n~s\nby\n~s\nnoticed\"\nlightguy\nsupporter\nheavyguy)\n(removejustification\nnoscaffolding)\n(tell\n'[scaffold\n,(gentemp\n\"BLOCK\")\n,supporter\nright]\n:justification\n:premise)\nt))\n(values))))\n(defun\nhandleunbalancedcondition\n(conditionobject)\n(let\n((contradictorypredication\n(tmscontradictioncontradictorypredication\nconditionobject)))\n(if\n(typep\ncontradictorypredication\n'blockunbalancedbybrother)\n(let\n((nocounterweight\n(find\n'iscounterweighted\n(tmscontradictionnonpremises\nconditionobject)\n:key\n#'(lambda\n(thing)\n(predicationpredicate\n(multiplevaluebind\n(ignore\nsupportee)\n(destructurejustification\nthing)\nsupportee))))))\n(withstatementdestructured\n(lightguy\nsupporter)\ncontradictorypredication\n(format\nt\n\"~&Unbalance\nof\n~s\non\n~s\"\nlightguy\nsupporter)\n(removejustification\nnocounterweight)\n(let\n((newblock\n(gentemp\n\"BLOCK\")))\n(tell\n'[on\n,newblock\n,supporter\ncenter]\n:justification\n:premise)\n(tell\n'[weight\n,newblock\nveryheavy]\n:justification\n:premise)))\nt)\n(values))))\nEach\nof\nthese\nfetches\nthe\ncontradictory\npredication\nfrom\nthe\ncondition\nobject,\nand\n\nMarch 1999\nTruth Maintenance Facilities\nthen\nchecks\nthat\nit\nis\nthe\ntype\nof\ngripe\nwhich\nthis\nfunction\nwants\nto\nhandle.\nIf\nso,\nit\nexamines\nthe\nassumption\nsupport\npart\nof\nthe\ncondition\nobject.\nFor\nexample,\nHAN\nDLEUNBALANCEDCONDITION\nlooks\nfor\nan\nISCOUNTERWEIGHTED\nstatement\n(which\nthe\nhandler\nassumes\nhas\ntruthvalue\njoshua:*false*)\nin\nthe\nassumption\nsupport.\n[No\ntice\nthat\nthe\ncondition\nobject\ncontains\nthe\njustifications\nof\nthe\nassumptions\nunderly\ning\nthe\ncontradiction.\nSo\nthe\nhandler\nmust\ndestructure\nthe\njustification\nto\nget\nthe\nassumption\npredication.\nIt\nthen\ntests\nif\nthe\npredicate\nof\nthe\npredication\nis\nIS\nCOUNTERWEIGHTED].\nIf\nthe\ncondition\nobject\nrepresents\na\nsituation\nthat\nHANDLE\nUNBALANCEDCONDITION\ncan\nmanage,\nit\nthen\nrepairs\nthings\nby\njoshua:unjustifying\nthe\nassumption\nthat\nthere\nis\nno\ncounterweight\n(using\njoshua:removejustification)\nand\nthen\njoshua:telling\ntwo\nnew\nstatements:\nthe\nfirst\nstates\nthat\nthere\nis\na\nblock\non\nthe\ncenter\nof\nthe\nbalance\nbeam;\nthe\nsecond\nstates\nthat\nthe\nblock\nis\nvery\nheavy.\nIn\neffect\nthe\ncondition\nhandler,\nrepairs\nthe\nsituation\nby\nmaking\nthere\nbe\na\nheavy\ncenterweight.\nThe\nother\nhandler\nrepairs\nthe\nsituation\nwhere\nthere\nis\na\nsingle\nblock\nat\none\nend,\nby\ninserting\na\nscaffold\nunder\nthe\nbeam.\nEach\nof\nthe\nhandlers\nfollows\nthe\nusual\nprotocol\nfor\ncondition\nhandlers\nof\nreturn\njoshua::t\nif\nit\nhandled\nthe\ncon\ndition\nand\njoshua::nil\nif\nit\ndeclines\nto\nhandle\nthe\ncondition.\nOne\ncan\nnow\nuse\nthese\nhandlers\nby\njoshua::conditionbinding\nthem\nand\nthen\nde\nscribing\na\nworld\nsituation\n(or\nrunning\na\nplanner).\nFor\nexample:\n(conditionbind\n((tmscontradiction\n#'handleoverbalancedcondition))\n(conditionbind\n((tmscontradiction\n#'handleunbalancedcondition))\n(clear)\n(tell\n[on\nblock1\nbalancebeam\nleft]\n:justification\n:assumption)\n(tell\n[weight\nblock1\nlight])\n(tell\n[on\nnothing\nbalancebeam\nright]\n:justification\n:assumption)\n))\nThe\nfollowing\nfigure\nshows\na\ntrace\nof\nthis\ncode\nfrom\nthe\npoint\nwhere\nthe\ncondition\nhandler\ntakes\ncontrol.\n5.1.5. Signalling Truth Value Changes\nAs\na\nresult\nof\nresolving\na\ncontradiction,\na\nTMS\nmay\ncause\nthe\ntruthvalue\nof\nmany\nfacts\nto\nchange.\nA\ncontradiction\nis\nusually\nresolved\nby\nunjustifying\nsome\nmember\nof\nits\nprimitive\nsupport;\nthis\ncauses\nthe\nunjustified\npredication\nto\nchange\nfrom\na\ndefinite\ntruthvalue\n(joshua:*true*\nor\njoshua:*false*)\nto\njoshua:*unknown*.\nAny\npredication\nwhich\ndepended\non\nthe\nretracted\none\nsimilarly\nchanges\nits\ntruthvalue\nto\njoshua:*unknown*.\nIn\nsome\nTMS's\nhowever,\nsome\nfacts\nmay\nchange\nfrom\njoshua:*unknown*\nto\na\ndefinite\ntruthvalue.\nIt\nis\nthe\nresponsibility\nof\nthe\nTMS\nto\ninform\nthe\nrest\nof\nthe\nJoshua\napplication\nof\nthese\nchanges\nin\ntruthvalues.\nTo\ndo\nthis\nthe\nTMS\nshould\ncall\nthe\njoshua:notice\ntruthvaluechange\nand\nthe\njoshua:actontruthvaluechange\nmethods\nfor\neach\nfact\nwhich\nundergoes\na\ntransition\nin\ntruthvalues.\nThe\njoshua:noticetruthvalue\nchange\nmethod\ncan\nthen\nupdate\nany\ndata\nstructures\nthat\nare\nmaintained\noutside\nthe\nTMS\nto\ncorrespond\nto\nthe\nchanged\ntruthvalues.\nIn\naddition,\nthe\njoshua:acton\ntruthvaluechange\nmethod\nmay\ninitiate\na\ndeductive\nprocess\nor\notherwise\naffect\nthe\nworld.\n\nTruth Maintenance Facilities\nMarch 1999\nFigure\n25.\nExample\nTrace\nof\nCondition\nHandler\nNotice\nthat\nalthough\nthere\nmay\nbe\nseveral\npredications\nthat\nhave\nchanged\ntruth\nvalue,\nthe\njoshua:noticetruthvaluechange\nmethods\nfor\nthese\npredications\nare\nin\nvoked\nsequentially.\nAs\nthe\nmethod\nfor\neach\npredication\nis\ncalled,\nit\nupdates\nthe\ncurrent\nview\nof\nthe\nworld\nto\ncorrespond\nto\nthe\nchanged\ntruth\nvalue\nof\nthe\npredica\ntion.\nThus,\nuntil\nall\nthe\nmethods\nhave\nhad\na\nchance\nto\nrun,\nthe\nmodel\nof\nthe\nworld\nwill\nbe\npartially\ninconsistent.\nTo\nallow\nthis\nproblem\nto\nbe\naddressed,\nthere\nare\ntwo\nmehtods\nto\nhandle\nthe\nup\ndating:\njoshua:noticetruthvaluechange\nand\njoshua:actontruthvaluechange.\nThe\nTMS\nshould\nfirst\ncall\nthe\njoshua:noticetruthvaluechange\nmethod\nfor\nevery\npredication\nthat\nhas\nchanged\ntruthvalue.\nAfter\nthat,\nthe\nTMS\nshould\ncall\nthe\njoshua:actontruthvaluechange\nmethod\nfor\neach\npredication\nthat\nhas\nchanged\ntruthvalue.\nA\npredication's\njoshua:noticetruthvaluechange\nmethod\nshould\nupdate\nwhatever\ninternal\ndatastructures\nrequire\nmodification,\nbut\nshould\navoid\nany\nother\naction\nthat\nmight\ndepend\non\nexamining\nother\ndatastructures\nwhich\nhave\nnot\nyet\nbeen\nupdated.\nThe\njoshua:actontruthvaluechange\nmethod\nis\nallowed\nto\ntake\nwhatev\ner\nactions\nit\ndesires.\nThe\nmost\nimportant\nexample\nof\nthis\ntwopass\nprotocol\nis\nthe\nReteNetwork\nused\nto\ntrigger\nforward\nchaining\nrules.\nDuring\nthe\njoshua:noticetruthvaluechange\npass,\nthe\nReteNetwork\nupdates\nits\ninternal\ndata\nstructures\nto\nremove\npartial\ntriggering\ninformation\nthat\ndepended\non\nthe\nprevious\ntruthvalue\nof\npredications\nthat\nhave\nchanged\ntruthvalue.\n(If\nthis\nwere\nnot\ndone,\nthen\nrules\nmight\nbe\nexecuted\neven\nthough\nthe\ntriggering\npredications\nno\nlonger\nhave\nthe\ntruth\nvalue\nappropriate\nfor\ntriggering\nthe\nrule).\nDuring\nthe\njoshua:actontruthvaluechange\npass\nthe\nnew\ntruthvalues\nof\npredications\nare\npropagated\nthrough\nthe\nnetwork,\nallowing\nrules\n\nMarch 1999\nTruth Maintenance Facilities\nthat\nhave\na\nvalid\ntriggering\nset\nto\nexecute.\nTMS\nimplementors\ndo\nnot\nhave\nto\ncon\ncern\nthemselves\nwith\nthese\ndetails,\nsince\nthey\nare\nimplemented\nby\nsystem\nsupplied\n:before\nand\n:after\nmethods.\n5.2. The Joshua LTMS\nThis\nsection\nexplains\nhow\nthe\nTruth\nMaintenance\nSystem\nprovided\nwith\nJoshua\nworks\nand\nhow\nto\nuse\nits\nfeatures.\nThe\nJoshua\nTMS,\nwhich\nwe\ncall\nan\nLTMS\n(us\ning\nterminology\ndue\nto\nForbus\nand\ndeKleer)\nis\nderived\nfrom\nthe\n3valued\nTruth\nMaintenance\nSytem\ndeveloped\nby\nDavid\nMcAllester\nat\nMIT.\nThe\nJoshua\nLTMS\nalso\nprovides\nan\nadditional\nfeature\n(the\n:OneOf\njustification)\nwhich\nallows\nyou\nto\ncontrol\nthe\ninvocation\nof\nassumptions.\n5.2.1. Clause Justification Structures\nThe\njustification\nstructure\nused\nin\nthe\nLTMS\nis\ncalled\na\nclause.\nA\nclause\nis\nsimply\na\nlogical\ndisjunction\nof\nseveral\nfacts.\nFor\nexample,\nF1 ∨\nF2 ∨\n...\nFn\nLogically,\nif\nall\nbut\none\nof\nthese\nfacts\nis\nfalse,\nthen\nthe\nother\nmust\nbe\ntrue.\nFor\nexample,\nif\nF\n,\nF\n,\n...\n,\nF\nn1\nare\nall\nfalse,\nthen\nF\nn\nmust\nbe\ntrue.\nSimilarly,\nif\nF1\n,\nF2\n,\n...\n,\n...\n,\nF\nare\nall\nfalse,\nthen\nFi\nmust\nbe\ntrue.\n(This\nis\nknown\nboth\nas\n,\nFi-1\n,Fi+1\nn\nthe\nCut\nrule\nand\nas\nUnitResolution).\nThus,\na\nclause\ncan\nbe\nused\nto\nperform\nas\nmany\ninferences\nas\nthere\nare\nconstituents\nof\nthe\nclause.\nThe\nnormal\nmodus\nponens\nrule\nis\nactually\na\nspecial\ncase\nof\nthe\nabove\nclausal\nin\nferencing.\nThis\nis\nbecause\nP →\nQ\nis\nlogically\nequivalent\nto\n¬\nP ∨\nQ.\nOnce\nan\nimplication\nhas\nbeen\nconverted\nto\nclausal\nform,\nthe\nnormal\nmodus\nponens\nrule\nfollows\nimmediately\n(since\nP\nis\nthe\nnegation\nof ¬\nP,\nevery\nconstituent\nof\nthe\nclause ¬\nP ∨\nQ\nbut\nQ\nis\nfalse\nand,\ntherefore\nQ\nmust\nbe\ntrue).\nIn\naddition,\nclausal\nin\nferencing\ncan\ndeduce ¬\nP\nfrom ¬\nQ\n(since ¬\nQ\nnegates\nQ\nleaving\nonly ¬\nP).\nThe\nclausal\nmechanism\nused\nin\nthe\nJoshua\nLTMS\ndiverges\nfrom\nthis\nsimple\nde\nscription\nonly\nslightly.\nFirst\nof\nall,\nin\naddition\nto\nits\nconstituents\na\nclause\nalso\ncon\ntaints\na\nmnemonic.\nIf\nthe\nclause\nwas\ncreated\nto\nmemoize\nan\ninference\ndrawn\nby\na\nrule,\nthen\nthe\nmnemonic\nshould\nbe\nthe\nname\nof\nthe\nrule.\nIn\nother\ncases,\nthe\nmnemonic\nmay\nbe\nused\nto\nindicate\nsome\nspecial\nproperty\nof\nthe\nclause.\nThe\nsecond\nvariation\nis\nthat\nsince\nin\nJoshua\nboth\nP\nand ¬\nP\nare\nrepresented\nby\nthe\nsame\ndatabase\npredication,\nit\nis\nnecessary\nto\nindicate\nin\nthe\nclause\ndata\nstructure\nwhich\ntruthvalue\nof\nP\nis\nintended.\nThus,\na\nclause\nactually\nconsists\nof\ntwo\nlists\nof\npredications:\nthe\npositive\nconstituents\nand\nthe\nnegated\nconstituents.\nThe\nintended\ntruthvalue\nof\nthe\npositive\nconstituents\nis\n*true*\nand\nthe\nintended\ntruthvalue\nof\nthe\nnegated\nconstituents\nis\n*false*.\n\nTruth Maintenance Facilities\nMarch 1999\nIf\nall\nbut\none\nof\nthe\nconstituents\nof\na\nclause\nhave\nthe\nopposite\ntruthvalue\nfrom\ntheir\nintended\ntruthvalue,\nthen\nthe\nfinal\nconstituent\nis\nforced\nto\nassume\nits\nin\ntended\ntruthvalue.\n(Note:\n*true*\nand\n*false*\nare\neach\nother's\nopposite\ntruthvalue;\n*unknown*\nis\nnot\nthe\nopposite\ntruthvalue\nof\neither\n*true*\nor\n*false*).\nA\nunit\n(or\nprimitive)\njustification\nin\nthe\nLTMS\nis\nsimply\na\nclause\nwith\nonly\none\nconstituent.\nThis\nsingle\nconstituent\nwill,\ntherefore,\nbe\nforced\nto\nassume\nits\nintend\ned\ntruthvalue.\nWe\nrefer\nto\nthe\npredications\nso\njustified\nas\nprimitively\njustified\npredications.\nOne\nspecial\nkind\nof\nprimitively\njustified\npredication\nis\na\npremise;\nthese\nhave\na\nsupporting\nclause\nwhose\nmnemonic\nis\n:premise.\nIf\nevery\nconstituent\nof\na\nclause\nhas\nthe\nopposite\ntruthvalue\nfrom\nits\nintended\ntruthvalue,\nthen\nthe\nclause\nis\nunsatisfiable\nand\na\ncontradiction\nis\nsignalled.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\nThe\nCondition\nsignalled\nby\nthe\nLTMS\nis\ncalled\nltms:ltmscontradiction.\nIf\nthe\nsup\nport\nunderlying\nthe\ncontradiction\ncontains\nonly\npremises\nthen\nthe\ncondition\ncalled\nltms:ltmshardcontradiction\nis\nsignalled.\nThese\nconditions\nhave\nthe\nsame\nin\nstance\nvariables\nas\nthe\nbase\ntmscontradiction\nflavors.\nNogoods in the LTMS\nWhen\nthe\nLTMS\nsignals\na\ncontradiction\nit\nautomatically\nconstructs\na\nnew\nclause,\ncalled\na\nnogood.\nThe\nidea\nbehind\nthe\nnogood\nis\nas\nfollows:\nthere\nis\na\nset\nof\nprimi\ntively\njustified\npredications\nwhose\ncurrent\ntruthvalue\nassignments\nled\nto\nthe\ncon\ntradiction.\nSince\na\ncontradiction\nis\nunacceptable,\nat\nleast\none\nof\nthese\nprimitively\njustified\npredications\nmust\nhave\nthe\nopposite\ntruthvalue\nfrom\nthat\nwhich\nit\ncur\nrently\nhas.\nThus\nsuppose\nwe\njustify\na\nfact\nwith\nthree\njustifications\nas\nfollows:\n(definepredicate\nloser\n(a)\n(ltms:ltmspredicatemodel))\n(definepredicate\ncauseoflossage\n(a)\n(ltms:ltmspredicatemodel))\n(let\n((cause1\n(tell\n[causeoflossage\na]\n:justification\n:assumption))\n(cause2\n(tell\n[causeoflossage\nb]\n:justification\n:assumption))\n(cause3\n(tell\n[causeoflossage\nc]\n:justification\n:assumption)))\n(tell\n[loser\nX]\n:justification\n'(causingpartoflossage1\n(,cause1\n,cause2\n,cause3))))\nThe\nresult\nis\nshown\nin\nfigure\n26:\nFigure\n26.\nExample\nof\nsetting\nup\na\nnogood\nclause\n\nMarch 1999\nTruth Maintenance Facilities\nThen\nthe\nprimitive\nsupport\nof\nthe\nfact\nwill\nconsist\nof\nthe\nthree\nassumptions\nas\ncan\nbe\nseen\nbelow:\n(mapoverdatabasepredications\n[loser\nX]\n#'explain)\n(support\n[LOSER\nX])\n([CAUSEOFLOSSAGE\nA]\n[CAUSEOFLOSSAGE\nB]\n[CAUSEOFLOSSAGE\nC])\nIf\nwe\nnow\ntell\nthe\nLTMS\nthat\nthe\npredication\n[LOSER\nX]\nis\ncontradictory\nthen,\nin\naddition\nto\ninvoking\nthe\ncontradiction\nhandler,\nit\nwill\ncreate\na\nnew\nNogood\nclause:\n#<LTMS:NOGOOD ¬[CAUSEOFLOSSAGE\nA]\n∨¬\n[CAUSEOFLOSSAGE\nB]\n∨¬\n[CAUSEOFLOSSAGE\nC]>\nWhich\nsays\nthat\nat\nleast\none\nof\nthe\ncauses\nof\nthe\ncontradiction\nmust\nbe\n*false*\nsince\neach\nof\nthem\nwas\ntrue\nat\nthe\ntime\nthe\ncontradiction\noccured.\nA\nconstituent\nof\na\nclause\nis\nprinted\nwith\na\nleading\nnegation\nsign\n(¬)\nif\nits\nintended\ntruthvalue\nin\nthe\nclause\nif\n*false*.\nA\nNogood\nis\njust\na\nnormal\nclause\nwhose\nmnemonic\nis\nltms:nogood.\nOnce\ncreated,\nit\nbehaves\nno\ndifferently\nfrom\nany\nother\nclause.\n(However,\nnogoods\nare\ninternals\nof\nthe\nLTMS\nthat\nneed\nnever\nbe\nmanipulated\nby\na\nuser).\nSuppose\nthat\n[CAUSEOFLOSSAGE\nC]\nwas\nunjustified\nin\norder\nto\nresolve\nthe\nabove\ncontradiction\nand\nthat\nthe\nabove\nnogood\nwas\nthen\ninstalled.\nNotice\nthat\nboth\n[CAUSEOFLOSSAGE\nA]\nand\n[CAUSEOFLOSSAGE\nB]\nare\nstill\njoshua:*true*.\nTherefore,\n[CAUSEOFLOSSAGE\nC]\nis\nthe\nonly\nconstituent\nof\nthe\nnogood\nwhich\ndoes\nnot\nhave\nthe\nopposite\ntruthvalue\nfrom\nthe\nclause's\nintended\ntruthvalue.\nThe\nLTMS\nwill,\ntherefore,\nforce\n[CAUSEOFLOSSAGE\nC]\nto\nassume\nits\nintended\ntruthvalue\nof\n*false*.\nControlling Choices in the LTMS\nThe\nLTMS\nrecognizes\none\nspecial\ntype\nof\nclause\ncalled\na\nOneOf.\nOneOfs\nare\ndis\ntinguished\nby\nhaving\na\nmnemonic\nfield\nwhose\nvalue\nis\n:oneof.\nOneofs\ncan\nbe\nused\nto\ncontrol\nthe\nmaking\nof\nassumptions.\nIn\na\nnormal\nclause,\nthe\nLTMS\nforces\na\nconstituent\nto\nassume\na\ndefinite\ntruthvalue\nonly\nwhen\nevery\nother\nconstituent\nhas\nthe\nopposite\ntruthvalue\nfrom\nthat\nintended\nfor\nit\nby\nthe\nclause.\nThus,\nif\nevery\nconstituent\nof\na\nclause\nhas\n*unknown*\ntruth\nvalue,\nthe\nLTMS\nwill\ntake\nno\naction.\nIn\na\nOneOf\nclause,\nhowever,\nthe\nLTMS\nwill\nguarantee\nthat\nat\nleast\none\ncon\nstituent\nhas\nits\nintended\ndefinite\ntruthvalue.\nIt\ndoes\nthis\nby\nadding\nto\nthat\ncon\nstituent\na\nprimitive\njustification\nwhose\nmnemonic\nis\n:choice.\n\nTruth Maintenance Facilities\nMarch 1999\nAlthough\nyou\ncan\ncreate\nOneOf\nclauses\ndirectly\n(by\nusing\njustify\nor\nthe\n:justification\nkeyword\nargument\nto\ntell)\nit\nis\nusually\neasier\nand\nmore\neffective\nto\nuse\nthe\nspecial\npredicate\nltms:oneof\nprovided\nwith\nthe\nLTMS\nto\ndo\nthis,\nfor\nex\nample:\n(tell\n[ltms:oneof\n[loser\nX]\n[loser\nY]\n[loser\nZ]]\n:justification\n:assumption)\nNotice\nthat\nthis\ncreates\nand\ninserts\ninto\nthe\ndatabase\none\npredication\nfor\neach\ncon\nstituent\nof\nthe\nOneOf;\nhowever,\nit\ninitially\nprovides\nno\njustification\nfor\nany\nof\nthese\nconstituents.\nIn\naddition,\nit\ncreates\na\nltms:oneof\npredication\nwhich\nis\njusti\nfied\nas\nan\n:assumption\nas\ndirected\nby\nthe\njoshua:tell.\nFinally,\nsince\nno\nconstituent\nof\nthe\nOneOf\nhas\nits\nintended\ntruthvalue,\nthe\nLTMS\npicks\none\nand\njustifies\nit\nwith\na\n:choice\njustification.\nThis\nchoice\ncan\nbe\noverridden\nby\nexplicitly\nasserting\nits\nnegation\nwith\na\npremise\njustification\n(as\nfar\nas\nthe\nLTMS\nis\nconcerned,\na\n:choice\nprimitive\njustification\nis\njust\nan\nassumption;\nonly\n:premise\njustifications\nare\ntreated\nas\nunretractable):\n(tell\n[not\n[loser\nx]]\n:justification\n:premise)\nNotice\nthat\nwhen\nthe\nchoice\nof\n[LOSER\nX]\nis\noverriden,\nthe\nLTMS\npicks\nanother\nconstitutent\nof\nthe\nclause\nto\njustify\nwith\na\n:choice\njustification.\nThis\nleaves\nthe\n\nMarch 1999\nTruth Maintenance Facilities\ndatabase\nin\nthe\nfollowing\nstate:\nSimilarly,\nif\nwe\nnow\noverride\nthis\nchoice,\nthe\nfollowing\nwill\nresult:\n(tell\n[not\n[loser\ny]]\n:justification\n:premise)\nFinally,\nif\nwe\noverride\nthe\nlast\nchoice,\nthen\nthe\nltms:oneof\npredication\nwill\nsimply\nbe\nretracted\nsince\nit\nis\njustified\nas\nan\n:assumption:\n(tell\n[not\n[loser\nz]]\n:justification\n:premise)\n\nTruth Maintenance Facilities\nMarch 1999\nAnd\nat\nthis\npoint\nthe\ndatabase\nwill\nlook\nlike:\nNotifying the LTMS of Contradictions\nThe\nLTMS\nnotices\nlogical\ncontradictions\nany\ntime\nthat\na\npredication\nis\nabout\nto\nas\nsume\nboth\njoshua:*true*\nand\njoshua:*false*\ntruthvalues.\nAt\nsuch\ntims,\nthe\nLTMS\nintervenes\nand\ninitiates\nbacktracking\n(the\nprocess\nof\nhandling\nand\nremoving\ncon\ntradictions).\nHowever,\nthere\nare\ntimes\nwhen\nyou\nmay\nwant\nthe\nLTMS\nto\ntreat\nsome\ncondition\nas\nif\nit's\na\ncontradiction,\neven\nthough\nthere\nis\nno\npredication\nwhich\nis\ncontradictory.\nThe\nLTMS\nprovides\ntwo\ntechniques\nfor\ndoing\nthis.\nThe\nfirst\nof\nthese\nis\nthe\nfunc\ntion\nltms:backtrack.\nThe\nsecond\nis\nthe\nltms:contradiction\npredicate.\nThe\nfunction\nltms:backtrack\ntakes\nthree\narguments.\nThe\nfirst\nshould\nbe\na\ndatabase\npredication,\nthe\nsecond\na\ntruthvalue\nthat\ndefaults\nto\nthe\ncurrent\ntruth\nvalue\nof\nthe\npredication.\nThe\nthird\nargument\nis\nused\nto\ninstruct\nthe\nLTMS\nto\nsig\nnal\na\nuserdefined\ncondition.\nCalling\nltms:backtrack\ncauses\nthe\nLTMS\nto\ninitiate\nbacktracking\njust\nas\nif\nits\nfirst\nargument\nhad\nbecome\ncontradictory.\nBacktracking\nwill\ncontinue\nuntil\nthe\npredication\nhas\na\ntruthvalue\nother\nthan\nthe\nsecond\nargu\nment\nto\nltms:backtrack.\nOne\ntechnique\nfor\nusing\nthis\nfunction\nis\nvia\nthe\njoshua:noticetruthvaluechange\nprotocol\nfunction.\nFor\nexample:\n(definepredicate\nIshouldneverbein\n()\n(ltms:ltmspredicatemodel))\n(definepredicatemethod\n(actontruthvaluechange\nIshouldneverbein)\n(ignore)\n(when\n(eql\n(predicationtruthvalue\nself)\n*true*)\n(ltms:backtrack\nself)))\n(tell\n[Ishouldneverbein]\n:justification\n:assumption)\nTelling\npredication\n[ISHOULDNEVERBEIN]\nJustifying:\n[ISHOULDNEVERBEIN]\n<\nASSUMPTION\nJustifying:\n[ISHOULDNEVERBEIN]\nas\nfalse\n<\nNOGOOD\n¬\n[ISHOULDNEVERBEIN]\nT\nNotice\nthat\nas\nsoon\nas\nthe\n[ISHOULDNEVERBEIN]\npredication\nis\njustified\nas\nan\nassumption,\nthe\njoshua:noticetruthvaluechange\nmethod\nis\ninvoked\ncausing\nback\ntracking\nto\nbegin.\nThis\ncreates\na\nnogood\nwhich\ncauses\nthe\npredication\nto\nassume\njoshua:*false*\ntruthvalue.\n\nMarch 1999\nTruth Maintenance Facilities\nThe\npredicate\nltms:contradiction\nis\ndefined\nin\na\nmanner\nsimilar\nto\nthe\nIshould\nneverbein\npredicate\nin\nthe\nexample\nabove.\nThus,\nit\ncan\nbe\nused\nto\nnotify\nthe\nLTMS\nof\na\ncontradiction.\nWhenever\na\nltms:contradiction\npredication\nassumes\na\ntruthvalue\nof\njoshua:*true*\nbacktracking\nis\ninitiated.\nThe\nfollowing\nrule\n(which\nis\nin\nthe\nJericho\nsystem\nof\nJoshua\nexamples)\ncauses\nbacktracking\nto\nbe\ninitiated\nwhenever\nany\ntype\nof\ntragedy\nis\ndeduced.\n(defrule\ntryingtowriteacomedy\n(:forward)\n;;\nno\ntragedies,\nplease\nIF\n[tragedy\n?fact]\nTHEN\n[ltms:contradiction])\n\nTruth Maintenance Facilities\nMarch 1999\n\nMarch 1999\nJoshua Metering\n6. Joshua Metering\nJoshua\nextends\nthe\nsystem\nmetering\nfacilities\nin\norder\nto\nprovide\nspecific\ntools\nfor\nanalyzing\nJoshua\nprograms.\nThese\ntools\nare\nconveniently\navailable\nin\nthe\nMetering\nInterface.\nJoshua\nmetering\ncan\nhelp\nyou\ndo\nthree\nthings:\n-\nFind\nbugs\nin\nyour\nprogram\nthat\nshow\nup\nonly\nas\nperformance\nproblems\n-\nImprove\nthe\nperformance\nof\nyour\nJoshua\nrules\nby\nchanging\nthe\nordering\nof\nthe\ntriggers\n-\nUse\nthe\nJoshua\nmodeling\ncapabilities.\nBecause\nthe\nMetering\nsystem\nis\nnot\npart\nof\nthe\ndefault\nworld,\nyou\nmust\nload\nit\nseparately,\nusing\nthe\ncommand:\nLoad\nSystem\nJoshua\nMetering\nBy\nloading\nthe\nJoshua\nMetering\nsystem\nyou\nalso\nload\nthe\nstandard\nMetering\nsys\ntem.\nBefore\nusing\nJoshua\nmetering\nyou\nshould\nfamiliarize\nyourself\nwith\nhow\nto\nuse\nthe\nMetering\nInterface.\nSee\nthe\nsection \"Metering\nInterface\"\nin\nProgram\nDevelopment\nUtilities.\n6.1. Joshua Metering Types\nJoshua\ndefines\nnew\nMetering\nTypes\ndesigned\nfor\nmetering\nJoshua\nprograms.\nUn\nlike\nthe\nsystemprovided\nmetering\ntypes\nwhich\ncollect\ndata\nabout\nfunction\ncalls,\nthe\nJoshua\nmetering\ntypes\ncollect\ndata\nabout\nthe\nJoshua\nProtocol\nsteps\nand\nthe\nfor\nward\nrule\nRete\nnetwork.\nThis\nlets\nyou\nstudy\nthe\nexecution\nof\nyour\nJoshua\npro\ngrams\nwithout\noverwhelming\nyou\nwith\nthe\ndetails\nof\nevery\nfunction\ncall.\nThere\nare\nthree\nnew\nMetering\nTypes:\n-\nJoshua\nTell\nMetering\n-\nJoshua\nAsk\nMetering\n-\nJoshua\nMerge\nMetering\n6.1.1. Joshua Tell Metering\nThe\nJoshua\nTell\nMetering\ntype\ncollects\ninformation\nabout\neach\njoshua:tell.\nThe\nda\nta\nfor\neach\njoshua:tell\nof\na\npredication\nis\nindexed\nby\nthe\npredicate\nof\nthat\npredica\ntion.\nTo\nillustrate:\nin\nthe\nhardware\ntroubleshooting\nexample\nfrom\nthe\nJericho\nsys\ntem,\nall\ntells\nof\npredications\nof\nthe\nform\n[hasstatus\n...]\nwill\nbe\nindexed\nunder\nthe\npredicate\nhasstatus.\n\nJoshua Metering\nMarch 1999\nTell\nMetering\ncollects\ntwo\ntypes\nof\ndata:\ncounts\nand\ntimes.\nCounts\nsimply\nkeep\ntrack\nof\nthe\nnumber\nof\ntimes\nan\nevent\noccurs\nwhile\ntelling\na\npredication\nof\na\nparticular\npredicate.\nMetering\ncollects\nfour\ncounts\nfor\neach\npredi\ncate:\n1.\nTells:\nHow\nmany\ntimes\na\npredication\nof\nthis\npredicate\nis\ntold\nto\nthe\ndatabase.\n2.\nMatches:\nHow\nmany\nattempted\nmatches\nare\ncaused\nby\ntelling\na\npredication\nof\nthis\npredicate.\nThese\nare\nmatches\nagainst\nforward\nrule\ntriggers\nin\nthe\nfor\nward\nrule\nRete\nnet.\n3.\nMerges:\nThe\nnumber\nof\nattempted\nmerges\nin\nthe\nRete\nnet\noccurring\nwhile\ntelling\npredications\nof\nthis\npredicate.\n4.\nRules:\nHow\nmany\nforward\nrule\nfirings\noccurred\nwhile\ntelling\npredications\nof\nthis\npredicate.\nThe\ntimes\ncollected\nby\nJoshua\nmetering\ntell\nyou\nhow\nmuch\ntime\nis\nspent\nin\neach\nof\nthe\nfive\nprotocol\nsteps\ncalled\ndirectly\nor\nindirectly\nby\njoshua:tell.\nThe\ntime\nreport\ned\nfor\na\nprotocol\nstep\nincludes\nthe\ntime\nin\nthe\nprotocol\nfunction\nand\nthe\ntime\nin\nall\nfunctions\nthat\nit\ncalls.\nIt\ndoes\nnot\ninclude\nthe\ntime\nspent\nin\nother\nprotocol\nsteps.\nThis\nis\nreferred\nto\nas\nexclusive\ntime\nof\nthe\nprotocol\nstep.\nTell\nMetering\ncollects\nexclusive\ntimes\nfor\nthe\nfollowing\nprotocol\nsteps:\n1.\njoshua:tell\n2.\njoshua:insert\n3.\njoshua:justify\n4.\njoshua:noticetruthvaluechange\n5.\njoshua:actontruthvaluechange\n6.\njoshua:mapoverforwardruletriggers\nIn\naddition\nexclusive\ntimes\nare\ncollected\nfor\ntwo\nimportant\noperations\nwhich\nare\nnot\npart\nof\nthe\nprotocol:\n1.\nMatching:\nThe\ntime\nspent\ndoing\nthe\nactual\nmatching\nof\ntold\npredications\nagainst\nforward\nrule\ntriggers.\n2.\nMerging:\nThe\ntime\nspent\ntrying\nto\nmerge\nthe\nbinding\nenvironments\ngenerated\nby\nthe\nmatches.\nExclusive\ntimes\nare\ncollected\nas\nhistograms.\nSee\nthe\nsection \"Expanding\nMetering\nData\"\nin\nProgram\nDevelopment\nUtilities.Times\ninclude\npaging\ntime\nand,\nunless\nthe\nmetering\nrun\nis\ndone\nusing\nthe\nwithoutinterrupts\noption,\nother\nprocess\ntime\nas\nwell.\nSee\nthe\nsection \"Interpreting\nthe\nResults\nof\na\nMetering\nRun\"\nin\nProgram\nDe\nvelopment\nUtilities.\nHere's\nan\nexample\nof\nwhat\na\nJoshua\nTell\nMetering\nrun\nmight\nlook\nlike.\nNotice\nthat\nwe\ncan\nuse\nuse\nthe\nMetering\nInterface\nto\nshow\nus\nonly\nthe\ncounts\nor\ntimes\nthat\ninterest\nus.\n\nMarch 1999\nJoshua Metering\nMeter\nForm\n(ht:diagnosecircuit\nnil)\nJoshua\nTell\nEverything\nWith\nJoshua\nTell\nMetering\nyou\ncan\nlocate\nthe\npredicates\nyour\nprogram\nuses\nthe\nmost.\nYou\ncan\nalso\nfind\nthe\npredicates\nthat\nspend\nthe\nmost\ntime\nin\njoshua:insert\n(or\njoshua:justify\nor\njoshua:mapoverforwardruletriggers\n...)\nThis\ninformation\ncan\nhelp\nyou\ndetermine\nhow\nto\nspeed\nup\nyour\nprogram.\nFor\nexample\nif\nyour\npro\ngram\nspends\na\nlot\nof\ntime\nin\njoshua:insert\nfor\na\nparticular\npredicate,\nthat\npredi\ncate\nmight\nbe\na\ngood\ncandidate\nfor\ndata\nmodeling.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.\nIf\nyour\nprogram\nspends\na\ngreat\ndeal\nof\ntime\nin\njoshua:mapoverforwardruletriggers\nyou\nmight\ntry\ntrigger\nmodeling\nto\nimprove\nthe\nperformance.\nSee\nthe\nsection \"Customizing\nthe\nMatchers\nGenerated\nby\nthe\nRule\nCompiler\",\npage\n102.\nModeling\nis\nonly\nadvantageous\nwhen\nyou\nuse\na\ndata\nstructure\nthat\nis\nmore\neffi\ncient\nthan\nthe\ndefault\ndata\nstructures.\nMetering\ncan\nhelp\nyou\nchoose\nefficient\ndata\nstructures\nfor\nyour\nmodel.\nYou\ncan\nmeter\nyour\nprogram\nbefore\nmodeling\nand\ncare\nfully\nlook\nat\nthe\ntimes\nfor\nthe\nrelevant\nprotocol\nsteps,\nfor\nexample\njoshua:insert.\nWith\nthese\nnumbers\nin\nhand,\nyou\ncan\nimplement\nalternative\nmodels;\nremeter\nand\ncompare\nthe\nnumbers.\nYou\nwill\nimmediately\nbe\nable\nto\nsee\nif\nyour\nmodeling\nwas\nsuccessful.\nHere's\na\nsimple\nexample\nof\nusing\nJoshua\nmetering\nto\nmeasure\nthe\nperformance\nim\nprovement\ncaused\nby\nmodeling\na\npredicate.\nFigure\n27.\nTell\nmetering\nof\nthe\nunmodelled\ngoodtoeat\npredicate.\n6.1.2. Joshua Ask Metering\nJoshua\nAsk\nMetering\ncollects\ninformation\nabout\neach\nuse\nof\njoshua:ask\nin\nyour\nJoshua\nprogram.\nIt\nprovides\nthe\ndata\nin\na\nsimilar\nformat\nto\nthat\nused\nby\nTell\nMe\ntering,\nonly\nit\nshows\nthe\nprotocol\nsteps\ncalled\nwhile\nretrieving\ndata\nfrom\nthe\ndatabase\nand\nrunning\nbackward\nrules.\n\nJoshua Metering\nMarch 1999\nFigure\n28.\nTell\nmetering\nof\nthe\nmodelled\ngoodtoeat\npredicate.\nTwo\ncounts\nare\ncollected\nfor\neach\npredicate:\n1.\nAsks:\nThe\nnumber\nof\nasks\nperformed\nfor\npredications\nof\nthe\npredicate.\n2.\nRules:\nThe\nnumber\nof\nbackward\nrules\nfired\nwhile\nasking\npredications\nof\nthe\npredicate.\nExclusive\ntime\nis\ncollected\nfor\nthe\nfollowing\nprotocol\nsteps:\n1.\njoshua:ask\n2.\njoshua:askdata\n3.\njoshua:fetch\n4.\njoshua:askrules\n5.\njoshua:mapoverbackwardruletriggers\nNote\nthat\nthe\ntime\nspent\nin\njoshua:askquestions\nis\nnot\nexplicitly\nreported,\nbut\nits\ntime\nis\nexcluded\nfrom\nthe\nother\nprotocol\nsteps.\n6.1.3. Joshua Merge Metering\nJoshua\nMerge\nMetering\ncollects\ninformation\nabout\nthe\nmatches\nand\nmerges\nthat\nhappen\nin\nthe\nrete\nnetwork.\nSee\nthe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNet\nwork\",\npage\n27.\nThe\ndata\nis\nindexed\nby\nthe\nnode\nin\nthe\nrete\nnetwork\nand\ndisplayed\nas\nseveral\ntrees.\nThe\nroot\nof\neach\ntree\nis\na\nrule\nand\nthe\nchildren\nare\nthe\nnodes\nin\nthe\nnetwork\nthat\nlead\nto\nthe\ntriggering\nof\nthat\nrule.\nIn\nthe\nrete\nnet\na\nsingle\nmatch\nor\nmerge\nnode\ncan\nbe\nused\nin\ntriggering\nmore\nthan\none\nrule.\nIn\nthe\nMetering\nInterface\nthese\nshared\nnodes\nare\nduplicated,\nso\nthat\neach\nrule\nhas\nits\nown\nindependent\ntree\nof\nnodes.\nThere\nis\nhowever\na\nvisual\nindicator\n(an\nasterisk\nnext\nto\nthe\nnode\nname)\nin\nthe\ndisplay\nof\neach\nshared\nnode.\nThe\nnode\ntrees\nare\nvery\nsimilar\nto\nthe\ncall\ntrees\nused\nin\nother\nmetering\ntypes.\nIni\ntially\nonly\nthe\nroots\nof\nall\nthe\ntrees\nare\nvisible.\nThere\nare\ncommands\nwhich\nallow\nyou\nto\nshow\nand\nhide\nnodes\nor\nshow\nand\nhide\nnode\nchildren.\nThis\nset\nof\ncommands\nparallels\nthe\ncommands\non\ncall\ntrees.\nSee\nthe\nsection \"Exploring\na\nCall\nTree\"\nin\nProgram\nDevelopment\nUtilities.\nThe\ncommon\ncommands\nare\ninvoked\nwith\nthe\nsame\ngesture\nfor\nboth\nkinds\nof\ntrees.\nSee\nthe\nsection \"Using\nthe\nMouse\nin\nthe\nMetering\nInterface\"\nin\nProgram\nDevelopment\nUtilities.\nExample:\nMeter\nForm\n(ht:diagnosecircuit\nnil)\nJoshua\nMerge\nEverything\n\nMarch 1999\nJoshua Metering\nJoshua\nMerge\nmetering\nhelps\nyou\nlocate\ntwo\ndifferent\ntypes\nof\nwasted\nwork:\n1.\nRules\nthat\nmay\nbe\nfiring\ntoo\nmany\ntimes.\n2.\nRule\npatterns\nthat\nmay\nbe\nbadly\nordered\nor\ntoo\ngeneral,\ncausing\nlow\nsuccess\npercentages\nfor\nmerges.\nProbably\nthe\nmost\nimportant\nnumber\nprovided\nby\nJoshua\nMerge\nMetering\nis\nthe\nmerge\nsuccess\npercentage.\nThis\nnumber\ngives\nyou\nthe\nratio\nof\nsuccessful\nmerges\nto\nattempted\nmerges.\nSuccess\npercentages\nfor\nmerges\ncan\noften\nbe\nimproved\nby\nre\nordering\nthe\nclauses\nin\nthe\nrule\npattern\nand\nrecompiling\nthe\nrule.\nThe\noptimal\nor\nder\ndepends\nupon\nseveral\nfactors.\nThe\ntwo\nmajor\nones\nare\nthe\nnumber\nof\npredica\ntions\nthat\nmatch\nthis\nclause\nand\nhow\nmany\nvariables\nthis\nclause\nshares\nwith\nother\nclauses.\nIf\nyou\nare\nusing\ntrigger\nmodeling,\nthe\nmatch\nsuccess\npercentages\nwill\nalso\nbe\nuse\nful.\nThe\ncontract\nof\njoshua:mapoverforwardruletriggers\nis\nto\nmap\nover\nall\nmatch\nnodes\nthat\npossibly\nmatch\nthe\ngiven\npredication.\nThe\nmatch\nnode\nitself\nthen\ndetermines\nif\nit\nactually\nmatches\nthe\npredication.\nIf\na\njoshua:mapoverforward\nruletriggers\nmethod\nis\nnot\nselective\nenough\nthere\nwill\nbe\na\nlow\nmatch\nsuccess\npercentage.\nImproving\nthe\nmatch\nsuccess\nrate\nwill\ndecrease\nthe\nmatch\ntime\n(avail\nable\nin\nTell\nMetering)\nand\nimprove\nthe\nperformance\nof\nyour\nJoshua\nprogram.\n6.2. Choosing Joshua Metering Types\nWhich\ntype\nof\nJoshua\nmetering\nyou\nshould\nuse\ndepends\non\nwhat\nyour\nprogram\nis\ndoing.\nJoshua\nAsk\nMetering\nis\nmost\nuseful\nin\nprograms\nthat\ninclude\nbackward\nchaining.\nIt\nis\nalso\nuseful\nfor\nprograms\nthat\ndon't\ndo\nany\nbackward\nchaining\nbut\nstill\nuse\njoshua:ask\nfrequently\nto\nquery\nthe\ndatabase.\nJoshua\nTell\nMetering\nis\nmost\nuseful\nin\nprograms\nthat\ninclude\nforward\nchaining\nor\nfor\nmeasuring\nthe\ntime\nspent\nin\nsetting\nup\nan\ninitial\ndatabase.\nIt\nis\nrarely\nuseful\nfor\nprograms\nthat\ndo\nstrictly\nbackward\nchaining.\nYou\nshould\nonly\nuse\nJoshua\nMerge\nMetering\nfor\npro\ngrams\nthat\nexecute\nforward\nrules.\n\nJoshua Metering\nMarch 1999\nOther\nsystem\nmetering\ntypes\ncan\nbe\nuseful\nif\na\nJoshua\nprogram\nincludes\nextensive\nuse\nof\nLisp\ncode\nor\nif\nyou\nwant\nto\nunderstand\nthe\ninternal\ndetails\nof\nhow\nJoshua\nworks.\n\nMarch 1999\nControlling Data and Rule Indexing\n7. Controlling Data and Rule Indexing\nThis\nchapter\nshows\nyou\nsome\nbasic\nways\nof\nusing\nthe\nJoshua\nProtocol\nto\ncustomize\nJoshua\ncomponents.\nJoshua\nis\na\nsystem\nwith \"replaceable\"\nparts;\nthat\nis,\nyou\ncan\neasily\nredefine\nthe\nbe\nhavior\nof\nany\nsystem\ncomponent.\nThe\nprotocol\nalso\nmakes\nit\nstraightforward\nto\nbuild\nan\ninterface\nthat\nincorporates\nan\nexisting\ntool\ninto\nJoshua\nwithout\nmodifying\nthat\ntool.\nIn\nJoshua\nboth\nthe\nknowledge\nstructures\nand\nthe\ncontracts\nof\nthe\nprotocol\nfunc\ntions\nare\ndistinct\nfrom\ntheir\nimplementation.\nBecause\nthe\nJoshua\nprotocol\nprovides\na\nstandard\ninterface\nfor\nthe\nknowledge\nstructures\nto\ncommunicate\nwith\ndiverse\nim\nplementations,\nyou\ncan,\nfor\nexample,\nselect\nany\noption\nfor\ndata\nstorage\nwithout\naf\nfecting\nthe\nrule\nstructure\nor\nthe\nway\nthat\nstatements\ninvolving\npredications\nare\nused\nfor\ninferencing\npurposes.\nFigure29\nshows\nsample\ninteractions\nbetween\nsome\nknowledge\nstructures\nand\ntheir\nimplementations\nby\nway\nof\nthe\nprotocol.\nAs\nyou\ncan\nsee\nfrom\nthese\nexamples,\nthe\nvarious\nimplementations\nshown\nhave\nno\neffect\non\nthe\nappearance\nof\nthe\nknowledge\nstructures,\nor\non\nthe\nbehavior\nof\nthe\ntop\nlevel\njoshua:tell\nand\njoshua:ask\nprotocol\nfunctions\nas\nseen\nby\nthe\nuser.\nThis\nis\nbecause\nthe\ncontract\nof\nthese\nfunctions\nremains\nunchanged,\nregardless\nof\nhow\nyou\nimple\nment\ntheir\nbehavior.\nChicken is good to eat.\n(tell [good-to-eat chicken])\nIs OBJECT-1 a cable?\n(ask [type-of OBJECT-1 cable] #'...)\nHow fast is OP-AMP-1?\n(ask [freq OP-AMP-1 ≡ f]#'...)\n(pushnew 'chicken *foods*)\n(typep (obj-named 'OBJECT-1) 'CABLE)\nBehavior\nof OP-AMP-1\nSPICE\nDescription\nof OP-AMP-1\nKnowledge vs. Protocol vs. Implementation\nProtocol\nPossible Implementation\nKnowledge\nFigure\n29.\nKnowledge\nStructures\nCan\nBe\nDiversely\nImplemented\nWhy\nshould\nyou\nuse\nthe\nprotocol\nto\nprovide\nimplementations\nother\nthan\nthe\nde\nfaults\nprovided\nwith\nJoshua?\nThere\nis\noften\na\ngain\nin\nefficiency\nwhen\nyou\nuse\nspe\ncialized\nrepresentations\nfor\ncertain\nkey\nparts\nof\nyour\napplication.\nFor\nexample,\n\nControlling Data and Rule Indexing\nMarch 1999\nchoosing\nthe\nright\ndata\nstructure\nfor\na\nproblem\nimproves\nperformance.\nIn\nthe\ncase\nof\na\nsystem\nthat\nspends\nmore\nthan\nhalf\nof\nits\ntime\nasking\nquestions\nlike, \"Is\nthis\na\ncable?\"\nor \"Is\nthis\na\nlight?\",\nyou\ncould\nimprove\nperformance\nby\nusing\na\nretrieval\nmechanism\nthat\nuses\njoshua::typep\nto\nanswer\nsuch\nquestions,\nas\nshown\nin\nfigure\n29.\nThe\nprotocol\nalso\nallows\nyour\napplication\naccess\nto\nthe\nfacilities\nof\na\nspecialized\ntool.\nFor\nexample,\nas\nfigure29\nshows,\na\nJoshua\napplication\nthat\nneeds\nto\nanswer\nquestions\nabout\nthe\nbehavior\nof\ncircuits\nmight\nwant\nto\ntake\nadvantage\nof\na\npro\ngram\nlike\nSPICE\nthat\nsimulates\nelectronic\ncircuits.\nJoshua\nprovides\na \"seamless\"\nway\nto\naccess\ncustomized\nor\nexternal\nfacilities\nusing\ngeneric\nfunctions\nlike\njoshua:ask\nand\njoshua:tell.\nOr\nyou\nmight\nwant\nto\nuse\na\nTMS.\nYou\nget\na\nTMS\nby\ncreating\na\nmixin\nthat\nimple\nments\nthe\nTMS\nprotocol\nmethods\n(typically\nthis\nmeans\njoshua:justify,\njoshua:unjustify,\nand\njoshua:destructurejustification).\nWith\nthe\nprotocol\nyou\ncan\ncreate\nas\nmany\nkinds\nof\nTMS\nfacilities\nas\nyour\napplication\nneeds.\nHow\ndoes\none\ncustomize\nthe\nprotocol?\nBasically,\nyou\nneed\nto\ndefine\na\ncomponent\nflavor\n(using\njoshua:definepredicatemodel)\nand\nthen\nwrite\nmethods\nto\nimple\nment\nthose\nportions\nof\nthe\nprotocol\nwhose\nbehavior\nyou\nare\ncustomizing.\nThis\ncom\nponent\nis\nthen\nmixed\ninto\nthose\npredicates\n(using\njoshua:definepredicate)\nwhich\nneed\nto\ntake\nadvantage\nof\nthe\ncustomized\nbehavior.\nData\nindexing,\nrule\ncompilation,\nrule\ntriggering\nand\ntruth\nmaintenance\nare\nall\nparts\nof\nthe\nprotocol,\nas\nare\ntheir\ncomponent\nsteps.\nSince\nthe\nprotocol\nidentifies\nand\nmakes\naccessible\neach\nstep\nof\nprocessing\na\nstatement,\nyou\ncan\nfocus\nmodifica\ntions\nvery\nprecisely.\nTypically\nyou\nwould\ncustomize\nthe\nfine\ngrain\nsteps\nthus\npre\nserving\nthe\ngross\nstructure.\nMost\npredicates\ncontinue\nto\nuse\nmost\nof\nthe\ndefault\nmethods.\nSo\nfor\nexample,\nif\nyou\nwant\nto\nchange\nthe\nway\ndata\nis\njustified,\nyou\nde\nfine\na\nmethod\nfor\nthe\njoshua:justify\ncomponent\nof\njoshua:tell,\nbut\nyou\nneed\nnot\ndefine\nmethods\nfor\nthe\ndataindexing\nand\nrulelocating\ncomponents\nof\njoshua:tell.\nObviously\nwhile\ncustomizing\nany\nlevel\nof\nthe\nprotocol,\nyou\nneed\nto\nbe\naware\nof\nfunctions\nthat\nwork\ntogether,\n(such\nas\njoshua:insert,\njoshua:uninsert,\njoshua:fetch,\nand\njoshua:clear),\nsince\nredefining\none\nof\nthese\nfunctions\nrequires\nredefining\nthe\nothers.\nBut\ntypically\nthe\neffects\nof\ncustomizing\nare\nlocalized,\nand\nchanging\none\narea\ndoes\nnot\nrequire\nmassive\nchanges\nin\nthe\nrest\nof\nthe\nsystem.\nWhen\nshould\nyou\ncustomize\nthe\nprotocol?\nNot\nevery\napplication\nneeds\ncustomiza\ntion.\nOften\nJoshua's\ngeneralpurpose\nfacilities\nserve\nquite\nwell.\nHowever,\nas\nyou\ngain\nmore\nknowledge\nabout\nyour\nprogram,\nyou\ncan\nidentify\nwhat,\nif\nany,\nportions\nof\nit ⎯\ndata,\nrules,\ncompilation,\nor\ntruth\nmaintenance ⎯\nwould\nbenefit\nby\ncus\ntomizing,\nor\nwhether\nyou\nwant\nto\ninterface\nto\nan\nexternal\ntool\nsuch\nas\na\ndatabase.\nYou\ncan\nthus\nenrich\nJoshua's\nbuiltin\nfacilities\nincrementally.\nIn\nsum,\ndecisions\nabout\nwhen\nand\nwhat\nto\ncustomize\nare\nentirely\napplication\ndependent.\nJoshua's\nme\ntering\ntools\ncan\nbe\nvery\nhelpful\nhere,\nboth\nto\nidentify\nbottlenecks,\nand\nto\ndeter\nmine\nthe\neffect\nof\ncustomizing\non\nyour\napplication.\nSee\nthe\nsection \"Joshua\nMeter\ning\",\npage\n73.\nHere\nis\nthe\nlist\nof\npredicate\ncustomizing\nfacilities.\nWe\nillustrate\ntheir\nuse\nin\nthe\nexamples\nthat\nfollow.\n\nMarch 1999\nControlling Data and Rule Indexing\njoshua:definepredicatemodel\nThis\nis\nthe\nform\nfor\nspecifying\nnew\ncomponent\nflavors\nthat\nbe\ncombined\nand\nmixed\ninto\npredicates.\nPredicate\nmodels\nare\nnot\ninstantiable\nflavors,\nthey\ncan\nonly\nbe\nmixed\ninto\nthe\ndefini\ntions\nof\npredicates.\njoshua:definepredicate\nThis\nis\nthe\nstandard\npredicatedefining\nform\nthat\nlets\nyou\nspecify\nthe\ncomponent\nflavors\neach\npredicate\nis\nbuilt\non.\nPred\nicates\nare\nthe\nflavors\nthat\ncan\nbe\ninstantiated;\nthe\ninstances\nof\nthese\nare\npredications\n(or\nstatements).\njoshua:definepredicatemethod\nThis\nform\nlets\nyou\ndefine\nmethods\nof\ncomponent\nflavors\n(de\nfined\nby\njoshua:definepredicatemodel)\nor\nof\npredicates\n(de\nfined\nby\njoshua:definepredicate)\nfor\nany\nof\nthe\nprotocol\nfunctions\nthat\nneed\nredefinition.\nTo\nundo,\nuse\nmX\nKill\nDefini\ntion\nfrom\nyour\nZmacs\neditor.\njoshua:undefinepredicatemodel\nThis\nform\nlets\nyou\nexpunge\na\npredicate\nmodel\ndefinition.\njoshua:undefinepredicate\nThis\nform\nlets\nyou\nexpunge\na\npredicate\ndefinition.\nThis\nchapter\ndiscusses\nand\nillustrates\nthe\nfollowing\ntypes\nof\ncustomizations:\n-\nCustomizing\nthe\ntechniques\nfor\nData\nIndexing\n-\nCustomizing\nthe\ntechniques\nfor\nRule\nIndexing\n-\nCustomizing\nthe\nRule\nCompiler\nThe\ndiscussion\nassumes\nan\nunderstanding\nof\nthe\ndefault\noperation\nof\nall\nthe\nabove\nJoshua\nfeatures,\nas\ndescribed\nin\nearlier\nchapters\nof\nthis\nmanual.\n7.1. Customizing the Data Index\nQuick\nReference:\nFor\na\ndescription\nof\nthe\ndefault\nimplementation,\nsee\nthe\nsection\n\"Storing\nand\nRetrieving\nKnowledge\nin\nJoshua:\nthe\nVirtual\nDatabase\",\npage\n7.\nThere\nare\nmany\nways\nin\nwhich\nyou\ncan\nuse\nthe\nJoshua\nProtocol\nto\nchange\nthe\nbe\nhavior\nof\nyour\nprograms;\namong\nthe\nmost\nuseful\nis\nto\nchange\nthe\nway\npredications\nare\nstored\nin\nthe\nvirtual\ndatabase.\nCustomization\nof\nJoshua's\ndata\nindexing\ntechniques\nis\nusually\ndone\nby\ndefining\nnew\nmethods\nfor\njoshua:insert,\njoshua:uninsert,\njoshua:fetch,\nand\njoshua:clear.\n(Under\nsome\ncircumstances,\nit\nis\npreferable\nto\ndefine\nnew\nmethods\nfor\njoshua:tell,\njoshua:untell,\nand\njoshua:askdata\nrather\nthan\njoshua:insert,\njoshua:uninsert,\nand\njoshua:fetch.\nOne\nsuch\ncase\nis\ndiscussed\nin\nan\nexample.\nSee\nthe\nsection \"Cus\n\nControlling Data and Rule Indexing\nMarch 1999\ntomizing\nthe\nData\nIndex\nWithout\nStoring\nPredications\",\npage\n85.)\nYou\nhave\nto\npro\nvide\na\nconsistent\nimplementation\nof\nthese\nmethods\nso\nthat\njoshua:tell\nknows\nwhere\nto\nput\ndata,\njoshua:untell\nknows\nhow\nto\nremove\nspecific\nitems,\njoshua:ask\nknows\nwhere\nto\nfind\ndata,\nand\njoshua:clear\nknows\nhow\nto\nflush\nall\nof\nit.\nThis\nidea\nis\nbest\nexplained\nby\nan\nexample.\nSuppose\nyou\nare\nwriting\nan\nexpert\nsys\ntem\nto\nmimic\nthe\nbehavior\nof\nsome\nanimal.\nWhen\nthis\nanimal\ngets\nhungry,\nit\nstarts\nlooking\nfor\nfood.\nThus,\nit\nmust\nhave\nsome\nmeans\nof\nrecognizing\nobjects\nin\nits\nworld\nthat\nare\ngood\nto\neat.\nTo\nstart\nwith,\nyou\nmight\nimplement\nthis\nby\ndefining\na\npredicate\nlike\ngoodtoeat,\nalong\nwith\na\ncompanion\njoshua:say\nmethod\nfor\na\nbet\nterlooking\ndisplay:\n(definepredicate\ngoodtoeat\n(foodname))\n(definepredicatemethod\n(say\ngoodtoeat)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(foodname)\nself\n(format\nstream\n\"~&I\nlike\nto\neat\n~S.\"\nfoodname)))\nThen\nyou\ncan\njoshua:tell\nyour\nprogram\nabout\nsome\nacceptable\nclasses\nof\nfood.\nBy\ndefault,\nthis\ninformation\nis\nstored\nin\nthe\ndiscrimination\nnet.\n(tell\n[and\n[goodtoeat\nsuanlachowshow]\n[goodtoeat\nkungpaochiding]\n[goodtoeat\ntachienchiding]\n[goodtoeat\nlycheenuts]])\nHaving\ndone\nthis,\nyou\ncan\njoshua:ask\nyour\nprogram\nwhat's\ngood\nto\neat:\n(ask\n[goodtoeat\n?]\n#'sayquery\n:dobackwardrules\nnil)\nI\nlike\nto\neat\nLYCHEENUTS.\nI\nlike\nto\neat\nTACHIENCHIDING.\nI\nlike\nto\neat\nKUNGPAOCHIDING.\nI\nlike\nto\neat\nSUANLACHOWSHOW.\nWhen\nsuch\na\nprogram\ngets\nhungry,\nit\nsearches\nfor\na\nChinese\nrestaurant.\nEventually\nyou\nnotice\nthat\nyour\nprogram\nspends\na\ngreat\ndeal\nof\ntime\ndeciding\nwhat\nto\neat.\nYou\ndo\na\nbit\nof\nmetering\nand\nyou\nfind\nthat\nthe\nprogram\nis\nslow\nbecause\nit\nis\nfetching\npredications\nof\nthe\nform\n[goodtoeat\n?food]\n(where\n?food\nmay\nor\nmay\nnot\nbe\ninstantiated),\nfrom\na\nrather\nlarge\ndiscrimination\nnet\ndatabase,\nand\nthis\nis\ncausing\ntoo\nmuch\npaging.\n(The\ndiscrimination\nnet\npotentially\ntakes\na\npage\nfault\non\neach\ndiscrimination\nnet\nnode,\nthe\ntables\nin\nthe\nnode,\nand\nthe\nlist\ncontaining\nthe\nsuccessor\nnodes.\nVariables\nin\neither\nthe\nquery\nor\nthe\ndatabase\naggravate\nthis,\nsince\nmore\narcs\nof\nthe\ndiscrimination\nnet\nare\nfollowed.)\nThe\nsolution\nis\nto\ncreate\na\ndata\nindex\nfor\ngoodtoeat\nthat\nstores\ndata\nabout\nfoods\nin\nsome\nspecial\nplace,\nmore\neasily\naccessed\nthan\nthe\ndiscrimination\nnet.\nFor\nexam\nple,\nyou\nmight\njust\nwant\nto\nhave\na\nspecial\nvariable\ncalled\n*knownfoods*\nthat\nis\na\nlist\nof\nall\nthe\nfoods\nthe\nprogram\nknows\nabout.\nYou'd\nlike\njoshua:tell\nto\npush\nnew\nelements\nonto\nthat\nlist;\ndepending\non\nwhether\nor\nnot\nthe\nargument\nto\ngoodtoeat\nis\ninstantiated,\nyou'd\nlike\njoshua:ask\nto\neither\nsearch\nfor\na\nparticular\nfood,\nor\nto\nloop\nover\nthe\nlist\nof\nknown\nfoods.\njoshua:clear\nshould\njust\njoshua::setq\nthe\nvari\nable\nto\njoshua::nil.\n\nMarch 1999\nControlling Data and Rule Indexing\nNote\nthat\noften\nwhen\ncustomizing\nthe\ndata\nindex\nyou\ngive\nup\nsome\ngenerality\nin\nreturn\nfor\nsome\nperformance,\nor\nfor\naccess\nto\na\ndata\nsource\ncontrolled\nby\nsome\nother\nprogram,\nsuch\nas\nan\nexternal\ndatabase\nstored\non,\nfor\nexample,\na\ndepartmen\ntal\ndataprocessing\ncomputer.\nThat's\na\ngood\ntradeoff\nif\nyou're\nnot\nusing\nthe\nfull\ngenerality\nanyway.\nIn\nthis\nexample,\nwe\nnote\nthat\nfood\nnames\nare\nalways\nsymbols,\nso\nwe\nneedn't\ncheck\nfor\nstrings\nand\nsuch,\nand\ncan\nuse\njoshua::eql\nto\ncompare\nthem.\nWe\ntake\nadvantage\nof\nthe\nfact\nthat\nthere\nis\nonly\none\nargument\nto\nthe\ngood\ntoeat\npredicate.\nFurthermore,\nwe\nnever\njoshua:tell\nthings\nlike\n[goodtoeat\n?everything],\nthat\nis,\nwe\ncan\nforbid\nthe\nuse\nof\nvariables\nin\nthe\ndatabase.\nThese\nrestrictions\nsimplify\nthe\nimplementation\nconsiderably,\nto\nthe\npoint\nwhere\nwe\nneed\nonly\nuse\na\nlist\nof\nfood\nnames\nand\ntheir\nassociated\ndatabase\npredications.\n(One\ncould\nuse\na\nhash\ntable,\nal\nso,\nif\nthe\nnumber\nof\nfoods\nwere\nto\nget\nlarge.\nJoshua\nlets\nyou\nuse\nthe\nwhole\nworld\nof\nLisp\nmachine\ndata\nstructures ⎯\nhash\ntables,\nlists,\narrays,\nheaps,\nor\nwhatever.)\nHere\nis\nsome\ncode\nthat\nsets\nup\nthis\ndata\nindex.\nFirst,\nwe\ndefine\nthe\nglobal\nvariable\nthat\nwill\nbe\nthe \"database\"\nfor\nknown\nfoods.\n(defvar\n*knownfoods*\nnil\n\"What's\non\nthe\nmenu.\")\nThen\nwe\ndefine\na\npredicate\nmodel,\ngoodtoeatdatamodel,\nfor\nfoods\nthe\nprogram\nknows\nabout.\nSince\nthe\nmethods\nwill\nbe\nreferring\nto\nthe\nargument\nof\nthe\npredicate\nfrequently,\nwe\nmake\nthe\nargument\nan\ninstance\nvariable\nby\nputting\na\n:required\ninstancevariables\nin\nthe\njoshua:definepredicatemodel\nform\n(as\nwell\nas\na\n:destructureintoinstancevariables\nin\nthe\nlater\njoshua:definepredicate).\n(definepredicatemodel\ngoodtoeatdatamodel\n()\n()\n(:requiredinstancevariables\nfood))\nHere\nis\ncode\nwhich\nimplements\nthe\nstrategy\nwe\nhave\ndiscussed:\nusing\nthe\nvariable\n*knownfoods*\nas\nan\nassociation\nlist\nthat\nholds\nthe\ndata\nand\nthe\npredication,\nthe\njoshua:insert,\njoshua:uninsert,\nand\njoshua:fetch\nmethods\noperate\nusing\nLisp\nlist\nhandling\nfunctions.\n(definepredicatemethod\n(insert\ngoodtoeatdatamodel)\n()\n;;\ntell\nsomething\nabout\nfood\n(when\n(typep\nfood\n'unboundlogicvariable)\n(error\n\"You\ncan't\npossibly\nmean\nthat\neverything\nis\ngood\nto\neat:\n~S\"\nself))\n(let\n((entry\n(assoc\nfood\n*knownfoods*)))\n(if\nentry\n;;\nthis\nthing\nis\nalready\nknown\nto\nbe\ngood\nto\neat.\n(values\n(cdr\nentry)\nnil)\n;;\nnot\nalready\nknown\n\nbuild\na\nnew\nentry\n(let\n((databasepredication\n(copyobjectifnecessary\nself)))\n;;\nthis\nis\na\nnew\none,\nput\nit\non\nthe\nlist\n(push\n(cons\nfood\ndatabasepredication)\n*knownfoods*)\n(values\ndatabasepredication\nt)))))\n\nControlling Data and Rule Indexing\nMarch 1999\n(definepredicatemethod\n(uninsert\ngoodtoeatdatamodel)\n()\n;;remove\nfood\nentry\nfrom\nthe\nlist\n(setq\n*knownfoods*\n(delete\nfood\n*knownfoods*\n:key\n#'car)))\n(definepredicatemethod\n(fetch\ngoodtoeatdatamodel)\n(continuation)\n;;\nretrieve\nsome\ndata\nabout\nknown\nfoods\n(typecase\nfood\n(unboundlogicvariable\n;;\nwants\nto\nsucceed\nonce\nfor\neach\npossible\nfood\n(loop\nfor\n(knownfood\n.\npredication)\nin\n*knownfoods*\ndoing\n(funcall\ncontinuation\npredication)))\n(otherwise\n;;\nwants\nto\nknow\nif\nsomething\nin\nparticular\nis\ngood\nto\neat\n(let\n((entry\n(assoc\nfood\n*knownfoods*)))\n(when\nentry\n(funcall\ncontinuation\n(cdr\nentry)))))))\n(definepredicatemethod\n(clear\ngoodtoeatdatamodel)\n(cleardatabase\nignore)\n;;\nflush\nall\nthe\ndata\nabout\nknown\nfoods\n(when\ncleardatabase\n(setq\n*knownfoods*\nnil)))\n(definepredicate\ngoodtoeat\n(food)\n(goodtoeatdatamodel\ndefaultpredicatemodel)\n:destructureintoinstancevariables)\nThe\nonly\ntricky\nparts\nare\njoshua:insert\nand\njoshua:fetch.\njoshua:insert\nfirst\nchecks\nto\nsee\nthat\nthe\nfood\nargument\nis\nbound.\nThat\nwas\none\nof\nour\nsimplifying\nassumptions.\nThen\nit\nlooks\nto\nsee\nif\nit\nalready\nhas\na\ndatabase\nentry\nfor\nthat\nfood.\nIf\nso,\nthe\ndatabase\npredication\nis\nreturned\nalong\nwith\nthe\njoshua::nil\nindicating\nthat\nthe\nentry\nwas\nalready\nin\nthe\ndatabase.\nIf\nnot,\nthe\npredication\nis\ncopied\nif\nnec\nessary.\nThis\nwill\nensure\nthat\nthe\npredication\nput\nin\nthe\ndatabase\nis\nnot\nephemeral\nin\nany\nway.\nThe\ndatabase\npredication\nis\nreturned,\nalong\nwith\njoshua::t\nto\nindicate\nthat\nthe\ndatabase\npredication\nis\nnewly\ninserted\nin\nthe\ndatabase.\nThe\nmethod\nfor\njoshua:fetch\ndeserves\nsome\nexplanation.\nThe\njoshua::unbound\nlogicvariable\ncheck\nis\nto\ndistinguish\nbetween\n(ask\n[goodtoeat\nsuanlachow\nshow]\n...)\nand\n(ask\n[goodtoeat\n?x]\n...),\nthat\nis,\nwhether\nor\nnot\nthe\nquery\nhas\na\nlogic\nvariable\nin\nits\nargument.\nThe\nformer\nasks\na\nquestion\nlike \"Is\nthis\nparticu\nlar\nthing\ngood\nto\neat?\",\nwhile\nthe\nlatter\nsays \"For\neverything\nyou\ncan\nprove\nis\ngood\nto\neat,\ndo\n...\".\nSo\njoshua:fetch\nmust\ncheck\nto\nsee\nwhat\nsort\nof\nquestion\nis\nbeing\nasked.\nIf\nthe\nquery\nhas\na\nvariable\nfood,\nwe\nmust\nsucceed\nonce\nwith\neach\ngoodto\neat\npredication\nin\nthe\ndatabase.\nIf\nthe\nquery\nis\nabout\na\nspecific\nfood,\nwe\nlook\nit\nup\nin\nthe\ndatabase\nand\nsucceed\nif\nit\nis\nthere.\nHere's\na\nhypothetical\ninteraction\nwith\nthe\nprogram:\n\nMarch 1999\nControlling Data and Rule Indexing\n(clear)\n*knownfoods* →\nNIL\n(tell\n[and\n[goodtoeat\nsuanlachowshow]\n[goodtoeat\nkungpaochiding]\n[goodtoeat\ntachienchiding]\n[goodtoeat\nlycheenuts]])\n*knownfoods* →\n((LYCHEENUTS\n.\n[GOODTOEAT\nLYCHEENUTS])\n(TACHIENCHIDING\n.\n[GOODTOEAT\nTACHIENCHIDING])\n(KUNGPAOCHIDING\n.\n[GOODTOEAT\nKUNGPAOCHIDING])\n(SUANLACHOWSHOW\n.\n[GOODTOEAT\nSUANLACHOWSHOW]))\n(ask\n[goodtoeat\n?]\n#'sayquery\n:dobackwardrules\nnil) →\nI\nlike\nto\neat\nLYCHEENUTS.\nI\nlike\nto\neat\nTACHIENCHIDING.\nI\nlike\nto\neat\nKUNGPAOCHIDING.\nI\nlike\nto\neat\nSUANLACHOWSHOW.\n(clear)\n*knownfoods* →\nNIL\nSo\nby\ngiving\nup\nsome\ngenerality,\nwe\ncan\ngain\nsome\nperformance.\nIt\nis\nnot\nhard\nto\nuse\ndata\nstructures\nother\nthan\nassociation\nlists.\nJust\nreplace\nthe\nlist\ninsertion\nand\nlookup\nfunctions\nwith\nones\nappropriate\nto\nyour\ndata\nstructure.\n7.1.1. Customizing the Data Index Without Storing Predications\nIn\nsome\ncases,\nyou\nwon't\nwant\nto\nstore\nentire\npredication\nobjects\nin\nthe\ndatabase.\nFor\nexample,\nyou\nmight\nbe\nusing\nsome\nexternal\ndatabase\nfor\nsome\npredicates.\nJoshua\nprovides\na\ndifferent\nlevel\nof\nthe\ndata\nprotocol\nfor\ncustomizing\nsuch\napplica\ntions.\nFor\nsuch\napplications,\nyou\nwould\nprovide\njoshua:tell,\njoshua:untell,\njoshua:askdata,\nand\njoshua:clear\nmethods.\nNote\nthat\nsome\ntypes\nof\npredicates\nre\nquire\nthat\ninformation\nbe\nstored\nin\nthe\ndatabase\npredication.\nIn\nparticular,\nthe\nfor\nwardchaining\nrule\nmechanism\nstores\nstate\ninformation\nin\ndatabase\npredications,\nand\nthe\nsystemsupplied\nTMS\nmixin,\nltms:ltmsmixin,\nstores\nits\nsupport\ninforma\ntion\nin\ndatabase\npredications.\nSo\na\nrequirement\nfor\nusing\nthis\ntype\nof\ncustomiza\ntion\non\npredicates\nis\nthat\nthe\npredicates\nbe\nused\nonly\nin\nbackward\nchaining.\n(How\never,\nit\nis\nsometimes\npossible\nto\nuse\nthe\njoshua:expandforwardruletrigger\npro\ntocol\nfunction\nto\nlook\nfor\nthe\ndata\nduring\nforward\nrule\ntriggering.\nSee\nthe\ndictio\nnary\nentry\nfor\nthis\nprotocol\nfunction\nfor\nexamples.)\nFor\nan\nexample,\nwe\nturn\nto\nthe\ngoodtoeat\nexample\nintroduced\nin\nanother\nsection.\n(See\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.)\nWe'll\nmake\nthe\nsame\nassumptions\nthat\nwere\nmade\nin\nthat\nexample ⎯\nthat\nthe\nfoods\nin\nthe\ndatabase\nare\nalways\nsymbols,\nnever\nvariables.\nFor\nsimplicity\nwe'll\nim\npose\na\nfurther\nrestriction ⎯\nthat\nall\nassertions\nmust\nbe\nstated\npositively.\nThis\nmodel\nwill\nnot\nallow\n(tell\n[not\n[goodtoeat\nyushianggiantbeetle]]).\n\nControlling Data and Rule Indexing\nMarch 1999\nThe\njoshua:insert,\njoshua:uninsert,\nand\njoshua:fetch\nmethods\nof\nthat\nprevious\nexample\ndealt\nwith\ndatabase\npredications.\nSo\nfor\nthis\ntype\nof\ncustomization,\nwe'll\nmove\nto\nthe\nnext\nhigher\nlevel\nof\nthe\nprotocol ⎯\njoshua:tell,\njoshua:untell,\nand\njoshua:askdata.\nAnother\nway\nto\nthink\nabout\nwhy\nwe\nhave\nto\nmove\nup\na\nlevel\nis\nto\nnotice\nthat\njoshua:tell\nand\njoshua:untell\nwill\ntry\nto\njoshua:justify\nand\njoshua:unjustify,\nwhich\nneed\ndatabase\npredications.\nHere\nis\nthe\nnew\ncode:\n(definepredicatemethod\n(tell\ngoodtoeatdatamodel)\n(truthvalue\njustification)\n(declare\n(ignore\njustification))\n;;\ntell\nsomething\nabout\nfood\n(unless\n(eql\ntruthvalue\n*true*)\n(error\n\"Only\npositive\nassertions\nare\nallowed\nfor\n~S\"\nself))\n(when\n(typep\nfood\n'unboundlogicvariable)\n(error\n\"You\ncan't\npossibly\nmean\nthat\neverything\nis\ngood\nto\neat:\n~S\"\nself))\n(pushnew\nfood\n*knownfoods*))\n(definepredicatemethod\n(untell\ngoodtoeatdatamodel)\n()\n;;\nremove\nfood\nname\nfrom\nthe\nlist\n(setq\n*knownfoods*\n(delete\nfood\n*knownfoods*)))\n(definepredicatemethod\n(askdata\ngoodtoeatdatamodel)\n(truthvalue\ncontinuation)\n;;\ngiven\nthe\ncontents\nof\n*knownfoods*,\nunify\nagainst\nthe\nquery\n;;\nand\ncall\nthe\ncontinuation\n(unless\n(eql\ntruthvalue\n*true*)\n(signal\n'ji:modelcanonlyhandlepositivequeries\n:query\nself\n:model\n'goodtoeatdatamodel))\n(typecase\nfood\n(unboundlogicvariable\n;;\nwants\nto\nsucceed\nonce\nfor\neach\npossible\nfood\n(loop\nfor\ndatabasefood\nin\n*knownfoods*\ndoing\n(withunification\n;;\nbind\nthe\nvariable\nin\nthe\nquery\nand\ngo\non\n(unify\nfood\ndatabasefood)\n(stacklet\n((support\n'(,self\n,truthvalue\ngoodtoeatdatamodel)))\n(funcall\ncontinuation\nsupport)))))\n(otherwise\n;;\nwants\nto\nknow\nif\nsomething\nin\nparticular\nis\ngood\nto\neat\n(when\n(member\nfood\n*knownfoods*)\n(stacklet\n((support\n'(,self\n,truthvalue\ngoodtoeatdatamodel)))\n(funcall\ncontinuation\nsupport))))))\n\nMarch 1999\nControlling Data and Rule Indexing\n(definepredicatemethod\n(clear\ngoodtoeatdatamodel)\n(cleardatabase\nignore)\n;;\nflush\nall\nthe\ndata\nabout\nknown\nfoods\n(when\ncleardatabase\n(setq\n*knownfoods*\nnil)))\n(definepredicate\ngoodtoeat\n(food)\n(goodtoeatdatamodel\ndefaultpredicatemodel)\n:destructureintoinstancevariables)\nThe\njoshua:tell\nmethod\nis\nvery\nstraightforward ⎯\nafter\nchecking\nour\nassumptions,\nit\nmakes\nsure\nthe\nfood\nis\non\nthe\nlist.\nThe\njoshua:untell\nand\njoshua:clear\nmethods\nare\nalmost\nidentical\nto\nour\nprevious\nexample.\nThe\njoshua:askdata\nmethod\nhas\nto\ndo\nthe\nsame\npositiveness\ncheck\nthat\njoshua:tell\ndid,\nbut\njoshua:askdata\nshould\nsignal\nthe\nji:modelcanonlyhandle\npositivequeries\ncondition\nif\nthe\nquery\nisn't\npositive.\njoshua:askdata\ndoes\nthe\nsame\njoshua::unboundlogicvariable\ntest\nthat\njoshua:fetch\nin\nthe\nprevious\nexam\nple\ndid.\nWhen\nthe\nargument\nis\nunbound,\njoshua:askdata\nmust\nbind\nit\nbefore\ncall\ning\nthe\ncontinuation.\nIn\nthis\ncase,\nthe\nderivation\nprovided\nby\nthe\njoshua:askdata\nmethod\nis\njust\nthe\nsymbol\ngoodtoeatdatamodel,\nto\ntell\nprograms\nwhat\nflavor\nprovided\nthis\nanswer.\nFrom\nthe\npoint\nof\nview\nof\nthe\nuser\nof\njoshua:tell\nand\njoshua:ask,\nthe\nbehavior\nof\nthe\ncustomized\nsystem\nis\njust\nthe\nsame\nas\nbefore,\nbut\nthis\nversion\nof\nthe\nprogram\ndoes\nnot\ntouch\nthe\ndiscrimination\nnet.\nThe\ninformation\nthat\nused\nto\ngo\ninto\nthe\ndiscrimination\nnet\nis\nnow\nstored\nin\na\ndifferent\nplace,\nnamely\nthe\nvalue\nof\n*knownfoods*.\nNote\nin\nthe\nfollowing\nexamples\nthat\njoshua:tell\nand\njoshua:ask\nact\nexactly\nas\nbefore,\nbut\nthe\nvalue\nof\n*knownfoods*\nchanges.\n(clear)\n*knownfoods* →\nNIL\n(tell\n[and\n[goodtoeat\nsuanlachowshow]\n[goodtoeat\nkungpaochiding]\n[goodtoeat\ntachienchiding]\n[goodtoeat\nlycheenuts]])\n*knownfoods* →\n(LYCHEENUTS\nTACHIENCHIDING\nKUNGPAOCHIDING\nSUANLACHOWSHOW)\n(ask\n[goodtoeat\n?]\n#'sayquery\n:dobackwardrules\nnil) →\nI\nlike\nto\neat\nLYCHEENUTS.\nI\nlike\nto\neat\nTACHIENCHIDING.\nI\nlike\nto\neat\nKUNGPAOCHIDING.\nI\nlike\nto\neat\nSUANLACHOWSHOW.\nIn\nthis\ncase\nas\nbefore,\nother\ndata\nstructures\ncould\neasily\nbe\nsubstituted\nfor\nthe\nlist.\n\nControlling Data and Rule Indexing\nMarch 1999\nIf\nthe\ndata\nstructure\nwere\nmade\njust\nslightly\nmore\ncomplicated,\nnegative\nassertions\ncould\nbe\nhandled.\njoshua:tell\njust\nneeds\nto\nremember\nthe\ncurrent\ntruth\nvalue,\nand\njoshua:askdata\nneeds\nto\nsucceed\nonly\non\nfoods\nwhich\nhave\nthe\nsame\ndatabase\ntruth\nvalue\nas\nthe\nquery.\n7.2. Customizing the Rule Index\nQuick\nReference:\nFor\na\ndescription\nof\nthe\ndefault\nruleindexing\nimplementation,\nsee\nthe\nsection \"The\nJoshua\nRule\nFacilities \",\npage\n23.\nThis\nsection\ndisusses\nthe\nprocess\nof\nchanging\nthe\nway\nthe\nsystem\nstores,\nremoves,\nand\nlooks\nup\nrule\ntrig\ngers.\nA\ntrigger\nis\nan\nobject\nthat\ncan\nbe\nused\nto\ninvoke\na\nparticular\nrule\nor\nquestion.\nEx\nactly\nwhat\nthe\ntrigger\nobject\nis\ndepends\non\nthe\nrule\ntype.\nFor\na\nforward\nrule,\nthe\ntriggers\nare\nRete\nmatch\nnodes,\nand \"invoke\"\nmeans\na\ncall\nto\nsome\nRete\nnetwork\ncode\nto\nstart\nthe\nmatch\nprocess.\nFor\na\nbackward\nrule,\nthe\n(unique)\ntrigger\nis\na\nfunction\nthat\ndoes\nboth\nthe\nmatching\nand\nthe\nrulebody\nexecution.\nFor\nquestions,\na\ntrigger\nis\njust\nthe\nname\nof\na\nfunction\nto\ncall;\nif\ncalled\nwith\nreasonable\narguments,\nit\nwill\nask\nits\nquestion.\nThe\ndefault\nimplementation\nstores\ntrigger\nobjects\nin\na\ndis\ncrimination\nnet.\nThe\nimpetus\nfor\ncustomizing\nrule\nindexing\nis\nthat\nmany\nsystems\nspend\nmuch\nof\ntheir\ntime\nlooking\nfor\napplicable\nrules\nand\nquestions,\nas\nopposed\nto\nexecuting\nthem.\nFor\nexample,\nif\nyou\njoshua:tell\nthe\nsystem\na\nfact,\nin\nmany\ncases\nmost\nof\nthe\nresulting\nruntime\nis\nspent\nlooking\nfor\nforward\nrules,\nrather\nthan\nexecuting\nthem.\nIf\nthis\nis\nthe\ncase,\na\ncustomzied\nruletrigger\nindex\ncan\nhelp.\nThere\nare\nfour\noperations\nyou\ncan\ndo\nwith\nrule\ntriggers,\nnamely,\nadding\nnew\ntrig\ngers,\ndeleting\nexisting\ntriggers,\nlocating\nthe\nplace\nwhich\na\ntrigger\nshould\nbe\nstored\nin\n(or\nremoved\nfrom),\niterating\nover\ntriggers\nto\nfind\nrules\nor\nquestions\nthat\ncan\nexecute.\nIf\nyou\nprovide\na\nconsistent\nalternative\nimplementation\nof\nthe\nprotocol\nfunctions\nthat\ndo\nthese\noperations,\nyou've\nchanged\nthe\nway\nyour\nprogram\nlooks\nfor\nrules,\nand\nperhaps\nachieved\nimproved\nperformance.\nLet's\nconsider\nour\nfood\nexample\nagain,\nnamely\nthe\ngoodtoeat\nexample\nused\nin\nthe\nsection\non\ncustomized\ndata\nindexing.\nsee\nthe\nsection \"Customizing\nthe\nData\nIn\ndex\",\npage\n81.\nIn\nbrief,\nthis\nexample\nidentifies\nfoods\nthat\nare\ngood\nto\neat,\nso\nthat\nthe\nprogram's\nsubject\nknows\nwhat\nfoods\nto\nlook\nfor\nwhen\nit\ngets\nhungry.\nThere\nmight\nbe\na\nnum\nber\nof\nbackwardchaining\nrules\nin\nthe\nsystem\nthat\nhave\ntriggers\nresembling\n[good\ntoeat\n?x]\nor\n[goodtoeat\nsuanlachowshow].\nThe\nproblem\nis\nthat\nthe\ndefault\nway\nof\nstoring\ntriggers\ngoes\nthrough\na\nvery\ngeneral\ndiscrimination\nnet,\nwhereas\nin\nthis\ncase,\nthere\nis\nonly\none\ninteresting\ndatum,\nnamely\nthe\nargument\nto\ngoodtoeat.\nWe\nwant\nto\nproduce\na\nsystem\nthat,\nwhen\nlooking\nfor\nbackward\nrules\nto\nsolve\ngoodtoeat\ngoals,\nwill\ndiscriminate\nonly\non\nthat\nargument.\nHere's\nan\nexample\nof\nsuch\nan\nimplementation\nfor\nbackward\nrules\n(to\nkeep\nthings\nsimple).\nFirst,\nwe\ndefine\na\nstructure\nin\nwhich\nto\nstore\nrule\ntriggers.\nSince\nthe\ntrig\nger\npattern\ncontains\neither\na\nlogic\nvariable\nor\na\nsymbol,\na\nhash\ntable\nfor\nsymbols\n\nMarch 1999\nControlling Data and Rule Indexing\nand\na\nseparate\nlist\nfor\nthe\nvariable\ncase\nwill\ndo.\nThat\nis,\nwe\nhave\none\nplace\nto\nstore\ntriggers\nlike\n[goodtoeat\nsuanlachowshow],\nand\nanother\nfor\nthings\nlike\n[goodtoeat\n?x].\n(defvar\n*goodtoeatconstanttriggers*\n(makehashtable\n:size\n10))\n(defvar\n*goodtoeatvariabletriggers*\nnil)\nNext,\nwe\nwant\njoshua:addbackwardruletrigger,\njoshua:deletebackwardrule\ntrigger,\njoshua:locatebackwardruletrigger,\nand\njoshua:mapoverbackward\nruletriggers\nto\nuse\nthese\ndata\nstructures\ninstead\nof\nthe\ndefaults.\nWe\nneed\nnot\nredefine\njoshua:addbackwardruletrigger\nand\njoshua:delete\nbackwardruletrigger,\nbecause\nboth\nuse\na\nstorage\nlocation\nprovided\nby\njoshua:locatebackwardruletrigger.\nSo\nit\nis\nsufficient\nto\ndefine\na\nmethod\nfor\njoshua:locatebackwardruletrigger\nand\njoshua:mapoverbackwardrule\ntriggers.\nWe\nbegin\nby\ndefining\nour\ngoodtoeat\npredicate\nmodel.\n(definepredicatemodel\ngoodtoeattriggermodel\n()\n()\n(:requiredinstancevariables\nfood))\nNext\nwe\ndefine\nthe\njoshua:locatebackwardruletrigger\nmethod.\nThe\ncode\nfor\nthis\nconsiders\ntwo\ncases.\n-\nIf\nthe\npredication\npassed\nto\njoshua:locatebackwardruletrigger\ncontains\na\nlog\nic\nvariable,\nthe\nmethod\ncalls\nthe\ncontinuation\non\nthe\n*goodtoeatvariable\ntriggers*\nlist.\nIf\nthe\ncontinuation\nchanged\nthe\nlist\nof\ntriggers,\nthe\nmethod\nup\ndates\nit.\n-\nIf\nthe\npredication\npassed\nto\njoshua:locatebackwardruletrigger\ncontains\na\nconstant,\nthe\nmethod\ncalls\nthe\ncontinuation\non\nthe\nappropriate\nelements\nof\nthe\n*goodtoeatconstanttriggers*\ntable.\nIf\nthe\ncontinuation\nchanged\nthe\nlist\nof\ntriggers,\nthe\nmethod\nupdates\nthe\ntable.\n\nControlling Data and Rule Indexing\nMarch 1999\n(definepredicatemethod\n(locatebackwardruletrigger\ngoodtoeatbackwardtriggermodel)\n(truthvalue\ncontinuation\n&optional\nignore)\n;;\ncall\ncontinuation\non\nlist\nof\ntriggers\nfor\nbackward\nrules\nthat\n;;\nsolve\ngoodtoeat\ngoals\n(typecase\nfood\n(unboundlogicvariable\n;;\nthe\nargument\nis\nan\nunbound\nlogic\nvariable\n(multiplevaluebind\n(newtriggers\ntriggerschangedp\ncanonicaltrigger)\n(funcall\ncontinuation\n*goodtoeatbackwardvariabletriggers*)\n(when\ntriggerschangedp\n(setq\n*goodtoeatbackwardvariabletriggers*\nnewtriggers))\ncanonicaltrigger))\n(otherwise\n;;\nthe\nargument\nis\na\nconstant\n(let\n((listoftriggers\n(gethash\nfood\n*goodtoeatbackwardconstanttriggers*)))\n(multiplevaluebind\n(newtriggers\ntriggerschangedp\ncanonicaltrigger)\n(funcall\ncontinuation\nlistoftriggers)\n(when\ntriggerschangedp\n(if\n(null\nnewtriggers)\n;;\nif\nthey're\nall\nundefined,\nnuke\nthis\nentry\n(remhash\nfood\n*goodtoeatbackwardconstanttriggers*)\n(setf\n(gethash\nfood\n*goodtoeatbackwardconstanttriggers*)\nnewtriggers)))\ncanonicaltrigger)))))\njoshua:mapoverbackwardruletriggers\nmust\napply\nthe\ncontinuation\nto\nall\nappli\ncable\nbackward\nrule\ntriggers\nthat\nsolve\ngoodtoeat\ngoals.\nOur\nmethod\nfirst\nmaps\nover\nthe\nvariable\ntrigger\nlist,\nsince\nall\nvariable\ntriggers\nmust\nbe\nprobed\nregardless\nof\nwhether\nthe\ngoal\nhas\na\nlogic\nvariable\nor\na\nconstant\nin\nit.\nIf\nthe\ngoal\nhas\na\nlogic\nvariable\nin\nit\n(for\nexample\n(ask\n[goodtoeat\n?what]...\n)),\nthe\nmethod\nmust\nalso\napply\nthe\ncontinuation\nto\nall\nthe\nvariable\ntriggers,\nsince\nany\nconstant\nmatches\nthe\nlogic\nvariable\nin\nthe\ngoal.\nIf\nthe\ngoal\nhas\na\nconstant\nin\nit\n(for\nexample\n(ask\n[goodtoeat\nhoney]\n...)),\njoshua:mapoverbackwardruletriggers\nonly\nneeds\nto\ncall\nthe\ncontinuation\non\ntrigger\nobjects\nwith\nmatching\nconstants.\n\nMarch 1999\nControlling Data and Rule Indexing\n(definepredicatemethod\n(mapoverbackwardruletriggers\ngoodtoeatbackwardtriggermodel)\n(continuation)\n;;\nmap\ncontinuation\nover\ntriggers\nof\nbackward\nrules\nthat\n;;\nsolve\ngoodtoeat\ngoals\n;;\nfirst\ndo\nall\nvariable\ntriggers\n(mapc\ncontinuation\n*goodtoeatbackwardvariabletriggers*)\n(typecase\nfood\n(unboundlogicvariable\n;;\nfood\nis\nunbound,\nso\nhave\nto\nmap\nover\nall\nremaining\ntriggers\n(maphash\n#'(lambda\n(key\nvalue)\n(ignore\nkey)\n(mapc\ncontinuation\nvalue))\n*goodtoeatbackwardconstanttriggers*))\n(otherwise\n;;\nfood\nis\nbound,\nso\nmap\nover\njust\nthose\ntriggers\nthat\nwill\nmatch\n(mapc\ncontinuation\n(gethash\nfood\n*goodtoeatbackwardconstanttriggers*)))))\nThe\nlast\nstep\nis\ndefining\na\ngoodtoeat\npredicate.\n(definepredicate\ngoodtoeat\n(food)\n(goodtoeattriggermodel\ngoodtoeatdatamodel\ndefaultpredicatemodel)\n:destructureintoinstancevariables)\nWith\nthese\ndefinitions\nin\nplace,\nany\nbackwardchaining\nrules\nthat\ntrigger\non\ngood\ntoeat\nwill\nstore\ntheir\ntriggers\nin\neither\n*goodtoeatvariabletriggers*\nor\n*goodtoeatconstanttriggers*.\nPresumably,\nsearching\nthese\ndata\nstructures\nis\nfaster\nthan\nthe\ngeneralpurpose\nmethod\nJoshua\nprovides\nby\ndefault.\nHere\nare\nsome\nexamples.\nAssume\nthe\nfollowing\n(admittedly\nsilly)\nrule:\n(defrule\nnottofuud\n(:backward)\nIF\n(progn\n(format\nt\n\"~&NotTofuud\nrule:\n?FOOD →\n~S\"\n?food)\nt)\nTHEN\n[goodtoeat\n?food])\nBefore\nwe\ncompile\nthis\nrule,\nthe\nlist\n*goodtoeatvariabletriggers*\nis\njoshua::nil.\nHowever,\nafter\nthe\nrule\nis\ncompiled,\nthis\nlist\nis\nbound\nto\nsomething\nthat\nlooks\nlike:\n(#S(JI::BACKWARDTRIGGER\n:TRUEENTRIES\n((NOTTOFUUD\nNIL\n[GOODTOEAT\n#<UNBOUNDLOGICVARIABLE\n?FOOD\n51037342>]))\n:FALSEENTRIES\nNIL))(#<BACKWARDTRIGGER\n14702210>)\nthat\nis,\nit\nis\na\nlist\nof\nbackward\nrule\ntriggers\nthat\ntrigger\non\ngoodtoeat\nwith\na\nlogic\nvariable\nargument.\nFor\nrules\nthat\ntrigger\non\ngoodtoeat\nwith\na\nconstant\nargument,\nwe\nuse\nan\njoshua::eql\nhash\ntable\n(it\nassumes\nthe\narguments\nto\ngoodtoeat\ncan\nbe\ncompared\nwith\njoshua::eql).\nConsider\nthe\nfollowing\n(also\nsilly)\nrule:\n(defrule\ntofuud\n(:backward)\nIF\n(progn\n(format\nt\n\"~&Tofuud\nrule.\")\nt)\nTHEN\n[goodtoeat\ntofu])\n\nControlling Data and Rule Indexing\nMarch 1999\nBefore\ncompilation\nof\nthis\nrule,\n*goodtoeatconstanttriggers*\nis\nan\nempty\nta\nble,\nthat\nprints\nsomething\nlike\nthis:\n#<Table\n0/0\n51004361>\nAfter\nwe\ncompile\nthe\nrule,\nhowever,\nthe\ntable\ncontains\none\nentry,\nkeyed\non\nthe\nsymbol\ntofu:\n(describe\n*goodtoeatconstanttriggers*)\n#<Table\n1/1\n51004361>\nis\na\ntable\nwith\nentry.\nTest\nfunction\nfor\ncomparing\nkeys\n=\nEQL,\nhash\nfunction\n=\nCLI::XEQLHASH\nDo\nyou\nwant\nto\nsee\nthe\ncontents\nof\nthe\nhash\ntable?\n(Y\nor\nN)\nYes.\nTOFU →\n(#S(JI::BACKWARDTRIGGER\n:TRUEENTRIES\n((TOFUUD\nNIL\n[GOODTOEAT\nTOFU]))\n:FALSEENTRIES\nNIL))\n#<Table\n1/1\n51004361>\nConsider\nhow\nthe\nfollowing\nquery\nmanages\nto\noperate:\n(ask\n[goodtoeat\n?what]\n#'sayquery)\nNotTofuud\nrule:\n?FOOD →\n#<UNBOUNDLOGICVARIABLE\n?WHAT\n50474332>\n#<UNBOUNDLOGICVARIABLE\n?WHAT\n50474332>\nis\ngood\nto\neat.\nTofuud\nrule.\nTOFU\nis\ngood\nto\neat.\nNIL\nIn\nprocessing\nthis\nquery,\nJoshua\navoids\nthe\nconventional\nmethod\nof\nlooking\nfor\nrule\ntriggers,\nand\ninstead\nlooks\nin\nthe\nlist\n*goodtoeatvariabletriggers*\nand\nprobes\nthe\nhash\ntable\n*goodtoeatconstanttriggers*.\nProper\ndesign\nof\nthe\ndata\nstructures\nthat\nyour\nprogram\nuses\nfor\nlooking\nup\nrules\ncan\ndrastically\naffect\nthe\nprogram's\nperformance.\nIn\nthis\nexample,\nwe\nnoted\nthat\ngoodtoeat\nhad\nonly\none\nargument\nthat\nwas\neither\na\nsymbol\nor\na\nlogic\nvariable.\nWe\nwere\nable\nto\nexploit\nthis\nrestriction\nto\nimplement\na\nmore\nefficient\nway\nto\nlook\nup\nrule\ntriggers\nthan\ncould\nbe\nprovided\nin\na\ngeneralpurpose\nimplementation.\nThere\nis\na\ncompletely\nanalogous\ngroup\nof\nmethods\nfor\na\nforward\nchaining\nimple\nmentation.\n7.3. Customizing the Rule Compiler\nQuick\nReference:\nFor\na\ndescription\nof\nthe\ndefault\nimplementation,\nsee\nthe\nsection\n\"The\nJoshua\nRule\nCompiler\",\npage\n26.\nThe\nrule\ncompiler\ncan\nbe\ncustomized\nin\ntwo\nways.\nFirst,\nthe\ntrigger\npatterns\nof\na\nforward\nrule\nand\nthe\nactions\nof\na\nbackward\nrule\n(i.e.\nthe\nIfpart\nof\na\nrule)\nmay\nbe\nexpanded\ninto\nother\nstructures\nin\na\nprocess\nsimilar\nto\nmacro\nexpansion.\nThis\nal\nlows\nthe\nIfPart\nof\nthe\nrule\nto\npresent\na\ndeclarative\nappearance\neven\nwhen\nit\nactu\nally\ntakes\nprocedural\nactions.\nSecondly,\nthe\nrule\ncompiler\ncan\ngenerate\nspecialized\nor\noptimized\npattern\nmatchers\nthat\ntake\nadvantage\nof\nthe\ntrigger\nindexing\ntech\nniques\nused\nfor\nthe\npatterns.\n\nMarch 1999\nControlling Data and Rule Indexing\nThe\nfirst\nof\nthese\nkinds\nof\ncustomizations\nis\ncontrolled\nby\nthe\njoshua:expand\nforwardruletrigger\nand\nthe\njoshua:expandbackwardruleaction\nprotocol\nmeth\nods,\nthe\nsecond\ntype\nis\ncontrolled\nby\nthe\njoshua:writeforwardrulefullmatcher,\njoshua:writeforwardrulesemimatcher,\njoshua:positionsforwardrulematcher\ncanskip\nand\nthe\njoshua:writebackwardrulematcher\nprotocol\nmethods.\nCustomizing the Expansion of a Forward Rule\nThe\nIfpart\nof\na\nforwardchaining\nrule\nis\neventually\ntranslated\ninto\na\nrete\nnetwork,See\nthe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNetwork\",\npage\n27.\nHow\nthis\ntranslation\nis\nconducted\nis\ncontrolled\nby\nthe\njoshua::expandforwardrule\ntriggers\nprotocol\nfunction.\nThis\nsection\nwill\nexplain\nwhat\nthis\nprotocol\nfunction\ndoes\nand\ngive\nexamples\nof\nhow\nits\ncapabilities\ncan\nbe\nused\nto\ngain\nadvanced\ncapa\nbilities\nin\nforwardchaining\nrules.\nThe Contract of the Generic Function joshua:expand-forward-rule-trigger\njoshua:expandforwardruletrigger\nis\ncalled\nonce\nfor\neach\npredication\nincluded\nin\nthe\ntrigger\nof\nthe\nrule.\nIts\njob\nis\nto\nreturn\na\nlist\nstructure\nthat\nexplains\nto\nthe\nrule\ncompiler\nhow\nto\nprocess\nthe\npattern.\nFor\nexample\nin\nthe\nfollowing\nrule:\n(defrule\nfoobar\n(:forward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\njoshua:expandforwardruletrigger\nwill\nbe\ncalled\nthree\ntimes\n(once\nfor\nthe\nentire\njoshua::and\nand\nthen\nonce\nfor\neach\npredication\ninside\nthe\njoshua::and).\njoshua:expandforwardruletrigger\ntakes\nfour\narguments:\nthe\npattern\nto\nexpand,\nthe\nname\nof\nits\n:support\nvariable\n(or\nnil),\nits\ntruthvalue\nand\nthe\nentire\nIfpart\n(which\ncan\nbe\ntreated\nas\nthe \"context\"\nof\nthe\npattern).\nThus,\nthe\narguments\npassed\nin\nfor\nthese\nthree\ncalls\nwil\nbe:\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n[not\n[foo2\n?y\n?z]]\n:support\n?f2]\nnil\n*true*\nand\n<the\nwhole\nIfpart>\n[foo1\n?x\n?y]\n?f1\nand\n*true*\n<the\nwhole\nIfpart>\n[foo2\n?y\n?z]\n?f2\n*false*\n<the\nwhole\nIfpart>\nNote\nthat\nalthough\nwe\nhave\ndisplayed\nthe\npatterns\nas\nif\nthey\nwere\npredications,\nthis\nis\nnot\nactually\ntrue.\njoshua:expandforwardruletrigger\nruns\nat\ncompile\ntime\nand\nmanipulates\na\nsourcecode\nrepresentation\nof\npredications\nand\nlogicvariables,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\njoshua:expandforwardruletrigger\nshould\nreturn\na\nlist\nstructure\n(called\na\ntrig\ngerdescription)\nwhich\nmust\nbe\none\nof\nthe\nfollowing\nforms:\n1.\n(:match\npattern\nname\ntruthvalue).\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nshould\nbe\ntreated\nsimply\nas\na\npattern\nto\nbe\nmatched.\n\nControlling Data and Rule Indexing\nMarch 1999\n-\npattern\nis\nthe\npredication\nthat\nrepresents\nthe\npattern\nto\nbe\nmatched.\n-\nname\nis\nthe\nlogic\nvariable\nwhich\nthe\nrule\ntriggering\nmechanisms\nshould\nbind\nto\nthe\npredication\nthat\nmatched\nthis\ntrigger.\n-\ntruthvalue\n(which\nin\nthe\ncurrent\nimplementation\nshould\nbe\neither\njoshua:*true*\nor\njoshua:*false*)\nis\nthe\ntruth\nvalue\nwhich\nthe\nmatching\npredication\nis\nrequired\nto\nhave\nin\norder\nto\ntrigger\nthe\nrule.\n2.\n(:and\ntriggerdescriptions)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\nconjunction\nof\npatterns\nall\nof\nwhich\nmust\nbe\nmatched\nto\ntrigger\nthe\nrule.\nThe\nsystemprovided\ndefault\nmethod\nfor\nAND\npredications\nreturns\nthis\ntype\nof\ntrigger\ndescription.\nThe\nsecond\nelement\nof\nthe\ntrigger\ndescription\nmust\nbe\na\nlist\nof\ntrigger\ndescriptions,\ni.e.\nlists\nre\nturned\nby\ncalling\njoshua:expandforwardruletrigger.\n3.\n(:or\ntriggerdescriptions)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\ndisjunction\nof\npatterns\nany\nof\nwhich\nmust\nbe\nmatched\nto\ntrigger\nthe\nrule.\nThe\nsystem\nprovided\ndefault\nmethod\nfor\nOR\npredications\nreturns\nthis\ntype\nof\ntrigger\ndescription.\nThe\nsecond\nelement\nof\nthe\ntrigger\ndescription\nmust\nbe\na\nlist\nof\ntrigger\ndescriptions,\ni.e.\nlists\nre\nturned\nby\ncalling\njoshua:expandforwardruletrigger.\n4.\n(:procedure\nlispexpression\nname)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nis\nnot\na\npattern\nto\nbe\nmatched,\nbut\nrather\na\nLisp\nexpression\nthat\nappears\nin\nthe\ntrigger\nposition.\nSuch\nexpressions\nare\nexe\ncuted\nonce\nall\nproceeding\npatterns\nin\nthe\nrule\nhave\nbeen\nmatched.\nThe\nex\npression\ncan\nact\nas\na\nfilter\nby\nreturning\neither\njoshua::t\nor\njoshua::nil.\njoshua::t\nindicates\nsuccess;\nin\nthis\ncase\nthe\nbindings\naccumulated\nup\nto\nthis\npoint\nare\nconsidered\nacceptable\nand\nrule\ntriggering\ncontinues.\njoshua::nil\nin\ndicates\nfailure;\nin\nthis\ncase\nthe\nbindings\nare\nconsidered\nunacceptable.\nThe\nexpression\ncan\nalso\nact\nas\na\ngenerator\nin\nwhich\nit\nproduces\nseveral\nnew\nsets\nof\nbindings\neach\nof\nwhich\nis\nconsistent\nwith\nthe\nbindings\nthat\nwere\nin\nef\nfect\nwhen\nthe\nrule\nwas\ntriggered.\nTo\ndo\nthis\nit\nshould\nbind\nwhatever\nlogic\nvariables\nit\nwants\nto\nand\nthen\ncall\njoshua:succeed.\njoshua:succeed\ntakes\na\nrestargument;\nthe\nrule\ncompiler\nwill\narrange\nfor\nthis\nvalues\npassed\nto\njoshua:succeed\nto\nbe\nbound\nto\nthe\nlogicvariable\nwhich\nis\nthe\nthird\nelement\nof\nthe\ntrigger\ndescription.\nSee\nthe\nfunction\njoshua:succeed,\npage\n232.\n5.\n(:ignore)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nit\nshould\nig\nnore\nthis\ntrigger.\nThe\nare\ntwo\nreasons\nfor\nusing\nthis\ntype\nof\ntrigger\ndescrip\ntion.\nThe\nfirst\nis\nto\nallow\na\nrule\nto\nhave\npatterns\nincluded\nin\nit\nsimply\nfor\nthe\nsake\nof\nclarity.\nThe\nsecond\nis\nto\ninclude\npatterns\nonly\nto\nspecify\ncontext.\n\nMarch 1999\nControlling Data and Rule Indexing\nUsing joshua:expand-forward-rule-trigger\nA\nProcedural\ntrigger\ndescription\ncan\nbe\nused\nto\nimplement\na\nmixedchaining\nstrat\negy\nin\nwhich\na\nforwardrule\ntrigger\ninvokes\nbackward\nchaining\ncapabilities.\nThis\nwould\nbe\nuseful\nif\nit\nis\nknown\nthat\na\nparticular\ntype\nof\npredication\nis\nnever\nactual\nly\nasserted\nbut\nis\nonly\ndeduced\nby\nbackward\nchaining\nrules.\nThe\nfollowing\nrule\nis\nhow\none\nwould\nimplement\nthis\nmixedchaining\nstrategy\nif\nit\nwere\nknown\nthat\nFOO2\npredications\nare\nonly\ndeduced\nby\nbackward\nchaining\nrules:\n(definepredicate\nfoo1\n(a\nb))\n(definepredicate\nfoo2\n(a\nb))\n(definepredicate\nbackwardfoo2\n(a\nb))\n(definepredicate\nfoo3\n(a\nb\nc))\n(defrule\nfoo\n(:forward)\nIf\n[and\n[foo1\n?a\n?b]\n(ask\n[foo2\n?b\n?c]\n#'(lambda\n(ignore)\n(succeed)))]\nThen\n[foo3\n?a\n?b\n?c])\n(defrule\nfoo2backward\n(:backward)\nIf\n[backwardfoo2\n?b\n?a]\nThen\n[foo2\n?a\n?b])\nThe\nstructure\nof\nthe\nrete\nnetwork\nfor\nthis\nrule\nis\na\nsimple\nlinear\nchain\nconsisting\nof\na\nmatch\nnode\nfollowed\nby\na\nprocedural\nnode\n(acting\nas\na\ngenerator)\nas\nshown\nin\nfigure\n40.\nFigure\n30.\nGraph\nof\nthe\nMixed\nChaining\nRule\nFoo\nIf\nwe\nexecute\nthe\nfollowing\ntwo\njoshua:tell's\nthen\nthe\nrule\nwill\nbe\ntriggered\nby\nthe\nsecond\nstatement\nwhich\nmatches\nthe\nfirst\npattern\nof\nthe\nrule.\nExecution\nthen\npro\nceeds\nto\nthe\nprocedural\nnode\nwhich\nchains\nbackward\nusing\nthe\nrule\nFOO2BACKWARD.\nThis\nis\nshown\nin\nfigure\n41.\nHowever\nthis\nrule\ncan\nbe\nmade\nmore\ndeclarative\nappearing\nby\nusing\n\nControlling Data and Rule Indexing\nMarch 1999\nFigure\n31.\nTrace\nof\nThe\nMixed\nChaining\nRule\nFoo\njoshua:expandforwardruletrigger\nas\nfollows:\n(definepredicatemodel\nmixedchainingmixin\n()\n())\n(definepredicatemethod\n(expandforwardruletrigger\nmixedchainingmixin)\n(name\ntruthvalue\nignore)\n(let\n((query\n(if\n(eql\ntruthvalue\n*true*)\nself\n'[not\n,self))))\n'(:procedure\n(prog1\nnil\n(ask\n,query\n#'(lambda\n(ignore)\n(succeed))))\n,name)))\n(definepredicate\nfoo2\n(a\nb)\n(mixedchainingmixin\ndefaultpredicatemodel))\n(defrule\nfoo\n(:forward)\nIf\n[and\n[foo1\n?a\n?b]\n[foo2\n?b\n?c]]\nThen\n[foo3\n?a\n?b\n?c])\n(clear)\n(tell\n[backwardfoo2\n2])\n(tell\n[foo1\n2])\nNow\nthe\nrule\nFOO\nappears\nto\nsimply\nmatch\ntwo\npatterns.\nHowever,\nit\nactually\ncom\npiles\ninto\nexactly\nthe\nsame\nrete\nnetwork\nas\nshown\nin\nfigure\n30.\nA More Advanced Version of Mixed-chaining in joshua:expand-forward-rule-trigger\nSometimes\nusing\njoshua:ask\nin\nthe\ntrigger\npart\nof\na\nrule\nmay\nnot\nbe\nthe\nappropri\nate\nway\nto\nachieve\na\nmixed\nchaining\nstrategy.\nOne\nreason,\nis\nthat\njoshua:ask\nqueries\nthe\nworld\nfor\nfacts\nthat\nare\ndeducible\nat\nthat\nmoment.\nIf\na\nnew\nfact\nar\nrives\nlater\nthat\nwould\nhave\nmade\nthe\ngoal\ndeducible,\njoshua:ask\nwill,\nof\ncourse,\n\nMarch 1999\nControlling Data and Rule Indexing\nnot\nnotice\nthis.\nHowever,\nforward\nchaining\nrules\nshould\ndraw\nconclusions\nwhenever\nthe\ndata\nwarrants\nthe\ndeduction.\nA\nsolution\nto\nthis\nproblem\nis\nto\nuse\na\nmore\nexplicit\nform\nof\nreasoning\nin\nwhich\ngoal\ndirected\nreasoning\nis\nconducted\nby\nforward\nrules\nwhich\nare\ntriggered\nby\nex\nplicit\npredications\nstating\nthe\nexistence\nof\na\ngoal.\nHere\nis\nan\nalternative\nmixed\nchaining\nscheme\nwhich\nimplements\nbackward\nchain\ning\nby\nexplicitly\ntelling\nshow\npredications.\nThese\ntrigger\nforward\nrules\nwhich\nthen\nwork\nto\nfind\na\nway\nto\nsatisfy\nthe\ngoal\nincluded\nin\nthe\nshow\nstatement.\nFor\nexample,\nthe\nfollowing\nrule:\n(defrule\nfoo2explicitgoal\n(:forward)\nIf\n[and\n[show\n[foo2\n?a\n?b]]\n[backwardfoo2\n?b\n?a]]\nThen\n[foo2\n?a\n?b])\nWill\ndeduce\nFOO2\nanytime\nthat\nBACKWARDFOO2\nis\nasserted\nand\nthere\nis\na\nSHOW\npredi\ncation\nstating\nthat\nwe\nwant\nthis\nconclusion\nto\nbe\ndrawn.\nThe\nrule\nis\nmore\nflexible\nthan\na\nbackward\nrule,\nsince\nit\ndoes\nnot\ndepend\non\nthe\nrelative\norder\nof\nposting\nthe\ngoal\nand\nasserting\nthe\ndata\nnecessary\nto\ndeduce\nit.\n(Of\ncourse,\nthis\nrule\nis\nalso\nless\nefficient\nthan\na\nbackward\nrule).\nWe\ncan\nuse\njoshua:expandforwardruletrigger\njust\nas\nwe\ndid\nin\nthe\nprevious\nsection\nto\nmake\nthe\nrule\nFOO\nuse\nthis\nform\nof\nmixed\nchaining\nwhile\nretaining\nits\ndeclarative\nappearance,\nas\nfollows:\n(definepredicatemodel\nmixchainmixin\n()\n())\n(defvar\n*insidealternativebackwardchainingmixin*\nnil)\n(definepredicatemethod\n(expandforwardruletrigger\nmixchainmixin)\n(name\ntruthvalue\ncontext)\n(if\n*insidealternativebackwardchainingmixin*\n'(:match\n,self\n,name\n,truthvalue)\n(let\n((*insidealternativebackwardchainingmixin*\nt))\n(let\n((query\n(if\n(eql\ntruthvalue\n*true*)\nself\n'[not\n,self))))\n'(:and\n,(expandforwardruletrigger\n'(tell\n[show\n,query])\nnil\n*true*\ncontext)\n,(expandforwardruletrigger\nself\nname\ntruthvalue\ncontext))))))\n(definepredicate\nshow\n(predication))\n(definepredicate\nfoo2\n(a\nb)\n(mixchainmixin\ndefaultpredicatemodel))\n\nControlling Data and Rule Indexing\nMarch 1999\nThis\njoshua:expandforwardruletrigger\nmethod\nexpands\nthe\nFOO2\npattern\nof\nthe\nrule\ninto\ntwo\ncomponents.\nThe\nfirst\njoshua:tell's\nthe\nSHOW\nstatement\nthat\ntriggers\nthe\nFOO2EXPLICITGOAL\nrule.\nThe\nsecond\nis\na\nsimple\nmatch\nnode\nthat\nwaits\nfor\nthe\nFOO2\ngoal\nto\nbecome\ntrue.\nThe\njoshua:expandforwardruletrigger\nmethod\nis\nsomewhat\ntricky\nbecause\nit\nwants\nto\nexpand\nthe\nintial\n[foo2\n...\n]\npattern\ninto\ntwo\nnodes,\none\nof\nwhich\njoshua:tells\n[show\n[foo2\n...\n]]\nand\nthe\nother\nof\nwhich\nmatches\n[foo2\n...\n].\nA\nspecial\nvariable\nis\nbound\nto\nprevent\nan\ninfinite\nrecursion\nin\nthe\nexpansion\nof\nthis\npattern.\nFigure42shows\nthe\nRete\nnet\nfor\nthis\nrule.\nFigure\n32.\nGraph\nof\nMixed\nChaining\nRule\nFoo\nNotice\nthat\nthe\nrule\ncontains\ntwo\nmatch\nnodes,\none\nfor\neach\npattern.\nThe\nmatch\nnode\nfor\nthe\nFOO1\npattern\nleads\nto\na\nprocedural\nnode\nwhich\njoshua:tells\na\n[show\n[foo2\n...\n]]\npredication\nand\nthen\njoshua:succeeds.\nFollowing\nthis\nthe\ntwo\npaths\nmerge.\nIf\nthe\nFoo1\nstatement\nis\nasserted\nfirst\nthe\nrule\nwill\nassert\nthe\nSHOW\nstate\nment\nwhich\nwill\ncause\nthe\nFOO2EXPLICITGOAL\nrule\nto\nwait\nfor\na\nFOO2BACKWARD\nstatement.\nAt\nwhich\npoint\nthe\nFOO2EXPLICITGOAL\nrule\nwill\nassert\na\nFOO2\nstatement\nwhich\nwill\nmatch\nthe\nother\ntrigger\npattern\nof\nthe\nFOO\nrule.\nIf\nthe\nfacts\nare\nassert\ned\nin\nthe\nother\norder,\nthe\nrule\nwill\nalso\ndeduce\nthe\ndesired\nconclusion,\nas\nshown\nin\nfigures\nand\nUsing :ignore in joshua:expand-forward-rule-trigger\nHere's\nan\nexample\nusing\nthe\n:ignore\ntrigger\ndescription:\n(defrule\nadderforward\n(:forward)\nIf\n[and\n[typeof\n?a\nadder]\n[Valueof\naddend\n?a\n?value1]\n[Valueof\naugend\n?a\n?value2]]\nThen\n'[valueof\noutput\n?a\n,(+\n?value1\n?value2)])\nA\ntriggerindexing\nscheme\nmight\nbe\nused\nwhich\nguarantees\nthat\nthis\nrule\nwill\nonly\nbe\ntriggered\nby\nValueof\nassertions\nthat\ndescribe\nthe\nvalues\nof\nthe\nADDEND\nand\nAU\nGEND\nof\nadders.\nIn\nsuch\na\ncase\nthe\nfirst\npattern\nis\nrequired\nduring\nrule\ncompilation\n\nMarch 1999\nControlling Data and Rule Indexing\nFigure\n33.\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nFigure\n34.\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nto\ninform\nthe\njoshua:locateforwardruletrigger\nmethod\nthat\nit\nis\nindexing\npat\nterns\nhaving\nto\ndo\nwith\nadders.\nHowever,\nonce\nsuch\na\ntriggerindexing\nscheme\nis\nestablished\nthe\nfirst\npattern\nis\nactually\nredundant.\n(definepredicatemethod\n(expandforwardruletrigger\ntypeofmodel)\n(ignore\nignore\nignore)\n'(:ignore))\n(definepredicate\ntypeof\n(object\ntype)\n(typeofmodel\ndefaultprotocolimplementationmodel))\nCustomizing the Expansion of a Backward Rule\nWhat the Backward Rule-compiler Does to the Actions of a Rule\nThe\nbackward\nrule\ncompiler\nturns\nthe\nIfpart\nof\na\nrule\ninto\na\nseries\nof\nnested\njoshua:ask's.\nFor\nexample,\nthe\nactions\nof\nthe\nfollowing\nrule:\n\nControlling Data and Rule Indexing\nMarch 1999\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\nare\nconverted\ninto\na\nhighly\noptimized\nversion\nof\nthe\nfollowing\ncode:\n(ask\n[foo1\n?x\n?y]\n#'(lambda\n(support2196)\n(unify\n?f1\nsupport2196)\n(ask\n[not\n[foo2\n?y\n?z]]\n#'(lambda\n(support2197)\n(unify\n?f2\n#:support2197)\n(let\n((ji::rulesupport\n(list\nji::.goal.\nji::.truthvalue.\n'(rule\nfoobar)\nsupport2196\nsupport2197)))\n(funcall\nji::.continuation.\nji::rulesupport))))\n:dobackwardrules\nnil))\nThe\nbackward\nrule\ncompiler\nalso\nhandles\nthe\nkeyword\narguments\nwhich\ncan\nbe\nat\ntached\nto\npatterns\nin\nthe\nIfpart\nof\nthe\nrule.\nSee\nthe\nsection \"Advanced\nFeatures\nof\nJoshua\nRules\",\npage\n24.\nThe Contract of the Generic Function joshua:expand-backward-rule-action\nThe\njoshua:expandbackwardruleaction\nprotocol\nfunction\ncontrols\nhow\nthe\ncon\nversion\nis\nperformed.\njoshua:expandbackwardruleaction\nis\ncalled\nonce\nfor\neach\npredication\nincluded\nin\nthe\nIfpart\nof\nthe\nrule.\nIts\njob\nis\nto\nreturn\na\nlist\nstructure\nthat\nexplains\nto\nthe\nrule\ncompiler\nhow\nto\nprocess\nthe\npattern.\nFor\nexample\nin\nthe\nfollowing\nrule:\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\njoshua:expandbackwardruleaction\nwill\nbe\ncalled\nthree\ntimes\n(once\nfor\nthe\nen\ntire\njoshua::and\nand\nthen\nonce\nfor\neach\npredication\ninside\nthe\njoshua::and).\njoshua:expandbackwardruleaction\ntakes\nfive\narguments:\nthe\npattern\nto\nexpand,\nthe\nname\nof\nits\n:support\nvariable\n(or\nnil),\nits\ntruthvalue,\nthe\nvalue\nof\nthe\nkeyword\narguments\nattached\nto\nthis\npattern\nthat\nshould\nbe\npassed\nonto\njoshua:ask\n(e.g.\n:dobackwardrules\nand\n:doquestions)\nand\nthe\nentire\nIfpart\n(which\ncan\nbe\ntreated\nas\nthe \"context\"\nof\nthe\npattern).\nThus,\nthe\narguments\npassed\nin\nfor\nthese\nthree\ncalls\nwil\nbe:\n\nMarch 1999\nControlling Data and Rule Indexing\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2]\nnil\n*true*\n(t\nt)\n<the\nwhole\nIfpart>\n[foo1\n?x\n?y]\n?f1\n*true*\n(nil\nt)\n<the\nwhole\nIf\npart>\n[foo2\n?y\n?z]\n?f2\n*false*\n(t\nt)\n<the\nwhole\nIf\npart>\nNote\nthat\nalthough\nwe\nhave\ndisplayed\nthe\npatterns\nas\nif\nthey\nwere\npredications,\nthis\nis\nnot\nactually\ntrue.\njoshua:expandbackwardruleaction\nruns\nat\ncompile\ntime\nand\nmanipulates\na\nsourcecode\nrepresentation\nof\npredications\nand\nlogic\nvariables,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogic\nvariables\".\njoshua:expandbackwardruleaction\nshould\nreturn\na\nlist\nstructure\n(called\na\nac\ntiondescription)\nwhich\nmust\nbe\none\nof\nthe\nfollowing\nforms:\n1.\n(:match\npattern\nname\ntruthvalue\naskkeywordargs).\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\naction\nshould\nbe\ntreated\nsimply\nas\na\npattern\nto\nbe\njoshua:ask'ed.\nThis\naction\nwill\ncompile\ninto\nan\njoshua:ask\nform\nwhose\ncontinuation\nwill\nperform\nthe\nactions\nfollowing\nthis\none.\n-\npattern\nis\nthe\nsource\nrepresentation\nof\nthe\npredication\nthat\nshould\nbe\njoshua:ask'ed.\nThis\nis\nnormally\njust\nthe\nfirst\nargument\nto\njoshua:expand\nbackwardruleaction.\n-\nname\nis\nthe\nname\nof\na\nlogic\nvariable\nwhich\nshould\nbe\nbound\nto\nthe\nquery\nsupport\npassed\nby\njoshua:ask\nto\nits\ncontinuation;\nthis\nallows\nprocedural\ncode\nin\nthe\nIfPart\nof\nthe\nrule\nto\nexamine\nthe\nsupport\nfor\nthe\nvarious\nac\ntions.\n-\ntruthvalue\n(which\nin\nthe\ncurrent\nimplementation\nshould\nbe\neither\njoshua:*true*\nor\njoshua:*false*)\nis\nthe\ntruth\nvalue\nwhich\nthe\nmatching\npredication\nis\nrequired\nto\nhave\nin\norder\nto\nsatisfy\nthe\njoshua:ask.\n-\nThe\nvalues\nof\nthe\nkeyword\narguments\nto\nbe\npassed\nto\njoshua:ask.\nThis\nshould\nnormally\nbe\nidentical\nto\nthe\nequivalent\nargument\npassed\ninto\njoshua:expandbackwardruleaction.\n2.\n(:and\nactiondescriptions)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\nconjunction\nof\nactions\nall\nof\nwhich\nmust\nbe\nsatisfied.\nThe\nsystemprovided\ndefault\nmethod\nfor\nAND\npredications\nre\nturns\nthis\ntype\nof\naction\ndescription.\nThe\nsecond\nelement\nof\nthe\ntrigger\nde\nscription\nmust\nbe\na\nlist\nof\naction\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expandbackwardruleaction.\n3.\n(:or\nactiondescriptions)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\ndisjunction\nof\nactions\nany\none\nof\nwhich\nmust\nbe\nsatisfied\nin\norder\nto\nsatify\nthe\nwhole\naction.\nThe\nsystem\nprovided\nde\nfault\nmethod\nfor\nOR\npredications\nreturns\nthis\ntype\nof\naction\ndescription.\nThe\nsecond\nelement\nof\nthe\naction\ndescription\nmust\nbe\na\nlist\nof\naction\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expandbackwardruleaction.\n\nControlling Data and Rule Indexing\nMarch 1999\n4.\n(:procedure\nlispexpression\nname)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nis\nnot\na\npattern\nto\nbe\njoshua:ask'ed\nbut\nrather\na\nLisp\nexpression\nthat\nappears\nin\nthe\nIfpart\nof\nthe\nbackward\nrule.\nSuch\nexpressions\nare\nexecuted\nonce\nall\nproceeding\nactions\nin\nthe\nrule\nhave\nbeen\nsatisfied.\nThe\nexpression\ncan\nact\nas\na\nfilter\nby\nreturning\neither\njoshua::t\nor\njoshua::nil.\njoshua::t\nindicates\nsuccess;\nin\nthis\ncase\nthe\nbindings\naccumu\nlated\nup\nto\nthis\npoint\nare\nconsidered\nacceptable\nand\nrule\nexecution\ncontinues.\njoshua::nil\nindicates\nfailure;\nin\nthis\ncase\nthe\nbindings\nare\nconsidered\nunac\nceptable.\nThe\nexpression\ncan\nalso\nact\nas\na\ngenerator\nin\nwhich\nit\nproduces\nseveral\nnew\nsets\nof\nbindings\neach\nof\nwhich\nis\nconsistent\nwith\nthe\nbindings\nthat\nwere\nin\nef\nfect\njust\nbefore\nthe\naction\nbegan\nexecution.\nTo\ndo\nthis\nit\nshould\nbind\nwhatev\ner\nlogicvariables\nit\nwants\nto\nand\nthen\ncall\njoshua:succeed.\njoshua:succeed\ntakes\na\nrestargument;\nthe\nrule\ncompiler\nwill\narrange\nfor\nthis\nvalue\npassed\nto\njoshua:succeed\nto\nbe\nbound\nto\nthe\nlogicvariable\nwhich\nis\nthe\nthird\nelement\nof\nthe\naction\ndescription.\nSee\nthe\nfunction\njoshua:succeed,\npage\n232.\n5.\n(:ignore)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nit\nshould\nig\nnore\nthis\naction.\nThe\nare\ntwo\nreasons\nfor\nusing\nthis\ntype\nof\naction\ndescription.\nThe\nfirst\nis\nto\nallow\na\nrule\nto\nhave\nactions\nincluded\nin\nit\nsimply\nfor\nthe\nsake\nof\nclarity.\nThe\nsecond\nis\nto\ninclude\nactions\nonly\nto\nspecify\ncontext.\n7.3.1. Customizing the Matchers Generated by the Rule Compiler\nWhen\nJoshua\ncompiles\nunifier\nfunctions\nfor\na\npattern\nof\na\nforward\nchaining\nrule,\nit\nactually\ncompiles\ntwo\nprocedures:\na\nfull\nunifier\nand\na\nsemiunifier.\n(The\nlatter\nassumes\nthere\nare\nno\nvariables\non\nthe\ndata\nside\nof\nthe\nmatch;\nwhen\napplicable,\nthe\nsecond\none\nis\nfaster.)\nIn\nsome\ncases,\nthe\njoshua:mapoverforwardruletriggers\nmethod\nwill\nhave\nal\nready\nchecked\nsome\nslots\nagainst\nthe\ndata\nbefore\nhanding\nit\noff\nto\nthe\nunifier.\nIn\nsuch\na\ncase,\nit\nwould\nbe\nsilly\nfor\nthe\nunifier\nprocedure\nto\ncheck\nthe\nsame\nfeatures\nthat\nhave\njust\nbeen\nchecked\nby\nmapoverforwardruletriggers.\nThe\njoshua:positionsforwardrulematchercanskip\nprotocol\nfunction\nis\nthe\nhook\nthat\nlets\nyou\nadvise\nthe\nrule\ncompiler\nabout\nsuch\nsituations.\nThe\nrule\ncompiler\nwill\nthen\ngenerate\na\nsemiunification\nmatcher\nthat\ndoesn't\nbother\nto\ncheck\nthe\nslots\nidentified\nby\njoshua:positionsforwardrulematchercanskip.\n(The\nfull\nunifier\nmust\nstill\ncheck\nall\nslots,\nbecause\nof\nthe\npossibility\nof\nvariables\non\nthe\ndata\nside.)\nIn\nthe\ndefault\nimplementation,\njoshua:positionsforwardrulematchercanskip\nin\nstructs\nthe\nmatch\ncompiler\nfor\nforward\nrules\nto\ngenerate\na\nsemiunification\nmatch\ners\nthat\nignores\nthose\nparts\nof\na\npredication\nthat\ncontain\nsymbols.\nThis\nis\nbecause\nthe\ndefault\ntrigger\nindexing\nscheme,\nas\nimplemented\nby\n(joshua:mapover\nforwardruletriggers\njoshua:defaultprotocolimplementationmodel)\nis\na\ndis\ncrimination\nnetwork\nthat\nhas\nalready\ndiscarded\ncandidates\nwith\ndifferent\nsymbols\nin\nthis\nposition\nbefore\nwe\never\nreached\nthe\nunification\nquestion.\n(Trigger\npatterns\n\nMarch 1999\nControlling Data and Rule Indexing\nsuch\nas\n[goodtoeat\nhoney],\n[goodtoeat\nbread],\n[goodtoeat\ngoatcheese]\ndis\ncriminate\nto\ndifferent\nnodes.)\nSuppose\nthe\ntrigger\nmapping\nmethod\nyou\nuse\nis\nthe\ndefault\none,\nwhich\nuses\na\ndis\ncrimination\nnet.\nWhen\nyou\ngive\nit\na\npiece\nof\ndata\nto\nfind\ntriggers\nfor,\nit\nlooks\nin\nthe\ndiscrimination\nnet\nand\ncomes\nback\nwith\ntriggers\nthat\nmight\nunify\nwith\nit.\n\"Might\nunify\",\nin\nthis\ncontext,\nmeans\nthat\nit\nhas\nchecked\nsome\nthings\nthat\nare\ncheap\nto\ncheck,\nand\nused\nthose\nto\nreject\ncandidates\nthat\nhave\nno\nhope\nof\nunifying.\nIn\nparticular,\nthe\ndiscrimination\nnet\nchecks\nall\npositions\nin\na\npredication\nthat\nhave\nsymbols,\nso\nthere's\nno\nneed\nto\nhave\nthe\nunifier\ncheck\nthem\nagain.\nHere's\nan\nexample.\nThe\ndefault\ntrigger\nindexing\nscheme\nuses\na\ndiscrimination\nnet,\nso\nthe\nsemimatcher\n(for\nforward\nrules)\ncan\nskip\nlooking\nat\nany\nslots\nin\nthe\npredi\ncation\nthat\ncontain\nsymbols.\nThus\nthe\ndefault\nimplementation\nof\njoshua:positions\nforwardrulematchercanskip\ncould\nhave\nbeen:\n(definepredicatemethod\n(positionsforwardmatchercanskip\npredication)\n()\n(loop\nfor\ntoken\n=\n(predicationstatement\nself)\nthen\n(cdr\ntoken)\nwhile\n(consp\ntoken)\n;;\nneedn't\ndeal\nwith\ntail\nvariable,\nsince\nvariables\n;;\ncan't\never\nbe\nskipped\nanyway\nwhen\n(symbolp\n(car\ntoken))\ncollect\ntoken))\nand\nthus,\nif\nfoo\nuses\nthe\ndefault\ntrigger\nindexing\nscheme:\n(positionsforwardmatchercanskip\n[foo\na\n?x\nb])\n→\n((FOO\nA\n?X\nB)\n(A\n?X\nB)\n(B))\nNote\nthat\nthe\nresult\nreturned\nis\na\nlist\nof\ntails\nof\nthe\npredication.\nIf\nyou\ncreate\na\ncustomized\ntrigger\nindex,\nyou\nhave\nto\nbe\nsure\nthat\nyou\neither\nin\nherit\nthe\nright\njoshua:positionsforwardrulematchercanskip\nmethod,\nor\nthat\nyou\nwrite\na\nmethod\nof\nyour\nown\nthat\nis\nappropriate\nfor\nyour\nindexing\nscheme.\nIn\nthe\nabove\nexample,\ninheriting\nthe\nsymbolskipping\nbehavior\nfrom\njoshua:default\nrulecompilationmodel\nwas\ncorrect.\nIf\nyou\ndon't\nprovide\nfor\nthe\nsymbolskipping\nbehavior,\nyou\ncan\nrun\ninto\nsituations\nwhere\nthe\nunifier\ngives\nfalse\nmatches.\nFor\ninstance,\nyou\ncould\njoshua:tell\n[foo\na\nb]\nand\nhave\na\nforward\nrule\nwhose\ntrigger\nis\n[foo\na\nbar]\nincorrectly\nfire.\nNeedless\nto\nsay,\nthis\ncan\nlead\nto\nvery\nsubtle\nand\nhard\ntoanalyze\nbugs.\nIf\nyou\nwant\nto\nbe\nvery\ncareful\n(and\nperhaps\noverly\npessimistic)\nyou\ncan\ninstruct\nthe\nsemimatcher\nfor\nforward\nchaining\nto\ncheck\neverything,\nby\ndo\ning\nthe\nfollowing:\n(definepredicatemethod\n(positionsforwardmatchercanskip\n<yourpredicatemodelhere>)\n()\nnil)\nThis\npessimistic\nmethod\nwill\nensure\nyour\nsemimatchers\nare\nalways\ncorrect;\nsome\ntimes\nyou\ncan\ndo\nbetter\nin\nterms\nof\nperformance\nby\nconsidering\nwhat\nyour\ntrigger\nindexing\nscheme\nhas\nalready\nlooked\nat.\n\nControlling Data and Rule Indexing\nMarch 1999\n\nMarch 1999\nThe Joshua Object Facility\n8. The Joshua Object Facility\n8.1. Introduction to the Joshua Object Facility\nA\nvery\nlarge\npart\nof\nwhat\none\nwants\nto\nexpress\nabout\nthe\nworld\nis\ncaptured\nby\nob\njectattributevalue\ntriples.\nFor\nexample:\n-\nThe\ncolor\n(attribute)\nof\nFred's\neyes\n(object)\nis\nblue\n(value);\n-\nMy\nchecking\naccount\n(object)\nhas\na\nbalance\n(attribute)\nof\n$514.54\n(value);\n-\nThe\nvoltage\n(attribute)\nat\nNode22\n(object)\nis\n27.2\n(value).\nIt\nis\noften\nconvenient\nto\naggregate\nall\nthe\nattributes\nof\na\nparticular\nobject\ninto\na\nsingle\ndatastructure.\nObjectOriented\nprogramming\nsystems\nsuch\nas\nFlavors\n(or\nthe\nCommon\nLisp\nObject\nSystem)\nprovide\na\nnatural\nmechanism\nfor\naggregating\nthe\nvarious\nproperties\nof\nan\nobject\ninto\na\nsingle\nrepresentation\n(e.g.\na\nFlavor\ninstance).\nThe\nJoshua\nObject\nModelling\nfacility\nunifies\nthe\nobjectoriented\nparadigm\nof\nthe\nFlavors\nsystem\nwith\nthe\nJoshua\nrulebased\nparadigm.\nIt\ndoes\nthis\nby\nusing\nthe\nJoshua\nProtocol\nto\nmap\nObjectAttributeValue\npredications\ninto\nthe\nObjectoriented\nstorage\nof\nthe\nFlavor\nSystem.\nWhile\nthe\nfacilities\nof\nthe\nJoshua\nProtocol\nhave\nal\nways\nmade\nthis\npossible,\nthis\nrelease\nprovides\nthe\ncapability\nas\na\nbuiltin\nfacility.\nFred\nEye-Color\nValue: Blue\n[Value-of (Eye-Color Fred) Blue]\nHair-Color\nValue: Brown\nA Slot\nValue:\nNet Worth\n$1,000,000\n. . .\n[Value-of (Hair-Color Fred) Brown]\nA predication\nAn Object\nFigure\n35.\nPredications\nBeing\nMapped\ninto\nan\nObject\nRepresentation\n\nThe Joshua Object Facility\nMarch 1999\nThe\nnew\nfacility\nalso\nprovides\naccess\nto\nother\ncommon\nfacilities\nof\nobjectoriented\nsystems.\nFor\nexample,\nwhen\none\nTELL's\n[valueof\n(Fred\neyecolor)\nBlue]\nthe\nnew\nfacility\nmakes\nit\npossible\nto\ninvoke\nan\nappropriate\nmethod\nassociated\nwith\nthe\nclass\nof\nthe\nobject\nnamed\nFred\nor\nto\ninvoke\nan\nexpression\nassociation\nspecifi\ncally\nwith\nthe\nFred\nobject.\nFinally,\nthe\nnew\nfacility\nmakes\nit\npossible\nto\ncreate\nequality\nlinks\nbetween\nproper\nties\nof\ndifferent\nobjects,\nmaking\nit\neasy\nto\nexpress\nan\nidea\nsuch\nas\nFred's\neyecolor\nis\nthe\nsame\nas\nSam's.\n(defmethod ((setf Eye-Color) Person) (new-color)\n... )\nFred\nValue: Blue\nValue:\nHair-Color\nEye-Color\nBrown\nA method associated with the Flavor of Fred\nSAM\nValue: Blue\nValue:\nHair-Color\nEye-Color\nBlond\nAn Equality Link\n(Say-that-Sam-is-using-grecian-formula)\nAn Attached Action\nFigure\n36.\nOther\nCapabilities\nof\nthe\nObject\nFacility\n\nMarch 1999\nThe Joshua Object Facility\n8.2. Basic Capabilities of the Joshua Object Facility\nObjects\nare\nrepresented\nin\nthe\nJoshua\nObject\nfacility\nas\nparticular\ntypes\nof\nFlavors.\n(Every\nJoshua\nObjectType\nincludes\na\nFlavor\ncalled\nBasicObject\nas\na\ncomponent\nFlavor).\nAttributes\nof\nJoshua\nObjects\nare\nrepresented\nby\nSlots\nwhich\nare\ndata\nstructures\nattached\nto\nthe\nObject.\nThe\ntype\nof\na\nJoshua\nObject\nis\ncalled\nits\nObject\nType.\nObjects\nand\nSlots\nprovide\na\nbroad\nrange\nof\nfacilities;\nhowever,\ninitially\nwe\nwill\nlook\nonly\nat\nthe\nbasic\nfacilities.\nSuppose\nwe\nwant\nto\ndefine\nan\nObjectType\nto\nrepresent\nelectrical\nresistors;\nthis\nis\ndone\nas\nfollows:\n(defineobjecttype\nresistor\n:slots\n(current\nvoltage\nresistance))\nThis\ndefines\nthe\nResistor\nObjectType;\nany\nobject\nof\nthis\ntype\nhas\nthree\nslots.\nEach\nof\nthese\nhas\na\nfield\ncontaining\nthe\nactual\nvalue\nof\nthe\nattribute\n(e.g.\nthe\nvoltage\nacross\nthe\nresistor)\nand\nother\nfields\n(such\nas\na\npredication).\nTerminal-1\nTerminal-2\nCurrent\nVoltage\nResistance\nResistor-1\nCurrent\nValue: 10\nResistance\nValue: 5\nValue:\nVoltage\nFigure\n37.\nA\nResistor\nand\nits\nRepresentation\nas\nan\nObject\nAn\nobject\nis\ncreated\nusing\njoshua:makeobject:\n(Setq\nResistor1\n(makeobject\n'resistor\n:name\n'resistor1))\nThere\nis\nan\naccessor\nfunction\ncorresponding\nto\neach\nslot\nof\nthe\nobject\nwhich\nre\nturns\nthe\nvalue\nof\nthat\nattribute.\nThus,\nthe\nvalue\nof\nthe\ncurrent\nthrough\nthe\nResis\ntor1\ncan\nbe\nretrieved\nas:\n(Resistor1\nCurrent)\njust\nas\nif\nwe\nwere\nretrieving\nthe\nvalue\nof\nan\ninstance\nvariable.\n[However,\nthe\nvalue\nof\nthe\nCurrent\ninstancevariable\nof\nResistor1\nis\nactually\nthe\nslot\ndata\nstructure;\n\nThe Joshua Object Facility\nMarch 1999\nthe\nCurrent\naccessor\nfunction\nfirst\nfetches\nthe\nslot\nand\nthen\nextracts\nthe\nvalue\nfrom\nthat.\nLater\non\nwe\nwill\nsee\nhow\nto\nfetch\nthe\nslot\nas\nopposed\nto\nthe\nvalue\nof\nthe\nslot].\nThe\npredication\njoshua:valueof\nis\nJoshua's\nmeans\nfor\ntalking\nabout\nslots\nand\nOb\njects.\nThis\npredication\ntakes\ntwo\narguments,\nthe\nfirst\nof\nwhich\ndescribes\na\nslot\nand\nthe\nsecond\nof\nwhich\na\nvalue.\nFor\nexample,\n[valueof\n(Resistor1\nvoltage)\n10]\nsays\nthat\nResistor1's\nvoltage\nis\n(volts\npresumably).\nSuch\npredications\ncan\nbe\nused\nlike\nany\nother;\nthey\ncan\nbe\nused\nin\njoshua:ask\nand\njoshua:tell.\nTo\ntell\nthe\nsystem\nthat\nResistor2\nhas\na\nvoltage\nof\n5,\nwe\nwould\nsay:\n[valueof\n(Resistor2\nvoltage)\n5].\nTo\ndetermine\nthe\nvoltage\nacross\nResistor2,\nwe\nwould\nmight:\n(ask\n[valueof\n(Resistor2\nvoltage)\n?voltage]\n#'(lambda\n(ignore)\n(print\n?voltage)))\n[Note:\nthe\nfirst\nargument\nto\na\njoshua:valueof\npredication\ncan\nbe\neither\nan\nexpres\nsion\ndescribing\na\nslot\nas\nshown\nin\nthe\nexamples\nabove,\nor\nit\ncan\nbe\nan\nactual\nslot.\nSince\nwe\nhaven't\nyet\nshown\nhow\nto\nfetch\na\nslot,\nwe'll\npostpone\nfurther\nmention\nof\nthis\nfor\na\nwhile.]\nA\nsecond\npredication\nused\nto\ntalk\nabout\nJoshua\nobjects\nis\njoshua:objecttypeof.\nThis\nis\nan\nju::askonly\npredication,\nit\ncan\nnever\nbe\nused\nas\nan\nargument\nto\njoshua:tell.\njoshua:objecttypeof\ntakes\ntwo\narguments,\nthe\nfirst\nof\nwhich\nis\nan\nObject\nand\nthe\nsecond\nis\nthe\nname\nof\nan\nObjectType.\nThus,\n(ask\n'[ObjectTypeOf\n,Resistor2\nResistor]\n#'(lambda\n(ignore)\n(print\n'yes)))\nqueries\nwhether\nResistor2\nis,\nin\nfact,\na\nresistor.\nWhile\n(ask\n'[ObjectTypeOf\n,Resistor2\n?Histype]\n#'(lambda\n(ignore)\n(print\n?Histype)))\nretrieves\nand\nprints\nthe\nObjectType\nof\nResistor2.\nFinally,\nJoshua's\nrules\ncan\nuse\nthese\npredications\nto\nexpress\ninferences\nthat\nshould\nbe\ndrawn.\nContinuing\nwith\nour\nexample\nof\na\nresistor,\nwe\ncan\nexpress\nOhm's\nlaw\nas\nfollows:\n(defrule\nOhm\n(:forward)\nIf\n[and\n[Objecttypeof\n?resistor\nResistor]\n[valueof\n(?resistor\ncurrent)\n?I]\n[valueof\n(?resistor\nresistance)\n?R]]\nThen\n'[valueof\n(?resistor\nvoltage)\n,(*\n?I\n?R)])\n[Note:\nthere\nis\nan\nimportant\nrestriction\non\nthe\nuse\nof\nthese\npredications\nin\nrules.\nAny\nrule\nwhich\nincludes\na\njoshua:valueof\npredication\nmust\nalso\ncontain\nan\n\nMarch 1999\nThe Joshua Object Facility\njoshua:objecttypeof\npredication\nwhich\ndescribes\nthe\nobjecttype\nof\nthe\nobject\nmentioned\nin\nthe\njoshua:valueof\npredication.\nFor\nquestions\nabout\njoshua:valueof\npredications,\nan\njoshua:objecttypeof\npredication\nmust\nbe\ngiven\nas\nthe\n:context\noption:\n(defquestion\nGetResistorCurrent\n(:backward)\n[valueof\n(?resistor\ncurrent)\n?value]\n:context\n[Objecttypeof\n?resistor\nResistor])\nOf\ncourse,\nwe\ncan\nalso\nwrite\nbackwardchaining\nrules\nwhich\ntalk\nabout\nobjects.\nThe\nrule\nabove\ncould\nhave\nbeen\nwritten\nas:\n(defrule\nOhm\n(:backward)\nIf\n[and\n[Objecttypeof\n?resistor\nResistor]\n[valueof\n(?resistor\ncurrent)\n?I]\n[valueof\n(?resistor\nresistance)\n?R]\n(unify\n?voltage\n(*\n?I\n?R))]\nThen\n'[valueof\n(?resistor\nvoltage)\n?voltage])\n8.3. Using Paths to Refer to the Structure of an Object\njoshua:valueof\npredications\nnormally\nrefer\nto\na\nslot\n(or\nan\nobject)\nusing\nPaths.\nA\npath\nis\nsimply\na\nlist\nof\nnames\nwhich\ndescribes\nhow\nto\nfind\nan\nobject\nor\na\nslot.\nWe\nhave\nalready\nseen\npaths\nin\nthe\nexamples\nabove.\nFor\nexample,\nin:\n[valueof\n(Resistor1\nvoltage)\n10]\nwhere\nthe\npath\n(Resistor1\nvoltage)\ndescribes\nthe\nvoltage\nslot\nof\nResistor1.\nIn\ngeneral,\nobjects\ncontain\nother\nobjects\n(for\nexample,\na\ncomputerconsole\nhas\na\nscreen,\na\nkeyboard,\nand\na\nmouse;\nA\nmouse\nhas\na\nleft,\na\nmiddle\nand\na\nright\nbutton).\nThis\nleads\nto\nlonger\npaths,\nsuch\nas:\n(Howiesmonitor\nmouse\nleftbutton\nupdownstate)\nwhich\ndescribes\nthe\nupdownstate\nattribute\nof\nthe\nleftbutton\nof\nthe\nmouse\nof\nHowie's\nmonitor.\nWe\nwill\nsee\nhow\nto\nmake\nsuch\ncompound\nobjects\nin\na\nlater\nsec\ntion;\nuntil\nthen,\nthese\nlonger\npaths\nwill\nnot\nbe\nvery\nimportant.\nEach\nterm\nin\na\npath\ndescribes\na\nsubpart\nor\nslot\nof\nthe\nobject\ndescribed\nby\npreced\ning\nterms\nin\nthe\npath.\nOne\nmight,\ntherefore,\nwonder\nwhat\ncontains\nthe\nfirst\nthing\nin\na\npath.\nThe\nanswer\nis\nthat\nthere\nis\na\nspecial,\nhidden\nobject\nwhich\nis\nthe\nroot\nof\nthe\npartwhole\nhierarchy;\nwhen\nwe\nmake\nan\nobject\nit\nbecomes\na\nsubpart\nof\nthis\nroot.\nThus,\n(makeobject\n'resistor\n:name\n'r1)\n\nThe Joshua Object Facility\nMarch 1999\nmakes\nan\nobject\nwhose\nobjecttype\nis\nResistor\nand\nwhich\nis\ndescribed\nby\nthe\npath\n(R1).\nIts\nresistance\nis\ndescribed\nby\nthe\npath:\n(R1\nResistance)\n8.4. Type Hierarchy in the Joshua Object Facility\nObjecttypes\ncan\ninclude\nother\nObjectTypes\n(just\nas\na\nFlavor\ncan\nmix\nin\nother\nFlavors).\nFor\nexample,\nall\nresistors,\ncapacitors\nand\ninductors\nare\nTwo\nTerminal\nDevices;\nall\nsuch\ndevices\nshare\ncertain\nproperties\n(for\nexample,\nthey\nall\nhave\ntwo\nterminals,\na\nvoltage\nacross\nthem\nand\na\ncurrent\nthrough\nthem).\nIt\nis\na\nuseful\n(and\nmodular)\nto\ncapture\nthe\ncommon\nfeatures\nin\na\nsingle\ntype\ndefinition\nwhich\nis\nthen\nshared\nby\nthe\nsubordinate\ntypes.\nWe\ncan\ndo\nthis\nas\nfollows:\n(defineobjecttype\n2terminaldevice\n:slots\n(current\nterminal1current\nterminal2current\nvoltage\nterminal1voltage\nterminal2voltage))\n(defineobjecttype\nresistor\n:slots\n(resistance)\n:includedobjecttypes\n(2terminaldevice))\n(defineobjecttype\ncapacitor\n:slots\n(capacitance)\n:includedobjecttypes\n(2terminaldevice))\n(defineobjecttype\ncapacitor\n:slots\n(inductance)\n:includedobjecttypes\n(2terminaldevice))\nWhich\nsays\nthat\nall\n2terminal\ndevices\nhave\nterminals,\nof\nwhich\nhas\na\nvoltage\nand\na\ncurrent.\nThere\nis\na\nvoltage\nacross\nany\n2terminal\ndevice\nand\na\ntotal\ncurrent\nthrough\nany\n2terminal\ndevice.\nResistors,\nhave\nall\nthese\nproperties;\nin\naddition\na\nresistor\nhas\na\nresistance;\nsimilarly\nfor\ncapacitors\nand\ncapacitance\nand\ninductors\nand\ninductance.\nThis\nmodularity\nis\nparticularly\nuseful,\nbecause\nwe\ncan\ntake\nadvantage\nof\nit\nin\nour\nrules.\nWe\ncan\nexpress\nthe\nfact\nthat\nthe\nvoltage\nacross\nany\n2terminal\ndevice\nis\nthe\ndifference\nbetween\nits\ntwo\nterminal\nvoltages\nwith\na\nsimple\nrule:\n\nMarch 1999\nThe Joshua Object Facility\nTerminal-1\nTerminal-2\nCurrent\nVoltage\nResistor Capacitor Inductor\n2-Terminal-Device\nInductance\nResistance\nCapacitance\nFigure\n38.\nThe\nObjectType\nHierarchy\nof\nTwoTerminal\nDevices\n(defrule\n2terminalvoltage\n(:forward)\nIf\n[and\n[Objecttypeof\n?device\n2terminaldevice]\n[valueof\n(?device\nterminal1voltage)\n?t1voltage]\n[valueof\n(?device\nterminal2voltage)\n?t2voltage]]\nThen\n'[valueof\n(?device\nvoltage)\n,(\n?t2voltage\n?t1voltage)])\nThis\nrule,\nhowever,\nwill\napply\nto\nany\n2terminal\ndevice\n(whether\nit\nis\na\nresistor,\ncapacitor\nor\ninductor).\nSo\nif\nwe\nwere\nto\ncreate\na\nresistor\nand\nstate\nits\ntwo\nterminal\nvoltages,\nthis\nrule\nwould\nfire:\n(makeobject\n'resistor\n:name\nr1)\n(tell\n[valueof\n(r1\nterminal1voltage)\n0])\n(tell\n[valueof\n(r1\nterminal2voltage)\n5])\nand\ndeduce\nthe\nnew\npredication:\n[ValueOf\n(r1\nvoltage)\n5]\nThis\nsame\nrule\nwould\nalso\napply\nto\na\ncapacitor,\nfor\nexample:\n\nThe Joshua Object Facility\nMarch 1999\n(makeobject\n'capacitor\n:name\nC1)\n(tell\n[valueof\n(C1\nterminal1voltage)\n0])\n(tell\n[valueof\n(C1\nterminal2voltage)\n5])\nwhich\nwould\nlead\nto\nthe\ndeduction\nof:\n[ValueOf\n(C1\nvoltage)\n5]\nOf\ncourse,\nthe\nOhm's\nlaw\nrule\nwould\napply\nonly\nto\nresistors.\nNotice\nthat\nsince\nR1\nis\nboth\na\nresistor\nand\na\n2terminal\ndevice,\nthere\nare\nvalid\nanswers\nto\na\nquery\nabout\nits\nObjectType.\nThus,\nthe\nquery:\n(ask\n[ObjectTypeOf\nR1\n?Type]\n#'(lambda\n(ignore)\n(print\n?Type)))\nwill\nprint\nboth\nResistor\nand\n2terminaldevice.\nSimilary,\nif\nwe\nquery\nfor\nall\nobjects\nof\nthe\n2terminaldevice\nobjecttype,\nas\nfollows:\n(ask\n[ObjectTypeOf\n?thing\n2terminaldevice]\n#'(lambda\n(ignore)\n(print\n?Thing)))\nwe\nwill\nget\na\nlisting\nof\nall\nresistors,\ncapacitors\nand\ninductors.\n8.5. Part-Whole Hierarchy in the Joshua Object Facility\nObjects\noften\nfall\ninto\na\nsecond\nnatural\nhierarchy,\nthat\nof\npart\ninclusion.\n(See\nthe\nsection \"Using\nPaths\nto\nRefer\nto\nthe\nStructure\nof\nan\nObject\",\npage\n109.)\nFor\nexample,\na \"Widget\"\nfactory\nmight\nhave\nthree\nparts:\na\nwarehouse\nfor\nreceiving\nincoming\nmaterial,\na\nwidget\nmilling\nstation\nand\na\nwarehouse\nfor\nstoring\ncompleted\nwidgets\nwaiting\nshipment.\nEach\nof\nthese\nis\nan\nobject\nwhich\nmust,\ntherefore,\nhave\nan\nobjecttype\nof\nits\nown.\nThe\ntwo\nwarehouses\nare\nobjects\nof\nthe\nWarehouse\nobject\ntype\nand\nthe\nmilling\nstation\nis\nan\nobject\nof\nthe\nMillingMachine\nobjecttype.\nIn\nad\ndition,\neach\nof\nthese\nobjects\nplays\na\nparticular\nrole\nwithin\nthe\nwidget\ncompany.\nNo\ntice\nthat,\nalthough\nthere\nare\ntwo\nwarehouses,\nthey\nplay\ndifferent\ndifferent\nroles\nand,\ntherefore,\nhave\ndifferent\nnames\nwithin\nthe\ncontext\nof\na\nWidget\nfactory.\njoshua:defineobjecttype\ntakes\na\n:parts\nkeyword\nargument\nwhose\nvalue\nis\na\nlist\nof\npairs\nof\nroles\nand\nobjecttypes.\nThus,\nwe\nwould\ndescribe\na\nwidget\nfactory,\nas\nfol\nlows:\n(defineobjecttype\nwidgetfactory\n:parts\n((receiving\nwarehouse)\n(production\nmillingmachine)\n(finishedgoods\nwarehouse)))\n\nMarch 1999\nThe Joshua Object Facility\nThis\nsays\nthat\nevery\nwidgetfactory\nhas\none\nsubpart\nnamed\nReceiving\nwhich\nis\na\nwarehouse\nand\nanother\nsubpart\nnamed\nFinishedGoods\nwhich\nis\nalso\na\nwarehouse.\nFinally,\nany\nWidgetFactory\nalso\nhas\na\npart\nnamed\nProduction,\nwhich\nis\na\nMilling\nMachine.\nNotice\nthat\nwe\ncan\ndescribe\nany\nof\nthese\nusing\npaths.\nWe\ncan\ncreate\na\nwidget\nfactory,\nnamed\nWF1\nas\nfollows:\n(makeobject\n'widgetfactory\n:name\n'WF1)\nIts\nthree\nsubparts\ncan\nbe\nrefered\nto\nwith\nthe\nfollowing\npaths:\n(WF1\nMillingMachine)\n(WF1\nReceiving)\n(WF1\nFinishedGoods)\nAssume\nthat\nan\nobject\nof\ntype\nMillingMachine\nhas\na\nslot\nnamed\nThingBeing\nMilled.\nThen\nthe\npath\n(WF1\nMillingMachine\nThingBeingMilled)\nnames\nthe\nthing\ncurrently\nbeing\nmilled\nin\nthe\nProduction\npart\nof\nWF1.\n8.6. Other Capabilities of Slots\nSlots\nsupport\na\nvariety\nof\nbehaviors\nother\nthan\nthose\nexplained\nalready.\nThis\nbe\nhavior\nis\ncontrolled\nby\nkeyword\narguments\nattached\nto\nthe\nname\nof\nthe\nslot\nin\nits\nDefineObjectType\nform.\nIf\nno\nkeywords\nare\nspecified\n(as\nhas\nbeen\nthe\ncase\nso\nfar)\nthen\nthe\ndefault\nbehaviors\nare\nassumed.\n8.6.1. Initial Values of Slots\nThe\ninitial\nvalue\nof\na\nslot\nmay\nbe\nspecified\nby\nincluding\nthe\n:initform\nkeyword\nar\ngument\nin\nthe\nslot\ndescription.\nThe\nvalue\nof\nthis\nargument\nis\na\nform;\nthe\nslot\nis\ninitialized\nto\nhave\nthe\nvalue\nof\nthis\nform\nas\nits\ncontents.\nFor\nexample,\n(defineobjecttype\nresistor\n:slots\n((resistance\n:initform\n10)))\nspecifies\nthat\nwhenever\na\nresistor\nis\ncreated,\nits\nresistance\nshould\nbe\ninitialized\nto\n10.\nThis\nis\ndone\nby\ncausing\nthe\nappropriate\njoshua:tell\nto\nhappen.\n8.6.2. Set Valued and Single Valued Slots\nSlots\nmay\nbe\neither\nsinglevalued\nor\nsetvalued.\nIf\na\nslot\nis\nsinglevalued,\nthen\nat\nany\none\ntime\nit\nthere\ncan\nonly\nbe\na\nsingle\nvalue\nof\nthe\nattribute\nrepresented\nby\nthe\nslot.\nFor\nexample,\nthe\nvoltage\nat\nnode22\ncan\nonly\nbe\na\nspecific\nvoltage\nat\nany\ntime.\nIt\nwould\nbe\ncontradictory\nto\nbelieve\nboth:\n\nThe Joshua Object Facility\nMarch 1999\n[valueof\n(voltage\nnode22)\n10]\n[valueof\n(voltage\nnode22)\n20].\nHowever,\nother\nattributes\ncan\nbe\nset\nvalued;\nfor\nexample,\nthere\nmight\nbe\nmany\nsiblings\nof\nJohn.\nHere\nit\nis\nperfectly\npossible\nto\nbelieve\nboth\nof:\n[valueof\n(sibling\njohn)\nmary]\n[valueof\n(sibling\njohn)\nmark]\njoshua:defineobjecttype\nspecifies\nfor\neach\nslot\nwhether\nit\nis\nsinglevalued\nor\nset\nvalued.\nSinglevalued\nis\nthe\ndefault.\nThe\nfact\nthat\nsibling\nis\na\nsetvalued\nattribute\nwould\nbe\nindicated\nby:\n(defineobjecttype\nperson\n:slots\n((sibling\n:setvalued\nt)\n...))\n8.6.3. Slots and Truth Maintenance\nAnother\noption\nin\nthe\ndescription\nof\na\nslot,\nis\nwhether\nthe\ninformation\nin\nthe\nslot\nshould\nbe\nsubject\nto\ntruthmaintainence\nor\nnot.\n(The\ndefault\nis\nno).\nIf\nthe\nslot\nis\nsubject\nto\ntruthmaintenance\nthen\nany\npredication\nmentioning\nit\nshould\ninclude\nthe\nltms::ltmsmixin.\nThe\nprovided\npredicate\nltms:valueof\nincludes\nboth\nslot\nmod\nelling\nand\nLTMS\nmixins.\nSuppose\nthat\nwe\nwanted\nto\nreason\nabout\nAdders\nas\npart\nof\ntroubleshooting\nprogram\nwhich\nuses\nTruthMaintenance\ntechniques\n(such\na\npro\ngram\nis\nincluded\nin\nthe\nJericho\ndemo\nsuite).\nWe\nwould\ndefine\nAdder\nas\nfollows:\n(defineobjecttype\nadder\n:slot\n((status\n:truthmaintenance\nt)\n(addend\n:truthmaintenance\nt)\n(augend\n:truthmaintenance\nt)\n(sum\n:truthmaintenance\nt)))\nAnd\nwe\nwould\njoshua:tell\nthat\nthe\nvalue\nof\nthe\naddend\nof\nadder22\nis\nas\nfol\nlows:\n(tell\n[ltms:valueof\n(adder22\naddend)\n10]).\n[Note:\nIt\nwould\nbe\nan\nerror\nto\nuse\nthe\npredicate\nValueof].\n8.6.4. Slots and Attached Actions\nAnother\nfeature\nsupported\nby\nslots\nis\nthe\nability\nto\nattach\na\nLisp\nexpression\nto\na\nparticular\nslot\nwhich\nis\ntriggered\nwhenever\nthe\nvalue\nis\nchanged.\nThis\nis\nspecified\nby\nthe\n:attachedactions\nkeyword\n(the\ndefault\nis\nno\nattached\nactions).\nIf\nwe\nwant\ned\nto\nenable\nthe\nability\nto\nattach\nsuch\nLisp\nexpressions\nto\nthe\nSUM\nof\nadders\nwe\nwould\nspecify:\n\nMarch 1999\nThe Joshua Object Facility\n(defineobjecttype\nadder\n:slot\n((status\n:truthmaintenance\nt)\n(addend\n:truthmaintenance\nt)\n(augend\n:truthmaintenance\nt)\n(sum\n:truthmaintenance\nt\n:attachedactions\nt)))\nThis\nallocates\nextra\nspace\nin\nthe\nSUM\nslot\nof\nevery\nadder\nto\nhold\nthe\nattached\nlisp\nexpression.\nThe\nattached\naction\nis\nsimply\na\nLisp\nfunction\nwhich\nis\nrun\nevery\ntime\nthe\nslot\nchanges\nvalue.\nTo\nactually\nattach\nan\naction,\nthe\nfunction\nAddAction\nis\nused:\n(addaction\n'(adder22\nsum)\n#'printpathnameandvalue)\n(defun\nprintpathnameandvalue\n(cell\ncurrentvalue\npredication\nignore)\n(if\n(eql\n(predicationtruthvalue\npredication)\n*true*)\n(format\nt\n\"~&The\nvalue\nof\n~s\nis\n~s\"\ncell\ncurrentvalue)\n(format\nt\n\"~&The\nvalue\nof\n~s\nisn't\n~s\nany\nmore\"\ncell\ncurrentvalue)))\njoshua:addaction\ntakes\ntwo\nrequired\narguments\nand\none\noptional\nargument.\nThe\nfirst\nargument\nis\neither\na\npath\nto\na\nslot\nor\nan\nactual\nslot\nand\nthe\nsecond\nargument\nis\nthe\nfunction\nto\nattach\nto\nthat\nslot.\nThe\nfunction\nis\ncalled\nfor\nside\neffect;\nwhen\ninvoked,\nit\nis\npassed\nthe\nfollowing\narguments:\nthe\nslot,\nthe\ncurrentvalue\nof\nthe\nslot,\nthe\npredication\nassociated\nwith\nthe\nvalue\nof\nthe\nslot,\nand\nthe\nprevious\ntruth\nvalue\nof\nthe\npredication.\nThe\nfunction\nis\ncalled\nwhenever\nthe\nslot\nassumes\na\nnew\nvalue\nor\nwhenever\na\ncurrent\nvalue\nis\nremoved;\nthe\ntruthvalue\nof\nthe\npredication\nargument\nand\nthe\nprevious\ntruthvalue\ncan\nbe\nused\nto\ndistinguish\nthe\ntwo\ncases\n(as\nshown\nabove).\nThe\noptional\nargument\nto\njoshua:addaction\nis\na \"name\"\nfor\nthe\naction.\nIt\ndefaults\nto\n:action.\nNaming\nan\naction\nallows\nthe\nuser\nto\nattach\nmore\nthan\none\naction\nto\na\nslot.\nIndividual\nactions\nmay\nbe\nremoved\nfrom\na\nslot\nby\nusing\njoshua:remove\naction.\nAttached\nactions\ncan\nbe\nused\nfor\na\nvariety\nof\npurposes:\nFor\nexample,\nthey\ncan\nbe\nused\nto\nimplement\nvalidity\nchecks\non\nthe\nvalues\ninserted\nin\na\nslot,\nor\nthey\ncan\nbe\nused\nin\nsetvalued\nslots\nto\ncheck\nthat\nthe\ncardinality\nof\nthe\nset\nis\nwithin\nsome\nbounds.\n8.6.5. Invoking Methods Associated with the Object Associated with a Slot\nA\nfinal\ncapability\nof\nslots\nis\nthe\nability\nto\ninvoke\na\nmethod\nassociated\nwith\nthe\nob\nject\nwith\nwith\nthe\nslot\nis\nassociated\nwhenever\nthe\nvalue\nof\nthe\nslot\nchanges.\n[Note:\nThis\nis\ndifferent\nthan\nan\nattachedaction\n(see\nthe\nsection \"Slots\nand\nAttached\nAc\ntions\",\npage\n114)\nin\nthat\nan\nattachedaction\nis\nassociated\nwith\na\nparticular\nobject\nwhile\na\nmethod\nis\nassociated\nwith\nevery\nobject\nof\nthe\ntype.]\nFor\nexample,\nif\nwe\nwanted\nevery\nAdder\nto\nnotice\nthe\nchanging\nof\nits\nstatus\nattribute,\nwe\nwould\nindi\ncate\nthis\nas\nfollows:\n\nThe Joshua Object Facility\nMarch 1999\n(defineobjecttype\nadder\n:slot\n((status\n:truthmaintenance\nt\n:objectnotifying\nt)\n(addend\n:truthmaintenance\nt)\n(augend\n:truthmaintenance\nt)\n(sum\n:truthmaintenance\nt\n:attachedactions\nt)))\nWhen\nthe\nstatus\nattribute\nof\nan\nadder\nchanges,\nJoshua\nwill\ncall\nthe\n(SETF\nSTA\nTUS)\nmethod\nof\nthe\nADDER\nflavor.\nThe\narguments\npassed\nare:\nthe\nvalue\nin\nthe\nslot\nand\nthe\npredication\nassociated\nwith\nthe\nslot.\nThus,\nif\nthe\n:objectnotifying\nop\ntion\nwere\nspecified\nas\nabove,\none\nwould\nbe\nexpected\nto\ndefine\na\nmethod\nsuch\nas\nthe\nfollowing:\n(defmethod\n((setf\nstatus)\nadder)\n(currentvalue\ncurrentpredication)\n(when\n(and\n(eql\ncurrentvalue\n:broken)\n(eql\n(predicationtruthvalue\npredication)\n*true*))\n(Soundthealarm\nself)))\nwhich\nchecks\nto\nsee\nthat\nthe\ncurrent\nstate\nof\nthe\nadder\nis\n:BROKEN\nand\nif\nso,\nsounds\nits\nalarm.\n8.6.6. Equalities Between Slot Values\nWhen\nan\nobject\nis\ndecomposed\ninto\na\nsubpart\nhierarchy,\nit\noften\nhappens\nthat\nthere\nare\nconnections\nbetween\ncertain\nattributes\nof\nthe\nsubparts.\nFor\nexample,\na\n\"Voltage\nDivider\"\nis\na\nsimple\nelectrical\ncircuit\nconsisting\nof\ntwo\nconnected\nresis\ntors.\nThe\nvoltage\nat\nterminal1\nof\none\nof\nthe\ntwo\nresistors\nwill\nnecessarily\nbe\nequal\nto\nthe\nvoltage\nat\nterminal2\nof\nthe\nother\nresistor.\nThere\nwill\nbe\nsimilar\nconnections\nin\na\nfactory,\nwhere\nthe\noutput\nof\none\nmachine\nis\nthe\ninput\nof\nanother,\nor\nin\na\naccounting\nsystem\nwhere\nthe\nresult\nof\none\ncalculation\nis\nan\ninput\nto\nanother.\njoshua:defineobjecttype\nprovides\na\nmeans\nof\nexpressing\nsuch\nequalities\nas\nfollows:\n(defineobjecttype\nvoltagedivider\n:slots\n(voltage\ncurrent\noutputvoltage\nterminal1voltage\nterminal2voltage)\n:parts\n((resistor1\nresistor)\n(resistor2\nresistor))\n:equalities\n(((resistor1\ncurrent)\n(resistor2\ncurrent))\n((resistor1\ncurrent)\n(current))\n((resistor1\nterminal2voltage)\n(resistor2\nterminal1voltage))\n((resistor1\nterminal1voltage)\n(terminal1voltage))\n((resistor2\nterminal2voltage)\n(terminal2voltage))))\nwhich,\nin\neffect,\nspecifies\nthe\nwiring\ndiagram\nshown\nin\nFigure\n39.\nIf\ntwo\nslots\nare\nspecified\nto\nbe\nequal,\nthen\nany\ntime\nthe\nvalue\nof\none\nof\nthe\nslots\nis\ndetermined,\nthe\nvalue\nof\nthe\nother\nwill\nautomatically\nbe\ndeduced.\n\nMarch 1999\nThe Joshua Object Facility\nTerminal-2\nTerminal-1\nCurrent\nVoltage\nTerminal-1\nTerminal-2\nCurrent\nVoltage\nResistor-1\nResistor-2\nVoltage\nDivider's\nCurrent\nDivider's\nEquality Links\nFigure\n39.\nEquality\nLinks\nin\na\nTwo\nResistor\nVoltage\nDivider\n8.7. Other Options in Define-Object-Type\nA\nJoshua\nObject\nis,\nin\nfact,\na\nFlavor\nInstance.\nIt\nis\noften\nuseful\nto\nbe\nable\nto\nin\nclude\nin\nJoshua\nObjects\ninstance\nvariables\nwhich\ndo\nnot\nhold\nslots\nas\ntheir\nvalues.\nSimilarly,\nit\nis\nuseful\nto\nbe\nable\nto\nmix\na\nnormal\nflavor\ninto\nan\nObjectType\ndefini\ntion.\nThe\nsyntax\nof\nDefineObjectType\nsupports\nthis,\nusing\nthe\n:otherinstance\nvariables\nand\n:otherflavors\nkeyword\narguments.\nFor\nexample,\n\nThe Joshua Object Facility\nMarch 1999\n(DefineObjectType\nvoltagedivider\n:slots\n(voltage\ncurrent\noutputvoltage\nterminal1voltage\nterminal2voltage)\n:parts\n((resistor1\nresistor)\n(resistor2\nresistor))\n:otherinstancevariables\n(documentation)\n:otherflavors\n(electroniccomponentwithdocumentationmixin)\n)\nThis\nhas\nthe\neffect\nof\nmixing\nthe\nelectroniccomponentwithdocumentationmixin\nflavor\ninto\nthe\nvoltagedividers\nflavor.\nIn\naddition,\nevery\ninstance\nof\nthe\nvoltage\ndivider\nobjecttype\nwill\nhave\na \"documentation\"\ninstance\nvariable.\nFinally,\nit\nis\nsometimes\nuseful\nto\nbe\nable\nto\ninclude\nsome\ninitialization\ncode\nas\npart\nof\nthe\nDefineObjectType\nform.\nThis\ncan\nbe\ndone\nusing\nthe\n:initializations\nkey\nword\nargument.\nThe\nvalue\nof\nthis\nargument\nis\na\nlist\nof\nLisp\nforms\nwhich\nare\nrun\nafter\nan\ninstance\nof\nthe\ntype\nis\ncreated.\nIn\neffect,\nthis\ncode\nis\nappended\nto\nthe\nthe\nmakeinstance\nmethod\nof\nthe\nObjectType;\nthus,\nself\nis\nbound\nto\nthe\ncreated\nobject\nwhile\nthis\ncode\nexecutes.\nFor\nexample,\nthe\nfollowing\ndefinition\n(defineobjecttype\nmanufacturingsite\n:slots\n(productioncapacity\nclock\ninputrequest\ninputrequestacknowledge\n(output\n:attachedactions\nt))\n:otherinstancevariables\n((thingsbeingproduced\n(makeheap)))\n:initializations\n((tell\n'[valueof\n(,self\noutput)\nNIL]))\n)\ninitializes\nthe\noutput\nslot\nof\nmanufacturing\nsites\nto\nbe\nnil.\n8.8. The Predicates Used in the Joshua Object Facility\nThere\nare\nfour\nPredicates\nused\nin\nthe\nJoshua\nObject\nfacility.\nBesides\nDefine\nObjectType,\nthese\nare\nthe\nmain\ninterfaces\nto\nthe\nfacility.\nEach\nof\nthese\npredicates\nis\nsupplied\nin\ntwo\nforms:\nThe\nfirst\nmixes\nin\nthe\nstandard\nJoshua\nTMS\ncapabilities\n(ltms::ltmspredicatemixin)\nwhile\nthe\nsecond\nomits\nTMS\ncapabilities\n(and\nis\nbased\non\njoshua:defaultpredicatemodel).\nThe\nbasic\ncapabilities\nof\neach\nof\nthe\nfour\npredicates\nis\nsupplied\nas\na\nPredicateModel\nwhich\ncan\nbe\ncombined\nwith\nuser\nsup\nplied\nPredicateModels\nto\nprovide\nwhatever\ncapabilities\nyou\nneed.\nThe\nfour\npredicates\nare:\n\nMarch 1999\nThe Joshua Object Facility\nPurpose\nWithout\nTMS\nWith\nTMS\nModel\nmixin\nSlot\nAccessing\nvalueof\nltms:valueof\nslotvaluemixin\nPartWhole\npartof\nltms:partof\npartofmixin\nObjectType\nobjecttypeof\nltms:objecttypeof\ntypeofmixin\nEquality\nequated\nltms:equated\nequatedmixin\njoshua:partof\nand\njoshua:objecttypeof\nare\naskonly\npredicates;\nthey\ncannot\nbe\nused\nin\njoshua:tell.\nThis\nis\nbecause\nthe\ninformation\nthey\nrefer\nto\nis\nthe\nunchange\nable\ninformation\nof\nthe\npartwhole\nand\nobjecttype\nhierarchies\ncreated\nby\njoshua:defineobjecttype.\njoshua:valueof\nis\nthe\nnormal\nway\nof\naccessing\nthe\nval\nues\nof\nslots;\nwe\nhave\nseen\nexamples\nof\nits\nuse\nabove.\njoshua:equated\ncan\nbe\nused\nto\ncreate\nequalities\nnot\nspecified\nby\njoshua:defineobjecttype.\nFor\nexample:\n(let\n((warehouse1\n(makeobject\n'warehouse\n:name\n'warehouse1))\n(factory1\n(makeobject\n'factory1\n:name\n'factory1)))\n(tell\n'[equated\n(warehouse1\noutput)\n(factory1\ninput)]))\nconnects\nthe\noutput\nslot\nof\nWarehouse1\nto\nthe\ninput\nslot\nof\nFactory1.\n\nThe Joshua Object Facility\nMarch 1999\n\nMarch 1999\nJoshua Language Dictionary\n9. Joshua Language Dictionary\n9.1. Dictionary Entries\njoshua:actontruthvaluechange\ndatabasepredication\noldtruth\nGeneric\nFunction\nvalue\ndatabasepredication\nA\npredication\noldtruthvalue\nThe\ntruth\nvalue\nthat\njust\nchanged\nCalled\nwhenever\nthe\ntruthvalue\nof\npredication\nchanges\nfrom\noldtruthvalue\nto\nsome\nnew\ntruthvalue.\nThe\nnew\ntruthvalue\nis\navailable\nin\nthe\npredica\ntion\nby\nthe\ntime\nactontruthvaluechange\nis\ncalled.\nIt\ncan\nbe\nexamined\nus\ning\njoshua:predicationtruthvalue.\nThis\nprotocol\nfunction\nallows\nyou\nto\ntake\nactions\nthat\ndepend\non\nthe\ntruth\nvalue\nof\na\npredication\nas\nthe\ntruth\nvalues\nchange.\n(You\nmight\nwant\nto\ndo\nthat,\nfor\nexample,\nin\nadvanced\nuses\nof\nmodeling.)\nWhen\na\npredication\nchanges\ntruthvalue,\nthe\nTMS\nmay\nmake\nseveral\nother\npredications\nto\nchange\ntheir\ntruthvalues\nas\nwell.\nThe\nTMS\nis\nresponsible\nfor\nfirst\ncalling\njoshua:noticetruthvaluechange\non\nevery\nchanged\npredi\ncation\nbefore\nthis\nprotocol\nfunction\nis\ninvoked.\nThus\nwhenever\nan\njoshua:actontruthvaluechange\nmethod\nis\ncalled,\nit\nmay\nsafely\nassume\nthat\nthe\nworld\nhas\nbeen\nupdated\ninto\na\nconsistent\nstate.\nSee\nthe\nsections\non \"Signalling\nTruth\nValue\nChanges\"\nand\njoshua:notice\ntruthvaluechange\njoshua:addaction\nslotorpath\nfunction\n&optional\n(name\n:action)\nGeneric\nFunction\nThis\nfunction\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nallows\nactions,\nwhich\nare\narbitrary\nfunctions,\nto\nbe\nassociated\nwith\na\nslot\nof\na\nJoshua\nobject.\nThe\nfunction\nwill\nbe\ncalled\nwhenever\nthe\nvalue\nof\na\nslot\nchanges.\nThe\nfunction\nis\ncalled\nfor\nside\neffect;\nwhen\ninvoked,\nit\nis\npassed\nthe\nfollow\ning\narguments:\nthe\nslot,\nthe\ncurrentvalue\nof\nthe\nslot,\nthe\npredication\nasso\nciated\nwith\nthe\nvalue\nof\nthe\nslot,\nand\nthe\nprevious\ntruthvalue\nof\nthe\npredi\ncation.\nThe\nfunction\nis\ncalled\nwhenever\nthe\nslot\nassumes\na\nnew\nvalue\nor\nwhenever\na\ncurrent\nvalue\nis\nremoved;\nthe\ntruthvalue\nof\nthe\npredication\nar\ngument\nand\nthe\nprevious\ntruthvalue\ncan\nbe\nused\nto\ndistinguish\nthe\ndiffer\nent\npossibilities.\nActions\nmay\nbe\nremoved\nfrom\nslots\nby\nusing\njoshua:removeaction.\nThe\noptional\nargument\nto\njoshua:addaction\nis\na \"name\"\nfor\nthe\naction.\nIt\ndefaults\nto\n:action.\nNaming\nan\naction\nallows\nthe\nuser\nto\nattach\nmore\nthan\none\naction\nto\na\nslot.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:addbackwardquestiontrigger\npredication\ntruthvalue\nGeneric\nFunction\ntriggerobject\ncontext\nquestionname\npredication\nThe\npattern\nunder\nwhich\nthe\nbackward\nquestion\nis\nto\nbe\nindexed.\ntruthvalue\nThe\ntruth\nvalue\nunder\nwhich\nthe\npattern\nis\nto\nbe\nin\ndexed.\ntriggerobject\nThe\nbackward\nquestion\ntrigger\ndatastructure\nto\nbe\nin\ndexed.\ncontext\nThe\ncontext\nof\nthe\nbackward\nquestion.\nUseful\nin\nad\nvanced\nmodeling\napplications.\nquestionname\nThe\nname\nof\nthe\nbackward\nquestion\nbeing\nindexed.\nTailoring\nof\nbackwardquestion\nindexing\nis\nusually\naccomplished\nby\nprovid\ning\nmethods\nfor\nthe\njoshua:locatebackwardquestiontrigger\nand\njoshua:mapoverbackwardquestiontriggers\nprotocol\nfunctions.\nThe\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackward\nquestiontrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locate\nbackwardquestiontrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nproviding\na\njoshua:locatebackward\nquestiontrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nquestions\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nap\nplications\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:addbackwardquestiontrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nJoshua\nQuestion\nIndexing\nProtocol\",\npage\n48.\njoshua:addbackwardruletrigger\npredication\ntruthvalue\ntrigger\nGeneric\nFunction\nobject\ncontext\nrulename\npredication\nThe\npattern\nunder\nwhich\nthe\nbackward\nrule\nis\nto\nbe\nin\ndexed.\ntruthvalue\nThe\ntruth\nvalue\nunder\nwhich\nthe\nbackward\nrule\nis\nto\nbe\nindexed.\ntriggerobject\nThe\nbackward\nrule\ntrigger\ndatastructure\nto\nbe\nindexed.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nin\nadvanced\nmod\neling\napplications.\nrulename\nThe\nname\nof\nthe\nrule\nbeing\nindexed.\nTailoring\nof\nbackward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locatebackwardruletrigger\nand\njoshua:map\noverbackwardruletriggers\nprotocol\nfunctions.\nThe\njoshua:addbackward\nruletrigger\nand\njoshua:deletebackwardruletrigger\nmethods\nprovided\nas\n\nMarch 1999\nJoshua Language Dictionary\nJoshua's\ndefaults\ncall\njoshua:locatebackwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nprovid\ning\na\njoshua:locatebackwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nappli\ncations\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:addbackwardruletrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nContract\nof\nthe\nTrigger\nAdding\nFunctions\",\npage\n38.\njoshua:addforwardruletrigger\npredication\ntruthvalue\ntrigger\nGeneric\nFunction\nobject\ncontext\nrulename\npredication\nThe\npattern\nunder\nwhich\nthe\nforward\nrule\nis\nto\nbe\nin\ndexed.\ntruthvalue\nThe\ntruth\nvalue\nunder\nwhich\nthe\npattern\nis\nto\nbe\nin\ndexed.\ntriggerobject\nThe\nforward\nrule\ntrigger\ndatastructure\nto\nbe\nindexed.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nin\nadvanced\nmod\neling\napplications.\nrulename\nThe\nname\nof\nthe\nrule\nbeing\nindexed.\nTailoring\nof\nforward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locateforwardruletrigger\nand\njoshua:mapover\nforwardruletriggers\nprotocol\nfunctions.\nThe\njoshua:addforwardrule\ntrigger\nand\njoshua:deleteforwardruletrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locateforwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nprovid\ning\na\njoshua:locateforwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nappli\ncations\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:addforwardruletrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nContract\nof\nthe\nTrigger\nAdding\nFunctions\",\npage\n38.\njoshua:ask\nquery\ncontinuation\n&key\n(:dobackwardrules\nt)\n:do\nFunction\nquestions\nQueries\nthe\nvirtual\ndatabase\nand\nbackward\nrules\nand\nquestions.\nNote:\njoshua:ask\nis\na\nmacro,\nand\nas\nsuch\nit\ncannot\nbe\nused\nas\nan\nargu\nment\nto\nthe\nfunction\nfuncall.\nquery\nShould\nbe\na\npredication.\n\nJoshua Language Dictionary\nMarch 1999\ncontinuation\nShould\nbe\na\nfunction\nof\none\nargument,\ndescribing\nwhat\nyou\nwant\ndone\nwith\nthe\nanswers\nto\nthe\nquery.\nNote\nthat\nthe\nargument\ngiven\nto\ncontinuation\nmight\nbe\nephemeral\nin\none\nof\ntwo\nways:\nit\ncould\nbe\nstackconsed,\nand\nit\ncould\ncontain\nlogic\nvariables\nwhose\nbindings\nwill\nbe\nundone\nwhen\nyou\nexit\nthis\nframe.\nInstantiated\nqueries\nalmost\nalways\nneed\nto\nbe\ncopied\nwith\njoshua:copyobjectifnecessary,\nbecause\nthe\nvariable\nbindings\nare\nephemeral.\nSee\nexample\nbelow.\nIf,\non\nthe\nother\nhand,\nyou\nare\ncollecting\ndatabase\npredi\ncations,\nthey\nare\nnot\nephemeral,\nand\nyou\ndon't\nwant\nto\ncopy\nthem.\n(Copying\na\ndatabase\npredication\ncauses\nloss\nof\nthe\ndatabase\ninformation\nassociated\nwith\nthe\npredi\ncation.)\nKeywords:\n:dobackwardrules\nIf\nthis\nkeyword\nhas\na\nnonnil\nvalue,\nbackward\nchaining\nrules\nare\nchecked\nfor\nsolutions.\nThe\ndefault\nis\nt.\nUse\n:dobackwardrules\nnil\nto\ncheck\nout\njust\nthe\ndatabase\nsolution.\n:doquestions\nIf\nthis\nkeyword\nhas\na\nnonnil\nvalue,\nany\nquestions\nthat\nclaim\nto\nanswer\nquery\nare\nrun\nto\nsolicit\nmore\nsolutions\nfrom\nthe\nuser.\nThe\ndefault\nis\nnil.\njoshua:ask\nuses\nthe\ndatabase,\nbackward\nrules,\nand\nquestions\nto\nsatisfy\nthe\nquery\npredication.\nEach\ntime\njoshua:ask\nfinds\na\nsolution\nto\nquery\nit\ncalls\nthe\ncontinuation,\npassing\nit\na\nlist\nthat\ncontains\nthe\nanswer\nand\ninformation\nabout\nhow\nthe\nanswer\nwas\nderived.\njoshua:ask\ndoesn't\nreturn\nan\ninteresting\nvalue.\nNormally\nthe\ncontinuation\nperforms\nsome\naction\nwith\neach\nsolution.\nYou\ncan\ncollect\nvalues\nin\nthe\ncon\ntinuation,\nor\nreturn\na\nvalue\nto\nsome\ncaller\nof\njoshua:ask\nusing\nthrow,\nreturnfrom,\nor\nsome\nsimilar\nLisp\nform.\nSuch\nuses\nof\nthrow\nand\nreturn\nfrom\nare\nlike\nthe\nProlog\ncut\nfeature.\nSee\nexamples\nthrough\n9.\nAny\nlogic\nvariables\nused\nin\nquery\ncan\nbe\nreferred\nto\nas\nthough\nthey\nwere\nlexical\nLisp\nvariables\nwithin\ncontinuation;\njoshua:ask\nestablishes\na\nbinding\ncontour\nfor\nthe\nlogic\nvariables.\n(See\nexample\nbelow.)\nIn\nthis\nsense,\njoshua:ask\nis\nlike\nlet\ncombined\nwith\nmapc.\nLike\nlet,\njoshua:ask\nestablish\nes\nlexical\nbinding\ncontours\nfor\nthe\nlogic\nvariables\nin\nthe\nquery.\nLike\nmapc,\nit\niteratively\ncalls\nthe\ncontinuation\non\nthe\nanswer.\nFor\na\ndiscussion\nof\nscop\ning\nrules:\nSee\nthe\nsection \"Variables\nand\nScoping\nin\nJoshua\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:ask\ncalls\nthe\ncontinuation\nfunction\nwith\na\nsingle\nargument,\nback\nwardsupport,\na\nlist\ncontaining\ninformation\nabout\nthe\nsolution\nprocess.\nThe\nlist\ncontains\nthe\ninstantiated\nquery,\nits\ntruth\nvalue,\nand\nthe\nsupport\nfor\nthe\nquery;\nthe\nform\nof\nthe\nsupport\nvaries,\ndepending\non\nhow\nthe\nquery\nwas\nsat\nisfied.\n\nMarch 1999\nJoshua Language Dictionary\nTypically\nyou'll\nwant\nto\ndeal\nonly\nwith\npart\nof\nthe\ninformation\nprovided\nin\nbackwardsupport\nrather\nthan\nwith\nthe\nentire\nlist.\nFor\ninstance,\nyou\nmight\nwant\nto\nsee\nonly\nthe\nanswer,\nor\nonly\nthe\ndatabase\npredication\nthat\nmatched\nthe\nanswer,\nor\nonly\nthe\nsupport\nfor\nthe\nanswer.\nJoshua\nsupplies\naccessor\nfunctions\nto\nextract\nvarious\nelements\nof\nthe\nlist\nin\nbackwardsupport,\nmaking\nit\navailable\nto\nyou\nfor\ninterpretation.\nIn\naddition,\nJoshua\nprovides\nconvenience\nfunctions\nthat\nextract\nsome\nelement\nof\nthe\nlist\nin\nbackwardsupport\nand\ninterpret\nit\nfor\nyou.\nThese\nfunctions\nlet\nyou\npostpone\ndealing\nwith\nthe\ndetails\nof\nbackwardsupport\nand\naccessor\nfunctions\nuntil\nyou\nneed\nthem\nfor\nmore\nadvanced\nwork.\nSo\nbefore\nreading\non\nyou\nmight\nwant\nto\nskip\nahead\nto\nthe\nsection \"Streamlining\nTypical\nCon\ntinuation\nRequests\nwith\nConvenience\nFunctions\"\nand\nsee\nif\nthese\nfunctions\nmeet\nyour\ncurrent\nneeds.\nContinuation Argument\nbackwardsupport\nA\nlist\nof\nthe\nfollowing\nform:\n-\nThe\nfirst\nelement\nis\nalways\nthe\nunified\nquery,\nthat\nis,\nthe\nquery\nthat\nwas\npassed\nto\njoshua:ask,\nwith\nappropriate\nvariables\ninstantiated\nas\na\nside\neffect\nof\nunification.\n-\nThe\nsecond\nelement\nis\nthe\ntruth\nvalue\nof\nthe\nquery.\nThis\ncorresponds\nto\nthe\ntruth\nvalue\nof\nthe\nmatching\npredication\nin\nthe\ndatabase\nat\nthe\ntime\njoshua:ask\nlooked\nat\nit.\n-\nThe\nrest\nof\nthe\nelements\nare\nthe\nsupport\nfor\nthe\ninstantiated\nquery.\nThe\nsupport\ncan\ntake\nseveral\nforms,\ndepending\non\nhow\nthe\nquery\nwas\nsatis\nfied.\n°\nWhen\nthe\nquery\nis\nsatisfied\nby\nmatching\na\npredication\nin\nthe\ndatabase,\nthe\nsupport\nis\nthat\ndatabase\nobject.\n°\nWhen\nthe\nquery\nanswer\ncomes\nfrom\na\nconjunction\n(and),\nthe\nsupport\nis\nthe\nsymbol\nand,\nfollowed\nby\nthe\nbackward\nsupport\nfor\neach\nof\nthe\ncompound\npredications.\n°\nWhen\nthe\nquery\nanswer\ncomes\nfrom\na\ndisjunction\n(or),\nthe\nsupport\nis\nthe\nsymbol\nor,\nfollowed\nby\nthe\nsupport\nfor\nthe\nsingle\npredication\nfrom\nthe\nor\nthat\nsucceeded.\n°\nWhen\nthe\nquery\nanswer\nis\nderived\nfrom\na\nbackward\nrule,\nthe\nsupport\nhas\nthe\nformat\n((rule\nrulename)\n.\nrulesupport)\nwhere\n\nJoshua Language Dictionary\nMarch 1999\n-\nrule\nis\nthe\nsymbol\nrule\n-\nrulename\nis\nthe\nname\nof\nthe\nrule\nused\nto\nsatisfy\nthe\nquery\n-\nrulesupport\nis\na\nlist\ncontaining\n(recursively)\nthe\nbackward\nsupport\nused\nto\nsatisfy\nparts\nof\nthe\nrule\nbody.\n°\nWhen\nthe\nquery\nanswer\ncomes\nfrom\na\nquestion,\nthe\nsupport\nis\nlike\nthat\nfor\nrules,\nexcept\nthat\nit\nuses\nthe\nquestion\nname\ninstead\nof\nthe\nrule\nname.\n°\nWhen\nthe\nquery\nanswer\ncomes\nfrom\nthe\npredicates\njoshua:known\nor\njoshua:provable,\nthe\nsupport\nis\nthe\nrespective\nsymbol\nname\n(joshua:known\nor\njoshua:provable),\nfollowed\nby\nthe\nsupport\nfor\nthe\npredication\nthat\nserved\nas\nthe\nsymbol's\nargument.\n°\nWhen\nthe\nquery\noriginates\nfrom\nan\njoshua:ask\nor\nan\njoshua:askdata\nmethod,\nthe\nsupport\nis\nwhatever\nthe\nwriter\nof\nthat\nmethod\nprovided.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.\nIn\nschematic\nform,\nthe\nbackwardsupport\nlist\nlooks\nas\nfollows:\nThe\nbackwardsupport\nlist:\n(<unified\nquery>\n<truthvalue>\n.\n<derivation>)\n(<(unified)\nquery>)\n(<t/f>)\n(<derivation>)\nPossibilities\nfor\nthese\nelements\nare:\n(<database\npredication>)\n(AND\n<conjunct1\nderivation>\n<conjunct2\nderivation>\n...)\n(OR\n<successful\ndisjunct\nderivation>)\n((RULE\n<rule\nname>)\n<conjunct1\nt/f\nderivation>\n<conjunct2\nt/f\nderivation>\n...)\n((QUESTION\n<question\nname>)\n<succeed\nargument>)\n(KNOWN\n<derivation>)\n(PROVABLE\n<derivation>)\nExtracting Parts of the Continuation with Accessor Functions\nJoshua\nprovides\nfour\naccessor\nfunctions\nto\nextract\nspecific\nportions\nof\nback\nwardsupport.\nUse\nthese\nfunctions\nif\nyou\nwant\nto\ninterpret\nthe\nanswer\nyour\nself.\nUse\nthe\nconvenience\nfunctions\ndescribed\nbelow\nif\nyou\nwant\nthe\nsystem\nto\ninterpret\nthe\ninformation\nfor\nyou.\njoshua:askquery\nExtracts\nthe\ninstantiated\nquery\n(the\nfirst\nelement)\nfrom\nbackwardsupport.\nFor\nexample:\n(ask\n[...]\n#'(lambda\n(backwardsuppport)\n(print\n(askquery\nbackwardsupport))))\n\nMarch 1999\nJoshua Language Dictionary\njoshua:askquerytruthvalue\nExtracts\nthe\ntruth\nvalue\nof\nthe\ninstantiated\nquery\n(the\nsecond\nelement)\nfrom\nbackwardsupport.\nFor\nexample:\n(ask\n[...]\n#'(lambda\n(backwardsupport)\n(print\n(askquerytruthvalue\nbackwardsupport))))\njoshua:askdatabasepredication\nExtracts\nthe\ndatabase\nobject\nthat\nmatched\nquery.\nIf\nthe\nbackward\nsupport\nis\na\nrule,\ndisplays\nthe\nrule\nname\n(see\nexample\n4).\nUse\nthis\nfunction\nonly\nwhen\nyou\nknow\nthe\nsupport\nis\na\ndatabase\nobject\n(that\nis,\nwith\n:do\nbackwardrules\nnil.\nFor\nexample:\n(ask\n[...]\n#'(lambda\n(backwardsupport)\n(print\n(askdatabasepredication\nbackwardsupport)))\n:dobackwardrules\nnil)\njoshua:askderivation\nExtracts\nthe\nsupport\ninformation\nin\nbackwardsupport.\nMakes\nfewer\nassumptions\nthan\njoshua:askdatabase\npredication\nabout\nwhere\nthe\nsupport\ncame\nfrom.\nFor\nexample:\n(ask\n[...]\n#'(lambda\n(backwardsupport)\n(print\n(askderivation\nbackwardsupport))))\nStreamlining Typical Continuation Requests with Convenience Functions\nWhen\nan\njoshua:ask\nquery\nsucceeds,\nthere\nare\nsome\nstandard\nthings\nyou\nmight\nwant\nto\ndo\nwith\nthe\nanswer,\nsuch\nas:\nprinting\nor\nformatting\nthe\nuni\nfied\nquery,\noperating\non\nthe\ndatabase\npredication\nsupporting\nthe\nquery,\nor\ninterpreting\nall\nof\nthe\nbackward\nsupport.\nJoshua\nprovides\nfive\nconvenience\nfunctions\nthat\nextract\nan\nappropriate\npart\nof\nthe\nanswer\nand\ninterpret\nit\nin\nsome\nspecific\nway.\nThe\nfirst\nfour\nare\njoshua:ask\ncontinuation\nfunctions.\nThe\nfifth\nis\na\nspecialpurpose\nfunction\nthat\nlets\nyou\ndo\ndatabase\nlookup\nonly,\nand\ninterpret\nthe\nanswer\nin\nsome\nway.\njoshua:mapoverdatabasepredications\nuses\njoshua:ask\nto\nsearch\nthe\ndatabase\nand\nextract\nthe\npredication(s)\nmatching\nits\nargument\npattern.\nThese\nfunctions\nare:\njoshua:printquery\nExtracts\nand\ndisplays\nthe\nunified\nquery.\nFor\nexam\nple:\n(ask\n[...]\n#'printquery)\njoshua:sayquery\nExtracts\nthe\nunified\nquery\nand\ndisplays\nit\nin\nformat\nted\nform.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:printqueryresults\nTakes\nthe\ninformation\nin\nbackwardsupport\nand\ndis\nplays\nit\nwith\nannotations.\njoshua:graphqueryresults\nThe\nabove\nin\ngraph\nform.\njoshua:mapoverdatabasepredications\nFor\nspecial\ncases\nof\nthe\nsolution\nprocess,\nwhere\nyou\nlook\nonly\nin\nthe\ndatabase\nfor\nan\nanswer,\nextracts\nall\ndatabase\npredications\nthat\nunify\nwith\na\npredication\npattern\nand\napplies\nsome\nfunction\nto\neach.\nFor\nex\nample:\n(mapoverdatabasepredications\n[foo\n?x]\n#'untell)\njoshua:mapoverdatabasepredications\nis\nequiva\nlent\nto:\n(ask\nquery\n#'(lambda\n(x)\n(funcall\ncontinuation\n(askdatabasepredication\nx)))\n:dobackwardrules\nnil)\nWe\nuse\nsome\nof\nthe\nconvenience\nfunctions\nin\nthe\nexamples\nto\njoshua:ask.\nFor\nmore\non\neach\nfunction,\nplease\nconsult\nits\ndictionary\nentry.\nExamples of Using joshua:ask\nLet's\ndefine\nsome\npredicates,\nenter\nthem\ninto\nthe\ndatabase,\nthen\nadd\na\nbackward\nrule\nand\na\nbackward\nquestion.\nThe\nrule\ndetermines\nwhat\nis\nan\neater's\nfavorite\nfood.\nThe\nquestion\nelicits\ninformation\nto\nsatisfy\nthe\nrule's\nsubgoal.\n(definepredicate\nfavoritemeal\n(eater\nfood))\n(definepredicate\nguzzles\n(eater\nfood))\n(defun\neatit\n()\n(clear)\n(tell\n[and\n[favoritemeal\nbears\nhoney]\n[favoritemeal\nmosquitoes\npeople]\n[favoritemeal\nspiders\nflies]\n[favoritemeal\nmonkeys\nbananas]\n[guzzles\nted\nicecream]])\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\n\nMarch 1999\nJoshua Language Dictionary\nShow\nJoshua\nDatabase\nTrue\nthings\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\n[GUZZLES\nTED\nICECREAM]\nFalse\nthings\nNone\n(defrule\nnotfinicky\n(:backward)\nif\n[guzzles\n?eater\n?food]\nthen\n[favoritemeal\n?eater\n?food])\n(defquestion\nguzzler?\n(:backward)\n[guzzles\n?eater\n?food])\nNext\nwe\njoshua:ask\nwhat\nJoshua\nknows\nabout\neverybody's\nfavorite\nmeals.\nExample\nuses\nthe\nvariables\nin\nthe\nunified\nquery\nto\nprint\nan\nEnglishlike\nsentence\n(not\nfussy\nabout\nnumber\nagreement\nbetween\nsubject\nand\nverb)\nabout\neverybody's\nmeals.\nIt\nignores\nthe\nbackwardsupport\nargument\nand\nus\nes\na\nformat\ndirective.\nIt\nlooks\nin\nthe\ndatabase\nand\nrules,\nbut\nnot\nin\nques\ntions.\nExample\n1.\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(ignore)\n(format\nt\n\"~%~S\nis\nthe\npreferred\nfood\nof\n~S.\"\n?food\n?eater)))\nBANANAS\nis\nthe\npreferred\nfood\nof\nMONKEYS.\nFLIES\nis\nthe\npreferred\nfood\nof\nSPIDERS.\nPEOPLE\nis\nthe\npreferred\nfood\nof\nMOSQUITOES.\nHONEY\nis\nthe\npreferred\nfood\nof\nBEARS.\nICECREAM\nis\nthe\npreferred\nfood\nof\nTED.\nExample\nprints\nthe\ninstantiated\nquery\nfor\neverybody's\nmeals,\nusing\nthe\nconvenience\nfunction,\njoshua:printquery.\nIt\nuses\nthe\ndatabase\nonly,\nignor\ning\nboth\nrules\nand\nquestions.\nExample\n2.\n(ask\n[favoritemeal\n?eater\n?food]\n#'printquery\n:dobackwardrules\nnil)\n;print\njust\nthose\nin\nthe\ndatabase\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nBEARS\nHONEY]\nExample\nprints\nthe\ninstantiated\nquery\nfor\nthe\nmeals\nof\nbears,\nusing\nthe\nconvenience\nfunction,\njoshua:printquery.\nIt\nlooks\nin\nthe\ndatabase\nand\nbackward\nrules,\nbut\nnot\nin\nquestions.\n\nJoshua Language Dictionary\nMarch 1999\nExample\n3.\n(ask\n[favoritemeal\nbears\n?food]\n#'printquery)\n;print\nout\nbears'\nfavoritemeal\nfoods\n[FAVORITEMEAL\nBEARS\nHONEY]\nExample\nprints\nthe\npredication\nobject\nthat\nsatisfied\nthe\nquery\nfor\nevery\nbody's\nmeals\nusing\nthe\naccessor\nfunction\njoshua:askdatabasepredication.\nIt\nlooks\nin\nthe\ndatabase\nand\nbackward\nrules,\nbut\nnot\nin\nquestions.\nNotice\nthat\nwhen\nthe\nquery\nis\nsatisfied\nfrom\na\nrule,\nthe\nrule\nname\nis\nprinted,\nnot\na\npredication\nobject.\nIt\nis\nbest\nto\nuse\njoshua:askdatabasepredication\nwith\n:dobackwardrules\nnil,\nthat\nis,\nwhen\nyou\nknow\nthe\nsupport\nis\nonly\nin\nthe\ndatabase.\nExample\n4.\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(print\n(askdatabasepredication\nbackwardsupport))))\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nBEARS\nHONEY]\n(RULE\nNOTFINICKY)\nExample\nprints\nthe\ninstantiated\nquery\nfor\neverybody's\nmeals.\nIt\nuses\nthe\ndatabase,\nbackward\nrules,\nand\nquestions.\nNote\nthat\nwe\nsupplied\njust\none\nan\nswer\ninteractively\nto\nthe\nquestion,\nalthough\nwe\ncould\nhave\nsupplied\nmore.\nExample\n5.\n(ask\n[favoritemeal\n?eater\n?food]\n#'printquery\n:doquestions\nt)\n;look\nfor\nbackward\nquestions\nas\nwell\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nTED\nICECREAM]\n[FAVORITEMEAL\nCHRISTOPHER\nBANANAPIE]\nExample\ncollects\na\nlist\nof\npatterns\nthat\ndescribe\neverybody's\nmeals.\nIt\nus\nes\nthe\ndatabase\nand\nrules,\nbut\nnot\nquestions.\nNote\nthe\nuse\nof\njoshua:copy\nobjectifnecessary.\nThis\nis\nbecause\nthe\nbindings\nin\nthe\nquery\nare\nundone\n\nMarch 1999\nJoshua Language Dictionary\nupon\nexit\nfrom\nthe\ncontinuation,\nso\nwe\nmust\nmake\na\ncopy\nin\nwhich\nto\npre\nserve\nthem.\nNote\nthat\nthe\nresulting\nlist\nis\nnot\na\nlist\nof\nthings\nthat\nare\nin\nthe\ndatabase,\nbut\nrather\na\nlist\nof\nfreefloating\npredications\nthat\nare\ncopies\nof\nthe\nquery.\nIf\nyou\nwant\nthe\nlatter,\nuse\njoshua:askdatabasepredication\nwith\n:do\nbackwardrules\nnil\nand\ndon't\ncopy\nit.\nSee\nexample\n7.\nExample\n6.\n(defun\ncollectanswers\n()\n(let\n((answers\nnil))\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(push\n(copyobjectifnecessary\n(askquery\nbackwardsupport))\nanswers)))\nanswers))\nCOLLECTANSWERS\n(collectanswers)\n([FAVORITEMEAL\nTED\nICECREAM]\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS])\nExample\nis\nidentical\nto\nexample\n6,\nexcept\nthat\nhere\nwe\ncollect\ndatabase\npredications\ninstead\nof\ninstantiated\nqueries,\nand\nthe\nformer\ndon't\nneed\nto\nbe\ncopied.\nSince\nwe\nare\nonly\nlooking\nin\nthe\ndatabase\nwe\nspecify\n:dobackward\nrules\nnil.\n(defun\ncollectanswersdatabasepredications\n()\n(let\n((answers\nnil))\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(push\n(askdatabasepredication\nbackwardsupport)\nanswers)\n:dobackwardrules\nnil))\nanswers))\nCOLLECTANSWERSDATABASEPREDICATIONS\n(collectanswersdatabasepredications)\n([FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS])\nBetter\nstyle\nfor\nthe\nabove\nexample\nwould\nbe:\n(collectanswersdatabasepredications2\n()\n(let\n((answers\nnil))\n(mapoverdatabasepredications\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(dbpredication)\n(push\ndbpredication\nanswers)))\nanswers))\n\nJoshua Language Dictionary\nMarch 1999\nOften\nyou're\ninterested\nin\nwhether\nthere\nis\na\nsolution,\nbut\nnot\nany\nparticu\nlar\nsolution.\nExample\nillustrates\nthe\nuse\nof\nreturnfrom\nin\na\ncontinuation\nto\nreturn\nwhen\nthe\nfirst\nsolution\nis\nfound.\nExample\n8.\n(defun\nsolutionexistsp\n()\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(ignore)\n(returnfrom\nsolutionexistsp\nt)))\n;;\nreturn\nnil\nif\nnothing\nsucceeded\nnil))\n(solutionexistsp)\nT\nExample\nis\nlike\nthe\nexample\nabove,\nbut\nit\nreturns\na\ncopy\nof\nthe\nquery,\nin\nstead\nof\na\nboolean.\nThis\nis\nuseful\nif\nyou\nwant\nto\nknow\nsomething\nabout\nthe\nsolution,\nin\naddition\nto\nits\nexistence.\n(However,\nif\nyou\nwant\nto\nuse\ndatabase\nrelated\nproperties,\nsuch\nas\nTMSrelation,\nuse\njoshua:askdatabase\npredication\nand\ndon't\ncopy\nit).\nExample\n9.\n(defun\nfirstsolution\n()\n(block\nfindasolution\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(returnfrom\nfindasolution\n(copyobjectifnecessary\n(askquery\nbackwardsupport)))))\n;;\nreturn\nnil\nif\nnothing\nsucceeded\nnil))\n(firstsolution)\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\nModeling\nNote:\nChances\nare\nthat\nyou\nseldom\nwant\nto\ndefine\na\nmethod\nthat\ntakes\nover\nthe\nentire\nfunctionality\nof\njoshua:ask.\nIt's\nmore\nlikely\nyou\nwant\nto\ndefine\na\nmethod\nfor\none\nof\nthe\ngeneric\nfunctions\nit\ncalls,\nsuch\nas\njoshua:fetch,\njoshua:askdata,\njoshua:askrules,\njoshua:askquestions,\nor\njoshua:map\noverforwardruletriggers.\nAlso,\nthere\nis\na\nsys:downwardfunarg\ndeclaration\non\ncontinuation,\nso\nyour\nimplementations\nof\njoshua:ask\nshould\nnot\nuse\ncontinuation\nin\nother\nthan\nstacklike\nways.\nRelated\nFunctions:\njoshua:tell\njoshua:clear\njoshua:copyobjectifnecessary\njoshua:mapoverdatabasepredications\n\nMarch 1999\nJoshua Language Dictionary\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\nSee\nthe\nsection\n\"Customizing\nthe\nData\nIndex\",\npage\n81.\njoshua:askdata\npredication\ntruthvalue\ncontinuation\nGeneric\nFunction\npredication\nA\npredication\nto\nsearch\nfor.\ntruthvalue\nThe\ntruth\nvalue\nbeing\nasked\nabout.\nMust\nbe\neither\njoshua:*true*\nor\njoshua:*false*.\ncontinuation\nA\nfunction\nto\nbe\ncalled\nwhen\nthe\ndata\nis\nfound.\njoshua:askdata\nis\nthe\ndatabase\npart\nof\nthe\njoshua:ask\nprotocol.\nIt\nis\nan\nintermediate\nlevel\nof\nthe\nprotocol,\nbetween\njoshua:ask\nand\njoshua:fetch.\nIt\nis\ncalled\nby\nthe\ndefault\njoshua:ask\nmethod,\nand\nthe\ndefault\nmethod\nfor\njoshua:askdata\ncalls\njoshua:fetch.\nYou\nwill\nprobably\nnot\ncall\nthis\nfunction\ndirectly,\nexcept\nwhen\nwriting\njoshua:ask\nmethods.\nMore\ncommonly,\nyou\nmight\nwrite\nyour\nown\njoshua:askdata\nmethod\nas\na\nkind\nof\ndata\nmodeling.\nThe\ncomplete\ncontract\nof\njoshua:askdata\nis:\n-\nLook\nin\nthe\nvirtual\ndatabase\nfor\npredication\nor\nanything\nwhich\nunifies\nwith\nit.\n-\nMake\nsure\nthat\nthe\ncurrent\ntruth\nvalue\nof\nthe\nentry\nin\nthe\ndatabase\nmatches\ntruthvalue.\n-\nUnify\nself\nwith\na\ncopy\nof\nthe\ndatabase\npredication.\n-\n(Assuming\nall\nhas\ngone\nwell\nso\nfar)\nbuild\nthe\nappropriate\nbackward\nsup\nport\nand\ncall\ncontinuation\nwith\nthe\nbackward\nsupport.\nThe\nbackward\nsupport\nfor\nan\njoshua:askdata\nmethod\nshould\nbe\na\nlist\nof\nthree\nelements:\n-\nself,\nthe\n(now\nunified)\nquery\npredication.\n-\ntruthvalue,\nthe\ntruth\nvalue\nbeing\njoshua:asked.\n-\nThe\nderivation.\nThis\nwill\nusually\nbe\nthe\ndatabase\npredication.\nIf\nthere\nis\nno\ndatabase\npredication,\nthis\nshould\nbe\nsome\nother\nindication\nof\nthe\nderivation\nof\nthis\nquery\nsucccess.\nTypically,\nthis\nwould\nbe\na\nsymbol\nindi\ncating\nthe\nreason\nfor\nsuccess.\nActually,\nif\nyour\nmodel\nis\nstoring\nthe\ndatabase\npredications\nas\npredication\nobjects,\nyou\nprobably\ndon't\nneed\nto\nwrite\nan\njoshua:askdata\nmethod.\nWrit\ning\nyour\nown\njoshua:fetch\nmethod\nand\nusing\nthe\ndefault\njoshua:askdata\nmethod\nis\nmore\nconvenient.\nDefining\nan\njoshua:askdata\nmethod\nis\nusually\ndone\nwhen\nyou\ndon't\nwant\nto\nactually\nstore\nthe\npredication\nobjects.\nSee\nthe\n\nJoshua Language Dictionary\nMarch 1999\nfirst\nversion\nof\nthe\ngoodtoeat\nmodel\nin\nthe\nsection\"Customizing\nthe\nData\nIndex\"\nfor\nan\nexample\nof\nthis.\nSee\nthe\ngeneric\nfunction\njoshua:askrules,\npage\n142.\nSee\nthe\ngeneric\nfunc\ntion\njoshua:askquestions,\npage\n140.\njoshua:askdataandquestionsonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthat\nonly\nlooks\nin\nthe\ndatabase\nand\nasks\nquestions\n(if\n:doquestions\nis\nnonnil),\nbut\nnever\ntries\nbackward\nrules.\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\njoshua:defaultaskmodel\njoshua:askdataonlymixin\njoshua:askrulesonlymixin\njoshua:askquestionsonlymixin\njoshua:askdataandrulesonlymixin\njoshua:askrulesandquestionsonlymixin\njoshua:askdataandrulesonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthat\nonly\nlooks\nin\nthe\ndatabase\nand\ntries\nbackward\nrules,\nbut\nnever\nasks\nquestions.\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\n\nMarch 1999\nJoshua Language Dictionary\njoshua:defaultaskmodel\njoshua:askdataonlymixin\njoshua:askrulesonlymixin\njoshua:askquestionsonlymixin\njoshua:askdataandquestionsonlymixin\njoshua:askrulesandquestionsonlymixin\njoshua:askdatabasepredication\nbackwardsupport\nFunction\nAn\naccessor\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\nIt\nextracts\nthe\ndatabase\npredication\nthat\nmatched\nthe\nquery\nfrom\nthe\ncontinuation\nargu\nment,\nbackwardsupport,\nthat\ncontains\ninformation\nabout\nthe\nsatisfied\nquery.\nWe\ndescribe\nthis\ncontinuation\nargument\nfully\nin\nthe\ndictionary\nentry\nfor\njoshua:ask.\nNote\nthat\nif\nthe\nbackward\nsupport\ndid\nnot\ncome\nfrom\nthe\ndatabase,\njoshua:askdatabasepredication\ngives\na\nbogus\nanswer;\nin\nsome\ncases,\nsuch\nas\nuserwritten\nmodels,\nit\nmay\neven\ncause\na\ntrip\nto\nthe\ndebugger.\nThus,\nyou\nshould\nuse\njoshua:askdatabasepredication\nonly\nwith\n:do\nbackwardrules\nnil.\nExamples:\nWe\nbuild\na\nlibrary\ndatabase\nusing\njoshua:tell\nstatements\nas\nwell\nas\na\nfor\nward\nrule\nthat\nsays\nthe\nlibrary\nowns\nany\nwork\nauthored\nby\nShakespeare.\nWe\nalso\ninclude\nan\nLTMS\nin\nour\npredicate\ndefinitions\nso\nthat\nwe\ncan\nlater\napply\njoshua:explain\nto\nthe\ndatabase\npredications\nwe\nfind.\n(definepredicate\nauthorof\n(work\nauthor)\n(ltms:ltmspredicatemodel))\n(definepredicate\nownslibrary\n(work)\n(ltms:ltmspredicatemodel))\n(defrule\nShakespeareholdings\n(:forward)\nif\n[authorof\n?work\nShakespeare]\nthen\n[ownslibrary\n?work])\n(defun\nbuildauthortitleindex2\n()\n(clear)\n(tell\n[and\n[authorof\n\"King\nLear\"\nShakespeare]\n[authorof\n\"Hedda\nGabler\"\nIbsen]\n[ownslibrary\n\"Trumpeting\nJoshua\"]\n[authorof\n\"A\nDoll's\nHouse\"\nIbsen]])\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\nBUILDAUTHORTITLEINDEX2\n(buildauthortitleindex2)\nTrue\nthings\n[OWNSLIBRARY\n\"Trumpeting\nJoshua\"]\n[AUTHOROF\n\"Hedda\nGabler\"\nIBSEN]\n[OWNSLIBRARY\n\"King\nLear\"]\n[AUTHOROF\n\"King\nLear\"\nSHAKESPEARE]\n[AUTHOROF\n\"A\nDoll's\nHouse\"\nIBSEN]\nFalse\nthings\nNone\n\nJoshua Language Dictionary\nMarch 1999\nNow\nwe\nask\nJoshua\nto\nfind\nand\njoshua:explain\nthe\ndatabase\npredications\nthat\ntell\nwhat\nthe\nlibrary\nowns.\n(ask\n[ownslibrary\n?work]\n#'(lambda\n(backwardsupport)\n(explain\n(askdatabasepredication\nbackwardsupport))))\n[OWNSLIBRARY\n\"Trumpeting\nJoshua\"]\nis\n*True*.\nIt's\na\n:Premise.\n[OWNSLIBRARY\n\"King\nLear\"]\nis\n*True*.\nIt's\nderived\nfrom\nthe\nrule\nShakespearHoldings,\nusing:\n[AUTHOROF\n\"King\nLear\"\nSHAKESPEARE]\nUsually\nyou\ncan\nuse\nthe\nconvenience\nfunction\njoshua:mapoverdatabase\npredications\ninstead\nof\njoshua:askdatabasepredication.\nFor\ncomparison\nwe\nuse\nthe\nsame\nlibrary\nexample\nfor\nboth\nfunctions.\nFor\nmore\non\nthese\nand\nrelated\nfunctions:\nSee\nthe\nfunction\njoshua:ask,\npage\n123.\njoshua:askdata\ntruthvalue\ncontinuation\nof\njoshua:defaultask\nMethod\nmodel\nThis\nis\nthe\ndefault\njoshua:askdata\nmethod.\nIt\ndoes\nsomething\nlike\nthe\nfol\nlowing\n(somewhat\nsanitized)\ncode:\n(definepredicatemethod\n(askdata\ndefaultaskmodel)\n(truthvalue\ncontinuation)\n(fetch\nself\n#'(lambda\n(databasepredication)\n(when\n(=\ntruthvalue\n(predicationtruthvalue\ndatabasepredication))\n;;\nthe\ntruth\nvalue\nwe're\nlooking\nfor\nmatches\nthe\n;;\ndatabase\npredication\n(withunification\n;;\nif\nthe\ndatabase\npredication\nhas\nvariables,\ncopy\nit\n;;\nso\nthe\ndatabase\nisn't\nsideeffected\n(unify\nself\n(copyobjectifnecessary\ndatabasepredication))\n;;\nthe\nunification\nsucceeded,\nso\ncall\nthe\ncontinuation\n(stacklet\n((backwardsupport\n'(,self\n,truthvalue\n,databasepredication)))\n(funcall\ncontinuation\nbackwardsupport)))))))\njoshua:askdataonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthatwhich\nonly\nlooks\nin\nthe\ndatabase,\nand\nnever\ntries\nrules\nor\nquestions.\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\n\nMarch 1999\nJoshua Language Dictionary\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\njoshua:defaultaskmodel\njoshua:askrulesonlymixin\njoshua:askquestionsonlymixin\njoshua:askdataandrulesonlymixin\njoshua:askdataandquestionsonlymixin\njoshua:askrulesandquestionsonlymixin\njoshua:askderivation\nbackwardsupport\nFunction\nAn\naccessor\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\nIt\nextracts\nthe\nsupport\ninformation\nabout\nthe\nsatisfied\nquery\nfrom\nthe\ncontinuation\nargu\nment\nbackwardsupport.\nNote\nthat\nthe\naccessor\nfunction\njoshua:askdatabasepredication\nmakes\nmore\nassumptions\nabout\nthe\nsupport\nthan\njoshua:askderivation\ndoes.\nHere\nis\na\nschematic\nrepresentation\nof\nthe\ncontents\nof\nbackwardsupport.\njoshua:askderivation\nextracts\nonly\nthe\nderivation\nportion.\nFor\nmore\ndetail\nplease\nconsult\nthe\ndictionary\nentry\nfor\njoshua:ask.\nThe\nbackwardsupport\nlist:\n(<unified\nquery>\n<truthvalue>\n.\n<derivation>)\n(<(unified)\nquery>)\n(<t/f>)\n(<derivation>)\nPossibilities\nfor\nthese\nelements\nare:\n(<database\npredication>)\n(AND\n<conjunct1\nderivation>\n<conjunct2\nderivation>\n...)\n(OR\n<successful\ndisjunct\nderivation>)\n((RULE\n<rule\nname>)\n<conjunct1\nt/f\nderivation>\n<conjunct2\nt/f\nderivation>\n...)\n((QUESTION\n<question\nname>)\n<succeed\nargument>)\n(KNOWN\n<derivation>)\n(PROVABLE\n<derivation>)\nLike\nthe\nother\naccessor\nfunctions,\njoshua:askderivation\ndoes\nnot\ninterpret\nthe\ninformation\nit\nextracts.\nGenerally\nyou\nwon't\nneed\nto\nuse\nit\nvery\noften.\nNote\nthat\nthe\nconvenience\nfunctions\njoshua:printqueryresults\nand\njoshua:graphqueryresults,\nrespectively,\ndisplay\nand\ngraph\nan\nannotated\nversion\nof\nthe\nsupport\ninformation,\nso\nthat\nyou\ndon't\nhave\nto\ninterpret\nit\nyourself.\n\nJoshua Language Dictionary\nMarch 1999\nFor\ncomparison\nwe'll\nuse\nthe\nsame\nexamples\nto\nillustrate\nall\nthree\nof\nthese\nfunctions.\nExamples:\nThe\nfirst\nexample\nshows\nthe\nsupport\nfor\na\nquery\nsatisfied\nby\ndatabase\nlookup ⎯\nthe\ndatabase\npredication\nthat\nsatisfied\nthe\nquery\nis\nprinted.\n(definepredicate\ntypeof\n(object\ntype))\n(tell\n[typeof\nIliad\nepic])\nExample\n1.\n(ask\n[typeof\n?book\nepic]\n#'(lambda\n(backwardsupport)\n(print\n(askderivation\nbackwardsupport))))\n([TYPEOF\nILIAD\nEPIC])\nThe\nnext\nexample\nshows\nthe\nsupport\nfor\na\nquery\nthat\nis\nsatisfied\nfrom\nrules.\nWe\nhave\na\nrule,\ndessert?,\nthat\ndetermines\nif\na\ngiven\nfood\nis\na\ndessert.\nEach\nof\nthis\nrule's\nsubgoals\nis\nderived\nfrom\nother\nrules.\nHere\nare\nthe\ndefinitions.\n;\nExample\n2.\nQuery\nis\nderived\nfrom\nbackward\nrules\n;\nDefine\nthe\npredicates\n(definepredicate\nedible\n(object))\n(definepredicate\nisfood\n(object))\n(definepredicate\ncontains\n(object\nsubstance))\n(definepredicate\nsweet\n(object))\n;\nDefine\nthe\nrules\n(defrule\nfood?\n(:backward)\nif\n[edible\n?object]\nthen\n[isfood\n?object])\n(defrule\nsweet?\n(:backward)\nif\n[or\n[contains\n?object\nchocolate]\n[contains\n?object\nsugar]\n[contains\n?object\nhoney]]\nthen\n[sweet\n?object])\n(defrule\ndessert?\n(:backward)\nif\n[and\n[isfood\n?object]\n[sweet\n?object]]\nthen\n[typeof\n?object\ndessert])\n;\ntell\nsome\nsticky\nfacts\n(tell\n[edible\nchocolatecoatedants])\n(tell\n[contains\nchocolatecoatedants\nhoney])\nNow\nwe\njoshua:ask\nwhat\nfoods\nqualify\nas\ndesserts\nand\nwhy.\nThe\ndisplay\nis\n\nMarch 1999\nJoshua Language Dictionary\na\nlist\nstarting\nwith\nrule\ndessert?\nthat\nsatisfied\nthe\nquery;\nnext\nis\nthe\nfirst\nsubgoal\nthat\nwas\nsatisfied,\ntogether\nwith\nits\ntruth\nvalue,\nand\nthe\nname\nof\nthe\nrule\nwhich\nsatisfied\nit\n(rule\nfood?).\nThat\nrule's\nfirst\nsubgoal\nis\nthen\nlisted\nwith\nits\ntruth\nvalue\nand\nthe\ndatabase\npredication\nthat\nsatisfied\nit,\nand\nso\non,\nthrough\nall\nthe\nbackward\nsupport.\n(ask\n[typeof\n?object\ndessert]\n#'(lambda\n(backwardsupport)\n(print\n(askderivation\nbackwardsupport))))\n((RULE\nDESSERT?)\n([ISFOOD\nCHOCOLATECOATEDANTS]\n(RULE\nFOOD?)\n([EDIBLE\nCHOCOLATECOATEDANTS]\n[EDIBLE\nCHOCOLATECOATEDANTS]))\n([SWEET\nCHOCOLATECOATEDANTS]\n(RULE\nSWEET?)\n([CONTAINS\nCHOCOLATECOATEDANTS\nHONEY]\n[CONTAINS\nCHOCOLATECOATEDANTS\nHONEY])))\nFor\nmore\non\nthese\nand\nrelated\nfunctions:\nSee\nthe\nfunction\njoshua:ask,\npage\n123.\njoshua:askquery\nbackwardsupport\nFunction\nAn\naccessor\nfunction\nfor\nuse\ninside\nan\njoshua:ask\ncontinuation.\nIt\nextracts\nthe\ninstantiated\nquery\nfrom\nthe\ncontinuation\nargument\nbackwardsupport.\nbackwardsupport\nis\nfully\ndescribed\nin\nthe\ndictionary\nentry\nfor\njoshua:ask.\nExample:\nHere\nwe\ncollect\nand\nsave\nall\nthe\nanswers\nfrom\na\nquery.\n(See\nexample\nin\nthe\ndictionary\nentry\nfor\njoshua:ask.)\n(defun\ncollectanswers\n()\n(let\n((answers\nnil))\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(push\n(copyobjectifnecessary\n(askquery\nbackwardsupport))\nanswers)))\nanswers))\nTo\nextract\nand\nprint\nout\nthe\ninstantiated\nquery,\nuse\nthe\nconvenience\nfunc\ntion\njoshua:printquery.\nFor\nmore\non\nthese\nand\nrelated\nfunctions:\nSee\nthe\nfunction\njoshua:ask,\npage\n123.\njoshua:askquerytruthvalue\nbackwardsupport\nFunction\nAn\naccessor\nfunction\nfor\nuse\ninside\nan\njoshua:ask\ncontinuation.\nIt\nextracts\nthe\ntruth\nvalue\nof\nthe\ninstantiated\nquery\nfrom\nthe\ncontinuation\nargument\nbackwardsupport.\nbackwardsupport\nis\nfully\ndescribed\nin\nthe\ndictionary\nentry\nfor\njoshua:ask.\nThe\ntruth\nvalue\nis\na\nnumber,\nas\nfollows:\n\nJoshua Language Dictionary\nMarch 1999\nTruth\nvalue\nof\njoshua:*unknown*\nTruth\nvalue\nof\njoshua:*true*\nTruth\nvalue\nof\njoshua:*false*\nTruth\nvalue\nof\njoshua:*contradictory*\nThe\njoshua:truthvalue\npresentation\ntype\ntranslates\nthese\nnumbers\ninto\nsymbols\nnaming\na\ntruth\nvalue.\nMost\nof\nthe\ntime\nyou\nknow\nthe\nquery's\ntruth\nvalue\nfrom\nthe\nquery\npattern\nitself,\nso\nthat\nyou\nhave\nlittle\nneed\nof\nthis\nfunction.\nThe\ntruth\nvalue\ninfor\nmation\nis\nmostly\nthere\nfor\nsystem\nuse,\nto\nlet\nthe\nsystem\ninterpret\nthe\nquery.\nExamples:\n(definepredicate\nstatusof\n(object\nstatus))\n(tell\n[statusof\nsmokealarm\noff])\n;\nExample\n1.\n(ask\n[statusof\n?indicator\noff]\n#'(lambda\n(backwardsupport)\n(print\n(askquerytruthvalue\nbackwardsupport))))\n;\nExample\n2.\nUse\ntruthvaluename\nto\ntranslate\nthe\nnumber\n(ask\n[statusof\n?indicator\noff]\n#'(lambda\n(backwardsupport)\n(print\n(truthvaluename\n(askquerytruthvalue\nbackwardsupport)))))\n*TRUE*\nFor\nmore\non\nthis\nand\nrelated\nfunctions:\nSee\nthe\nfunction\njoshua:ask,\npage\n123.\njoshua:askquestions\npredication\ntruthvalue\ncontinuation\nGeneric\nFunction\npredication\nA\npredication\nto\nbe\nthe\ngoal\nfor\nrules.\ntruthvalue\nThe\ntruth\nvalue\nbeing\nasked\nabout.\nMust\nbe\neither\njoshua:*true*\nor\njoshua:*false*.\ncontinuation\nA\nfunction\nto\nbe\ncalled\nwhen\nthe\nrule\nis\nsatisfied.\njoshua:askquestions\nis\nthe\nquestionasking\npart\nof\nthe\njoshua:ask\nproto\ncol.\nIt\nis\nan\nintermediate\nlevel\nof\nthe\nprotocol,\nbetween\njoshua:ask\nand\njoshua:mapoverbackwardquestiontriggers.\nIt\nis\ncalled\nby\nthe\ndefault\njoshua:ask\nmethod,\nand\nthe\ndefault\nmethod\nfor\njoshua:askquestions\ncalls\njoshua:mapoverbackwardquestiontriggers.\nYou\nwill\nprobably\nnot\ncall\nthis\nfunction\ndirectly,\nexcept\nwhen\nwriting\njoshua:ask\nmethods.\nSince\nques\ntion\ncompilation\nis\nnot\nyet\ncompletely\ngeneric,\nyou\nprobably\ndon't\nwant\nto\ndefine\nyour\nown\njoshua:askquestions\nmethods.\n\nMarch 1999\nJoshua Language Dictionary\nThe\ncomplete\ncontract\nof\njoshua:askquestions\nis:\n-\nLook\nin\nthe\nquestion\ndatabase\nfor\nquestions\nwith\na\npattern\npredication\nmatching\npredication\nor\nanything\nwhich\nunifies\nwith\nit.\n-\nMake\nsure\nthat\ntruthvalue\nis\nappropriate.\n(If\nthe\nquestion\ncan\nbe\nasked\nnegatively,\nthen\neither\ntruth\nvalue\nis\nappropriate.\nIf\nthe\nquestion\ncan\non\nly\nbe\nasked\npositively,\nthe\ntruth\nvalue\nmust\nbe\njoshua:*true*.)\n-\nUnify\npredication\n(self\nin\nthe\nmethod)\nwith\na\ncopy\nof\nthe\npattern\npredi\ncation.\n-\nGet\nthe\nanswer\nto\nthe\nquery\nin\nsome\nappropriate\nway.\nIf\nthe\nquery\nshould\nsucceed,\ncall\nthe\ncontinuation\nfunction.\nThe\nbackward\nsupport\nfor\nan\njoshua:askquestions\nmethod\nshould\nbe\na\nlist\ncontaining:\n-\npredication\n(self\nin\nthe\nmethod),\nthe\n(now\nunified)\nquery\npredication.\n-\ntruthvalue,\nthe\ntruth\nvalue\nbeing\njoshua:asked.\n-\n(question\nname),\nwhere\nname\nis\nthe\nname\nof\nthe\nquestion.\n-\nThe\nderivation.\nThis\ncan\nbe\nany\nextra\ninformation\nabout\nhow\nthe\nques\ntion\nwas\nanswered\nor\nwhy\nit\nsucceeded.\njoshua:askquestionsonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthat\nonly\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\n\nJoshua Language Dictionary\nMarch 1999\njoshua:defaultaskmodel\njoshua:askdataonlymixin\njoshua:askrulesonlymixin\njoshua:askdataandrulesonlymixin\njoshua:askdataandquestionsonlymixin\njoshua:askrulesandquestionsonlymixin\njoshua:askrules\npredication\ntruthvalue\ncontinuation\ndoquestions\nGeneric\nFunction\npredication\nA\npredication\nto\nbe\nthe\ngoal\nfor\nrules.\ntruthvalue\nThe\ntruth\nvalue\nbeing\nasked\nabout.\nMust\nbe\neither\njoshua:*true*\nor\njoshua:*false*.\ncontinuation\nA\nfunction\nto\nbe\ncalled\nwhen\nthe\nrule\nis\nsatisfied.\ndoquestions\nIf\nnonnil,\nallow\nasking\nquestions\nin\nsubgoals\nof\nthe\nrule.\njoshua:askrules\nis\nthe\nbackwardchaining\npart\nof\nthe\njoshua:ask\nprotocol.\nIt\nis\nan\nintermediate\nlevel\nof\nthe\nprotocol,\nbetween\njoshua:ask\nand\njoshua:mapoverbackwardruletriggers.\nIt\nis\ncalled\nby\nthe\ndefault\njoshua:ask\nmethod,\nand\nthe\ndefault\nmethod\nfor\njoshua:askrules\ncalls\njoshua:mapoverbackwardruletriggers.\nYou\nwill\nprobably\nnot\ncall\nthis\nfunction\ndirectly,\nexcept\nwhen\nwriting\njoshua:ask\nmethods.\nSince\nrule\ncom\npilation\nis\nnot\nyet\ncompletely\ngeneric,\nyou\nprobably\ndon't\nwant\nto\ndefine\nyour\nown\njoshua:askrules\nmethods.\nThe\ncomplete\ncontract\nof\njoshua:askrules\nis:\n-\nLook\nin\nthe\nrule\ndatabase\nfor\nrules\nwith\na\nthenpart\nmatching\npredication\nor\nanything\nwhich\nunifies\nwith\nit.\n-\nMake\nsure\nthat\nthe\ntruth\nvalue\nof\nthe\nthenpart\nmatches\ntruthvalue.\n-\nUnify\npredication\n(self\nin\nthe\nmethod)\nwith\na\ncopy\nof\nthe\nthenpart.\n-\njoshua:ask\nthe\nifpart.\nIn\nthe\ncontinuation\nof\nthe\njoshua:ask\nbuild\nthe\nappropriate\nbackward\nsupport\nand\ncall\nthe\ncontinuation\nof\njoshua:ask\nrules\nwith\nthe\nbackward\nsupport.\nThe\nbackward\nsupport\nfor\nan\njoshua:askrules\nmethod\nshould\nbe\na\nlist\ncontaining:\n-\npredication\n(self\nin\nthe\nmethod),\nthe\n(now\nunified)\nquery\npredication.\n-\ntruthvalue,\nthe\ntruth\nvalue\nbeing\njoshua:asked.\n-\n(rule\nname),\nwhere\nname\nis\nthe\nname\nof\nthe\nrule.\n\nMarch 1999\nJoshua Language Dictionary\n-\nThe\nderivation.\nThis\nwill\nbe\na\nlist\nof\nthe\nsupport\nfor\nthe\nifpart.\nSee\nthe\nsection \"Finding\nBackward\nRule\nTriggers\",\npage\n43.\njoshua:askrulesandquestionsonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthat\nonly\ntries\nbackward\nrules\n(if\n:dobackwardrules\nis\nnonnil)\nand\nasks\nquestions\n(if\n:doquestions\nis\nnonnil),\nbut\nnever\nlooks\nin\nthe\ndatabase.\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\njoshua:defaultaskmodel\njoshua:askdataonlymixin\njoshua:askrulesonlymixin\njoshua:askquestionsonlymixin\njoshua:askdataandrulesonlymixin\njoshua:askdataandquestionsonlymixin\njoshua:askrulesonlymixin\nFlavor\nThis\nflavor\ndefines\nan\njoshua:ask\nmethod\nthat\nonly\ntries\nbackward\nrules\n(if\n:dobackwardrules\nis\nnonnil).\nThe\ndefault\njoshua:ask\nmethod\nlooks\nfirst\nin\nthe\ndatabase,\nthen\ntries\nback\nward\nrules\n(if\n:dobackwardrules\nis\nnonnil),\nthen\nasks\nquestions\n(if\n:do\nquestions\nis\nnonnil).\nThis\nflavor\ncan\nbe\nused\nas\na\ncomponent\nof\na\npredicate\nor\nof\na\npredicate\nmodel\nto\nchange\nhow\njoshua:ask\nis\nimplemented\nfor\nthat\npredicate\nor\nfor\npredicates\nof\nthat\nmodel.\nTo\nuse\nit,\nspecify\nit\nas\na\ncomponent\nin\njoshua:definepredicate\nor\njoshua:definepredicatemodel.\nThe\nflavor\nis\nprovided\nprimarily\nas\na\nmeans\nof\nincreasing\nthe\nperformance\nof\njoshua:ask\nby\nskipping\nprotocol\nsteps\nwhich\nare\nnot\nneeded\nfor\nsome\nparticular\npredi\ncates.\nRelated\nFlavors:\n\nJoshua Language Dictionary\nMarch 1999\njoshua:defaultaskmodel\njoshua:askdataonlymixin\njoshua:askquestionsonlymixin\njoshua:askdataandrulesonlymixin\njoshua:askdataandquestionsonlymixin\njoshua:askrulesandquestionsonlymixin\njoshua:basictmsmixin\nFlavor\nThis\nflavor\nmust\nbe\nincluded\nin\nany\nTMS\nmodel\npredicate.\nIt\ndoes\nnot\nde\nfine\nany\nof\nthe\nTMS\nprotocol\nmethods\nitself,\nbut\nit\nensures\nthat\nTMS\npredi\ncates\nsupport\nthe\ncorrect\nprotocol\nmethods.\njoshua:clear\n&optional\n(cleardatabase\nt)\n( undefrulerules\nnil)\nFunction\nWith\narguments\nt\nt ,\nempties\nthe\ndatabase\nand \"undoes\"\nall\nrule\ndefinitions.\ncleardatabase\nSpecifies\nwhether\nor\nnot\nto\nclear\nthe\ndatabase.\nDefault\nis\nt.\nundefrulerules\nSpecifies\nwhether\nor\nnot\nto\ndelete\nall\nrule\ndefinitions.\nDefault\nis\nnil.\nClearing\nthe\ndatabase\nis\nequivalent\nto\njoshua:untelling\neach\nfact\nin\nthe\ndatabase.\nNote\nthat\nundefining\nall\nrule\ndefinitions\nis\na\ndrastic\nthing\nto\ndo,\nas\nit\nclears\nout\nall\nrules\nin\nyour\nworld.\nAny\napplication\ndepending\non\nthese\nrules\nwill\nno\nlonger\nwork.\nClear\nout\nall\nrules\nonly\nif\nyou\nwant\na \"clean\"\nenviron\nment,\nfor\nexample,\nif\nyou\nneed\nto\nget\nrid\nof\na\nrunaway\nrule\nthat\nyou\ncannot\nstop\nby\nother\nmeans.\nExamples:\nShow\nJoshua\nDatabase\nTrue\nthings\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\nFalse\nthings\nNone\n(clear)\nShow\nJoshua\nDatabase\nTrue\nthings\nNone\nFalse\nthings\nNone\nRelated\nCommand:\n\nMarch 1999\nJoshua Language Dictionary\n\"Clear\nJoshua\nDatabase\nCommand\"\nSee\nthe\nsection \"Removing\nPredications\nFrom\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.\nClear Joshua Database Command\nClears\npredications\nfrom\nthe\nJoshua\nDatabase.\nPredications\nWhich\npredications\nto\nremove\nfrom\nthe\ndatabase.\nClear\nJoshua\nDatabase\nasks\nthe\ndatabase\nfor\nall\npredications\nmatching\nthose\nspecified\nin\nthe\nPredications\nargument\nand\njoshua:untells\nthem\nfrom\nthe\ndatabase.\nThe\nvalue\nof\nPredications\ncan\nalso\nbe\nAll\nor\nNone.\n:Other\nTruth\nValues\nToo\nWhether\nor\nnot\nto\nclear\nthe\npredications\nin\nthe\ndatabase\nwhich\nmatch\nthose\nspecified\nby\nthe\nPredications\nargument,\nbut\nhave\nthe\nopposite\ntruth\nvalue.\nThis\nargument\ndefaults\nto\nYes.\n:Query\nWhether\nto\nask\nyou\nbefore\nmaking\nchanges\nto\nthe\ndatabase.\nBy\ndefault,\nthe\ncommand\nstops\nand\nasks\nbefore\nremoving\nany\npred\nications\nor\nrules.\n:Undefine\nRules\nIf\nUndefine\nRules\nis\nYes,\nthe\ncommand\nwill\nundefine\nall\nof\nthe\nJoshua\nRules.\nThis\nargument\ndefaults\nto\nNo.\n:Verbose\nWhether\nto\nprint\ninformation\nabout\nwhat\nthe\ncommand\nis\ndo\ning.\nClear\nJoshua\nDatabase\nprovides\na\nconvenient\ninterface\nto\nthe\njoshua:untell\nfunc\ntion.\nIt\nasks\nthe\ndatabase\nfor\nall\npredications\nmatching\nthose\nspecified\nby\nthe\nar\nguments,\nprompts\nyou\nfor\nconfirmation,\nand\njoshua:untells\neach\npredicate.\nIt\nalso\nallows\nyou\nto\nundefine\nall\nthe\nJoshua\nrules,\nresulting\nin\na\nfresh\nJoshua\nenviron\nment.\nNote\nthat\nundefining\nall\nrule\ndefinitions\nis\na\ndrastic\nthing\nto\ndo,\nas\nit\nclears\nout\nall\nrules\nin\nyour\nworld.\nAny\napplication\ndepending\non\nthese\nrules\nwill\nno\nlonger\nwork.\nClear\nout\nall\nrules\nonly\nif\nyou\nwant\na \"clean\"\nenvironment,\nfor\nexample,\nif\nyou\nneed\nto\nget\nrid\nof\na\nrunaway\nrule\nthat\nyou\ncannot\nstop\nby\nother\nmeans.\nRelated\nFunctions:\njoshua:clear\njoshua:untell\njoshua:*contradictory*\nVariable\nA\nnamed\nconstant\nused\nby\nJoshua\nto\ndenote\nan\ninterim\nstate\nof\ncomputation\nwherein\na\npredication\nis\nbelieved\nto\nbe\nboth\njoshua:*true*\nand\njoshua:*false*.\nWhen\nthis\noccurs,\nJoshua\ninvokes\nthe\nappropriate\nTruth\nMaintenance\nSystem\nto\nresolve\nthe\ncontradictory\nstate.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:*contradictory*\nis\nnot\nmeaningful\nunless\na\nTMS\nis\npresent.\nHowev\ner,\nnot\nall\nTruth\nMaintenance\nSystems\nare\nrequired\nto\nuse\nthis\nvalue.\nRelated\nTopics:\njoshua:*true*\njoshua:*false*\njoshua:*unknown*\njoshua:truthvalue\njoshua:predicationtruthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"Justification\nand\nTruth\nMaintenance\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:copyobjectifnecessary\nobject\nFunction\nCopies\nthe\nobject\nhanded\nto\nit\nif\nit\ncontains\nvariables,\nor\nis\notherwise\nephemeral.\nobject\nAny\nobject,\nfor\nexample,\na\nlist,\nor\na\npredication\nVariables\nin\nobject\nare\nrenamed\nduring\ncopying,\nso\nthat\nvariables\nin\nthe\ncopy\ndiffer\nfrom\nvariables\nin\nthe\noriginal.\njoshua:copyobjectifnecessary\nis\nuseful\nfor\nmaking\ncopies\nof\npredications\nthat\nmay\nbe\nstackconsed,\nor\nwhose\nvariables\nmay\nbe\ntemporarily\nunified.\nThe\nlatter,\nfor\nexample,\nis\ntrue\nof\nvariables\nin\nthe\nquery\nto\njoshua:ask.\njoshua:copyobjectifnecessary\ncreates\na\nseparate\ncopy\nof\nits\nargument\nin\nthe\nheap.\nExamples:\nHere\nwe\nreuse\nsome\nof\nthe\nexamples\nintroduced\nwith\njoshua:ask.\nWe\ndefine\nsome\npredicates\nand\na\nrule,\nthen\nenter\nsome\nfacts\ninto\nthe\ndatabase.\n(definepredicate\nfavoritemeal\n(eater\nfood))\n(definepredicate\nguzzles\n(eater\nfood))\n(clear)\n(tell\n[and\n[favoritemeal\nbears\nhoney]\n[favoritemeal\nmosquitoes\npeople]\n[favoritemeal\nspiders\nflies]\n[favoritemeal\nmonkeys\nbananas]\n[guzzles\nted\nicecream]])\n\nMarch 1999\nJoshua Language Dictionary\nShow\nJoshua\nDatabase\nTrue\nthings\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\n[GUZZLES\nTED\nICECREAM]\nFalse\nthings\nNone\n(defrule\nnotfinicky\n(:backward)\nif\n[guzzles\n?eater\n?food]\nthen\n[favoritemeal\n?eater\n?food])\nExample\n1.\n;;;If\nyou\ndon't\ncopy\nthe\nquery,\nyou\nlose\nthe\ninformation!\n(defun\ncollectanswerswrong\n()\n(let\n((answers\nnil))\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(push\n(askquery\nbackwardsupport)\nanswers)))\nanswers))\nCOLLECTANSWERSWRONG\n(collectanswerswrong)\n#<Error\nprinting\nobject\nCONS\n42353464>\nExample\n2.\n;;;Using\ncopyobjectifnecessary\nsaves\nthe\ninformation\n(defun\ncollectanswers\n()\n(let\n((answers\nnil))\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(push\n(copyobjectifnecessary\n(askquery\nbackwardsupport))\nanswers)))\nanswers))\nCOLLECTANSWERS\n(collectanswers)\n([FAVORITEMEAL\nTED\nICECREAM]\n[FAVORITEMEAL\nBEARS\nHONEY]\n[FAVORITEMEAL\nMOSQUITOES\nPEOPLE]\n[FAVORITEMEAL\nSPIDERS\nFLIES]\n[FAVORITEMEAL\nMONKEYS\nBANANAS])\n\nJoshua Language Dictionary\nMarch 1999\n(defun\nfirstsolution\n()\n(block\nfindasolution\n(ask\n[favoritemeal\n?eater\n?food]\n#'(lambda\n(backwardsupport)\n(returnfrom\nfindasolution\n(copyobjectifnecessary\n(askquery\nbackwardsupport)))))\n;;\nreturn\nnil\nif\nnothing\nsucceeded\nnil))\nFIRSTSOLUTION\n(firstsolution)\n[FAVORITEMEAL\nMONKEYS\nBANANAS]\nRelated\nFunctions:\njoshua:ask\njoshua:databasepredication\n&key\n(printtruthvalue\nt)\nPresentation\nType\nDatabasepredication\nis\na\nsubtype\nof\npredication\nthat\nincludes\nonly\npredica\ntions\nthat\nhave\nbeen\nin\nthe\ndatabase.\nprinttruthvalue\nWhen\nprinttruthvalue\nis\nnot\nnil,\nthe\npredication\nis\npre\nsented\nwith\na\ntruthvalue\nindicator\n(¬\n,\n?,\nor ↔\n,\nthat\nis,\nnot,\n* unknown*,\n* contradictory*,\nrespectively).\nBy\nde\nfault\nthe\nsystem\nprints\ntruthvalue\nindicators\nfor\nall\ndatabase\npredications.\nThis\ntype\nis\nuseful\nwhen\ndefining\ncommands\nor\nhandlers\nthat\ncan\napply\non\nly\nto\npredications\nthat\nhave\nbeen\nin\nthe\ndatabase.\nJoshua\nprograms\nsome\ntimes\nstore\nextra\ninformation\non\npredications\nas\nthey\nare\nput\nin\nthe\ndatabase;\nTMS\njustification\nis\none\nexample.\nWhen\na\ncommand\ndepends\non\nthis\ninformation\nbeing\npresent\nit\nshould\naccept\na\ndatabase\npredication\nas\nits\nargument\nrather\nthan\njust\na\npredication.\ndatabasepredication\ncan\nonly\naccept\ninput\nfrom\nthe\nmouse,\nas\nthat\nis\nthe\nonly\nway\nto\nuniquely\nidentify\na\ndatabase\npredication.\nRelated\nTopic:\njoshua:predication\njoshua:defaultaskmodel\nFlavor\nThis\nflavor\nprovides\nthe\nJoshua\ndefault\nbehavior\nfor\nthe\njoshua:ask\nproto\ncol.\nIt\nhas\nmethods\nfor\njoshua:ask,\njoshua:askdata,\njoshua:askrules,\nand\njoshua:askquestions.\nRelated\nFlavor:\njoshua:defaultpredicatemodel\n\nMarch 1999\nJoshua Language Dictionary\njoshua:defaultpredicatemodel\nFlavor\nThis\nis\nthe\ndefault\nflavor\nfor\nJoshua\npredications ⎯\nthe\none\nyou\nget\nwhen\nyou\ndon't\nspecify\nany\nmodel\nto\njoshua:definepredicate.\nIt\ndefines\nall\nthe\ndefault\nbehavior\nfor\nthe\nJoshua\nprotocol.\nIt\ndoes\nnot\nprovide\nany\nTMS\nbe\nhavior.\nThis\nflavor\nis\nmade\nup\nof\njoshua:discriminationnetdatamixin\nand\njoshua:defaultprotocolimplementationmodel.\nRelated\ntopics:\nltms:ltmspredicatemodel\njoshua:definepredicate\njoshua:defaultprotocolimplementationmodel\nFlavor\nThis\nflavor\nprovides\nthe\nJoshua\ndefault\nbehavior\nfor\nthe\nhighlevel\nprotocol.\nIt\nis\ncomposed\nof\njoshua:defaultrulecompilationmodel,\njoshua:default\naskmodel\nand\njoshua:defaulttellmodel.\nRelated\nFunction:\njoshua:definepredicatemodel\njoshua:defaultrulecompilationmodel\nFlavor\nThis\nflavor\ndefines\nall\nthe\ndefault\nJoshua\nrule\ncompilation\nbehavior.\nRelated\ntopics:\njoshua:defaultprotocolimplementationmodel\njoshua:definepredicatemodel\njoshua:defaulttellmodel\nFlavor\nThis\nflavor\nprovides\nthe\nJoshua\ndefault\nbehavior\nfor\nthe\njoshua:tell\nproto\ncol.\nIt\nhas\nmethods\nfor\njoshua:tell,\njoshua:insert,\njoshua:justify,\njoshua:noticetruthvaluechange,\njoshua:unjustify,\nand\njoshua:untell.\nRelated\nFlavor:\njoshua:defaultpredicatemodel\njoshua:defineobjecttype\nname\n&key\n:slots\n:parts\n:equalities\n:ini\nMacro\ntializations\n:includedobjecttypes\n:otherinstance\nvariables\n:otherflavors\nThis\nmacro\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nto\ndefine\nclasses\nof\nobjects.\nname\nA\nsymbol\nwhich\nwill\nbecome\nthe\ntypename\nof\nthese\nob\njects.\n:slots\nA\nlist\nof\nslot\ndescriptions,\nwhere\neach\ndescription\nis\nei\nther\na\nsymbol\nwhich\nwill\nbecome\nthe\nslotname,\nor\na\nlist\nconsisting\nof\na\nsymbol\nfollowed\nby\nkeywordvalue\npairs.\nPossible\nkeywords\nare:\n\nJoshua Language Dictionary\nMarch 1999\n:initform\nSpecifies\nan\ninitial\nvalue\nfor\nthe\nslot.\nSee\nthe\nsection \"Initial\nValues\nof\nSlots\",\npage\n113.\n:setvalued\nSpecifies\nwhether\nthe\nslot\nis\nset\nvalued.\nSee\nthe\nsection \"Set\nValued\nand\nSingle\nValued\nSlots\",\npage\n113.\nThe\nvalue\nof\nthis\nargument\nshould\nbe\nt\nto\ncreate\na\nsetvalued\nslot;\nit\ndefaults\nto\nnil\nif\nnot\nmentioned.\n:truthmaintenance\nSpecifies\nwhether\nthe\nslot's\nvalues\nare\nmaintained\nby\nthe\ntruth\nmaintenance\nsystem.\nThe\nvalue\nof\nthis\nargument\nshould\nbe\nt\nto\ncreate\na\ntruthmaintained\nslot;\nit\ndefaults\nto\nnil\nif\nnot\nmentioned.\nSee\nthe\nsec\ntion \"Slots\nand\nTruth\nMaintenance\",\npage\n114.\n:attachedactions\nSpecifies\nthat\nthe\nuser\nmay\nwish\nto\nadd\nactions\nto\nindividual\ninstances\nof\nobjects\ncontaining\nthis\nslot.\nSee\nthe\nsection \"Slots\nand\nAttached\nAc\ntions\",\npage\n114.\n:objectnotifying\nSpecifies\nthat\nthe\nuser\nintends\nto\ndefine\na\nsetf\nmethod\non\nthe\nslot\nval\nue\nof\nthe\nobject\ntype.\nSee\nthe\nsec\ntion\n\"Invoking\nMethods\nAssociated\nwith\nthe\nObject\nAssociated\nwith\na\nSlot\",\npage\n115.\n(defineobjecttype\nrandommachine\n:slots\n(oilviscosity\n(gears\n:setvalued\nt)\n(fuelvolume\n:attachedactions\nt\n:truthmaintenance\nt)\n...)\n...)\n:parts\nA\nlist\nof\npart\ndescriptions,\nwhere\neach\ndescription\nis\na\nlist\ncontaining\na\npartname\nand\nthe\ntype\nof\nthe\npart.\n:equalities\nA\nlist\nof\nequality\ndescriptions,\nwhere\neach\ndescription\nis\na\nlist\nof\npathnames\nrelative\nto\nthe\nobject\nbeing\ncreated.\nSee\nthe\nsection \"Equalities\nBetween\nSlot\nValues\",\npage\n116.\n:initializations\nA\nlist\nof\nforms\nto\nevaluate\nat\nmakeinstance\ntime.\nSee\nthe\nsection \"Other\nOptions\nin\nDefineObjectType\",\npage\n117.\n\nMarch 1999\nJoshua Language Dictionary\n:includedobjecttypes\nSpecifies\na\nlist\nof\nother\nJoshuaobjecttypes\nfrom\nwhich\nto\ninherit.\nSee\nthe\nsection\n\"Type\nHierarchy\nin\nthe\nJoshua\nObject\nFacility\",\npage\n110.\n:otherinstancevariables\nA\nlist\nof\nregular\nflavor\ninstance\nvariables\nto\nbe\nincluded\nin\nthe\nobject\ndefinition.\nSee\nthe\nsection \"Other\nOptions\nin\nDefineObjectType\",\npage\n117.\n:otherflavors\nA\nlist\nof\nother\nflavors\nto\nmix\nin\nto\nthe\nobject\ndefinition.\nSee\nthe\nsection \"Other\nOptions\nin\nDefineObjectType\",\npage\n117.\njoshua:definepredicate\nname\nargs\n&optional\n(modelandother\nMacro\ncomponents\n'(defaultpredicatemodel))\n&body\noptions\nDefines\na\npredicate\nfor\nuse\nin\nbuilding\npredications.\nname\nAny\nsymbol\nthat\ndoes\nnot\nconflict\nwith\nthe\nname\nof\nan\nexist\ning\nflavor\nor\npresentation\ntype.\nSo,\nfor\nexample,\ninteger,\ncons,\nand\narray\nare\nnot\ngood\npredicate\nnames.\nIn\nfact,\nthey\ncan\nbe\ndisastrous.\nDoing\njoshua:definepredicate\non\nthese\nwill\nlikely\ncause\nproblems\nin\nboth\nthe\nCL\ntype\nsystem\nand\nthe\npresentation\nsystem.\nargs\nA\nlist\nof\nsymbols,\nsimilar\nto\nLisp\nlambda\nlists.\n&optional\nar\nguments\ncan\nbe\ndefaulted\nas\nin\nLisp.\nNote\nthat,\nunlike\nLisp,\n&rest\narguments\ncan\nalso\nbe\ndefaulted.\n&rest\narguments\ncan\nbe\nused\nin \"tail\"\nfashion,\nas\nin:\n[foo\nA\nB\n.\n?quux],\nwhich\nmatches\nall\nfoo\npredicates\nwith\narguments\nA\nand\nB,\nfollowed\nby\nanything\nelse.\n&key,\n&aux,\nand\nother\nlambdalist\nkeywords\nare\nnot\nsupported.\nmodelandothercomponents\nLists\noptional\nmodels\ndefined\nwith\njoshua:definepredicate\nmodel.\nYou\ncan\nalso\nuse\nany\nflavor,\nas\nlong\nas\nit\ndoesn't\nuse\n:orderedinstancevariables.\nThe\nrules\nof\nprocedure\nare\niden\ntical\nto\nthose\nof\ndefflavor.\noptions\nAny\noption\nacceptable\nto\ndefflavor.\n:constructor\nis\nunlikely\nto\nbe\nuseful,\nas\njoshua:definepredicate\nalready\nuses\nit.\nIn\naddition,\nsee\n:destructureintoinstancevariables,\nbelow.\nThere\nare\ntwo\nways\nthat\nyou\ncan\nmake\nthe\npredicate\narguments\nlexically\navailable\nto\nmethods.\nFor\nfrequent\nuse,\nspecify\nthe\noption\n:destructureinto\ninstancevariables\nin\nyour\npredicate\ndefinition.\nThis\nkeeps\nthe\npredicate\nar\nguments\ndestructured\npermanently\nin\neach\npredication,\ntaking\nup\nmore\nspace\nbut\nproviding\nfaster\naccess.\nFor\noccasional\nuse\nyou\ncan\ncall\nthe\nmacro\njoshua:withstatementdestructured.\nSince\nthe\nmacro\ndestructures\nthe\nar\n\nJoshua Language Dictionary\nMarch 1999\nguments\neach\ntime\nyou\ncall\nit,\nit\nis\nslower,\nbut\nsuch\npredications\ntake\nup\nless\nspace.\nThe\nlatter,\nfor\nexample,\nis\nusually\nappropriate\nfor\njoshua:say\nmethods.\nThe\nformer\nmight\nbe\nmore\nappropriate\nfor\ninner\nloops.\nExamples:\n(definepredicate\nfruit\n(afruit))\n(definepredicate\nbird\n(bird)\n(ltms:ltmspredicatemodel))\n(definepredicate\nthingstopack\n(traveller\n&rest\nobjects))\n(definepredicate\ngun\n(range\ncalibre)\n:destructureintoinstancevariables)\n(definepredicate\nhasdisease\n(patient\ndisease\n&rest\nsymptoms)\n(:destructureintoinstancevariables\ndisease))\n;\npartial\ndestructuring\nRelated\nFunctions:\njoshua:undefinepredicate\njoshua:makepredication\njoshua:predicationp\nRelated\nFlavor:\njoshua:predication\nSee\nthe\nsection \"Joshua\nPredications\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:definepredicatemethod\n(protocolfunction\nflavor\n&rest\nMacro\noptions)\nargs\n&body\nbody\njoshua:definepredicatemethod\ndefines\na\nparticular\nimplementation\nof\na\nprotocol\nfunction\nfor\na\nmodel.\nprotocolfunction\nA\nsymbol\nwhich\nis\nthe\nname\nof\na\nJoshua\nprotocol\nfunc\ntion.\nflavor\nA\nsymbol\nwhich\nis\nthe\nname\nof\na\nJoshua\npredicate\nmod\nel.\noptions\nA\nlist\nof\noptions\nfor\nthe\nmethod\ntype.\nSee\nthe\nspecial\nform\ndefmethod\nin\nSymbolics\nCommon\nLisp\nProgram\nming\nConstructs\nfor\nmore\ninformation.\nMost\nJoshua\npredicate\nmethods\nwill\nnot\nneed\nany\noptions.\nargs\nThe\nlist\nof\narguments\nto\nthe\nmethod.\nbody\nThe\nLisp\ncode\nwhich\nimplements\nthe\nmethod.\nSince\nmost\nof\nthe\nprotocol\nfunctions\nimplement\nthemselves\nas\nmethods,\nthis\nexpands\ninto\na\ndefmethod\nmost\nof\nthe\ntime.\nHowever,\nthere\nare\ntwo\ncaveats\nthat\nnecessitate\nyour\nusing\njoshua:definepredicatemethod\ninstead\nof\na\nbare\ndefmethod:\n\nMarch 1999\nJoshua Language Dictionary\n-\nSome\nof\nthe\nprotocol\nfunctions\nare\nnot\nmethods,\nso\njoshua:define\npredicatemethod\nhas\nto\nexpand\ninto\nsomething\ndifferent\nin\nthose\ncases.\n(For\nexample,\nsome\nof\nthe\nmethods\nhave\nto\nbe\nin\nyour\ncompile\nenviron\nment,\nbefore\nthe\npredicate/model\nflavors\nare\naround.)\n-\nSome\nof\nthe\nprotocol\nfunctions\nare\nmethods,\nbut\nuse\ndifferent\nnames\nor\nargument\nconventions\nthan\nthose\nthat\nare\nuservisible.\nFor\nexample,\njoshua:definepredicatemethod\nmay,\nfor\nefficiency\nreasons,\ndecide\nto\nimplement\na\nprotocol\nfunction\nwith\nlots\nof\nkeyword\narguments\nas\nan\nin\nternal\nfunction\nwith\npositional\narguments.\nExamples:\n(definepredicatemethod\n(tell\ntellerrormodel)\n(&rest\nignore)\n(error\n\"~S\nwas\nbuilt\nusing\nTELLERRORMODEL,\nso\nyou\ncan't\nTELL\nit.\"\nself))\n(definepredicatemethod\n(say\nhacker)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(name)\n(format\nstream\n\"~&~S\nis\na\nhacker.\"\nname)))\nRelated\nfunction:\njoshua:undefinepredicatemethod\nSee\nthe\nspecial\nform\ndefmethod\nin\nSymbolics\nCommon\nLisp\nProgramming\nConstructs.\njoshua:definepredicatemodel\nname\ninstancevariables\ncompo\nMacro\nnents\n&body\noptions\nDefines\na\nflavor\nwhich\nmay\nbe\nused\nas\na\nmodel\nor\nmodel\ncomponent\nfor\npredicates.\nname\nA\nsymbol\nwhich\nis\nthe\nname\nof\nthe\nmodel\nbeing\ndefined.\ninstancevariables\nA\nlist\nof\nthe\nnames\nof\ninstance\nvariables\nwhich\nwill\nkeep\nsome\nof\nthe\nstate\nof\nthe\npredicate.\ncomponents\nA\nlist\nof\ncomponent\nflavors\nor\nmodels.\noptions\nOptions\nto\nbe\npassed\non\nto\ndefflavor.\njoshua:definepredicatemodel\nis\nquite\nsimilar\nto\ndefflavor.\njoshua:define\npredicatemodel\nforces\nname\nto\nbe\nan\nabstract\nflavor,\nand\nrequires\njoshua:predication\nbe\na\nflavor\ncomponent\nof\nany\ninstantiable\nflavor\nbuilt\non\nname.\nRelated\nfunction:\njoshua:undefinepredicatemodel\njoshua:defquestion\nname\n(controlstructure\n&rest\ncontrol\nMacro\nstructureargs)\npattern\n&key\n:code\nDefines\na\nquestion.\n\nJoshua Language Dictionary\nMarch 1999\nname\nThe\nname\nof\nthe\nquestion.\ncontrolstructure\nSpecifies\nthe\ndirection\nof\nchaining\nthe\nquestion\nresponds\nto.\nCurrently,\nonly\n:backward\nchaining\nquestions\nare\nsupported.\ncontrolstructureargs\nLike\njoshua:defrule,\nthese\nare\narguments\nto\nthe\ncontrol\nstructure.\nCurrently\nsupported\nare\n:importance\nand\n:documentation.\nBoth\nwork\nas\nthey\ndo\nin\nrules:\nThe\nformer\nlets\nyou\nspecify\nthe\npriority\nin\nwhich\nyou\nwant\nyour\nquestions\nto\nrun\n(however,\nthey'll\nalways\nrun\nafter\nrules);\nthe\nlatter\nlets\nyou\nadd\na\nstring\nto\ndocument\nthe\nmeaning\nof\nthe\nquestion.\nThis\nstring\ncan\nthen\nbe\nre\ntrieved\nwith\nthe\nLisp\nfunction\njoshua::documentation.\npattern\nA\nsingle\npredication.\nThe\nquestion\ntriggers\nwhen\nthis\npattern\nis\nmatched\nin\nan\njoshua:ask,\nfor\n:backward\nquestion.\nKeywords:\n:code\nAny\nLisp\ncode.\nThis\nis\nfor\ncustomized\nversions\nof\njoshua:defquestion.\nBackward\nquestions\nbehave\nlike\nbackward\nchaining\nrules,\nexcept\nthat\nthey\nrun\nafter\nall\nbackward\nrules.\nThey\ntreat\nthe\nuser\nas\nan\nextension\nof\nthe\ndatabase,\nand\nsolicit\nmore\nsolutions\nfrom\nhim.\n(For\nthe\nbasics\nof\nrule\noper\nation:\nSee\nthe\nsection \"Rules\nand\nInference\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.)\nLike\nrules,\nquestions\nhave\na\nname,\na\ntrigger\npattern,\nand\na\nbody.\nLike\nrules,\nquestions\nare\na\nway\nof\ngenerating\ninformation.\nWhen\nyou\njoshua:ask\nsomething\nwith\n:doquestions\njoshua::t\nand\nthe\nquery\npattern\nunifies\nwith\npattern\nin\nthe\nquestion,\nthe\nquestion\nbody\nruns.\nQuestions\nrun\nonly\nafter\nthe\ndatabase\nhas\nbeen\nsearched\nand\nall\nappropriate\nbackward\nrules\nhave\nbeen\ntriggered.\nIf\nyou\ndon't\nsupply\nthe\n:code\nkeyword,\njoshua:defquestion\nsupplies\na\nbody\nfor\nyou.\nAt\nrun\ntime,\nthe\nquery\nunifies\nwith\nthe\nquestion\ntrigger.\nIf\nthere\nare\nno\nlogic\nno\nlogic\nvariables\nin\nthe\nunified\nquery,\na\nYes\nor\nNo\nquestion\nis\ngener\nated\nonce.\nThe\ndefault\nanswer\nis\nNo.\nAnswering\nYes\nmakes\nthe\nquery\nthat\ntriggered\nthe\nquestion\nsucceed.\nAnswering\nNo\nmakes\nthe\nquery\nfail,\nwhich\ncan\nmean\neither\nthat\nthe\nquery\nis\nknown\nto\nbe\njoshua:*false*,\nor\nthat\nit\nis\nnot\nknown\nto\nbe\njoshua:*true*.\nIf\nthe\nunified\nquery\ncontains\nlogic\nvariables,\nthe\nquestion\nloops,\npresenting\niterations\nof\nan\nAVV\n(Accept\nVariable\nValues)\nmenu,\neach\nsoliciting\nbind\nings\nfor\nthose\nvariables.\n\nMarch 1999\nJoshua Language Dictionary\nQuestions\ncan\nbe\nused\nto\ninteract\nwith\na\nuser,\nwith\nsome\nother\nprocess\nrun\nning\non\nthe\nmachine,\nor\neven\nsome\nother\ndevice.\nFor\nexample,\na\nquestion\ncould\ngo\nout\nover\nthe\nnetwork\nand\nask\nsome\nother\ndevice\nto\nanswer\na\nques\ntion.\nJoshua\nhas\na\ndefault\nway\nof\nasking\nquestions;\nyou\ncan\nalso\nwrite\nyour\nown.\nThe\ndefault\nversion\nuses\neither\nthe\ndefault\njoshua:say\nmethod\nto\nformat\npattern\nor\na\nuserdefined\njoshua:say\nmethod\nif\navailable.\nExamples:\nWe\ndefine\na\npredicate\nand\nthen\nwe\ndefine\na\nquestion\nthat\ntriggers\non\na\npredication\npattern\nbuilt\nfrom\nthis\npredicate.\n(definepredicate\nfoo\n(something\nsomethingelse))\n(defquestion\nquestion1\n(:backward\n:documentation\n\"This\nhas\nno\napparent\nuse\")\n[foo\n?x])\nExample\nis\na\nquery\nwith\nno\nlogic\nvariables\nin\nthe\nunified\nquery\npattern.\nExample\n1:\n(ask\n[foo\n2]\n#'printquery\n:doquestions\nt)\nIs\nit\ntrue\nthat\n\"[FOO\n2]\"?\n[default\nNo]:\nYes\n[FOO\n2]\nNIL\nFor\nexample\nwe\ndefine\na\njoshua:say\nmethod,\nand\nthe\nquestion\nuses\nthat\nmethod.\nExample\n2:\n(definepredicatemethod\n(say\nfoo)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(something\nsomethingelse)\n()\n(format\nstream\n\"the\narguments\n~A\nand\n~A\nare\ncorrect\"\nsomething\nsomethingelse)))\n(ask\n[foo\n2]\n#'printquery\n:doquestions\nt)\nIs\nit\ntrue\nthat\n\"the\narguments\nand\nare\ncorrect\"?\n[default\nNo]:\nYes\n[FOO\n2]\nNIL\nExample\nuses\na\nquery\nwith\nlogic\nvariables\nin\nthe\nquery\npattern.\n\nJoshua Language Dictionary\nMarch 1999\nExample\n3:\nTo\nwrite\nyour\nown\ncode\nto\ndo\nquestions,\nuse\nthe\n:code\nkeyword.\nThis\nkey\nword\ntakes\narguments\nand\na\nbody,\nas\nfollows:\nargs\n(query\ntruthvalue\ncontinuation\n&optional\nquerycontext)\nbody\nThe\nbody\nof\na\njoshua:defquestion\nworks\nlike\nLisp\ncode\nin\nthe\nbody\nof\na\nbackward\nrule.\nIf\nthe\nvalue\nof\nbody\nis\nnil,\nthe\nquery\nthat\ntriggered\nthe\nquestion\nfails.\nIf\nthe\nvalue\nof\nbody\nis\nnonnil,\nthe\nquery\nsucceeds.\nCalling\nthe\njoshua:succeed\nfunction\nexplicitly\nwithin\nthe\nbody\nal\nlows\nthe\nquery\nto\nsucceed\nmany\ntimes.\nWithin\nbody,\nquery\nis\nthe\nquery\npredication\ngiven\nto\njoshua:ask,\nafter\nthe\nquery\nhas\nbeen\nunified\nwith\nthe\nquestion's\ntrigger.\nIf\ntruthvalue\nis\njoshua:*true*,\nJoshua\nis\ntrying\nto\ndetermine\nwhether\nthe\nquery\nis\nknown\nto\nbe\ntrue,\nas\nopposed\nto\nfalse\nor\nunknown.\nSimilarly\nfor\na\ntruthvalue\nof\njoshua:*false*\nJoshua\ntries\nto\ndetermine\nwhether\nthe\nquery\nis\nknown\nto\nbe\nfalse,\nas\nopposed\nto\ntrue\nor\nunknown.\nThe\nquerycontext\nargument\ncan\nalmost\nalways\nbe\nignored.\nbody\nshould\ndo\nthe\nfollowing:\n-\nIf\nthere\nare\nno\nlogic\nvariables\nin\nthe\nquery,\ndecide\nsomehow\n(perhaps\nby\nasking\nthe\nuser\na\nquestion)\nif\nthe\nquery\nis\ntrue.\nIf\nso,\ncall\ncontinuation.\nYou\nusually\nrely\non\nthe\nform\n(joshua:succeed)\nto\ncall\ncontinuation\nfor\nyou.\n-\nIf\nthere\nare\nlogic\nvariables\npresent,\nsolicit\nsets\nof\nbindings\nfor\nthem\nfrom\nsomewhere\n(for\nexample,\nthe\nuser).\nFor\neach\nsuch\nset,\ncall\ncontinuation\n(usually\nvia\n(joshua:succeed)).\nExamples\nof\ncustomwritten\nquestions:\n\nMarch 1999\nJoshua Language Dictionary\nFirst\nwe\ndefine\nthe\npredicates,\na\njoshua:say\nmethod,\na\nquestion,\nand\na\nbackward\nrule.\n(definepredicate\nwrote\n(author\nbook))\n(definepredicate\nunderstands\n(reader\nbook))\n(definepredicatemethod\n(say\nunderstands)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(reader\nbook)\nself\n(format\nstream\n\"~A\nunderstands\n~A.\"\nreader\nbook)))\n(defquestion\nwritingsofcaesar\n(:backward)\n[wrote\ncaesar\n?book]\n:code\n((query\ntruthvalue\ncontinuation\n&optional\nignore)\n(unless\n(eql\ntruthvalue\n*true*\n(error\n\"I\ncan\nonly\nask\npositive\nquestions.\")))\n(typecase\n?book\n(unboundlogicvariable\n;;asked\nwith\n?book\nunbound\n(loop\nfor\nprompt\n=\n\"Tell\nme\nsomething\nthat\nCaesar\nwrote:\n\"\nthen\n\"Tell\nme\nsomething\nelse\nCaesar\nwrote:\n\"\nfor\nanswer\n=\n(accept\n'((tokenortype\n((\"No\nmore\"\n.\nnomore))\n((string))))\n:prompt\nprompt\n:default\n\"De\nBello\nGallico\")\nuntil\n(eq\nanswer\n'nomore)\ndo\n(withunification\n(unify\n?book\nanswer)\n(succeed))))\n(otherwise\n;;asked\nwith\n?book\nbound\n(yesornop\n\"~&Did\nCaesar\nwrite\n~A?\n\"\n?book)))))\n(defrule\nwritersunderstandtheirwork\n(:backward)\nif\n[wrote\n?author\n?work]\nthen\n[understands\n?author\n?work])\nNow\nwe\njoshua:ask\nthe\nquery.\n(ask\n[understands\nCaesar\n?book]\n#'sayquery\n:doquestions\nt)\nTell\nme\nsomething\nthat\nCaesar\nwrote:\n[default\n\"De\nBello\nGallico\"]:\nDe\nBello\nGallico\nCAESAR\nunderstands\nDe\nBello\nGallico.\nTell\nme\nsomething\nelse\nCaesar\nwrote:\n[default\n\"De\nBello\nGallico\"]:\nA\nCanticle\nfor\nLeibowitz\nCAESAR\nunderstands\nA\nCanticle\nfor\nLeibowitz.\nTell\nme\nsomething\nelse\nCaesar\nwrote:\n[default\n\"De\nBello\nGallico\"]:\nNo\nmore\nNIL\n\nJoshua Language Dictionary\nMarch 1999\n(ask\n[understands\nCaesar\n\"Passion\non\nthe\nNile\"]\n#'sayquery\n:doquestions\nt)\nDid\nCaesar\nwrite\nPassion\non\nthe\nNile?\n(Yes\nor\nNo)\nYes\nCAESAR\nunderstands\nPassion\non\nthe\nNile.\nNIL\nRelated\nFunctions:\njoshua:undefquestion\njoshua:ask\njoshua:askquestions\njoshua:mapoverbackwardquestiontriggers\njoshua:locatebackwardquestiontrigger\nSee\nthe\nsection \"Asking\nthe\nUser\nQuestions\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:defrule\nrulename\n(controlstructure\n&rest\ncontrolstructure\nFunction\nargs)\nif\nifpart\nthen\nthenpart\nDefines\na\nforward\nor\nbackward\nchaining\nrule.\nThe\ncontrolstructure\nargu\nment\nspecifies\nthe\ndirection\nof\nthe\nrule.\nForward\nchaining\nrules\nrespond\nto\nnew\nfacts\nentered\nwith\njoshua:tell;\nthe\nresponse\n(that\nis,\nthe\nrule\nbody\nor\nthenpart),\ncan\ninvolve\ndeducing\naddition\nal\nfacts\nthat\nare\nautomatically\nadded\nto\nthe\ndatabase,\nor\nit\ncan\ninvolve\nexe\ncuting\nany\nLisp\nprogram.\nBackward\nchaining\nrules\nrespond\nto\na\ngoal\nentered\nwith\njoshua:ask\nby\ntry\ning\nto\nsatisfy\nit;\nthis\ncan\ninvolve\nsatisfying\na\nseries\nof\nsuccessive\nsubgoals,\nor\nany\nLisp\nprogram.\nBackward\nchaining\ndoes\nnot\nautomatically\nadd\nnew\nfacts\nto\nthe\ndatabase.\nSee\nthe\nsection \"Rules\nand\nInference\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nrulename\nAny\nsymbol\nthat\nuniquely\nidentifies\nthe\nrule.\ncontrolstructure\nOne\nof\nthe\nkeywords\n:forward\nor\n:backward\ncorre\nsponding,\nrespectively,\nto\na\nforward\nrule\nor\na\nback\nward\nrule.\nFuture\nreleases\nmay\nadd\nmore\npossible\ncon\ntrol\nstructures.\ncontrolstructureargs\n:importance\nlets\nyou\ncontrol\nthe\norder\nof\nrule\nexecu\ntion.\n:documentation\nlets\nyou\nadd\na\nstring\nthat\ndocu\nments\nthe\nmeaning\nof\nthe\nrule.\nFuture\nreleases\nmay\nadd\nmore\nkeywords.\n:importance\ntakes\na\nvalue\nargument\nthat\ncan\nbe:\n-\nNumeric;\nany\nnoncomplex\nnumber,\nincluding +1einf\nor\n1einf\n(infinity).\n\nMarch 1999\nJoshua Language Dictionary\n-\nA\nsymbol\n(in\nwhich\ncase,\nthe\nsystem\ntreats\nit\nas\na\nspecial\nvariable\nwhose\nruntime\nvalue\nshould\nbe\na\nnumber).\n-\nA\nform;\nthe\ncompiler\nenwraps\nit\nwith\n(lambda\n()\n...)\nand\ncompiles\nit.\nIt\nshould\nreturn\na\nnumber\nwhen\ncalled.\nThe\nlarger\nthe\nvalue\nargument,\nthe\nhigher\nthe\npriori\nty.\nRules\nwith\nno\nvalue\nargument\nrun\nfirst,\nafter\nwhich\nrules\nwith\na\nvalue\nargument\nare\nrun\nin\norder\nfrom\nthe\nhighest\nto\nthe\nlowest\nvalue.\nSome\nexpense\nis\nassociated\nwith\nordering\nusing\n:importance.\nIn\nforward\nchaining\nrules\nit\ncauses\na\n\"bestfirst\"\nsearch\nthrough\na\nheap\nof\nrules\naccording\nto\nthe\nvalue\nassociated\nwith\n:importance.\nBackward\nchaining\nonly\norders\nthe\nlocal \"bestfirst\"\nsearch\nof\nrules\nat\nthe\ncurrent\nchoice\npoint.\nA\nmore\nsymbolic\ntype\nof\nreasoning,\nor\nsome\nlevel\nof\nmodeling\nare\nusually\npreferable\nto\nthe\nindiscriminate\nuse\nof\n:importance.\nif\nThe\nsymbol\njoshua::if.\nifpart\nSpecifies\nthe\nconditions\nunder\nwhich\nthe\nrule\nsuc\nceeds.\nThe\nform\nof\nthe\nifpart\nis\nidentical\nfor\nforward\nand\nbackward\nrules.\nProcedurally,\nthe\nifparts\ndiffer\ndepending\non\nrule\ntype:\nIn\nforward\nrules\nthe\nifpart\nis\nthe\ntrigger\npart.\nIt\ncan\nbe\none\nor\nmore\npredications,\njoined\nby\njoshua::and\nor\njoshua::or.\nLisp\nforms\n(called\nprocedural\nnodes)\ncan\nbe\nincluded\nin\nthe\nifpart\nof\nforward\nrules,\nas\nwell.\nSee\nthe\nsection \"The\nJoshua\nRule\nCompiler\",\npage\n26.\nIn\nbackward\nrules\nthe\nifpart\nis\nthe\naction\npart.\nIt\ncan\nbe\none\nor\nmore\npredications\nas\nabove,\nas\nwell\nas\nany\nLisp\nconstruct.\nThese\nbecome\nsubgoals.\nthen\nThe\nsymbol\njoshua::then.\nthenpart\nSpecifies\nthe\nconclusions\ndrawn\nfrom\nthe\nrule.\nThe\nform\nof\nthe\nthenpart\nis\nidentical\nin\nforward\nand\nback\nward\nrules.\nProcedurally,\nthe\nthenparts\ndiffer\ndepend\ning\non\nrule\ntype:\nIn\nforward\nrules\nthe\nthenpart\nis\nthe\naction\npart.\nCan\nbe\none\nor\nmore\npredications,\njoined\nby\njoshua::and\nor\njoshua::or,\nas\nwell\nas\nany\nLisp\nconstruct.\n\nJoshua Language Dictionary\nMarch 1999\nIn\nbackward\nrules\nthis\nis\nthe\ntrigger\npart.\nMust\nbe\na\nsingle\n(not\na\ncompound)\npredication.\nNote\nthat\nthe\nif\nand\nthen\nclauses\ncan\noccur\nin\neither\norder.\nFor\nexample,\nsome\nprogrammers\nprefer\nto\nplace\nthe\nthenpart\nof\nbackward\nrules\nfirst,\nso\nthat\nthe\ntrigger\n(procedure\nhead)\nalways\ncomes\nfirst.\nEither\nof\nthe\narrange\nments\nshown\nbelow\nis\nvalid.\nIf\n[...]\nThen\n[...]\nand\nThen\n[...]\nIf\n[...]\nA\nrule's\naction\npart\n(the\nthenpart\nof\nforward\nrules,\nand\nthe\nifpart\nof\nback\nward\nrules)\ncan\nspecify\nany\nsuitable\naction(s),\nsuch\nas\nadding\nor\nretracting\npredications,\nusing\nLisp\ncode\nto\nperform\nembedded\ntests\nor\ncomputations,\ncalling\njoshua:ask\nor\njoshua:tell,\ninteracting\nwith\nthe\nuser,\nor\ndisplaying\nmessages.\nWhen\nyour\nLisp\ncode\ndoes\niterations,\ncall\nthe\nfunction\njoshua:succeed\ninside\nit\nto\nlet\nJoshua\nknow\nthat\nthe\ncurrent\nset\nof\nbind\nings\nis\ncorrect.\nOtherwise,\nLisp\ncode \"succeeds\"\nby\nreturning\nnonnil.\nSee\nexamples\nbelow.\nIf\nthe\naction\npart\nof\na\nforward\nrule\ncontains\na\npredication\nthat\nis\nnot\nem\nbedded\nin\nLisp\ncode,\nthis\nnewly\ndeduced\nfact\nis\nautomatically\nadded\nto\nthe\ndatabase\nwhen\nthe\nrule\nexecutes\n(a\njoshua:tell\nis\nimplicit).\nNote\nthat\nsuch\na\npredication\ncan\nbe\nbackquoted.\nIf\nthe\npredication\nis\nembedded\nin\nLisp,\nhowever,\nyou\nmust\nexplicitly\nuse\na\njoshua:tell\nto\ninsert\nthe\nfact\ninto\nthe\ndatabase.\nThe\naction\npart\nof\na\nbackward\nrule\nhas\nan\nimplicit\njoshua:ask\naround\nit.\nBackward\nrule\naction\nparts\nadd\nno\npredications\nto\nthe\ndatabase,\nunless\nyou\nexplicitly\nuse\na\njoshua:tell\nto\naccomplish\nthis.\nA\nbackward\nrule's\ntrigger\npart\n(the\nthenpart)\nmust\nconsist\nof\na\nsingle\npredication.\nThe\ntrigger\ncan\ncontain\nlogic\nvariables.\nThese\nvariables\nare\nbound\nby\nthe\nunifier\nwhen\nthe\ntrigger\npart\nof\nthe\nrule\nis\nmatched\nagainst\nthe\nquery;\nthey\nare\nthen\npassed\nto\nthe\naction\npart\n(the\nifpart).\nA\nforward\nrule's\ntrigger\npart\n(the\nifpart)\nmay\ncontain\nan\narbitary\nnumber\nof\npredications\nand\nLisp\nforms.\nThe\ntriggers\ncan\ncontain\nlogic\nvariables.\nA\nforward\nrule's\ntriggers\nbehave\nas\nfollow:\n-\nIf\nthe\ntrigger\nis\na\npredication,\nit\nis\nsatisfied\nwhen\nit\nhas\nbeen\nmatched\nagainst\na\npredication\nin\nthe\ndatabase.\nThe\nlogic\nvariables\nin\nthe\ntrigger\nare\nbound\nby\nthe\nunifier\nwhen\nthe\ntrigger\npart\nof\nthe\nrule\nis\nmatched\nagainst\nthe\ndatabase\npredication.\n-\nThe\ntrigger\nmay\nbe\na\nLisp\nform\n(we\ncall\nsuch\ntriggers\nprocedural\ntriggers).\nSuch\na\ntrigger\nmay\nbe\nsatisfied\nin\ntwo\nways:\nIf\nit\nreturns\njoshua::t,\nit\nis\nregarded\nas\nsatisfied.\nIt\nis\nalso\nregarded\nas\nsatisfied\neach\ntime\nit\ncalls\njoshua:succeed.\n\nMarch 1999\nJoshua Language Dictionary\n-\nIf\na\nprocedural\ntrigger\nnever\ncalls\njoshua:succeed,\nbut\nmerely\nreturns\njoshua::t\nor\njoshua::nil,\nthen\nit\nacts\nas\na\nfilter\non\nthe\nprevious\ntriggers\n(either\naccepting\nor\nrejecting\nthe\nbindings\nproduced\nby\nits\npredecessors).\n-\nA\nprocedural\ntrigger\nmay\nalso\nact\nas\na\ngenerator,\nproducing\nseveral\nac\nceptable\nsets\nof\nbindings\nand\ncalling\njoshua:succeed\nfor\neach\none.\n-\nLogic\nvariables\nwhich\noccur\nfor\nthe\nfirst\ntime\nin\na\nprocedural\ntrigger\nmay\nbe\nbound\nby\ncalling\njoshua:unify.\nLogic\nvariables\nthat\nare\nrefer\nenced\nin\na\nprocedural\ntrigger\nbut\nwhich\noccur\nin\nan\nearlier\ntrigger,\nare\nbound\nto\nthe\nvalue\nestablished\nby\nthe\nearlier\ntrigger\nduring\nthe\nexecution\nof\nthe\nLisp\ntrigger.\n-\nThe\nlogical\nconnective\nand\ncan\nbe\nused\nto\ngroup\nthe\ntriggers\ninto\nsub\ngroups\nall\nof\nwhich\nmust\nbe\nsatisfied.\nThe\nlogical\nconnective\nor\ncan\nbe\nused\nto\ngroup\nthe\npatterns\ninto\nsubgroups\nany\none\nof\nwhich\nmust\nbe\nsat\nisfied.\n-\nThe\ntrigger\npart\nof\na\nforward\nrule\ncan\ninclude\nthe\nkeyword\n:support\nfol\nlowed\nby\na\nlogic\nvariable\nafter\nany\ntrigger\npattern.\nDuring\nthe\nexecution\nof\nthe\nrule,\nthis\nlogic\nvariable\nis\nbound\nto\nthe\npredication\nthat\nmatched\nthe\ntrigger\npattern\nimmediately\npreceding\nthe\nkeyword\n:support.\n-\nA\nprocedural\ntrigger\nmay\nprovide\nan\nargument\nto\njoshua:succeed\nwhich\nshould\nbe\na\ndatabasepredication.\nIf\nit\ndoes\nso,\nthis\npredication\nis\ntreated\nas\nif\nit\nhad\nmatched\na\nnormal\ntrigger\nof\nthe\nrule.\nIf\nthere\nis\na\n:support\nkeyword\nfollowing\nthe\nprocedural\ntrigger,\nthen\nthe\nlogic\nvariable\nfollow\ning\nit\nwill\nbe\nbound\nto\nthe\ndatabasepredication.\nJoshua\nstores\nand\nretrieves\nrules\nby\ntheir\ntriggers.\nWhen\na\nnew\nrule\nis\nde\nfined,\nthe\nrule\ncompiler\nstores\nthe\nrule's\ntrigger\nin\na\nplace\nappropriate\nto\nthe\nrule\ntype.\nThe\nsystem\nfinds\nand\nexecutes\napplicable\nrules\nby\nlocating\ntheir\ntriggers;\nsimilarly,\nit\ndeletes\nunwanted\nrules\nby\nremoving\ntheir\ntrig\ngers.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\nHere\nare\nsome\nexamples.\nFirst,\nhere's\nhow\nto\nuse\nthe\n:documentation\nkey\nword.\nWe\nuse\na\nforward\nrule\nas\nan\nexample,\nbut\n:documentation\nworks\nidentically\nfor\nbackward\nrules.\n(definepredicate\nreads\n(person\nhowmuch))\n(definepredicate\nisbookworm\n(person))\n(defrule\nsimple\n(:forward\n:documentation\n\"Identifies\nbookworms\")\nif\n[reads\n?person\nconstantly]\nthen\n[isbookworm\n?person])\nTo\nretrieve\nthe\ndocumentation\nstring\nof\nthis\nrule,\nuse\nthe\nLisp\nfunction\njoshua::documentation.\n\nJoshua Language Dictionary\nMarch 1999\n(documentation\n'simple)\n\"Identifies\nbookworms\"\nHere\nare\nsome\nexamples\nof\nforward\nchaining.\nThis\nfirst\na\nsimple\ndeclarative\nrule:\n(defrule\ngoodcake\n(:forward)\nif\n[and\n[rises\n?cake\njustright]\n[color\n?cake\nevenlygold]\n[texture\n?cake\nmoist]\n[taste\n?cake\njustright]]\nthen\n[good\n?cake])\nNext\nis\nan\nexample\nof\nusing\nthe\n:support\nkeyword\nto\nallow\nthe\nbody\nof\nthe\nrule\nto\nreference\nthe\ntriggering\nfacts:\n(defrule\ngoodcake\n(:forward)\nif\n[and\n[rises\n?cake\njustright]\n:support\n?f1\n[color\n?cake\nevenlygold]\n:support\n?f2\n[texture\n?cake\nmoist]\n:support\n?f3\n[taste\n?cake\njustright]\n:support\n?f4\n]\nthen\n[and\n(Format\nt\n\"~%The\nreason\nI\nthing\nthat\n~s\nis\ngood\nis\nthat:\"\n?cake)\n(say\n?f1)\n(say\n?f2)\n(say\n?f3)\n(say\n?f4)\n[good\n?cake]])\nHere\nwe\nshow\nhow\na\nProcedural\nTrigger\ncan\nbe\nused\nas\na\ngenerator.\nOnce\nall\ntriggers\nbefore\nthe\nprocedural\ntrigger\nare\nmatched,\nit\nexecutes\nand\ngen\nerates\ntwo\nacceptable\nbindings\nfor\n?color.\n(defrule\ngoodcake\n(:forward)\nif\n[and\n[rises\n?cake\njustright]\n[texture\n?cake\nmoist]\n(loop\nfor\ncolor\nin\n'(evenlygold\nnicelybrown)\ndo\n(unify\n?color\ncolor)\n(succeed))\n[taste\n?cake\njustright]\n]\nthen\n[and\n(format\nt\n\"~&~s\nis\na\ngood\ncake\nwith\ncolor\n~s\"\n?cake\n?color)\n[good\n?cake]])\nHere\nis\nan\nexample\nof\na\nprocedural\ntrigger\nbeing\nused\nas\na\nfilter:\n(defrule\nchecktemperature\n(:forward)\nif\n[and\n[temperatureused\n?object\n?temp]\n(<\n?temp\n400)]\n;\nexample\nof\nLisp\nused\nas\na\nfilter\nthen\n[correcttemperatureused\n?object\n?temp])\n\nMarch 1999\nJoshua Language Dictionary\n(defun\ncheckovensetting\n()\n(clear)\n(tell\n[temperatureused\njellyroll\n375])\n(ask\n[correcttemperatureused\njellyroll\n?temp]\n#'printquery))\n(checkovensetting)\n[CORRECTTEMPERATUREUSED\nJELLYROLL\n375]\nNIL\nFinally,\nhere\nis\nan\nexample\nusing\nnested\nand's\nand\nor's:\n(defrule\ndeduceancestry\n(:forward)\nif\n[or\n[isparentof\n?old\n?young]\n[and\n[isancestorof\n?old\n?middle]\n[isparentof\n?middle\n?young]]]\nthen\n[isancestorof\n?old\n?young])\nHere\nare\nsome\nexamples\nusing\nbackward\nchaining:\n(defrule\nsailoralert\n(:backward)\nif\n[or\n[conditionof\nwind\ngusting]\n[weatherforecast\nsqualls]]\nthen\n[issuewarning\nsmallcraft\nalert])\n;;;\nLisp\ncode\nin\naction\npart\nof\nbackward\nrule\n(definepredicate\ngoodtoread\n(book))\n(defparameter\n*books*\n'(decameron\ncanterburytales\ngargantuaandpantagruel\ntomjones\ncatch22))\n(defrule\nreadinglist\n(:backward)\nif\n(typecase\n?candidatebook\n(unboundlogicvariable\n(loop\nfor\nbook\nin\n*books*\ndoing\n(withunification\n(unify\n?candidatebook\nbook)\n(succeed))))\n(otherwise\n(member\n?candidatebook\n*books*)))\nthen\n[goodtoread\n?candidatebook])\n(ask\n[goodtoread\n?x]\n#'printquery)\n[GOODTOREAD\nDECAMERON]\n[GOODTOREAD\nCANTERBURYTALES]\n[GOODTOREAD\nGARGANTUAANDPANTAGRUEL]\n[GOODTOREAD\nTOMJONES]\n[GOODTOREAD\nCATCH22]\nNIL\nYou\ncan\ninhibit\nbackward\nchaining\nrule\ninvocation\nby\npassing\njoshua::nil\nas\nthe\n:dobackwardrules\nkeyword\nargument\nto\njoshua:ask\n(the\ndefault\nvalue\nis\njoshua::t).\nIn\nthis\ncase\nthe\nsystem\ndoes\nonly\na\ndatabase\nlookup.\n\nJoshua Language Dictionary\nMarch 1999\nYou\ncan\ncause\nbackward\nquestion\ninvocation\nby\npassing\njoshua::t\nas\nthe\n:doquestions\nkeyword\nargument\nto\njoshua:ask\n(the\ndefault\nis\njoshua::nil).\nAdvanced\nConcepts\nNote:\nSix\nbuiltin\nmodels\nare\navailable\nfor\npredicates\nin\njoshua:ask\ngoals.\nThese\nflavors\ndo\nsubsets\nof\nwhat\njoshua:ask\nnormally\ndoes,\nby\nleaving\nout\none\nor\nmore\nof\nthe\nsteps\njoshua:askdata,\njoshua:askrules,\nor\njoshua:ask\nquestions.\nThus\nthe\nmodels\nsave\na\ncertain\namount\nof\noverhead\nwhen\ntheir\npredicates\nare\nused\nas\ngoals\nto\njoshua:ask.\nThe\nsteps\nthat\nare\ndone\nare\nindicated\nby\nthe\nnames:\n-\njoshua:askdataonlymixin\n-\njoshua:askrulesonlymixin\n-\njoshua:askquestionsonlymixin\n-\njoshua:askdataandrulesonlymixin\n-\njoshua:askdataandquestionsonlymixin\n-\njoshua:askrulesandquestionsonlymixin\nRelated\nFunctions:\njoshua:undefrule\njoshua:tell\njoshua:ask\njoshua:askrules\nSee\nthe\nsection \"Rules\nand\nInference\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nJoshua\nRule\nFacilities \",\npage\n23.\njoshua:deletebackwardquestiontrigger\npredication\ntruthvalue\nGeneric\nFunction\nquestionname\ncontext\npredication\nThe\npattern\nunder\nwhich\nthe\nbackward\nquestion\nis\nin\ndexed.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern\nunder\nwhich\nthe\nback\nward\nquestion\nis\nindexed.\nquestionname\nThe\nname\nof\nthe\nquestion\nto\nbe\ndeleted.\ncontext\nThe\nentire\ntrigger\npart\nof\nthe\nbackward\nquestion.\nUse\nful\nin\nadvanced\nmodeling\napplications.\njoshua:undefquestion\ncalls\nthis\nprotocol\nfunction\nwith\nthe\npattern\nfrom\nthe\ntrigger\npart\nof\na\nbackward\nquestion.\nThe\nfunction \"unindexes\"\nthe\ntrigger\ndatastructure\nof\nthe\nbackward\nquestion\nwhich\ncorresponds\nto\nthe\npattern.\nAfter\nthe\npattern\nis \"unindexed\"\nthe\nquestion\nis\nno\nlonger\naccessible.\nTailoring\nof\nbackwardquestion\nindexing\nis\nusually\naccomplished\nby\nprovid\ning\nmethods\nfor\nthe\njoshua:locatebackwardquestiontrigger\nand\njoshua:mapoverbackwardquestiontriggers\nprotocol\nfunctions.\nThe\n\nMarch 1999\nJoshua Language Dictionary\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackward\nquestiontrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locate\nbackwardquestiontrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nproviding\na\njoshua:locatebackward\nquestiontrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nquestions\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nap\nplications\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:deletebackwardquestiontrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nJoshua\nQuestion\nIndexing\nProtocol\",\npage\n48.\njoshua:deletebackwardruletrigger\npredication\ntruthvalue\nrule\nGeneric\nFunction\nname\ncontext\npredication\nThe\npattern\nunder\nwhich\na\nbackward\nrule\nis\nindexed.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern\nunder\nwhich\nthe\nback\nward\nrule\nis\nindexed.\nrulename\nThe\nname\nof\nthe\nrule\nto\nbe\ndeleted.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nfor\nadvanced\nmod\neling.\njoshua:undefrule\ncalls\nthis\nprotocol\nfunction\nwith\nthe\npattern\nfrom\nthe\nthen\npart\nof\na\nbackward\nchaining\nrule.\nThe\nfunction \"unindexes\"\nthe\ntrig\nger\ndatastructure\nof\nthe\nbackward\nrule\nwhich\ncorresponds\nto\nthe\npattern.\nAfter\nthe\npattern\nis \"unindexed\"\nthe\nrule\nis\nno\nlonger\naccessible.\nTailoring\nof\nbackward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locatebackwardruletrigger\nand\njoshua:mapoverbackward\nruletriggers\nprotocol\nfunctions.\nThe\njoshua:addbackwardruletrigger\nand\njoshua:deletebackwardruletrigger\nmethods\nprovided\nas\nJoshua's\nde\nfaults\ncall\njoshua:locatebackwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nproviding\na\njoshua:locatebackwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nappli\ncations\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:deletebackwardruletrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\njoshua:deleteforwardruletrigger\npredication\ntruthvalue\nrule\nGeneric\nFunction\nname\ncontext\npredication\nThe\npattern\nunder\nwhich\nthe\nforward\nrule\nis\nindexed.\n\nJoshua Language Dictionary\nMarch 1999\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern\nunder\nwhich\nthe\nforward\nrule\nis\nindexed.\nrulename\nThe\nname\nof\nthe\nrule\nto\nbe\ndeleted.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nfor\nadvanced\nmod\neling.\njoshua:undefrule\ncalls\nthis\nprotocol\nfunction\nonce\nfor\neach\npattern\nin\nthe\nIf\npart\nof\na\nforward\nchaining\nrule.\nThe\nfunction \"unindexes\"\nthe\ntrigger\ndata\nstructure\nof\nthe\nforward\nrule\nwhich\ncorresponds\nto\nthe\npattern.\nAfter\neach\npattern\nis \"unindexed\"\nthe\nrule\nis\nno\nlonger\naccessible.\nTailoring\nof\nforward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locateforwardruletrigger\nand\njoshua:mapoverforwardrule\ntriggers\nprotocol\nfunctions.\nThe\njoshua:addforwardruletrigger\nand\njoshua:deleteforwardruletrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locateforwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninterest\ning\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nproviding\na\njoshua:locateforwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\nEven\nin\nadvanced\nmodeling\nappli\ncations\nit\nis\nunlikely\nthat\nyou\nwill\nneed\nto\ndefine\na\nmethod\nfor\nthe\njoshua:deleteforwardruletrigger\nprotocol\nfunction.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\njoshua:differentobjects\nobject1\nobject2\nFunction\nReturns\nnil\nif\nthe\narguments\nare\neql\nor\nif\neither\nargument\nis\nan\nuninstanti\nated\nlogic\nvariable\n(in\nthe\nlatter\ncase\nthe\ntwo\nobjects\ncan\npotentially\nbe\nmade\nto\nbe\nthe\nsame\nby\nthe\nunifier).\nOtherwise,\njoshua:differentobjects\nreturns\nt.\nobject1\nA\nLisp\nobject.\nobject2\nA\nLisp\nobject.\nThis\nfunction\nis\nuseful\nin\nmaking\nrules\nthat\nweed\nout\ninappropriate\nself\nreferential\nbehavior.\nFor\nexample,\nin\na\nprogram\nsimulating\nthe\nbehavior\nof\na\nmonkey\nthat\ncan\npick\nup\nobjects,\nit\nis\nimportant\nto\nensure\nthat\nthe\nmon\nkey\ndoes\nnot\ntry\nto\npick\nup\nitself.\nThis\nfunction\nis\noften\nuseful\nin\nthe\nifpart\nof\nrules,\nor\nin\nLisp\ncode.\n(defrule\npickup\n(:backward)\nif\n(differentobjects\n?obj\n'monkey)\nthen\n[canpickup\nmonkey\n?obj])\nTo\ninvoke\nthis\nrule,\nyou\nwould\ntype\nsomething\nlike:\n(ask\n[canpickup\nmonkey\nwrench]\n#'printquery)\nSee\nthe\nsection \"Using\nJoshua\nWithin\nLisp\nCode\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\n\nMarch 1999\nJoshua Language Dictionary\nDisable Joshua Tracing Command\nTurns\noff\nJoshua\ntracing.\nType\nof\nTracing\nThe\ntype\nof\ntracing\nto\ndisable.\nIt\ncan\nbe\none\nof\nforward\nrules,\nbackward\nrules,\npredications,\nTMS\noperations,\nor\nall.\nThe\ntype\nof\ntracing\ndefaults\nto\nall.\nDisable\nJoshua\nTracing\nturns\noff\nthe\nJoshua\ntracing\nfacility.\nRelated\nCommands:\n\"Enable\nJoshua\nTracing\nCommand\"\n\"Reset\nJoshua\nTracing\nCommand\"\njoshua:discriminationnetclear\nrootnode\nFunction\njoshua:discriminationnetclear\nclears\nall\nthe\ndata\nout\nof\nthe\ndiscrimina\ntion\nnet\nwhose\nroot\nis\nrootnode.\nThis\nfunction\nworks\nby\nlopping\noff\nall\nthe\noutgoing\narcs\nfrom\nrootnode.\nThe\ngarbage\ncollector\nreclaims\nall\nthe\nde\nscendants.\njoshua:discriminationnetclear\nis\ncalled\nby\n(joshua:clear\njoshua:discriminationnetdatamixin).\nrootnode\nThe\nroot\nnode\nof\na\ndiscrimination\nnet.\nRelated\nFunctions:\njoshua:discriminationnetuninsert\njoshua:discriminationnetinsert\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\njoshua:discriminationnetdatamixin\nFlavor\nThis\nflavor\nprovides\nthe\nJoshua\ndefault\nbehavior\nfor\nstoring\ndata\npredica\ntions\nin\na\ndiscrimination\nnet.\nIt\nhas\nmethods\nfor\njoshua:fetch,\njoshua:insert,\njoshua:uninsert,\nand\njoshua:clear.\nRelated\ntopics:\njoshua:defaultpredicatemodel\njoshua:discriminationnetfetch\njoshua:discriminationnetinsert\njoshua:discriminationnetuninsert\njoshua:discriminationnetclear\njoshua:discriminationnetfetch\nrootnode\npredication\ncontinua\nFunction\ntion\nrootnode\npredication\ncontinuation\njoshua:discriminationnetfetch\nsearches\nthe\ndiscrimination\nnet\nwhose\nroot\nis\nrootnode\nusing\npredication\nas\na\npattern,\nand\ncalls\ncontinuation\nfor\neach\nitem\nin\nthe\ndiscrimination\nnet\nthat\nmight\nunify\nwith\npredication.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:discriminationnetfetch\nis\ncalled\nby\n(joshua:fetch\njoshua:discriminationnetdatamixin).\nIt\nis\nthe\ndefault\nimplementation\nof\nthe\njoshua:fetch\ngeneric\nfunction\nfor\nthe\nvirtual\ndatabase.\njoshua:fetch\ndoes\nthe\ndata\nretrieval\nfor\nthe\nJoshua\nprotocol\nfunction\njoshua:ask,\nwhich\nsatisfies\nbackward\ngoals.\nrootnode\nThe\nroot\nnode\nof\na\ndiscrimination\nnet.\npredication\nA\npredication\nto\nbe\nsearched\nfor.\ncontinuation\nA\nfunction\nof\none\nargument,\nto\nbe\ncalled\non\neach\ncan\ndidate\nthe\ndiscrimination\nnet\nfinds.\nRelated\nFunctions:\njoshua:discriminationnetinsert\njoshua:discriminationnetclear\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\njoshua:discriminationnetinsert\nrootnode\npredication\nFunction\njoshua:discriminationnetinsert\ntakes\npredication\nand\ninserts\nit\ninto\nthe\ndiscrimination\nnet\nwhose\nroot\nis\nrootnode.\nIt\nis\ncalled\nby\n(joshua:insert\njoshua:discriminationnetdatamixin),\nthe\ndefault\nimplementation\nof\nthe\njoshua:insert\ngeneric\nfunction\nfor\nthe\nvirtual\ndatabase.\njoshua:insert\nis\nthe\nfirst\nstep\nof\nthe\nJoshua\nprotocol\nfunction\njoshua:tell,\nthat\nadds\ndata\ninto\nthe\ndatabase.\njoshua:discriminationnetinsert\nadds\ndata\nto\nthe\ndiscrimination\nnet\nby\nsideeffecting\na\nleaf\nnode\n(that\nis,\nadding\na\npredication).\nThe\nappropriate\nnodes\nin\nthe\ndiscrimination\nnet\nare\ncreated\nif\nnecessary.\nrootnode\nThe\nroot\nnode\nof\na\ndiscrimination\nnet.\npredication\nis\na\npredication\nto\nbe\nadded\nto\nthe\ndatabase.\nThe\ndiscrimination\nnet\ndiscriminates\nfully\nwith\ntwo\nexceptions.\nLogic\nvari\nable\narguments\nare\nnot\nuniquely\nidentified;\nthey\ndiscriminate\nto\na\nnode\nla\nbeled\nji::*variable*.\nSimilarly,\nembedded\nlists\ndiscriminate\nto\na\nnode\nlabeled\nji::*embeddedlist*.\nThat\nis,\nas\nfar\nas\nthe\ndiscrimination\nnet\nis\nconcerned,\nall\nvariables\nare\nalike,\nand\nall\nlists\nare\nalike.\njoshua:discriminationnetinsert\ndoes\nnot\ndeal\nwith\nany\njustification,\nfor\nwardrule\ntriggering,\nor\nunification\nissues.\njoshua:discriminationnetinsert\nreturns\ntwo\nvalues:\n-\nThe\ncanonical\nversion\nof\npredication\nthat\nwas\nstored\nin\nthe\ndatabase.\nIf\nanother\npredication\nthat\nis\na\nvariant\nof\npredication\nalready\nexists\nin\nthe\ndatabase,\njoshua:discriminationnetinsert\nreturns\nthe\nolder\nversion.\nSee\nthe\nfunction\njoshua:variant,\npage\n252.\n\nMarch 1999\nJoshua Language Dictionary\n-\nA\nflag\nthat\ndetermines\nwhether\npredication\nwas\nadded\nto\nthe\ndatabase\nor\nnot.\nThis\nflag\nis\neither\nt\nif\npredication\nis\nnewly\nadded,\nor\nnil\nif\na\nvariant\nwas\nalready\nin\nthe\ndatabase.\nNote\nthat\nthis\nis\nwhat\njoshua:insert\nis\ncon\ntracted\nto\nreturn;\nthus,\njoshua:discriminationnetinsert\nis\none\npossible\nrealization\nof\njoshua:insert.\nRelated\nFunctions:\njoshua:discriminationnetuninsert\njoshua:discriminationnetfetch\njoshua:discriminationnetclear\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\njoshua:discriminationnetuninsert\nrootnode\npredication\nFunction\nThis\nis\nthe\ndual\nto\njoshua:discriminationnetinsert.\nIt\nremoves\npredication\nfrom\nthe\ndiscrimination\nnet\nwhose\nroot\nnode\nis\nrootnode.\nFor\nexample,\nthis\nis\ncalled\nby\n(joshua:uninsert\njoshua:discriminationnetdatamixin)\nto\nim\nplement\nthe\njoshua:uninsert\ngeneric\nfunction\nfor\nthe\ndefault\ndata\nmodel.\nrootnode\nThe\nroot\nof\na\ndiscrimination\nnet.\npredication\nThe\ndatabase\npredication\nto\nbe\nremoved\nfrom\nthe\ndis\ncrimination\nnet.\nThis\nmust\nbe\nthe\nactual\npredication\nob\nject\nfrom\nthe\ndatabase,\nand\nnot\na\ncopy.\nRelated\nFunctions:\njoshua:discriminationnetinsert\njoshua:discriminationnetclear\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\nEnable Joshua Tracing Command\nTurns\non\nJoshua\nTracing.\nType\nof\nTracing\nThe\ntype\nof\ntracing\nto\nenable.\nYou\ncan\nenable\nthe\ntracing\nof\nforward\nrules,\nbackward\nrules,\npredications,\nTMS\noperations,\nor\nAll.\nUnless\notherwise\nspecified\n(by\nusing\nthe\n:Menu\noption\nfor\nexample),\ntracing\nis\nturned\non\nwith\nthe\nsame\noptions\nand\ntrac\ning\nevents\nthat\nwere\nin\neffect\nthe\nlast\ntime\nyou\nused\ntracing.\n:Menu\nBrings\nup\na\nmenu\nof\ndetailed\ntracing\noptions\nfor\nthe\ntype\nof\ntracing\nbeing\nenabled.\nThis\nmenu\nprovides\na\ngreater\ndegree\nof\ncontrol\nover\nexactly\nwhat\ngets\ntraced\nand\nwhen\nthe\ntracing\nfa\ncility\ninteracts\nwith\nthe\nuser.\n:Trace\nEvents\nWhen\nenabling\na\nparticular\ntype\nof\ntracing\nthis\noption\nallows\nyou\nto\nspecify\nprecisely\nwhich\nevents\nwill\nbe\ndisplayed\nduring\ntracing.\nThese\ncan\nalso\nbe\nset\nby\nusing\nthe\n:Menu\noption.\n\nJoshua Language Dictionary\nMarch 1999\n:Step\nEvents\nAllows\nyou\nto\nspecify\nat\nwhich\nevents\nthe\ntracing\nfacility\nwill\nstop\nand\nprompt\nfor\ninteraction.\nThese\ncan\nalso\nbe\nset\nby\nusing\nthe\n:Menu\noption.\nThe\nEnable\nJoshua\nTracing\ncommand\nturns\non\nthe\nJoshua\ntracing\ntools\nand\nallows\nyou\nto\ncustomize\ntracing\nto\nyour\nparticular\napplication\nor\npreference.\nThe\nJoshua\ntracing\nfacility\nis\nvery\nflexible.\nYou\ncan,\nfor\nexample,\ntrace\njust\nforward\nrules\nthat\nare\ntriggered\nby\npredications\nmatching\na\nparticular\npattern:\nEnable\nJoshua\nTracing\nForward\nRules\n:Menu\nYes\nOr,\nyou\ncan\neven\njust\ntrace\npredications\nbuilt\non\na\nparticular\nmodel:\nEnable\nJoshua\nTracing\nPredications\n:Menu\nYes\nThe\nbest\nway\nto\nfamiliarize\nyourself\nwith\nthis\nfacility\nis\nto\ntype\nEnable\nJoshua\nTracing\nAll\n:Menu\nYes.\nThis\nbrings\nup\na\nmenu\nof\nall\nthe\ntypes\nof\nJoshua\ntracing\nand\nthe\noptions\navailable\nfor\neach\none.\nBy\nmoving\nthe\nmouse\nover\neach\noption\nyou\ncan\nsee\nthe\ndocumentation\nfor\nthat\noption\nin\nthe\nmouse\ndocumentation\nline.\nRelated\nCommands:\n\"Disable\nJoshua\nTracing\nCommand\"\n\"Reset\nJoshua\nTracing\nCommand\"\nSee\nthe\nsection \"Tracing\nPredications\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"Tracing\nRules\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:equated\nslot1\nslot2\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nto\nassert\nand\nquery\nthe\nequalitylinks\nbetween\nslots\nof\nJoshua\nobjects.\nNote\nthat\nwhere\nequalities\nare\nbetween\nattributes\nof\ndifferent\nsubparts\nof\nthe\nsame\nobject,\nand\nwhen\nthose\nequalities\nhold\nfor\nall\nobjects\nof\na\ncertain\ntype,\nit\nmay\nbe\neasier\nto\ndeclare\nthose\nequalities\nat\nthe\ntime\nwhen\nthe\nclass\nof\nobjects\nis\ndefined\nby\njoshua:defineobjecttype.\n\nMarch 1999\nJoshua Language Dictionary\nltms:equated\nslot1\nslot2\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nin\nthe\nsame\nmanner\nas\njoshua:equated,\nexcept\nit\nrefers\nto\nslots\nwhose\nvalues\nare\ntruth\nmaintained.\nSlots\nare\ndeclared\nas\ntruthmaintained\nat\nthe\ntime\nthe\nclass\nof\nobjects\nis\ndefined\nby\njoshua:defineobjecttype.\njoshua:equatedmixin\nFlavor\nThis\nflavormixin\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nmay\nbe\nused\nto\nadd\nequalitylink\nbehaviour,\nlike\nthat\nof\nthe\ndefault\nequality\npredicate\njoshua:equated,\nto\npredicate\nmodels\ndefined\nby\nthe\nuser.\njoshua:expandforwardruletrigger\nruletrigger\nsupportvariable\nGeneric\nFunction\nname\ntruthvalue\ncontext\npredication\nA\ntriggerpattern\nof\na\nforward\nchaining\nrule.\nsupportvariablename\nThe\nname\n(if\nany)\nof\nthe\nlogicvariable\nwhich\nshould\nbe\nbound\nto\nthe\nobject\nwhich\nmatches\nthe\npattern.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern.\ncontext\nThe\nentire\nIfpart\nof\nthe\nrule.\nThis\ncan\nbe\nuseful\nin\nad\nvanced\nmodelling\napplications.\njoshua:expandforwardruletrigger\nis\ncalled\nby\nthe\nJoshua\nrule\ncompiler\nas\nthe\nfirst\nstep\nof\ntranslating\nthe\nsyntax\nof\na\nforwardchaining\nrule\ninto\ncompiled\nLisp\ncode.\njoshua:expandforwardruletrigger\nis\ncalled\nonce\nfor\neach\npredication\nin\ncluded\nin\nthe\ntrigger\nof\nthe\nrule.\nIts\njob\nis\nto\nreturn\na\nlist\nstructure\nthat\nexplains\nto\nthe\nrule\ncompiler\nhow\nto\nprocess\nthe\npattern.\nFor\nexample\nin\nthe\nfollowing\nrule:\n(defrule\nfoobar\n(:forward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\njoshua:expandforwardruletrigger\nwill\nbe\ncalled\nthree\ntimes\n(once\nfor\nthe\nentire\njoshua::and\nand\nthen\nonce\nfor\neach\npredication\ninside\nthe\njoshua::and).\njoshua:expandforwardruletrigger\ntakes\nfour\narguments:\nthe\npattern\nto\nexpand,\nthe\nname\nof\nits\n:support\nvariable\n(or\nnil),\nits\ntruth\nvalue\nand\nthe\nentire\nIfpart\n(which\ncan\nbe\ntreated\nas\nthe \"context\"\nof\nthe\npattern).\nThus,\nthe\narguments\npassed\nin\nfor\nthese\nthree\ncalls\nwil\nbe:\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n[not\n[foo2\n?y\n?z]]\n:support\n?f2]\nnil\n*true*\nand\n<the\nwhole\nIfpart>\n[foo1\n?x\n?y]\n?f1\nand\n*true*\n<the\nwhole\nIfpart>\n[foo2\n?y\n?z]\n?f2\n*false*\n<the\nwhole\nIfpart>\n\nJoshua Language Dictionary\nMarch 1999\nNote\nthat\nalthough\nwe\nhave\ndisplayed\nthe\npatterns\nas\nif\nthey\nwere\npredica\ntions,\nthis\nis\nnot\nactually\ntrue.\njoshua:expandforwardruletrigger\nruns\nat\ncompile\ntime\nand\nmanipulates\na\nsourcecode\nrepresentation\nof\npredications\nand\nlogicvariables,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredica\ntions\nand\nLogicvariables\".\njoshua:expandforwardruletrigger\nshould\nreturn\na\nlist\nstructure\n(called\na\ntriggerdescription)\nwhich\nmust\nbe\none\nof\nthe\nfollowing\nforms:\n1.\n(:match\npattern\nname\ntruthvalue).\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nshould\nbe\ntreated\nsimply\nas\na\npattern\nto\nbe\nmatched.\n-\npattern\nis\nthe\npredication\nthat\nrepresents\nthe\npattern\nto\nbe\nmatched.\n-\nname\nis\nthe\nlogic\nvariable\nwhich\nthe\nrule\ntriggering\nmechanisms\nshould\nbind\nto\nthe\npredication\nthat\nmatched\nthis\ntrigger.\n-\ntruthvalue\n(which\nin\nthe\ncurrent\nimplementation\nshould\nbe\neither\njoshua:*true*\nor\njoshua:*false*)\nis\nthe\ntruth\nvalue\nwhich\nthe\nmatching\npredication\nis\nrequired\nto\nhave\nin\norder\nto\ntrigger\nthe\nrule.\n2.\n(:and\ntriggerdescriptions)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\nconjunction\nof\npatterns\nall\nof\nwhich\nmust\nbe\nmatched\nto\ntrigger\nthe\nrule.\nThe\nsystemprovided\ndefault\nmethod\nfor\nAND\npredications\nreturns\nthis\ntype\nof\ntrigger\nde\nscription.\nThe\nsecond\nelement\nof\nthe\ntrigger\ndescription\nmust\nbe\na\nlist\nof\ntrigger\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expand\nforwardruletrigger.\n3.\n(:or\ntriggerdescriptions)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\ndisjunction\nof\npatterns\nany\nof\nwhich\nmust\nbe\nmatched\nto\ntrigger\nthe\nrule.\nThe\nsystem\nprovid\ned\ndefault\nmethod\nfor\nOR\npredications\nreturns\nthis\ntype\nof\ntrigger\nde\nscription.\nThe\nsecond\nelement\nof\nthe\ntrigger\ndescription\nmust\nbe\na\nlist\nof\ntrigger\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expand\nforwardruletrigger.\n4.\n(:procedure\nlispexpression\nname)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nis\nnot\na\npattern\nto\nbe\nmatched,\nbut\nrather\na\nLisp\nexpression\nthat\nappears\nin\nthe\ntrigger\nposition.\nSuch\nexpressions\nare\nexecuted\nonce\nall\nproceeding\npatterns\nin\nthe\nrule\nhave\nbeen\nmatched.\nThe\nexpression\ncan\nact\nas\na\nfilter\nby\nreturning\neither\njoshua::t\nor\njoshua::nil.\njoshua::t\nindicates\nsuccess;\nin\nthis\ncase\nthe\nbindings\naccumulated\nup\nto\nthis\npoint\nare\nconsidered\nacceptable\nand\nrule\ntriggering\ncontinues.\njoshua::nil\nindicates\nfailure;\nin\nthis\ncase\nthe\nbindings\nare\nconsidered\nunacceptable.\n\nMarch 1999\nJoshua Language Dictionary\nThe\nexpression\ncan\nalso\nact\nas\na\ngenerator\nin\nwhich\nit\nproduces\nsever\nal\nnew\nsets\nof\nbindings\neach\nof\nwhich\nis\nconsistent\nwith\nthe\nbindings\nthat\nwere\nin\neffect\nwhen\nthe\nrule\nwas\ntriggered.\nTo\ndo\nthis\nit\nshould\nbind\nwhatever\nlogicvariables\nit\nwants\nto\nand\nthen\ncall\njoshua:succeed.\njoshua:succeed\ntakes\na\nrestargument;\nthe\nrule\ncom\npiler\nwill\narrange\nfor\nthis\nvalues\npassed\nto\njoshua:succeed\nto\nbe\nbound\nto\nthe\nlogicvariable\nwhich\nis\nthe\nthird\nelement\nof\nthe\ntrigger\ndescription.\nSee\nthe\nfunction\njoshua:succeed,\npage\n232.\n5.\n(:ignore)\nThis\ntrigger\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nit\nshould\nignore\nthis\ntrigger.\nThe\nare\ntwo\nreasons\nfor\nusing\nthis\ntype\nof\ntrigger\ndescription.\nThe\nfirst\nis\nto\nallow\na\nrule\nto\nhave\npatterns\ninclud\ned\nin\nit\nsimply\nfor\nthe\nsake\nof\nclarity.\nThe\nsecond\nis\nto\ninclude\npat\nterns\nonly\nto\nspecify\ncontext.\nA\nProcedural\ntrigger\ndescription\ncan\nbe\nused\nto\nimplement\na\nmixed\nchaining\nstrategy\nin\nwhich\na\nforwardrule\ntrigger\ninvokes\nbackward\nchain\ning\ncapabilities.\nThis\nwould\nbe\nuseful\nif\nit\nis\nknown\nthat\na\nparticular\ntype\nof\npredication\nis\nnever\nactually\nasserted\nbut\nis\nonly\ndeduced\nby\nbackward\nchaining\nrules.\nThe\nfollowing\nrule\nis\nhow\none\nwould\nimplement\nthis\nmixedchaining\nstrate\ngy\nif\nit\nwere\nknown\nthat\nFOO2\npredications\nare\nonly\ndeduced\nby\nbackward\nchaining\nrules:\n(definepredicate\nfoo1\n(a\nb))\n(definepredicate\nfoo2\n(a\nb))\n(definepredicate\nbackwardfoo2\n(a\nb))\n(definepredicate\nfoo3\n(a\nb\nc))\n(defrule\nfoo\n(:forward)\nIf\n[and\n[foo1\n?a\n?b]\n(ask\n[foo2\n?b\n?c]\n#'(lambda\n(ignore)\n(succeed)))]\nThen\n[foo3\n?a\n?b\n?c])\n(defrule\nfoo2backward\n(:backward)\nIf\n[backwardfoo2\n?b\n?a]\nThen\n[foo2\n?a\n?b])\nThe\nstructure\nof\nthe\nrete\nnetwork\nfor\nthis\nrule\nis\na\nsimple\nlinear\nchain\ncon\nsisting\nof\na\nmatch\nnode\nfollowed\nby\na\nprocedural\nnode\n(acting\nas\na\ngenera\ntor)\nas\nshown\nin\nfigure\n30.\nIf\nwe\nexecute\nthe\nfollowing\ntwo\njoshua:tell's\nthen\nthe\nrule\nwill\nbe\ntriggered\nby\nthe\nsecond\nstatement\nwhich\nmatches\nthe\nfirst\npattern\nof\nthe\nrule.\nExecu\ntion\nthen\nproceeds\nto\nthe\nprocedural\nnode\nwhich\nchains\nbackward\nusing\nthe\nrule\nFOO2BACKWARD.\nThis\nis\nshown\nin\nfigure\n31.\n\nJoshua Language Dictionary\nMarch 1999\nFigure\n40.\nGraph\nof\nthe\nMixed\nChaining\nRule\nFoo\nFigure\n41.\nTrace\nof\nThe\nMixed\nChaining\nRule\nFoo\nHowever\nthis\nrule\ncan\nbe\nmade\nmore\ndeclarative\nappearing\nby\nusing\njoshua:expandforwardruletrigger\nas\nfollows:\n(definepredicatemodel\nmixedchainingmixin\n()\n())\n(definepredicatemethod\n(expandforwardruletrigger\nmixedchainingmixin)\n(name\ntruthvalue\nignore)\n(let\n((query\n(if\n(eql\ntruthvalue\n*true*)\nself\n'[not\n,self))))\n'(:procedure\n(prog1\nnil\n(ask\n,query\n#'(lambda\n(ignore)\n(succeed))))\n,name)))\n\nMarch 1999\nJoshua Language Dictionary\n(definepredicate\nfoo2\n(a\nb)\n(mixedchainingmixin\ndefaultpredicatemodel))\n(defrule\nfoo\n(:forward)\nIf\n[and\n[foo1\n?a\n?b]\n[foo2\n?b\n?c]]\nThen\n[foo3\n?a\n?b\n?c])\n(clear)\n(tell\n[backwardfoo2\n2])\n(tell\n[foo1\n2])\nNow\nthe\nrule\nFOO\nappears\nto\nsimply\nmatch\ntwo\npatterns.\nHowever,\nit\nactual\nly\ncompiles\ninto\nexactly\nthe\nsame\nrete\nnetwork\nas\nshown\nin\nfigure\n40.\nSometimes\nusing\njoshua:ask\nin\nthe\ntrigger\npart\nof\na\nrule\nmay\nnot\nbe\nthe\nappropriate\nway\nto\nachieve\na\nmixed\nchaining\nstrategy.\nOne\nreason,\nis\nthat\njoshua:ask\nqueries\nthe\nworld\nfor\nfacts\nthat\nare\ndeducible\nat\nthat\nmoment.\nIf\na\nnew\nfact\narrives\nlater\nthat\nwould\nhave\nmade\nthe\ngoal\ndeducible,\njoshua:ask\nwill,\nof\ncourse,\nnot\nnotice\nthis.\nHowever,\nforward\nchaining\nrules\nshould\ndraw\nconclusions\nwhenever\nthe\ndata\nwarrants\nthe\ndeduction.\nA\nsolution\nto\nthis\nproblem\nis\nto\nuse\na\nmore\nexplicit\nform\nof\nreasoning\nin\nwhich\ngoal\ndirected\nreasoning\nis\nconducted\nby\nforward\nrules\nwhich\nare\ntrig\ngered\nby\nexplicit\npredications\nstating\nthe\nexistence\nof\na\ngoal.\nHere\nis\nan\nalternative\nmixed\nchaining\nscheme\nwhich\nimplements\nbackward\nchaining\nby\nexplicitly\ntelling\nshow\npredications.\nThese\ntrigger\nforward\nrules\nwhich\nthen\nwork\nto\nfind\na\nway\nto\nsatisfy\nthe\ngoal\nincluded\nin\nthe\nshow\nstatement.\nFor\nexample,\nthe\nfollowing\nrule:\n(defrule\nfoo2explicitgoal\n(:forward)\nIf\n[and\n[show\n[foo2\n?a\n?b]]\n[backwardfoo2\n?b\n?a]]\nThen\n[foo2\n?a\n?b])\nWill\ndeduce\nFOO2\nanytime\nthat\nBACKWARDFOO2\nis\nasserted\nand\nthere\nis\na\nSHOW\npredication\nstating\nthat\nwe\nwant\nthis\nconclusion\nto\nbe\ndrawn.\nThe\nrule\nis\nmore\nflexible\nthan\na\nbackward\nrule,\nsince\nit\ndoes\nnot\ndepend\non\nthe\nrelative\norder\nof\nposting\nthe\ngoal\nand\nasserting\nthe\ndata\nnecessary\nto\ndeduce\nit.\n(Of\ncourse,\nthis\nrule\nis\nalso\nless\nefficient\nthan\na\nbackward\nrule).\nWe\ncan\nuse\njoshua:expandforwardruletrigger\njust\nas\nwe\ndid\nin\nthe\npre\nvious\nsection\nto\nmake\nthe\nrule\nFOO\nuse\nthis\nform\nof\nmixed\nchaining\nwhile\nretaining\nits\ndeclarative\nappearance,\nas\nfollows:\n(definepredicatemodel\nmixchainmixin\n()\n())\n(defvar\n*insidealternativebackwardchainingmixin*\nnil)\n\nJoshua Language Dictionary\nMarch 1999\n(definepredicatemethod\n(expandforwardruletrigger\nmixchainmixin)\n(name\ntruthvalue\ncontext)\n(if\n*insidealternativebackwardchainingmixin*\n'(:match\n,self\n,name\n,truthvalue)\n(let\n((*insidealternativebackwardchainingmixin*\nt))\n(let\n((query\n(if\n(eql\ntruthvalue\n*true*)\nself\n'[not\n,self))))\n'(:and\n,(expandforwardruletrigger\n'(tell\n[show\n,query])\nnil\n*true*\ncontext)\n,(expandforwardruletrigger\nself\nname\ntruthvalue\ncontext))))))\n(definepredicate\nshow\n(predication))\n(definepredicate\nfoo2\n(a\nb)\n(mixchainmixin\ndefaultpredicatemodel))\nThis\njoshua:expandforwardruletrigger\nmethod\nexpands\nthe\nFOO2\npattern\nof\nthe\nrule\ninto\ntwo\ncomponents.\nThe\nfirst\njoshua:tell's\nthe\nSHOW\nstatement\nthat\ntriggers\nthe\nFOO2EXPLICITGOAL\nrule.\nThe\nsecond\nis\na\nsimple\nmatch\nnode\nthat\nwaits\nfor\nthe\nFOO2\ngoal\nto\nbecome\ntrue.\nThe\njoshua:expand\nforwardruletrigger\nmethod\nis\nsomewhat\ntricky\nbecause\nit\nwants\nto\nexpand\nthe\nintial\n[foo2\n...\n]\npattern\ninto\ntwo\nnodes,\none\nof\nwhich\njoshua:tells\n[show\n[foo2\n...\n]]\nand\nthe\nother\nof\nwhich\nmatches\n[foo2\n...\n].\nA\nspecial\nvariable\nis\nbound\nto\nprevent\nan\ninfinite\nrecursion\nin\nthe\nexpansion\nof\nthis\npattern.\nFigure32shows\nthe\nRete\nnet\nfor\nthis\nrule.\nFigure\n42.\nGraph\nof\nMixed\nChaining\nRule\nFoo\n\nMarch 1999\nJoshua Language Dictionary\nNotice\nthat\nthe\nrule\ncontains\ntwo\nmatch\nnodes,\none\nfor\neach\npattern.\nThe\nmatch\nnode\nfor\nthe\nFOO1\npattern\nleads\nto\na\nprocedural\nnode\nwhich\njoshua:tells\na\n[show\n[foo2\n...\n]]\npredication\nand\nthen\njoshua:succeeds.\nFollowing\nthis\nthe\ntwo\npaths\nmerge.\nIf\nthe\nFoo1\nstatement\nis\nasserted\nfirst\nthe\nrule\nwill\nassert\nthe\nSHOW\nstatement\nwhich\nwill\ncause\nthe\nFOO2EXPLICIT\nGOAL\nrule\nto\nwait\nfor\na\nFOO2BACKWARD\nstatement.\nAt\nwhich\npoint\nthe\nFOO2\nEXPLICITGOAL\nrule\nwill\nassert\na\nFOO2\nstatement\nwhich\nwill\nmatch\nthe\nother\ntrigger\npattern\nof\nthe\nFOO\nrule.\nIf\nthe\nfacts\nare\nasserted\nin\nthe\nother\norder,\nthe\nrule\nwill\nalso\ndeduce\nthe\ndesired\nconclusion,\nas\nshown\nin\nfigures\nand\nFigure\n43.\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nFigure\n44.\nTrace\nof\nExplicitly\nControlled\nMixed\nChaining\nHere's\nan\nexample\nusing\nthe\n:ignore\ntrigger\ndescription:\n(defrule\nadderforward\n(:forward)\nIf\n[and\n[typeof\n?a\nadder]\n[Valueof\naddend\n?a\n?value1]\n[Valueof\naugend\n?a\n?value2]]\nThen\n'[valueof\noutput\n?a\n,(+\n?value1\n?value2)])\nA\ntriggerindexing\nscheme\nmight\nbe\nused\nwhich\nguarantees\nthat\nthis\nrule\nwill\nonly\nbe\ntriggered\nby\nValueof\nassertions\nthat\ndescribe\nthe\nvalues\nof\nthe\nADDEND\nand\nAUGEND\nof\nadders.\nIn\nsuch\na\ncase\nthe\nfirst\npattern\nis\nrequired\nduring\nrule\ncompilation\nto\ninform\nthe\njoshua:locateforwardruletrigger\nmethod\nthat\nit\nis\nindexing\npatterns\nhaving\nto\ndo\nwith\nadders.\nHowever,\n\nJoshua Language Dictionary\nMarch 1999\nonce\nsuch\na\ntriggerindexing\nscheme\nis\nestablished\nthe\nfirst\npattern\nis\nactu\nally\nredundant.\n(definepredicatemethod\n(expandforwardruletrigger\ntypeofmodel)\n(ignore\nignore\nignore)\n'(:ignore))\n(definepredicate\ntypeof\n(object\ntype)\n(typeofmodel\ndefaultprotocolimplementationmodel))\nSee\nthe\nsection \"The\nJoshua\nRule\nCompiler\",\npage\n26.\njoshua:expandbackwardruleaction\nruleaction\nsup\nJoshua\nProtocol\nMethod\nportvariablename\ntruthvalue\nother\naskargs\ncontext\npredication\nAn\naction\nof\na\nbackward\nchaining\nrule\n(i.e.\npart\nof\nthe\nIfpart)\nname\nThe\nname\n(if\nany)\nof\nthe\nlogicvariable\nwhich\nshould\nbe\nbound\nto\nthe\nbackward\nsupport\nof\nthis\nquery.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern.\notheraskargs\nKeyword\narguments\nto\njoshua:ask\nwhich\nshould\nbe\nin\ncluded\nwith\nthis\nquery.\ncontext\nThe\nentire\nIfpart\nof\nthe\nrule,\nwhich\ncan\nbe\nregarded\nas\nthe\ncontext\nof\nthis\nquery.\njoshua:expandbackwardruleaction\nis\ncalled\nby\nthe\nJoshua\nrule\ncompiler\nas\nthe\nfirst\nstep\nof\ntranslating\nthe\nsyntax\nof\na\nbackwardchaining\nrule\ninto\ncompiled\nLisp\ncode.\nWhat the Backward Rule-compiler Does to the Actions of a Rule\nThe\nbackward\nrule\ncompiler\nturns\nthe\nIfpart\nof\na\nrule\ninto\na\nseries\nof\nnest\ned\njoshua:ask's.\nFor\nexample,\nthe\nactions\nof\nthe\nfollowing\nrule:\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\nare\nconverted\ninto\na\nhighly\noptimized\nversion\nof\nthe\nfollowing\ncode:\n\nMarch 1999\nJoshua Language Dictionary\n(ask\n[foo1\n?x\n?y]\n#'(lambda\n(support2196)\n(unify\n?f1\nsupport2196)\n(ask\n[not\n[foo2\n?y\n?z]]\n#'(lambda\n(support2197)\n(unify\n?f2\n#:support2197)\n(let\n((ji::rulesupport\n(list\nji::.goal.\nji::.truthvalue.\n'(rule\nfoobar)\nsupport2196\nsupport2197)))\n(funcall\nji::.continuation.\nji::rulesupport))))\n:dobackwardrules\nnil))\nThe\nbackward\nrule\ncompiler\nalso\nhandles\nthe\nkeyword\narguments\nwhich\ncan\nbe\nattached\nto\npatterns\nin\nthe\nIfpart\nof\nthe\nrule.\nSee\nthe\nsection \"Advanced\nFeatures\nof\nJoshua\nRules\",\npage\n24.\nThe Contract of the Generic Function joshua:expand-backward-rule-action\nThe\njoshua:expandbackwardruleaction\nprotocol\nfunction\ncontrols\nhow\nthe\nconversion\nis\nperformed.\njoshua:expandbackwardruleaction\nis\ncalled\nonce\nfor\neach\npredication\nin\ncluded\nin\nthe\nIfpart\nof\nthe\nrule.\nIts\njob\nis\nto\nreturn\na\nlist\nstructure\nthat\nexplains\nto\nthe\nrule\ncompiler\nhow\nto\nprocess\nthe\npattern.\nFor\nexample\nin\nthe\nfollowing\nrule:\n(defrule\nfoobar\n(:backward)\nIf\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2\n]\nThen\n[foo3\n?x\n?y\n?z])\njoshua:expandbackwardruleaction\nwill\nbe\ncalled\nthree\ntimes\n(once\nfor\nthe\nentire\njoshua::and\nand\nthen\nonce\nfor\neach\npredication\ninside\nthe\njoshua::and).\njoshua:expandbackwardruleaction\ntakes\nfive\narguments:\nthe\npattern\nto\nexpand,\nthe\nname\nof\nits\n:support\nvariable\n(or\nnil),\nits\ntruth\nvalue,\nthe\nvalue\nof\nthe\nkeyword\narguments\nattached\nto\nthis\npattern\nthat\nshould\nbe\npassed\nonto\njoshua:ask\n(e.g.\n:dobackwardrules\nand\n:do\nquestions)\nand\nthe\nentire\nIfpart\n(which\ncan\nbe\ntreated\nas\nthe \"context\"\nof\nthe\npattern).\nThus,\nthe\narguments\npassed\nin\nfor\nthese\nthree\ncalls\nwil\nbe:\n[and\n[foo1\n?x\n?y]\n:support\n?f1\n:dobackwardrules\nnil\n[not\n[foo2\n?y\n?z]]\n:support\n?f2]\nnil\n*true*\n(t\nt)\n<the\nwhole\nIfpart>\n[foo1\n?x\n?y]\n?f1\n*true*\n(nil\nt)\n<the\nwhole\nIf\npart>\n[foo2\n?y\n?z]\n?f2\n*false*\n(t\nt)\n<the\nwhole\nIf\npart>\nNote\nthat\nalthough\nwe\nhave\ndisplayed\nthe\npatterns\nas\nif\nthey\nwere\npredica\ntions,\nthis\nis\nnot\nactually\ntrue.\njoshua:expandbackwardruleaction\nruns\nat\ncompile\ntime\nand\nmanipulates\na\nsourcecode\nrepresentation\nof\npredica\ntions\nand\nlogicvariables,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\n\nJoshua Language Dictionary\nMarch 1999\njoshua:expandbackwardruleaction\nshould\nreturn\na\nlist\nstructure\n(called\na\nactiondescription)\nwhich\nmust\nbe\none\nof\nthe\nfollowing\nforms:\n1.\n(:match\npattern\nname\ntruthvalue\naskkeywordargs).\nThis\naction\nde\nscription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\naction\nshould\nbe\ntreated\nsimply\nas\na\npattern\nto\nbe\njoshua:ask'ed.\nThis\naction\nwill\ncom\npile\ninto\nan\njoshua:ask\nform\nwhose\ncontinuation\nwill\nperform\nthe\nac\ntions\nfollowing\nthis\none.\n-\npattern\nis\nthe\nsource\nrepresentation\nof\nthe\npredication\nthat\nshould\nbe\njoshua:ask'ed.\nThis\nis\nnormally\njust\nthe\nfirst\nargument\nto\njoshua:expandbackwardruleaction.\n-\nname\nis\nthe\nname\nof\na\nlogic\nvariable\nwhich\nshould\nbe\nbound\nto\nthe\nquerysupport\npassed\nby\njoshua:ask\nto\nits\ncontinuation;\nthis\nallows\nprocedural\ncode\nin\nthe\nIfPart\nof\nthe\nrule\nto\nexamine\nthe\nsupport\nfor\nthe\nvarious\nactions.\n-\ntruthvalue\n(which\nin\nthe\ncurrent\nimplementation\nshould\nbe\neither\njoshua:*true*\nor\njoshua:*false*)\nis\nthe\ntruth\nvalue\nwhich\nthe\nmatching\npredication\nis\nrequired\nto\nhave\nin\norder\nto\nsatisfy\nthe\njoshua:ask.\n-\nThe\nvalues\nof\nthe\nkeyword\narguments\nto\nbe\npassed\nto\njoshua:ask.\nThis\nshould\nnormally\nbe\nidentical\nto\nthe\nequivalent\nargument\npassed\ninto\njoshua:expandbackwardruleaction.\n2.\n(:and\nactiondescriptions)\nThis\naction\ndescription\ninforms\nthe\nrule\ncom\npiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\nconjunction\nof\nactions\nall\nof\nwhich\nmust\nbe\nsatisfied.\nThe\nsystemprovided\ndefault\nmethod\nfor\nAND\npredications\nreturns\nthis\ntype\nof\naction\ndescription.\nThe\nsecond\nele\nment\nof\nthe\ntrigger\ndescription\nmust\nbe\na\nlist\nof\naction\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expandbackwardruleaction.\n3.\n(:or\nactiondescriptions)\nThis\naction\ndescription\ninforms\nthe\nrule\ncom\npiler\nthat\nthe\ncurrent\npattern\nis\nactually\na\ndisjunction\nof\nactions\nany\none\nof\nwhich\nmust\nbe\nsatisfied\nin\norder\nto\nsatify\nthe\nwhole\naction.\nThe\nsystem\nprovided\ndefault\nmethod\nfor\nOR\npredications\nreturns\nthis\ntype\nof\naction\ndescription.\nThe\nsecond\nelement\nof\nthe\naction\ndescription\nmust\nbe\na\nlist\nof\naction\ndescriptions,\ni.e.\nlists\nreturned\nby\ncalling\njoshua:expandbackwardruleaction.\n4.\n(:procedure\nlispexpression\nname)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nthe\ncurrent\ntrigger\nis\nnot\na\npattern\nto\nbe\njoshua:ask'ed\nbut\nrather\na\nLisp\nexpression\nthat\nappears\nin\nthe\nIfpart\nof\nthe\nbackward\nrule.\nSuch\nexpressions\nare\nexecuted\nonce\nall\nproceed\ning\nactions\nin\nthe\nrule\nhave\nbeen\nsatisfied.\nThe\nexpression\ncan\nact\nas\na\nfilter\nby\nreturning\neither\njoshua::t\nor\njoshua::nil.\njoshua::t\nindi\n\nMarch 1999\nJoshua Language Dictionary\ncates\nsuccess;\nin\nthis\ncase\nthe\nbindings\naccumulated\nup\nto\nthis\npoint\nare\nconsidered\nacceptable\nand\nrule\nexecution\ncontinues.\njoshua::nil\nin\ndicates\nfailure;\nin\nthis\ncase\nthe\nbindings\nare\nconsidered\nunacceptable.\nThe\nexpression\ncan\nalso\nact\nas\na\ngenerator\nin\nwhich\nit\nproduces\nsever\nal\nnew\nsets\nof\nbindings\neach\nof\nwhich\nis\nconsistent\nwith\nthe\nbindings\nthat\nwere\nin\neffect\njust\nbefore\nthe\naction\nbegan\nexecution.\nTo\ndo\nthis\nit\nshould\nbind\nwhatever\nlogicvariables\nit\nwants\nto\nand\nthen\ncall\njoshua:succeed.\njoshua:succeed\ntakes\na\nrestargument;\nthe\nrule\ncom\npiler\nwill\narrange\nfor\nthis\nvalue\npassed\nto\njoshua:succeed\nto\nbe\nbound\nto\nthe\nlogicvariable\nwhich\nis\nthe\nthird\nelement\nof\nthe\naction\ndescrip\ntion.\nSee\nthe\nfunction\njoshua:succeed,\npage\n232.\n5.\n(:ignore)\nThis\naction\ndescription\ninforms\nthe\nrule\ncompiler\nthat\nit\nshould\nignore\nthis\naction.\nThe\nare\ntwo\nreasons\nfor\nusing\nthis\ntype\nof\naction\ndescription.\nThe\nfirst\nis\nto\nallow\na\nrule\nto\nhave\nactions\nincluded\nin\nit\nsimply\nfor\nthe\nsake\nof\nclarity.\nThe\nsecond\nis\nto\ninclude\nactions\nonly\nto\nspecify\ncontext.\nExplain Predication Command\nTraces\nthe\nchain\nof\nTMS\njustifications\nfor\ndatabasepredication\nthrough\nrules\nto\nprimitive\nsupport\n(premises\nand\nassumptions).\ndatabasepredication\nA\npredication\nobject\nthat\nis\nin\nthe\ndatabase.\nMust\nbe\nthe\nactual\ndatabase\nobject,\nand\nnot\na\ncopy\nof\nit.\ndepth\nSpecifies\nhow\nmany\nlayers\ndeep\ninto\nthe\nexplanation\nto\ngo\nbe\nfore\ncutting\noff.\nThis\nis\na\ncommand\ninterface\nto\nJoshua's\njoshua:explain\nfunction.\njoshua:explain\ndatabasepredication\n&optional\ndepth\n(stream\nFunction\n*standardoutput*)\nTraces\nthe\nchain\nof\nTMS\njustifications\nfor\ndatabasepredication\nthrough\nrules\nto\nprimitive\nsupport\n(premises\nand\nassumptions).\ndatabasepredication\nA\npredication\nobject\nthat\nis\nin\nthe\ndatabase.\nMust\nbe\nthe\nactual\ndatabase\nobject,\nand\nnot\na\ncopy\nof\nit.\ndepth\nSpecifies\nhow\nmany\nlayers\ndeep\ninto\nthe\nexplanation\nto\ngo\nbefore\ncutting\noff.\nstream\nSpecifies\na\nstream\nto\nwhich\nto\ndisplay\nthe\noutput.\nIn\ngeneral,\njoshua:explain\nis\nuseful\nonly\nif\ndatabasepredication\nis\nbuilt\non\nsome\nmodel\nthat\nsupports\nthe\nTMS\nprotocol.\nExamples:\n\nJoshua Language Dictionary\nMarch 1999\n(definepredicate\nhigherinfoodchain\n(eater\nlowerinfoodchain)\n(ltms:ltmspredicatemodel))\n(definepredicate\nfavoritemeal\n(eater\nfood)\n(ltms:ltmspredicatemodel))\n;\nA\ngood\nexample\nof\nhow\nto\nimplement\ntransitive\nrelations\n(defrule\nbasicfoodchain\n(:forward)\nif\n[favoritemeal\n?eater\n?eatee]\nthen\n[higherinfoodchain\n?eater\n?eatee])\n(defrule\ntransitivefoodchain\n(:forward)\nif\n[and\n[favoritemeal\n?eater\n?eatee]\n[higherinfoodchain\n?eatee\n?food]]\nthen\n[higherinfoodchain\n?eater\n?food])\n(defun\nmeals\n()\n(clear)\n(tell\n[and\n[favoritemeal\nredherring\nworm]\n[favoritemeal\nworm\nalgae]])\n(tell\n[favoritemeal\nMissMarple\nredherring]\n:justification\n:assumption)\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\n(meals)\nTrue\nthings\n[HIGHERINFOODCHAIN\nMISSMARPLE\nREDHERRING]\n[HIGHERINFOODCHAIN\nMISSMARPLE\nWORM]\n[HIGHERINFOODCHAIN\nMISSMARPLE\nALGAE]\n[HIGHERINFOODCHAIN\nWORM\nALGAE]\n[HIGHERINFOODCHAIN\nREDHERRING\nALGAE]\n[HIGHERINFOODCHAIN\nREDHERRING\nWORM]\n[FAVORITEMEAL\nMISSMARPLE\nREDHERRING]\n[FAVORITEMEAL\nWORM\nALGAE]\n[FAVORITEMEAL\nREDHERRING\nWORM]\nFalse\nthings\nNone\n\nMarch 1999\nJoshua Language Dictionary\n(ask\n[higherinfoodchain\nMissMarple\n?food]\n#'(lambda\n(backwardsupport)\n(explain\n(askdatabasepredication\nbackwardsupport))))\n[HIGHERINFOODCHAIN\nMISSMARPLE\nREDHERRING]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nBASICFOODCHAIN\n[FAVORITEMEAL\nMISSMARPLE\nREDHERRING]\nis\ntrue\nIt\nis\nan\n:ASSUMPTION\n[HIGHERINFOODCHAIN\nMISSMARPLE\nWORM]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nTRANSITIVEFOODCHAIN\n[FAVORITEMEAL\nMISSMARPLE\nREDHERRING]\nis\ntrue\nIt\nis\nan\n:ASSUMPTION\n[HIGHERINFOODCHAIN\nREDHERRING\nWORM]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nBASICFOODCHAIN\n[FAVORITEMEAL\nREDHERRING\nWORM]\nis\ntrue\nIt\nis\na\n:PREMISE\n[HIGHERINFOODCHAIN\nMISSMARPLE\nALGAE]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nTRANSITIVEFOODCHAIN\n[FAVORITEMEAL\nMISSMARPLE\nREDHERRING]\nis\ntrue\nIt\nis\nan\n:ASSUMPTION\n[HIGHERINFOODCHAIN\nREDHERRING\nALGAE]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nTRANSITIVEFOODCHAIN\n[FAVORITEMEAL\nREDHERRING\nWORM]\nis\ntrue\nIt\nis\na\n:PREMISE\n[HIGHERINFOODCHAIN\nWORM\nALGAE]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nBASICFOODCHAIN\n[FAVORITEMEAL\nWORM\nALGAE]\nis\ntrue\nIt\nis\na\n:PREMISE\nRelated\nFunctions:\njoshua:graphtmssupport\nSee\nthe\nsection \"Explaining\nProgram\nBeliefs\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:*false*\nVariable\nA\nnamed\nconstant\nused\nby\nJoshua\nto\ndenote\na\ntruth\nvalue\nof\nfalse.\nYou\ncan\ncompare\ntruth\nvalues\nusing\neql.\nRelated\nTopics:\njoshua:*true*\njoshua:*unknown*\njoshua:*contradictory*\njoshua:truthvalue\njoshua:predicationtruthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:fetch\npredication\ncontinuation\nFunction\nThe\ndual\nto\njoshua:insert,\njoshua:fetch\nis\nthe\nfirst\nphase\nof\njoshua:ask.\nIt\ntakes\npredication\nand\nsearches\nfor\nit\nin\nthe\nvirtual\ndatabase.\nIt\ncalls\ncontin\nuation\nfor\neach\noccurrence\nof\nsomething\nin\nthe\ndatabase\nthat\nmight\nunify\nwith\npredication.\nIt\nis\nthe\nresponsibility\nof\njoshua:askdata\nto\ndo\nthe\nunifi\ncation,\nif\nthat\nis\nthe\nprogrammer's\nintent.\nNote\nthat\njoshua:fetch\nis\nrequired\nto\ncall\nits\ncontinuation\non\nobjects\nthat\nare\nactually\nin\nthe\ndatabase,\nnot\nreconstructed\ncopies.\nSee\njoshua:askdata\nfor\nmore\ndiscussion\nof\nthis\nissue.\npredication\nA\npattern\nto\nsearch\nfor.\njoshua:fetch\nmust\ncall\ncontinu\nation\non\na\nsuperset\nof\nthe\npredications\nin\nthe\ndatabase\nthat\nunify\nwith\npredication.\ncontinuation\nA\nfunction\nof\none\nargument\nthat\njoshua:fetch\ncalls\non\neach\ncandidate.\nFor\nsome\nexamples:\nSee\nthe\nfunction\njoshua:insert,\npage\n189.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\nGraph Forward Rule Triggers Command\nGraphs\nthe\nforward\nrule\nRete\nnetwork.\nForward\nrules\nor\nall\nGraph\nthe\nRete\nnetwork\nfor\nwhich\nforward\nrules.\n:Follow\nExtraneous\nPaths\nWhether\nto\ninclude\nthe\nrules\nwhich\nshare\nmatch\nor\nmerge\nnodes\nwith\nthe\nspecified\nrules.\nThis\ndefaults\nto\nYes.\n:Orientation\nDraw\nthe\ngraph\nin\nwhich\ndirection:\nvertical\nor\nhorizontal.\n:Output\nDestination\nWhere\nto\ndisplay\nthe\ninformation.\nGraph\nForward\nRule\nTriggers\ndisplays\nthe\ngraph\nof\nthe\nforward\nrule\nRete\nnetwork\nfor\none\nor\nmore\nrules.\nIt\nis\nuseful\nfor\ndetermining\nthe\nextent\nof\nnode\nsharing\nbe\ntween\nforward\nrules.\nThe\ngraph\nalso\nincludes\na\nnumber\nfor\neach\nnode,\nindicating\nthe\nnumber\nof\nenvironments\ncurrently\nheld\nby\nthat\nnode.\nThis\ncan\ngive\nyou\na\nrough\nmeasure\nof\nhow\nmuch\nwork\nis\nbeing\ndone\nat\neach\npoint\nin\nthe\nnetwork.\nSee\nthe\nsection \"Forward\nRule\nTriggers:\nthe\nRete\nNetwork\",\npage\n27.\njoshua:graphdiscriminationnet\nrootnode\nFunction\njoshua:graphdiscriminationnet\ndisplays\nthe\ndiscrimination\nnet\nas\na\nhori\nzontal\ntree\nwith\nthe\nroot\non\nthe\nleftmost\nside\nand\nthe\nleaf\nnodes\non\nthe\nfar\nright.\nrootnode\nThe\nroot\nnode\nof\na\ndiscrimination\nnet,\nusually\nfrom\nthe\nvariable\nji:*datadiscriminationnet*.\n\nMarch 1999\nJoshua Language Dictionary\nThe\ndifferent\npredications\nthat\ndiscriminate\nto\na\nsingle\nnode\nare\ndisplayed\nindividually\nin\nthe\nleaf\nnode.\nSee\nfigure\n9,\nfor\nan\nexample.\nSee\nthe\nsection \"Organization\nof\nthe\nDefault\nDiscrimination\nNet\",\npage\n17.\njoshua:graphqueryresults\nbackwardsupport\n&key\n(:orientation\nFunction\n:vertical)\n(:stream\n*standardoutput*)\nA\nconvenience\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\njoshua:graphqueryresults\ndraws\na\ngraph\nof\nthe\nsupport\ninformation\nin\nbackwardsupport,\nthat\nis,\nthe\nsuccessful\nquery,\nand\nthe\nreasons\nit\nsucceed\ned.\nbackwardsupport\nis\nfully\ndescribed\nin\nthe\ndictionary\nentry\nfor\njoshua:ask.\njoshua:graphqueryresults\nboth\nextracts\nand\ninterprets\nthe\ninformation\nfor\nyou.\nbackwardsupport\nA\nsupport\nargument\npassed\nby\njoshua:ask\nto\na\ncontinu\nation.\n:orientation\nSpecifies\nthe\ngraph\norientation.\nDefault\nis\nvertical.\n:stream\nThe\nstream\non\nwhich\nthe\ngraph\nis\noutput.\nDefault\nis\n*standardoutput*.\nThe\nconvenience\nfunction\njoshua:printqueryresults\nprints\nthe\nsame\ninfor\nmation\nas\njoshua:graphqueryresults.\nThe\naccessor\nfunction\njoshua:askderivation\nextracts\nall\nthe\nsupport\nfor\na\nsatisfied\nquery\nbut\nwithout\ninterpreting\nit.\nFor\nthe\nsake\nof\ncomparison\nwe'll\nuse\nthe\nsame\nexamples\nto\nillustrate\nall\nthree\nof\nthese\nfunctions.\nExamples:\nFirst,\na\nquery\nsatisfied\nfrom\nthe\ndatabase.\nThe\ngraph\nshows\nthe\ndatabase\npredication\nthat\nmatched\nthe\nquery.\n(definepredicate\nedible\n(object))\n(definepredicate\nisfood\n(object))\n(definepredicate\ncontains\n(object\nsubstance))\n(definepredicate\nsweet\n(object))\n(definepredicate\ntypeof\n(object\ntype))\n(tell\n[edible\nchocolatecoatedants])\n(tell\n[contains\nchocolatecoatedants\nhoney])\nThe\nnext\nexample\nshows\nthe\nsupport\nfor\na\nquery\nthat\nis\nsatisfied\nfrom\nrules.\nWe\nhave\na\nrule,\ndessert?,\nthat\ndetermines\nif\na\ngiven\nfood\nis\na\n\nJoshua Language Dictionary\nMarch 1999\ndessert.\nEach\nof\nthis\nrule's\nsubgoals\nis\nderived\nfrom\nother\nrules.\nHere\nare\nthe\nrule\ndefinitions.\n(defrule\nfood?\n(:backward)\nif\n[edible\n?object]\nthen\n[isfood\n?object])\n(defrule\nsweet?\n(:backward)\nif\n[or\n[contains\n?object\nchocolate]\n[contains\n?object\nsugar]\n[contains\n?object\nhoney]]\nthen\n[sweet\n?object])\n(defrule\ndessert?\n(:backward)\nif\n[and\n[isfood\n?object]\n[sweet\n?object]]\nthen\n[typeof\n?object\ndessert])\nNow\nwe\njoshua:ask\nwhat\nfoods\nqualify\nas\ndesserts\nand\nwhy.\nIn\nthe\ngraph,\novals\ndenote\nqueries\nthat\nwere\nnot\nsatisfied\ndirectly\nby\nthe\ndatabase.\nRect\nangles\ndenote\nqueries\nthat\nwere\nsatisfied\nby\nthe\ndatabase.\nThe\ntop\nof\nthe\ngraph\nshows\nthe\nsatisfied\ngoal,\nand\nnames\nthe\nrule\nthat\nsat\nisfied\nit.\nThe\nrest\nof\nthe\ngraph\nshows\nsuccessive\nsubgoals\nand\nhow\neach\nwas\nsatisfied.\nSince\nbackward\nchaining\nstops\nwhen\nit\nfinds\ndatabase\npredications,\nthe\nbot\ntom\nleaves\nof\nthe\ngraph\ntree\nare\nqueries\nthat\nwere\nsatisfied\nby\nthe\ndatabase.\nHence\nthey\nare\nrectangles,\nwhereas\nintermediate\nnodes\nare\novals.\nThe\narrows\nmove\nin\nthe\nifthen\n(logical\nconclusion)\ndirection.\nHere's\nan\nextension\nto\nthe\nprevious\nexample,\nto\nshow\nhow\nthe\ngraph\ndis\nplays\ntruth\nvalues\nof\njoshua:*false*.\nWe\nadd\na\nrule\nto\neliminate\nfirst\ncourse\nchoices:\nthe\nrule\nsays\nthat\nthings\nthat\nare\nliquid\nand\nare\nnot\ndesserts\nare\nnot\na\nmain\ncourse.\n(definepredicate\nisconsistencyof\n(food\nconsistency))\n\nMarch 1999\nJoshua Language Dictionary\n(defrule\nsoup?\n(:backward)\nif\n[and\n[not\n[typeof\n?food\ndessert]]\n[isconsistencyof\n?food\nliquid]]\nthen\n[not\n[typeof\n?food\nmaincourse]])\n(tell\n[not\n[typeof\nchickenbroth\ndessert]])\n(tell\n[isconsistencyof\nchickenbroth\nliquid])\nThe\ngraph\ndisplays\nthe\nsatisfied\nquery\nprefixed\nby\n[not\n...].\nThe\ndatabase\npredication\nmatching\nthe\nquery\nappears\nwithout\nthe\nprefix,\njust\nas\nit\nwould\nin\nthe\ndatabase\ndisplay.\nThe\nlabel\nabove\nit\nindicates\nthat\nits\ntruth\nvalue\nis\njoshua:*false*.\n(Predications\nwith\na\ntruth\nvalue\nof\njoshua:*true*\nare\nnot\nlabelled\nas\nsuch\nin\nthe\ngraph\nDatabase\nheading.)\nRelated\nFunctions:\njoshua:ask\njoshua:printqueryresults\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"Explaining\nBackward\nChaining\nSupport\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:graphtmssupport\n&rest\npredications\nFunction\nDisplays\na\ngraph\nof\nthe\nTMS\nsupport\nfor\npredications,\nthat\nis,\nof\nthe\ndepen\ndency\ninformation\nwhich\na\nTruth\nMaintenance\nSystem\nstores\nin\nthe\ndatabase\nalong\nwith\npredications.\nThe\ngraph\ntraces\nthe\nsupport\nchain\nthrough\nthe\ndependency\nrecords\ncreated\nby\nforward\nrules\n(or\nother\ncallers\nof\njoshua:justify\nsuch\nas\nthe\nthe\n:justification\nkeyword\nargument\nto\njoshua:tell)\nto\nthe\nunderlying\nprimitive\nsupport\n(assumptions\nand\npremis\nes).\n(Backward\nchaining\nsupport\nis\nnot\ngraphed,\nsince\nthe\nrule\nresult\nis\nnot\nstored\nin\nthe\ndatabase.\nFor\nthat,\nyou\nprobably\nwant\njoshua:graphquery\nresults.)\nExample:\n(definepredicate\ndreamsin\n(language\ndreamer)\n(ltms:ltmspredicatemodel))\n(definepredicate\ncountsin\n(language\nperson)\n(ltms:ltmspredicatemodel))\n(definepredicate\nnativespeakerof\n(language\nspeaker)\n(ltms:ltmspredicatemodel))\n\nJoshua Language Dictionary\nMarch 1999\n(defrule\nnativespeaker?\n(:forward)\nif\n[and\n[dreamsin\n?language\n?person]\n[countsin\n?language\n?person]]\nthen\n[nativespeakerof\n?language\n?person])\n(tell\n[dreamsin\nSpanish\nViolet]\n:justification\n:assumption)\n(tell\n[countsin\nSpanish\nViolet])\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\n[nativespeakerof\n?x\n?y]\n(opposite\ntruthvalue\ntoo?\n[default\nYes])\nYes\nTrue\nthings\n[NATIVESPEAKEROF\nSPANISH\nVIOLET]\nFalse\nthings\nNone\nYou\nmust\ngive\njoshua:graphtmssupport\nthe\nactual\npredication\nobject\nthat\nresides\nin\nthe\ndatabase,\nrather\nthan\na\ncopy\nof\nit.\nIn\nour\nexample\nwe\nre\ntrieve\nthe\npredication\nobject\nby\nclicking\nthe\nmouse\nover\nit\nin\nthe\ndatabase\ndisplay.\nSince\nthe\nsupport\ngraph\ntraces\nthe\nsupport\nfor\nfacts\nthat\nare\nin\nthe\ndatabase,\nall\nnodes\nare\nrectangles.\n(Compare\nthe\ndisplay\nof\njoshua:graph\nqueryresults.)\nThe\ntop\nof\nthe\ngraph\ntree\nshows\nthe\npredication\nwhose\nsup\nport\nwe\nwant\nto\nknow\nabout.\nWe\nsee\nthat\nthis\npredication\nwas\nderived\nfrom\na\nforward\nrule,\nwhich\nin\nturn\nwas\nderived\nfrom\nsome\npredications.\nThe\nbot\ntom\nleaves\nof\nthe\ngraph\ntree\nshow\nprimitive\nsupport\n(premise\nor\nassump\ntion)\ndenoting\nthe\nend\nof\nthe\nforward\nchaining\nprocess.\nThe\narrows\npoint\nin\nthe\nifthen\n(logical\nconclusion)\ndirection.\nHere's\nan\nexample\nshowing\nthe\nsupport\ngraph\nfor\na\npredication\nwhose\ntruth\nvalue\nis\njoshua:*false*.\n(definepredicate\nhasticket\n(claimant)(ltms:ltmspredicatemodel))\n(definepredicate\nadmissible\n(claimant)(ltms:ltmspredicatemodel))\n\nMarch 1999\nJoshua Language Dictionary\n(defrule\nnofreelunch\n(:forward)\nif\n[not\n[hasticket\n?x]]\nthen\n[not\n[admissible\n?x]])\n(tell\n[not\n[hasticket\nJane]])\nPredications\nwith\na\ntruth\nvalue\nof\njoshua:*false*\nappear\nwith\nan\nindication\nthat\nthey\nare\nfalse.\nSee\nthe\nsection \"Explaining\nProgram\nBeliefs\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:insert\npredication\nFunction\nThis\nis\nthe\nfirst\nstep\nused\nby\ntell.\nIt\ntakes\npredication\nand\nputs\nit\ninto\nthe\nvirtual\ndatabase.\nIt\ndoes\nnot\ndeal\nwith\nany\njustification\nor\nforward\nrule\ntriggering\nissues.\njoshua:insert\nreturns\ntwo\nvalues:\n1.\nThe\ncanonical\nversion\nof\npredication\nthat\nis\nstored\nin\nthe\ndatabase.\n(That\ncan\nbe\ndistinct\nfrom\npredication\nif\nanother\npredication\nthat\nis\na\njoshua:variant\nof\npredication\nhas\npreviously\nbeen\njoshua:inserted.\nThe\none\nalready\nin\nthe\ndatabase\nis\nreturned.)\nSee\nthe\nfunction\njoshua:variant,\npage\n252.\n2.\nA\nflag\nthat\nindicates\nwhether\npredication\nwas\nalready\nin\nthe\ndatabase.\nIf\nthe\npredication\nis\nwas\nnot\nin\nthe\ndatabase\nthen\nthis\nvalue\nshould\nbe\nt,\n(indicating\nthat\nan\ninsertion\ndid,\nin\nfact,\ntake\nplace).\njoshua:insert\nand\njoshua:fetch\nare\nprobably\nmethods\nyou\nwill\nwant\nto\nde\nfine\noften\nin\nyour\ndata\nmodels,\nas\nthey\ncontrol\nthe\nway\nyour\npredications\nare\nstored.\nSee\nthe\nexample\ndeveloped\nin\nthe\nsection \"Customizing\nthe\nData\nIndex\".\n\nJoshua Language Dictionary\nMarch 1999\njoshua:justify\nconclusion\ntruthvalue\n&optional\nmnemonic\ntrue\nFunction\nsupport\nfalsesupport\nunknownsupport\nSets\nthe\ntruthvalue\nof\nthings\nthat\ngo\ninto\nthe\ndatabase\nand\ngives\na\nTMS\nthe\ninformation\nnecessary\nfor\nmaintaining\ndependencies.\nFor\npredications\nthat\nimplement\na\nTMS,\njoshua:justify\nis\nthe\nprotocol\nfunction\nthat\nbuilds\nand\ninstalls\nthe\njustification.\nconclusion\nThe\npredication\nbeing\njustified.\ntruthvalue\nShould\nbe\none\nof\njoshua:*true*,\njoshua:*false*,\njoshua:*unknown*,\nor\njoshua:*contradictory*.\nIf\nthe\njustification\nis\nactive,\nthen\nthe\nconclusion\nwill\nassume\nthis\ntruthvalue.\nmnemonic\nAn\ninformative\nterm.\nIf\nthe\njustification\nis\nbeing\nused\nto\nrecord\nthe\nactions\nof\na\nrule,\nthen\nit\nis\nconventional\nto\nprovide\nthe\nname\nof\nthe\nrule\nas\nthe\nmnemonic.\nJusti\nfications\nbuilt\nby\nthe\nrulecompiler\nfollow\nthis\nconven\ntion.\nSome\nTMS's\nmay\nuse\nthe\nmnemonic\nto\ndistinguish\nspecially\nunderstood\ntypes\nof\njustifications\nsuch\nas\npremises.\ntruesupport\nA\nlist\nof\ndatabase\npredications,\nall\nof\nwhich\nmust\nhave\ntruthvalue\njoshua:*true*\nfor\nthe\njustification\nto\nbe\nac\ntive.\nfalsesupport\nA\nlist\nof\ndatabase\npredications,\nall\nof\nwhich\nmust\nhave\ntruthvalue\njoshua:*false*\nfor\nthe\njustification\nto\nbe\nac\ntive.\nunknownsupport\nA\nlist\nof\ndatabase\npredications,\nall\nof\nwhich\nmust\nhave\ntruthvalue\njoshua:*unknown*\nfor\nthe\njustification\nto\nbe\nactive.\nSome\nTMS's\n(e.g.\nthe\nLTMS)\nmay\nrequire\nthis\nargument\nto\nnil.\nIf\nall\nthe\npredications\nin\nthe\nset\nof\ntruesupport\nhave\ntruthvalue\njoshua:*true*,\nall\nthe\npredications\nin\nthe\nfalsesupport\nhave\ntruthvalue\njoshua:*false*\nand\nall\nthe\npredications\nin\nthe\nunknownsupport\nhave\ntruth\nvalue\njoshua:*unknown*,\nthen\nthe\njustification\nis\nconsidered\nto\nbe\nactive.\nAn\nactive\njustification\ncauses\nthe\nconclusion\nto\nassume\nits\ndesired\ntruth\nvalue.\nExamples:\nSuppose\nyou\nwant\nto\nfind\nall\nthe\nisexiledfrom\nstatements\nin\nyour\ndatabase\nand\nadd\na\nnew\njustification\nto\nthem.\nFor\nexample,\nyour\ndatabase\nmight\ncontain:\n(definepredicate\nisexiledfrom\n(person\nplace)\n(ltms:ltmspredicatemodel))\n(tell\n[isexiledfrom\nProspero\nPadua])\n(tell\n[isexiledfrom\nHenryJames\nUS])\n\nMarch 1999\nJoshua Language Dictionary\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\nAll\nTrue\nthings\n[ISEXILEDFROM\nHENRYJAMES\nUS]\n[ISEXILEDFROM\nPROSPERO\nPADUA]\nFalse\nthings\nNone\n(justify\n[ISEXILEDFROM\nHENRYJAMES\nUS]\n*true*\n:assumption)\nNIL\n(explain\n[ISEXILEDFROM\nHENRYJAMES\nUS])\n[ISEXILEDFROM\nHENRYJAMES\nUS]\nis\ntrue\nIt\nis\na\n:PREMISE\nNIL\n(unjustify\n[ISEXILEDFROM\nHENRYJAMES\nUS])\nNIL\n(explain\n[ISEXILEDFROM\nHENRYJAMES\nUS])\n[ISEXILEDFROM\nHENRYJAMES\nUS]\nis\ntrue\nIt\nis\nan\n:ASSUMPTION\nNIL\nand\nyou\nwant\nto\nadd\nan\n:assumption\njustification\nto\neach\nof\nthose.\nYou\nwould\nuse\njoshua:justify\nand\njoshua:ask\nas\nfollows:\n(ask\n[isexiledfrom\n?\n?]\n#'(lambda\n(backwardsupport)\n(justify\n(askdatabasepredication\nbackwardsupport)\n(askquerytruthvalue\nbackwardsupport)\n:assumption))\n:dobackwardrules\nnil)\nRelated\nFunctions:\njoshua:unjustify\nSee\nthe\nsection \"Justification\nand\nTruth\nMaintenance\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nTruth\nMaintenance\nProtocol\",\npage\n54.\njoshua:known\nproposition\nJoshua\nPredicate\nThis\nmodal\noperator\nchecks\nif\nproposition\nis\nknown\nto\nbe\neither\njoshua:*true*\nor\njoshua:*false*.\nproposition\nA\nJoshua\npredication\npattern\nto\nmatch.\nThe\nquery:\n(ask\n[known\n[foo\n?x]]\n#'\n...)\nSucceeds\nwhen:\neither\n[foo\n?x]\nor\n[not\n[foo\n?x]]\nsucceed\nIf\nsuccessful,\njoshua:known\ncalls\nthe\ncontinuation\non\nthe\ninstantiated\nquery.\n\nJoshua Language Dictionary\nMarch 1999\nExamples:\nWe\nuse\nthe\npredicate\nshapeof\nand\nthe\nstatements\nabout\nshapes\nthat\nwe\nused\nto\nillustrate\nthe\npredicate\njoshua:provable.\nHere\nthey\nare.\n(definepredicate\nshapeof\n(object\nshape))\n(tell\n[and\n[shapeof\ndoor\noval]\n[not\n[shapeof\nleaf\npointed]]])\n[AND\n[SHAPEOF\nDOOR\nOVAL]\n[NOT\n[SHAPEOF\nLEAF\nPOINTED]]]\nShow\nJoshua\nDatabase\nTrue\nthings\n[SHAPEOF\nDOOR\nOVAL]\nFalse\nthings\n[SHAPEOF\nLEAF\nPOINTED]]\nThe\ndatabase\ncontains\none\nstatement\nabout\nshapes\nthat\nis\njoshua:*true*\nand\none\nthat\nis\njoshua:*false*.\njoshua:known\nsucceeds\nin\neach\ncase,\nre\nturning\nthe\ninstantiated\nquery.\nNote\nthat\nthere\nis\nno\nindication\nof\ntruth\nvalue\nin\nthe\ninstantiated\nquery.\nThat\nis\nbecause\nwhen\nwe\nask\nif\nsomething\nis\njoshua:known,\nwe\nare\ninterested\nonly\nin\nthe\nexistence\nof\nan\nanswer,\nnot\nin\nits\nparticular\ntruth\nvalue.\n(backwardsupport\nfor\nthe\njoshua:ask\ndoes\nin\ndicate\nwhat\nthe\ntruth\nvalue\nof\nthe\ninstantiated\nquery\nwas.)\n(ask\n[known\n[shapeof\n?object\n?shape]]\n#'printquery)\n[KNOWN\n[SHAPEOF\nDOOR\nOVAL]]\n[KNOWN\n[SHAPEOF\nLEAF\nPOINTED]]\n;\nargument\nwas\nactually\nfalse\nA\nmore\ninteresting\nquestion\nis\nto\nask\nwhether\na\npredication\nis\nnot\nknown\nto\nJoshua.\nThe\nquery:\n(ask\n[not\n[known\n[foo\n?x]]]\n#'\n...)\nSucceeds\nwhen:\n[foo\n?x]\nand\n[not\n[foo\n?x]]\nboth\nfail\nExamples:\n;\nThe\nproposition\nis\nnot\nin\nthe\ndatabase\nor\nin\nrules\n(ask\n[not\n[known\n[shapeof\nnose\npointed]]]\n#'printquery)\n[not\n[KNOWN\n[SHAPEOF\nNOSE\nPOINTED]]]\njoshua:known\ncan\nalso\nbe\nused\nin\nbackward\nrules.\nThe\ngoal\nof\nthe\nvery\nin\nconsiderate\nrule\nin\nthe\nnext\nexample\nis\nto\nselect\na\ndancing\npartner.\nThe\nrule\nfilters\nout\nthose\nwhose\nability\nat\n?activity\nis\nunknown,\nkeeping\nthose\nwho\nare\ngood\nor\nbad.\n(definepredicate\nneedapartner\n(activity))\n(definepredicate\nisgoodat\n(activity\nperson))\n(definepredicate\nuseaspartner\n(person\nactivity))\n\nMarch 1999\nJoshua Language Dictionary\n(defrule\ntwoleftfeetwilldo\n(:backward)\nif\n[and\n[needapartner\n?activity]\n[known\n[isgoodat\n?activity\n?person]]]\nthen\n[useaspartner\n?person\n?activity])\n(defun\ntestknown\n()\n(clear)\n(tell\n[and\n[needapartner\ndancing]\n[isgoodat\ndancing\nTom]\n[not\n[isgoodat\ndancing\nFred]]])\n'Done.)\n(testknown)\nDONE.\n(ask\n[useaspartner\n?person\n?activity]\n#'printquery)\n[USEASPARTNER\nTOM\nDANCING]\n[USEASPARTNER\nFRED\nDANCING]\nThe\ngoal\nof\nthe\nrule\nin\nthe\nnext\nexample\nis\nto\nhire\nan\napplicant\nif\nhis/her\nqualifications\nare\nexcellent,\neven\nif\nnothing\nis\nknown\nabout\nthe\napplicant's\nexperience\nlevel.\n(definepredicate\nhasqualifications\n(person\nqualifications))\n(definepredicate\npreviousexperience\n(person\nexperience))\n(definepredicate\nhirecandidate\n(name))\n(tell\n[and\n[hasqualifications\nFred\npoor]\n[hasqualifications\nJoan\nexcellent]])\n[AND\n[HASQUALIFICATIONS\nFRED\nPOOR]\n[HASQUALIFICATIONS\nJOAN\nEXCELLENT]]\n(defrule\ninexperiencenoobstacle\n(:backward)\nif\n[and\n[hasqualifications\n?applicant\nexcellent]\n[not\n[known\n[previousexperience\n?applicant\n?howmuch]]]]\nthen\n[hirecandidate\n?applicant])\n(ask\n[hirecandidate\nFred]\n#'printquery)\n(ask\n[hirecandidate\n?applicant]\n#'printquery)\n[HIRECANDIDATE\nJOAN]\nRelated\nPredicate:\njoshua:provable\n\nJoshua Language Dictionary\nMarch 1999\njoshua:locatebackwardquestiontrigger\npredication\ntruthvalue\nGeneric\nFunction\ncontinuation\ncontext\nquestionname\npredication\nA\npattern\nunder\nwhich\nto\nindex\na\nbackward\nquestion.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern\nunder\nwhich\nthe\nques\ntion\nshould\nbe\nindexed.\ncontinuation\nA\nfunction\npassed\nin\nwhich\ncan\ndetermine\nwhether\na\nnew\nquestion\ntrigger\nis\nnecessary.\ncontext\nUseful\nin\nadvanced\nmodeling\napplications.\nquestionname\nThe\nname\nof\nthe\nbackwardquestion\nbeing\nindexed.\nTailoring\nof\nbackwardquestion\nindexing\nis\nusually\naccomplished\nby\nprovid\ning\nmethods\nfor\nthe\njoshua:locatebackwardquestiontrigger\nand\njoshua:mapoverbackwardquestiontriggers\nprotocol\nfunctions.\nThe\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackward\nquestiontrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locate\nbackwardquestiontrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nproviding\na\njoshua:locatebackward\nquestiontrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nquestions\nare\ncurrently\nindexed\nwhere.\nThe\njoshua:locatebackward\nquestiontrigger\nmethod\nis\nresponsible\nfor\nmanaging\nthe\ndata\nstructures\nused\nto\nindex\nbackward\nquestion\ntriggers.\nEach\nbackward\nchaining\nquestion\nhas\na\nunique\ntrigger\nstructure,\nindexed\nby\nthe\npattern\n(and\nits\ntruth\nvalue)\nof\nthe\nquestion.\nJust\nas\njoshua:insert\nmaps\nvariant\npredications\nto\na\nunique\nlocation\nin\na\ndata\nindex,\njoshua:locatebackwardquestiontrigger\nlocates\nthe\nunique\nplace\nin\na\nquestion\nindex\nwhere\nJoshua\nstores\na\nback\nward\nchaining\nquestion's\ntrigger\nstructure.\nTo\naccomplish\nthis,\nthe\njoshua:locatebackwardquestiontrigger\nmethod\nis\nrequired\nto\nfollow\na\nrather\ncomplicated\npattern\nof\nbehavior.\nThis\npattern\nis\ndivided\ninto\nfour\nparts:\n1.\nUsing\npredication\nand\ntruthvalue\nit\nshould\ndetermine\nwhere\nthe\ntrig\nger\nshould\nbe\nstored.\nThis\nlocation\nshould\ncontain\neither\njoshua::nil\nor\na\nlist\nof\nbackward\nquestion\ntriggers\n(we'll\ncall\nthis\nthe\ntrigger\nset).\n2.\ncontinuation\nshould\nbe\ncalled\nwith\nthe\ntrigger\nset\nas\nan\nargument.\nIt\nwill\nreturn\nthree\nvalues:\na.\nA\nnew\ntrigger\nset\nwhich\nincludes\na\nbackward\nquestion\ntrigger\nda\ntastructure\ncorresponding\nto\npredication\nand\ntruthvalue\n(the\npat\ntern\nunder\nwhich\nthis\ntrigger\nis\nindexed).\nb.\nA\nflag\nindicating\nwhether\na\nnew\ntrigger\ndatastucture\nwas\nadded\nto\nthe\ntrigger\nset.\nIf\nthis\nvalue\nis\njoshua::t\nthen\ntrigger\nset\ndid\nnot\n\nMarch 1999\nJoshua Language Dictionary\nalready\ncontain\na\nbackward\nquestion\ntrigger\ndatastructure\nfor\npredication\nwith\ntruth\nvalue\ntruthvalue.\nc.\nThe\ncanonical\ntrigger\nwhich\nis\nthe\nunique\nbackward\nquestion\ntrig\nger\nfor\nthis\nquestion.\n3.\nIf\nthe\nvalue\nof\nflag\nis\njoshua::t,\nthen\njoshua:locatebackward\nquestiontrigger\nshould\nupdate\nits\nindex\nso\nthat\nthe\nlocation\nwhich\nused\nto\ncontain\ntrigger\nset\nwill\nnow\ncontain\nnew\ntrigger\nset.\nDuring\nthis\nstep\njoshua:locatebackwardquestiontrigger\nmay\ntake\nwhatever\nac\ntions\nit\nlikes\nto\noptimize\nthe\nquestion\nindex.\n4.\nThe\nmethod\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue.\nThe\nreason\nfor\nthis\ncomplicated\npattern\nof\nbehavior\nis\nas\nfollows:\njoshua:locatebackwardquestiontrigger\nis\nused\nas\na\nsubroutine\nof\nboth\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackward\nquestiontrigger.\nKnowledge\nof\nhow\nto\nindex\na\npattern\nis\nlocalized\nin\nthe\njoshua:locatebackwardquestiontrigger\nmethods,\nwhile\nthe\nknowledge\nof\nthe\ninternal\nstructure\nof\nthe\nbackward\ntrigger\ndatastructures\nis\nlocalized\nin\njoshua:addbackwardquestiontrigger\nand\njoshua:deletebackward\nquestiontrigger.\nThese\ntwo\nhigher\nlevels\nroutines\ncall\njoshua:locate\nbackwardquestiontrigger\npassing\nto\nit\ncontinuation,\na\nfunction\nwhich\nun\nderstands\nhow\nto\nmanipulate\nsets\nof\nbackward\nquestion\ntrigger\ndata\nstructures.\nContinuation\nadds\n(or\ndeletes)\na\nbackward\nquestion\ntrigger\ndatastructure\nfor\nthe\ncurrent\nquestion\n(if\nnecessary)\nand\nreturns\nenough\ninformation\nso\nthat\njoshua:locatebackwardquestiontrigger\nwill\nknow\nwhat\nactions\nwere\ntaken.\njoshua:locatebackwardquestiontrigger\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue\nso\nthe\nquestion's\ndebugging\ninformation\ncan\npoint\nto\nthe\nactual\ndata\nstructure\ncorresponding\nto\nits\ntrigger\npatterns.\nAs\nan\nexample,\nconsider\nthe\nfollowing\nmethod\nwhich\nindexes\nbackward\nquestion\ntriggers\non\nthe\nproperty\nlist\nof\nthe\npredicate\nin\nthe\npattern.\n(definepredicatemodel\npredicatebackwardquestionindexing\n()\n())\n\nJoshua Language Dictionary\nMarch 1999\n(definepredicatemethod\n(locatebackwardquestiontrigger\npredicatequestionindexing)\n(truthvalue\ncontinuation\nignore\nignore)\n;;\nThis\nis\npart\none,\nlocate\nthe\ncurrent\ntrigger\nset\n(let\n((oldtriggers\n(get\n(predicationpredicate\nself)\n'backwardquestiontriggers)))\n;;\npart\ntwo,\ncall\nthe\ncontinuation\n(multiplevaluebind\n(newtriggers\nchangedp\nnode)\n(funcall\ncontinuation\noldtriggers)\n;;\npart\nthree,\nupdate\nthe\nindex\nwith\nnew\ntriggers,\nif\nsomething\nchanged\n(when\nchangedp\n(setf\n(get\n(predicationpredicate\nself)\n'backwardquestiontriggers)\nnewtriggers))\n;;\npart\nfour,\nreturn\nthe\ncanonical\nbackward\nquestion\ntrigger\nnode)))\n;;;\nThis\nmap\nmethod\nfinds\nthe\ntriggers\nstored\nby\nthe\nprevious\nguy.\n(definepredicatemethod\n(mapoverbackwardquestiontriggers\npredicatequestionindexing)\n(continuation)\n;;\nhow\nto\ncollect\nall\nbackward\ntriggers\nthat\nmight\nbe\ninterested\nin\nme\n(declare\n(sys:downwardfunarg\ncontinuation))\n;backward\nreference\n(loop\nfor\nretenode\nin\n(get\n(predicationpredicate\nself)\n'backwardquestiontriggers)\ndoing\n(funcall\ncontinuation\nRetenode)))\nThe\ncontext\nargument\nis\nprovided\nto\nallow\nthe\njoshua:locatebackward\nquestiontrigger\nmethod\nto\nuse\na\ncontext\nsensitive\nindexing\ntechnique.\nSee\nthe\nsection \"The\nJoshua\nQuestion\nIndexing\nProtocol\",\npage\n48.\njoshua:locatebackwardruletrigger\npredication\ntruthvalue\ncon\nGeneric\nFunction\ntinuation\ncontext\nrulename\npredication\nA\npattern\nunder\nwhich\nto\nindex\na\nbackward\nrule.\ntruthvalue\nThe\ntruth\nvalue\nof\nthe\npattern\nunder\nwhich\nthe\nrule\nshould\nbe\nindexed.\ncontinuation\nA\nfunction\npassed\nin\nwhich\ncan\ndetermine\nwhether\na\nnew\nrule\ntrigger\nis\nnecessary.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nin\nadvanced\nmod\neling\napplications.\nrulename\nThe\nname\nof\nthe\nbackward\nrule\nbeing\nindexed.\nTailoring\nof\nbackward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locatebackwardruletrigger\nand\njoshua:map\noverbackwardruletriggers\nprotocol\nfunctions.\nThe\njoshua:addbackward\nruletrigger\nand\njoshua:deletebackwardruletrigger\nmethods\nprovided\nas\n\nMarch 1999\nJoshua Language Dictionary\nJoshua's\ndefaults\ncall\njoshua:locatebackwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nprovid\ning\na\njoshua:locatebackwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\nThe\njoshua:locatebackwardruletrigger\nmethod\nis\nresponsible\nfor\nmanag\ning\nthe\ndata\nstructures\nused\nto\nindex\nbackward\nrule\ntriggers.\nEach\nback\nward\nchaining\nrule\nhas\na\nunique\ntrigger\nstructure,\nindexed\nby\nthe\npattern\n(and\nits\ntruth\nvalue)\nof\nthe\nthenpart\nof\nthe\nrule.\nJust\nas\njoshua:insert\nmaps\nvariant\npredications\nto\na\nunique\nlocation\nin\na\ndata\nindex,\njoshua:locatebackwardruletrigger\nlocates\nthe\nunique\nplace\nin\na\nrule\nin\ndex\nwhere\nJoshua\nstores\na\nbackward\nchaining\nrule's\ntrigger\nstructure.\nTo\naccomplish\nthis,\nthe\njoshua:locatebackwardruletrigger\nmethod\nis\nre\nquired\nto\nfollow\na\nrather\ncomplicated\npattern\nof\nbehavior.\nThis\npattern\nis\ndivided\ninto\nfour\nparts:\n1.\nUsing\npredication\nand\ntruthvalue\nit\nshould\ndetermine\nwhere\nthe\ntrig\nger\nshould\nbe\nstored.\nThis\nlocation\nshould\ncontain\neither\njoshua::nil\nor\na\nlist\nof\nbackward\nrule\ntriggers\n(we'll\ncall\nthis\nthe\ntrigger\nset).\n2.\ncontinuation\nshould\nbe\ncalled\nwith\nthe\ntrigger\nset\nas\nan\nargument.\nIt\nwill\nreturn\nthree\nvalues:\na.\nA\nnew\ntrigger\nset\nwhich\nincludes\na\nbackward\nrule\ntrigger\ndata\nstructure\ncorresponding\nto\npredication\nand\ntruthvalue\n(the\npattern\nunder\nwhich\nthis\ntrigger\nis\nindexed).\nb.\nA\nflag\nindicating\nwhether\na\nnew\ntrigger\ndatastucture\nwas\nadded\nto\nthe\ntrigger\nset.\nIf\nthis\nvalue\nis\njoshua::t\nthen\ntrigger\nset\ndid\nnot\nalready\ncontain\na\nbackward\nrule\ntrigger\ndatastructure\nfor\npredi\ncation\nwith\ntruth\nvalue\ntruthvalue.\nc.\nThe\ncanonical\ntrigger\nwhich\nis\nthe\nunique\nbackward\nrule\ntrigger\nfor\nthis\nrule.\n3.\nIf\nthe\nvalue\nof\nflag\nis\njoshua::t,\nthen\njoshua:locatebackwardrule\ntrigger\nshould\nupdate\nits\nindex\nso\nthat\nthe\nlocation\nwhich\nused\nto\ncon\ntain\ntrigger\nset\nwill\nnow\ncontain\nnew\ntrigger\nset.\nDuring\nthis\nstep\njoshua:locatebackwardruletrigger\nmay\ntake\nwhatever\nactions\nit\nlikes\nto\noptimize\nthe\nrule\nindex.\n4.\nIt\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue.\nThe\nreason\nfor\nthis\ncomplicated\npattern\nof\nbehavior\nis\nas\nfollows:\njoshua:locatebackwardruletrigger\nis\nused\nas\na\nsubroutine\nof\nboth\njoshua:addbackwardruletrigger\nand\njoshua:deletebackwardrule\n\nJoshua Language Dictionary\nMarch 1999\ntrigger.\nKnowledge\nof\nhow\nto\nindex\na\npattern\nis\nlocalized\nin\nthe\njoshua:locatebackwardruletrigger\nmethods,\nwhile\nthe\nknowledge\nof\nthe\ninternal\nstructure\nof\nthe\nbackward\ntrigger\ndatastructures\nis\nlocalized\nin\njoshua:addbackwardruletrigger\nand\njoshua:deletebackwardrule\ntrigger.\nThese\ntwo\nhigher\nlevels\nroutines\ncall\njoshua:locatebackwardrule\ntrigger\npassing\nto\nit\ncontinuation,\na\nfunction\nwhich\nunderstands\nhow\nto\nma\nnipulate\nsets\nof\nbackward\nrule\ntrigger\ndatastructures.\nContinuation\nadds\n(or\ndeletes)\na\nbackward\nrule\ntrigger\ndatastructure\nfor\nthe\ncurrent\nrule\n(if\nnecessary)\nand\nreturns\nenough\ninformation\nso\nthat\njoshua:locatebackwardruletrigger\nwill\nknow\nwhat\nactions\nwere\ntaken.\njoshua:locatebackwardruletrigger\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue\nso\nthe\nrule's\ndebugging\ninformation\ncan\npoint\nto\nthe\nactual\ndata\nstructure\ncorresponding\nto\nits\ntrigger\npatterns.\nAs\nan\nexample,\nconsider\nthe\nfollowing\nmethod\nwhich\nindexes\nbackward\nrule\ntriggers\non\nthe\nproperty\nlist\nof\nthe\npredicate\nin\nthe\npattern.\n(definepredicatemodel\npredicatebackwardruleindexing\n()\n())\n(definepredicatemethod\n(locatebackwardruletrigger\npredicateruleindexing)\n(truthvalue\ncontinuation\nignore\nignore)\n;;\nThis\nis\npart\none,\nlocate\nthe\ncurrent\ntrigger\nset\n(let\n((oldtriggers\n(get\n(predicationpredicate\nself)\n'backwardruletriggers)))\n;;\npart\ntwo,\ncall\nthe\ncontinuation\n(multiplevaluebind\n(newtriggers\nchangedp\nnode)\n(funcall\ncontinuation\noldtriggers)\n;;\npart\nthree,\nupdate\nthe\nindex\nwith\nnew\ntriggers,\nif\nsomething\nchanged\n(when\nchangedp\n(setf\n(get\n(predicationpredicate\nself)\n'backwardruletriggers)\nnewtriggers))\n;;\npart\nfour,\nreturn\nthe\ncanonical\nbackward\nrule\ntrigger\nnode)))\n;;;\nThis\nmap\nmethod\nfinds\nthe\ntriggers\nstored\nby\nthe\nprevious\nguy.\n(definepredicatemethod\n(mapoverbackwardruletriggers\npredicateruleindexing)\n(continuation)\n;;\nhow\nto\ncollect\nall\nbackward\ntriggers\nthat\nmight\nbe\ninterested\nin\nme\n(declare\n(sys:downwardfunarg\ncontinuation))\n;backward\nreference\n(loop\nfor\nretenode\nin\n(get\n(predicationpredicate\nself)\n'backwardruletriggers)\ndoing\n(funcall\ncontinuation\nRetenode)))\nThe\ncontext\nargument\nis\nprovided\nto\nallow\nthe\njoshua:locatebackward\nruletrigger\nmethod\nto\nuse\na\ncontext\nsensitive\nindexing\ntechnique.\nFor\nex\nample,\nconsider\nthe\nfollowing\nbackward\nrule\nwhich\ndescribes\nthe\nbehavior\nof\nan\nadder:\n\nMarch 1999\nJoshua Language Dictionary\n(defrule\nadderbehavior\n(:backward)\nIf\n[and\n[typeof\n?a\nadder]\n[statusof\n?a\nworking]\n[valueof\ninput1\n?a\n?input1]\n[valueof\ninput2\n?a\n?input2]\n(unify\n?sum\n(+\n?input1\n?input2))]\nThen\n[valueof\noutput\n?a\n?sum])\nIt\nmight\nbe\nappropriate\nto\nuse\nan\nobjectoriented\nset\nof\ndata\nstructures\nto\nmanage\nthe\nindexing\nof\nthis\nrule's\ntrigger\ndata\nstructures.\nIn\nsuch\na\nscheme,\nthere\nis\none\nobject\nrepresenting\nthe\nclass\nof\nall\nadders\nand\nan\naddi\ntional\nobject\nfor\neach\nspecific\nadder\nbeing\nreasoned\nabout.\nThe\ntriggers\nfor\nthe\nrule\nshould\nbe\nattached\nto\nthe\nobject\nrepresenting\nthe\nclass\nof\nall\nad\nders,\nsince\nthis\nis\ninformation\nshared\nby\nall\nthe\nindividual\nadders.\nConsider\nwhat\nhappens\nwhen\njoshua:locatebackwardruletrigger\nis\ncalled\nto\nindex\nthis\nrule\nunder\nthe\npattern\n[valueof\noutput\n?a\n?sum].\nIt\nshould\nattach\nthe\ncorresponding\ntrigger\ndatastructure\nto\nthe\nSUM\nslot\nof\nthe\nobject\nrepresent\ning\nthe\nclass\nof\nall\nadders.\nHowever,\nit\ncannot\ndetermine\nthis\nwithout\nknow\ning\nthat\nthis\nis\na\nrule\nabout\nadders\nand\nthat\ninformation\nis\ncontained\nin\nthe\npattern\n[typeof\n?a\nadder].\nIt\nis\nfor\nthis\nreason\nthat\nthe\nentire\nifpart\nof\nthe\nrule\nis\npassed\ninto\njoshua:locatebackwardruletrigger\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\njoshua:locateforwardruletrigger\npredication\ntruthvalue\ncontin\nGeneric\nFunction\nuation\ncontext\nrulename\npredication\nA\npattern\nunder\nwhich\nto\nindex\na\nforward\nrule\ntrigger.\ntruthvalue\nThe\ntruth\nvalue\nunder\nwhich\nthe\nrule\nshould\nbe\nin\ndexed.\ncontinuation\nA\nfunction\npassed\nin\nwhich\ncan\ndetermine\nwhether\na\nnew\nrule\ntrigger\nis\nnecessary.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nin\nadvanced\nmod\neling\napplications.\nrulename\nThe\nname\nof\nthe\nrule\nbeing\nindexed.\nTailoring\nof\nforward\nrule\nindexing\nis\nusually\naccomplished\nby\nproviding\nmethods\nfor\nthe\njoshua:locateforwardruletrigger\nand\njoshua:mapover\nforwardruletriggers\nprotocol\nfunctions.\nThe\njoshua:addforwardrule\ntrigger\nand\njoshua:deleteforwardruletrigger\nmethods\nprovided\nas\nJoshua's\ndefaults\ncall\njoshua:locateforwardruletrigger\nas\na\nsubroutine.\nAll\nof\nthe\ninteresting\ntailoring\nof\ntheir\nbehavior\ncan\nbe\nobtained\nby\nprovid\ning\na\njoshua:locateforwardruletrigger\nmethod.\nHowever,\nit\nmight\nbe\nuseful\nin\nsome\napplications\nto\nprovide\n:before\nor\n:after\nmethods\nfor\nthe\nadd\nand\ndelete\nmethods,\nfor\nexample\nto\nkeep\ntrack\nof\nwhat\nrules\nare\ncurrently\nindexed\nwhere.\n\nJoshua Language Dictionary\nMarch 1999\nThe\njoshua:locateforwardruletrigger\nmethod\nis\nresponsible\nfor\nmanaging\nthe\ndata\nstructures\nused\nto\nindex\nforward\nrule\ntriggers.\n(In\nJoshua\nforward\nrule\ntriggers\nserve\nthe\nrole\nof\nmatch\nnodes\nin\na\nRete\nNetwork).\nIn\ngeneral,\nJoshua\ntries\nto\nshare\nforward\nrule\ntriggers\nas\nmuch\nas\npossible.\nIf\nthe\nsame\npattern\nappears\nin\nthe\nIF\npart\nof\ntwo\nforward\nchaining\nrules,\nJoshua\ntries\nto\nuse\nthe\nsame\nforward\nrule\ntrigger\nfor\nboth\noccurances\nof\nthe\npattern.\n(By\nthe\npattern\nwe\nmean\ntwo\npredications\nwhich\nare\njoshua:variants\nof\neach\nother\nand\nwhich\nhave\nthe\nsame\ntruth\nvalue.)\nThus\njust\nas\njoshua:insert\nis\nshould\nmap\nvariant\npredications\nto\nthe\nsame\nlocation\nin\na\ndata\nmodel,\njoshua:locateforwardruletrigger\nshould\nmap\njoshua:variant\npatterns\nto\nthe\nsame\nlocation\nin\na\nrule\nindex.\nTo\naccomplish\nthis,\nthe\njoshua:locateforwardruletrigger\nmethod\nis\nre\nquired\nto\nfollow\na\nrather\ncomplicated\npattern\nof\nbehavior.\nThis\npattern\nis\ndivided\ninto\nfour\nparts:\n1.\nUsing\npredication\nand\ntruthvalue\nit\nshould\ndetermine\nwhere\nthe\ntrig\nger\nshould\nbe\nstored.\nThis\nlocation\nshould\ncontain\neither\njoshua::nil\nor\na\nlist\nof\nforward\nrule\ntriggers\n(we'll\ncall\nthis\nthe\ntrigger\nset).\n2.\ncontinuation\nshould\nbe\ncalled\nwith\nthe\ntrigger\nset\nas\nan\nargument.\nIt\nwill\nreturn\nvalues:\na.\nA\nnew\ntrigger\nset\nwhich\nincludes\na\nforward\nrule\ntrigger\ndata\nstructure\ncorresponding\nto\npredication\nand\ntruthvalue\n(the\npattern\nunder\nwhich\nthis\ntrigger\nis\nindexed).\nb.\nA\nflag\nindicating\nwhether\na\nnew\ntrigger\ndatastucture\nwas\nadded\nto\nthe\ntrigger\nset.\nIf\nthis\nvalue\nis\njoshua::t\nthen\ntrigger\nset\ndid\nnot\nalready\ncontain\na\nforward\nrule\ntrigger\ndatastructure\nfor\npredica\ntion\nwith\ntruth\nvalue\ntruthvalue.\nc.\nThe\ncanonical\ntrigger\nwhich\nis\nthe\nunique\nforward\nrule\ntrigger\nda\ntastructure\nwhich\nfor\nthe\npattern\npredication\nwith\ntruth\nvalue\ntruthvalue.\n3.\nIf\nthe\nvalue\nof\nflag\nis\njoshua::t,\nthen\njoshua:locateforwardrule\ntrigger\nshould\nupdate\nits\nindex\nso\nthat\nthe\nlocation\nwhich\nused\nto\ncon\ntain\ntrigger\nset\nwill\nnow\ncontain\nnew\ntrigger\nset.\nDuring\nthis\nstep\njoshua:locateforwardruletrigger\nmay\ntake\nwhatever\nactions\nit\nlikes\nto\noptimize\nthe\nrule\nindex.\n4.\nThe\nmethod\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue.\nThe\nreason\nfor\nthis\ncomplicated\npattern\nof\nbehavior\nis\nas\nfollows:\njoshua:locateforwardruletrigger\nis\nused\nas\na\nsubroutine\nof\nboth\njoshua:addforwardruletrigger\nand\njoshua:deleteforwardruletrigger.\nKnowledge\nof\nhow\nto\nindex\na\npattern\nis\nlocalized\nin\nthe\njoshua:locate\nforwardruletrigger\nmethods,\nwhile\nthe\nknowledge\nof\nthe\ninternal\nstruc\n\nMarch 1999\nJoshua Language Dictionary\nture\nof\nthe\nforward\ntrigger\ndatastructures\nis\nlocalized\nin\njoshua:add\nforwardruletrigger\nand\njoshua:deleteforwardruletrigger.\nThese\ntwo\nhigher\nlevels\nroutines\ncall\njoshua:locateforwardruletrigger\npassing\nto\nit\ncontinuation,\na\nfunction\nwhich\nunderstands\nhow\nto\nmanipulate\nsets\nof\nfor\nward\nrule\ntrigger\ndatastructures.\nContinuation\nadds\n(or\ndeletes)\na\nforward\nrule\ntrigger\ndatastructure\nfor\nthe\ncurrent\nrule\n(if\nnecessary)\nand\nreturns\nenough\ninformation\nso\nthat\njoshua:locateforwardruletrigger\nwill\nknow\nwhat\nactions\nwere\ntaken.\njoshua:locateforwardruletrigger\nshould\nreturn\ncanonical\ntrigger\nas\nits\nvalue\nso\nthe\nrule's\ndebugging\ninformation\ncan\npoint\nto\nthe\nactual\ndata\nstructure\ncorresponding\nto\nits\ntrigger\npatterns.\nAs\nan\nexample,\nconsider\nthe\nfollowing\nmethod\nwhich\nindexes\nforward\nrule\ntriggers\non\nthe\nproperty\nlist\nof\nthe\npredicate\nin\nthe\npattern.\n(definepredicatemodel\npredicateforwardruleindexing\n()\n())\n(definepredicatemethod\n(locateforwardruletrigger\npredicateruleindexing)\n(truthvalue\ncontinuation\nignore\nignore)\n;;\nThis\nis\npart\none,\nlocate\nthe\ncurrent\ntrigger\nset\n(let\n((oldtriggers\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)))\n;;\npart\ntwo,\ncall\nthe\ncontinuation\n(multiplevaluebind\n(newtriggers\nchangedp\nnode)\n(funcall\ncontinuation\noldtriggers)\n;;\npart\nthree,\nupdate\nthe\nindex\nwith\nnew\ntriggers,\nif\nsomething\nchanged\n(when\nchangedp\n(setf\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)\nnewtriggers))\n;;\npart\nfour,\nreturn\nthe\ncanonical\nforward\nrule\ntrigger\nnode)))\n;;;\nThis\nmap\nmethod\nfinds\nthe\ntriggers\nstored\nby\nthe\nprevious\nguy.\n(definepredicatemethod\n(mapoverforwardruletriggers\npredicateruleindexing)\n(continuation)\n;;\nhow\nto\ncollect\nall\nforward\ntriggers\nthat\nmight\nbe\ninterested\nin\nme\n(declare\n(sys:downwardfunarg\ncontinuation))\n;forward\nreference\n(loop\nfor\nretenode\nin\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)\ndoing\n(funcall\ncontinuation\nRetenode)))\nThe\ncontext\nargument\nis\nprovided\nto\nallow\nthe\njoshua:locateforwardrule\ntrigger\nmethod\nto\nuse\na\ncontext\nsensitive\nindexing\ntechnique.\nFor\nexample,\nconsider\nthe\nfollowing\nforward\nrule\nwhich\ndescribes\nthe\nbehavior\nof\nan\nad\nder:\n\nJoshua Language Dictionary\nMarch 1999\n(defrule\nadderbehavior\n(:forward)\nIf\n[and\n[typeof\n?a\nadder]\n[statusof\n?a\nworking]\n[valueof\ninput1\n?a\n?input1]\n[valueof\ninput2\n?a\n?input2]]\nThen\n'[valueof\noutput\n?a\n,(+\n?input1\n?input2)])\nIt\nmight\nbe\nappropriate\nto\nuse\nan\nobjectoriented\nset\nof\ndata\nstructures\nto\nmanage\nthe\nindexing\nof\nthis\nrule's\ntrigger\ndata\nstructures.\nIn\nsuch\na\nscheme,\nthere\nis\none\nobject\nrepresenting\nthe\nclass\nof\nall\nadders\nand\nan\naddi\ntional\nobject\nfor\neach\nspecific\nadder\nbeing\nreasoned\nabout.\nThe\ntriggers\nfor\nthe\nrule\nshould\nbe\nattached\nto\nthe\nobject\nrepresenting\nthe\nclass\nof\nall\nad\nders,\nsince\nthis\nis\ninformation\nshared\nby\nall\nthe\nindividual\nadders.\nNotice,\nhowever,\nthat\njoshua:locateforwardruletrigger\nis\ncalled\nonce\nfor\neach\ntrigger\npattern.\nConsider\nwhat\nhappens\nwhen\nit\nis\ncalled\nwith\n[valueof\nin\nput1\n?a\n?input1]\nas\nits\nargument.\nIt\nshould\nattach\nthe\ncorresponding\ntrigger\ndatastructure\nto\nthe\ninput1\nslot\nof\nthe\nobject\nrepresenting\nthe\nclass\nof\nall\nadders.\nHowever,\nit\ncannot\ndetermine\nthis\nwithout\nknowing\nthat\nthis\nis\na\nrule\nabout\nadders\nand\nthat\ninformation\nis\ncontained\nin\nthe\npattern\n[typeof\n?a\nadder].\nIt\nis\nfor\nthis\nreason\nthat\nthe\nentire\nifpart\nof\nthe\nrule\nis\npassed\ninto\njoshua:locateforwardruletrigger.\nThere\nis\na\nstrong\nsimilarity\nbetween\nthe\nrole\nplayed\nby\njoshua:locate\nforwardruletrigger\nand\nthat\nplayed\nby\nthe\ncombination\nof\njoshua:insert\nand\njoshua:uninsert.\njoshua:locateforwardruletrigger\nmanages\nthe\nin\ndexing\n(and\nunindexing)\nof\nforward\nrules.\njoshua:insert\nmanages\nthe\nindex\ning\nof\nfacts\nand\njoshua:uninsert\nmanages\nthe\nunindexing\nof\nfacts.\nThere\nis\nalso\na\nlack\nof\nsymmetry\nin\nthat\nthere\nare\ntwo\ndistinct\nmethods\nfor\nfacts\nand\nonly\none\nmethod\nfor\nrules.\nThe\ndecision\nto\nmodularlize\nthe\ntwo\nprocess\nes\ndifferently\nwas\nbased\non\nefficiency\nconsideration.\nFacts\nare\nadded\nand\nre\nmoved\nmuch\nmore\nfrequently\nthan\nrules;\nthus,\nit\nwas\nfelt\nthat\na\nslight\nloss\nof\nmodularity\nwould\nbe\ntolerable\nto\nachieve\nhigher\nperformance\nwhile\nin\nserting\n(and\nremoving)\nfacts.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\nSee\nthe\nsec\ntion \"Customizing\nthe\nRule\nIndex\",\npage\n88.\njoshua:logicvariablename\nlogicvariable\nFunction\nReturns\nthe\nsymbol\nwhich\nis\nthe\nname\nof\nlogicvariable.\nlogicvariable\nAn\nunbound\nlogic\nvariable.\nFor\nexample:\n(typecase\nx\n(unboundlogicvariable\n(logicvariablename\nx))\n(otherwise\nx))\n\nMarch 1999\nJoshua Language Dictionary\njoshua:logicvariablemakerp\nform\nFunction\nform\nAn\nsexpression.\nA\npredicate\nof\none\nargument.\nIt\nreturns\njoshua::t\nif\nthe\nargument\nis\na\nlog\nicvariablemaker\nand\njoshua::nil\notherwise.\n(setq\nx\n(read))?A\nyields:\n(ji::logicvariablemaker\n|?A|)\nand\n(logicvariablemakerp\nx)\nyields:\nT\njoshua:logicvariablemakername\nlvmaker\nFunction\nlvmaker\nA\nlogicvariablemaker\nsexpression.\nThis\nreturns\nthe\nname\nof\nthe\nlogicvariablemaker.\nFor\nexample:\n(read)?L\nyields:\n(JI::LOGICVARIABLEMAKER\n|?L|)\nand\n(logicvariablemakername\n(JI::LOGICVARIABLEMAKER\n|?L|))\nyields\n|?L|\nltms:ltmsmixin\nFlavor\nThis\nflavor\nprovides\nthe\nJoshua\nLTMS\nmethods.\nSince\nit\ndefines\nonly\nTMS\nprotocol\nmethods,\nit\nmust\nbe\ncombined\nwith\nsome\nmodel\nwhich\ndefines\nthe\nother\nprotocol\nmethods.\nRelated\ntopics:\nltms:ltmspredicatemodel\njoshua:basictmsmixin\njoshua:definepredicatemodel\njoshua:definepredicate\n\nJoshua Language Dictionary\nMarch 1999\nltms:ltmspredicatemodel\nFlavor\nThis\nflavor\ncombines\nthe\nJoshua\nLTMS\nbehavior\nwith\nthe\ndefault\npredicate\nbehavior.\nIt\nis\ncomposed\nof\nltms:ltmsmixin\nand\njoshua:defaultpredicate\nmodel.\nRelated\nfunctions:\njoshua:definepredicatemodel\njoshua:definepredicate\njoshua:makepredication\nstatement\n&optional\narea\nFunction\nConstruct\na\npredication\nout\nof\nthe\nspecified\nstatement\n(in\nthe\noptional\narea\nsupplied).\nThe\nnewly\nconstructed\npredication\nis\nnot\nentered\nin\nthe\ndatabase,\nunless\nyou\ncombine\njoshua:makepredication\nwith\njoshua:tell.\nYou\nshould\nseldom\nneed\nto\nknow\nabout\nthis,\nas\nthe\n[\n]\nsyntax\nis\nused\nin\nJoshua\ncontexts\nas\na\nreader\nmacro\nfor\njoshua:makepredication.\nstatement\nA\nlist\nwhose\nfirst\nelement\nis\nthe\nname\nof\na\n(defined)\npredicate.\nThe\nrest\nof\nthe\nlist\nelements\nare\nthe\nargu\nments\nto\nthe\npredicate.\narea\nStorage\narea\nto\ncons\nin\nExamples:\n(definepredicate\nshapeof\n(object\nshape))\n(makepredication\n'(shapeof\nwindow\nround))\n[SHAPEOF\nWINDOW\nROUND]\n;\nthis\nis\nnot\nin\nthe\ndatabase\n(tell\n(makepredication\n'(shapeof\nwindow\nround)))\n[SHAPEOF\nWINDOW\nROUND]\n;\nnew\npredication\nadded\nto\nthe\ndatabase\nT\njoshua:makepredication\nis\nuseful\nfor\nconstructing\nJoshua\npredications\nfrom\ndata\ngenerated\nwithin\nLisp\ncode.\n(Still,\nbackquoting\n[\n]\nexpressions\nshould\nsuffice\nmost\nof\nthe\ntime.)\nRelated\nFunctions:\njoshua:definepredicate\nSee\nthe\nsection \"Predications\nand\nPredicates\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:makeobject\nobjecttype\n&key\n:name\nFunction\nThis\nfunction\ninstantiates\nJoshua\nobjects.\njoshua:mapoverdatabasepredications\npredicationpattern\nfunc\nMacro\ntion\nA\nconvenience\nmacro\nfor\njoshua:ask.\nUse\nit\nwhenever\nyou\nwant\nto\nfind\nan\nanswer\nto\na\nquery\nin\nthe\ndatabase\nwithout\nusing\nrules\nor\nquestions.\n\nMarch 1999\nJoshua Language Dictionary\njoshua:mapoverdatabasepredications\nfinds\nall\ndatabase\npredications\nthat\nunify\nwith\npredicationpattern\nand\napplies\nfunction\nto\neach.\npredicationpattern\nA\npattern\nto\nmatch\nagainst\ndatabase\npredications.\nfunction\nSpecifies\nthe\noperation\nto\ndo\non\neach\ndatabase\npredica\ntion\nthat\nunifies\nwith\npredicationpattern.\nShould\nbe\na\nfunction\nof\none\nargument.\n(mapoverdatabasepredications <predication> <continuation>)\nis\nequiva\nlent\nto:\n(ask\n[foo\n?x]\n#'(lambda\n(support)\n(funcall\n<cont>\n(askdatabasepredication\nsupport)))\n:dobackwardrules\nnil)\nExample:\nWe'll\nbuild\nan\nauthortitle\nindex\nfor\na\nlibrary,\nusing\njoshua:tell\nstatements.\nWe'll\ninclude\nan\nLTMS\nin\nour\npredicate\ndefinitions,\nso\nthat\nwe\ncan\nlater\nget\njoshua:explain\nto\ntell\nus\nabout\nsome\ndatabase\npredications.\n(definepredicate\nauthorof\n(work\nauthor)\n(ltms:ltmspredicatemodel))\n(defun\nbuildauthortitleindex1\n()\n(clear)\n(tell\n[and\n[authorof\n\"The\nInterpretation\nof\nDreams\"\nFreud]\n[authorof\n\"Hedda\nGabler\"\nIbsen]\n[authorof\n\"Totem\nand\nTaboo\"\nFreud]\n[authorof\n\"A\nDoll's\nHouse\"\nIbsen]])\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\nBUILDAUTHORTITLEINDEX1\n(buildauthortitleindex1)\nTrue\nthings\n[AUTHOROF\n\"A\nDoll's\nHouse\"\nIBSEN]\n[AUTHOROF\n\"Totem\nand\nTaboo\"\nFREUD]\n[AUTHOROF\n\"Hedda\nGabler\"\nIBSEN]\n[AUTHOROF\n\"The\nInterpretation\nof\nDreams\"\nFREUD]\nFalse\nthings\nNone\nThe\nfirst\nexample\nlooks\nin\nthe\nlibrary\ndatabase\nand\nremoves\nfrom\nit\nall\nof\nFreud's\nbooks\n(perhaps\nfor\nrebinding\ndue\nto\noveruse).\nWe\nuse\njoshua:map\noverdatabasepredications\nto\nget\nour\nhands\non\nthe\nactual\npredication\nob\njects\nso\nthat\nwe\ncan\nremove\nthem.\nTo\nallow\neasy\nreplacement\nof\nthis\ninformation\nwe'll\njoshua:unjustify\nthe\nfacts\nrather\nthan\nactually\nremoving\nthem\nwith\njoshua:untell.\nThe\ntruth\nvalue\nof\neach\nof\nthese\nfacts\nbecomes\njoshua:*unknown*,\neven\nthough\nthey\n\nJoshua Language Dictionary\nMarch 1999\nphysically\nremain\nin\nthe\nsystem.\n(defun\nawaywithsigmund\n()\n(mapoverdatabasepredications\n[authorof\n?work\nFreud]\n#'unjustify)\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\nAWAYWITHSIGMUND\n(awaywithSIGMUND)\nTrue\nthings\n[AUTHOROF\n\"A\nDoll's\nHouse\"\nIBSEN]\n[AUTHOROF\n\"Hedda\nGabler\"\nIBSEN]\nFalse\nthings\nNone\nLet's\nadd\na\nforward\nrule\nthat\nsays\nthe\nlibrary\nowns\nany\nwork\nthat\nwas\nau\nthored\nby\nShakespeare,\nand\nthen\nbuild\nanother\ndatabase.\n(definepredicate\nownslibrary\n(work)\n(ltms:ltmspredicatemodel))\n(defrule\nShakespeareholdings\n(:forward)\nif\n[authorof\n?work\nShakespeare]\nthen\n[ownslibrary\n?work])\n(defun\nbuildauthortitleindex2\n()\n(clear)\n(tell\n[and\n[authorof\n\"King\nLear\"\nShakespeare]\n[authorof\n\"Hedda\nGabler\"\nIbsen]\n[ownslibrary\n\"Trumpeting\nJoshua\"]\n[authorof\n\"A\nDoll's\nHouse\"\nIbsen]])\n(cp:executecommand\n\"Show\nJoshua\nDatabase\"))\nBUILDAUTHORTITLEINDEX2\n(buildauthortitleindex2)\nTrue\nthings\n[OWNSLIBRARY\n\"Trumpeting\nJoshua\"]\n[AUTHOROF\n\"Hedda\nGabler\"\nIBSEN]\n[OWNSLIBRARY\n\"King\nLear\"]\n[AUTHOROF\n\"King\nLear\"\nSHAKESPEARE]\n[AUTHOROF\n\"A\nDoll's\nHouse\"\nIBSEN]\nFalse\nthings\nNone\nWe\ncan\nnow\nask\nJoshua\nto\njoshua:explain\nthe\ndatabase\npredications\nabout\nworks\nthe\nlibrary\nowns.\n(mapoverdatabasepredications\n[ownslibrary\n?work]\n#'explain)\n[OWNSLIBRARY\n\"Trumpeting\nJoshua\"]\nis\ntrue\nIt\nis\na\n:PREMISE\n[OWNSLIBRARY\n\"King\nLear\"]\nis\ntrue\nIt\nwas\nderived\nfrom\nrule\nSHAKESPEAREHOLDINGS\n[AUTHOROF\n\"King\nLear\"\nSHAKESPEARE]\nis\ntrue\nIt\nis\na\n:PREMISE\n\nMarch 1999\nJoshua Language Dictionary\nHere's\nan\nexample\nshowing\nthe\ndisplay\nwhen\nthe\ndatabase\npredication\nhas\na\ntruth\nvalue\nof\njoshua:*false*.\nThe\npredication\ndisplays\nwithout\nindicating\nits\ntruth\nvalue;\nthat\ninformation\nis\nsupplied\nby\nthe\naccompanying\nexplana\ntion.\n(tell\n[not\n[ownslibrary\n\"Everyday\nSanskrit\"]])\n¬\n[OWNSLIBRARY\n\"Everyday\nSanskrit\"]\nT\n(mapoverdatabasepredications\n[not\n[ownslibrary\n?work]]\n#'explain)\n[OWNSLIBRARY\n\"Everyday\nSanskrit\"]\nis\nfalse\nIt\nis\na\n:PREMISE\nThe\naccessor\nfunction\njoshua:askdatabasepredication\ncan\nalso\nbe\nused\nto\nextract\ndatabase\npredications\nfrom\nthe\nbackward\nsupport\nsupplied\nto\nthe\njoshua:ask\ncontinuation.\nMost\nof\nthe\ntime\njoshua:mapoverdatabase\npredications\nprobably\nserves\njust\nas\nwell,\nand\nit\nis\neasier\nto\nuse.\nFor\ncom\nparison\nwe\nare\nusing\nthe\nsame\nexamples\nto\nillustrate\nboth\nfunctions.\nRelated\nFunctions:\njoshua:ask\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:mapoverbackwardquestiontriggers\npredication\ncontin\nGeneric\nFunction\nuation\npredication\nIs\nthe\nquery\nbeing\njoshua:asked.\ncontinuation\nIs\na\nfunction\nof\none\nargument.\nThe\nargument\npassed\nto\nthis\nfunction\nshould\nbe\na\nbackwardquestiontrigger.\njoshua:mapoverbackwardquestiontriggers\nis\nthe\nJoshua\nprotocol\nfunc\ntion\nis\nresponsible\nfor\nfinding\nbackwardquestions\ncapable\nof\nsatisfying\na\nquery\ngiven\nto\njoshua:ask.\nIt\nsearches\nthe\nquestion\nindex\nto\nfind\na\nset\nof\nbackwardquestion\ntriggers\nwhose\npatterns\nmight\nunify\nwith\npredication\n(predication\nis\nthe\nquery\ngiven\nto\njoshua:ask).\njoshua:mapoverbackward\nquestiontriggers\ncalls\ncontinuation\nonce\nfor\neach\nbackwardquestiontrigger\nfound,\nthereby\ninvoking\nthe\nquestion.\njoshua:mapoverbackwardquestiontriggers\nis\nimplemented\nby\nprotocol\nmethods\n(either\nthe\nsystem\nsupplied\ndefault\nor\na\nuser\ndefined\nmethod\nim\nplementing\na\nspecial\nquestionindexing\nmodel).\nTo\nmake\nsuch\nmethods\neasi\ner\nto\nwrite,\nall\nthe\nknowledge\nof\nhow\nto\nactually\ninvoke\na\nbackward\nques\ntion\nis\npackaged\nin\nthe\ncontinuation\nfunction\nwhich\nis\npassed\ninto\njoshua:mapoverbackwardquestiontriggers\nby\nthe\njoshua:askquestions\nprotocol\nfunction.\njoshua:mapoverbackwardquestiontriggers\nis\nthe\ndual\nprotocol\nfunction\nto\njoshua:locatebackwardquestiontrigger.\nBoth\nof\nthese\nfunctions\nare\nused\nto\nmanipulate\nthe\nquestionindex.\njoshua:locatebackwardquestion\ntrigger\nis\nresponsible\nfor\ninserting\nand\ndeleting\nbackwardquestiontriggers\n\nJoshua Language Dictionary\nMarch 1999\nwhile\njoshua:mapoverbackwardquestiontriggers\nis\nresponsible\nfor\nlook\ning\nup\nquestiontriggers\nin\nresponse\nto\na\nquery.\nRelated\nFunction:\njoshua:locatebackwardquestiontrigger\nSee\nthe\nsection \"The\nJoshua\nQuestion\nIndexing\nProtocol\",\npage\n48.\njoshua:mapoverbackwardruletriggers\npredication\ncontinua\nGeneric\nFunction\ntion\npredication\nIs\nthe\nquery\nbeing\njoshua:asked.\ncontinuation\nIs\na\nfunction\nof\none\nargument.\nThe\nargument\npassed\nto\nthis\nfunction\nshould\nbe\na\nbackwardchaining\nrule\ntrigger.\njoshua:mapoverbackwardruletriggers\nis\nthe\nJoshua\nprotocol\nfunction\nwhich\nis\nresponsible\nfor\nfinding\nbackwardchaining\nrules\ncapable\nof\nsatisfy\ning\na\nquery\ngiven\nto\njoshua:ask.\nIt\nsearches\nthe\nrule\nindex\nto\nfind\na\nset\nof\nbackwardchaining\nrule\ntriggers\nwhose\npatterns\nmight\nunify\nwith\npredica\ntion\n(predication\nis\nthe\nquery\ngiven\nto\njoshua:ask).\njoshua:mapover\nbackwardruletriggers\ncalls\ncontinuation\nonce\nfor\neach\nbackwardchaining\nruletrigger\nfound,\nthereby\ninvoking\nthe\nrule.\njoshua:mapoverbackwardruletriggers\nis\nimplemented\nby\nprotocol\nmeth\nods\n(either\nthe\nsystem\nsupplied\ndefault\nor\na\nuser\ndefined\nmethod\nimple\nmenting\na\nspecial\nruleindexing\nmodel).\nTo\nmake\nsuch\nmethods\neasier\nto\nwrite,\nall\nthe\nknowledge\nof\nhow\nto\nactually\ninvoke\na\nbackward\nchaining\nrule\nis\npackaged\nin\nthe\ncontinuation\nfunction\nwhich\nis\npassed\ninto\njoshua:map\noverbackwardruletriggers\nby\nthe\njoshua:askrules\nprotocol\nfunction.\njoshua:mapoverbackwardruletriggers\nis\nthe\ndual\nprotocol\nfunction\nto\njoshua:locatebackwardruletrigger.\nBoth\nof\nthese\nfunctions\nare\nused\nto\nmanipulate\nthe\nruleindex.\njoshua:locatebackwardruletrigger\nis\nresponsi\nble\nfor\ninserting\nand\ndeleting\nbackwardchaining\nruletriggers\nwhile\njoshua:mapoverbackwardruletriggers\nis\nresponsible\nfor\nlooking\nup\nrule\ntriggers\nin\nresponse\nto\na\nquery.\nSee\nthe\ngeneric\nfunction\njoshua:locate\nbackwardruletrigger,\npage\n196.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndex\ning\nProtocol\",\npage\n36.\nSee\nthe\nsection \"Customizing\nthe\nRule\nIndex\",\npage\n88.\njoshua:mapoverforwardruletriggers\npredication\ncontinuation\nGeneric\nFunction\npredication\nIs\nthe\nfact\nbeing\ninserted\ninto\nthe\ndatabase\nby\njoshua:tell.\ncontinuation\nIs\na\nfunction\nof\none\nargument.\nThe\nargument\ngiven\nto\nthis\nfunction\nmust\nbe\na\nforward\nrule\ntrigger.\njoshua:mapoverforwardruletriggers\nis\nthe\nJoshua\nprotocol\nfunction\nwhich\nis\nresponsible\nfor\nfinding\nforwardchaining\nrules\nwhich\nshould\nbe\n\nMarch 1999\nJoshua Language Dictionary\ntriggered\nin\nresponse\nto\nthe\nnew\npredication\nbeing\nadded\nto\nthe\nvirtual\ndatabase\nby\njoshua:tell.\nIt\nsearches\nthe\nrule\nindex\nto\nfind\na\nset\nof\nforward\nchaining\nrule\ntriggers\nwhose\npatterns\nmight\nunify\nwith\npredication\n(predica\ntion\nis\nthe\nfact\nbeing\ninserted\ninto\nthe\ndatabase\nby\njoshua:tell).\njoshua:mapoverforwardruletriggers\ncalls\ncontinuation\nonce\nfor\neach\nfor\nwardchaining\nruletrigger\nfound,\nthereby\ninvoking\nthe\nrule.\njoshua:mapoverforwardruletriggers\nis\nimplemented\nby\nprotocol\nmethods\n(either\nthe\nsystem\nsupplied\ndefault\nor\na\nuser\ndefined\nmethod\nimplementing\na\nspecial\nruleindexing\nmodel).\nTo\nmake\nsuch\nmethods\neasier\nto\nwrite,\nall\nthe\nknowledge\nof\nhow\nto\nactually\ninvoke\na\nforward\nchaining\nrule\nis\npack\naged\nin\nthe\ncontinuation\nfunction\nwhich\nis\npassed\ninto\njoshua:mapover\nforwardruletriggers\nby\nthe\ndefault\njoshua:tell\nmethod.\njoshua:mapoverforwardruletriggers\nis\nthe\ndual\nprotocol\nfunction\nto\njoshua:locateforwardruletrigger.\nBoth\nof\nthese\nfunctions\nare\nused\nto\nma\nnipulate\nthe\nruleindex.\njoshua:locateforwardruletrigger\nis\nresponsible\nfor\ninserting\nand\ndeleting\nforwardchaining\nruletriggers\nwhile\njoshua:map\noverforwardruletriggers\nis\nresponsible\nfor\nlooking\nup\nruletriggers\nin\nre\nsponse\nto\na\nquery.\nSee\nthe\ngeneric\nfunction\njoshua:locateforwardrule\ntrigger,\npage\n199.\nSee\nthe\nsection \"The\nJoshua\nRule\nIndexing\nProtocol\",\npage\n36.\nSee\nthe\nsection \"Customizing\nthe\nRule\nIndex\",\npage\n88.\njoshua:mapoverobjecthierarchy\nfunctiontoapply\n&optional\nFunction\ninitialobject\nMaps\na\nfunction\nover\nan\nobject\nand\nall\nits\nparts,\nrecursively\ndescending\nthe\npart\nhierarchy.\nIf\nthe\noptional\nargument\ninitialobject\nis\nnot\nsupplied\nthen\nthe\nfunction\nwill\nbe\napplied\nto\nall\nobjects.\nIf\ninitialobject\nis\nsupplied,\nthen\nonly\nthe\npiece\nof\nthe\npart\nhierarchy\nstarting\nfrom\nthat\nobject\nwill\nbe\nmapped\nover.\njoshua:mapoverslotsinobjecthierarchy\nfunctiontoapply\n&op\nFunction\ntional\ninitialobject\nThis\nfunction\nis\na\nutility\nprovided\nas\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\ncombines\nthe\noperations\nprovided\nby\njoshua:mapoverobjecthierarchy\nand\njoshua:mapoverslotsofobject.\nIt\napplies\na\nfunction\nto\nall\nthe\nslots\nof\nan\nobject\nand\nits\nparts.\nWhen\nthe\noptional\nargument\ninitialobject\nis\nnot\nsup\nplied\nthen\nthe\nfunction\nwill\nbe\napplied\nto\nall\nobjects.\nNote\nthat\nthe\nfunction\nis\napplied\nto\nthe\nslot\nitself,\nand\nnot\nto\nthe\nvalue\nof\nthe\nslot.\nIf\nthe\nvalue\nof\nthe\nslot\nis\ndesired,\nuse\njoshua:slotcurrentvalue\nto\nget\nit.\njoshua:mapoverslotsofobject\nfunctiontoapply\nobject\nFunction\nThis\nfunction\nis\na\nutility\nprovided\nas\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nmaps\na\nfunction\nover\nall\nthe\nslots\nof\nan\nobject.\nNote\nthat\nthe\nfunction\nis\napplied\nto\nthe\nslot\nitself,\nand\nnot\nto\nthe\nvalue\nof\nthe\nslot.\nIf\nthe\nvalue\nof\nthe\nslot\nis\ndesired,\nuse\njoshua:slotcurrentvalue\nto\nget\nit.\n\nJoshua Language Dictionary\nMarch 1999\nji:modelcanthandlequery\nFlavor\nThis\nflavor\nis\nthe\nbase\nflavor\nfor\nconditions\nthat\nare\nsignalled\nby\njoshua:askdata\nand\njoshua:fetch\nto\nindicate\nthat\nthey\nhave\nbeen\npassed\na\nquery\nwhich\nis\nmore\ngeneral\nthan\nthey\ncan\nhandle.\nThe\nJoshua\nDatabase\nProtocol\nallows\nyou\nto\nstructure\nyour\ndata\nin\nways\nthat\nare\nappropriate\nfor\nyour\napplication;\nsometimes\nthis\ninvolves\ntrading\noff\ngenerality\nfor\nperformance.\nFor\nexample,\nif\na\nsignificant\nportion\nof\nyour\ndata\nconsists\nof\nobjectattributevalue\ntriples\n(such\nas\nthe\ncolor\nof\nthe\nblock\nis\nblue),\nthen\nyou\nmight\nwant\nto\nuse\nan\nobjectoriented\nrepresentation\n(such\nas\njoshua::flavor\ninstances)\nto\nstore\nthis\ndata.\nHowever,\nusing\nthis\nrepre\nsentation\nmakes\nit\nawkward\nor\nslow\nto\nrespond\nto\na\nquery\nthat\nasks\nfor\nev\nery\nobject\nwith\na\nspecific\nproperty,\nsuch\nas:\n[haseyecolor\n?who\nblue]\nAn\nimplementation\nof\njoshua:askdata\nor\njoshua:fetch\nwould\nideally\nan\nswer\nsuch\na\nquery\neven\nif\nit\ndid\nso\nslowly.\nHowever,\nsuch\nqueries\nmay\nbe\nof\nsuch\nlittle\nvalue\nto\nan\napplication\nthat\na\ndeveloper\ndecides\nnot\nto\nwaste\nef\nfort\non\nimplementing\na\nmethod\nthat\ncan\nrespond\nto\nthe\nquery.\nIt\nis\nimportant,\nhowever,\nthat\njoshua:fetch\nand\njoshua:askdata\nmethods\ndo\nnot\ncause\nerrors\nwhen\nfaced\nwith\na\nquery\nthat\nthey\ndo\nnot\nwish\nto\nhan\ndle.\nOne\nreason\nfor\nthis\nis\nthat\nthe\ncommand\nShow\nJoshua\nDatabase\nmay\npost\nsuch\na\nquery\neven\nif\nthe\napplication\nnever\nmakes\nsuch\nqueries\non\nits\nown.\nThe\ncontract\nof\njoshua:askdata\nand\njoshua:fetch\nrequires\nthese\nmethods\nto\njoshua::signal\na\nspecific\ncondition\nwhen\nthey\ndecline\nto\nhandle\na\nquery.\nThe\nbase\nflavor\nfor\nsuch\ncondition\nobjects\nis\nji:modelcanthandlequery.\nA\nsecond\ncondition\nflavor\n(built\non\nthis\nbase\nflavor)\nis\ncalled\nji:modelcan\nonlyhandlepositivequeries\nwhich\n(as\nthe\nname\nsuggests)\nshould\nbe\nused\nif\nthe\nimplementation\nis\npresented\nwith\na\nnegated\nquery,\nbut\nonly\nexpects\nqueries\nwhich\nare\nnot\nnegated.\nThe\nfollowing\nis\nan\nexample\nof\nhow\nto\nuse\nthese\nconditions:\n(definepredicatemethod\n(askdata\nobjectmodel)\n(truthvalue\ncontinuation)\n(unless\n(eql\ntruthvalue\n*true*)\n(signal\n'ji:modelcanonlyhandlepositivequeries\n:query\nself\n:model\n'portdirectionmodel))\n(withstatementdestructured\n(object\nvalue)\n()\n(typecase\nobject\n(unboundlogicvariable\n(signal\n'ji:modelcanthandlequery\n:model\n'portdirectionmodel\n:query\nself))\n(otherwise\n<\nwhatever\nyou\nreally\nwant\nto\ndo\n>\n))))\n\nMarch 1999\nJoshua Language Dictionary\nji:modelonlyhandlespositivequeries\nFlavor\nThis\nflavor\nis\nthe\nflavor\nof\ncondition\nobjects\nthat\nare\nsignalled\nby\njoshua:askdata\nand\njoshua:fetch\nto\nindicate\nthat\nthey\nhave\nbeen\npassed\na\nnegated\nquery\nwhen\nthey\nonly\nhandle\nnonnegated\nqueries.\nThe\nJoshua\nDatabase\nProtocol\nallows\nyou\nto\nstructure\nyour\ndata\nin\nways\nthat\nare\nappropriate\nfor\nyour\napplication;\nsometimes\nthis\ninvolves\ntrading\noff\ngenerality\nfor\nperformance.\nFor\nexample,\nif\na\nsignificant\nportion\nof\nyour\ndata\nconsists\nof\nobjectattributevalue\ntriples\n(such\nas\nthe\ncolor\nof\nthe\nblock\nis\nblue),\nthen\nyou\nmight\nwant\nto\nuse\nan\nobjectoriented\nrepresentation\n(such\nas\njoshua::flavor\ninstances)\nto\nstore\nthis\ndata.\nHowever,\nusing\nthis\nrepre\nsentation\nmakes\nit\nawkward\nor\nslow\nto\nrespond\nto\na\nquery\nthat\nasks\nfor\nev\nery\nobject\nwith\na\nspecific\nproperty,\nsuch\nas:\n[haseyecolor\n?who\nblue]\nAn\nimplementation\nof\njoshua:askdata\nor\njoshua:fetch\nwould\nideally\nan\nswer\nsuch\na\nquery\neven\nif\nit\ndid\nso\nslowly.\nHowever,\nsuch\nqueries\nmay\nbe\nof\nsuch\nlittle\nvalue\nto\nan\napplication\nthat\na\ndeveloper\ndecides\nnot\nto\nwaste\nef\nfort\non\nimplementing\na\nmethod\nthat\ncan\nrespond\nto\nthe\nquery.\nIt\nis\nimportant,\nhowever,\nthat\njoshua:fetch\nand\njoshua:askdata\nmethods\ndo\nnot\ncause\nerrors\nwhen\nfaced\nwith\na\nquery\nthat\nthey\ndo\nnot\nwish\nto\nhan\ndle.\nOne\nreason\nfor\nthis\nis\nthat\nthe\ncommand\nShow\nJoshua\nDatabase\nmay\npost\nsuch\na\nquery\neven\nif\nthe\napplication\nnever\nmakes\nsuch\nqueries\non\nits\nown.\nThe\ncontract\nof\njoshua:askdata\nand\njoshua:fetch\nrequires\nthese\nmethods\nto\njoshua::signal\na\nspecific\ncondition\nwhen\nthey\ndecline\nto\nhandle\na\nquery.\nThe\nbase\nflavor\nfor\nsuch\ncondition\nobjects\nis\nji:modelcanthandlequery.\nA\nsecond\ncondition\nflavor\n(built\non\nthis\nbase\nflavor)\nis\ncalled\nji:modelcan\nonlyhandlepositivequeries\nwhich\n(as\nthe\nname\nsuggests)\nshould\nbe\nused\nif\nthe\nimplementation\nis\npresented\nwith\na\nnegated\nquery,\nbut\nonly\nexpects\nqueries\nwhich\nare\nnot\nnegated.\nThe\nfollowing\nis\nan\nexample\nof\nhow\nto\nuse\nthese\nconditions:\n(definepredicatemethod\n(askdata\nobjectmodel)\n(truthvalue\ncontinuation)\n(unless\n(eql\ntruthvalue\n*true*)\n(signal\n'ji:modelcanonlyhandlepositivequeries\n:query\nself\n:model\n'portdirectionmodel))\n(withstatementdestructured\n(object\nvalue)\n()\n(typecase\nobject\n(unboundlogicvariable\n(signal\n'ji:modelcanthandlequery\n:model\n'portdirectionmodel\n:query\nself))\n(otherwise\n<\nwhatever\nyou\nreally\nwant\nto\ndo\n>\n))))\n\nJoshua Language Dictionary\nMarch 1999\njoshua:negatetruthvalue\ntruthvalue\n&optional\n(ifunknown\nFunction\njoshua:*unknown*)\nNegates\na\nnumeric\ntruthvalue.\nThat\nis,\njoshua:negatetruthvalue\nturns\njoshua:*true*\ninto\njoshua:*false*\nand\nviceversa.\ntruthvalue\nAn\ninteger\ntruth\nvalue,\nwhich\nmust\nbe\none\nof\njoshua:*true*,\njoshua:*false*,\nor\njoshua:*unknown*.\nifunknown\nThe\nvalue\nto\nreturn\nif\ntruthvalue\nis\njoshua:*unknown*.\nRelated\nPresentation\nType:\njoshua:truthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:novariablesindatamixin\nFlavor\nThis\nis\na\npredicate\nmodel\nwhich\nmay\nbe\nmixed\ninto\nthe\ndefinition\nof\nany\npredicate.\nFor\nexample,\n(definepredicate\nsickwith\n(person\ndisease)\n(novariablesindatamixin\ndefaultpredicatemodel))\nIf\none\nattempts\nto\njoshua:tell\nsuch\na\npredication\nand\nif\nthe\npredication\ncon\ntains\nunbound\nlogicvariables,\nthe\nan\nerror\nis\nsignalled.\nFor\nexample:\n(tell\n[sickwith\n?x\ncholera])\nError:\nTrying\nto\nTELL\n[SICKWITH\n?X\nCHOLERA]\nwhich\ncontains\nlogicvariables\nTherefore,\nthe\nsystem\ncan\nsafely\nassume\nthat\nany\ndatabase\npredication\nof\ntype\njoshua:novariablesindatamixin\ncontains\nonly\nexplicit\ndata.\nAll\nthe\npredicates\nused\nby \"The\nJoshua\nObject\nFacility\"\ninclude\njoshua:no\nvariablesindatamixin\nso\nmost\nrules\nthat\nrefer\nonly\nto\ndata\nwithin\nthe\nob\nject\nfacility\nwill\nbe\noptimized\nautomatically.\nThese\npredicates\nare:\n-\njoshua:partofmixin\n-\njoshua:partofmixin\n-\njoshua:valueof\n-\nltms:valueof\n-\njoshua:objecttypeof\n-\nltms:objecttypeof\n\nMarch 1999\nJoshua Language Dictionary\n-\njoshua:equated\n-\nltms:equated\njoshua:nontrivialtmsp\npredication\nGeneric\nFunction\nReturns\neither\nt\nor\nnil\nto\nindicate\nwhether\npredication\nis\nbased\non\na\nflavor\n(e.g.\nltms:ltmsmixin)\nthat\nsupports\na\nTMS.\nA\nreturn\nvalue\nof\nt\nmeans\nthat\npredication\ndoes\ncontain\nTMS\ninformation.\nSee\nthe\nsection \"The\nTruth\nMaintenance\nProtocol\",\npage\n54.\njoshua:noticetruthvaluechange\ndatabasepredication\noldtruth\nFunction\nvalue\nCalled\nwhenever\nthe\ntruthvalue\nof\npredication\nchanges\nfrom\noldtruthvalue\nto\nsome\nnew\ntruthvalue.\ndatabasepredication\nA\npredication\noldtruthvalue\nThe\ntruth\nvalue\nthat\njust\nchanged\nThe\nnew\ntruthvalue\nis\navailable\nin\nthe\npredication\nby\nthe\ntime\nnoticetruth\nvaluechange\nis\ncalled.\nIt\ncan\nbe\nexamined\nusing\njoshua:predicationtruth\nvalue.\nThis\nprotocol\nfunction\nallows\nyou\nto\nupdate\ndata\nstructures\nthat\ndepend\non\nthe\ntruth\nvalue\nof\na\npredication\nas\nthe\ntruth\nvalues\nchange.\n(You\nmight\nwant\nto\ndo\nthat,\nfor\nexample,\nin\nadvanced\nuses\nof\nmodeling.)\nSee\nthe\nsections\non \"Signalling\nTruth\nValue\nChanges\"\nand\njoshua:acton\ntruthvaluechange\njoshua:objecttypeof\nobject\ntype\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nto\nquery\nthe\nJoshua\nobject\ntype\nhierarchy.\nIt\nis\nnearly\nalways\nthe\npredicate\nof\nthe\nfirst\npredication\nin\nthe\ntriggers\nof\na\nrule\nthat\nrefers\nto\nobjects.\njoshua:objecttypeof\nis\nan\naskonly\npredicate.\nA\npredication\nwith\njoshua:objecttypeof\nas\nits\npredicate\ncannot\nbe\nan\nargument\nto\njoshua:tell.\njoshua:objecttypeof\nis\nbuilt\nusing\njoshua:typeofmixin.\nltms:objecttypeof\nobject\ntype\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nin\nthe\nsame\nmanner\nas\njoshua:objecttypeof.\nBecause\nrules\nwhose\ntriggers\nare\nall\nTMS\npredications\nmay\nappear\ncleaner\nor\nmore\nuniform\nthan\nrules\nwhich\nmix\nTMS\nand\nnonTMS\npredications,\nltms:objecttypeof\nis\nsupplied\nso\nthat\nrules\nemploying\nother\nTMS\npredications\nmay\nrefer\nto\ntype\nrelationships\nand\nkeep\ntheir\nuniform\nappearance.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:partof\nsuperpartobject\nsubpartobject\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nto\nquery\nthe\nJoshua\npart\nhierarchy\nabout\npart\nrelationships.\njoshua:partof\nis\nan\nask\nonly\npredicate;\nit\ncannot\nbe\nused\nin\njoshua:tell.\njoshua:partof\nis\nbuilt\nusing\njoshua:partofmixin.\nltms:partof\nsuperpartobject\nsubpartobject\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nin\nthe\nsame\nmanner\nas\njoshua:partof.\nBecause\nrules\nwhose\ntriggers\nare\nall\nTMS\npredi\ncations\nmay\nappear\ncleaner\nor\nmore\nuniform\nthan\nrules\nwhich\nmix\nTMS\nand\nnonTMS\npredications,\nltms:partof\nis\nsupplied\nso\nthat\nrules\nemploying\nother\nTMS\npredications\nmay\nrefer\nto\npart\nrelationships\nand\nkeep\ntheir\nuni\nform\nappearance.\nltms:partof\nis\nbuilt\nusing\njoshua:partofmixin.\njoshua:partofmixin\nFlavor\nThis\nflavormixin\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nmay\nbe\nused\nto\nadd\npartwhole\nbehaviour,\nlike\nthat\nof\nthe\ndefault\npartwhole\npredicate\njoshua:partof,\nto\npredicate\nmodels\ndefined\nby\nthe\nuser.\njoshua:partofmixin\ninherits\nfrom\njoshua:tellerrormodel\nand\njoshua:askdataonlymixin.\njoshua:positionsforwardrulematchercanskip\nruletrigger\nGeneric\nFunction\nruletrigger\nThe\nsource\nrepresentation\nof\na\nforward\nrule\ntrigger.\nSee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\nThe\nprotocol\nfunction\njoshua:positionsforwardrulematchercanskip\nis\nused\nto\nimprove\nthe\nefficiency\nof\nthe\nmatch\nfunction\ngenerated\nby\nthe\nfor\nward\nrule\ncompiler.\nIt\ninforms\nthe\nrule\ncompiler\nthat\nit\nneed\nnot\nemit\nchecking\ncode\nfor\ncertain\npositions\nin\nthe\npattern\npredication,\nallowing\nthe\nrule\ncompiler\nto\ngenerate\na\nshorter\nand\nmore\nefficient\nmatcher.\nThe\nposi\ntions\nthat\ncan\nbe\nskipped\nare\nexactly\nthose\nwhich\ncan\nbe\nguaranteed\nto\nhave\nbeen\nchecked\nby\nthe\nrule\nindexer.\njoshua:positionsforwardrule\nmatchercanskip\nreturns\na\nlist\nof\nthe\npositions\nthat\ncan\nbe\nskipped\nby\nthe\nmatch\ncompiler.\nFor\nexample,\nsuppose\nthat\nwe\nare\nusing\na\nforwardrule\nindexing\nscheme\nin\nwhich\nthe\ntrigger\nfor\neach\npattern\nof\nthe\nrule\nis\nstored\non\nthe\npropertylist\nof\nthe\npredicate\nsymbol\nof\nthe\npattern.\n(definepredicatemodel\npredicateforwardruleindexing\n()\n())\n\nMarch 1999\nJoshua Language Dictionary\n(definepredicatemethod\n(locateforwardruletrigger\npredicateruleindexing)\n(truthvalue\ncontinuation\nignore\nignore)\n;;\nThis\nis\npart\none,\nlocate\nthe\ncurrent\ntrigger\nset\n(let\n((oldtriggers\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)))\n;;\npart\ntwo,\ncall\nthe\ncontinuation\n(multiplevaluebind\n(newtriggers\nchangedp\nnode)\n(funcall\ncontinuation\noldtriggers)\n;;\npart\nthree,\nupdate\nthe\nindex\nwith\nnew\ntriggers,\nif\nsomething\nchanged\n(when\nchangedp\n(setf\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)\nnewtriggers))\n;;\npart\nfour,\nreturn\nthe\ncanonical\nforward\nrule\ntrigger\nnode)))\n;;;\nThis\nmap\nmethod\nfinds\nthe\ntriggers\nstored\nby\nthe\nprevious\nguy.\n(definepredicatemethod\n(mapoverforwardruletriggers\npredicateruleindexing)\n(continuation)\n;;\nhow\nto\ncollect\nall\nforward\ntriggers\nthat\nmight\nbe\ninterested\nin\nme\n(declare\n(sys:downwardfunarg\ncontinuation))\n;forward\nreference\n(loop\nfor\nretenode\nin\n(get\n(predicationpredicate\nself)\n'forwardruletriggers)\ndoing\n(funcall\ncontinuation\nRetenode)))\nWhen\nwe\njoshua:tell\na\npredication\nwhose\npredicate\nis\nthat\nsame\nas\nthat\nin\npredication,\nthe\njoshua:mapoverforwardruletriggers\nmethod\nwill\nonly\nretrieve\ntriggers\nfor\npatterns\nwhich\nhave\nthis\nsame\npredicate.\nThe\ncontinu\nation\ncalled\nby\njoshua:mapoverforwardruletriggers\nwill\nthen\ncall\nthe\nmatcher\ngenerated\nby\nthe\nforwardrule\ncompiler.\nClearly\nthis\nmatching\nfunction\nneed\nnot\ncheck\nthat\nthe\nfirst\nsymbol\nin\npredication\nmatches\nthe\nfirst\nsymbol\nin\npredication\njust\njoshua:inserted\nby\njoshua:tell,\nsince\nthe\njoshua:mapoverforwardruletriggers\nhas\njust\ndone\nso.\nThe\nreturn\nvalue\nof\njoshua:positionsforwardrulematchercanskip\nis\na\nlist\nof\npositions\nthat\ncan\nbe\nskipped\nby\nthe\nmatch\ncompiler.\nThe\nlist\nof\nposi\ntions\nconsists\nof\nsublists\nof\npredication;\nthe\njoshua::car\nof\neach\nof\nthese\nsublists\nis\na\ntoken\nfor\nwhich\nthe\nmatcher\nneed\ngenerate\nno\ncode.\nFor\nexam\nple,\nif\nwe\nuse\nan\nindexing\nscheme\nwhich\nguarantees\nthat\nevery\nsymbol\nin\na\npattern\nis\nchecked\nby\nthe\nindexer,\nthen\nthe\njoshua:positionsforwardrule\nmatchercanskip\nmethod\nshould\nreturn\na\nlist\nof\nevery\nsublist\nof\nthe\npat\ntern\nwhich\nbegins\nwith\na\nsymbol:\n[Foobar\na\n?x\nb\nc\n?y]\n→\n((foobar\na\n?x\nb\nc\n? y )\n(a\n?x\nb\nc\n?y)\n(b\nc\n?y)\n(c\n?y))\nThe\ndefault\nmethod\nfor\nthe\njoshua:positionsforwardrulematchercan\nskip\nprotocol\nfunction\nskips\nevery\nsymbol\nin\nthe\npattern,\nsince\nthe\ndefault\n\nJoshua Language Dictionary\nMarch 1999\nindexer\nuses\nevery\nsymbol\nin\nthe\npattern.\nIf\nyou\ncreate\nan\nindexing\nscheme\nof\nyour\nown\nwhich\ndoes\nnot\ncheck\nevery\nsymbol\nthen\nyou\nmust\nprovide\na\nmethod\nfor\nthis\nprotocol\nfunction\nor\nyour\nforward\nrules\nmay\nget\nincorrectly\ncompiled.\nHere\nis\nthe\nmethod\nthat\nshould\nbe\nprovided\nwith\nthe\nexample\nabove:\n(definepredicatemethod\n(predicateforwardruleindexing\npositionsforwardrulematchercanskip)\n()\n(list\n(predicationstatement\nself)))\njoshua:predication\nFlavor\nThe\nnoninstantiable\nbase\nflavor\nfor\nall\npredications\nin\nJoshua.\nIt\nis\nmixed\ninto\nnew\npredications\nvia\njoshua:definepredicate.\nYou\ncan\ntest\nfor\nthis\nflavor\nby\nusing\ntypep\nor\njoshua:predicationp\n(into\nwhich\ntypep\nis\noptimized).\nRelated\nPresentation\nTypes:\njoshua:predication\njoshua:databasepredication\njoshua:predication\nPresentation\nType\nThe\ntype\nfor\naccepting\nor\npresenting\na\nJoshua\npredication.\nWhen\nused\nto\naccept\na\npredication\nfrom\nthe\nuser,\nthis\npresentation\ntype\nwill\nparse\nthe\nin\nput\nand\ncreate\na\nnew\ninstance\nof\nthe\npredication.\nIf\nthe\npredication\nis\nen\ntered\nby\nusing\nthe\nmouse,\nthe\nparser\nwill\nreturn\nthe\npredication\nthat\nthe\nuser\nselected.\nThat\nis,\nit\nwill\nnot\ncreate\na\nnew\ncopy\nof\nthe\npredication.\nThis\npresentation\ntype\nis\nconvenient\nfor\nreading\nin\npredications,\nas\nit\nconfirms\nthat\nthe\npredicate\nis\ndefined\nand\nthe\narguments\nare\ncorrect,\nand\nreprompts\nuntil\nthe\ninput\nis\na\nvalid\npredication.\nExample:\n(accept\n'predication)\nEnter\na\npredication:\n[jericho:goodtoeat\nbananas]\n[JERICHO:GOODTOEAT\nBANANAS]\nPREDICATION\njoshua:predicationmakerp\nform\nFunction\nform\nAn\nsexpression.\nA\npredicate\nof\none\nargument.\nIt\nreturns\njoshua::t\nif\nthe\nargument\nis\na\npredicationmaker\nand\njoshua::nil\notherwise.\nFor\nexample:\n(setq\nx\n(read))[Foobar\n?x\na]\nyields:\n(ji::predicationmaker\n'(foobar\n(ji::logicvariablemaker\n|?x|)\na))\n\nMarch 1999\nJoshua Language Dictionary\nand\n(predicationmakerp\n(ji::predicationmaker\n'(foobar\n(ji::logicvariablemaker\n|?x|)\na)))\nyields:\nT\njoshua:predicationmakerpredicate\nform\nFunction\nform\nA\npredicationmaker\nsexpression.\nThis\nreturns\nthe\npredicate\nof\na\npredicationmaker\nform.\nFor\nexample,\n(read)[Foobar\na\nb]\nyields:\n(JI::PREDICATIONMAKER\n'(FOOBAR\nA\nB))\nand\n(predicationmakerpredicate\n(JI::PREDICATIONMAKER\n'(FOOBAR\nA\nB)))\nyields:\nFOOBAR\njoshua:predicationmakerstatement\nform\nFunction\nform\nA\nPredicationMaker\nlist.\nThis\nreturns\nthe \"statement\"\npart\nof\nthe\npredicationmaker\nlist\nstructure.\nFor\nexample,\n(read)[foobar\na\nb]\nyields:\n(JI::PREDICATIONMAKER\n'(FOOBAR\nA\nB))\nand\n(predicationmakerstatement\n(JI::PREDICATIONMAKER\n'(FOOBAR\nA\nB)))\nyields:\n\nJoshua Language Dictionary\nMarch 1999\n(FOOBAR\nA\nB)\nSimilarly,\n(read)\n'[foobar\n,a\nb]\n>\n(JI::PREDICATIONMAKER\n'(FOOBAR\n,A\nB))\n(predicationmakerstatement\n*)\n>\n(FOOBAR\n(#:|,|\n.\nA)\nB)\njoshua:predicationp\nobject\nFunction\nChecks\nwhether\nobject\nis\na\nJoshua\npredication,\nthat\nis,\nwhether\nthe\nobject\nis\nbuilt\non\nthe\nbase\nflavor\njoshua:predication.\njoshua:predication\nis\nthe\nroot\nof\nthe\nJoshua\nmodel\ntree.\njoshua:predicationp\nreturns\nt\nif\nthe\nobject\nis\na\nJoshua\npredication,\nother\nwise\nnil.\nobject\nAn\nobject\nin\nthe\nLisp\nworld.\nExamples:\n(definepredicate\nvalidword\n(word\nlanguage))\n(tell\n[validword\nincarnadine\nEnglish])\n[VALIDWORD\nINCARNADINE\nENGLISH]\nT\n(predicationp\n[VALIDWORD\nINCARNADINE\nENGLISH])\n;\nclick\non\nobject\nreturned\nby\ntell\n(PREDICATION\nFLAVOR:VANILLA)\n(ask\n[validword\nincarnadine\n?language]\n#'(lambda\n(backwardsupport)\n(when\n(predicationp\n(askdatabasepredication\nbackwardsupport))\n(print\n(askdatabasepredication\nbackwardsupport)))))\n[VALIDWORD\nINCARNADINE\nENGLISH]\nYou\ncan\nuse\ntypep\nto\ndo\nthe\nsame\ntest\nas\njoshua:predicationp.\nIn\nfact,\nthe\ncompiler\noptimizes\nthe\nform:\n(typep\nx\n'predication)\ninto\nthe\nform:\n(predicationp\nx)\nFor\nexample:\n\nMarch 1999\nJoshua Language Dictionary\n(ask\n[validword\nincarnadine\n?language]\n#'(lambda\n(backwardsupport)\n(when\n(typep\n(askdatabasepredication\nbackwardsupport)\n'predication)\n(print\n(askdatabasepredication\nbackwardsupport)))))\n[VALIDWORD\nINCARNADINE\nENGLISH]\nRelated\nFunctions:\njoshua:predication\ntypep\njoshua:predicationpredicate\npredication\nFunction\nReturns\nthe\npredicate\nsymbol\nof\npredication.\npredication\nAny\npredication.\nRelated\nFunction:\njoshua:predicationstatement\njoshua:predicationstatement\npredication\nFunction\nReturns\nthe\nlist\ncorresponding\nto\nthe\nstatement\nof\npredication.\nThe\nfirst\nel\nement\nof\nthe\nlist\nis\nthe\npredicate\nsymbol.\nThe\nrest\nof\nthe\nlist\ncontains\nthe\narguments.\npredication\nAny\npredication.\nFor\nexample:\n(definepredicate\nemployee\n(name\nsocialsecuritynumber\ndepartment))\n(predicationstatement\n[employee\n\"John\nDoe\"\nshipping])\n(EMPLOYEE\n\"John\nDoe\"\nSHIPPING)\n(predicationstatement\n[not\n[employee\n\"Eve\"\ngardening]])\n(NOT\n[EMPLOYEE\n\"Eve\"\nGARDENING])\nRelated\nFunctions:\njoshua:makepredication\njoshua:predicationpredicate\njoshua:predicationtruthvalue\npredication\nFunction\nReturns\nthe\nnumeric\ntruth\nvalue\nof\npredication.\npredication\nA\nJoshua\npredication.\nSince\ntruth\nvalue\nis\na\nproperty\nof\nthe\ndatabase,\nthe\ntruth\nvalue\nof\na\npredi\ncation\nnot\nin\nthe\ndatabase\nis\nnot\ndefined.\nIn\ngeneral\nit\nwill\nbe\njoshua:*unknown*.\n\nJoshua Language Dictionary\nMarch 1999\nChecking\nthe\ntruth\nvalue\nof\na\npredication\nis\ndone\nusing\njoshua:ask.\nThe\njoshua:tell\nprotocol\nor\nTMS\nprotocol\nis\nused\nto\nset\nor\nchange\nthe\ntruth\nvalue.\njoshua:predicationtruthvalue\nshould\nonly\nbe\nused\nin\nmodeling\nmethods\nthat\nimplement\nthose\nprotocols.\nRelated\nTopics:\njoshua:tell\njoshua:ask\njoshua:*true*\njoshua:*false*\njoshua:*unknown*\njoshua:*contradictory*\njoshua:truthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:prefetchforwardrulematches\npredication\ncontext\ncontin\nFunction\nuation\npredication\nThe\npattern\nto\nbe\nmatched.\ncontext\nThe\nentire\nifpart\nof\nthe\nrule.\nUseful\nin\nadvanced\nmod\neling\napplications.\nThe\ndefault\nimplementation\nignores\nthis\nargument,\nbut\nrule\ncompilation,\nwhere\nthe\nway\nto\ncompile\none\ntrigger\ndepends\non\nwhat\nother\ntriggers\nare\npresent,\nuses\nthe\ncontext.\ncontinuation\nA\nfunction\npassed\nin\nwhich\ncan\ndetermine\nwhether\na\nnew\nrule\ntrigger\nis\nnecessary.\nTakes\na\npredication,\na\ncontext,\nand\na\ncontinuation\nand\napplies\nthe\ncontinua\ntion\nto\nall\ndatabase\npredications\nthat\nmatch\nthe\npredication\nargument,\nwith\nout\nregard\nto\ntruth\nvalue.\nIts\ngeneral\nuse\nis\nfor\nwhen\nrules\nare\ndefined\nafter\nsome\nfacts\nhave\nalready\nbeen\nentered\ninto\nthe\ndatabase\nwith\njoshua:tell.\nNewly\ninstalled\nrules\nmay\nwish\nto\ntrigger\nfrom\nthose\nfacts.\nIt\nis\nfairly\nrare\nthat\na\nuser,\neven\ndoing\nmodelling,\nwill\nneed\nto\ndefine\nthis\nmethod.\nThe\ndefault\ndefinition,\nwhich\nmay\nbe\ninherited\nfrom\njoshua:defaultprotocolimplementationmodel,\nsimply\nuses\nthe\npredica\ntion's\njoshua:askdata\nmethod;\nthe\nuser\nwill\nonly\nneed\nto\ndefine\njoshua:prefetchforwardrulematches\nif\nthey\ndo\nnot\ndefine\nan\njoshua:ask\ndata\nmethod.\njoshua:printquery\nbackwardsupport\n&optional\n(stream\nFunction\n*standardoutput*)\nA\nconvenience\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\njoshua:printquery\ndisplays\nthe\njoshua:ask\nquery\nwith\nits\nvariables\nin\nstantiated.\n\nMarch 1999\nJoshua Language Dictionary\nbackwardsupport\nThe\nbackward\nsupport\nsupplied\nto\nthe\njoshua:ask\ncon\ntinuation.\nstream\nA\nstream\nto\nwhich\nto\noutput\nthe\ninformation.\nDefaults\nto\n*standardoutput*.\nExamples:\n(definepredicate\ntypeof\n(object\ntype))\n(tell\n[typeof\nIliad\nepic])\n(ask\n[typeof\n?book\nepic]\n#'printquery)\n[TYPEOF\nILIAD\nEPIC]\nIf\nyou\nwant\nto\nuse\nthe\ninstantiated\nquery\nin\nways\nother\nthan\nprinting\nit,\nex\ntract\nit\nyourself\nusing\nthe\naccessor\nfunction\njoshua:askquery.\nRelated\nFunctions:\njoshua:ask\njoshua:graphqueryresults\njoshua:printqueryresults\njoshua:sayquery\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:printqueryresults\nbackwardsupport\n&key\n(:stream\nFunction\n*standardoutput*)\n(:printer #'prin1)\nA\nconvenience\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\njoshua:printqueryresults\ndisplays\nand\ninterprets\nthe\nsupport\ninformation\nin\nthe\njoshua:ask\ncontinuation\nargument,\nbackwardsupport;\nthat\nis,\nit\ntells\nyou\nwhat\nqueries\nsucceeded,\nand\nwhy.\nbackwardsupport\nA\nlist\ncontaining\nthe\nsatisfied\nquery\nand\ninformation\nabout\nits\nsupport.\nstream\nA\nstream\nto\nwhich\nto\noutput\nthe\ninformation.\nDefault\nis\n*standardoutput*.\nprinter\nA\nfunction\nof\ntwo\narguments,\nlike\nprin1,\nthat\nis\nused\nto\nprint\nelements\nof\nthe\nsupport.\nprin1\nis\nthe\ndefault,\nbut\nanother\nreasonable\nvalue\nto\ngive\nis\njoshua:say.\nUse\njoshua:graphqueryresults\nto\nsee\na\ngraph\nof\nthe\ninformation\nprovided\nby\njoshua:printqueryresults.\nThe\naccessor\nfunction\njoshua:askderivation\nextracts\nthe\nsupport\nportion\nof\nbackwardsupport\nbut\ndoes\nnot\ninterpret\nthe\ninformation.\nFor\ncomparison,\nwe\nuse\nthe\nsame\nexamples\nto\nillustrate\nall\nthree\nfunctions.\nExamples:\n\nJoshua Language Dictionary\nMarch 1999\nThe\nfirst\nexample\nshows\na\nquery\nsatisfied\nby\ndatabase\nlookup.\nBoth\nthe\nin\nstantiated\nquery\nand\nits\nsupport\n(here\nthe\nmatching\ndatabase\npredication)\nare\nprinted.\n(definepredicate\ntypeof\n(object\ntype))\n(tell\n[typeof\nIliad\nepic])\n(ask\n[typeof\n?book\nepic]\n#'printqueryresults)\n[TYPEOF\nILIAD\nEPIC]\nsucceeded:\n[TYPEOF\nILIAD\nEPIC]\nwas\nTRUE\nin\nthe\ndatabase\nThe\nnext\nexample\nshows\nthe\nsupport\nfor\na\nquery\nthat\nis\nsatisfied\nfrom\nrules.\nWe\nhave\na\nrule,\ndessert?,\nthat\ndetermines\nif\na\ngiven\nfood\nis\na\ndessert.\nEach\nof\nthis\nrule's\nsubgoals\nis\nderived\nfrom\nother\nrules.\nHere\nare\nthe\ndefinitions.\n(definepredicate\nedible\n(object))\n(definepredicate\nisfood\n(object))\n(definepredicate\ncontains\n(object\nsubstance))\n(definepredicate\nsweet\n(object))\n(defrule\nfood?\n(:backward)\nif\n[edible\n?object]\nthen\n[isfood\n?object])\n(defrule\nsweet?\n(:backward)\nif\n[or\n[contains\n?object\nchocolate]\n[contains\n?object\nsugar]\n[contains\n?object\nhoney]]\nthen\n[sweet\n?object])\n(defrule\ndessert?\n(:backward)\nif\n[and\n[isfood\n?object]\n[sweet\n?object]]\nthen\n[typeof\n?object\ndessert])\n;tell\nsome\nsticky\nfacts\n(tell\n[edible\nchocolatecoatedants])\n(tell\n[contains\nchocolatecoatedants\nhoney])\nNow\nwe\njoshua:ask\nwhat\nfoods\nqualify\nas\ndesserts\nand\nwhy.\nA\nsingle\nfood,\nchocolatecoveredants,\nsucceeded.\nThe\ndisplay\nshows\nthe\ninstantiated\nquery,\nexplaining\nwhy\nit\nsucceeded:\nsupport\nis\ntraced\nbackward\nfrom\nrule\ndessert?\nthat\nsatisfied\nthe\nquery,\nthrough\nthe\nsupport\nused\nto\nsatisfy\nparts\nof\nthe\nrule\nbody.\n\nMarch 1999\nJoshua Language Dictionary\n(ask\n[typeof\n?object\ndessert]\n#'printqueryresults)\n[TYPEOF\nCHOCOLATECOATEDANTS\nDESSERT]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nDESSERT?\n[ISFOOD\nCHOCOLATECOATEDANTS]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nFOOD?\n[EDIBLE\nCHOCOLATECOATEDANTS]\nsucceeded\n[EDIBLE\nCHOCOLATECOATEDANTS]\nwas\ntrue\nin\nthe\ndatabase\n[SWEET\nCHOCOLATECOATEDANTS]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nSWEET?\n[CONTAINS\nCHOCOLATECOATEDANTS\nHONEY]\nsucceeded\n[CONTAINS\nCHOCOLATECOATEDANTS\nHONEY]\nwas\ntrue\nin\nthe\ndatabase\nRelated\nFunctions:\njoshua:ask\njoshua:graphqueryresults\njoshua:printquery\njoshua:sayquery\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"Explaining\nBackward\nChaining\nSupport\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:provable\nproposition\nJoshua\nPredicate\nChecks\nif\nproposition\nis\nknown\nto\nbe\njoshua:*true*,\n(or\nif\nit\nis\nknown\nto\nbe\njoshua:*false*,\nif\n[ not\n...]\nis\nwrapped\naround\nit.)\nThis\nis\na\nmodal\noperator.\n[provable\n...]\nand\n[not\n[provable\n...]]\ncorre\nspond\nto\nthe \"box\"\nand \"diamond\"\noperators\nof\nsome\nmodal\nlogics.\nproposition\nA\nJoshua\npredication\npattern\nto\nmatch.\nThe\nquery:\n(ask\n[provable\n[foo\n?x]]\n#'\n...)\nSucceeds\nwhen:\n[foo\n?x]\nwould\nsucceed\nThe\nquery:\n(ask\n[provable\n[not\n[foo\n?x]]\n#'\n...)\nSucceeds\nwhen:\n[not\n[foo\n?x]]\nwould\nsucceed\nIf\nsuccessful,\njoshua:provable\ncalls\nthe\ncontinuation\non\nthe\ninstantiated\nquery.\nExamples:\nLet's\ndefine\na\npredicate,\nshapeof,\njoshua:tell\nsome\nstatements\nabout\nthe\nshape\nof\nobjects,\nand\nthen\ndisplay\nthe\ndatabase.\n(definepredicate\nshapeof\n(object\nshape))\n(tell\n[and\n[shapeof\ndoor\noval]\n[not\n[shapeof\nleaf\npointed]]])\n[AND\n[SHAPEOF\nDOOR\nOVAL]\n[NOT\n[SHAPEOF\nLEAF\nPOINTED]]]\n\nJoshua Language Dictionary\nMarch 1999\nShow\nJoshua\nDatabase\nTrue\nthings\n[SHAPEOF\nDOOR\nOVAL]\nFalse\nthings\n[SHAPEOF\nLEAF\nPOINTED]]\nNow\nwe\ncan\ncheck\nwhich\nstatements\nabout\nshapes\nare\njoshua:*true*,\nand\nwhich\nare\njoshua:*false*.\n;;\nCheck\nif\nthe\nproposition\nis\njoshua:*true*\n(ask\n[provable\n[shapeof\ndoor\noval]]\n#'printquery)\n[PROVABLE\n[SHAPEOF\nDOOR\nOVAL]]\n;;\nComparing\nprovable\nto\nknown\n(ask\n[provable\n[shapeof\nleaf\npointed]]\n#'printquery)\n;this\nfails\n(ask\n[known\n[shapeof\nleaf\npointed]]\n#'printquery)\n[KNOWN\n[SHAPEOF\nLEAF\nPOINTED]]\n;;\nCheck\nif\nthe\nproposition\nis\njoshua:*false*\n(ask\n[provable\n[not\n[shapeof\nleaf\npointed]]]\n#'printquery)\n[PROVABLE\n[NOT\n[SHAPEOF\nLEAF\nPOINTED]]]\n(ask\n[provable\n[not\n[shapeof\n?object\n?shape]]]\n#'printquery)\n[PROVABLE\n[NOT\n[SHAPEOF\nLEAF\nPOINTED]]]\n;;\nComparing\nprovable\nto\nknown\n(ask\n[provable\n[not\n[shapeof\ndoor\noval]]]\n#'printquery)\n;this\nfails\n(ask\n[known\n[not\n[shapeof\ndoor\noval]]]\n#'printquery)\n[KNOWN\n[NOT\n[SHAPEOF\nDOOR\nOVAL]]]\nIt\nis\nmore\ninteresting\nto\nask\nif\nsomething\nis\nnot\nprovable.\nThe\nquery:\n(ask\n[not\n[provable\n[foo\n?x]]]\n#'\n...)\nSucceeds\nwhen:\n[foo\n?x]\nwould\nhave\nfailed\n;;\nCheck\nif\nwe\ndon't\nknow\nthe\nproposition\nto\nbe\njoshua:*true*\n(ask\n[not\n[provable\n[shapeof\nstarfish\nround]]]\n#'printquery)\n[not\n[PROVABLE\n[SHAPEOF\nSTARFISH\nROUND]]]\n;;\nCheck\nif\nwe\ndon't\nknow\nthe\nproposition\nto\nbe\njoshua:*false*\n(ask\n[not\n[provable\n[not\n[shapeof\nhill\nconical]]]]\n#'printquery)\n[not\n[PROVABLE\n[NOT\n[SHAPEOF\nHILL\nCONICAL]]]]\njoshua:provable\ncan\nalso\nbe\nused\nin\nbackward\nrules.\nRelated\nPredicate:\njoshua:known\n\nMarch 1999\nJoshua Language Dictionary\nReset Joshua Tracing Command\nResets\nthe\ntracing\noptions\nto\nthe\noriginal\ndefaults.\nType\nof\nTracing\nWhich\ntype\nof\ntracing\nto\nreset.\nThe\npossible\ntypes\nare\nforward\nrules,\nbackward\nrules,\npredications,\nTMS\noperations\nand\nAll.\n:Include\nevents\nWhether\nto\nreset\nthe\ntraced\nand\nstepped\nevents\nfor\nthe\nType\nof\nTracing\nas\nwell.\nThe\nReset\nJoshua\nTracing\ncommand\nsets\nthe\nJoshua\ntracing\noptions\nback\nto\ntheir\ninitial\ndefaults.\nThis\ncommand\nis\nuseful\nif\nyou\nhave\nbeen\nselectively\ntracing\nrules\nor\npredications\nand\nwould\nlike\nto\ngo\nback\nto\ntracing\nall\nrules\nor\nall\npredications.\nThe\nInclude\nevents\noption\ncomes\nin\nhandy\nwhen\nyou\nhave\nbeen\ntracing\nor\nstepping\nparticular\nevents\nand\nwould\nlike\nto\ngo\nback\nto\njust\ntracing\nthe\ndefault\nevents.\nThis\ncommand\ndoes\nnot\ndisable\nor\nenable\ntracing,\nit\njust\naffects\nwhich\nthings\nare\ntraced.\nRelated\nCommands:\n\"Enable\nJoshua\nTracing\nCommand\"\n\"Disable\nJoshua\nTracing\nCommand\"\njoshua:removeaction\nslotorpath\n&optional\n(name\n:action)\nGeneric\nFunction\nThis\nfunction\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nallows\nactions,\nwhich\nwere\nadded\nto\nslots\nusing\njoshua:addaction,\nto\nbe\nremoved\nfrom\nthose\nslots.\n~\\\\say\\\\\npredication\nFormat\nDirective\nA\nformat\ndirective\nthat\nmakes\nit\neasy\nto\ncombine\nthe\nuse\nof\njoshua:say\nwith\nother\nkinds\nof\nformatted\noutput.\nIt\ntakes\none\nformatargument,\nthe\npredication\nto\nbe\njoshua:say'd\nto\nthe\noutput\nstream.\nExamples:\n(format\nt\n\"~&The\nregistry\nof\ndeeds\nsays\nthat\n~\\\\say\\\\.\"\n[frobozz\nProspero\nremoteisland])\nThis\nwould\nprint\nthe\nfollowing\nsentence:\nThe\nregistry\nof\ndeeds\nsays\nthat\nPROSPERO\nwas\nan\nowner\nof\na\nfrobozz\nin\nat\nREMOTEISLAND.\nYou\ncan\nalso\nuse\n~\\\\say\\\\\nin\nother\nplaces\nformat\nstrings\nare\nused,\nfor\nin\nstance\npromptandaccept:\n(promptandaccept\n'integer\n\"For\nwhat\nvalues\nof\n~S\nis\nit\ntrue\nthat\n~\\\\say\\\\?\"\n?x\n[Riemannzeta\n?x])\nRelated\nFunctions:\njoshua:say\nSee\nthe\nsection \"Formatting\nPredications:\nthe\nSAY\nMethod\"\nin\nUser's\nGuide\nto\nBa\nsic\nJoshua.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:say\npredication\n&optional\n(stream\n*standardoutput*)\nFunction\nPrints\nout\npredication\non\nstream,\npossibly\nin\na\nway\nother\nthan\nprin1\nwould.\nThis\nis\ngood\nfor\nprinting\nthe\nmeaning\nof\na\npredication\nin\nnatural\nlanguage,\nas\nopposed\nto\nthe\npredicate\ncalculus\nnotation\nin\nwhich\nprograms\nare\nwrit\nten.\nHowever,\nyou\nneedn't\nrestrict\nyour\nthinking\nabout\njoshua:say\nto\njust\nnatural\nlanguage.\nFor\nexample,\njoshua:say\ncould\npresent\na\npredication\nas\na\npiece\nof\ngraphics;\nsee\nexamples\nbelow.\nJudicious\nuse\nof\njoshua:say\nmethods\ncan\nmake\nit\neasier\nto\ngenerate\nuser\ninterfaces.\nIt\nusually\ndoesn't\nmatter\nwhat\nvalue\nthe\nimplementations\nof\njoshua:say\nre\nturn,\nsince\njoshua:say\nis\nusually\ndone\nfor\nsideeffect.\nThe\nexception\nis\nthat\nif\nstream\nis\nexplicitly\nsupplied\nas\nnil,\nthe\nimplementations\nshould\ndo\nwhat\nformat\nwould\ndo,\nthat\nis,\nreturn\na\nstring\nif\npossible.\n(Graphical\njoshua:say\nmethods\ncan't\ndo\nthis.)\nExamples:\n(definepredicate\nfrobozz\n(who\nwhen\nwhere)\n()\n:destructureintoinstancevariables)\n(definepredicatemethod\n(say\nfrobozz)\n(&optional\n(stream\n*standardoutput*))\n(format\nstream\n\"~S\nwas\nan\nowner\nof\na\nfrobozz\nin\n~S\nat\n~S.\"\nwho\nwhen\nwhere))\n(say\n[frobozz\nProspero\nremoteisland])\nprints\nthe\nsentence:\nPROSPERO\nwas\nan\nowner\nof\na\nfrobozz\nin\nat\nREMOTEISLAND.\nAn\nexample\nusing\ngraphics\nwould\nbe:\n(definepredicatemethod\n(say\nfrobozz)\n(&optional\n(stream\n*standardoutput*))\n(dw:withoutputaspresentation\n(:stream\nstream\n:object\nself\n:type\n(typeof\nself))\n(formatgraphfromroot\n(list\nwho\n(list\nwhere)\n(list\nwhen))\n#'(lambda\n(x\ns)\n(prin1\n(car\nx)\ns))\n#'cdr\n:stream\nstream)))\nThe\njoshua:say\nmethod\nnow\ndraws\na\ngraph\nrepresenting\nProspero's\nrela\ntionship\nto\nhis\nproperty\nand\nthe\ntime\nat\nwhich\nhe\nowned\nit.\nRelated\nFunctions:\n\"~\\\\Say\\\\\"\nSee\nthe\nsection \"Formatting\nPredications:\nthe\nSAY\nMethod\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\n\nMarch 1999\nJoshua Language Dictionary\njoshua:say\n&optional\n(stream\n*standardoutput*)\nof\nMethod\njoshua:predication\nThe\ndefault\nimplementation\nof\njoshua:say;\nIt\njust\nprints\npredication\nin\nthe\nsame\nway\nprin1\nwould,\nthat\nis,\nusing\nthe\nbracket\nsyntax.\nIts\npurpose\nis\nto\nmake\nsure\nall\npredications\nsupport\nthe\nsay\noperation,\neven\nif\nonly\nin\na\ntriv\nial\nfashion.\njoshua:sayquery\nbackwardsupport\n&optional\n(stream\n*standard\nFunction\noutput*)\nA\nconvenience\nfunction\nfor\nuse\nin\nan\njoshua:ask\ncontinuation.\njoshua:say\nquery\ndisplays\nthe\ninstantiated\nquery\nusing\na\nuserdefined\njoshua:say\nmethod\nif\navailable,\nor\nthe\ndefault\njoshua:say\nmethod.\nThe\nlatter\nsimply\nprints\nthe\ninstantiated\nquery.\nbackwardsupport\nThe\nsupport\nsupplied\nto\nthe\njoshua:ask\ncontinuation.\nstream\nA\nstream\nto\nwhich\nto\noutput\nthe\ninformation.\nThe\nde\nfault\nis\n*standardoutput*.\nExamples:\n;;\nsayquery\nwith\ndefault\nsay\nmethod\n(definepredicate\nloves\n(person\nobject))\n(tell\n[loves\nBob\nchocolate])\n(ask\n[loves\nBob\n?x]\n#'sayquery)\n[LOVES\nBOB\nCHOCOLATE]\n;;\nsayquery\nwith\nuserdefined\nsay\nmethod\n(definepredicate\ntypeof\n(object\ntype))\n(definepredicatemethod\n(say\ntypeof)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(object\ntype)\n()\n(format\nstream\n\"~%\nThe\n~A\nis\nan\nexample\nof\nthe\n~A\nliterary\nform.\"\nobject\ntype)))\n(tell\n[typeof\nIliad\nepic])\n[TYPEOF\nILIAD\nEPIC]\n(ask\n[typeof\n?book\nepic]\n#'sayquery)\nThe\nILIAD\nis\nan\nexample\nof\nthe\nEPIC\nliterary\nform.\nTo\nuse\nthe\ninstantiated\nquery\nin\nsome\nother\nway\nrather\nthan\njoshua:saying\nit,\nextract\nit\nfrom\nthe\ncontinuation\nargument\nusing\nthe\naccessor\nfunction\njoshua:askquery,\nand\ninterpret\nthe\ninformation.\nRelated\nFunctions:\n\nJoshua Language Dictionary\nMarch 1999\njoshua:ask\njoshua:graphqueryresults\njoshua:printquery\njoshua:printqueryresults\nSee\nthe\nsection \"Querying\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nShow Joshua Database Command\nDisplays\nthe\ncontents\nof\nthe\nDatabase,\nor\na\nsubset\nof\nthe\ncontents\nmatching\na\ncer\ntain\npattern.\nmatching\npattern\nSpecifies\nthe\npredication\npatterns\nto\ndisplay.\nThe\ndefault\nis\nthe\nentire\ndatabase.\nThe\ndisplay\ngroups\npredications\nunder\nthe\nheadings\nTrue\nand\nFalse,\nfor\npredica\ntions\nwith\na\ntruth\nvalue\nof\njoshua:*true*\nand\njoshua:*false*,\nrespectively.\nWhen\nspecifying\na\npattern\nyou\ncan\nfurther\nlimit\nthe\ndisplay\nto\npatterns\nwith\neither\ntruth\nvalue.\nExamples:\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\nAll\nTrue\nthings\n;\nindication\nof\ntruth\nvalue\nis\nin\nthe\nheading\n[DREAMSIN\nSPANISH\nLUCINDA]\n[NATIVESPEAKEROF\nSPANISH\nLUCINDA]\n[DREAMSIN\nSUMERIAN\nDRPARCHMENT]\n[NATIVESPEAKEROF\nGERMAN\nDRPARCHMENT]\n[COUNTSIN\nSPANISH\nLUCINDA]\nFalse\nthings\n[COUNTSIN\nGERMAN\nHENRY]\n;\nindication\nof\ntruth\nvalue\nis\nin\nthe\nheading\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\n[dreamsin\n?x\n?y]\n(opposite\ntruthvalue\ntoo?\n[default\nYes])\nYes\nTrue\nthings\n[DREAMSIN\nSPANISH\nLUCINDA]\n[DREAMSIN\nSUMERIAN\nDRPARCHMENT]\nFalse\nthings\nNone\nSee\nthe\nsection \"Entering\nand\nDisplaying\nPredications\nin\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nShow Joshua Predicates Command\nShows\nthe\ncurrently\ndefined\nJoshua\npredicates.\n:Include\nModels\nWhether\nto\ninclude\npredicates\nthat\nare\nused\nas\nbase\nflavors\nfor\nbuilding\nother\npredicates\nin\nthe\noutput.\n:Matching\nShow\nonly\npredicates\nwhose\nnames\ncontain\na\nsubstring\nor\nsub\nstrings.\n\nMarch 1999\nJoshua Language Dictionary\n:Output\nDestination\nWhere\nto\ndisplay\nthe\ninformation.\n:Packages\nOnly\nshow\npredicates\nin\nthe\nspecified\npackage\nor\npackages.\nSupply\na\nvalue\nof\nAll\nto\nsee\nall\nthe\ncurrently\ndefined\nJoshua\npredicates.\nUnless\nyou\notherwise\nspecify\nthe\npackage,\nyou\nsee\nonly\nthe\npredicates\ndefined\nin\nthe\ncurrent\npackage.\n:Search\nInherited\nSymbols\nWhether\nto\ninclude\npredicates\nthat\nare\ninherited\nby\nthe\npack\nages\nspecified\nin\n:Packages.\n:System\nShow\nonly\nthe\npredicates\nthat\nare\ndefined\nin\na\nparticular\nsys\ntem.\nThe\nShow\nJoshua\nPredicates\ncommand\nprovides\na\nconvenient\ntool\nfor\nbrowsing\nthrough\nall\nthe\npredicates\ndefined\nin\nthe\ncurrent\nworld.\nThe\noutput\nis\na\ntable\nof\npredicate\nnames\nand\narguments.\nThere\nare\na\nnumber\nof\nmouse\nbehaviors\ndefined\nfor\nthe\npredicate\nnames\nthat\nthis\ncommand\ndisplays.\nThese\ncan\nbe\nseen\nby\nmous\ning\nright\non\nthe\nname.\nShow\nJoshua\nPredicates\n:Packages\nTME\nTME:ABNORMAL\n(WHO\nFORWHAT)\nTME:LOVES\n(LOVER\nLOVEE)\nTME:BIRD\n(BOID)\nTME:ONEPERROWORCOL\n(RORC\nINDEX)\nTME:FLY\n(BOID)\nTME:PENGUIN\n(BOID)\nISEXAMPLEOF\n(NAME\nTYPE)\nPROVABLE\n(PROPOSITION)\nTME:JEALOUS\n(WHO)\nTME:QUEEN\n(ROW\nCOL)\nTME:KILLS\n(KILLER\nVICTIM)\nTME:TRAGEDY\n(EVENT)\nKNOWN\n(PROPOSITION)\nRelated\nCommands:\n\"Show\nJoshua\nRules\nCommand\"\n\"Show\nJoshua\nTracing\nCommand\"\nShow Joshua Rules Command\nDisplays\nthe\ncurrently\ndefined\nrules.\n:Triggered\nBy\nShow\nrules\nwith\none\nor\nmore\ntriggers\nthat\nunify\nwith\nthe\nspec\nified\npredication.\n:Matching\nShow\nrules\nwith\nnames\ncontaining\none\nor\nmore\nsubstrings.\n:Output\nDestination\nWhere\nto\ndisplay\nthe\noutput\nfrom\nthis\ncommand.\n:Packages\nShow\nthe\nrules\ndefined\nin\nwhich\npackage\nor\npackages.\nThis\nde\nfaults\nto\nthe\ncurrent\npackage.\n:Search\nInherited\nSymbols\nInclude\nrules\nthat\nare\ninherited\nby\nPackages.\n:System\nShow\nonly\nthe\nrules\ndefined\nin\na\nparticular\nsystem.\n:Type\nShow\nonly\nbackward\nor\nforward\nrules.\nBy\ndefault\nthe\ncommand\nshows\nboth\nbackward\nand\nforward\nrules.\n\nJoshua Language Dictionary\nMarch 1999\nThe\nShow\nJoshua\nRules\ncommand\nprovides\na\ntool\nfor\nbrowsing\nthrough\nall\nthe\nJoshua\nrules.\nIt\ndisplays\na\ntable\nof\nall\nthe\nrules\nsatisfying\nthe\ngiven\narguments.\nMousing\nmiddle\non\na\nrule\nname\ndisplays\nthe\nmost\nrecent\ndefinition\nof\nthat\nrule.\nExample:\nShow\nJoshua\nRules\n:Triggered\nBy\n[tme:loves\n?\n?]\n:Packages\nAll\nForward\nRules:\nJEALOUSY\nLOVEINIDLENESS\nONLYONELOVE\nQUALITYNOTQUANTITY\nUNREQUITEDLOVE\nThe\nabove\nexample\nlists\nall\nof\nthe\nrules\nthat\ncould\nbe\ntriggered\nby\na\npredication\nof\nthe\nform\n[tme:loves\n?\n?].\nRelated\nCommands:\n\"Show\nJoshua\nPredicates\nCommand\"\n\"Show\nJoshua\nTracing\nCommand\"\nShow Joshua Tracing Command\nShows\ninformation\nabout\nJoshua\ntracing.\nType\nof\nTracing\nWhich\ntype\nof\ntracing\nto\ndescribe.\nIt\ncan\nbe\none\nof\nforward\nrules,\nbackward\nrules,\npredications,\nTMS\noperations,\nor\nall.\n:Output\nDestination\nWhere\nto\ndisplay\nthe\noutput\nfrom\nthis\ncommand.\nThe\nShow\nJoshua\nTracing\ncommand\ndescribes\nthe\ncurrent\nstate\nof\nJoshua\ntracing,\nsaying\nwhether\neach\nType\nof\nTracing\nis\non\nor\noff.\nFor\neach\nactive\nType\nof\nTracing,\nShow\nJoshua\nTracing\nprints\nout\ninformation\nabout\nthe\ncurrent\noptions\nand\ntraced\nevents.\nExample:\nShow\nJoshua\nTracing\n(type\nof\ntracing)\nAll\n\nMarch 1999\nJoshua Language Dictionary\nRelated\nCommands:\n\"Show\nJoshua\nRules\nCommand\"\n\"Show\nJoshua\nPredicates\nCommand\"\nShow Rule Definition Command\nShows\nthe\nlatest\ndefinition\nof\na\nJoshua\nrule.\nRule\nShow\nthe\ndefinition\nof\nwhich\nrule\nor\nrules.\n:Load\nThis\nargument\ncontrols\nthe\nbehavior\nof\nthe\ncommand\nwhen\nthe\ndesired\nrule\ndefinition\nis\nnot\ncurrently\nin\nan\neditor\nbuffer.\nIf\nyou\nenter\nYes,\nthe\ncommand\nloads\nthe\ndefinition\ninto\nan\neditor\nbuffer.\nIf\nyou\nenter\nNo,\nit\ndoes\nnot.\nThe\nvalue\nof\nLoad\ndefaults\nto\nQuery,\nmeaning\nthe\ncommand\nshould\nask\nyou\nbefore\nloading\nany\nfile\ninto\nthe\neditor.\n:Output\nDestination\nWhere\nto\ndisplay\nthe\noutput\nfrom\nthis\ncommand.\nThe\nShow\nRule\nDefinition\ncommand\nallows\nyou\nto\nsee\nthe\ndefinition\nof\na\nJoshua\nrule\nin\na\nLisp\nListener\nwithout\nhaving\nto\nenter\nthe\neditor.\nWhen\nthe\nrule\ndefini\ntion\ncan\nbe\nfound\nin\nthe\neditor\nthe\ncommand\ndisplays\nthe\nlatest\nversion.\nOther\nwise,\ndepending\non\nthe\nvalue\nof\nLoad,\nthe\ncommand\noffers\nto\nread\nin\nthe\nlatest\ndefinition\nfrom\nthe\nfile\ncontaining\nthe\nrule\ndefinition.\nExample:\nShow\nRule\nDefinition\nJEALOUSY\nRule\nJealousy:\n(defrule\njealousy\n(:forward\n:importance\n3)\nIF\n[and\n[jealous\n?x]\n[loves\n?x\n?y]\n[loves\n?z\n?y]\n(differentobjects\n?x\n?z)]\nTHEN\n[kills\n?x\n?z])\njoshua:slotcurrentpredication\nslot\nGeneric\nFunction\nThis\nfunction\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nfinds\nthe\npredication\nexpressing\nthe\ncurrent\nobjectattributevalue\ntriple\nrepresented\nby\nthe\nslot.\njoshua:slotcurrentvalue\nslot\nGeneric\nFunction\nThis\nfunction\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nfinds\nthe\ncurrent\nvalue\nof\na\nslot.\nNote\nthat\nthe\nmeaning\nof\nthis\nvalue\nmay\nbe\ndependent\nupon\nthe\ntype\nof\na\nslot:\nfor\ninstance\nin\nthe\ncase\nof\nsetvalued\nslots,\nthe\nvalue\nmay\nbe\na\nlist\nrepresenting\nthe\nset.\njoshua:slotmyobject\nslot\nGeneric\nFunction\nThis\nfunction\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nGiven\na\nslot,\nit\nfinds\nthe\nobject\nthat\nowns\nthat\nslot.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:slotvaluemixin\nFlavor\nThis\nflavormixin\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nmay\nbe\nused\nto\nadd\nslotvalue\nbehaviour,\nlike\nthat\nof\nthe\ndefault\nslotvalue\npredicate\njoshua:valueof,\nto\npredicate\nmodels\ndefined\nby\nthe\nuser.\njoshua:succeed\n&optional\nsupport\nFunction\nJoshua\nis\na\nsuccesscontinuationpassing\nlanguage.\nIn\nmost\nplaces,\ncalling\nthe\ncontinuation\nmeans \"go\nahead\nwith\nthe\nrest\nof\nthe\ncomputation\".\nBased\non\ncontext,\nthe\nform\njoshua:succeed\nfinds\nthe\ncontinuation\nand\ncalls\nit\nac\ncordingly.\nYou\ncan\nuse\njoshua:succeed\nwithin\nLisp\ncode\nembedded\nin:\n-\nThe\nifpart\nof\nrules\n(in\nLisp\ncode\nin\nforward\nrules,\nand\nin\nmultiply\nsucceeding\nLisp\nforms\nof\nbackward\nrules)\n-\nThe\nbody\nof\na\njoshua:defquestion\nIt\nmakes\nno\nsense\nto\ncall\njoshua:succeed\nelsewhere.\nThe\noptional\nsupport\nargument\nallows\nthe\nLisp\ncode\nto\nspecify\nthe\nderiva\ntion\ninformation\nfor\nthe\nquery.\nExample:\n(definepredicate\ngoodtoread\n(book))\n(defparameter\n*books*\n'(decameron\ncanterburytales\ngargantuaandpantagruel\ntomjones\ncatch22))\n(defrule\nreadinglist\n(:backward)\nif\n(typecase\n?candidatebook\n(unboundlogicvariable\n(loop\nfor\nbook\nin\n*books*\ndoing\n(withunification\n(unify\n?candidatebook\nbook)\n(succeed\n'Humor101readinglist))))\n(otherwise\n(when\n(member\n?candidatebook\n*books*)\n(succeed\n(succeed\n'Humor101readinglist)))))\nthen\n[goodtoread\n?candidatebook])\n\nMarch 1999\nJoshua Language Dictionary\n(ask\n[goodtoread\n?x]\n#'printqueryresults)\n[GOODTOREAD\nDECAMERON]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nREADINGLIST\nHUMOR101READINGLIST\n[GOODTOREAD\nCANTERBURYTALES]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nREADINGLIST\nHUMOR101READINGLIST\n[GOODTOREAD\nGARGANTUAANDPANTAGRUEL]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nREADINGLIST\nHUMOR101READINGLIST\n[GOODTOREAD\nTOMJONES]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nREADINGLIST\nHUMOR101READINGLIST\n[GOODTOREAD\nCATCH22]\nsucceeded\nIt\nwas\nderived\nfrom\nrule\nREADINGLIST\nHUMOR101READINGLIST\nRelated\nFunctions:\njoshua:unify\njoshua:withunification\njoshua:support\ndatabasepredication\n&optional\nfilter\nFunction\nExamines\nthe\nTMS\njustification\nstructures\ncurrently\nsupporting\nbelief\nin\ndatabasepredication,\ntracing\nthem\nback\nto\nprimitively\njustified\npredications\n(i.e.\nto\nthose\nwhose\nsupport\ndoes\nnot\ndepend\non\nany\nother\npredications).\nRe\nturns\na\nlist\nof\nthe\nprimitive\nsupport\n(assumptions\nand\npremises).\nFilter,\nif\nprovided,\nis\na\npredicate\nto\nbe\napplied\nto\nthe\nsupport.\nOnly\nthose\nelements\nof\nthe\nprimitive\nsupport\nwhich\nsatisfy\nthe\npredicate\nare\ncollected.\ndatabasepredication\nA\npredication\nobject\nthat\nis\nin\nthe\ndatabase.\nMust\nbe\nthe\nactual\ndatabase\nobject,\nand\nnot\na\ncopy\nof\nit.\nfilter\nIf\nfilter\nis\nnot\nsupplied\nthe\nvalue\ndefault\nto\nnil\nwhich\nmeans\nthat\nall\nthe\nprimitive\nsupport\nshould\nbe\ncol\nlected\nand\nreturned.\nOtherwise,\nfilter\nshould\nbe\na\nfunction\nof\none\nargument\nthat\nreturns\nnonnil\non\nthe\nsupport\nyou\nwant.\n(For\nexample,\nyou\nmight\nwant\nto\nlook\nat\njust\nthe\nassumption\nsupport\nof\ndatabase\npredication.)\nWhen\nthe\ndatabasepredication\nargument\nis\nbased\non\na\nTMS,\nthis\nfunction\nis\npassed\na\njustifica\ntion\nas\nits\nargument.\nIt\nmay\nexamine\nthe\njustification\nusing\njoshua:destructurejustification.\nExamples:\nProspero,\ncurious\nabout\nhis\ndaughter's\nrelationship\nwith\nCaliban,\nmight\ndo:\n\nJoshua Language Dictionary\nMarch 1999\n(ask\n[isfriendof\nMiranda\n?]\n#'(lambda\n(backwardsupport)\n(format\nt\n\"~&The\nsupport\nfor\n~S\nis\n~S.\"\n(askdatabasepredication\nbackwardsupport)\n(support\n(askdatabasepredication\nbackwardsupport))))\n:dobackwardrules\nnil)\nIf\nhe\nwanted\nto\nsee\njust\nthe\nassumptions\nunderlying\nit,\nhe\nwould\ndo:\n(ask\n[isfriendof\nMiranda\n?]\n#'(lambda\n(backwardsupport)\n(format\nt\n\"~&The\nsupport\nfor\n~S\nis\n~S.\"\n(askdatabasepredication\nbackwardsupport)\n(support\n(askdatabasepredication\nbackwardsupport)\n#'(lambda\n(justification)\n(multiplevaluebind\n(ignore\nmnemonic)\n(eq\nmnemonic\n:assumption))))))\n:dobackwardrules\nnil)\nSee\nthe\nsection \"The\nTruth\nMaintenance\nProtocol\",\npage\n54.\njoshua:support\n&optional\nfilter\nof\njoshua:defaultprotocol\nMethod\nimplementationmodel\nThis\nis\nthe\ndefault\nimplementation\nthe\nthe\njoshua:support\nprotocol\nfunc\ntion.\nIt\nreturns\nnil.\nPredications\nthat\ndo\nprovide\na\nTMS\nshould\nbe\nbased\non\njoshua:basictmsmixin,\nwhich\ndefines\na\njoshua:support\nmethod\nthat\npro\nvides\nreal\ninformation.\njoshua:support\n&optional\nfilter\nof\njoshua:basictmsmixin\nMethod\nThis\nis\nthe\ndefault\nimplementation\nof\nthe\njoshua:support\nprotocol\nfunction\nfor\nall\nmodels\nthat\nimplement\na\nTMS.\nAny\nTMS\nimplementation\nmay\nuse\nthis\nmethod\nsimply\nby\nmixing\nin\nthe\njoshua:basictmsmixin\nflavor.\nIf\nthe\nTMS\nimplementor\nneeds\nto\nprovide\nfunctionality\nnot\nprovided\nby\nthis\nmethod,\nthat\ncan\nbe\ndone\nby\nproviding\na\nmethod\nfor\njoshua:support\nwith\nthe\nmodel\nthat\nimplements\nthe\nnew\nTMS.\nMost\nusers\nwill\nnever\nneed\nto\nknow\nabout\nthis.\njoshua:tell\npredication\n&key\n:justification\nFunction\nPuts\na\npredication\ninto\nthe\nvirtual\ndatabase.\nNote:\njoshua:tell\nis\na\nmacro,\nand\nas\nsuch\nit\ncannot\nbe\nused\nas\nan\nargument\nto\nthe\nfunction\nfuncall.\npredication\nshould\nbe\nthought\nof\nas\na\npattern\nargument,\nnot\nas\nthe\nactual\ndata\nin\nthe\ndatabase.\nIf\nsomething\nalready\nexists\nin\nthe\ndatabase\nthat\nis\na\njoshua:variant\nof\npredication,\nthe\nreturned\n(canonical)\nvalue\nwill\nnot\nbe\neq\nto\npredication.\nThus\njoshua:tell\nserves\nas\nan\ninterner\nfor\npredication,\nthat\nis,\nit\ngives\nyou\nthe\ncanonical\ncopy\nin\nthe\ndatabase,\ncreating\nit\nif\nnecessary.\nIf\npredication\nis\nnot\nalready\nin\nthe\ndatabase,\nthe\nreturned\nvalues\nare\npredi\ncation\nand\nthe\nsymbol\nt.\n\nMarch 1999\nJoshua Language Dictionary\nIf\nsomething\nalready\nexists\nin\nthe\ndatabase\nthat\nis\na\njoshua:variant\nof\npredication,\npredication\nis\nnot\nput\ninto\nthe\ndatabase,\nsince\nthat\nwould\nbe\nduplication.\nInstead,\nthe\ncanonical\nversion\nfound\nin\nthe\ndatabase\nis\nre\nturned,\nalong\nwith\nthe\nsymbol\nnil.\nJustification\ncan\nbe\none\nof\nthe\nfollowing:\n-\nnil,\nin\nwhich\ncase\na\ndefault\njustification\nis\nused.\nIf\nthe\njoshua:tell\noccurs\noutside\na\nrule,\nthe\ndefault\njustification\nis\n:premise.\nIf\nthe\njoshua:tell\nis\ninside\na\nrule,\nthe\ndefault\njustification\nincludes\nthe\nrule\nname\nand\nthe\ncurrent\nsupport\nset.\n-\nA\nsymbol.\nA\njustification\nwhich\nis\na\nsymbol\nmeans\nthat\nthe\ntruthvalue\nof\npredication\ndoes\nnot\ndepend\non\nthat\nof\nany\nother\npredication;\nwe\nsay\nthat\npredication\nhas\na\nprimitive\njustification,\nin\nsuch\na\ncase.\nOne\nprimi\ntive\njustification\nis\nspecially\ntreated\nby\nthe\nLTMS\nprovide\nwith\nJoshua,\nnamely\n:premise.\n:premise\njustifications\nwill\nnever\nbe\nremoved\nby\nthe\nLTMS\nwithout\nquerying\nthe\nuser.\nOther\nprimitive\njustifications\nare\ntreat\ned\nas\nassumptions\nthat\ncan\nbe\nremoved\nby\nthe\nLTMS\nif\nnecessary\nto\nre\nsolve\na\ncontradiction.\n-\nA\nList\nof\nFour\nfields.\nThese\nare\nidentical\nto\nthe\narguments\nto\nthe\nJoshua\nprotocol\nfunction\njoshua:justify,\nnamely\na\nmnemonic,\ntruesupport,\nfalsesupport\nand\nunknownsupport.\nThese\nfields\nare\nused\n(or\ndiscarded)\nby\nwhatever\nTMS\nis\npresent.\nThe\ndatabase\ninto\nwhich\npredication\nis\nput\ndepends\non\nthe\ndata\nmodel\nof\nits\npredicate.\nThe\ndefault\nis\nthe\ndiscrimination\nnet.\nExamples:\n(tell\n[ismagician\nProspero])\n(tell\n[not\n[ismagician\nCaliban])\n(tell\n[isdaughterof\nMiranda\nProspero])\n(tell\n[isservantof\nCaliban\nProspero]\n:justification\n:premise)\n(tell\n[isfriendof\nMiranda\nCaliban]\n:justification\n:assumption)\n;later\nretracted!\n(tell\n'[isexiledfrom\nProspero\n,(findexilecountry\n'Prospero)])\nNote:\nChances\nare\nthat\nyou\nseldom\nwant\nto\ndefine\na\nmethod\nthat\ntakes\nover\nthe\nentire\nfunctionality\nof\njoshua:tell.\nIt's\nmore\nlikely\nthat\nyou\nwould\nwant\nto\ndefine\na\nmethod\nfor\none\nof\nthe\ngeneric\nfunctions\nit\ncalls,\nsuch\nas\njoshua:insert,\njoshua:justify,\nor\njoshua:mapoverforwardruletriggers.\nRelated\nFunctions:\n\nJoshua Language Dictionary\nMarch 1999\njoshua:untell\njoshua:clear\njoshua:ask\njoshua:justify\nSee\nthe\nsection \"Entering\nand\nDisplaying\nPredications\nin\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.\nSee\nthe\nsection \"Truth\nMaintenance\nFacilities\",\npage\n53.\njoshua:tmsbits\npredication\nGeneric\nFunction\npredication\nAny\npredication\nPredications\ncontain\na\nword\nof\nflag\nbits\nfor\nuse\nby\ninternals\nof\nthe\nsystem.\nSeveral\nof\nthese\nflags\nare\nreserved\nfor\nuse\nby\nTMS\nimplementors.\nThis\nfunction\nretrieves\nthese\nbits\nfrom\na\npredication.\nThe\nmeaning\nof\nthe\nfield\nof\nbits\nreturned\nis\ndefined\nby\nthe\nspecific\nTMS.\nSee\nthe\nsection \"The\nTruth\nMaintenance\nProtocol\",\npage\n54.\njoshua:tmscontradiction\nFlavor\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nJoshua\nprovides\na\ndefault\nhandler\nfor\nthis\ncondition\nwhich\nexamines\nthe\nprimitive\nsupport\nunderlying\nthe\ncontradiction.\nIf\nthe\nprimitive\nsupport\nof\nthe\ncontradiction\ncontains\nnonpremises,\nthen\nthe\ndefault\nhandler\noffers\nthe\nuser\nthe\nopportunity\nto\nretract\none\nor\nmore\nof\nthese.\nThis\nwill\ncontinue\nuntil\nthe\ncontradiction\nis\nresolved.\nIf\nthe\nprimitive\nsupport\nof\nthe\ncontradiction\ncontains\na\nsingle\nnonpremise,\nthen\nthe\ndefault\nhandler\nautomatically\nretracts\nthat\npredication\nwithout\ninteracting\nwith\nthe\nuser.\nThe\ndefault\nhandler\ncan\nbe\noverridden\nby\nusing\nconditionbind\nto\nbind\nthe\njoshua:tmscontradiction\ncondition.\nIf\nthe\nprimitive\nsupport\ncontains\nonly\npremises\nthen\nthe\nsituation\nis\nregard\ned\nas\nmore\nserious\nsince\npremises\nare\nnot\nsupposed\nto\nbe\nretraced\nby\na\nTMS\nautomatically.\nIn\nthis\ncase\nthe\ndefault\nhandler\nsignals\na\nhard\ncontra\ndiction\ncondition.\nSee\nthe\ngeneric\nfunction\njoshua:tmscontradictionhard\ncontradictionflavor,\npage\n237.\nThe\nhard\ncontradiction\ncondition\nis\nhandled\nby\na\ndefault\nhandler\nwhich\noffers\nthe\nuser\nthe\nopportunity\nto\nretract\na\nmember\nof\nthe\npremise\nsupport\nof\nthe\ncontradiction.\n\nMarch 1999\nJoshua Language Dictionary\nThis\ndefault\nhandler\ncan\nbe\noverridden\nby\nusing\nconditionbind\nto\nbind\nthe\njoshua:tmshardcontradiction\ncondition.\nSpecific\nTMS's\nmay\nprovide\ntheir\nown\ncontradiction\nconditions\nby\ndefining\na\nflavor\nwhich\nmixes\nin\nthe\njoshua:tmscontradiction\nflavor.\nUsers\nmay\nalso\ndevelop\na\nmore\nelaborate\ncontradiction\nsignalling\nmecha\nnism\nby\ndefining\nconditions\nof\ntheir\nown\nwhich\nmix\nin\nthe\njoshua:tms\ncontradiction\nflavor.\nSpecific\ncondition\nhandlers\nfor\nthese\nconditions\nmay\nalso\nbe\ndefined,\nallowing\na\nfinegrained\ncontrol\nof\nthe\nbacktracking\nprocess.\nSee\nthe\nsection \"Signalling\nConditions\"\nin\nSymbolics\nCommon\nLisp\nProgram\nming\nConstructs.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmscontradictioncontradictorypredication\ntms\nGeneric\nFunction\ncontradiction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\naccesses\nan\ninstance\nvariable\nwhich\ncontains\nthe\npredication\nwhich\ninitiated\nbacktracking.\nA\nTMS\nmay\nchoose\nnot\nto\npro\nvide\nany\ninformation\nin\nthis\nfield\nif\nit\ndetects\nthe\ncontradiction\na\npart\nof\na\nglobal\nprocess\nwhich\ndoes\nnot\nallow\nthe\ncontradiction\nto\nbe\nisolated\nto\nan\nindividual\npredication.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmscontradictionhardcontradictionflavor\ntms\nGeneric\nFunction\ncontradiction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\nreturns\nthe\nname\nof\nthe\nhard\ncontradiction\nfla\nvor\nassociated\nwith\ntmscontradiction.\nThis\nis\nthe\ncondition\nwhich\nshould\nbe\nsignalled\nif\nthe\ncurrent\ncontradiction\nincludes\nonly\npremises\nin\nits\nprimitive\nsupport.\nSee\nthe\nflavor\njoshua:tmshardcontradiction,\npage\n239.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:tmscontradictionjustification\ntmscontradiction\nGeneric\nFunction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\naccesses\nan\ninstance\nvariable\nwhich\ncontains\nthe\njus\ntification\nthat\ninitiated\nbacktracking.\nIf\na\nspecific\npredication\ninitiated\nbacktracking,\nthen\nthis\nfunction\nreturns\nthe\njustification\nof\nthat\npredication.\nSee\nthe\ngeneric\nfunction\njoshua:tmscontradictioncontradictory\npredication,\npage\n237.\nHowever,\na\nTMS\n(e.g.\nJoshua's\nLTMS)\nmay\ndetect\nthe\ncontradiction\nas\npart\nof\na\nglobal\nprocess\nwhich\nlocalizes\nthe\ncontradic\ntion\nnot\nto\na\npredication\nbut\nto\na\njustification\nwhich\ncannot\nbe\nsatisfied.\nIn\nsuch\na\ncase,\nthis\ngeneric\nfunction\nreturns\nthe\nunsatisfiable\njustification,\nbut\nthe\ngeneric\nfunction\njoshua:tmscontradictioncontradictorypredication\nreturns\nnil.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmscontradictionnonpremises\ntmscontradiction\nGeneric\nFunction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\naccesses\nan\ninstance\nvariable\nwhich\ncontains\na\nsubset\nof\nthe\nprimitivesupport\nunderlying\na\ncontradiction.\nThe\nsubset\nin\ncludes\nall\nelements\nof\nthe\nprimitivesupport\nwhich\nthe\nTMS\nregards\nas\nre\ntractable,\nthat\nis,\neverything\nexcept\nthe\npremises.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmscontradictionpremises\ntmscontradiction\nGeneric\nFunction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\n\nMarch 1999\nJoshua Language Dictionary\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\naccesses\nan\ninstance\nvariable\nwhich\ncontains\na\nsubset\nof\nthe\nprimitivesupport\nunderlying\na\ncontradiction.\nThe\nsubset\nin\ncludes\nall\nelements\nof\nthe\nprimitivesupport\nwhich\nthe\nTMS\nregards\nas\nnot\nretractable,\nthat\nis,\nthe\npremises.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmscontradictionsupport\ntmscontradiction\nGeneric\nFunction\ntmscontradiction\nA\ncondition\nobject\nbuilt\non\nthe\nflavor\njoshua:tms\ncontradiction.\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nThis\ngeneric\nfunction\naccesses\nthe\ninstance\nvariable\nwhich\ncontains\nall\nthe\nprimitive\nsupport\nunderlying\na\ncontradiction.\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:tmshardcontradiction\nFlavor\nThis\nflavor\nis\nthe\nbase\nflavor\nupon\nwhich\nto\nbuild\ncondition\nobjects\nfor\nHard\nContradictions.\nA\nhard\ncontradiction\nis\nsignalled\nwhen\nthere\nis\na\ncon\ntradiction\nwhose\nprimitive\nsupport\nincludes\nonly\npremises\n(i.e.\nprimitive\nsupport\nwhich\nthe\nTMS\nis\nnot\nfree\nto\nretract\nautomatically).\nA\nTMS\ninitiates\nbacktracking\nin\nJoshua\nby\nsignalling\na\ncondition\nwhich\nis\nbased\nupon\nthe\njoshua:tmscontradiction\nflavor.\nInstances\nof\nthis\nflavor\nin\nclude\nseveral\ninstance\nvariables\ncontaining\ninformation\nuseful\nto\nthe\ndefault\ncondition\nhandler\nor\nto\nany\nhandler\nwhich\nattempts\nto\nconduct\nintelligent\nbacktracking.\nThere\nare\naccessors\ndefined\nfor\neach\nof\nthese\ninstance\nvari\nables.\nA\nhard\ncontradiction\ncondition\nis\nnot\nnormally\nsignalled\ndirectly\nby\na\nTMS\nor\na\nuser's\nprogram.\nThey\nshould\ninstead\nsignal\na\ncondition\nbuilt\nupon\njoshua:tmscontradiction.\nThe\ndefault\nhandler\nfor\nthis\ncondition\nwill,\nin\nturn,\nsignal\na\nhard\ncontradiction\nif\nthere\nare\nonly\npremises\nin\nthe\nprimitive\nsupport.\nTo\ndo\nthis,\nthe\nhandler\nneeds\nto\nknow\nthe\nname\nof\nthe\nhard\ncon\ntradiction\nflavor\ncorresponding\nto\nthe\ncontradiction\ncondition\nsignalled;\nthis\ninformation\nis\nprovided\nby\nthe\ngeneric\nfunction\nju::hardcontradiction\nflavor\nwhich\nmust\nbe\nimplemented\nby\nany\nflavor\nbuilt\nupon\njoshua:tms\ncontradiction.\n\nJoshua Language Dictionary\nMarch 1999\nSee\nthe\nsection \"Signalling\nContradictions\nand\nManaging\nBacktracking\",\npage\n57.\njoshua:*true*\nVariable\nA\nnamed\nconstant\nused\nby\nJoshua\nto\ndenote\na\ntruth\nvalue\nof\ntrue.\nYou\ncan\ncompare\ntruth\nvalues\nusing\neql.\nRelated\nTopics:\njoshua:*false*\njoshua:*unknown*\njoshua:*contradictory*\njoshua:truthvalue\njoshua:predicationtruthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:truthvalue\nPresentation\nType\nThis\ntype\nprovides\na\nconvenient\nway\nto\naccept\nand\npresent\ntruth\nvalues.\nIt\nwill\nparse\nthe\ntruthvalue\nname\nand\nreturn\nthe\ninteger\nvalue\nfor\nthat\ntruth\nvalue.\nWhen\npresenting\ntruthvalues\nit\nwill\npresent\nthe\nnumeric\ntruth\nvalue\nas\none\nof\ntrue,\nfalse,\nunknown,\nor\ncontradictory.\nExamples:\n(accept\n'truthvalue)\nEnter\na\ntruth\nvalue:\ntrue\nTRUTHVALUE\n(present\n'truthvalue)false\n#<DW::DISPLAYEDPRESENTATION\nJOSHUA:TRUTHVALUE\n513174521>\nRelated\nFunction:\njoshua:predicationtruthvalue\njoshua:typeofmixin\nFlavor\nThis\nflavormixin\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nmay\nbe\nused\nto\nadd\nobjecttype\nbehaviour,\nlike\nthat\nof\nthe\ndefault\nobjecttype\npredicate\njoshua:objecttypeof,\nto\npredicate\nmodels\ndefined\nby\nthe\nuser.\njoshua:typeofmixin\ninherits\nfrom\njoshua:tellerrormodel\nand\njoshua:askdataonlymixin.\njoshua:undefinepredicate\nname\nMacro\n\"Undoes\"\na\npredicate\ndefinition.\nPredications\nbuilt\nwith\nthis\ndefinition\nre\nmain\nin\nthe\nworld,\nbut\nan\nattempt\nto\ndo\nalmost\nanything\nto\nthem\nresults\nin\nan\nerror.\nExample:\n(definepredicate\nfruit\n(afruit))\n(undefinepredicate\n'fruit)\n\nMarch 1999\nJoshua Language Dictionary\nYou\ncan\nperform\nthe\nsame\noperation\nfrom\nthe\nZmacs\neditor.\nPlace\nyour\ncur\nsor\non\nthe\npredicate\ndefinition\nto\nbe\nremoved\nand\nuse\nthe\ncommand\nmX\nKill\nDefinition.\nThe\nsystem\nasks\nfor\nconfirmation\nin\nthe\nminibuffer;\nthen\nit\noffers\nyou\nthe\noptions\nof\nremoving\nthe\ndefinition\nfrom\nthe\neditor\nbuffer\nit\nself,\nand\nof\ninserting\nthe\njoshua:undefinepredicate\ncommand\ninto\nthe\nedi\ntor\nbuffer.\nExample:\n1. Interaction During m-X Kill Definition\n2. Zmacs Buffer After Completion of m-X Kill Definition\nRelated\nFunctions:\njoshua:definepredicate\n\"Zmacs\nCommand:\nKill\nDefinition\"\njoshua:undefinepredicatemethod\nmethodspec\nFunction\nRemoves\nthe\nmethod\ndefined\nfor\nmethodspec\nfrom\nthe\nworld.\nmethodspec\nA\nJoshua\nprotocol\nmethod\nspecifier\nof\nthe\nform\n(proto\ncolfunction\nflavor\n&rest\noptions).\nThe\neditor\ncommand\nmX\nKill\nDefinition\nis\nan\neasy\nway\nto\nremove\na\npredi\ncate\nmethod\nfor\na\nmethod\ndefined\nin\nan\neditor\nbuffer.\nRelated\nfunction:\njoshua:definepredicatemethod\n\nJoshua Language Dictionary\nMarch 1999\njoshua:undefinepredicatemodel\nname\nFunction\nRemoves\nthe\npredicate\nnamed\nname\nfrom\nthe\nworld.\nname\nThe\nname\nof\na\npredicate\nmodel.\nThe\neditor\ncommand\nmX\nKill\nDefinition\nis\nan\neasy\nway\nto\nremove\na\npredi\ncate\nmodel\nfor\na\nmodel\ndefined\nin\nan\neditor\nbuffer.\nRelated\nfunction:\njoshua:definepredicatemodel\njoshua:undefquestion\nname\nFunction\nRemoves\na\nquestion\ndefinition\nfrom\nthe\nsystem.\nname\nThe\nname\nof\nthe\nquestion\n(definepredicate\nfoo\n(something\nsomethingelse))\n(defquestion\nquestion1\n(:backward)\n[foo\n?x])\n(ask\n[foo\n2]\n#'printquery\n:doquestions\nt)\nIs\nit\ntrue\nthat\n\"[FOO\n2]\"?\n[default\nNo]:\nYes\n[FOO\n2]\n(undefquestion\n'question1)\nQUESTION1\n(ask\n[foo\n2]\n#'printquery\n:doquestions\nt)\nTo\nkill\na\nquestion\ndefinition\nfrom\na\nZmacs\nbuffer,\nuse\nthe\ncommand\nmX\nKill\nDefinition.\nFor\na\nsample\ninteraction\nwith\nthe\ncommand:\nSee\nthe\nmacro\njoshua:undefinepredicate,\npage\n240.\nRelated\nFunctions:\njoshua:defquestion\n\"Zmacs\nCommand:\nKill\nDefinition\"\nSee\nthe\nsection \"Asking\nthe\nUser\nQuestions\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:undefrule\nrulename\nFunction\nRemoves\na\nrule\ndefinition\nso\nthat\nthe\nrule\ncannot\nexecute.\nYou\ncan\nalso\nremove\na\nrule\nfrom\na\nZmacs\nbuffer\nwith\nmX\nKill\nDefinition.\nFor\na\nsample\ninteraction\nwith\nthe\ncommand:\nSee\nthe\nmacro\njoshua:undefinepredicate,\npage\n240.\nrulename\nThe\nname\nof\nthe\nrule\nto\nbe\nremoved.\nExamples:\n\nMarch 1999\nJoshua Language Dictionary\n(defrule\nparched\n(:forward)\nif\n[conditionof\nplantsoil\ndry]\nthen\n[needs\nplantsoil\nwater])\n(undefrule\n'parched)\nModeling\nNote:\njoshua:undefrule\ncalls\none\nof\nthe\ngeneric\nfunctions\njoshua:delete\nforwardruletrigger\nor\njoshua:deletebackwardruletrigger\nwhich\nre\nmoves\nthe\nrule's\ntrigger\nfrom\nits\nstorage\nplace,\nso\nthat\nit\nis\nno\nlonger\nfound\nby\nthe\ntrigger\nlocating\nand\ntrigger\nmapping\nfunctions.\nSee\nthe\nsection \"The\nContract\nof\nthe\nTrigger\nDeleting\nFunctions\",\npage\n38.\nRelated\nFunctions:\njoshua:defrule\njoshua:clear\n\"Clear\nJoshua\nDatabase\nCommand\"\n\"Zmacs\nCommand:\nKill\nDefinition\"\nSee\nthe\nsection \"Rules\nand\nInference\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:unify\nobject1\nobject2\nFunction\nIf\nobject1\nand\nobject2\nunify,\ndoes\nso,\nwhile\nsideeffecting\nany\nlogic\nvariables\nfor\nthe\nduration\nof\nthe\nunification.\nobject1\nA\npattern\nin\nJoshua,\nthat\nis,\na\npredication\ncontaining\nother\npredications,\nlists,\nsymbols,\nnumbers,\nor\nlogic\nvariables.\nobject2\nAnother\npattern.\nPattern\nmatching\nunderlies\nthe\ninferencing\nprocess.\nIn\nforward\nchaining,\nJoshua\nmatches\nrule\ntrigger\npatterns\nwith\ndatabase\npredications.\nIn\nback\nward\nchaining,\nit\nmatches\ngoals\nwith\ndatabase\npredications\nand\nwith\nrule\nand\nquestion\ntrigger\npatterns.\nTwo\npatterns\ncontaining\nno\nlogic\nvariables\nmatch\nif\nthey\nare\nstructurally\nequivalent\n(if\nthey \"look\nthe\nsame\").\nTwo\npatterns\ncontaining\nlogic\nvariables\nunify\nwhen\none\ncan\nsubstitute\nval\nues\nfor\nthe\nvariables\nso\nthat\nboth\npatterns\nbecome\nstructurally\nequivalent.\nThe\nprocess\nof\ndoing\nso\nis\ncalled\nunification.\njoshua:unify\nis\nuseful\nfor\nassigning\nvalues\nto\nlogic\nvariables\nwithin\nLisp\ncode\nin\nrule\nbodies.\nIf\nthe\nexpressions\nare\nunifiable,\nthe\nappropriate\nsubsti\ntutions\nare\nmade\nand\nrule\nexecution\ncontinues.\nIf\nthe\nexpressions\nare\nnot\nunifiable,\nrule\nexecution\nfails. \"Fails\"\nmeans\nthat\nit\nthrows\nto\nthe\nnearest\n(dynamically)\ncontaining\njoshua:withunification\nclause.\n\nJoshua Language Dictionary\nMarch 1999\nAlways\nwrap\nthe\nmacro\njoshua:withunification\naround\njoshua:unify\n(or\ncalls\nto\nfunctions\nthat\ncall\njoshua:unify)\nto\nestablish\nthe\nscope\nwithin\nwhich\nthe\nsubstitutions\nremain\nin\neffect.\nThe\nJoshua\nunifier\ndoes\nwhat\nis\ncalled\nan\noccur\ncheck,\nthat\nis,\nprevents\nthe\nformation\nof\ncertain\ncircular\nstructures\nby\nrefusing\nto\nunify\na\nlogic\nvariable\nwith\na\nstructure\nin\nwhich\nit\noccurs.\nFor\nexample,\nif\nyou\ntried\nto\nunify\n?x\nwith\n[f\n?x],\nyou\nwould\nget\nsomething\nwhose\nprinted\nrepresentation\nwould\nlook\n(partially)\nlike\nthis:\n[f\n[f\n[f\n[f\n[f\n[f\n...\nThis\nis\nexactly\nthe\nsame\nthing\nthat\nhappens\nwhen\nyou\nmake\ncertain\nconses\npoint\nat\nthemselves ⎯\nyou\nget\ncircular\nlists.\nTo\nsee\nhow\nthis\nmight\nhappen,\nconsider\nexample\nbelow.\nExamples:\nExample\n1:\n(definepredicate\nyearlysalary\n(employee\nsalary))\n(definepredicate\nbalancedue\n(person\nbalance))\n(definepredicate\ndenycredit\n(person))\n(defrule\ntest1\n(:forward)\nif\n[and\n[balancedue\n?applicant\n?balance]\n[yearlysalary\n?applicant\n?salary]\n(unify\n?cashflow\n(\n?salary\n?balance))\n(≤\n?cashflow\n?balance)]\nthen\n[and\n[denycredit\n?applicant]\n(format\nt\n\"~%\nSorry,\n~S,\nyour\ncashflow\nof\n~S\nis\ninsufficient.\"\n?applicant\n?cashflow)])\n(defun\ntestit\n()\n(clear)\n(tell\n[yearlysalary\nFred\n20000])\n(tell\n[balancedue\nFred\n15000])\n(tell\n[yearlysalary\nGeorge\n200000])\n(tell\n[balancedue\nGeorge\n15000])\n'donetesting)\nTESTIT\n(testit)\nSorry,\nFRED,\nyour\ncash\nflow\nof\nis\ninsufficient.\nDONETESTING\n\nMarch 1999\nJoshua Language Dictionary\nShow\nJoshua\nDatabase\nTrue\nthings\n[BALANCEDUE\nFRED\n15000]\n[YEARLYSALARY\nFRED\n20000]\n[YEARLYSALARY\nGEORGE\n200000]\n[BALANCEDUE\nGEORGE\n15000]\n[DENYCREDIT\nFRED]\n;Inference\nadded\nto\ndatabase\nFalse\nthings\nNone\nExample\n2:\n(withunboundlogicvariables\n(x)\n(let\n((p1\n'[foo\n,x])\n(p2\n[foo\n1]))\n(withunification\n(unify\np1\np2)\n;\nIf\np1\nand\np2\ndon't\nunify,\nthe\nnext\n;\nexpression\nis\nnot\nexecuted\n(format\nt\n\"~&The\nvalue\nof\nx\nis\n~s.\"\nx))))\nThe\nvalue\nof\nx\nis\n1.\nNIL\nExample\nshows\na\ncase\nwhere\nthe\noccurcheck\nfeature\nmakes\nthe\nunifica\ntion\nfail.\nExample\n3:\n(definepredicate\nf\n(arg))\n(definepredicate\ng\n(arg1\narg2))\n(defun\ntestoccur\n()\n(withunboundlogicvariables\n(x\ny)\n(withunification\n(unify\n'[g\n,x\n,x]\n'[g\n,y\n[f\n,y]])\n;;\nif\nyou\nget\nhere,\nprint\nY\nand\nreturn\n(format\nt\n\"~&You\nblew\nit.\nY\nis\nnow\ncircular:\n~S\"\ny)\n(returnfrom\ntestoccur\n:loser))\n;;\nif\nyou\ngot\nhere,\nthe\nunification\nfailed\n:occurcheckforbids))\n(testoccur)\n:OCCURCHECKFORBIDS\nThis\nfunction\nattempts\nto\nunify\n[g\n?x\n?x]\nwith\n[g\n?y\n[f\n?y]].\nIf\nit\nunifies,\nthe\nfunction\nprints\nan\nabusive\nmessage\nand\nreturns\nthe\nsymbol\n:loser.\nIf\nthe\nunification\nfails,\nit\nreturns\nthe\nsymbol\n:occurcheckforbids.\nLet's\nfollow\nthe\nunification\nand\nsee\nwhat\nhappens:\n\nJoshua Language Dictionary\nMarch 1999\n-\nThe\npredicates\nin\nboth\nplaces\nare\ng,\nso\nthe\nunifier\ngoes\non\nto\ninspect\nthe\narguments.\n-\nThe\nfirst\nargument\non\nthe\nleft\nis\n?x\nand\nthe\nfirst\non\nthe\nright\nis\n?y.\nThe\nunifier\nunifies\n?y\nand\n?x,\nwhich\nwe\ncan\nwrite\nas\nthe\nequation\n?x\n=\n?y.\n-\nThe\nnext\nargument\non\nthe\nleft\nis\n?x\nand\nthe\nnext\non\nthe\nright\nis\n[f\n?y].\nThus\nthe\nunifier\nattempts\nto\nenforce\nthe\nequation\n?x\n=\n[f\n?y].\nWe\nthus\nhave\nthe\ntwo\nequations\n?x\n=\n?y\nand\n?x\n=\n[f\n?y].\nCombining\nthem,\nwe\nhave\nthe\nsingle\nequation\n?y\n=\n[f\n?y],\nwhose\nonly\nsolution\nis\nto\nunify\n?y\nto\na\nstructure\ncontaining\nitself,\nthat\nis,\na\npredication\nthat\nstructurally\nre\nsembles\na\ncircular\nlist:\n[f\n[f\n[f\n[f\n...\n.\nThe\nunifier\nforbids\nthis\nand\nfails.\nWhen\nthe\nunifier\nfails,\nit\nthrows\nto\nthe\nnearest\ncontaining\njoshua:with\nunification.\nThus\nthe\nfunction\nabove\nreturns\n:occurcheckforbids.\n(testoccur)\n>\n:occurcheckforbids\nWhy\nshould\nJoshua\nattempt\nto\navoid\ncreating\nsuch\ncircular\nstructures,\nthough?\n(The\ncheck\ndoes\nhave\na\ncost\nin\nperformance,\nwhich\nis\nwhy\nmost\nversions\nof\nProlog\nwon't\ndo\nit.)\nThe\nanswer\nis\nthat\nif\nit\nwere\npermitted,\ncertain\nincorrect\ninferences\ncould\nbe\nmade.\nHere's\nan\nexample.\nSuppose\nwe\nhave\na\npredicate\nisparentof,\nwhich\ntakes\ntwo\npeople\nas\narguments:\n(definepredicate\nhasparent\n(kid\nparent))\nThis\nmeans\nthat\nparent\nis\na\nparent\nof\nkid.\nWe\ncan\nthen\nmake\nthe\n(unsur\nprising)\nstatement\nthat\nevery\nperson\nhas\na\nparent:\n∀\nx ∃\ny\n:\nhasparent(x,\ny)\nor,\nin\nquantifierfree\nlanguage,\n[hasparent\n?x\n(p\n?x)]\nwhere\np\nis\nthe\nSkolem\nfunction\nfor\nthe\nexistential\nvariable\ny.\n(You\ncan\nthink\nof\nit\nas\na\nnotation\nfor\nfinding\nthe\nparent\nof\nits\nargument.)\nNow\ntry\nto\nunify\nthe\nabove\nstatement\nwith\n[hasparent\n?z\n?z].\nIn\nthe\nab\nsence\nof\nthe\noccur\ncheck,\nwe\nget\nthe\nequations:\n?z\n=\n?x\nand\n?z\n=\n(p\n?x)\n(This\nwould\nend\nup\nwith\n?x\n=\n(p\n?x)\n=\n(p\n(p\n(p\n(p\n...).\nNow\nsubstitute\nfor\nthe\narguments\nin\n[p\n?z\n?z]\nusing\nthose\nequations,\nto\nget:\n[hasparent\n(p\n?x)\n?x]\nwhich\nis\njust\nthe\noriginal\nstatement\nwith\nthe\narguments\nreversed.\nThis\nis\nunsound.\nIt\nis\nnot\njustifiable\nto\ninfer\nthat\nhasparent\nis\na\nsymmetric\npredi\ncate.\n(Indeed,\nit\nis\nnot,\nsince\nno\none\nis\nhis\nown\nparent!)\nThus,\nto\nbe\nsound,\nJoshua\nmust\nforbid\noccurchecktype\nmatches.\n\nMarch 1999\nJoshua Language Dictionary\nRelated\nFunctions:\njoshua:withunification\njoshua:succeed\nSee\nthe\nsection \"Pattern\nMatching\nin\nJoshua:\nUnification\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:uninsert\ndatabasepredication\nGeneric\nFunction\njoshua:uninsert\nremoves\na\nsingle\ndatabasepredication\nthat\njoshua:insert\nhad\npreviously\nstored\nin\nthe\ndatabase.\njoshua:uninsert\nis\na\nsubroutine\nof\njoshua:untell;\nother\nsubroutines\ncalled\nby\njoshua:uninsert\nhandle\nother\nas\npects\nof\nremoving\nup\nall\nvestiges\nof\ndatabasepredication\nfrom\nthe\nJoshua\nworld.\nNote\nthat\njoshua:uninsert\ndoes\nnot \"search\"\nfor\npredications\nthat\nmatch\nits\nargument\nas\njoshua:ask\ndoes.\njoshua:uninsert\nonly\nremoves\nits \"argument\"\nfrom\nthe\ndatabase,\nusually\ntesting\nwith\neq.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\njoshua:unjustify\ndatabasepredication\n&optional\njustification\nGeneric\nFunction\nRemoves\na\njustification\nfrom\na\npredication\nin\nthe\ndatabase.\nFor\nexample,\nif\nyou\njoshua:tell\npredication\nand\nthen\nlater\nchange\nyour\nmind\nabout\nit,\nyou\ncan\nuse\njoshua:unjustify\nto\nremove\njustification\nfrom\nthe\npossible\nsupports.\nThis\ndoes\nnot\nautomatically\nremove\nall\nsupport\nfor\ndatabasepredication,\nas\nthere\nmight\nbe\nother\njustifications\nfor\nit\nas\nwell.\ndatabasepredication\nA\npredication\nobject\nthat\nis\nin\nthe\ndatabase.\nMust\nbe\nthe\nactual\ndatabase\nobject,\nand\nnot\na\ncopy\nof\nit.\njustification\nSpecifies\nthe\njustification\nto\nbe\nremoved.\nIf\njustification\nis\nnot\nsupplied,\nimplementations\nof\njoshua:unjustify\nshould\ndefault\nit\nto\nthe\njustification\ncurrently\nbeing\nused\nto\nsupport\ndatabasepredication.\nIn\ngeneral,\njoshua:unjustify\nis\nuseful\nonly\nif\ndatabasepredication\nis\nbuilt\non\nsome\nmodel\nthat\nsupports\nthe\nTMS\nprotocol.\nIn\nthe\ndefault\n(nonTMS)\nJoshua\nmodel,\njoshua:unjustify\njust\nsets\nthe\ntruthvalue\nof\nits\nargument\nto\njoshua:*unknown*.\nExamples:\nWhen\nProspero\nis\nreconciled\nto\nhis\ncountrymen,\nhe\nwill\ncast\nthe\nfollowing\nspell:\n(mapoverdatabasepredications\n[isexiledfrom\nProspero\n?]\n#'unjustify)\n(mapoverdatabasepredications\n[isexiledfrom\nMiranda\n?]\n#'unjustify)\n(mapoverdatabasepredications\n[isfriendof\nMiranda\nCaliban]\n#'unjustify)\njoshua:unjustify\nand\njoshua:untell\nwork\nin\nsimilar\nfashion,\nbut\nwith\nvery\n\nJoshua Language Dictionary\nMarch 1999\ndifferent\nresults.\nSee\nthe\ngeneric\nfunction\njoshua:untell,\npage\n248.\njoshua:unjustify\nkeeps\nthe\nunjustified\nfact\nin\nthe\ndatabase.\nIf\nthe\nfact\nis\nlater\ngiven\nagain\nto\njoshua:tell,\nit\nis\nnot\nconsidered\nas\na\nnew\npredication,\nbut\nrather\nas\na\nvariant\nof\nan\nexisting\none,\nand\nno\nforward\nrules\nare\nrun.\njoshua:untell,\non\nthe\nother\nhand,\nactually\nremoves\nthe\nfact\nfrom\nthe\ndatabase,\nfreeing\nup\nstorage,\nand\ncausing\nthe\ndatabase\nto\nlose\nprevious\nknowledge\nof\nit;\nif\nthe\nfact\nis\nlater\ngiven\nto\njoshua:tell\nagain,\nit\nis\nconsid\nered\nas\na\nnew\nfact,\nand\nforward\nrules\nare\nrerun.\nRelated\nFunctions:\njoshua:untell\njoshua:uninsert\nSee\nthe\nsection \"Revising\nProgram\nBeliefs\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"Retracting\nPredications\nwith\njoshua:unjustify\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:unjustify\n&optional\njustification\nof\nltms:ltmsmixin\nMethod\nThe\njoshua:unjustify\nmethod\nfor\nthe\nLTMS.\nIt\nremoves\nan\nLTMS\nformat\njustification\n(i.e.\na\nclause)\nfrom\npredication.\nJustification\ndefaults\nto\nthe\ncur\nrent\njustification.\nSee\nthe\ntheory\nof\nthe\nLTMS\nfor\ndetails.\njoshua:*unknown*\nVariable\nA\nnamed\nconstant\nused\nby\nJoshua\nto\ndenote\na\ntruth\nvalue\nof\njoshua:*unknown*.\nYou\ncan\ncompare\ntruth\nvalues\nusing\neql.\nA\npredication\nis\njoshua:*unknown*\nwhen\nthere\nis\nno\nvalid\nreason\nthat\nsup\nports\nit.\nThe\npredication\nmay\nor\nmay\nnot\nremain\nin\nthe\ndatabase,\nbut\nis\nconceptually \"not\nseen\"\nuntil\nits\ntruth\nvalue\nchanges\nto\njoshua:*true*\nor\njoshua:*false*.\nRelated\nTopics:\njoshua:*true*\njoshua:*false*\njoshua:*contradictory*\njoshua:truthvalue\njoshua:predicationtruthvalue\nSee\nthe\nsection \"Truth\nValues\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:untell\ndatabasepredication\nGeneric\nFunction\nRemoves\na\nsingle\npredication\nfrom\nthe\ndatabase,\nclearing\nup\nstorage\nspace.\n(This\nfunction\nis\na\ndual\nof\njoshua:tell,\nwhich\nadds\na\npredication\nto\nthe\ndatabase.)\ndatabasepredication\nA\npredication.\nMust\nbe\nthe\nactual\npredication\nobject\nthat\nis\nin\nthe\ndatabase,\nnot\na\ncopy\nof\nit.\njoshua:untell\nfirst\ncalls\njoshua:unjustify\nto\nmake\nthe\nfact\nno\nlonger\nbe\n\nMarch 1999\nJoshua Language Dictionary\nlieved\n(joshua:*unknown*),\nclears\nsome\ninternal\ncaches,\nthen\ncalls\njoshua:uninsert\nto\nremove\nthe\nfact\nfrom\nthe\ndatabase.\nThe\nsurgical\nproper\nties\nof\njoshua:untell\nin\nactually\nremoving\nthe\npredication\nas\nopposed\nto\non\nly\nremoving\nits\njustification\nhave\ntwo\neffects:\n1.\nSome\nstorage\nmay\nbecome\ngarbagecollectible.\nThis\ncan\nlower\nthe\nvir\ntualmemory\nrequirements\nof\nyour\nprogram.\nOf\ncourse,\nyou\npay\nfor\nit\nby\ndoing\nthe\nextra\nwork\nof\njoshua:uninsert.\n2.\nThe\npredication\nis\nno\nlonger\nin\nthe\ndatabase.\nThis\nmeans\nthat\nif\nyou\nrejoshua:tell\nit,\njoshua:tell\nreturns\na\nsecond\nvalue\nof\nT,\ndenoting\nit\nhas\nnever\nseen\nthis\npredication\nbefore;\nin\nconsequence,\njoshua:tell\nwill\nalso\nrun\nforward\nrules.\nagain.\n(If,\non\nthe\nother\nhand,\nyou\nmerely\njoshua:unjustify\nthe\npredication,\nthen\njoshua:tell\nit\nonce\nagain,\njoshua:tell\nreturns\na\nsecond\nvalue\nof\nnil,\ndenot\ning\nthe\npredication\nalready\nexisted\nin\nthe\ndatabase;\njoshua:tell\ndoes\nnot\nrun\nforward\nrules\nwhen\nan\nexisting\npredication\nis\nretold.)\nHowever,\nif\na\nTMS\nis\npresent,\nthe\nconsequences\nof\nrunning\nthose\nrules\nwill\nbe\nbrought\nback\nin.\nExamples:\n(definepredicate\nhaseyecolor\n(creature\ncolor))\n(tell\n[and\n[haseyecolor\ncat\ngreen]\n[haseyecolor\nrat\nblack]])\nShow\nJoshua\nDatabase\nTrue\nthings\n[HASEYECOLOR\nCAT\nGREEN]\n[HASEYECOLOR\nRAT\nBLACK]\nFalse\nthings\nNone\n;;\nuntell\na\npredication\nby\nclicking\nleft\non\nit\nin\nthe\ndatabase\ndisplay\n(untell\n[HASEYECOLOR\nCAT\nGREEN])\nNIL\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\nAll\nTrue\nthings\n[HASEYECOLOR\nRAT\nBLACK]\nFalse\nthings\nNone\n\nJoshua Language Dictionary\nMarch 1999\n;;\nuntell\nusing\nthe\npredication\nobject\nreturned\nas\nthe\nquery\nsupport\n(ask\n[haseyecolor\nrat\nblack]\n#'(lambda\n(backwardsupport)\n(untell\n(askdatabasepredication\nbackwardsupport)))\n:dobackwardrules\nnil)\nShow\nJoshua\nDatabase\n(matching\npattern\n[default\nAll])\nAll\nTrue\nthings\nNone\nFalse\nthings\nNone\nNote\nthat\nin\nthe\nlast\nexample\nabove\nyou\nprobably\nshould\nhave\nused\n(mapoverdatabasepredications\n[haseyecolor\nrat\nblack]\n#'untell)\nCompare\nthe\nfollowing\nexamples\nto\nsee\nthe\ndifference\nbetween\njoshua:untell\nand\njoshua:unjustify.\n(definepredicate\nisuncleof\n(uncle\nnieceornephew)\n(ltms:ltmspredicatemodel))\n(definepredicate\nisnephewof\n(nephew\nuncle)\n(ltms:ltmspredicatemodel))\n(defrule\nnoticeuncles\n(:forward)\nif\n[isuncleof\n?uncle\n?nephew]\nthen\n[and\n(format\nt\n\"~&I\nnote\nthat\n~A\nis\nthe\nuncle\nof\n~A.\"\n?uncle\n?nephew)\n[isnephewof\n?nephew\n?uncle]))\nFirst\nwe'll\njoshua:tell\nan\navuncular\nfact,\njoshua:untell\nit,\nand\nthen\nrejoshua:tell\nit.\nAfter\nthe\nfirst\njoshua:tell\nthe\nfact\nfires\nthe\nforward\nrule.\nAfter\nthe\nsecond\njoshua:tell\nthe\nforward\nrule\nfires\nagain,\nsince\njoshua:tell\nsees\nthe\npredication\nas\nT.\n(setq\ncanonicalizedunclefact\n(tell\n[isuncleof\nJudah\nManasseh]))\nI\nnote\nthat\nJUDAH\nis\nthe\nuncle\nof\nMANASSEH.\n[ISUNCLEOF\nJUDAH\nMANASSEH]\nT\nShow\nJoshua\nDatabase\nTrue\nthings\n[ISUNCLEOF\nJUDAH\nMANASSEH]\n[ISNEPHEWOF\nMANASSEH\nJUDAH]\nFalse\nthings\nNone\n(untell\ncanonicalizedunclefact)\n\nMarch 1999\nJoshua Language Dictionary\nShow\nJoshua\nDatabase\nTrue\nthings\nNone\nFalse\nthings\nNone\n(tell\n[isuncleof\nJudah\nManasseh])\n;\nthis\nfires\nthe\nrule\nagain!\nI\nnote\nthat\nJUDAH\nis\nthe\nuncle\nof\nMANASSEH.\n[ISUNCLEOF\nJUDAH\nMANASSEH]\nT\nNow\nwe'll\nuse\na\nvariation\nof\nthis\nexample.\nWe\nstart\nwith\nthe\nfact\nwe\njust\nentered\nin\nthe\ndatabase\nabove\nand\nwhich\nfired\nthe\nforward\nrule.\nNow\nwe\njoshua:unjustify\nthe\nfact\nand\nthen\njoshua:tell\nit\nagain.\nAfter\nthe\njoshua:unjustify,\nthe\nfact\nchanges\nits\ntruth\nvalue\nfrom\njoshua:*true*\nto\njoshua:*unknown*,\nbut\nremains\nin\nthe\ndatabase.\nWhen\nwe\njoshua:tell\nthe\nfact\nonce\nagain,\nits\ntruth\nvalue\nchanges\nfrom\njoshua:*unknown*\nto\njoshua:*true*,\nbut\njoshua:tell\nalready\nknows\nabout\nthe\nfact,\nand\nno\nforward\nrules\nfire.\nNote,\nhowever,\nthat\nthe\nTMS\nbrings\nthe\nisnephewof\ndeduction\nback\nin.\nWe\ncan\ntell\nit\ndoes\nso\nwithout\nreexecuting\nthe\nrule,\nsince\nthe\nsideeffect\n(the\nformat\nmessage)\nin\nthe\nrulebody\ndid\nnot\nrecur.\nShow\nJoshua\nDatabase\nTrue\nthings\n[ISUNCLEOF\nJUDAH\nMANASSEH]\n[ISNEPHEWOF\nMANASSEH\nJUDAH]\nFalse\nthings\nNone\n(unjustify\n[ISUNCLEOF\nJUDAH\nMANASSEH])\nNIL\nShow\nJoshua\nDatabase\nTrue\nthings\nNone\nFalse\nthings\nNone\n(tell\n[isuncleof\nJudah\nManasseh])\n;\ntell\nknows\nthis\nfact\nis\nold,\nand\nit\ndoesn't\nrerun\nthe\nforward\nrule\n[ISUNCLEOF\nJUDAH\nMANASSEH]\nNIL\n\nJoshua Language Dictionary\nMarch 1999\nShow\nJoshua\nDatabase\nTrue\nthings\n[ISUNCLEOF\nJUDAH\nMANASSEH]\n[ISNEPHEWOF\nMANASSEH\nJUDAH]\nFalse\nthings\nNone\nIn\nsum,\njoshua:unjustify\nand\njoshua:untell\ndo\nsimilar\nthings,\nbut\nwith\nsig\nnificant\ndifferences.\nIf\nyou\nwant\nto\nchange\nyour\nmind\nabout\nbelieving\na\nfact\nbut\nreserve\nyour\nright\nto\nreturn\nto\nthat\nfact\nlater,\nyou\nprobably\nwant\nto\nuse\njoshua:unjustify.\nIf,\non\nthe\nother\nhand:\n-\nYou\njust\ndid\na\nscratch\ncalculation\nand\nwant\nto\nflush\nit\nnow\nthat\nyou\nhave\nthe\nanswer,\nor\n-\nYou\nwant\nthe\nstorage\nback,\nor\n-\nYou\ndon't\nintend\nto\ncome\nback\nand\nraise\nthe\nissue\nof\nrerunning\nrules.\nyou\nprobably\nwant\nto\nuse\njoshua:untell.\nRelated\nFunctions:\njoshua:tell\njoshua:unjustify\n\"Clear\nJoshua\nDatabase\nCommand\"\nSee\nthe\nsection \"Removing\nPredications\nFrom\nthe\nDatabase\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\nSee\nthe\nsection \"The\nJoshua\nDatabase\nProtocol\",\npage\n8.\nSee\nthe\nsection \"Customizing\nthe\nData\nIndex\",\npage\n81.\njoshua:valueof\nslot\nvalue\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nto\nassert\nand\nquery\nthe\nvalue\nof\nattributes\nof\nJoshua\nobjects.\nValues\nof\nthe\nattributes\nof\nJoshua\nobjects\nare\nmaintained\nin\ndatastructures\ncalled\nslots.\nThe\nfirst\nargument\nto\nthis\npredication\nmust\nbe\neither\na\nslot\nor\na\npathname\ndescribing\na\nslot.See\nthe\nsection \"Using\nPaths\nto\nRefer\nto\nthe\nStructure\nof\nan\nObject\",\npage\n109.\nltms:valueof\nslot\nvalue\nJoshua\nPredicate\nThis\npredicate\nis\npart\nof\nthe\nJoshua\nobject\nfacility.\nIt\nis\nused\nin\nthe\nsame\nmanner\nas\njoshua:valueof,\nexcept\nit\nrefers\nto\nslots\nwhose\nvalues\nare\ntruth\nmaintained.\nSlots\nare\ndeclared\nas\ntruthmaintained\nat\nthe\ntime\nthe\nclass\nof\nobjects\nis\ndefined\nby\njoshua:defineobjecttype.\njoshua:variant\nobject1\nobject2\nFunction\n\nMarch 1999\nJoshua Language Dictionary\nTwo\npredications\nthat\ndiffer\nonly\nin\nthe\nnames\nof\nthe\nlogic\nvariables\nthey\ncontain\nare\nequivalent,\nand\nare\nsaid\nto\nbe\nvariants\nof\neach\nother.\nThe\nfunction\njoshua:variant\nchecks\nwhether\ntwo\nobjects\nare\nvariants\nof\neach\nother.\nIf\nthey\nare,\nit\nreturns\nt,\notherwise\nnil.\nWhen\njoshua:tell\nhas\nto\nadd\na\npredication\nto\nthe\ndatabase\nit\nuses\njoshua:variant\nto\ndetermine\nif\nthe\npredication\nis\nalready\nthere.\nobject1\nA\npredication\nobject2\nAnother\npredication\n\"Variant\"\nmeans\nthere\nis\na\nrenaming\nof\nvariables\nthat\nmakes\none\nvariable\nlook\nlike\nthe\nother.\nFor\nexample:\n(definepredicate\nfoo\n(object))\n(variant\n[foo\n?x]\n[foo\n?y])\nT\n;\nyou\ncan\nrename\n?x →\n?y.\n(variant\n[father\n?x\n?y]\n[father\n?a\n?b])\nT\njoshua:variant\nshould\nnot\nbe\nconfused\nwith\njoshua:unify.\nThe\nlatter\ntries\nto\nsee\nif\ntwo\nobjects\ncan\nbe\nmade\nto\nbe\nthe\nsame.\njoshua:variant\nchecks\nif\nthey\nare\nthe\nsame.\nIt\ndoesn't\never\nset\nlogic\nvariables,\nbut\nmerely\nlooks\nfor\na\nrenaming.\njoshua:variant\nis\nbased\non\nthe\nnotion\nthat\nit\nshould\nnot\nmatter\nwhat\nthe\nnames\nof\nlogic\nvariables\nare,\nso\nlong\nas\nthe\nstructures\nare\nthe\nsame.\nThis\nis\na\nmuch\nstronger\ncondition\nthan\njoshua:unify.\nThus,\nevery\npair\nthat\nsatisfies\njoshua:variant\nalso\nsatisfies\njoshua:unify,\nbut\nnot\nvice\nversa.\n(variant\n[foo\n?x]\n[foo\nbar])\nNIL\n;\nthese\nunify,\nbut\nare\nnot\nvariants\n;\nvariables\ncannot\nbe\nrenamed\n(variant\n[father\n?x\n?x]\n[father\n?a\n?b])\nNIL\njoshua:variant\nalso\nworks\non\nother\nstructures\nsuch\nas\nlists.\nExamples:\n(variant\n'a\n'a)\nT\n(variant\n'([foo\nbaz]\n[foo\nbar])\n'([foo\nbaz]\n[foo\nbar]))\nT\nSee\nthe\nsection \"Variables\nand\nScoping\nin\nJoshua\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\n\nJoshua Language Dictionary\nMarch 1999\njoshua:withatomicaction\n&body\nbody\nMacro\nSometimes\nit\nis\nuseful\nto\nbe\nable\nto\nsuspend\nforward\nrule\ntriggering\nuntil\nthe\nexecution\nof\na\nblock\nof\ncode\nhas\ncompleted.\nThe\ncode\nmight\ncontain\na\nnumber\nof\njoshua:tell's\nand\njoshua:untell's\nintermixed\nin\nsuch\na\nway\nthat\nthe\nchanges\nto\nthe\ndatabase\nare\nnot\ncoherent\nuntil\nthe\nentire\nblock\nof\ncode\nhas\nfinished\nexecuting.\nIf\nthe\ncode\nis\ncontained\ninside\na\njoshua:withatomicaction\nform,\nthen\nno\nforward\nrule\nwill\nbe\ntriggered\nuntil\nall\nof\nthe\ncode\nhas\nexecuted.\nFurther\nmore,\nthe\nrules\nthat\nwill\nbe\ntriggered\nare\nthose\nwhose\ntrigger\npatterns\nare\nsatisfied\nat\nthe\ntime\nthat\nthe\ncode\ncompletes.\nEven\nif\nthere\nwas\nan\ninterme\ndiate\npoint\nin\nthe\nexecution\nwhen\na\nrule's\ntrigger\npattern\nwas\nsatisfied\nthe\nrule\nwill\nonly\nrun\nif\nthere\nis\na\nvalid\nset\nof\nmatching\nassertions\nat\nthe\ntime\nbody\nhas\nfinished\nexecuting.\nFor\nexample:\n(defrule\nTestAtomicity\n(:forward)\nIf\n[and\n[P\n?x\n?y]\n[Q\n?y]]\nThen\n(Print\n'Foobar))\n(tell\n[P\n2])\n(withatomicaction\n(tell\n[Q\n2])\n(Untell\n[P\n2]))\nIn\nthis\ncase\nthe\nrule\nTestAtomicity\nwill\nnever\ntrigger,\neven\nthough\nin\nthe\nmiddle\nof\nexecuting\nthe\nwithatomicaction\nform\nit\nhad\na\nvalid\ntriggering\nset\nconsisting\nof\n[P\n2]\n[Q\n2]\nIn\nthis\nspecific\ncase\nthe\ncode\nis\nsimple\nenough\nthat\none\ncould\nsimply\nhave\nplaced\nthe\njoshua:untell\nbefore\nthe\njoshua:tell.\nHowever,\noften\nthe\nsitua\ntions\nwhich\nrequire\nthis\nform\nof\ncontrol\nover\nrule\ninvocation\nare\nalso\nthe\nones\nthat\nare\ncomplex\nenough\nthat\nreordering\nthe\ncode\nto\ngain\nthe\nright\nef\nfect\nis\ntoo\ncomplicated.\nWithAtomicAction\nprovides\na\nsimple\nmeans\nfor\ntreating\nthe\nentire\ndynamic\nextent\nof\na\nblock\nof\ncode\nas\na\nsingle\ntransaction\nto\nwhich\nthe\nrule\ntrigger\ning\nmechanims\nreact.\njoshua:withpredicationmakerdestructured\narglist\npredication\nMacro\nmaker\n&body\nbody\narglist\nAn\narglist\nsuitable\nfor\ndestructuringbind\npredicationmaker\nA\npredicationmaker\nsexpression\n\nMarch 1999\nJoshua Language Dictionary\nbody\nA\nbody\nof\ncode\nto\nexecute.\nThis\nMacro\nis\nanalogous\nto\njoshua:withstatementdestructured,\nbut\noper\nates\non\npredicationmakers,\nrather\nthan\npredications.\nIt\ndestructures\nthe\n\"statement\"\npart\nof\nthe\npredicationmaker\ninto\nthe\nvariables\nin\nthe\narglist\nand\nthen\nexecutes\nthe\nbody\nin\nthis\nenvironment.\nFor\nexample,\n(read)\n[Foobar\n?x]\nyields\n(JI::PREDICATIONMAKER\n'(FOOBAR\n(JI::LOGICVARIABLEMAKER\n|?X|)))\nand\n(withpredicationmakerdestructured\n(a\nb)\n(JI::PREDICATIONMAKER\n'(FOOBAR\n(JI::LOGICVARIABLEMAKER\n|?X|)))\n(print\na)\n(print\nb))\nwould\nprint:\nand\n(JI::LOGICVARIABLEMAKER\n|?X|)\njoshua:withstatementdestructured\narglist\npredication\n&body\nMacro\nbody\nProvides\naccess\nto\nthe\narglist\nof\npredication.\nWrap\nthis\nmacro\naround\na\nbody\nof\ncode\nwithin\nmethods\nin\nwhich\nyou\nwant\nto\nrefer\nto\nthe\narguments\nof\na\npredication\nthat\nare\nnot\nalready\nin\ninstance\nvariables.\n(This\nmacro\nworks\noutside\nof\nmethods,\ntoo.)\narglist\nThe\nargument\nlist\nof\nthe\nspecified\npredication.\nThis\ncan\nbe\nanything\nsuitable\nfor\ndestructuringbind.\npredication\nA\nJoshua\npredication.\nFor\nexample,\ninside\na\njoshua:say\nmethod\nfor\nthe\npredication\nfoo:\n(definepredicate\nenoughalready\n(numberof\nservings\nfood))\n(definepredicatemethod\n(say\nenoughalready)\n(&optional\n(stream\n*standardoutput*))\n(withstatementdestructured\n(howmany\nservings\nfood)\nself\n(format\nstream\n\"~%\nYou've\njust\nhad\n~A\n~A\nof\n~A.\nHadn't\nyou\nbetter\nquit?\"\nhowmany\nservings\nfood)))\n\nJoshua Language Dictionary\nMarch 1999\n(say\n[enoughalready\nplatters\npickledpigsfeet])\nYou've\njust\nhad\nPLATTERS\nof\nPICKLEDPIGSFEET.\nHadn't\nyou\nbetter\nquit?\nNIL\nRelated\nFunctions:\njoshua:definepredicate\njoshua:withunboundlogicvariables\nvariablelist\n&body\nbody\nMacro\nThis\nmacro\nprovides\na\nway\nto\ngenerate\na\nset\nof\nlogic\nvariables\nfor\nuse\nin\ncode.\nEach\n(Lisp)\nvariable\nwithin\nthe\nvariablelist\nis\nbound\nwithin\nthe\nscope\nof\nthe\nmacro\nto\na\ndistinct,\nnonunified\nlogic\nvariable\nwithin\nthe\nbody\nof\nthe\nmacro.\nIn\nessence\na\nLisp\nvariable\nin\nvariablelist\nhas\nas\nits\nLisp\nvalue\na\nlog\nic\nvariable,\nfor\nthe\nduration\nof\nbody.\nvariablelist\nIs\na\nlist\nof\nvariables\nbody\nIs\nany\nlisp\nform\nExample:\nThe\npredicate\npresidentialcandidate\nis\ndefined\nin\nthe\nfollowing\nexample.\nThe\nmacro\nis\nused\nto\ntemporarily\nset\nanybody\nto\nbe\na\nlogic\nvariable.\nThen\ntwo\npredications\nare\ncompared\nto\nsee\nif\nthey\nunify\nwith\none\nanother.\nUnifi\ncation\noccurs\nin\nthis\ncase\nso\nthe\nformat\nstatement\nprints\nthe\nvalue\nof\nany\nbody.\n(definepredicate\npresidentialcandidate\n(somone))\n(withunboundlogicvariables\n(anybody)\n(withunification\n(unify\n'[presidentialcandidate\n,anybody]\n[presidentialcandidate\nAbe])\n(format\nt\n\"~&The\nvalue\nof\nanybody\nis\n~s.\"\nanybody))))\nThe\nvalue\nof\nanybody\nis\nABE.\nNIL\njoshua:withunification\n&body\nbody\nMacro\nEstablishes\nthe\nscope\nwithin\nwhich\nsubstitutions\nspecified\nby\nthe\njoshua:unify\nfunction\ntake\neffect.\nThis\ntemporary\nunifying\nmechanism\nis\nuseful\nwithin\nLisp\ncode\nin\nthe\nbody\nof\nJoshua\nrules,\nsince\nit\nlets\nthe\npro\ngrammer\ntry\nout\na\nvariety\nof\ndifferent\nmatching\noptions.\nWhenever\nunification\nfails,\njoshua:unify\ngoes\nto\nthe\nend\nof\nthe\ndynamically\ninnermost\njoshua:withunification\nand\nundoes\nall\nthe\nbindings\nestablished\nso\nfar.\nThus,\njoshua:withunification\nestablishes\nboth\nof\nthe\nfollowing:\n\nMarch 1999\nJoshua Language Dictionary\n-\nThe\nscope\nof\nunifications\ndone\nin\nits\nbody\n-\nA\nplace\nto\nbe\nthrown\nto\nif\na\nunification\nin\nits\nbody\nfails\nExamples:\n(definepredicate\ncandidateword\n(aword))\n(definepredicate\niscomputerjargon\n(someword))\n(defvar\n*computerjargon*\n'(foo\nbar\nbaz\nquux))\n(defrule\njargonfinder\n(:backward)\nIF\n(typecase\n?candidateword\n(unboundlogicvariable\n(loop\nfor\nword\nin\n*computerjargon*\ndoing\n(withunification\n(unify\n?candidateword\nword)\n(succeed))))\n(otherwise\n(member\n?candidateword\n*computerjargon*)))\nTHEN\n[iscomputerjargon\n?candidateword])\n(ask\n[iscomputerjargon\n?x]\n#'printquery)\n[ISCOMPUTERJARGON\nFOO]\n[ISCOMPUTERJARGON\nBAR]\n[ISCOMPUTERJARGON\nBAZ]\n[ISCOMPUTERJARGON\nQUUX]\nRelated\nFunction:\njoshua:unify\nSee\nthe\nsection \"Pattern\nMatching\nin\nJoshua:\nUnification\"\nin\nUser's\nGuide\nto\nBasic\nJoshua.\njoshua:writebackwardrulematcher\nruletrigger\nvariablesin\nGeneric\nFunction\ntrigger\nenvironment\nnameofpredtomatch\nruletrigger\nThe\nsource\nrepresentation\nof\na\nbackward\nrule\ntrigger.\nSee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredica\ntions\nand\nLogicvariables\".\nvariablesintrigger\nThe\nnames\nof\nthe\nlogic\nvariables\nwhich\noccur\nin\nthis\npattern.\nenvironment\nThe\ncompiler\nenvironment.\nThis\nis\nneeded\nin\ncase\nthis\ngeneric\nfunction\nneeds\nto\nuse\na\ncodewalker\nor\nother\nwise\nexpand\nmacros\nin\na\nspecific\ncompiler\nenvironment.\nnameofpredtomatch\nThe\nname\nof\nthe\nvariable\nby\nwhich\nthe\nmatcher\ncode\nshould\nrefer\nto\nthe\npredication\nit\nis\nmatching.\n\nJoshua Language Dictionary\nMarch 1999\nReturn\nValues:\nform\nA\ncode\nfragment\nto\nperform\nthe\nmatch.\nbindings\nA\nset\nof\nbindings\nthat\nthe\nrule\ncompiler\nshould\nwrap\naround\nthe\nmatching\ncode.\nuseddatastackp\nWhether\nthis\ncode\nuses\nthe\ndata\nstack.\nThis\nprotocol\nfunction\nis\nused\nto\ngenerate\nthe\nmatcher\ncode\ncorresponding\nto\nthe\ntrigger\npattern\nof\na\nbackward\nrule.\nFor\nexample\nin\nthe\nrule:\n(defrule\nfoobar\n(:backward)\nIf\n[bar\n?y\n?z]\nThen\n[foo\n?x\n?y])\nThis\nmethod\nwill\nbe\ncalled,\nwith\nthe\nfollowing\narguments:\n(JI::PREDICATIONMAKER\n'(FOO\n(JI::LOGICVARIABLEMAKER\n|?X|)\n(JI::LOGICVARIABLEMAKER\n|?Y|)))\n(|?X|\n|?Z|\n|?Y|)\n<the\nenvironment>\nJI::.GOAL.\nNotice\nthat\nthe\nfirst\nargument\nis\nnot\na\npredication\n[foo\n?x\n?y]\nbut\nits\nsource\nrepresentation,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\nThe\nbackward\nrule\ncompiler\nturns\nthe\ntrigger\npattern\nof\nthe\nrule\n(i.e.\nits\nThenPart)\ninto\na\ncode\nfragment\nwhich\ntests\nwhether\nthe\nquery\nbeing\nposed\nunifies\nwith\nthe\nrule's\ntrigger\npattern.\nThe\nIfpart\nof\nthe\nrule\nis\ntrans\nformed\ninto\na\nnested\nseries\nof\njoshua:ask's\nwhich\nattempt\nto\nfind\nmatches\nto\nthe\npatterns\nin\nthe\nIfpart\nthat\nare\nconsistent\nwith\nthe\nbindings\nproduced\nby\nmatching\nthe\ntrigger\n(and\nwhich\nare\nmutually\nconsistent).\nThe\ntransfor\nmation\nof\nthe\nIfpart\nis\ncontrolled\nby\nthe\njoshua:expandbackwardrule\naction\nprotocol\nfunction.\nThis\nprotocol\nfunction\ncontrols\nthe\ngeneration\nof\nthe\nmatching\ncode\ncorresponding\nto\nthe\ntrigger.\nThe\nrule\ncompiler\ncombines\nthe\nresults\nof\nthese\ntwo\nprotocol\nfunctions\ninto\na\nsingle\nfunction\nwhich\nperforms\nthe\ntrigger\nunification\nand\nthe\njoshua:ask's.\nPrimarily\nit\nadds\ncode\nto\ncreate\nbindings\nfor\nthe\nlogic\nvari\nables\nand\nto\nbuild\nthe\nqueries\ncorresponding\nto\neach\npattern\nin\nthe\nIfpart.\nThe\nrule\ncompiler\nattempts\nto\nmake\nthis\nfunction\nas\nefficient\nas\npossible\nby\nusing\nthe\nsystem\nstacks\nto\nhold\nmost\nof\nthe\ndata.\nThe\njoshua:writebackwardrulematcher\nfunction\nreturns\nthree\nvalues:\nThe\nfirst\nis\na\ncode\nfragment\n(which\nmust\nbe\na\nsingle\nform)\nwhich\nperforms\nthe\nunifications\nnecessary.\nFor\nexample,\nthe\ndefault\nmethod\nfor\nthis\nprotocol\nfunction\nreturns\nthe\nfol\nlowing\ncode\nfragment:\n\nMarch 1999\nJoshua Language Dictionary\n(JI::UNIFYPREDICATION\nJI::.GOAL.\nPRED1382)\nWhich\nchecks\nthat\nthe\nquery\n(i.e.\nJI::.GOAL.)\nmatches\nthe\ntrigger\npattern\nPRED1382.\nYou\nmight\nwonder\nwhat\nPRED1382\nis;\nthat\ninformation\nis\ncon\ntained\nin\nthe\nsecond\nreturn\nvalue:\nHowever,\nthe\nsecond\nvalue\nspecifies\na\nset\nof\nbindings\nthat\nthe\nrule\ncompiler\nshould\nwrap\naround\nthe\ngenerate\ncode:\n((FORM1383\n'(FOO\n,|?X|\n,|?Y|))\n(PRED1382\n(makepredication\nFORM1383\n:STACK)))\nWhich\nbuilds\nPRED1382\non\nthe\nstack.\nThe\nthird\nreturn\nvalue\nis\njoshua::t\nindicating\nthat\nthis\ncode\nwill\nneed\nto\nuse\nthe\ndata\nstack.\nIn\nmost\ncases,\nyou\nwill\nnot\nuse\nthis\nmethod\nif\nit\nforces\nyou\nto\nresort\nto\nsuch\narcane\ndevices.\nFor\nthe\nabove\npattern,\na\ndifferent\nset\nof\nreturn\nvalues\ncould\nhave\nbeen:\n(let\n((statement\n(predicationstatement\n.goal.)))\n(unify\n(pop\nstatement)\n'foo)\n(unify\n(pop\nstatement)\n|?X|)\n(unify\n(pop\nstatement)\n|?Y|))\nNIL\nNIL\nWhich\ntakes\nadvantage\nof\nthe\nfact\nthat\nFOO\npredications\nhave\na\nfixed\nnum\nber\nof\narguments.\nThus\nif\nthe\nquery's\npredicate\nis\nFOO\n(the\nfirst\nthing\nchecked),\nthere\nwill\nbe\nexactly\ntwo\nother\narguments\nand\nwe\nneed\nnot\ncheck\nfor\nthe\ngoal\nbeing\neither\ntoo\nlong\nor\ntoo\nshort.\nNotice\nthat\nin\nthe\ncode\ngenerated\nthe\nlogic\nvariables\nin\nthe\npattern\nare\nre\nferred\nto\nby\ntheir\nname\n(i.e.\nas\nLISP\nvariables).\njoshua:writeforwardrulefullmatcher\nruletrigger\npredicate\nGeneric\nFunction\nvariablename\nenvironment\nruletrigger\nThe\nsource\nrepresentation\nof\na\nforward\nrule\ntrigger.\nSee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\npredicatevariablename\nThe\nname\nof\nthe\nvariable\nby\nwhich\nthe\nmatcher\ncode\nshould\nrefer\nto\nthe\npredication\nit\nis\nmatching.\nenvironment\nThe\ncompiler\nenvironment.\nThis\nis\nneeded\nin\ncase\nthis\ngeneric\nfunction\nneeds\nto\nuse\na\ncodewalker\nor\nother\nwise\nexpand\nmacros\nin\na\nspecific\ncompiler\nenvironment.\n\nJoshua Language Dictionary\nMarch 1999\nThis\nprotocol\nfunction\nis\nused\nto\ngenerate\nthe\nunification\ncode\ncorrespond\ning\nto\na\nspecific\nforwardrule\ntrigger\npattern.\nFor\nexample\nin\nthe\nrule:\n(defrule\nfoobar\n(:forward)\nIf\n[and\n[foo\n?x\n?y]\n[bar\n?y\n?z]]\nThen\n<body>)\nThis\nmethod\nwill\nbe\ncalled\ntwice,\nwith\nthe\nfollowing\narguments\nfor\nthe\nfirst\ncall:\n(JI::PREDICATIONMAKER\n'(FOO\n(JI::LOGICVARIABLEMAKER\n|?X|)\n(JI::LOGICVARIABLEMAKER\n|?Y|)))\nJI::PREDICATIONTOMATCH\n<the\nenvironment>\nNotice\nthat\nthe\nfirst\nargument\nis\nnot\na\npredication\n[foo\n?x\n?y]\nbut\nits\nsource\nrepresentation,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\nThe\nrule\ncompiler\nproduces\ntwo\nmatchers\ncorresponding\nto\neach\ntrigger\npattern:\nThe\nfirst\nperforms\nunification\nand\nis\ninvoked\nwhen\nthe\ndata\nbeing\nasserted\ncontains\nlogic\nvariables;\nthe\nsecond\nis\ninvoked\nwhen\nthe\ndata\ncon\ntains\nno\nlogic\nvariables.\nThis\nsecond\nmatcher\ncan\nbe\nconsiderably\nmore\neffi\ncient\nthan\nthe\nfirst.\nMost\npredications\nasserted\nin\nthe\nJoshua\ndata\nbase\ndo\nnot\ncontain\nlogicvariables,\nso\nit\nis\nuseful\nto\ncheck\nfor\nthis\ncase\nand\nuse\nthe\nmore\nefficient\nmatcher\nwhen\npossible.\nThe\nreturn\nvalue\nof\nthis\ngeneric\nfunction\nis\na\ncode\nfragment\n(in\nparticular\na\nsingle\nform)\nwhich\nperforms\nthe\nunifications\nnecessary\nto\ncheck\nthat\nthe\nrule's\ntrigger\npattern\nmatches\nthe\ndata.\nThe\ndefault\nmethod\nfor\nthis\nproto\ncol\nfunction\nreturns\nthe\nfollowing\nvalue:\n(JI::UNIFYPREDICATION\n(JI::PREDICATIONMAKER\n'(FOO\n(JI::LOGICVARIABLEMAKER\n|?X|)\n(JI::LOGICVARIABLEMAKER\n|?Y|)))\nJI::PREDICATIONTOMATCH)\nThe\nrule\ncompiler\nassembles\nthis\ncode\ninto\nthe\ncomplete\nmatcher\nfunction\nby\nadding\ncode\nthat\ncorrectly\ninterfaces\nthis\nunification\ncode\nwith\nthe\nrest\nof\nthe\nrete\nnetwork\ncode.\n\nMarch 1999\nJoshua Language Dictionary\njoshua:writeforwardrulesemimatcher\nruletrigger\npredicate\nGeneric\nFunction\nvariablename\nenvironment\nruletrigger\nThe\nsource\nrepresentation\nof\na\nforward\nrule\ntrigger.\nSee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\npredicatevariablename\nThe\nname\nof\nthe\nvariable\nby\nwhich\nthe\nmatcher\ncode\nshould\nrefer\nto\nthe\npredication\nit\nis\nmatching.\nenvironment\nThe\ncompiler\nenvironment.\nThis\nis\nneeded\nin\ncase\nthis\ngeneric\nfunction\nneeds\nto\nuse\na\ncodewalker\nor\nother\nwise\nexpand\nmacros\nin\na\nspecific\ncompiler\nenvironment.\nThis\nprotocol\nfunction\nis\nused\nto\ngenerate\nthe\nmatcher\ncode\ncorresponding\nto\na\nspecific\nforwardrule\ntrigger\npattern.\nFor\nexample\nin\nthe\nrule:\n(defrule\nfoobar\n(:forward)\nIf\n[and\n[foo\n?x\n?y]\n[bar\n?y\n?z]]\nThen\n<body>)\nThis\nmethod\nwill\nbe\ncalled\ntwice,\nwith\nthe\nfollowing\narguments\nfor\nthe\nfirst\ncall:\n(JI::PREDICATIONMAKER\n'(FOO\n(JI::LOGICVARIABLEMAKER\n|?X|)\n(JI::LOGICVARIABLEMAKER\n|?Y|)))\nJI::PREDICATIONTOMATCH\n<the\nenvironment>\nNotice\nthat\nthe\nfirst\nargument\nis\nnot\na\npredication\n[foo\n?x\n?y]\nbut\nits\nsource\nrepresentation,\nsee\nthe\nsection \"The\nSource\nRepresentaton\nof\nPredications\nand\nLogicvariables\".\nThe\nrule\ncompiler\nproduces\ntwo\nmatchers\ncorresponding\nto\neach\ntrigger\npattern:\nThe\nfirst\nperforms\nunification\nand\nis\ninvoked\nwhen\nthe\ndata\nbeing\nasserted\ncontains\nlogic\nvariables;\nthe\nsecond\nis\ninvoked\nwhen\nthe\ndata\ncon\ntains\nno\nlogic\nvariables.\nThis\nsecond\nmatcher\ncan\nbe\nconsiderably\nmore\neffi\ncient\nthan\nthe\nfirst.\nMost\npredications\nasserted\nin\nthe\nJoshua\ndata\nbase\ndo\nnot\ncontain\nlogicvariables,\nso\nit\nis\nuseful\nto\ncheck\nfor\nthis\ncase\nand\nuse\nthe\nmore\nefficient\nmatcher\nwhen\npossible.\nThis\nprotocol\nfunction\nis\nused\nto\ngenerate\nthe\nmore\nefficient\nmatcher.\nThe\nreturn\nvalue\nof\nthis\ngeneric\nfunction\nis\na\ncode\nfragment\n(in\nparticular\na\nsingle\nform)\nwhich\nperforms\nthe\nsemimatch.\nThis\ngenerated\ncode\nfragment\nmust\ncheck\nthat\nthe\nrule's\ntrigger\npattern\nmatches\nthe\ndata.\nIt\nalso\nis\nresponsible\nfor\nproducing\nvariable\nbindings.\nSe\nmi\nmatchers\ndo\nnot\nneed\nto\nuse\nlogic\nvariables\nand\nunification\n(this\nis\none\nreason\nthey\ncan\nbe\nmore\nefficient).\nInstead,\nthe\nrule\nmatcher\ncreates\na\nLisp\n\nJoshua Language Dictionary\nMarch 1999\nvariable\ncorresonding\nto\neach\nlogicvariable\nin\nthe\npattern.\nThe\nsemi\nmatcher\nis\nresponsible\nfor\nassigning\na\nvalue\nto\neach\nof\nthese\nvariables\nand\nfor\nchecking\nthat\nthe\nassignments\nare\nconsistent.\nFor\nexample,\nthe\ndefault\nmethod\nfor\nthis\nprotocol\nfunction\nreturns\nthe\nfol\nlowing\ncode\nfragment:\n(LET\n((THING1306\n(CDR\n(PREDICATIONSTATEMENT\nJI::PREDICATIONTOMATCH))))\n(AND\n(CONSP\nTHING1306)\n(PROGN\n(SETQ\n|?X|\n(CAR\nTHING1306))\nT)\n(LET\n((THING1307\n(CDR\nTHING1306)))\n(AND\n(CONSP\nTHING1307)\n(PROGN\n(SETQ\n|?Y|\n(CAR\nTHING1307))\nT)\n(NULL\n(CDR\nTHING1307))))))\nNotice\nthat\nthis\ncode\nfragment\nreturns\njoshua::t\nif\nthe\nmactch\nsucceeds\nand\njoshua::nil\notherwise.\nAlso\nnotice\nthat\nthis\ncode\nfragment\nnever\nchecked\nwhether\nthe\npredicate\nof\nthe\npredication\nbeing\nmatched\nis\nthe\nsame\nas\nthe\npredicate\nof\nthe\nrule\ntrigger.\nThis\nis\nbecause\nthe\ndefault\ndata\nindexer\nhas\nalready\nguaranteed\nthis\nand\ntherefore\nthe\nmatch\ngenerator\nknows\nthat\nit\nneed\nnot\nemit\ncode\nto\nperform\nthis\ncheck;\nsee\nthe\ngeneric\nfunction\njoshua:positionsforwardrule\nmatchercanskip,\npage\n214.\nThe\nrule\ncompiler\nassembles\nthis\ncode\ninto\na\ncomplete\nmatcher\nfunction\nby\nadding\ncode\nthat\ncorrectly\ninterfaces\nto\nthe\nrest\nof\nthe\nrete\nnetwork\ncode.\nIt\nis\npossible\nto\nwrite\nprotocol\nmethods\nfor\nthis\nfunction\nwhich\nextend\nthe\nmatcher's\nsyntax\n(e.g.\nby\nperforming\ninline\nprocedural\nchecks\nas\npart\nof\nthe\nmatch)\nand\nlead\nto\nincreased\nefficiency.\nA\ngood\nstarting\nplace\nfor\nthis\nis\nthe\ndefault\nmethod\nprovided\nwith\nJoshua.\n\nMarch 1999\nIndex\nIndex\nAdvanced Features of Joshua Rules, 24\nA More Advanced Version of Mixed-chaining in\njoshua:expand-forward-rule-trigger\nBasic Capabilities of the Joshua Object Facility,\nChoosing Joshua Metering Types, 77\nClause Justification Structures, 65\nClear Joshua Database Command, 145\nCompiling the Action Part of a Forward Rule, 27\nconflict-resolution, 35, 254\nContinuation Argument, 125\nControlling Choices in the LTMS, 67\nControlling Data and Rule Indexing, 79\nControlling Question Invocation, 47\nControlling Rule Invocation, 35\nCustomizing the Data Index, 81\nCustomizing the Data Index Without Storing\nPredications, 85\nCustomizing the Expansion of a Backward Rule, 99\nCustomizing the Expansion of a Forward Rule, 93\nCustomizing the Joshua Protocol, 5\nCustomizing the Matchers Generated by the Rule\nCompiler, 102\nCustomizing the Rule Compiler, 92\nCustomizing the Rule Index, 88\nDictionary Entries, 121\nDifference between joshua:untell and\njoshua:unjustify, 248\nDisable Joshua Tracing Command, 167\nDisplaying the database contents, 228\nEnable Joshua Tracing Command, 169\nEqualities Between Slot Values, 116\nExamples of Using joshua:ask, 128\nExplain Predication Command, 181\nExtracting Parts of the Continuation with Accessor\nFunctions, 126\nFinding Backward Question Triggers, 50\nFinding Backward Rule Triggers, 43\nFinding Forward Rule Triggers, 41\nForward Rule Triggers: the Rete Network, 27\n\nIndex\nMarch 1999\nGraph Forward Rule Triggers Command, 184\nInvoking Methods Associated with the Object\njoshua:ask-data-and-questions-only-mixin\nInitial Values of Slots, 113\nIntroduction to the Joshua Object Facility, 105\nAssociated with a Slot, 115\nji:model-cant-handle-query flavor, 210\nji:model-only-handles-positive-queries flavor,\njoshua:*contradictory* variable, 145\njoshua:*false* variable, 183\njoshua:*true* variable, 240\njoshua:*unknown* variable, 248\njoshua:act-on-truth-value-change generic\nfunction, 121\njoshua:add-action generic function, 121\njoshua:add-backward-question-trigger generic\nfunction, 122\njoshua:add-backward-rule-trigger generic\nfunction, 122\njoshua:add-forward-rule-trigger generic function,\njoshua:ask function, 123\njoshua:ask-data generic function, 133\njoshua:ask-data method of joshua:default-ask-\nmodel, 136\nflavor, 134\njoshua:ask-data-and-rules-only-mixin flavor, 134\njoshua:ask-database-predication function, 135\njoshua:ask-data-only-mixin flavor, 136\njoshua:ask-derivation function, 137\nJoshua Ask Metering, 75\njoshua:ask-query function, 139\njoshua:ask-query-truth-value function, 139\njoshua:ask-questions generic function, 140\njoshua:ask-questions-only-mixin flavor, 141\njoshua:ask-rules generic function, 142\njoshua:ask-rules-and-questions-only-mixin\nflavor, 143\njoshua:ask-rules-only-mixin flavor, 143\njoshua:basic-tms-mixin flavor, 144\njoshua:clear function, 144\njoshua:copy-object-if-necessary function, 146\njoshua:database-predication presentation type,\njoshua:default-ask-model flavor, 148\njoshua:default-predicate-model flavor, 149\n\nMarch 1999\nIndex\njoshua:default-protocol-implementation-model\nflavor, 149\njoshua:default-rule-compilation-model flavor,\njoshua:default-tell-model flavor, 149\njoshua:define-object-type macro, 149\njoshua:define-predicate macro, 151\njoshua:define-predicate-method macro, 152\njoshua:define-predicate-model macro, 153\njoshua:defquestion macro, 153\njoshua:defrule function, 158\njoshua:delete-backward-question-trigger\ngeneric function, 164\njoshua:delete-backward-rule-trigger generic\nfunction, 165\njoshua:delete-forward-rule-trigger generic\nfunction, 165\njoshua:different-objects function, 166\njoshua:discrimination-net-clear function, 167\njoshua:discrimination-net-data-mixin flavor, 167\njoshua:discrimination-net-fetch function, 167\njoshua:discrimination-net-insert function, 168\njoshua:discrimination-net-uninsert function, 169\njoshua:equated joshua predicate, 170\njoshua:equated-mixin flavor, 171\njoshua:expand-backward-rule-action joshua\nprotocol method, 178\njoshua:expand-forward-rule-trigger generic\nfunction, 171\njoshua:explain function, 181\njoshua:fetch function, 184\njoshua:graph-discrimination-net function, 184\njoshua:graph-query-results function, 185\njoshua:graph-tms-support function, 187\njoshua:insert function, 189\njoshua:justify function, 190\njoshua:known joshua predicate, 191\nJoshua Language Dictionary, 121\njoshua:locate-backward-question-trigger\ngeneric function, 194\njoshua:locate-backward-rule-trigger generic\nfunction, 196\njoshua:locate-forward-rule-trigger generic\nfunction, 199\njoshua:logic-variable-maker-name function, 203\njoshua:logic-variable-maker-p function, 203\njoshua:logic-variable-name function, 202\njoshua:make-object function, 204\n\nIndex\nMarch 1999\njoshua:make-predication function, 204\njoshua:map-over-backward-question-triggers\ngeneric function, 207\njoshua:map-over-backward-rule-triggers generic\nfunction, 208\njoshua:map-over-database-predications macro,\njoshua:map-over-forward-rule-triggers generic\nfunction, 208\njoshua:map-over-object-hierarchy function, 209\njoshua:map-over-slots-in-object-hierarchy\nfunction, 209\njoshua:map-over-slots-of-object function, 209\nJoshua Merge Metering, 76\nJoshua Metering, 73\nJoshua Metering Types, 73\njoshua:negate-truth-value function, 212\njoshua:nontrivial-tms-p generic function, 213\njoshua:notice-truth-value-change function, 213\njoshua:no-variables-in-data-mixin flavor, 212\njoshua:object-type-of joshua predicate, 213\njoshua:part-of joshua predicate, 214\njoshua:part-of-mixin flavor, 214\njoshua:positions-forward-rule-matcher-can-skip\ngeneric function, 214\nJoshua's Default Database: the Discrimination Net,\njoshua:predication flavor, 216\njoshua:predication presentation type, 216\njoshua:predication-maker-p function, 216\njoshua:predication-maker-predicate function,\njoshua:predication-maker-statement function,\njoshua:predicationp function, 218\njoshua:predication-predicate function, 219\njoshua:predication-statement function, 219\njoshua:predication-truth-value function, 219\njoshua:prefetch-forward-rule-matches function,\njoshua:print-query function, 220\njoshua:print-query-results function, 221\njoshua:provable joshua predicate, 223\njoshua:remove-action generic function, 225\njoshua:say function, 226\njoshua:say method of joshua:predication, 227\njoshua:say-query function, 227\n\nMarch 1999\nIndex\njoshua:slot-current-predication generic function,\njoshua:tms-contradiction-contradictory-\njoshua:tms-contradiction-hard-contradiction-\njoshua:with-predication-maker-destructured\njoshua:slot-current-value generic function, 231\njoshua:slot-my-object generic function, 231\njoshua:slot-value-mixin flavor, 232\njoshua:succeed function, 232\njoshua:support function, 233\njoshua:support method of joshua:basic-tms-\nmixin, 234\njoshua:support method of joshua:default-\nprotocol-implementation-model,\njoshua:tell function, 234\nJoshua Tell Metering, 73\njoshua:tms-bits generic function, 236\njoshua:tms-contradiction flavor, 236\npredication generic function, 237\nflavor generic function, 237\njoshua:tms-contradiction-justification generic\nfunction, 238\njoshua:tms-contradiction-non-premises generic\nfunction, 238\njoshua:tms-contradiction-premises generic\nfunction, 238\njoshua:tms-contradiction-support generic\nfunction, 239\njoshua:tms-hard-contradiction flavor, 239\njoshua:truth-value presentation type, 240\njoshua:type-of-mixin flavor, 240\njoshua:undefine-predicate macro, 240\njoshua:undefine-predicate-method function, 241\njoshua:undefine-predicate-model function, 242\njoshua:undefquestion function, 242\njoshua:undefrule function, 242\njoshua:unify function, 243\njoshua:uninsert generic function, 247\njoshua:unjustify generic function, 247\njoshua:unjustify method of ltms:ltms-mixin, 248\njoshua:untell generic function, 248\njoshua:value-of joshua predicate, 252\njoshua:variant function, 252\njoshua:with-atomic-action, 35\njoshua:with-atomic-action macro, 254\nmacro, 254\njoshua:with-statement-destructured macro, 255\n\nIndex\nMarch 1999\njoshua:with-unbound-logic-variables macro, 256\nPart-Whole Hierarchy in the Joshua Object Facility,\nSignalling a Condition When joshua:ask-data or\nSignalling Contradictions and Managing\nStoring and Retrieving Knowledge in Joshua: the\nStreamlining Typical Continuation Requests with\nThe Contract of joshua:add-backward-question-\njoshua:with-unification macro, 256\njoshua:write-backward-rule-matcher generic\nfunction, 257\njoshua:write-forward-rule-full-matcher generic\nfunction, 259\njoshua:write-forward-rule-semi-matcher generic\nfunction, 261\nltms:equated joshua predicate, 171\nltms:ltms-mixin flavor, 203\nltms:ltms-predicate-model flavor, 204\nltms:object-type-of joshua predicate, 213\nltms:part-of joshua predicate, 214\nltms:value-of joshua predicate, 252\nNogoods in the LTMS, 66\nNotifying the LTMS of Contradictions, 70\noccur-check done by unifier, 243\nOrdering Rule Execution, 35\nOrganization of the Default Discrimination Net, 17\nOther Capabilities of Slots, 113\nOther Options in Define-Object-Type, 117\nOverview of Advanced Joshua Concepts, 1\nPredications as Instances, 7\nReset Joshua Tracing Command, 225\nSet Valued and Single Valued Slots, 113\nShow Joshua Database Command, 228\nShow Joshua Predicates Command, 228\nShow Joshua Rules Command, 229\nShow Joshua Tracing Command, 230\nShow Rule Definition Command, 231\njoshua:fetch Can't Handle a Query,\nBacktracking, 57\nSignalling Truth Value Changes, 63\nSlots and Attached Actions, 114\nSlots and Truth Maintenance, 114\nVirtual Database, 7\nConvenience Functions, 127\nThe Backward Rule Compiler, 33\nThe Contract of a Joshua TMS Justification, 55\ntrigger, 48\n\nMarch 1999\nIndex\nThe Contract of joshua:delete-backward-\nquestion-trigger, 48\nThe Contract of joshua:locate-backward-\nquestion-trigger, 49\nThe Contract of joshua:map-over-backward-\nquestion-triggers, 50\nThe Contract of the Generic Function\njoshua:clear, 14\nThe Contract of the Generic Function\njoshua:expand-backward-rule-\naction, 100, 179\nThe Contract of the Generic Function\njoshua:expand-forward-rule-trigger\nThe Contract of the Generic Function\njoshua:insert, 9\nThe Contract of the Generic Function\njoshua:uninsert, 14\nThe Contract of the Generic Functions joshua:ask-\ndata and joshua:fetch, 10\nThe Contract of the Joshua TMS Protocol\nFunctions, 54\nThe Contract of the Trigger Adding Functions, 38\nThe Contract of the Trigger Deleting Functions, 38\nThe Contract of the Trigger Locating Functions, 39\nThe Contract of the Trigger Mapping Functions, 41\nThe Default Implementation of the Protocol, 2\nThe Forward Rule Compiler, 27\nThe Funtions of a Truth Maintenance System, 53\nThe Joshua Database Protocol, 8\nThe Joshua LTMS, 65\nThe Joshua Object Facility, 105\nThe Joshua Protocol of Inference, 2\nThe Joshua Question Facilities, 47\nThe Joshua Question Indexing Protocol, 48\nThe Joshua Rule Compiler, 26\nThe Joshua Rule Facilities\n, 23\nThe Joshua Rule Indexing Protocol, 36\nThe Predicates Used in the Joshua Object Facility,\nThe Truth Maintenance Protocol, 54\nTMS Utility Routines, 56\nTruth Maintenance Facilities, 53\nType Hierarchy in the Joshua Object Facility, 110\nTypes of Truth Maintenance Systems, 54\nUsing :ignore in joshua:expand-forward-rule-\ntrigger, 98\n\nIndex\nMarch 1999\nUsing joshua:expand-forward-rule-trigger, 95\nUsing Paths to Refer to the Structure of an Object,\nUsing TMS Conditions: a Balance Beam Example,\nweeding out self-referential behavior, 166\nWhat is a Virtual Database?, 7\nWhat the Backward Rule-compiler Does to the\nActions of a Rule, 99, 178"
    },
    {
      "category": "Resource",
      "title": "joshua_user_guid.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/dedf51665923e3663244c989007134fd_joshua_user_guid.pdf",
      "content": "User's Guide to Basic Joshua\n\niii\nApril 2003\nTable of Contents\nTable of Contents\n\n!#\"%$&$(')+*,!.-'\"/102435\"/4\n\n!\n\")$8$9'%:*,!.-'\";=<>!@?A\"%BCD3E$F4$(GH!D3\n\n76E\nIJ'%LKM-NDOPQ-MR \")GTS5U$!UV,-GT?W*,!.-'\"/\n\n76E76\nX\nIJ'%:*,!.-'\"/1Y Z9DO3)?:[\\3\"/]\n^\n_\n`bac ;dfeNgDahji8kmln#k)2g\no\npD$9$9G3Eq\")rq$9'%:*,!.-'\"/tsu!D3$#vh$w3%StxyGc]TWz$9$9O\nG{5\"%$.-\n|\n}\n~a\ncai58ln#k)2g\nX\n\np!DBCLV5-GH?W*,!.-'\"/1uO!D$!?!D]zx\"%3%?#$9GT!D3;-\nX76\n\n0yG-$w!ZV,-GT?W*,!.-'\"/tp5Bw!D]-\n\nlyn\nk)2gahEchgc n\n\nN\nuOSGH?4$(GH!D3;-M3%S\\uO@S.GH?$.-\n\nuOSGH?4$(GH!D3;-\nuIuO\"%$9'q]\"/.-\n243%St$9'%L<$D5-N\n76E\nNo\n3$DO\nG3Ej43%St<zG-r5]T\n5Gc3uOSGH?$9GH!D3;-wG3$9'%L<$D5-N\n76E76\n\nY DBC!#hG3EuOS.GT?D$9GT!D3-xyO!DB$9')U<$D5-N\n76EX\n6,\nIJO\"%$9'q]\"/.-\n76E7\n6,X\n\"/DO5Gc3$(')U<4$F@5-N\nX\n6,\nuOSGH?4$(GH!D3;-M3%S\\02!DGH?w4O\nGTD]H-\nXh\nuOSGH?4$(GH!D3;-M3%S\\02!DGH?]su!D3E3%?\n$9G,.-\no\nXho\nxu!O\nB+$9$(Gc3uOSGH?4$(GH!D3;-y$9'%1p [q$9')!@S\n\nX\nIuO.?\nGc3uO@S.GH?$9GH!3-\nQ\nXh\n[¡G-N?D]c]T43%!#\"-wuO@S.GH?$9GH!3xu?#G]cG$9GH.-\n_\n\nlyn\nk)2g¢>y£ahnUg\n/Fa.a ;.a\no\nh6\n<DZGc3Gc3¤*,!.-'\";1Yu\"%]H.-\no#\n,X\n¥w!D¦§xu!DO\n¦OStYJ\"%]H.-8 j!DO(c)\no#76\n,\n¥w!D¦§V.?(c)¦OStYJ\"%]H-& j!DO(c)\no76\noh\nYaDBC!#hGc3¤*,!.-'\";1Yu\"%]HU<>ZG3EG$9GH!D3;-\noX\noh\nIuO.?\nGc3Yu\"%]H.-\no7\no\n*,!.-'\";1Yu\"%]HUV,-GT?4-$tRz]H3)?\n«\n__\n¬8nA dk;at(r)n#a= >a5n\nc n\n\noho\nS5S.G3Ej3)StYaDBC!#hGc3¤*,!.-'\";t \";-$9GH!D3<DZGc3Gc$(GH!D3;-\noh\n<DZ(@\"%]c$*,!.-'\";t \";-$9GH!D3;-\nX\noh°\nO\nGc$9G3Ejs\"y-$F!DB±\"/.-$9GT!D3;-\n\niv\nTable of Contents\nApril 2003\n}\n«\n>ga. m2jgk;c ;d mln#k)2g/3(r)8 ;5gc\nh\nh\nK83EGZGT?D$9GT!D3YJ\"%]H-\nh76\nO\nGHD,]H.- 43%SqpE?!DrhGc3Gc3*,!.-'\"/\nhX\nhX\np!DBCLuv,4BMrh]H.- !DZ>*,!.-'\"/1K83EGZGT?D$9GT!D3\nh7\nho\nV5-GH?+K83EGZGT?D$9GT!D3xu?\nGc]Gc$9GT.-\nμ\n«E}\n(r)wn\nc ;dln#k)2g¤¶qk; ·TnA1»oa\n1⁄4\n«h1⁄4\n¬8%g ah1⁄2ahgFahn+5&ln\nk/2g¢>£cahn\n3⁄4\n}h\nl;2n#Fchg ¿g A\nykm2jgc ;a yg ;a\nN\n@6\n*\"-$9GcZGH?$9GH!3\nN\n\n@6\nuO\nGcBMG$9G,+*.\"-$9GZGT?D$9GT!D3-\nN\n@\nsu!DBMr!\n\")3%S1*.\"-$9GZGT?D$9GT!D3-\nN\nX\n@\n<$D5-NLuO@S.GH?$9GH!3- su43¥D,:[=\")]$9Gcrh]H+*\"y-$9GZGT?D$9GT!D3;-\nN76\n4o\nuvhr5]T4G3EG3EuO!DOBAVD]GHDZ-\nNX\nh\nYa#hG-G3EuO!DOBAVD]GHDZ-\nNX\n4°\nz30uIy[qpuv,4BMrh]H\nNX76\n°\nYaD$9O?#$(Gc3uOSGH?4$(GH!D3;-w¦zGc$('tAn\nk)ug)3A Aun\n9A\n\nμ)}\nA&. yg\nAÆ8ahn3Cgn#1ln#k)2gA& g\nA\nN#\n°h°\n0G-$!DZ3E$9O\nGT.-wG3$9'%LV5-GH?W*,!.-'\"/1<zGH?\n$9GH!D3%O\n^\n1⁄4\nCgn#1ln#k)2gA& g\nA\n¬\n«E}\n¬E1⁄2dat5wk;a1ln\nk/2gz£z5\n/Fa.a ;.a\n\nv\nApril 2003\nList of Figures\nList of Figures\n\n°\nEV5-GH?Up5\"E%-ND$!DZ$9'%:*,!.-'\";=uO!D$!?!D]\n6,\npGcBMr5]T1#v,BMr5]T:\"-Gc3ZH\")3%?\n$9GH!D3Orh')EE4\"/DOEO-9\")]$-\nX\n,X\nxu!O\n¦>OStYu\")]T1IuO\nGcDO:3)SU?#$9GT!D3O\n$-\n\n,\nV?A(c),¦4OStYu\")]T1IuO\nGcOU3)SU?#$(GH!D3O\n$-\no\n,\nROrh'EG3EjE4\"/DOI-9\"%r5r,!DO\n$8ZO!DBI?A(c),¦4OStO\"%]H\n\no\np5\")BMBCO!DZ>*,!.-'\"/1YJ\"%]H=Ir,DO$9GH!3\n\np4BMrh]H=ROr5'f!DZ8Iy[\\pp,\"%r5r,!DO\n$\n°\nIy[qpuv,4BMrh]H=EcE Iw¦Exu?\n$wsu!D3$9OS.GT?#$N-wuv5G-$9Gc3x2?#$\n\nIy[qpuv,4BMrh]H=EcEzIJO?13%St<>\n5\"%DO+<zG-rh]H\nE-\n23)StxyGO-$&YaD$9O?\n$9GH!3\n\n°h\nIy[\\pJv,BMr5]Husu!D3$9G3\"/SqEcE <S4\"/?Stxu?#$su!D3$9OS.GT?#$-JvhG-$9Gc3x2.?\n$\n\n°6\nIy[\\pJv,BMr5]Husu!D3$9G3\"/SqEcEzIuO.?U<G-r5]T#3)Sqp?!D3)StYaD$9O?\n$9GH!D3\n°hX\nIy[\\pJv,BMr5]Husu!D3%?\n]\"/S5SqEcEzIy[qpt \"%$!DBC$9GH?]c]QqYaD$9O?#$N-wK83-9\"%r5r,!DO\n$S\nx2?#$\nX\n°hX\nIy[\\pJv,BMr5]Husu!D3%?\n]\"/S5SqEcEu \")$F!DBC4$(GH?+YaD$9O?#$(GH!D34¤$9'%=I2[\\p\n\nApril 2003\nIntroduction\n1. Introduction\n1.1. About the Joshua Language\n*,!.-'\"/qG-:3¿#vh$D3;-G,]H-N!DZ$9¦Otr5O!S\";?\n$MZ(!DOU5\"%Gc]HSGc3 3%SS5]cG,DO\nG3EÐ#vhr,DO\n$U-E-$DB\nr5r5]GH?$9GH!D3;-\n2N\n$&G-wGBWrh]HDBCD3$Sq!D3$(')=p.5Bw!D]cGT?4-\nX55h\nZ(BMGc]OEu!3I$F!Dr!DZ$9'%1p5Bw!D]TE\nGH?-R>3)DOOD3hGcO!D3BCD3$\n\n*,!.-'\"; G-!r5$9GBWGTOD@SOZ9!O 4rhr5]GH?$9GH!D3;-¦z')O»rDO\nZ(!DO\nBC3)?\n3)SqS5]cG,DO@S\\ZH\"%3)?\n$9GH!3)]cG$H4OUGcBMr,!DO\n$3E$\n\n*,!.-'\"/IG-t,DO¿?D!DBMr,.?\n$t-E-$DBU!DO\n3GHOS O!#\")3%S »-BC]c]w3\")BwDO!ZU?D!OjZH\"%3)?E\n$9GH!3-\n\n*,!.-'\"/PQ-tS5DZ(D\")]$\\-$(O\";?\n$\"%O.-1r5O!\n5GTS5»-GcBMr5]TISh?#]TO4$(G,I?!DO]H3E5\"/j¦zGc$('\n5\"%Gc]$EG3OZ(?#G]cG$9GH.-fZ(!DO×r5rh]cGT?D$9GT!D3Sh#,D]H!r5BCD3$\n\nuO!DOBMBMGc3Ø¦G$9'O$(')OS5DZ(D\")]$-fG-\n,DO§-$9OGc'$9Z(!DO\n¦4OS&]c]H!¦G3E !\n\"U$!f5\"%Gc]TSODZZ9@?#$9G{,¿rhr5]GH?4$(GH!D3;-jE\"%GH?(c)]Q\n\nIu'G-¤G-\nS4\"/L$F!\\-N#,DO]zZ($\")O-\n-\nIu')f-53E$F@v»!ZW*,!.-'\"/G-U\"%3EGZ9!DO\nBU-$$DBCD3$Ec!DO\nGTD3$S3)Sf0yG-rE]G(c).-N!$(')$M,!#\"\n3%St3)!$&]TO\n3f43f3E$9GOD]Qq3%D¦E]H35\";\n\n-\nIu')jGc3$DO\nZ(?Dj$!$(')IS5$D,-NÐUH3h×Sh$D5-NUCG-¤-GcBMr5]Tf3%Sm\"%3GcZ(!DO\nBU?!D3;-G-$9G3E\n!DZ$9'%U$9'EO@LZH\")3%?\n$9GH!D3;-\nAn\nk)ug)3{gnANn#k)2g/3Oa.££23)S+ANn#k)2g/3O£cahg\n\n-\npr?\nGH]WUBC.?-tZ9?\nGc]cG$9GH-\\]G(c),O?A(c)D$1BC4$F?#'Gc3Y3%SO-r@?#GT4]+?\n'%O.?\n$DO-q5-NIr5O!E\nOB±S5\n]H!DrhB+3E$\n\nÞßaAaa\nßIazaEacæaceIe e5ßAace\\i)eßNi)ae)$(')IZGO-$¡BC3\"/]CG3i$(')*,!.-'\"/»S5!?\")BCD3$$9GT!D3U-ND$\n?D!\nO-M#,DO5$('EG3E¡!#\"f3%St$!+(c)3%!D¦E$!Ur5O!DOBi\"-Gc3¤*,!.-'\"/PQ-85\"%Gc]c$FEGc3Z(?#G]cG$9GH.-\n\nBC!D3ð*,!-'\"/Pn-I-$9OD3$9';-G-¤$9'%4$\\$9'G-I-E-$DB\nG-j ?D!D'%DOD3$bBw\")]$9GHE{]H#,D]LD3hGcO!D3%E\nBCD3E$N BCD(c)G3EoS3%?D@SiZ($\"%O.-mD,Gc]HD,]H×¦z'%D3o!#\"O3%SY$9'%DB\n\n*,!.-'\";OG-jh\")G]c$\nO!#\")3%SO-N!DBC\nX5\n?!DOIZo\"%3%?#$9GT!D3;-\n$9'%IuO!D$!?!D]+!DZ\nN\n3EZ(DOD3%?.¦z'GH?\n'oOje5eeNaßNß\nacoo{ace\nciaCaßNa\na÷9eawøMeæ)aQ÷aceNecaceu)u\nIJ'G-WBC!S\")]TO\nGc$HI3%Sj?D?.-\n-G{Gc]Gc$HI!ZZ(DOLr!D¦DO\nZH\"%]bS4,3)?SZ($\"%O.-2\"y-NO=G3E$FDO\nZ9?.-\n\n?D!3E$9O!]&-$9O\"/?\n$\")O-\n-$!DO¤-F$9O\";?\n$\"%O.-C?3 ]c]z¡?A\"-$!DBMGTODSq$!=ODZ]T?\n$w¦z')$wG-MBC!.-$\n3)$\"%O]CZ(!DO$(')Ðr5rh]cGT?D$9GT!D3yub#vh$DO\n3%]:S5$D5-N.-¤?D3ðÐ?D?.-\n-NSu8#vhG-$9Gc3E-N!Z$9¦O\n$!!D]-:?43f-NBM]H-\n-]QG3E$FDO$SGc3$!t$9'%1*,!.-'\"/rhr5]GH?4$(GH!D3urDO\nZ(!DO\nBC3)?q?3f\nZG3)@E$\"%3)@S\n\n»r5O-ND3E$]c]L$9'%.-N¿$F!Dr5GT?4-Gc3U$9'%×?!DBMr3GH!D3oSh!?A\"%BCD3$$9GH!D3§,!D]{\")BC5\npE@L$9'%=S5!?\")BCD3$i/eßNi)ae¡u>a9÷9a\naauea8yte5u%aeo\n\n*,!.-'\"/Sh!#,D$Gc]-U¦zGc$9'×RD3%DO3)Sfp5Bw!D]GH?-=su!DBMBC!D3¿0yG-rfGc3¿Bw\";?\n'¿$9'%I-NBC¤¦\n\n$9'%4$0G-rØ3%Soxy]TD!O- Sh!\n\n*,!.-'\"/ðGc$-ND]ZG-mGBMr5]HB+3E$@So¦G$9'Ox]HD,!DO-\n\n*,!.-'\";ðG-\n?#]T!.-ND]OGc3$DO$S¤¦zG$9'm0G-rE3%S¤0yG-r?!S5t?3IL\"-NS¤¦zG$9'EG3I*,!.-'\";tO\"%]H.-\n\nz]c]!Z\nR>D3%DOPQ-ØrhO!DOB\nSh#,D]T!Dr5BCD3$EZ(?#G]cGc$(GH.-EO@,Gc]TD]HI$!þ*,!.-'\"/,j3)BCD]OE$9'%\nUEBC?- S.G$!DO:<53%BMGH?O G3)Sh!D¦-\n:Z(!DO\nBC4$($SE!\n\")$9r\")$NLS5#h\")G3E-9\"%r5r,!DO\n$L3%SØ$9'%\nKW-NO\nN\n3$DO\nZ(?D+[q3%DBCD3E$pE-$DB\n\nIntroduction\nApril 2003\n1.2. About the Joshua Documentation\n*,!.-'\"/»G-»r!¦>O\nZo\"%]L3%Si-N!r5'G-$9GT?D$S $!@!D]:$(')$¤?3YI\"y-NSO$\\BC3hO]T#,D]-\n>\nr!r5]Hq¦G$9'»,O5G3E\nN\nr5O!O4BMBMGc3¿#vhrDO\nGTD3%?D. O#43Gc3 ZO!By$(')¤OD]T$9G,D]OmGc3%#v,E\nrDO\nGTD3%?DS$!¡$9'%q\nv5r,DO\n$\n\n'EG]Ht$(')=*,!.-'\"/Sh!?A\"%BCD3$$9GH!D3ÐG-:Sh.-Gc3%S$!t'%D]r\"-NDO-\n$L43hÐ]H\n]D$:$9'%B+!-$L!#\")$L!ZM*,!.-'\";5Gc$:G-=3%!D$L3×G3E$(O!S4\"/?#$F!DOj\nN\n$\nv5$Auz¦j5-NE\n-9\")BC:!#\" ')D,q$ ]T5-$C\\r5-\n-Gc3Ð?E4\"/Gc3$3)?t¦zG$9'j\nN\nrhO!DOBMBWG3Em?!D3)?Drh$-:3%S\n$DO\nBU-\n\npG3)?I*,!.-'\"/»G-\\,DOð?\n]H!.-ND]OOG3E$FDO$S Gc3$!mGc$N-p5Bw!D]GH?-su!DBMBC!D3o0G-rðD3hGcO!D3%E\nBCD3E$N¦f]-N!f5-\n-9\"%B+j$9')$C!\n\"§OZ(BWG]cGT4O¦zG$9'ð$(')fRD3)OmZ(?#G]cG$9GH.-\n>p.5Bw!D]cGT?4-\nsu!DBMBC!D3E0yG-rw3%SO$9'%»UBC.?-SGc$!DO\n\nJvh$3-G{¿S5!?\"%B+3E$$9GT!D3Ø!D3E$9')-N O5-G-\nr5O!#hGTS5SqD]-ND¦z')DOUGc3$(')=p.hB !D]cGT?4- S5!?\"%B+3E$$9GT!D3 -ND$\n\nIJ'%+*!-'\"/tS5!@?A\"%BCD3E$F4$(GH!D3f?!D3;-G-$- !DZ$9¦!LBC3\";]-\n\nÞßaAaa\nßtaaacæa1ceteehß\nace+i)eßi%ae 43%S\\i)eßi%aeju>a(÷9a\naaueaWyte5u%aeo 5-+¦>]c]&5-U!D3E]Gc3%¤S5!?E\n\")BCD3$$9GT!D3\n\nIJ'G-WS.GhG-GH!D3fODZ]H?\n$-CqSGcZZ9DO3E$$5-9(c)f!DO\nGTD3$$9GH!D3Ð5-M¦D]c]5-CqS.GZZ(DOD3$+-$t!Z&Z(E\nBMGc]cGTO\nGc$Hq¦zGc$9'q\nN\nrhO!DOBMBWG3E\n\n1.2.1. The User's Guide to Basic Joshua\nÞßaAaa\nßUazaEacæa+c{eUe e5ß\nacei/e@ßi%aeG,.-!#\"Ð#,DO5$('EG3Et!\n\"m3%St$!:(c),3)!D¦E$!\\-F$O\n$wS5#,D]TE\n!Dr5G3Eq*,!.-'\"/tr5rh]cGT?D$9GT!D3-\n\nIJ'%q!]!DZ $9'G-:BC3\";]bG-:$F!q]H$!#\"OSh#,D]H!DrmZ(D]bZ9!O=*!-'\"/5a$!D$9'%DO¡¦zGc$9'»$9'%\nDGc]Gc$Hj$F!\\S5!\\]c]!DZ$(')¡BC!.-$W?!DBMBC!D3ÐrhO!DOBMBWG3EI$5-9(c)%-M\"-Gc3m!D3]Q*,!.-'\";PQ- 5\"%Gc]$E\nGc3 Z(?#G]cGc$(GH.-\n\nxu!DO=$9'G-+O@,-N!3¦\\¦zGc]]¦>!O(c)m¦zG$9'¿I-9\")-ND$C!DZw$9'%¡*,!.-'\"/?D!BWBC3%S-\n\n3)SÐ¦zGc$('Y!D3]Q»$9'%!.-Nj$!DrE{]H#,D] uO!D$F!?D!] Zo\"%3)?\n$9GT!D3-1$9'%$¡OIS.GO?\n$9]QÐ\"y-ND,]HjZ9!Of-$3%E\nS5OS¿!DrDO$9GT!D3;-q3)S $9')$¡S5!I3%!D$1Or5O.-ND3$¤-r,?#GT]HEr\")O\nr,!.-NIZH\"%3)?\n$9GH!3-q!DOf-9\"E?D!DBMr,!E\n3)3E$-t!DZ:$9'%jr5O!D$!@?D!D]\n\nIu'%BC3\";] G-\\Sh.-G3)SÐ$!I3-¦DOE4\"/.-$9GT!D3;--9\"/?#'Y5-\n\"\n¥w!D¦\nS5!\nN\nGc3$DO?\n$ ¦zG$9'm$9'%=*,!.-'\"/¤S5$D,-N \"\n\"\n')$&(c)G3)S!DZ8O5-N!D3EG3Ef!Dr,DO$9GH!D3;-+?3\nN\nS5!U¦zGc$9'*,!.-'\"; \"\nu3%S\n\"\n¥w!¦ØS5!-&*,!.-'\";1'%3)S]H=IJO\"%$9'[\\Gc3$D3%43%? \"\nÞßaAaa\nß:aaacæEaCce:e e5ß\nacei)eßi%ae?!#,DO-$9')UZ(!D]c]T!D¦zGc3$!DrhGH?-\n-\nuOSGH?4$(GH!D3;-\n-\nYu\")]T.-M3%S\nN\n3EZ(DOD3%?D\n-\n\"/.-$9GT!D3;-\n-\nK83EGZGT?D$9GT!D3\n-\nKM-Gc3¤*,!.-'\";L G$9'EG30yG-rsu!@S5\n-\n*\"y-$(GcZGH?4$(GH!D3f3%S¤IuO\"%$9'[qG3E$3)3%?D\nÞßaAaa\nß=aaacæaUce=e e5ßAaceMi/e@ßi%aeG-+!O\n43GHOS¤G3E$F!t¤?!D3%?DDrh$\"/4]SG-N?\"y-\n-GT!D3;uZ9!D]]H!D¦St\n$9'%\n\"\nV,-GT?q*,!.-'\";I<GT?#$(GH!D3%O \"\n\nIJ'G-1G-t3Y]crh')D$9GHOS»S.GT?#$(GH!D3%O×!Z:ODZ(DOD3%?DID3%E\n$9O\nGH-+Z9!O1$9'%¡5-GT?-9\")-N$+!DZ&*,!.-'\";I-5Bw!D]-+$(')$W]TD$&,!#\"¿r5O!DOB\n*,!.-'\";PQ-US5Z9D\"%]c$\n-$9O\"/?#$\"%O.-\n\na?\n'×D3$9OfrhO!#hGHSh.-Lj?D!DBMrh]HD$¤S5.-N?\nO\nGcrh$9GH!D3 !DZWf-Gc3]Ht*,!.-'\"/ZH\"%3)?\n$9GH!3\n!DOq?!DBMBC43%SaGc$-t-o53E$F@v ¦z'%$+Gc$COD$\"%O\n3-\n#v,BWrh]H.-=!ZWG$-+\"-N.z3%Sm?\nO!.-\n-NE{ODZ9OD3)?.-\n$!UOD]H$StZH\")3%?\n$9GH!D3;-M!OU?!DBMB+3%S-\n\nApril 2003\nIntroduction\n1.2.2. The Joshua Reference Manual\ni/e@ßi%aeu>a9÷9aAaaNuEeNaMyte5u%ae,o$9'%¤?!DBMr3GH!D3m,!D]{\")BCt$!t$9'G-\nG-:¤Bw\"/?#'¿ShDr,DO1rhO.-ND3%E\n$$9GH!3 !DZ8$9'%t?!D3)?Drh$-8!#\"Ð3)@S¤$!L\"%3%S5DO-$3%S¤G3 !DOShDOU$!1r\")$&*,!-'\"/\\$F!1$9'%1Zo\"%]c]T.-$\nr!.-\n-G{]T\"y-N\n\nIJ'G-1BC3\";] G-1Z9!DO\nv5r,DO\nGH3)?SÐrhO!DOBMB+O-¡¦z'%!j3%SÐ$F!j¦zO\nGc$j$F4GTE\n]H!DO@S2!Dr5$9GBMGHOSq4rhr5]GH?4$(GH!D3;-\n\nI!r5GH?-+r5O-ND3E$FSIO\n]cGTDOtO\\O#hG-G$Sj'%DO\\G3»BC!DO¤ShDr5$('¦zGc$(' ?\nO!.-\n-NEOZ9DO3)?.-+$!\n$9'%»O\n]cGTDOIBC3\"/]\n\nIu'%ÐZ(!?A\"-¤'%DOÐG-!D3E4]]:]T#,D]-!Z¡$9'%f*,!.-'\"/¿2O!D$!?!D]:ZH\"%3)?E\n$9GH!3-\nz-N!t$(')$8!\n\"×?3O-Nt'%!D¦\n?#'Ð¦!DO(c))-\n\nG$9' $('EG-W\"%3%S5DO-$3%S.G3E!\n\"×?43ÐBCD(c)\n?#'%3E-$!×35§?D!BWr,!D3%D3E$Z(!DO¿DZZGT?#GTD3%?\n\nyteæa\noacuy$9')$G-\n$Gc]T!DO\nGc3Ø35§!DZq$9'%\n*,!.-'\"/I?!DBMr!3)D3$-U$!¡,!#\"%O¤r5rh]cGH?$9GH!3 G-UGc3$9O!S\";?SIGc3Y-!DBCjShD$Gc]G3)?\n]\"/S.G3E¿#v,E\nBWrh]H.- !DZBC!S5]cGc3Sh$¤-$9O\"/?#$\")O.-\nO\"%]Ht-$!DO.243%St¦zO\nGc$9G3E¡!#\"%OU!D¦z3fIy[qp\n\nIJ'%.-N=O\\-N!DBC=!DZ$9'%L$F!Dr5GT?4- ?D!#,DO@S\\G3\ni/e@ßi%ae¡u>a9÷9aAaauea8ytehu)aeo(\n-\nIu')U<4$F@5-NLuO!D$F!?D!]\n-\nIuO\nGcDO\nN\n3)Sh#vhGc3uO!D$F!?D!]\n-\nIu')UYJ\"%]H=su!DBMr5G]HDO\n-\nIu')=I2[\\p\n-\n[\\!S5D]Gc3\nb- G3f$9'%¡O\n]cGTDOC,!D]\"%BC.2$9'%¡?D!3)?Dr5$\";]SG-N?\"y-\n-GT!D3fG- Z9!D]]H!D¦S¡$9'%\n\"\n*,!.-'\";¡0u3%E\n5\";»<zGH?\n$9GH!3)O \"\nw3o]crh')DD$9GHOSYS.GT?#$(GH!D3%O§!Z\\ODZ(DOD3%?D D3$9O\nGH-jZ(!DOfe,oco:*,!.-'\";\n-5Bw!D]-\naBCD$9'%!S-\n3)SI?D!DBMBC3)S-\n\na.?\n' D3E$(Ofr5O!#hGTS5.-Lj?!DBMr5]TD$Sh.-N?#O\nGr5$9GT!D3 !DZC\n-Gc3]HÐ*,!.-'\"; ZH\")3%?#$(GH!D3o!O ?D!DBMBC3)S&Gc$-m-53$Dv&¦'%$¤Gc$¤OD$\")O\n3;-\nw#v,4BMrh]H.-!DZtGc$-\n\"y-Nu3%S¤?\nO!.-\n-NE{ODZ9OD3)?.-$!LO]H$StZH\")3%?#$(GH!D3;-M!DO:?D!BWBC3%S-\n\nBC!D3»$9'%BCN!DO\\!]-1!DZW$9'%jSh!?A\"%BCD3$$9GH!D3 G-L$F!G,¡,!#\"OZ(5-$L?D?.-\n-L$F!$9'%Gc3%E\nZ9!O\nB+$9GT!D3 !#\"o3)@S$F!fBMGc3GcBMGHO!\n\")OjO@.SGc3)b3)S»$!f]TD$:!\n\"§¦!DO(c)ðS.GO?#$(]Q×¦zGc$('\n$9'% G3Z9!DO\nBC$9GT!D3Ør5O-ND3E$FS\n\nI!Dr5GT?4-IOO?\n]H@4O\n]O§?#O!.-\n-NE{ODZ(DOD3%?DSO$! r,!DG3E$¡!#\"oZO!DB\n5-GH?¤$!I.S,43%?S»?D!\nO45-1¦>]c]W5-¡$F!O]H$SÐ$!r5GH?-uGBWr,!DO\n$3$=G3EZ(!DO\nBC$9GH!3OG-\n-9\")BMBCO\nGHOS hG-9\"/4]]Q×Gc3i$D,]H.-!OZGc5\"%O.-qZ(!DOfE\")GT?A(c)OODZ(DOD3%?5u$9'%mBCN!DO\nGc$HO!DZ=$9'%\n#v,BWrh]H.-+Gc3»$9')\\BC43\"/4] -')!¦þ!#\")$(r.\"%$3)Sj$9'%Ð?3 =3(c)SjZO!DB\n<!?\"%B+3E$Cuv,E\nBWG3)O+Gc3$!U$9'%L0G-rq0yG-$D3%DO1-N!U$9'%4$!#\"Ð?3f#vhrDO\nGBCD3E$8¦zGc$9'$(')DB\n!#\"%O-ND]cZ\n\nIntroduction\nApril 2003\n\nApril 2003\nGetting Started with Joshua\n2. Getting Started with Joshua\n2.1. Setting up the Joshua Context and File Attributes\nN\n3m!OS5DO+$!LD$&$F!¡t?!DO\nO?\n$b*!-'\"/¡r,?A(c)413%S\\$!LG3EZ(!DO\nB\n$(')L0G-r¤OShDO+$9')$>!\n\"\nOÐ\nvhr?\n$9Gc3OGc$1$!mS5]WrhO!DrDO\n]O ¦G$9'O*,!.-'\"; -53$DvE ,!#\"oBw\"y-$¤-ND$+!\n\")O¦!DO(c)G3E\n?D!3E$\nv5$8$!+*,!.-'\"/\n\nxyO!DB$9')U0yG-rq0yG-$FD3)OuD3$DO\n\nIJ'G-\\-ND$-=$9'%?\")O\nO3E$L?D!D3$#vh$:$!¤\"-N¤*,!.-'\"; -53$Dv3)S¿-ND$-=$(')j?A\"%O\nOD3$Ur?(c)\n$!¿*!-'\"/\n\nx2!DO¿Gc3Z(!DO\nBC4$(GH!D3\n!D3E0G-rU?D!3E$\nv5$N-CpE@O$9'%o-N@?#$9GT!D3\n\"\npD$0G-rUsu!D3$#vh$\nsu!DBMBC43%S \"\nGc3fa aua\naeMe5uæEoe@e\n\nI!t-ND$!#\"%O+ZGc]T1$9$9O\nG{5\"%$U]cG-$NuD3$DOC$9'%LZ(!D]c]T!D¦zGc3ZO!DB±1UBC?4-85\"%ZZ(DO\n!#\"\nsyO$\nN\n3Gc$9GT4] *,!.-'\";C$9$(O\nG5\"%$U0yG-$\nIJ'G- ?#O@4$F.-M3f$9$9O\nG{5\"%$L]G-$M-GcBMGc]TO+$!U$9'%1!D3%+D]T!D¦8\nu{u{uuE%$#Ea[\\!Sh5*,!.-'\";uy?(c)5*,I>p¥8K>EKpYuup.h3E$Dv%*,!.-'\";u)8-r)\n\nE%$#E\nu{u{uusyO$S\nX&°&°5°q\n\n,o\n4su!\n!UO\"%3E3Gc3!D30%<EuY RzY\nN\nI8i$wpsyYas\n\nxu!DOtGc3Z(!DO\nBC4$(GH!D3O!3 ZG]H$9$9O\nGh\")$F]G-$-zpE¤$9'%I-N?\n$9GH!D3\n\"\nVy\")ZZ9O¤3%SfxGc]T¡z$9$9O\nG{5\"%$.-\nGc3UBC.?- \"\nGc3(' æ)aHcacuIehuEæqyte,aHo\n\n!#\"ÐOL3%!D¦EOS¤$!+\"-N:*,!.-'\";\n\nGetting Started with Joshua\nApril 2003\n\nApril 2003\nOverview of Joshua\n3. Overview of Joshua\n)+*-,/.0213/04.560758:9;5<=3+>@?7*A<B?76C>/DE0FHG+?#<I0JK*L,M8060,/.0NDE?,PO#>@?OM0QR*-1C<S.3P*E08G#>T*LDEJ*-,PO\nGUDE5.WVT<YXZ*-OU3P1Y?D-60?J[(GM0\\8]?X^*LDL*E?6_1=5`[;5a>b8c65Xd513T06^egfih#65OU6?jX^X^*L,MO:Dk?,MO#>l?OM0<mon:0\np\n*LDLDqGU6*E08ADr[60as*k0\np\n1]3/0<I00Dk0X`0,M1C<`?#<\np\n0th#60<I0,P1u1]3/0v9;5<=3U>@?w.5,M1=0ax1^?,/J(1=06X^*L,T5DE5F\nO[Pm\nyz,T0t.?,{13M*L,UV{58|9U5<=3+>@??#<u3T?s#*-,PO}8A*~s;0vX`?I56_.5X^hU5,T0,M1C<\nI/LIULL\nPS?60\np\n?[P<580axh#60<<=*L,MOV;,/5\np\nDE0JOM0#u13T0C[K?6058A1=0,.?jD-Dk0JW;C^I/~Q\n\n#WQ56^#CIILLM`*L,513T06`Dk?,PO#>@?OM0<Q?j,TJ\np\n0t5..?;<=*E5,T?jD-D[><I0_13T0<I0_1=06X_<^?#<\np\n0D-DAm\n3T0:MU~#C*c<(?B.5D-Dk0.1*E5,758_h#60\nJ*k.?1*k5,<(?,TJB60DE?j10JB*-,P8]56X`?1*k5,213T?j1\\13/0<c[P<IF\n1=0X 60XR0XYG+06<\n¡£¢P¤~C?60\np\n?a[M<580axh#60<<=*-,PO4?,/JS60X`0XuGM06*-,PO260Dk?1*E5,l<=3P*-hP<}?XR5,PO2h#60J*k.?1*k5,l<Q\n?#<\np\n0DLDg?#<uh65.0Jj>T6?D¥V;,/5\np\nDE0JOM0\n3T0(=I¤u\n¦\n\nWCMCw*A<§13T0{X`0.3/?,M*A<=X 13T?1\\*L,M1=0OU6?1=0<§1]3/0<I0(c).5X^h;5,/0,P1C<a?,TJ\nhU068]56X_<u1]3/0_60?#<I5,M*L,MOl\n3T0«¬C¢M(r);L/~CM#MCt +°+~C\n±k2a)P3 V+00hM<v1]6?.CVS58^13T0w60?#<I5,P*-,PO13T?1\np\n?#<R>o<I0J\n<I5v1]3/?1i*L1 .?,o\n-\n2a?j*-,P1?j*-,0axh#DE?j,T?1*k5,<Y58|9;5<=3+>@?Uμ<u60?#<I5,M*L,MO\n-\n2a?j*-,P1?j*-,{13T0vDE5OU*k.?D|.5,l<=*A<=1=0,/.=[58£13/0<c[P<=1=0X\n¶·?#<=*k.h#65OU6?X^X^*L,MO*L,9;5<=3U>l?{.5,l<=*A<=1C<\\58v<>Th#hD[#*-,PObh#60J*k.?j1]*k5,l<\\?,/J{6C>/DE0<\\?,TJJ0F\n1=06X^*L,M*L,MO43T5\np\n1=5><I0b13P*c<(VU,T5\np\nDk0JOM01=5BJ#0J>l.0S?JJ*L1]*k5,T?DRV;,/5\np\nDE0JOM0Q 563T5\np\n1=5\n><I0_*L1i1=5\\?,<\np\n061j>@0<=1*k5,<mln:0t.5as;06R1]3/0<I0_1=5h*k.<u*-,{13/0_h#60<I0,P1iX`?,+>@?DAm\ne|Js;?j,T.0J(c)h#65OU6?jX^X^*L,MO*L,B9;5<=3U>@?(c).5,<=*c<=1C<\\58Y^M¤-LoQ13T?j1R*c<Q1=?*LDk56*L,MO»?h#h65h#6*EF\n?1=0ah;?61C<_58u1]3/0t9;5<=3+>@?w1⁄4¬651=5\n.5D£65a>T1*-,/0<`1=5_[U5a>T6thU?61*E.W>TDk?6?hh#DL*E.?1*E5,o[U5a>SX^*LOU3M1\np\n?j,M1v15:X`5J#0DY8]56?,[B,+>TXuGM06}58R60?#<I5,<w±-1=5*L,T.a60\n?;<I0{08A8c*k.*k0,/.=[PQz*-,/.56h;56?1=0b<=h;0F\n.a*E?DL*k1⁄20J1=55DA<Q?..0<<^0ax1=06,/?DgJ#?1=?GM?#<I0<Q?,/J13T0_DL*V+03mn:0\\.5as;06`13T0<I0v15h#*E.j< *L,{13T0\n3⁄4@\nCT¢+§¡|\n\nWCMCi(r)/¢UU¤cQ13T0\\.5X^h;?j,M*k5,sU5D>TXR0_1=5_13M*A<m\nn:0G+0OU*L,\np\n*L1]3?w<>/X^X`?6=[58£13/0R9;5<=3U>l?th651=5.5Dcm\n3.1. Some Basic Joshua Protocol Functions\n3T0¿9;5<=3U>l?N1⁄4¬651=5\n.5D(58(c)fc,P8]060,T.0N.5,l<=*A<=1I<B58b<I5X`0NAAOM0,T06*k.»8%>T,T.a1*E5,l<G;65aVM0,\nJ#5\np\n,{*-,P1=5_8c*s;0v8k>T,/.1*k5,/?DqOU65a>ThP<\n-\nA A+AIA#AoAPÆCEElA=CEaEIAUIC\n2(?,T?OM0<^?J#J*L1*E5,UI-J#0DE01*E5,58£8]?.1C< 1=5v1]3/0\\J#?1=?GM?#<I0\n-\nIEIoAÐN{AUOLElA=CEoA+ElIC(O@O@ÆACO\n±\nION:O¬×|ØqEUUAUUIUUU\n2(?,T?OM0<^J0Jj>@.a1]*s;0tJ0hU0,/J0,/.*k0<\n-\nU ÆaCE_EElA=CEEIAUICØqEUUA=UUIUUU\n2a?,/?OM0< *L,M1=06?.1*k5,\np\n*-13{13T0>o<I06\n-\nU|IoULCEEoYPCÞOLElß{ØqEUUAUUIUUU\n2(?,T?OM0<u13T0_6C>/DE0tJ?j1?\nG+?#<I0\n-\nU|IoULC(aIÆaA=UUO_OLaAUA=OLUUEØqEUUAUUIUUU\n2(?,T?OM0<u13T0_6C>/DE0t.5X^h#*-Dk06\n\nOverview of Joshua\nApril 2003\n¶·0.?\n>o<I0a58 1]3/0§X`5\nJj>TDk?6v,T?j1c>/60a58 1]3/0v9U5<=3+>@?a1⁄4¬651=5.5DcQX`5<=1Y1⁄4¬6515.5Da8k>/,T.1*k5,l<R?60\nGU65aV+0,a*L,M1=52<>MGM.5X^hU5,/0,M1C<Qu0?.a3a58\np\n3P*E.a3ahU06856X_<(c)?4<=h;0.*L8c*k.bhU?61:58a13T0S8k>T,/.F\n1*k5,μ<Z.5,M16?.1Cm3M*A<YX`5Jj>TDk?6*-1k[}Dk01C<a[U5a>b8c*-,/0F~1A>T,/0§?,/J(DE5.?jD-*k1⁄20.3T?,POM0<Y1=5\\8k>/,T.a1]*k5,TF\n?DL*L1E[?1 ?j,[(Dk0as;0DcQDE011*-,PO}13/0X 60X`?*L,{16?,l<=hU?60,M1 1=5_13T0t0,/Jt>o<I06m\nfA,713M*A<wX`?,+>@?D\np\n0.5as;06B<I5XR0(c)GM?#<=*k.(c)1=5hUFDE0as;0Dh651=5\n.5DR8k>/,T.a1]*k5,l<w*L,713T0bæg?1=?GM?#<I0\nfA,M1=068]?.0Q£c^<I06fA,M1=068]?.0Qi?,/Je2a)NOU65a>ThP<ma3T08%>T,T.a1]*k5,l<(856(c)e¬>TDk0fA,TJ#0x#*-,PO4?,TJ\ne>TDk0}e>o<=1=5X^*k1⁄2?1*k5,¿?60><I0\nJ5,PDr[8]56X`5J0DL*-,PO/Q¥?,/J?60w,T5158^*LX^X`0J*E?1=0w*-,P1060<=1\n3/060mR)U*LX^*-Dk?6D[PQ\np\np\n*-DLD,/51:GM02.5,/.06,T0J\np\n*L1313T0NJ01=?*-DA<58X`5J>/DE?6*k1⁄2?j1]*k5,*-,\n0?.a3S58Y1]3/0a8c*s;0ah651=5.5DaOU65a>ThP<Qz<=*-,/.0a13M*A<R*L,M8]56X`?j1]*k5,*A<_5,MD[(c)60DE0as;?,P1Z8]56tX`5J#0DEF\n*L,MO/m\ne*-O#>/60GM?#<=*E.F~h#651=5\n.5D_*c<{?¿J#0h;5h>TDk?1=0\nJh*k.1A>T60»5813T0bG+?#<=*k.h#651=5.5D_8%>T,T.a1*E5,l<\np\n?60.5as;06*L,MOa3/060mYe¬56B13/0e.5X^hDk01=0»h#651=5\n.5D]Z)P00»13T04<I0.1*k5,\n\"\neie*-O#>/6058}13T0\n9;5<=3+>@?i1⁄4¬651=5.5De584fA,M8060,/.0 \"\nQhU?OM0aegFeo*LO#>T60FL58]F1]3/0F9;5<=3+>@?F1⁄4¬6515.5DkFL58F-fA,P8]060,T.0F\n)+iie¬·fyzð^m\nUSER INTERFACE\nsay\nTMS PROTOCOL\njustify\nunjustify\nDATABASE INTERFACE\ntell\nclear\nask\nuntell\nsupport\ne*-O#>/60\\nameK¶·?#<=*k._)#>MG/<I01 58£13T09;5<=3U>@?t1⁄4¬651=5.5D\nou060v*c<^?w<>TX^XR?6=[}0axh#DE?j,T?1*k5,58i0?.a358£13/0<I0v8k>/,T.1*k5,l<m\n\nApril 2003\nOverview of Joshua\noa;#I\n¦\nTW\n\n#I\n-\noIUMÆaÐ/IA/oA=CULU\nfA,<=1?jD-DA< ,/0\np\n*L,M856X`?1*E5,\n°\noIUMÆÐ@IA/o\no=IÆaA=OE]O\n¬oq*s;0< 13/0\\2(){?t60\n?;<I5,{856^GM0D-*k0as*-,PO}13/0_h#60\nJ*k.?1*k5,\n-\noIUMÆaÐ/IA/o~AMÆW÷\nei016*E0as;0< V;,/5\np\n,56`*LX^h#D-*k0J(J?j1?\n-\noIUMÆaÐ/IA/oøIoElACU-U\nei0X`5as;0<^?(<=*L,MOUDk0_8?.1 13T?1\noIUMÆÐ@IA/oA=CULU\nh>T1i*L,M1=5v1]3/0\\J#?1=?GM?#<I0\n°\noIUMÆÐ@IA/oøIoEUoIÆA=OEO\n2a?j,T?OM0<u1]3/0\\2a)*A<<>@0< 60Dk?1=0J1=5_60X`5as*L,MO1]3/0_8?.1\n-\noIUMÆaÐ/IA/oIULCAUE\nei0X`5as;0<Y?jD-Dq8?.1C<u8c65X 13T0\\J#?1=?GM?#<I0\n«/(r) =\nC¤~u¬(r)#MoPC o£CT¢+WLku oa-uIPMCMLI\n-\noIUMÆaÐ/IA/o\no=I¬ÆA=OEO\n¬fA,l<=1=?DLDc<^?t,T0\np\n2a)R>o<=1*-8A*E.?1*E5,\n-\noIUMÆaÐ/IA/oøIoEUoIÆAO~EO\ne0XR5sU0<^?2()R>o<=1*L8c*k.?1*k5,\n-\noIUMÆaÐ/IA/o~ÆCIuTulUUEA\ne*L,TJ+<13T0<I0158a8]?.1C<{56?;<<>TX^h#1*E5,l<:13T?1?4<=1=?1=0X`0,M1J#0F\nh;0,/JU<^5,\nyOCW\n¦\nTW\n\nC\noIUMÆaÐ/IA@oHÆA#O\n¬1⁄4¬6*-,P1C<Z5a>T1 13/0\\X`0?,M*L,MO58ih#60J*k.?1*k5,l<Y*L,,T?1A>/6?DgDE?,PO#>@?OM0Q·56<I5XR0\nF\n13M*L,MO<=*-XZ*-Dk?6m\ne¬56\\?:<>MG/<I01^58a9;5<=3U>l?<c[#XuGM5Dc<Z*L,M165J>l.0Jw*L,1]3P*c<ZX`?,+>@?DO)M00t13T0}<I0.1*E5,\n\"\nþ\n*c<=1Z58\n¶·?#<=*k.Z9;5<=3U>l?)[#XuGM5DA< \"\nQohU?OM0\nþ\n*A<=1FL58]F¶·?#<=*k.FH9;5<=3U>@?F-)[XYG+5DA<IF-)+iie¬·fyzð^m\n3.2. List of Basic Joshua Symbols\nou060v*A<u13T0vD-*A<=1u58£8k>/,T.a1]*k5,l<^?,/J(.5X^X`?,/JU<\np\n3/5<I0RGM?#<=*k.R8%>T,T.a1*E5,T?jD-*L1k[\np\n0_h#60<I0,M1 *-,\n13M*A<uX`?,U>l?DAm\noIUMÆÐ@IA/o~AMÆW÷\noIUMÆÐ@IA/o~AMÆW÷y-Y/A+AIA#AoAMÆaCyHu@ECYPO-I#AUA=OLUUE\noIUMÆÐ@IA/o~AMÆW÷y-YPCEOTA+A=OLUUE\noIUMÆÐ@IA/o~AMÆW÷y+IoCEO\noIUMÆÐ@IA/o~AMÆW÷y+IoCEO@yA=EaIoA=ÐoyTAUUIoC\noIUMÆÐ@IA/oIULCAUE\n\"\neoDk0?6Z9;5<=3U>@?tæg?j1?\nG+?#<I0te¬5X^X`?,/J \"\noIUMÆÐ@IA/oIUUEA=E\nAPYMOLIA=UUEaO\noIUMÆÐ@IA/oIU#u/O@yU#AUoICIACy~OEIy~ElCICÆÆAUEaO\noIUMÆÐ@IA/o~YPCE=O-ElC#yulEC#YMOLIA+A=C\n\nOverview of Joshua\nApril 2003\noIUMÆÐ@IA/o~YPCEUICÆA=OLUUE\noIUMÆÐ@IA/o~YPCE=EIoULC\noIUMÆÐ@IA/o~YPO~EE=CECElAIyU#A;oCCIAIÆ\n\"\næq*c<I?GUDk0R9;5<=3U>l?¬6?.a*-,PO:e¬5X^X`?j,TJ \"\n\"\ni·,T?GUDk0R9;5<=3U>l?¬6?.a*-,PO:e¬5X^X`?j,TJ \"\n\"\ni¬xh#DE?*L,{1⁄4¬60J*k.?j1]*k5,e¬5X^X`?,/J \"\noIUMÆÐ@IA/oCÞulUkAUOLE\noIUMÆÐ@IA/oCEIAUUkÆC\noIUMÆÐ@IA/oßMEA#ulÐoy UICEOly~ECÆCIoULAIÆ\noIUMÆÐ@IA/oßMEA#ulÐoyA=O\\ÆyLÆCIlu/ulUUEA\noIUMÆÐ@IA/oø÷oElU\niE\noIUMÆÐ@IA/oO\\A#÷oC#yulEC#YMOLIA+A=O-UUE\noIUMÆÐ@IA/oO\\A#uoyUMCE\nyLY/AUAIA;AAPÆCyHulECYPOLIAUAO-UUEoÆ\noIUMÆÐ@IA/oøulECYPOLIAUA=OLUUE\noIUMÆÐ@IA/oøulECYPOLIAUA=OLUUE/u\noIUMÆÐ@IA/oøulEOLElAIy UICEO\noIUMÆÐ@IA/oøulEOLElAIy UICEOly~ECÆCIoULAIÆ\noIUMÆÐ@IA/oøulEUTA#AlULC\n\"\nei0<I01a9;5<=3U>l?§6?.*L,MO{e¬5X^X`?,/J \"\n\"\n\\\\\n)M?[ \\\\\"\noIUMÆÐ@IA/o~ÆA;O\noIUMÆÐ@IA/o~ÆA;O@y UICEO\n\"\n)U3T5\np\n9;5<=3U>l?\\1⁄4¬60J*E.?1=0<Ye¬5X^X`?j,TJ \"\n\"\n)U3T5\np\n9;5<=3U>l?\\e>TDk0<Ye¬5X^X`?j,TJ \"\n\"\n)U3T5\np\n9;5<=3U>l?§6?.*L,MO{e¬5X^X`?,/J \"\n\"\n)U3T5\np\ne¬>/DE0væg08c*L,M*L1]*k5,e¬5X^X`?,/J \"\noIUMÆÐ@IA/o~ÆCIoIICCY\noIUMÆÐ@IA/oA=CULU\noIUMÆÐ@IA/oA=EaIoC\noIUMÆÐ@IA/oøIoEoYPCE=OLElCyHu@ECYPO-I#AUA=C\noIUMÆÐ@IA/oøIoEoYPCE+IoCÆaA=O-UUE\noIUMÆÐ@IA/oøIoEoYPCE=EIU-C\noIUMÆÐ@IA/oøIoElOEO\noIUMÆÐ@IA/oøIoEUoIÆA=OEO\noIUMÆÐ@IA/oCIoE@÷oElU\niE\noIUMÆÐ@IA/oøIoElA=CU-U\noIUMÆÐ@IA/oTAUEOEA+ElA\noIUMÆÐ@IA/o\niO-AÐoy-ÆaAIAUACO_CElAIyLYPCÆAEIoIAIoECY\noIUMÆÐ@IA/o\niO-AÐoyIE/AlU#IoEoY/y~ULUUßMOLIyTAUEOEA;A@ULCÆ\noIUMÆÐ@IA/o\niO-AÐoyIElO~E=OLIAUAO-UUE\nO5GM0OU*-,{>o<=*L,MO}9;5<=3U>l?#Q@[;5a>b,T00Ja1=5\np\n56CV\np\n*L13u¬=CTLC;LLMQDE0?6,P*-,PO:3T5\np\n1=5tJ#08c*L,T0Q\n<=1=560QDE55aV\n>ThPQv?,TJ\nJ#0DE01=0413T0X_me¬5613T0<I0?,/J\n60Dk?1=0J\n15h#*E.j<v)P0041]3/0\n<I0.1*k5,\n\"\n1⁄4¬60J*k.?j1]*k5,l<^?,TJa1⁄4¬60\nJ*k.?1=0< \"\nQohU?OM0_1⁄4¬60J*E.?1*E5,l<IFL?,/JF1⁄4¬60J*k.?1=0<IFL)Uiie¬OfyqðZm\n\nApril 2003\nJoshua Predications\n4. Joshua Predications\n! \"#$%'&!$%()(+*,&-/.102*3* 02*546* !3'7834:9;'$=<!*,&>9?*02A@2/.B0=602C0D$%4%#$%44'E0\n<!C'9?7F4/&E4G;HI$%'&!$%(JLK C* 75MCN0'$%4O@P/.10QRC:$%4S%T9?* 0PT02C4'(JU;9?,*5.1V7F4S!W0\n02C4XK *7F*,&Y60'$B*,&[ZF%$\\$%4'(]137F^_'@`%024%$\\C4'9A@P.B0=a0b$%4S%O9c*02\"G\nd e@2/.B0=b$%46.%7 754\\fhgji=kCl m=no l pqErGtsIE*ub.1C#04%$.%134'$X02C4e4B4'E02*F7vL%@wK C* 75*,&\nx0'$B*,&x#$%4*5.'02*5'\"BGzyY4D7u{* E02$%R .%4Q$%4'75R0|4Y0|'#*5.R}2 .B\\02$= C02x378 4J~\n.B*F04x9?* 02N#$%4*5.'02*5'\"BUC0P4D 4O'@\\7F%&!*F.Q3$B*F'K!754}0DK C* 75Lfhgjikl mn!o l pSq6fn!o\no8igjqErGc4'E* E&9c*02N#$%4/*F.%02*F'\"}*u}0P4Y#$%13* C.'4O'@X$= C7F4/{*v{.%134'$%4*V0P0\n.'%,04B0I,4S4b02C4{4.10P*F'\n\"\nI C7F4RCuE@24'$%4%.%4 \"\nU#!&E4Jz C7F4~~ uE@24%$%4'.%4~dIsPc)G\n4.1. Predications and Predicates\n/.B$%\n=EBh, \"\"%, !\n¡ C.B02*5'\n=EBh¢,\"£\"%E d\nI'()(]RC,\ndC'9>! }HI$%4*5.'04/\n¤,(]/.)I'()(]E\n¥¦§{ (c)*7 7?a;4'@u*,*02*F%\n«(c)gjikl mn!o l pSq,rM$%4¬004%(\\4%,0=['KE1 C0602C49%$B7FdGyeC4'(r)#$%4*5.'02*5'\"x$%4¬0'$%4S¬*\nk,no8n°nriU0P46<!C'9?7F4/&E4±02C4=2N4%(Kd'2:KE4.%'(]4'3* 7F'K7F4±0|±02C43v2,0|4'(JU0YKd4±(]/~\n,*# C7F04}KR2D$= C7F4BG\ns4%$B(+*%7F'&/2[C'0|4t.%.'*F%7 7 2[9;4{ 402C404'$B(J]rBon!oi=μ)i=qCouUznr=riBgo l pqU¶2nmouUtC6°i\n·\nl iP¶Yv2C'2(\\B 7 2 9?* 02Yfhgji=kCl m=no l pqG1sI4/4$%4OK$%/7£2N4oR C*837F4%,0}04'$B(JQ02CR0}'34\n9?*F4L.= $B$%4'C.2D*_#$%'&!$%()()* E&G\nszC4e#$%'0.%'7a754'0=+2!B V(],*# C7F04e#$%4*5.'02*5'¡b* ! C(\\4%$%1 b9;B2,BGz»1⁄41 T.'\"Ut@P'$D41~\n(+#7F4\n-\nu\"4'$B0`024%(1⁄2* E0L{0'KE4\n-\n3⁄4\nS1<e024%(¿ #*[{0'KE4\n-\nuE@24%$\\02C4'(¿KR2D$= C7F4\n-\n##7£2)A2 0P* @v*F.%R0P*F'\"w02C0w$%4J$%4'(]4'(wKE4'$%4SQ*O02C4}R0|SKd4\nA1⁄44${*M(+*!U?7vU(c)0P0\\#$%4*5.'02*5'\"L.%R:Kd4D(]E* # C7F04S±7*8<d46'02C4'$Q'$%*$2\n3⁄4\n*u#~\n9;'$B7F61KBA4.B0=bZ 2!1 M.'0'$%4W02C4'(A* :$B$%12EBUz#$B*,00P4'(JUE1h !//R]0P4'(JUC\n}%^2GIvO@2/.B0=U#$%4*5.'02*5'\")$%41A2 0@v7F'3'$]* \"0.%4BG\nszC44L$%4}41()#754)'@_#$%4*5.'02*5'\"%\nAAAÆ/C'ESA%E6EESAII\nAAÆIIÐSIAN%OESIO1ÆE/EAII\nAÆNEAEO1IE/OMO2ÐEA%O/I6Ð/C'Æ1EI/×DØSÆO'C'E%U/AI\nHI$%4*5.'02*5'\"}.''\"*u0b%@?fhgjikl mn!o8irY2 .1N\nAAÆ/C'ESA%E\nU\nAÆSIIÐIASN%OEIOBÆ\n\nÆSNEAEOBIE/O\n*\n02C4Y'Kd134Y4B!()#754U(c)0'&E4'0P4'${9?* 020P4'*$D$B& C(]4',0BUt*@\\2EGzU#$%4*5.'02*5'*v}7 9;B2,\n4'C.1754{* 6K$%.=<E4%0=JU(c)UG\n\nJoshua Predications\nApril 2003\nHI$%4*5.'04/L02! W$%4e(]4}'@]$%4'75R0P*F'\",*#,BUc[0P4=23'$B&EE*FY%460P4<!C'9?7F4S&E4e* V\n#$%4/*F.%02*F'ÞCT41#$%4Be$%4'7F02*5'¡E* #EO(]',&ß* 0=e#!$B0=BG;a#$%4/*F.%R0|43*vO7 9;B2,602C4\n@u*$0)*04'(a* 3#$%4/*F.%02*F'a1⁄4* 0+.'0'<E4Y%4'$%%$L(\\%$%4$B& (]4'E0=BU4'#!4%/* E&''9\n2!1 4'@u*4J* 0G\n»1⁄41 ß( 0{4'@v* C4xx#$%4S*F.%04YKd4'@P'$%4Y * E&N* 0L* ßx#$%4/*F.%02*F'\"Ga;4'@v* E* E&N02C4±#$%4*5~\n.'04D4'0=w #6* 0+@P'$B(]R0)±#!4S.1*@u*54+02C4L<* Cd]'@* E@2%$B(\\02*5'62!1 M41#4.10w0D44Q@P~\n04'${0P4#$%4/*F.%R0|4DCR(]4±Z02E* E&J7 *<E4024e$B& (]4'E0=LCdU?'#02*F%7 7 2,U?2:.= 0|'()*FY%4\n9;12ED'@}.%',0P$%'7 7* E&V02C4[#$%4*5.'04a£WKd4'CS3*5'$%^jat?0}$= E02* (]4±0243v2,04'(\n.BC4.=<b2!B $\n#$%4/*F.%02*F'a£+#!020|4'$B:R&E*¡0w024}@2%$B(\\0121 N4'0a C#Y*x024}#$%4/*F.%R0|4Q4%@u*,*02*F'\"UC\n%02* @v*F4a2!1 [*@_024%$%4b*v){/*u.B$%4'#!C.j2,G\na+4O02C4O(].B$%{=EBh, \"\"%, !:0[4%@u*4OC4'91⁄2#$%4*5.'04BG_ß4B!()#754U\n9;4aæ7 7w4'@u*466#$%4S*F.%04U\nAASÆ/C'EA%E\nU(c)0|D0'<E46x* E&!7F46$B& (]4'E0=Up°cimBovG?szE*uJ#$%4S*F.%04\n4/w02C4}4%@2' C7 0*()#7F4%(\\4%,002*5'\"w@2'$X0D0'$%&E4}CQ$%4%#$%44'E002*5'¡U1⁄4bCb@F $B02C4'$\n$B& (]4'E0=)$%4J4S44{*O024L4%@u*,*02*F'\"G\nOeeA/O/O1ISAIÐO1A1e!O1eÆESA6AAÆRC'EA%ETO2Ee%iASeE/××\ncC.'4x#$%4/*F.%R0|4[CWKd44'>4%@u*4!Ua9;4x.%RN 4±* 0}* >2 ! C(wKE4'$O'@b#$%4S*F.%02*F%¡\n9?* 02/* @v@24%$%4',0\\$B& (]4'E0=BG(c)szE*u\\(]'<E4\\* 0+#!B*K!7F4Q0D'$B&EE*FY%4$%4'7504e<!C'9?7F4S&E4WK/2\n&!$%1 C#* E&6*00|'&E4'02C4'$G\nw%04x02CR0J21 Þ.%¬ 4[Kd/.<doR '04x9?* 02ß02C4[K$%/.<d4'0{C'002*F%>@2%$±#$%4*5.'02*5'\"BG_ I'$\n41(+#7F4\ni\nA=AAÆ/C%EA%ENi/OO/O1I%e/IÆIAASÆ/C'EA%E/IEAO1ISi/×'I\nðw4%$%4}$%4{'(]4}41()#754)'@_#$%4*5.'02*5'\"%\nAAAÆ/C'ESA%E6nASiAEÆeRC'AII\nAAAÆ/C'ESA%ExC'ESIiI%nÆSeÆEO1ESIII\nAAAÆ/C'ESA%E:o1ÆSI6ÆÐÐRC'A6ÆQeÆ%E!o1I\nd*.%4602C4'$%46*uLO'C4x4'0J9;12M'@]02,*d<* E&N'Kd1 0LO9;'$B7F!Uc9;4O.%RV41#$%4BW±&!*3!4%\n#*54.'4M%@}<!C'9?7F4S&E4:* o33$B*F4'052ß'@/* @v@24'$%4%,0#$%4*5.'02*5'¡BUa4'#!4%/* E&A'-9?0e~\n#!4.B0=b'@)* 0X$%4D* ()#'$B0,0]0e1 C${#$%1K7F4'(JG1⁄4yY46.%R\"U@2'$W* \"0.%4U1⁄4 4O4134'$%7a* @v@P4'$%~\n4'E0#$%4*5.'04a0L41#$%4Ba024J@P.B0`020a}#!4%$'O*ua47022EUI'$]02CR0a}#4'$'O*ua* 772\nAAAÆ/C'ESA%E6EESAII\nAAÆIIASAÆ/C'EAQEEAISI\nAAÆIIÐSIAN%OESIO1ÆE/EAII\nA1O'CC'IASIIEESAI6ÐISAN%OEIO1ÆI\nAÐIAN%O/EIO1ÆQEEAII\nc$O9;4.'ß$%4'7F04[4SR702-RCM* 7 74/Be.'%.%4'#0v \"7 7 2T$%4'@v7F4S.102*,&ß/* @v@24%$%4',0e004e%@\nKE4'*,&Uh{&E4'C4'$%7 *5Y'4J02C4'(1⁄20LD*,&!754}.%'C* 0P*F'6KR2Q * E&OD*,&!754b#$%4*5.'04\nAAÆIIeSEI%e!O1EO1EIE/EAI6ASAÆ/C'EASI\nAAÆIIeSEI%e!O1EO1EIE/EAI6ÐSIAN%OESIO1ÆI\nc$U?* @+'EN*uL02C4±'E7£2:#!02*54'E0b9?C4±.%'C*02*F'N*,0|4'$%40=J BU?9;4±.%T'()* 0L41#7*F.B* 0\n(]4',0P*F'['@'Eaa(]4J@u$%'(o024{004'(]4'E0=R70'&E4'0P4'$G\nAAÆIIeSEI%e!O1EO1EI6ASAÆ/C'EASI\nAAÆIIeSEI%e!O1EO1EI6ÐSIAN%OESIO1ÆI\n\nApril 2003\nJoshua Predications\nsz! BUh2!1 C$.BC'*F.%4e'@)#$%4*5.'04X$%4'@v7F4.B0=2!1 C$Q7£2E*ub'@)02C4#$%1K7F4'(JU02C4{<!*!L%@\n$%4'E* E&[21 ¬4B#4.B02!1 C$Q#$%'&!$%(o0Y/U;C[02C4Y(]1 C,0b'@<!C'9?7F4/&E4W2!1 N4S4\n0W41#$%4B+41#7 *5.1*027£2Y'$X* ()#7*F.B* 027 2,G1⁄4!* C.%4}#$%4*5.'04+$%4\\2!B $]3!S.''K C7F$2e@2%$L4%@u*,*,&\n341#75'$B* E&VO<%9c754&E4±%(\\*¡Uc#$%4/*F.%R0|4:4'754.B02*F'V*vQ[(]2A=%$e#$%BK!7F4%(\\~F'783*,&\n.1C7 754',&E4aL.1C*,&o02C4A.%'$B$%4.B0N4%0M'@[#$%4*5.'04/M0ß(]4'7W2!B $ <!C'9?7F4/&E4A.%\n&!$%4027£2x*(+#7 *@ 2{2!1 C$b#$%'&!$%()(+*,&O02<GIH1⁄4'$L.B'*5.'4/\\.%x7F4/D0{.17 (Jv26#$%%&!$%R(J\n9?* 02O0Sb(]2$= C7F4BG\n»1⁄41 o.%R\n\"\nC4%@u*4 \"\n#$%4S*F.%044'@v* E* 0P*F'\"@v$%'(\n4%* 02C4'$Y¤,(]/.RD'$Y02C4\n3⁄4\n*u#\n3⁄4\n*v04'C4'$G\nZ a`C4'@v* E* E&#$%4S*F.%04{*vX$%$%44134'E0)02C0].%'$B$%4#'!]0(]2A'$L$%4%$B&ERE*FY%02*F%\n'@b02C4[#$%'&!$%(JG¢^bs1⁄4[$%4'(]134x#$%4*5.'04x4'@v* E* 0P*F'¬9?E* 7F4D2!1 A$%4±* ¬¤E(]/.RBU#75.%4\n02C4¬.= $'$ 'o0P4N#$%4/*F.%04¬4%@u*,*02*F'÷Cß 4V02C4¬4B0|4'4o.%'()(](r)¥¦§> (c)* 77\na;4'@u*,*02*F%¡GhuO02C4\n3⁄4\n*u#\n3⁄4\n*v04'C4'$U\" 4J02C4b@F C.B02*F'{EBh, \"',!!G\nI'$X41(+#7F4\nOPNI%eA/ORO1IAIÐO1A%e!O1eSÆEANøPAAÆ/C'ESA%E×\nw%04M020e9?,*7F4O=EBI,¡£\"',dT$%4'(]134Y02C4Qfhgjikl mn!o8i[kEi2¶l qClFo l pqUR2\nfIgi=kCl m=n!ol pqEreK *7 0}9?* 02¬02E*u{#$%4/*F.%04[$%4'(]* ¬*¬02C4[9;'$B75: CE02* 72!1 A41#7 *F.B* 0P7£2$%4~\n(]134O02C4'(JGcðw'9;4134'$U7 (]0}2R0P04'()#0b0e 4Y02C44O#$%4*5.'02*5'\"W9?* 7 7+.%' 4±\n4'$B$%'$G`Z5,44O02C4:4.10P*F'\n\"\n4'(]13*,& HI$%4*5.'02*5'¡W $%%(u02C4±a;0'KE4 \"\nU;#R&E4O4'(]13~\n* E&E~8HI$%4/*F.%02*F'\"~8 $%'(]~802C4~a0'Kd4S~ !(c)Is1⁄42c)G¢^\ns6@u*3B 0b9?CR0b#$%4*5.'04/Q$%4±4'@v* C4* :2!1 C$6. C$B$%4'E0b9%$B7FdU(c) 4Y02C4±.%'()(\\C\ndC'9u! \"ßHI$%4/*F.%04BGXsIE*u#$B*,0024V#$%4/*F.%04T(]43CA0P4'*$V$B& (]4'E0=BG\nszC4'$%4$%4.%'()(\\CO'#02*F'\"]0{7F4'0`21 M0*7F'$L02C4*u#7FB2,G1⁄4HI7544D.%'\"2 C7 0)02C4*F.B02*5~\n$2e4'E02$2D@P'$]02,*v).%'()(]RCdG\n$%44S~8@v7F02*,&[#$%4S*F.%02*F%¡L2 .13]02C4{9;4a\n34wA| 0wK C* 70]$%4{'0w 'K!7F4{@P'$L$%4'C~\n* E&N'#4'$%02*F%¡bKd4.%S 4Y0P4xv2,04'(u4}C'0\\<E44'#:02$%/.=<N%@X0P4'(JG;sDKE4±%N$%4.'%$%dU\n#$%4/*F.%02*F'\"6(w 0QKE4M.'%7 7F4S.104SV*(r)NR0|SKd4302C0D02C4Vv2,0|4'(\n$%4.'%&!,*5Y'4YRCN$%4~\n(]4'(wKE4'$BG?c7vU%.%4#$%4*5.'02*5'\"6$%4*A0'KE4U_02C4 v2,04%(\n0'$%4e*02*F'C7\n* E@2%$B(\\02*5'uSKd1 C0602C4'(JU\\2 \".B O02C4'*$:02$= 0Po378 4G)sI4C410x4.B02*5' 47uO9?* 0P\n02C440'#*5.RBGtE44024O4.B02*5'\n\"\nHI$%4/*F.%R0P*F'\"BUtsz$= C02[u_7 \"4BUtO0P4a;R0|'KE4 \"\nU#!&E4\nHI$%4*5.'02*5'\"BU¢~ sI$= 0P~¢u_78 4BU¢~ C~024S~8a;0'KE4~ !Is2?+G\n\nJoshua Predications\nApril 2003\ny`dþC!¡/[yc!\"/R=`!!\nuN! U;#$%4*5.'04/$%4[T* ()#754'(]4'E002*F'C~ %$B&ERE*FYB* E&VW9;4'77\\Q±<%9c754&E4S~\n'$B&EE*FYB* E&±0%7uG1⁄4d*.%4X21 M.':'$B&EE*FY%4W$%4%7F04D@P.B0=)* * ()*7F$b@P,*5'±K/2O.'%¡*v~\n04'E0b#$%4*5.'04±.BC'*F.%4Uc*0}.%RT7uDKE4±.%'!3!4%,*54',0J0Y*(+#7F4'(]4'E0b02C4'(\n*V02C4(]4\n9;B2,GzEL#$%4*5.'04BU$%024%$X02CR±02C4'*$b$B& (]4'E0=BUhC'34#!4S.1*@u*5.J#$%'0.%'7c* ()#754'(]4'C~\n002*5'¡6BS.1*5R0|4 9?* 0P-02C4'(JGsIE*uD(]4¡D0P0Q*ß! [21 Þ.'\"U1* @\\2!1 A9?*u\"U\n4SR7`9?* 02 4/.BM#$%4/*F.%R0|4D* C4%#!4'C4'E027 2,U?C±&!*3!4* 0]* 0=L%9c: C,*5oR 4D9;B2:'@)*,04%$%~\n/.10P* E&9?* 02N0P46#$%'0|.'%72ac9?E* 7F4O4%@u*,*,& ±#$%4/*F.%04Q21 ß.'>#4.1*@ 2N2 .1N02E* E&\nb9cC4'$%4e#$%4*5.'02*5'¡X * E&M*0b$%4e0KE4[0%$%4MZ 0P,*vW.%1 C7FOKd4e* V2d C(wKE4'$D'@\n#75/.'4BU4134'¬%-4'#!$%04±.'%(+#/ 0|4'$[v2E04'(J^|U'$D9cC4'02C4'$6'$eC'01A2 0P* @v*F.%R0P*F'\"W@P'$\n* 0w$%4L0XKE4b$%4'(]4'(wKE4'$%4SdGh h'$W%(\\4b#$%4/*F.%04121 x(+*&!,09;,00#4.B* @2Y7 &E'$B*02C~\n()*F.-(]4%02SdN@2%$o\"94%$B* E&\no \"4/02*F'\"TSKd1 C0Nu#$%1K!754'(JUW9?E* 754o@2'$A'0P4'$:2!1\n()* &!E0+$%4SoR 40+$%4S%,*,&[(\\4%02SdBGuM'02C4'$}9;'$%!BU21 .'xμ)pkEi\n·\n02C4WKd4'CS3*5'${'@\n4/.B[#$%4*5.'04Uh()**,&±C(]0.1E* E&e3R$B*51 wK *7 0~* ±(]4'7vBUz'$b//* E&21 $b'9?\"G\nsI43!$B*51 L(]S4'7v]2!1 V()* &!E0\\ 4O$%4O7ue* C4'#4'C4'E0L'@X4/.BT%02C4'$G1⁄4»1⁄41 ¬.'\"U\n@P'$b4B!()#754UI4'@v* C4}Qs6(\\S4'71Z(]027£2^a9?* 02C1 C0@v@24S.102*,&602C4Q0'$%&E4b(\\S4'7Pah*\n02E*u\\9;B2D2!B C44O',7 2x.BE&E4Q02C4Q#'$B02*F%¡J'@w02C4Q#$%'0.%'7/* $%4.B027 2x@u@P4.B04eKR2\n2!1 C$ (]4%7uGX!* ()* 75R$B7 2,Ua2!1 C$ (]4%7 * E&o.1C'*5.'4$%4SoR C* $%4TCT(\\S* @v*F.%02*F%\n'@±'02C4'$\n<!C'9?7F4S&E4~7F4134'7_02$= .10v $%4BU1⁄42 .1[w$= C7F4/BG\nsI,*vV@v7F4B*K!*7 * 052\n*vT'4(r)%@d !a£V(]2A'$A3,0&E4BG}ða'9;4134'$U}02C4(r)4104'E00\n9?,*5.1x21 T414'$%.B*u4D* 0\\*uQ0P$B*F.B027£2± #x0}2!1 U* C.'4D* 0\\*uJ#!B*K!7F4D0D#$%'&!$%(\n4%@u@P4.%~\n02*3!4%7£2* 6! \"b * E&O%,7 2D02C4L4'@P' 70=BG\n?7 7}0P,*vO*uO* ()#7F4'(]4'E04V *,&A02C4&E4'C4'$B*5.3@F C.B02*F'\"[T@u75S3'$O(]4.BCRE*u(\n'@\n/2(wKE'7*F.)I'()(]'\n3⁄4\n*v#,G\nyY4}.%134'$X. 0'()*FY%4{#$%4S*F.%04J(\\S4'7vw* pr!n aiP¶2iBgi=qEm=i\n{nqdn\n·\nG\n4.2. Predications, Truth Values, and the Database\nsx(]'<E4:3#$%4*5.'02*5'A'3* 7F'K7F4x0±d U?2!1 NE1h£\\* 0{*,0:xk,no8n°Snr=iSG?\n0'KE46*u{¬4B0|4'¡*K!754±.'%7 7F4S.102*5'T'@X#$%4*5.'02*5'\"}0'&E4'0P4'$D9?*02¬B.B*F04S* E@P'$%~\n(]R0P*F'>'KE1 C0Q4/.Bß#$%4S*F.%02*F%¡GaHI$%4S*F.%02*F%¡D$%4[&E4'C4'$%04:KR2 02C4[#$%'&!$%()(]4'$±'$\nWO$%4/2 70L'@]$%4S%,*,&'C4DKR2:$= C7F4/%a?02C4=2M$%4Y4'E04'$%4[* E0e02C4OR0|SKd4DKR2:02C4\n#$%'&!$%()(]4'$Z5'$JK/2O02C46v2,0|4'(a*@w0P4=2[$%4{*,@P4'$B$%4K/2O$= C7F4^2G÷0'KE4{02! J.%'C~\n0* \")7 7?02C4b@P/.10=/d b<!C'9_)'KE1 C0w00P,*vw#!%* E0* O02*(]4UICQ* 0a.BE&E4)'2(]~\n*F.%7 7£2O9?* 02:4%9o@P/.10+KE4'*,&:/4O'$}$%4'(]134±JD$%42 C7 0]'@*E@24'$%4%.%4D'${.%'()# C0/~\n02*F%¡G\nHI$%4*5.'02*5'\"M*\n024-R0|SKd4A/* @v@24'$V@u$%%(\n@v$%44~8@v7FSR0P* E&÷#$%4S*F.%02*F%¡3@u*$0xKd4.%S 4\n02C4=2M$%4e$%4'(]4'(wKE4'$%4S±KR2:0P4[v2,04'(JUcRCM4.%'!U(c)Kd4.%S 460P42:CS34Y/*02*F%7a* C~\n@2%$B(\\02*5'\"U2 \".B02$= 0PO378 4BUzB.1*5049?* 02±02C4'(JGZFE44L02C4Dj4.10P*F'\n\"\nsz$= C02euaR75~\n\"4/ \"\nU#&E4}sI$= 0P~¢u_78 4~ !(c)Is1⁄42?+G¢^\n1[d 4'$U_21 $:(]* Þ* E04'$%/.10P*F'Þ9c*02(r)0P4NR0|SKd40'<E4O#75/.'433*FN029;\n@e CC.102*5'\"BUe=EBI£-C1⁄2E1hE1⁄4Ge=EBh jÞ0'$%4o004%(\\4%,0=o* E0\n02C4\n\nApril 2003\nJoshua Predications\n0'KE4G?ZFE44Q02C4Y4.B02*5'\n\"\nE04'$B*,&:CYa?*u#7FB2* E&xHI$%4/*F.%R0P*F'\"\\* :02C4Qa;R0|SKd4 \"\nU\n#!&E4oE04'$B*,&E~~8a?*u#7FB2* E&E~8HI$%4S*F.%02*F%¡~* C~802C4~8a;0'KE4~dIs1⁄42c)G¢^ME1hE1⁄4U\n(\\%,&ß* 0O%024%$x@F C.B02*F%¡BU`751< C#N<!C'9?7F4/&E4:* A0P4M0'KE4G)ZFE44:02C4N4.B02*F%\n\"\n\n4'$2*,&e02C4ba;0'KE4 \"\nU#!&E4\n\n4'$2*,&E~024S~8a;0'KE4~ !Is2?+G\n^\na;R0|SKd4}'#4'$%02*F%¡a* C.17 \"4b02C4J@2'77F'9?*,&\"\n-\nu\"4'$B02*,&e#$%4/*F.%R0P*F'\"w*,0J02C4}0'KE4\n-\na?*u#7FB2* E&60P4L0'KE4L.'%,04%,0=]Z 0|410=UI%$\\&!$%#E*F.\\@P'$B(]0^\n-\n3⁄4\nS1<!*,&e@2'$]#$%4/*F.%02*F'\"w*O02C4}R0|SKd4\n-\n4'(]13* E&6#$%4S*F.%02*F%¡a@u$%'(o024L0'Kd4\nszE*uX4S.102*5'.%134'$02C4JKE*5.R+'@102C4WSKd134W'#4'$%02*F'\"BGyY4W7uL*,02$%SR .'4L0P4L$%4'750~\n4{0'#*F.J'@_02$= C026378 4w0P0aR$%4LB.B*F04{9?* 02O#$%4*5.'02*5'\"w* O0P4L0'KE4G\ny`dþC!¡/[yc!\"/R=`!!\nsI4! \"±0'Kd4e#$%'0.%'7a#$%13*F4/W±4%@2' C7 0X(]4.BE*u(o@2'$D0Y$%4'#$%44'E0/~\n02*5':±0|'$%&E4GtZ5E44}024D4.B02*5'\n\"\nsI4b! \"{a0'Kd4}HI$%'0S.''7 \"\n*pr!niP¶2\niBgi=qEm=i\n{nq!n\n·\nG\n^]u@a2!1 V#$%13*F4OV7 0|4'$B04e* ()#7F4'(]4'E002*F%V'@]02C46$%4%7F413,0b.%'(]~\n#!%4'E0=X'@;=EBI£1}EBhE1⁄4U2!B .%R3. 0'()*5Y'4R0|D*41* E&x@P'$]2!1 C$\n##7 *F.%02*F%¡G}szE*u 9?*7 7vUL@P'$-41()#7F4/UL754'0[2!B a/.%.'4/BM<!C'9?7F4/&E4A*\n4B*v02* E&\n0'Kd4/Ua'$Y.'%(K* C02*F'\"Q'@L0'KE4W* 3$B*F1 W7F.%02*F'\"BGasI46! :.%'C.'4'#0\n'@]SlFg=o!n\n·\nkEn!on°nr=iQ41#$%4B4/J02E*uJ*54G;ZFE4402C4±4.B02*5'\n\"\n¡ 0'()*FYB* E&:02C4Da;0\nuC41 \"\n* pr!niP¶2iBgjiq,mi\n{nqdn\n·\nG¢^\n4.2.1. Entering and Displaying Predications in the Database\n¡ C.B02*5'¡%\nEBh£\nEBh\"\nEBh£ !\nI'()(]RCd%\n\nAE%U6E/EIANÆÆEÆSeÆIA\n754$+! \"La0'Kd4\nyY4J 4b024Wh'()(\\CHI$%.%4B'$b.%'()(]RC\nAE%UYEEISANÆÆESÆeÆIA\n0W*v#7FB2e0P4W.%'C~\n04'E0=)%@_024L0'Kd4/G?[4'()#0F2e0'Kd4J&E4'C4'$%04a024J@P'7 75'9?* E&O*v#7512C\n\nAE%U6E/EIANÆÆEÆSeÆIA\n\nO1NA6ESAO1IiI\n!\nEIA\n\"\nÆ/C'IAeEAO1IiSI\n!\nEIA\nszC43/*u#7FB2VC4/*,&\n\"\nsz$= 402E* E& \"\nC\n\"\nh7u40P,*,& \"\n$%4x@2'$O&!$%1 #* E&¬#$%4S*F.%/~\n02*F%¡a020`02C4Qv2,0|4'(¿<!C'9_w0|XKE4J02$= 4QZ02C4J9c*02[}02$= C026378 4}'@(c)EBh$#B1%#'^2U\n#$%4*5.'02*5'¡02CR0{02C4 v2E04'(\n<%910±KE4x@27v4 Z02C49?*02A302$= C02¬378 43%@\n=EBh&#'FB%#'^2U$%4#4.10P*834'7£2EGaZ5E44±02434.B02*5'\n\"\nsI$= C02u_78 4 \"\nU#R&E4xsI$= 0P~¢u_78 4~\ndIs1⁄42c)G¢^\n3⁄4\n4'0a4'@v* C4L}4%9A#$%4/*F.%04\n\nJoshua Predications\nApril 2003\nOeeA/O/O1ISAIÐO1A1e!O1eÆESA6AÆISIA%EAISeE/C'EO:O2ÐAOBIEI6eSE/C'EO'×S×\nw%9ÞB2 (]4)2!1 '$X}$= 754}##7 *5.'02*5'O&E4'C4'$%04L}#$%4/*F.%02*F':2 .B[%\nAAÆIIA1EAIeERC'EODORO1A%e±iO1AAII\nszE*ueC4'9a#$%4/*F.%R0P*F'A*v\n\"\n@u$%44S~8@v7F02*,& \"\nU`0P0*uBU`*064eC'0eS C0%(\\02*5.'77£2NKE4.%'(]4\n#!$B0a'@_02C4}R0|SKd4U¡ CE7F4Ba2!1 41#7*F.B* 027 264%,04%$\\* 0`02C4'$%4\\K/2&!*83* E&6*00wE1h uG\n=EBh j;0'<d402C4\n\"\n@v$%44~@u7502* E& \"\n#$%4*5.'02*5'\"UzQ$%4'0u C$B\"+Lk,no8n°nri;fhgji=kCl m=no l pqU\n02CR0)*uBU(c)M1KA=4S.10+0P0+*0b0%$%4Y*30P4D0'KE4DCY02C0\\.%Kd4D/.'.%4B4O6$%4/~\n'C4D9?* 02\"G1⁄4u0w*v+*()#!'$B0|RE0w0}C'04}02C0w02E*u]1KBA4.B0=UKd4.'' 4}* 0w*vb0|'$%4D9?* 0Px* E@P'$%~\n(]R0P*F'ß'KE1 C0}* 0=4%7 @U*u.%'.%4'#0u \"77£2¬Z5RC%@u04%¬#2,*5.'77£2!^b/*u0P* C.10}@v$%'(u02C4\n\"\n@u$%4S4~\n@u7502* E& \"\n#$%4/*F.%R0P*F'2!B M2 ##7 *54)[$B& (]4'E00|E1h£uG\nye4'C4134'$\\2!1 M44SY0DY'(]4'02E* E&x9c*02±0'$%4Y#$%4*5.'02*5'VZ@2'${41()#754U0|Q$%4~\n(]134:*0@v$%'(\n02C4M0'Kd4S^|Uc2!1 oC44 0M/.%.'4/Be02C4M/.10v \"7b1KBA4.B00P0*v[0'$%4SdG\n3⁄4\n04'$X'O9;4aæ7 7;*v. Bw9;B2,'@_$%4'02$B*5413* E&602E*u1KBA4.B0=G\nI'$N.B7F$B*0F2o9;4 4V02C4V04'$B(J±k,no8n°nriQfIgi=kCl m=no l pqU+9?4%4134'$*0±*ux*(+#'$B0E0±0\n$%4'@P4'$Q0e02C4O/.B0u R7w1KBA4.B0X02CR0X*v0|'$%4[* 02C4O0'KE4e$%024%$0P 0|OY#$%4S*F.%/~\n02*F%O* O(]'$%4J&E4'4%$%R7?04%$B(bBG\na+*,&L=EBI£?*u34%$2±02$%* &!E02@P'$B9;R$%Ea2!1 ##7£2D02C4EBh£?@e CC.102*5'O0b02C4\n#$%4/*F.%02*F'\"Uha* O02E*u41(+#7F4\nOPEA/CC[A=AÆIISA%EAIeSE/C'EO\n\"\nO1A%eOiO1AAISI/×\nA(*)\n\nI,+.-+I,/,021,0,3\n\"\n3,+,423,+,+\n!\nI\n\n=EBh j_$%4'0u C$B¡]02C4{#$%4S*F.%02*F%M1KA=4S.10)* 0J0|'$%46*:02C40'KE4Gu0]7v{$%4'0u C$B¡\n±Kd'7F4SR 3!7 \"4O* C*5.'02*,& 9?4%024%$602C4O#$%4/*F.%R0P*F'T*v}Kd4'* E& * \"4'$B04:@P'$60P4O@v* $0\n02* (]4Ua{*¬0P4[41()#7F4['KE134:Z5?^2Ua'$69?C4'02C4'$6*0{7 $%4S%2N4B*v04:* T02C4[0'KE4\nZ \"F^2G_sIE*uW* E@2'$B(]02*5'T*uQ'@J*,0|4'$%40L#$B*(\\$B*7£2M0O024[sI$= 0PN*,04%C.'4[/2,04'(JU\nY9;4Y9;'a\n0}79B2,}$%4%#$% \".%4Y* 0b*V02C4±1 C02#/ 0b@v$%'(u1 C$Y4B!()#754%ac9;4Y(\\4%,0P*F'N* 0\n4%$%4}'E7£2{KE4S.'' 4+2!B Iaæ7 7(c)Kd4Q44%* E&602E*u4134'$2D0P* (]4+21 4'E04'$J)=EBI£vG\nw%9(r)/*u#7FB2D02C4}0'KE4}'C.'4b(]%$%4UIb21 x9?*7 7c@v* CQ02C0* 0*.B78 4w02C4b#$%4S*F.%/~\n02*F%±9;4bC'3!41A2 0w4'E04'$%4{9c*02{=EBI£vG\nA=AÆSIIA%EASIeE/C'EOeORO1A%e±iO1ASAII\n##4$ C~\n4'$\n\"\nsI$= 4D02E* E& \"\nU(c)* C*5.'02*,&:02C0+d D<!C'9_J024±0|R0|4'(]4',0\\$%4%#$%44'E046K/2x02C4\n#$%4/*F.%02*F'O0|XKd4b02$= 4G\n\nAE%U6E/EIANÆÆEÆSeÆIA\n\nO1NA6ESAO1IiI\nA(*)\n\nI,+*-+I2/,0,1,0,3\n\"\n3,+,4,3,+,+\n!\nI\n\"\nÆ/C'IAeEAO1IiSI\n!\nEIA\ns-* C*5.'04-02CR0÷004'(]4'E0M*v @27v4UL#$14'@u*o02C4A#$%4S*F.%02*F%1⁄2$%4%#$%44'E02*,&\n0P0\n004'(]4'E0W9?* 0Pß02C4[#$%4*5.'04EBh ¡!BGa h'$±41()#754UaC4'$%4[9;4[04%7 7)! :0P0\n9;4X<'9ß!C4}4aæ0C'3!4J&!$%44'[42!4BG\nOPEA/CC[A=IEEA=AÆIISA%EAIeSE/C'EOLEÆIAeiO1AAISII/×\n¬\nA(*)\n\nI2+*-+I,/20,1,0,3QE,)\n!\n+4,3,+,+\n!\nI\n\nðw4%$%4WEBh£w$%4'0v $B\"}0P4O0'KE46#$%4S*F.%02*F%Tb 2 \"7uG;sI4\n3⁄4\n*v#:#$B*,04%$D#$%4~\n\nApril 2003\nJoshua Predications\n@u*4}0P46#$%4S*F.%02*F%N9?* 02N0P46a'0~e*&!N7F%&!*F.±v2(wKd'7uU_Z ¬\n^|U;4'%02* E&0P0J02C40|R0|4~\n(]4',0`*ua@27v4G\nuT02C4x0'KE4[*u#7FB202C4±#$%4*5.'02*5'>##!4$} C4'$602C4±C4/*,&\n\"\nh7u4±02E* E& \"\n9?* 02C1 C0w2D#$%4'@u*EG\n\nAE%U6E/EIANÆÆEÆSeÆIA\n\nO1NA6ESAO1IiI\nA(*)\n\nI,+*-+I2/,0,1,0,3\n\"\n3,+,4,3,+,+\n!\nI\n\"\nÆ/C'IAeEAO1IiSI\nA(*)\n\nI,+*-+I2/,0,1,0,3QE,)\n!\n+4,3,+,+\n!\nI\n3⁄4\n4'0a4'@v* C4L}@24%9A(]'$%4b#$%4*5.'02*5'\"BUI/{02C4'(1⁄20|b02C4L0'KE4LRC{02C4'[*v#7FB2* 0=G\nOeeA/O/O1ISAIÐO1A1e!O1eÆESAOC'E%n/AINOC%E%nAO{eA/C'E%n/A%e××\nOPEA/CC[ABC'E%nASI6eEI26EiÆSIAI/×\nOPEA/CC[A=IEEABC'E%nASIiÆISA6eEI26EII/×\n\nAE%UeEEIASNÆÆSEÆeÆISA\n\nO1NA6ESAO1IiI\nA(*)\n\nI,+*-+I2/,0,1,0,3\n\"\n3,+,4,3,+,+\n!\nI\nA1,0,72+\n!,9\n0E2)\n!\n+I\n\"\nÆ/C'IAeEAO1IiSI\nA1,0,72+\n\nE,)\n!\n+\n!,9\n0I\nA(*)\n\nI,+*-+I2/,0,1,0,3QE,)\n!\n+4,3,+,+\n!\nI\nszC4±0'KE4±*v#7512MR79;12ED'9_}02C4±/.B0u \"7w#$%4/*F.%02*F'\"{. C$B$%4'E027 2V0'$%4x02C4'$%4G\n7 *5.<Y'x2D* 04'(1⁄2* O02C4}*v#7FB2D@P'$+ 4b* Y! Q.%'()(]RCdw0P0$%4o *$%4}0'KE4\n#$%4/*F.%02*F'\"BG\nszC4:\nAE1UME/EIANÆ;ÆSEÆeÆISA\n.%'()(]OKR234'@P' 70b*v#7FB2,b02C4Y4'E02* $%4Y.%'E04'E0=}'@]02C4\n0'KE4G?sI,*v}.'3Kd4.'%(\\46. C(wKE4'$%(\\4D9?* 02334'$2x7F$B&E4Y0'KE4BG\n3⁄4\n04'$D%¡U(c)94a\n%91⁄2C'9o2!1 >.%RV7 *()* 0L02C4[0'Kd4±*u#7FB2:KR2M$%4oR 402*,&V'E7£2V#!4.B* @v*F.e#!0204%$B¡\n'$x#4.1*@u*5.Y0P$= 02N378 4BG_E44±02C434S.102*5'\n\"\nHI$%4*5.'02*5'\"RC\n3⁄4\n'&!*5.Qu_$B*5SK7F4 \"\nU#!&E4\nHI$%4*5.'02*5'\"~ ~\n3⁄4\n'&!*F.%~u_$B*5SK7F4~dIs1⁄42c)G\n»1⁄41 .'O$%4'(]134J#$%4/*F.%02*F'\"w@v$%'(1⁄20P4L0'KE4Lw9;4'7 7;)4%,04%$\\02C4'(JG\n,4S4U02C4\n4S.102*5'\n\"\n4'(]13* E&aHI$%4/*F.%R0P*F'\"A $%%(\n024÷a;0'KE4 \"\nUe#!&E4U4'(]13* E&E~\nHI$%4*5.'02*5'\"~8 $%%(\\~02C4~8a;0'KE4~dIsPc)G\ny`dþC!¡/[yc!\"/R=`!!\nsI4Y4%@2' C7 0b0'KE4e*ub* ()#7F4'(]4'E04}6kCl r=mBgl μ]l q,no l pq qEiBo]0|'$%4[* 024378 4\n'@w02C4Q&!751KE73$B*F'K!754Xu$#%!,,FB/'<J d!\"#G(c)E44{02464.B02*F%\n\"\n/d !a]a4S~\n@PS C7 0`a;0'KE402C4Jac*v.1$B*()* CR0P*F'Oa4'0 \"\n* pr!niP¶2iBgjiq,mi\n{nqdn\n·\nG\n4.2.2. Removing Predications From the Database\nszC4'$%4>$%4o4B3!4%$%R79B2,M%@±$%4'(]13* E& #$%4S*F.%02*F%¡:@v$%'(\n024ß0'KE4G\\a'04¬0P0\nfIgi=kCl m=n!oi)k,iP¶l qlFol pq,rX$%4J'0a4'7* ()* C04dU\"K C0a',7 2D0P4fIgi=kCl m=n!ol pqEr+K *7 0`9?* 02O02C4'(JG\n\nJoshua Predications\nApril 2003\nszC43@F C.B02*F'N=EBh¢\"b$%4%(\\B3!4/±¬* E&!7F43#$%4*5.'02*5'A@u$%'(\n02C40'KE4UwC\n@u$%4S4L C#V'(]4Y$%4'7F04SN|0'$%&E4G1}* 0=}CR(]4Y* ()#7 *F4/BU1⁄4EBh\"*u}024±'##!*04\n'@_02C4b@F C.B02*F%{=EBI£vG\ncC'02C4'$}9B2±0$%4%(\\B3!4De#$%4/*F.%02*F'3@v$%'(\n02C4e0'KE4e.%'C.'4%#0u 7 7£2±*uX0|{ 402C4\n@e CC.102*5'\nE1h¢dh1>=\n*@\n2!1 C$\n##7 *F.%02*F%\n*.B78 4/\n\ns\n(]4%7uG\n=EBh¢!h18?=N*@u@P4'$\\@v$%'(oEBh\"1* :* ()#!'$B0|RE0+$%4#4.10BG(c),44Q02C4Y4.B02*F%\n\"\n4'02$%/.10P* E&YHI$%4*5.'02*5'\"9?* 02QE1h¢dh1>= \"\nUh#!&E4b(c)4'0P$%.B02*,&E~HI$%4*5.'02*5'¡~9?* 02C~\n!ða;æa`1aa,s1⁄4u C»~dIs1⁄42c)GszC4±.'%(+(]C37F4$Q! \"±a0'Kd4Y#$%13*F4Q\n.'%d34'E*F4'E0[*E04'$B@P.%4T0|T02C4:E1h\"j@F C.B02*F'\"GXv02<0P4¬0'KE4T@P'$NR77\n#$%4/*F.%02*F'\"+(]R0|.1E* E&[0P/4e#!4.B* @v*F4KR2Y02C4QR$B& C(]4'E0=BUz#$%'()#0=a21 3@P'$}.'%,@v* $B(]/~\n02*F%¡U]RC=EBI\"u:4S/.1 #$%4S*F.%04GbZ5u0[R7v¬7 75'9_62!1 ÷0 C4'@v* C4¬77Q02C4\nd 3$= C7F4/BU1$%4/2 702* E&¬*A3@v$%4¬! \"4%d3*$%',(]4'E0=G¢^+»1⁄41 Þ.%(r)#!4S.1*@ 2N#$%4S*F.%/~\n02*F%¡e(\\0.BE* E&AN.%4'$B0* A#0204'$B\"Uw7 7J#$%4*5.'02*5'¡BUa'$['C4G;»B u.'Þ7uN#!4.B* @2\n9?4'0P4'$Y'$e%0}0|±$%4%(\\B3!4O#$%4S*F.%02*F%¡W02CR0L(]0.BT02C4±#0204'$BA#4.1*@u*54xK C0L'34\n02C4'##* 0|4{02$= C02x378 4G?Za)* E&x75'&!*F.J3$B*F'K!754]0}K *7F6#$%4*5.'02*5':#0204'$B\"]*uX4~\n.1$B*KE4x4%7u4'9?C4'$%4cE44D02C4±4.10P*F'\n\"\nHI$%4*5.'02*5'¡L\n3⁄4\n'&!*F.Ju_$B*F'K!754 \"\nU(c)#!&E4DHI$%4*5~\n.'02*5'\"~ ~\n3⁄4\n'&!*F.%~u_$B*5SK7F4~dIs1⁄42c)G¢^\n/SE%OOÆI1eA@//C%AÆO}E/EIANÆÆEÆSeÆIA O2ÐO1A%eO1eÆEOBEIIEiB)CC!iJEO\n!\nESIA:Ae/A/O'ÆN/C%E)CC%I/×)CSC\n/RC'AÆO{Æ/CCDÐO1A%e!O1eSÆEAIYO/O1E%OOEAAe/ÆEÆeÆSIA,C:A|eA/O'ÆNRC'E-ASIID@E-/AI\nsJ$%4'(]134\\n\n· ·\n#$%4*5.'02*5'¡a@u$%%(1⁄202C4}R0|SKd4U¡ 4J024J@F C.10P*F'{E1h£ !G\nOPe/C'AÆO%×\n\nAE%U6E/EIANÆÆEÆSeÆIA\n\nO1NA6ESAO1IiI\n!\nEIA\n\"\nÆ/C'IAeEAO1IiSI\n!\nEIA\n4.2.2.1. Removing a Database Predication with Untell\nuA02C4V4.B02*F'\n\"\n1⁄4,0|4'$B* E&ANa?*u#75B2* E&>HI$%4*5.'02*5'\"6* A024:a;R0|SKd4 \"\nU9;43(]4'C~\n02*F%4[02C0{4134'$%7`!/d ['#!4%$%R0P*F'\"L$%4o *$%4602C4O/.B0u \"7a#$%4/*F.%02*F'V1KA4.10X02CR0X*u\n0'$%4o*U02C4-0'KE4G=EBI\"D*uM'C4Þ2 .1\n'#!4'$%02*5'\"GbsI4%$%4-$%4o4134'$%7\n9;12E)'@_$%4'0P$B*F413* E&OL#$%4/*F.%R0P*F'[1KA4.10G\ncC4(]4'02CO*vX0e/*u#75B2[02C4e0'KE4e.%'E04'E0=be 40P4(]1 40#*F.=<[ C#[02C4\n1KBA4.B0w2!B N9;,0\\06%#!4'$%046%¡GZH1⁄4* 0P*F'M024D(]1 46.= $%$D0\\02C4±0$B0J'@)02C4D7 * C4\n*v#7FB2*,&e02C4}1KA4.10UICD.B7 *5.<e754'@u0a'O02C4b(]1 4G¢^_sIE*uw#*F.=<` #02C4}1KA4.10a{#~\n* 02*5'\"W* 0b9?4'$%4B3!4%$W2!1 C$Y.= $%$e*uBGszC4[BKBA4.B0Y(\\B3!4SM/*u#7FB2,W*¬.'#*07)*07 *5.R\nZu4S4}41()#754XKd4'7F'9;^2G\nI'$J41(+#7F4U0b$%4'(]134L0P4}0'KE4b#$%4/*F.%02*F'U\nAÆISIA%EAISeE/C'EO+EÆISAYiO1A1EI\nUI*u#7FB2\n02C40'KE4Ua4'E04'$Z¢E1h\"juU`(\\B34302C4M. C$'$'C4V#/.'4:0:02C43$B*&!,0UwC\n.17*F.=<N7F4'@v0{'¬02C4±0$B&E4'0}#$%4/*F.%R0P*F'¬@v$%'(u024xR0|SKd4/*u#7FB2,Gc!/d *¡4'$B0Q02C4\n#$%4/*F.%02*F'A0Q02C43. C$'$±#!/* 02*5'uZ5@u04%$[0P4eEBh\"F^2G1w%9\n4'E04'$x.B7F*,&\n$B* &!E0#$%4',0P4*vw0L4'C{024L.%'()(\\CdG\n\nApril 2003\nJoshua Predications\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2QSRUTM2O,V,G%W.X2YZ,M,O2O,Q%[.X]\\_^Q`aM2LbaOc%b,bade cfb,b\ng[.L,QhO,G%W.X,Y2K\n\\i*cF2j,k*lk,j2m,n,o,n,pqJ,cr,ks,p,k*ld\n\\i*cF2j,k*lk,j2m,n,o,n,pt,p,k,Ns,p,k,k2r,d\n\\o,n,u2k,Fv,n2r,w,nJ2cr,k,d\n\\t*cu2n,p'xg,k2j,y,k*coy,n,r,z2k*lFv.cr*cr*cF,d\nt2MbaK,QhO,G%W.X2Y,K\n\\o,n,u2k,FJ,cr,kv,n2r,w,n,d\nR>L,X,O2Qb,bE{U|~}A&%}Ef,e\nQ,X2O,Q%[qO2G,QZ%[Q*^'W.V,M2O%W.H,XP*VbW.V,%W.X2YbaQ`*O\nH,XO2G,QH,P.Q,V,OW.XO,G2Q^M,O2M,P,M,K,Qq^'W.K,ZbaM*\nrxo\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2Q\ng[.L,QO2G%W.X,Y,K\n\\i*cF2j,k*lk,j2m,n,o,n,pt,p,k,Ns,p,k,k2r,d\n\\o,n,u2k,Fv,n2r,w,nJ2cr,k,d\n\\t*cu2n,p'xg,k2j,y,k*coy,n,r,z2k*lv*cr*cr*cF2d\nt2MbaK,QO,G%W.X,Y2K\n\\o,n,u2k,FJ,cr,kv,n2r,w,n,d\n¡U¢_£a¤q¢>¥£§¦ (c).a«¬ (r)°«2± 3_μ¶¶·¢>¥£ %1¢o12»1⁄41f1⁄2£3⁄4¿AA¿*3⁄4AA£a¤Aa¿*3⁄4A¢_1,A3⁄4 1⁄2h¢?¥£Æ%¤*£, AAA*1¢?AA¿a3⁄4EC\nG,M,K,j,Q.Q,j\nV,HbaH[JM2X,Q§Y[.Q*aE_E\n3⁄4¿a¢>¥£a¤E1IS¢o¿IA£a¢1,¢ ¢>¥£:Æf¤*£, AAA*1,¢>AA¿a3⁄4E¿.»I£2A.¢ AI1⁄2¢_¿Ð1⁄2_Æ'£,AA¡UAAA*1,AANIO1⁄21aO'£:¢>¥£I¤*£1⁄2>OA¢¿*¡\n¢>¥£O¦ (c).a«¬(r)N3_μ¶¶\nE2O\n¿*¤×£.Ø1,UUÆfAA£%U\nR>K,Q,O.U^P,j2H,P*Q,V2O,jYÞR?O,Qb,b:\\baH*ßQ2Kr,M%[V%W.K,K,L2Kr,M%[V%W.K,K,L2K,de,e\n\\o,n,u,k,Fr*cp,mxF,F,a,Fr*cp,mxF,F,a,F2d\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2QSRUTM2O,V,G%W.X2YZ,M,O2O,Q%[.X]\\_^Q`aM2LbaOc%b,bade cfb,b\ng[.L,QO2G%W.X,Y,K\n\\i*cF2j,k*lk,j2m,n,o,n,pt,p,k,Ns,p,k,k2r,d\n\\o,n,u2k,Fv,n2r,w,nJ2cr,k,d\n\\o,n,u2k,Fr*cp,m'xF,F2a,Fr*cp,m'xF,F2a,F,d\n_X,Q*IZ[.Q*^'W.V2M,O%W.H,XH,P*Q2V,O:W.KM*^,^Q.^\n\\t*cu2n,p'xg,k2j,y,k*coy,n,r,z2k*lFv.cr*cr*cF,d\nt2MbaK,QO,G%W.X,Y2K\n\\o,n,u2k,FJ,cr,kv,n2r,w,n,d\nR>L,X,O2Qb,b^P,j,H,P*Q,V,O,jY2e\n?^P,j,H,P.Q,V,O,jYW.K]\\baH*ßQ2Kr,M%[V%W.K,K,L2Kr,M%[V%W.K,K,L2K,d\nrxo\n\nJoshua Predications\nApril 2003\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2QSRUTM2O,V,G%W.X2YZ,M,O2O,Q%[.X]\\_^Q`aM2LbaOc%b,bade cfb,b\ng[.L,QO2G%W.X,Y,K\n\\i*cF2j,k*lk,j2m,n,o,n,pt,p,k,Ns,p,k,k2r,d\n\\o,n,u2k,Fv,n2r,w,nJ2cr,k,d\n\\t*cu2n,p'xg,k2j,y,k*coy,n,r,z2k*lFv.cr*cr*cF,d\nt2MbaK,QO,G%W.X,Y2K\n\\o,n,u2k,FJ,cr,kv,n2r,w,n,d\naa¥£×Æf¤*£, AAA*1¢?AA¿a3⁄4\n\\baH.ßQ,Khr,M%[.V%WK,K,L,Khr,M%[.VW.K,K,L,KE\nAI1⁄2E3⁄4¿×AA¿a3⁄4A£a¤aA3⁄4¢>¥£§ %1¢o12»1⁄41f1⁄2£\nE\na¢>¥£a¤E1.I1⁄2B¿*¡¤*£a¢>¤Aa£.O%A3⁄4A:1 %1,¢_1a»1f1⁄2£hÆf¤*£, AAA*1,¢>AA¿a3⁄4:A3⁄4'O'¿*AæO£ %1,¢_1a»1f1⁄2£ cO £a¤AA£1⁄2B1,3⁄4 OA1⁄2_A3⁄4AA\nÆf¤*£, AAA*1,¢>AA¿a3⁄4Æ1,¢>¢_£a¤3⁄4D1⁄2\nE e\n£feeAAA£*¢e¢_¿×¢>¥£1⁄2£×¢_¿aÆfAaA1⁄2·AA1,¢_£a¤\nE\niA£2£i¢>¥£1⁄2£,A.¢?AA¿a3⁄4\n\"\ni\nOD£*¤_IfA3⁄4A¢>¥£×i1,¢_1a»1⁄411⁄2£ \"\nð\nÆ1,A£\ni\nOD£a¤_I%A3⁄4Anæ¢>¥£,næi1,¢_1a»1f1⁄2£,ni1⁄4ooooao>a÷\nE\niA£2£ø¢>¥£E1⁄2£,A¢>AA¿*3⁄4\n\"\nu\n¤*£2 AAA*1,¢>AA¿*3⁄4 1⁄2u1,3⁄4 Eu¿aA'AAAIu~1,¤AA1a»'Aa£1⁄2 \"\nð\nÆ1,A£\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4D1⁄2n1,3⁄4 %næu¿aA'AAA*n\nu~1,¤AA1a»'Aa£1⁄2ni'ooooao>a÷\nE\n4.2.3. Truth Values\ny¢?¤O¢?¥O1,AæO £iAI1⁄2U1iO1,AæO £§ f£*3⁄4¿a¢?A3⁄4AE¥1,¢e¢>¥£q1⁄2UIA1⁄2_¢_£*UþAO¤¤*£a3⁄4¢>ANIqy3⁄4¿*E\n1⁄2U1a»1⁄4¿.O¢e¢?¥£×¢>¤O¢?¥\n1⁄2_¢_1,¢_£¿a¡i1] f1,¢_1a»1⁄411⁄2£Æf¤*£2 AAA*1,¢>AA¿*3⁄4\nE\n\n¢>¤O¢?¥\nO'1,A$OD£»£,A*¿aUB£1⁄2q1f1⁄21⁄2¿2A.Aa1¢o£, uEA¢>¥\n1:Æf¤*£2 AAA*1n\n¢>AA¿*3⁄4\nE¥£a3⁄4¿1⁄2_¥'O 11 f '1⁄2;¢>¥£OÆf¤*£, AAA*1¢?AA¿a3⁄4\n¢_¿O¢>¥£E f1,¢_1a»1⁄411⁄2£\nE\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2ÞA*¿aUUUB¿a3⁄4ANI\nA.¥1,3⁄4AA£×¢>¥£aA¤B¢>¤O¢>¥O1A$OD£h1f1⁄2ey3⁄4¿aEAa£, A£×AI1⁄2OÆ f1,¢_£,\nE\nÆf¤*£, AAA*1,¢>AA¿a3⁄4:A*1,3⁄4»£×A3⁄4:1,3⁄4%I¿a3⁄4£h¿a¡~¡>¿O¤BÆ'¿1⁄21⁄2_A$»'AA£×¢>¤O¢>¥u1⁄2_¢_1,¢_£1⁄2*U\n-\n¦ (c).a«¬ (r).3«2μ a1,ÆfÆ£,1,¤,1⁄2eO3⁄4 %£a¤\n\"\nao¤O £i¢>¥A3⁄4A1⁄2 \"\nA3⁄4¢>¥£§ %1,¢_1a»1f1⁄2£§ AI1⁄2_Æ%AA1I\n-\n¦ (c).a«¬ (r)¬1⁄4¶a(c).μ a1Æ%Æ'£,1,¤,1⁄2O3⁄4 f£a¤\n\"\nO\n1,AU1⁄2£i¢>¥A3⁄4A1⁄2 \"\nA3⁄4¢>¥£§ %1,¢_1a»1f1⁄2£§ AI1⁄2_Æ%AA1I\n-\n¦ (c).a«¬ (r)«2±2±D ± a f¿2£1⁄2E3⁄4¿a¢·1Æ%Æ'£,1,¤BA3⁄4¢>¥£§ %1,¢_1a»1f1⁄2£§ AI1⁄2_Æ%AA1I\n-\n¦ (c).a«¬ (r) '±D3,¬3_ a1¢>¤*1,3⁄4 1⁄2_Aa£a3⁄4A¢§1⁄2_¢_1,¢_£ f¿2£1⁄2i3⁄4¿*¢i1,ÆfÆ'£21¤A3⁄4Þ¢>¥£ f1,¢_1a»1f1⁄2£ AI1⁄2n\nÆfAa1I\naa¥£×¢>¤O¢?¥O'1,A$OD£h¿a¡1§Æ%¤*£, AaAa1,¢>Aa¿a3⁄4:Aa1,3⁄4»£×UB1,3⁄4AAÆOAA1,¢_£, A¤*£,A¢>ANI»I¢>¥£O21⁄2£a¤\nE\noU¢EA*1,3⁄4:1Aan\n1⁄2¿i»1⁄4£§UB1,3⁄4AAÆOAA1,¢_£, »I¢?¥£ a qi!aao¤O¢?¥\"q1,A3⁄4¢_£a3⁄41,3⁄4A*£iIA1⁄2_¢_£aU#\nEAe\n£A*¿.O£a¤×¢>¥£aiA3⁄4\n11⁄2£aÆ1¤*1,¢_£1⁄2£,A¢>AA¿a3⁄4\nð\n¢o¿.O A.¥A3⁄4A]¿a3⁄4]A¢O¥£a¤*£¿a3⁄4ANI1f1⁄2B3⁄4£,Aa£1⁄21⁄21¤_I\nE\naiA£,£ ¢>¥£1⁄2£,A¢>Aa¿a3⁄4\n\"\nOA1⁄2_¢>A¡IAan\nAa1,¢>Aa¿a3⁄4\n1,3⁄4\naa¤O¢>¥\n1,A3⁄4A¢_£*3⁄41,3⁄4Aa£ \"\nð\nÆ'1,A£\nO21⁄2_¢>A¡UAAA*1,¢>AA¿*3⁄4n13⁄4 fnaa¤O¢>¥nq1,A3⁄4¢_£a3⁄413⁄4A*£,n\ni1⁄4ooooao>a÷\nE\n\n¿1⁄2_¥1⁄4O 1I¥1f1⁄21:¢>¥¤*£,£,n&O1,AæO £, uAa¿aA'AAA\nE\n\n1⁄2_¢_1,¢_£aUB£a3⁄4¢$Æ%¤*£, AaAa1,¢>Aa¿a3⁄4\naAU1⁄2a¦ (c)a «¬(r)%3.«2μA¡A¢1⁄2\n1,¤AfOUB£a3⁄4¢1⁄2§1,¤*£»£aAAA£.O£, :¢o¿:1⁄21¢?AI1⁄2_¡Iu¢?¥£Æ%¤*£, AaAa1,¢_£\nð\n1,3⁄4 ¦ (c).a«¬ (r)¬1⁄4¶a(c).μA¡BA¢AU1⁄2y'3⁄4¿aE3⁄4\n¢>¥1¢¢>¥£I f¿×3⁄4¿a¢\nE\ne\n¥£a3⁄4uUB12yA3⁄4A]3⁄4£aE\nÆf¤*£, AAA*1¢?AA¿a3⁄4D1⁄2\nð\n¦ (c)a«o¬(r)(r)\n±D '3AI1⁄2aÆ%¤*£a¡IA$Ø£, ¢_¿1¡?1A.¢¢>¥1,¢AI1⁄2By3⁄4¿aE3⁄4;¢_¿\n»£E¦ (c)a«¬ (r)¬'¶A(c)μ\nð\n1f1⁄2EA3⁄4\n\\X,H,O]\\baH*ßQ2KJM,X2Qv,H,X'&,H,d,d,E\noI¡U1¡?1A¢UAI1⁄2B3⁄4£aA¢>¥£a¤×y'3⁄4¿aE3⁄4u¢o¿ »1⁄4£a¦ (c)a«¬ (r).3«Aμ\nð\n3⁄4¿*¤iy3⁄4¿aE3⁄4u¢o¿§»£a¦ (c).a«¬ (r)¬1⁄4¶a(c).μ\nð\nA¢\nAI1⁄2O¦ (c).a«¬ (r)«2±2±D ±\nE\noI3⁄4\nAa1,3⁄4AAfO 1,A£1⁄21⁄2>O A¥ø1f1⁄2\nu\n¤*¿*AA¿aA\nð\nA¡a1¡?1A.¢iA*13⁄43⁄4¿a¢B»£Æ%¤*¿.O£, :¢_¿\n»£\n¢?¤OD£\nð\nA¢IAI1⁄2Ð1f1⁄21⁄2>OUB£, ¢_¿ø»£\n¡?1,AI1⁄2£\nE\n¿1⁄2_¥1⁄4O 1y %¿,£1⁄2)(*,+1⁄2>O»1⁄2A¤Aæ»£\n¢o¿\n¢>¥AI1⁄2S1⁄2¿,nA*1,AAa£,\n\"\noAAA¿1⁄2£,\ne\n¿*¤AA ×\n1⁄21⁄2>OUUÆf¢>Aa¿a3⁄4 \"\nE\n\nApril 2003\nJoshua Predications\n\nÆf¤*£2 AAA*1,¢>AA¿*3⁄4yAI1⁄2-a¿a¤»£,A*¿aUB£1⁄2.\nB¦ (c).a«¬(r)%«A±2±D ±/]E¥£a3⁄4y¢?¥£a¤*£;AI1⁄23⁄4¿]O1,AAa\n¤*£211⁄2¿*3⁄4\n¢>¥1¢1⁄2>OÆfÆ'¿*¤¢1⁄2§A¢\nE\n\nO\n¿*¤£.Ø1,UUÆfAA£\nð\nA¡×1Æf¤*£, AAA*1¢?AA¿a3⁄4SE1f1⁄2¦ (c).a«¬(r)%30«2μ»%O¢×¢>¥£¤*£211⁄2¿*3⁄4\nO3⁄4 f£*¤ANIfA3⁄4AA\n¢>¥AI1⁄2\n¢?¤O¢>¥\n1⁄2_¢_1,¢IO21⁄2\nAI1⁄2\n¤*£aUB¿.O£,\nð\n¢>¥£\nÆf¤*£, AAA*1¢?AA¿a3⁄4\n»£,A*¿aUB£1⁄2\n¦ (c)a«¬ (r)«2±2± ±/\nE\n\nOao¥£qÆf¤*£, AAA*1,¢>AA¿a3⁄4Þ %¿,£1⁄2¤*£*Ua1,A3⁄4;Æf¥%IA1⁄2_AAA*1,AANIA3⁄4;¢?¥£ f1,¢_1a»1f1⁄2£11⁄2×1,3⁄4\n£a¡U¡IAaA.Aa£a3⁄4A_IUB£,1f1⁄2>O¤*£A¥¿aE£.O£a¤\nð\n1⁄2_A3⁄4A*£iUB¿1⁄2_¢e¤*£211⁄2¿*3⁄4AA3⁄4AA¿*Æ'£a¤*1,¢>Aa¿a3⁄4 1⁄2EAa¿,¿.y¡>¿*¤×1§¢>¤O¢?¥O1,AæO £\n¿a¡\n¦ (c)a «¬(r)%3.«2μ\n¿a¤\n¦ (c).a«¬(r)%1¬1⁄4¶a(c).μ\nð\nÆ%¤*£, AaAa1,¢>Aa¿a3⁄4\nEA¢?¥\n¢>¤O¢?¥\nO1A$OD£\n¿*¡\n¦ (c)a«¬ (r)«2±2± ±/×AI1⁄2BA*¿a3⁄4A*£aÆf¢IO 1,AA\nI3⁄4¿a¢a1⁄2£,£a3⁄4\nE\nao¥1¢·AI1⁄2U¢o¿1⁄21I\nð\n¡U¤*¿aU\n¢>¥£§Æ'¿*A3⁄4¢U¿a¡~O%AA£aE\n¿a¡\n¢>¥£\n¤*£,1f1⁄2¿a3⁄4AA3⁄4AA\nÆ%¤*¿,A*£1⁄21⁄2\nð\nÆf¤*£, AAA*1,¢>AA¿a3⁄4\n¢>¥1,¢\n¥1f1⁄2\n¢>¤O¢>¥\nO'1,A$OD£\n¿*¡\n¦ (c)a«¬ (r)«2±2± ±/×AU1⁄2UA3⁄4 AU1⁄2_¢>A3⁄4AfOAI1⁄2_¥12»AA£h¡I¤*¿*U\n¿a3⁄4£§¢>¥1,¢EAU1⁄2U3⁄4¿a¢EA3⁄4:¢>¥£ f1,¢_1a»1⁄411⁄2£ 1,¢U1,AA\nE\ne\n¥£a3⁄4\nÆ%¤*£, AaAa1,¢>Aa¿a3⁄4AeN1⁄2\n¢>¤O¢>¥\nO1,AæO £\nA¥13⁄4A£1⁄2\n¡I¤*¿*U\n¦ (c).a«¬ (r)«2±2±D ±\n¢o¿\n£aA¢>¥£a¤\n¦ (c)a«¬ (r).3«Aμh¿*¤E¦ (c).a«¬(r)%1¬1⁄4¶a(c).μ\nð\n¢>¥£hÆf¤*£2 AAA*1,¢>AA¿*3⁄4:AI1⁄2¿a3⁄4Aa£hUB¿a¤*£\n\"\nO%AI1⁄2_Aæ»AA£ \"\n1,3⁄4 qO21⁄2£, A3⁄4\n¢>¥£iA3⁄4A¡?£a¤*£a3⁄4A.A3⁄4AAÆf¤*¿,A*£1⁄21⁄2\nE\naa¥£¦ (c).a«¬ (r)«2±2±D ±¢>¤O¢>¥\n1⁄2_¢_1,¢_£IAU1⁄2qO21⁄2£, ÞÆ%¤AUB1,¤AA\nIÞ»IS¢>¥£ua qi\n1f1⁄2A¢UB¿, A¡UAA£1⁄2\n¢>¥£§ %1¢o12»1⁄41f1⁄2£i¡?¿a¤aAa¿aA'AAA*1,AAa¿a3⁄4D1⁄2_AI1⁄2_¢o£a3⁄4A_I\nE\n\n1⁄2aA¢1⁄2a3⁄41,UB£AUUÆfAAA£1⁄2\nð\n¢>¥£¢>¤O¢>¥]O1,AæO £¿a¡1Æ%¤*£, AAA*1¢?AA¿a3⁄4;AI1⁄2e¦ (c)a«¬ (r) '±D3,¬23_ A¡\n¢>¥£a¤*£§1,¤*£i¤*£,1f1⁄2¿a3⁄4 1⁄2E¢_¿»1⁄4£aAAa£.O£i¢>¥1,¢e¢>¥£iÆf¤*£, AAA*1,¢>AA¿a3⁄4AI1⁄2e»¿a¢?¥¢>¤O £§13⁄4 q¡?1,AI1⁄2£§1,¢e¢>¥£q1⁄21,UB£\n¢>AUB£\nE\nao¥AAU1⁄2×¢>¤O¢>¥uO1,AæO £1,AI1⁄2¿AI1⁄2×Æ%¤AUB1,¤AA\nIIUB£,1,3⁄4A3⁄4A'¡OAA3⁄4\nA*¿a3⁄4aI>O3⁄4A¢>Aa¿a3⁄4ÐEA¢>¥\n1aiDUA¡\n1aqiIAI1⁄2BÆ%¤*£1⁄2£a3⁄4¢\nð\nA¢B f£*¢_£,A¢1⁄2×A*¿a3⁄4¢>¤*1 AaA.¢o¿a¤_I¢>¤O¢?¥S1⁄2_¢_1,¢_£1⁄21,3⁄4 f¿,£1⁄2B3⁄4¿a¢B1,AAa¿aE\n¢>¥£aU\n¢_¿\n¤*£aUB1,A3⁄4uA3⁄4u¢>¥£1⁄2UI1⁄2_¢_£aU\nE\noU¡E3⁄4¿ai:AI1⁄2aÆ%¤*£1⁄2£a3⁄4¢\nð\nAa¿*3⁄4A¢?¤*1 AAA¢>AA¿*3⁄4 1⁄2BA¿ O3⁄4 f£a¢_£2A.¢_£2\nð\n1,3⁄4 ¢>¥£\nUB¿1⁄2_¢\n¤*£,Aa£*3⁄4A¢\n¢>¤O¢>¥\nO1,AæO £\nAI1⁄2\n¤*£aUB£aUE»£a¤*£,\nE\niA£,£\n¢>¥£\n1⁄2£,A¢>AA¿a3⁄4\n\"\n£OfAU1⁄2_A3⁄4A\nu\n¤*¿*A'¤*1U\n4£aAAa£a¡_1⁄2 \"\nð\nÆ1,A£\n£.O%AI1⁄2_A3⁄4AAn\nu\n¤*¿aA'¤*1,Uan%4£aAAa£a¡_1⁄2ni'oooao>a÷\nE\naa¥£¢?¤O¢>¥SO1,AæO £I¿a¡h1IÆf¤*£2 AAA*1,¢>AA¿*3⁄4\nA*1,3⁄4OA.¥1,3⁄4AA£I£*A¢>¥£a¤»1⁄4£,A*12O21⁄2£I'¿O£ØfÆ%AAaA.A¢>ANIÐUa¿2 A¡I\nA¢\nð\n¿a¤11⁄2O1§¤*£1⁄2>OA¢·¿a¡~¢>¥£iUB¿a3⁄4A¢o¿a¤A3⁄4A1A¢>AæO%A¢?AA£1⁄2O¿a¡~¢>¥£§ai\nE\noI¡OI¿.O\n¥1aO£3⁄4¿*¢iA3⁄4A.A$OD %£, ;1IaiÞA3⁄4uI'¿.O¤Æ%¤*£, AaAa1,¢_£ %£a¡UA3⁄4A¢>Aa¿a3⁄4\nð\nI'¿.O\nA*1,3⁄4\nA¥1,3⁄4AA£¢>¥£\n¢>¤O¢>¥\nO1,AæO £u¿a¡ 1uÆf¤*£, AAA*1¢?AA¿a3⁄4O¡I¤*¿*U\n¦ (c)a «¬(r)%3.«2μ¢o¿¦ (c)a«¬ (r)¬'¶A(c)μ»IS¤*£,1f1⁄21⁄2£a¤¢>A3⁄4AA\n¢>¥£Æ%¤*£, AaAa1,¢>Aa¿a3⁄4ÞEA¢>¥¦ (c).a«¬(r)N3_μ¶¶\nE\noI3⁄4Þ¢>¥AI1⁄2hAa1f1⁄2£\nð\n¢>¥£:1⁄2UIA1⁄2_¢o£aU\n1⁄2_AUUÆ%ANI;1A*Aa£*Æf¢1⁄2×¢>¥£UB¿1⁄2_¢\n¤*£,A*£a3⁄4A¢a¡>1A¢OI'¿.OI¦ (c).a«¬ (r)\n3_μ¶¶·A¢\nð\nEA¢?¥\n3⁄4¿¤*£aA1,¤* :¢o¿AA¿*A'AAA*1AEAa¿*3⁄4 1⁄2_AU1⁄2_¢_£a3⁄4AI\nE65\n£*¤*£\nð\n¡?¿a¤£.Øn\n1,UÆ%AA£\nð\n1,¤*£i¢?E¿E¦ (c).a«¬ (r)\n3_μ¶¶~1⁄2_¢_1,¢_£aUB£a3⁄4¢1⁄2\nE\nR?O,Qb,b:\\baH*ßQ2Ky,Q*^Q,MJM2K,H,X,de\n\\o,n,u,k,Fy,k,N,k.cJ,cF2n,r,d\ng\nR?O,Qb,b:\\baH*ßQ2Ky,Q*^Q,MG,Q[.j,V,G%W*b^'[.Q,X2de\n\\o,n,u,k,Fy,k,N,k.ci,k,p2j,m,i'xo2N,p,k,r,d\ng\n£*¤*£feN1⁄2E¢>¥£§ %1,¢_1a»1f1⁄2£§ AI1⁄2_Æ%AA1IA*¿a3⁄4¢_1,A3⁄4A3⁄4A¢>¥£1⁄2£E¦ (c)a«¬ (r).3«AμaÆ%¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2\nE\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2Q\ng[.L,QO2G%W.X,Y,K\n\\o,n,u2k,Fy,k2N,k*ci2k,p,j,m,ixo,N,p,k2r,d\n\\o,n,u2k,Fy,k2N,k*cJ2cF,n,r,d\nt2MbaK,QO,G%W.X,Y2K\nr,H,X,Q\niA1IE£§3⁄4¿*E\nAI1⁄2A*¿.O£a¤i¢>¥1,¢7q£, f£,1q3⁄4¿ Aa¿a3⁄4AA£*¤iAA¿.O£1⁄2¥£a¤i¥'O21⁄2>»1,3⁄4\nð\n1f1⁄2¿a3⁄4\nð\n13⁄4 E£ E13⁄4¢\n¢_¿\nUa¿2 A¡I¢>¥£O f1,¢_1a»1⁄411⁄2£\n¢_¿\n¤*£a¡UAA£,A¢I¢>¥AI1⁄2]3⁄4£*E\n¡>1A¢\nE\na¿OA.¥1,3⁄4AA£\n¢>¥£\n¢>¤O¢>¥\nO1,AæO £\n¿*¡\n\nJoshua Predications\nApril 2003\n\\baH*ßQ,Ky,Q*^Q2MJM,K,H,X2d\n¡I¤*¿*U\n¦ (c).a«¬(r)%30«2μi¢_¿U¦ (c)a«o¬(r)%1¬'¶A(c)μ\nð\n¤*£2n£a3⁄4¢_£a¤×¢>¥£§Æf¤*£2 AAA*1,¢>AA¿*3⁄4\nA3⁄4¢_¿×¢>¥£h f1,¢_1a»1⁄411⁄2£\nð\n¢>¥AI1⁄2·¢>AUB£×Æf¤*£a¡UAæØ%A3⁄4AAA¢EA¢>¥¦ (c).a«¬ (r)(r)N±D '3*U\nR?O,Qb,b:\\X,H,O]\\baH*ßQ2Ky,Q*^Q,MJM2K,H,X,d,de\n¬\n\\o,n,u,k2Fy,k,N2k*cJ,cF,n,r,d\nrxo\n\nao¤O¢?¥8q1A3⁄4A¢o£a3⁄41,3⁄4Aa£ÐiIA1⁄2_¢_£*U\nE¿.OAA SA3⁄4 1⁄2_AU1⁄2_¢¢>¥1,¢9q£, f£21SA*13⁄43⁄4¿a¢»¿*¢>¥AA¿O'£Ð1,3⁄4 :(*,+\nAA¿.O£;1f1⁄2¿a3⁄4S1⁄2_AUEOA¢_1,3⁄4£,¿.O21⁄2_ANI\nE\ni'A3⁄4A*£qE£q¥1aO£q3⁄4¿a qiIA3⁄4;¢?¥AAU1⁄2×£.Ø1UUÆ%AA£\nð\n¿1⁄2_¥'O 11A*Aa£*Æf¢1⁄2\n¢>¥AI1⁄2×3⁄4£aE\nO£a¤,1⁄2_Aa¿a3⁄4\n¿a¡U¢>¥£Æ%¤*£, AaAa1,¢>Aa¿a3⁄4ÐEA¢>¥¿.O¢a3⁄4¿a¢>A3⁄4AA]¢>¥£A*¿a3⁄4¢>¤*1 AAA¢>Aa¿a3⁄4\nE\niA¿¢>¥£Aa1,¢_£1⁄2_¢\nO£a¤,1⁄2_AA¿a3⁄4\n£a3⁄4A¢o£a¤*£,\nR\\X2H,O\n\\baH*ßQ,K\ny,Q*^Q,MSJM,K,H,X2d,d\n\nð\n1⁄2_AUUÆfANI\n1⁄2>OÆ'£a¤,1⁄2£2 f£1⁄2I¢>¥£O¿aAa\nßQ%[.KW.H,X\nR\\baH.ßQ,Khy,Q*^Q,MJM,K2H,X,d\n\nE\n÷E¿*¢_£¢>¥1,¢U¢>¥£¤*£1⁄2>OA¢¿a¡·¢>¥£1⁄2£¢>E¿a¦ (c)a «¬(r)N3_μ¶¶\n¿aÆ'£a¤*1,¢>Aa¿a3⁄4D1⁄21a»¿.O¢<q£, f£,11,3⁄4 =1f1⁄2¿a3⁄4]AI1⁄2\n¢>¥£1⁄21,Ua£ f1,¢_1a»1f1⁄2££a3⁄4¢>¤_IA3⁄4u£21A¥uA*1f1⁄2£\nE\nao¥£§u2AI1⁄2_ÆÆf¤A3⁄4A¢_£*¤iÆ%¤A3⁄4¢1⁄2U¢>¥£§Æf¤*£2 AAA*1,¢>AA¿*3⁄4IEA¢?¥\n¢>¥£Ð÷·¿a¢_n1⁄2_AA'3⁄4\n1⁄2IfUE»¿aA\nð\n¬\n\nð\n¢?¥£ø1⁄2£,Aa¿*3⁄4 ø¢>AUB£\nð\n¢_¿ÐA3⁄4 AAA*1¢o£Ð¢>¥1,¢A¢A¥1,3⁄4AA£, øA¢1⁄2¢>¤O¢?¥\nO1A$OD£\nE\nao¥£\n1⁄2£,A*¿a3⁄4 Ð¦ (c)a «¬(r)N3_μ¶¶1,AI1⁄2¿Þ¤*£a¢IO¤3⁄4 1⁄2¢>¥£;»¿2¿aAA£,1,3⁄4\n±¶\nð\n¢o¿\nA3⁄4 AaAa1,¢_£Þ¢>¥1,¢¢>¥£\nÆf¤*£, AAA*1,¢>AA¿a3⁄4:1,A¤*£,1 aI£.Ø%AI1⁄2_¢_£, A3⁄4¢>¥£h f1,¢_1a»1⁄411⁄2£\nE\nF,G,H*IJH,K,G2L,MN,M2O,M,P,M,K2Q\ng[.L,QO2G%W.X,Y,K\n\\o,n,u2k,Fy,k2N,k*ci2k,p,j,m,ixo,N,p,k2r,d\nt2MbaK,QO,G%W.X,Y2K\n\\o,n,u2k,Fy,k2N,k*cJ2cF,n,r,d\na¿uA.¥1,3⁄4AA£;1;Æ%¤*£, AaAa1,¢>Aa¿a3⁄4AeN1⁄2¢>¤O¢>¥\nO1A$OD£I¡I¤*¿aU\n¦ (c).a«¬(r)%1¬1⁄4¶a(c).μ¢_¿¦ (c).a«¬(r)%30«2μ\nð\nO21⁄2£\n¦ (c)a«¬ (r)\n3μ¶¶U¢o¿¤*£,1f1⁄21⁄2£a¤¢i¢>¥£Æ%¤*£, AaAa1,¢>Aa¿a3⁄4øA3⁄4¢_¿¢?¥£ f1,¢_1a»1f1⁄2£\nð\nEA¢>¥¿.O¢h¢>¥£¦ (c)a «¬(r)(r)\n± '3\nÆf¤*£a¡UAæØ\nE\n¿2 A¡IfA3⁄4AA\n¢?¤O¢?¥\nO1,AæO £1⁄2IEA¢>¥¿.O¢OA1⁄2_A3⁄4AA\na qi\nAa1,3⁄4\nA3⁄4¢>¤*¿, ,ODA*£øA3⁄4Aa¿a3⁄4D1⁄2_AI1⁄2_¢o£a3⁄4AAA£1⁄2IA3⁄4¢_¿\nI'¿.O¤ %1¢o12»1⁄41f1⁄2£\nE\ni'A3⁄4Aa£¢>¥£u1⁄2UIA1⁄2_¢o£aU\nf¿2£1⁄2 3⁄4¿a¢h¡?¿aAAa¿aE\nOÆÐ¢?¥£AA¿aA'AaAa1,AAa¿*3⁄4 1⁄2£,c,OD£*3⁄4A*£1⁄2q¿*¡h1\nA.¥1,3⁄4AA£×A3⁄4¢?¤O¢>¥O1,AæO £\nð\n1,3⁄4fI1⁄2>ODA¥A3⁄4A*¿a3⁄4 1⁄2_AU1⁄2_¢_£a3⁄4A.Aa£1⁄2E¤*£*Ua1,A3⁄4O3⁄4 f£a¢o£,A.¢o£,\nE\niOÆfÆ¿1⁄2£\nð\n¡?¿a¤u£.Ø1UUÆ%AA£\nð\n¢>¥1,¢¢>¥£ø1⁄2£2Aa¿a3⁄4 øÆf¤*£2 AAA*1,¢>AA¿*3⁄4yA3⁄4¿.O¤u f1,¢_1a»1⁄411⁄2£\nð\n\\baH*ßQ2KEy,Q.^Q,M\nG,Q%[.j2V,G%Wab^[.Q,X,d\nð\nE1f1⁄2I f£2 O Aa£, ø»I\n1⁄2¿aUB£\n¡?¿a¤E1,¤* EA.¥1,A3⁄4A3⁄4Ay¤OAa£\nð\n»1f1⁄2£,\n¿a3⁄4\n¢>¥£Ð»£*AAA£*¡\n\\baH*ßQ,Ky,Q*^Q2MJM,K,H,X2d,E\nao¥1,¢EAU1⁄2\nð\n¢>¥£§¤OAa£Aa¿*3⁄4AAæO f£, ¢>¥1¢>q£, %£,1AA¿.O£1⁄2U¥£a¤hA¥AAAA ¤*£*3⁄4»1⁄4£,n\nAa1aO21⁄2£§¿*¡~¢>¥£×¡?1A¢¢>¥1,¢U1⁄2_¥£×AA¿O'£1⁄2>1f1⁄2¿a3⁄4\nE\ni1⁄4A3⁄4A*£ E£§¥1aO£§3⁄4¿aE\n¢o¿aAA ¢>¥£1⁄2UIA1⁄2_¢o£aUþ¢>¥1¢>q£, f£,1 %¿,£1⁄2?(*,+AA¿O'£@11⁄2¿*3⁄4\nð\n¢>¥£qA*¿a3⁄4AAæO21⁄2_AA¿*3⁄4\n¢>¥1¢1⁄2_¥£IAa¿.O£1⁄2¥£a¤:A.¥AAa ¤*£a3⁄4O3⁄4¿IAA¿a3⁄4A£a¤¡?¿aAAa¿aE~1⁄2\nE\nN ~1⁄2E£y'3⁄4¿aE\nð\n¢>¥£IUIf¢>¥AAA*1,AAq£, f£,1\nE£a3⁄4A¢¢>¥¤*¿.OA'¥O1⁄2¿aUB£:1⁄2>ODA¥\n¢>¥¿.OA'¥A¢Æf¤*¿2Aa£1⁄21⁄2\nð\nyAAAA3⁄4AÐ¥£a¤A.¥AAa ¤*£a3⁄4\n¢o¿I1⁄2_¥¿aE\n¥£a¤q¥1¢?¤*£,\n¿a¡B1f1⁄2¿a3⁄4\nE\n\ne\nA¢>¥¿.O¢ 1]ai\n¢?¥£]1⁄2UIA1⁄2_¢_£aU\nAA'3⁄4¿*¤*£1⁄2 ¢>¥£1⁄2£AU1⁄21⁄2>OD£1⁄2\nE\ni'Æ'£,AA¡UAAA*1,AA\nI\nð\n1f1⁄2 E£]1⁄2£,£¡U¤*¿aU\n¢>¥£\nAA1f1⁄2_¢ f1,¢_1a»1f1⁄2£ AI1⁄2_Æ%AA1I\nð\nA¢B1,AAA¿aE~1⁄2B¢?¥£ ¡>1A¢\n\\b*H*ßQ,K:y2Q*^Q,MG,Q%[.j,V2G%Wab^'[Q,X,d\n¢o¿¤*£aUB1,A3⁄4;1f1⁄21\nO1AAA §»£*AAA£*¡\nð\n£.O£a3⁄4¢>¥¿.OA'¥A¢¥1f1⁄2EAa¿1⁄2_¢A¢1⁄2·¤*£,1f1⁄2¿a3⁄4¡>¿*¤»£*A3⁄4A»£*AAA£O'£2\nE\naa¥£uai\n¿*3⁄4\n¢>¥£;¿*¢>¥£*¤¥1,3⁄4 Þ¡?¿aAAa¿aE~1⁄2qOÆS¢>¥£IAA¿aA'AaAa1,A×A*¿a3⁄4D1⁄2£,cO £a3⁄4Aa£1⁄2¿a¡1ÐA.¥1,3⁄4AA£IA3⁄4\n¢>¤O¢>¥O1,AæO £1,3⁄4 1⁄2_AA'3⁄41,AI1⁄2B1,3⁄4%I¤*£1⁄2>OA¢>A3⁄4AA3⁄4Aa¿a3⁄4D1⁄2_AI1⁄2_¢o£a3⁄4AAA£1⁄2UA3⁄4:¢>¥£ %1,¢_1a»1f1⁄2£\nE\noI3⁄4:¢>¥AI1⁄21⁄2_A¢IO 1n\n¢>AA¿*3⁄4\n¢?¥£a qi\nUUAA'¥¢h¥12O£Æf¤*£.O£a3⁄4¢_£, ]A3⁄4¡>1,3⁄4¢>AAAAA %£\nð\n1⁄2_A3⁄4A*£11⁄21⁄2£*¤¢>A3⁄4AEC\nX,H,O\nC\nbaH*ßQ,K:y,Q.^Q,M\nJM,K,H2XEIE\nE¿.OAa uAUUUB£, AA1,¢_£aA\nI\nAa1aO21⁄2£:1IE1,¤3⁄4AA3⁄4AA\n¢>¥1,¢C£, %£,1'eN1⁄2Aa¿.O£¡>¿*¤¥£a¤A.¥AAa ¤*£a3⁄4øAI1⁄2\n3⁄4¿Aa¿a3⁄4A£a¤1¢>¤O £¡?1A¢\nE\nao¥£aiÐE¿.OAa I¢>¥£a3⁄4S¤*£2cO £1⁄2_¢UI'¿.Oø¢_¿Aa¿a¤¤*£2A.¢×¢>¥£A*¿a3⁄4A¢?¤*1 AAA*n\n¢>AA¿*3⁄4»I¤*£aUB¿.O%A3⁄4A¿a3⁄4£§¿*¡~¢>¥£×A3⁄4A*¿a3⁄4 1⁄2_AU1⁄2_¢_£a3⁄4¢1⁄2_¢o1¢o£aUB£a3⁄4A¢1⁄2\nE\n\nApril 2003\nJoshua Predications\n\n1⁄2E£A*1,3⁄4\n1⁄2£,£\nð\nO £¢o¿¢>¥£qa qi]£a¡U¡>¿a¤¢1⁄2B¢_¿ UB1,A3⁄4¢_1,A3⁄4;1Aa¿aA'AAA*1,AANIA*¿a3⁄4 1⁄2_AU1⁄2_¢_£a3⁄4¢B %1,¢_1a»1f1⁄2£\nð\n1 f A3⁄4AA\n1]3⁄4£aE\nÆf¤*£2 AAA*1,¢>AA¿*3⁄4\nAa1,3⁄4\n¤*£1⁄2>OA¢§A3⁄4\nA¥1,3⁄4A£, ;¢>¤O¢?¥\nO1,A$OD£1⁄2¡>¿a¤I1⁄2£.O£a¤*1,Aa£.Ø%AI1⁄2_¢>A3⁄4AA\nÆf¤*£, AAA*1,¢>AA¿a3⁄4D1⁄2\nE\ni£,£]¢>¥£\n1⁄2£,A¢>Aa¿a3⁄4\n\"\n£.O%AI1⁄2_A3⁄4AA\nu\n¤*¿*A'¤*1U\n4£aAAA£a¡_1⁄2 \"\nð\nÆ1A£\n£.O%AU1⁄2_A3⁄4An\nu\n¤*¿aA'¤*1,UBn\n4£aAAa£a¡_1⁄2ni'oooao>a÷\nE\naa¥£D¿1⁄2_¥1⁄4O 1\nÆf¤*£, AAA*1,¢_£1⁄2\n¦ (c).a«¬(r)E2±D ±\n13⁄4\n¦ (c)a«o¬(r)EFGa H¬ID¶μ\n¥£aAÆ\nO21⁄2y %£a¢_£a¤UUA3⁄4£\nE¥1,¢eE£×y3⁄4¿aE\nE\n¦ (c)a «¬(r)EF* H¬ID¶μq¢o£aAAU1⁄2·O21⁄2EE¥£a¢>¥£a¤×1 ¡?1A.¢eAU1⁄2AO¤¤*£*3⁄4A¢>A\nIy3⁄4¿aE3⁄4¢_¿i¥1aO£\n1§Æ'1,¤¢>AaAOAA1,¤B¢>¤O¢?¥O1,A$OD£\nE\n¦ (c).a«¬ (r)J2± ±]¢_£aAAU1⁄2eO21⁄2EA¡~E£×¥1aO£y3⁄4¿aEAA£, A£§¿a¡1§¡?1A.¢K¤*£,n\nA1,¤* AA£1⁄21⁄2a¿a¡eE¥£a¢>¥£a¤i¢?¥£ ¡?1A.¢EAI1⁄2\n¦ (c).a«¬(r)%30«2μ ¿a¤O¦ (c)a«o¬(r)%1¬'¶A(c)μL\nE\n4¿a¢>¥I¢>¥£1⁄2£ Æ%¤*£, Aan\nAa1,¢_£1⁄21¤*£uUB¿*¤*£IOA1⁄2£a¡AOA×A3⁄4E¢>¥£aA¤:3⁄4£aA1,¢>AæO£u¡?¿a¤U\nC\nX,H,O\nC\nZ%[H*ßM,Pb*Q\n\\NMOMOMId2d,d\nð\nM,X*^\n\\X,H,O\nC\n2X,H*IX\n\\M'MOMId,d,d\n\nEO\n¿a¤1⁄2¿aUB££.Ø1,UUÆfAa£1⁄2h¿a¡¢?¥£aA¤§OA1⁄2£\nð\nÆfAa£,1f1⁄2£Aa¿*3⁄4 1⁄2>OA¢a¢>¥£ AAA¢>AA¿a3⁄41,¤_Iu£a3⁄4n\n¢>¤AA£1⁄2\nE\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4D1⁄2Aa¿aUE»A3⁄4£,\nEA¢?¥¢>¥£\n1⁄2_¢_1,3⁄4 f1,¤*\nÆ%¤*£, AaAa1,¢_£\nA*1,AAAOA$OA1⁄2A*¿a3⁄43⁄4£2A.¢>A$O£1⁄2¬1⁄4±/\nð\n\nð\n1,3⁄4 E±D '3uAa1,3⁄4\n»£]¦ (c).a«¬ (r).3«2μS¿a¤¦ (c)a«o¬(r)%1¬'¶A(c)μ\nð\n1A*Aa¿a¤* A3⁄4A\n¢o¿ø¢>¥£\n¤OAA£1⁄2]A3⁄4\n¢>¥£\n¢>¤O¢>¥\n¢o12»AA£1⁄2;AAI1⁄2_¢>A3⁄4AA\n¢>¥£O¢>¤O¢>¥\nO1,AæO £O¡>¿*¤O£21A¥\nÆ¿1⁄21⁄2_A$»'AA£EA*¿aUE»'A3⁄41,¢>Aa¿a3⁄4\n¿*¡]1,¤AfOUB£a3⁄4¢\n¢>¤O¢>¥O'1,A$OD£1⁄2\nE\niA£2£ ¢>¥£1⁄2£,A¢>Aa¿a3⁄4\n\"\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2B13⁄4 u¿aA'AaAa1,A\no¿a3⁄4A3⁄4£,A¢>AæO£1⁄2 \"\nð\nÆ'1,A£\nu\n¤*£2 AAA*1n\n¢>AA¿*3⁄4 1⁄2n13⁄4 fn$uo¿aA'AaAa1,Aanoo¿a3⁄43⁄4£2A.¢>A$O£1⁄2ni'oooao>a÷\nE\n4.2.4. Querying the Database\nO\nO3⁄4A¢>Aa¿a3⁄4 1⁄2*U\n¦ (c)a «¬(r)$¬(c)\n¦ (c)a «¬(r)QP,¬FDa/R2S'«Aμ,R%aμ%(c)«2¶3(c)\n¦ (c)a «¬(r)EFT±D3.R2S'«Aμ,\n¦ (c)a «¬(r)EFT±D3.R2S'«Aμ,R%aμ%(c)«2¶3(c)\n¦ (c)a «¬(r)$(c)*¬NGR2S'«Aμ,\n£*¤*£1,¤*£1⁄2¿aUB£Æ%¤*£, AAA*1¢o£ %£a¡IA3⁄4AA¢>AA¿*3⁄4 1⁄2h1,3⁄4 q¦ (c).a«¬(r)N3_μ¶¶1⁄2_¢_1,¢_£aUB£a3⁄4¢1⁄2i¢?¥1,¢×A.¤*£21¢o£1I1⁄2_AUBn\nÆfAa£§ %1¢o12»1⁄41f1⁄2£\nE\nR^Q`W.X2Q,j,Z%[.Q.^'W.V,M,O2QG,M,K2j,V,H,X*^W.O%W.H,X\nR>H,P*Q,V,OV2H,X*^'W.OW.H,XIG,Q,Xe,e\nR^Q`W.X2Q,j,Z%[.Q.^'W.V,M,O2QM*^LbaOSR>Z2Q%[.K,H,Xe,e\nR?VbaQ,M%[*e\nR?O,Qb,b:\\G,M,K,j2V,H,X*^'WO%W.H,Xt%[.Q*^TQ,M,Kb*Q,KO,H.^M*de\nR?O,Qb,b:\\M*^Lb*OJH,G2X,de\nR?O,Qb,b:\\M*^Lb*Ot%[.Q.^de\ne\n£§3⁄4£,£, 1 E1.I¢_¿ c,OD£a¤_I¢>¥AI1⁄2 f1,¢_1a»1f1⁄2£1⁄2¿h¢>¥1¢·E£ Aa1,3⁄4:¡UA3⁄4 ¿.O¢EE¥1,¢>¿1⁄2_¥'O 1§y'3⁄4¿aE~1⁄2\nE\naa¥£A£*3⁄4£a¤AaA¡O3⁄4A¢>Aa¿a3⁄4¦ (c)a«o¬(r)$¬(c)1 %¿,£1⁄2×¢?¥AAU1⁄2\nE\nao¥£Ua1,A3⁄4ÞÆO¤Æ¿1⁄2£¿*¡\n¦ (c).a«¬(r)$¬(c)OAU1⁄2×¢_¿\n¡IA3⁄4 1⁄2¿aA$O¢?AA¿a3⁄4D1⁄2¢_¿cO £a¤AA£1⁄2×1⁄2>ODA¥u1f1⁄2\n\"\no1⁄2?¿a¥3⁄4u1,3⁄4;1 ,OA¢VU \" \"\ne\n¥¿1,¤*£ ¢>¥£q1 ,OA¢1⁄2E£hy3⁄4¿aE\n1a»¿.O¢VU \" \"\ni¿ø1,3⁄4%Iy1 ,OA¢1⁄2IAO¤¤*£*3⁄4A¢>A\nIE¥1aO£ø AU1⁄2£,1f1⁄2£1⁄2U \"\noI¢ f¿,£1⁄2¢>¥AI1⁄2»IEAa¿,¿.yA3⁄4AyA3⁄4\n¢>¥£\nf1,¢_1a»1f1⁄2£1,3⁄4 q»IA3⁄41⁄4O¿.yA3⁄4A»1⁄41AyE1,¤* ¤OAA£1⁄2Ca1,3⁄4 c,OD£1⁄2_¢>AA¿a3⁄4D1⁄2.\n¢o¿ f£a¤A$O'£1,3⁄4D1⁄2_E£*¤,1⁄2O»I¤*£,1n\n1⁄2¿a3⁄4A3⁄4A\nE\n4£,A*12O21⁄2£ ¦ (c).a«¬ (r)&¬A(c)1yAU1⁄2I¿.O¤UB1,A3⁄4øA3⁄4A¢o£a¤¡>1A*£¢_¿¢>¥£y3⁄4¿*EAa£, A£1,3⁄4 ]¤OAa£]1⁄2_¢>¤ODA¢IO¤*£1⁄2\nð\nUB13⁄4%IÞ¿a¡aA¢1⁄2§¢AIfÆfAaAa1,AeOA1⁄2£1⁄2 %£aÆ'£*3⁄4 ;¿*3⁄4\nA*¿a3⁄4Aa£aÆ%¢1⁄2§E£¥12O£3⁄4¿a¢I£a¢§Aa¿O£a¤*£,\n1⁄2¿\nð\n¡?¿a¤¢>¥£\nUB¿aUB£a3⁄4A¢\nð\nE£A3⁄4¢>¤*¿, ,ODA*£i¦ (c).a«¬ (r)&¬A(c)1OA3⁄4ÐA¢1⁄2×UB¿1⁄2_¢»1⁄41f1⁄2_AAAq¡?¿a¤U\nEO\nO¤¢?¥£a¤£.Ø1,UUÆfAa£1⁄2h¿a¡UA¢1⁄2\nOA1⁄2£h1,ÆfÆ£,1,¤a¢>¥¤*¿.OA'¥¿.O¢¢>¥£×¤*£1⁄2_¢·¿a¡~¢>¥£iUB1,3⁄4'OD1,A\nE\n\nJoshua Predications\nApril 2003\niA£2£ø¢>¥£E1⁄2£,A¢>AA¿*3⁄4\n\"\nu\n¤*£2 AAA*1,¢>AA¿*3⁄4 1⁄2u1,3⁄4 Eu¿aA'AAAIu~1,¤AA1a»'Aa£1⁄2 \"\nð\nÆ1,A£\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4D1⁄2n1,3⁄4 %næu¿aA'AAA*n\nu~1,¤AA1a»'Aa£1⁄2ni'ooooao>a÷\nE\niA£2£O¢>¥£1⁄2£,A¢>AA¿*3⁄4\n\"\n¿aEW41AyE1¤*\nOAa£1⁄2\ne\n¿a¤y\n\"\nð\nÆ'1,A£\n¿aEn\n41AyE1,¤* %n\nOAa£1⁄2n\ne\n¿a¤y1⁄4nni'ooooao>a÷\nE\ni£,£\n¢>¥£\n1⁄2£,A.¢?AA¿a3⁄4\n\"\n~1⁄2>yA3⁄4Aþ¢>¥£DX1⁄2£*¤\ni\nOD£1⁄2_¢?AA¿a3⁄4D1⁄2 \"\nð\nÆ'1,A£a\n1⁄2>yA3⁄4Anæ¢>¥£,n%X1⁄2£a¤*n\ni\nO £1⁄2_¢>Aa¿a3⁄4 1⁄2ni1⁄4ooooao>a÷\nE\ni£,£§¢>¥£1⁄2£,A.¢?AA¿a3⁄4\n\"\nO21⁄2_¢>A¡IAaAa1,¢>Aa¿a3⁄4u1,3⁄4 ao¤O¢?¥\n1,A3⁄4A¢_£*3⁄41,3⁄4Aa£ \"\nð\nÆ1A£YOA1⁄2_¢?A¡UAAA*1¢?AA¿a3⁄4n1,3⁄4 fnao¤O¢>¥nQ1,A3⁄4A¢_£*3⁄41,3⁄4Aa£,ni1⁄4ooooao>a÷\nE\n¦ (c)a«¬ (r)&¬A(c)1\nE¿*¤y1⁄2B1f1⁄2U¡>¿*AAA¿*E\n1⁄2*UDI'¿OuA'A$O'£§A¢U1 Z[\\]_^@`aN+2+b\\]0(\nð\n¢>¥1,¢EAI1⁄2\nð\n1⁄2¿aUB£§Æ1,¢>¢_£a¤3⁄4:AA$y£\n\"\n¿a¥3⁄4OAU1⁄213⁄4\n1 OA¢ \"\n¢?¥1,¢I'¿OEE1,3⁄4A¢ ¢o¿O1AAA %1¢o£\nE\naa¥£]c,OD£a¤_I\nÆ1,¢>¢_£a¤3⁄4\nAI1⁄21]Æf¤*£2 AAA*1,¢>AA¿*3⁄4\n¢>¥1¢UB1I\nð\n¿a¤:Ua1I\n3⁄4¿a¢\nð\nAa¿a3⁄4¢_1,A3⁄4EAA¿aA'AaAO1¤Aa1a»'AA£1⁄2\nE\nuo¿*A'AAAO1,¤AA1a»'Aa£1⁄21,¤*£ÐA*¿.O£a¤*£,\n£aAU1⁄2£,n\nE¥£a¤*£%U~i£,£¢?¥£u1⁄2£,A¢>AA¿*3⁄4\n\"\nu\n¤*£, AAA*1¢?AA¿a3⁄4D1⁄21,3⁄4 uuo¿aA'AaAu~1,¤AA1a»'Aa£1⁄2 \"\nð\nÆ'1,A£\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4D1⁄2n1,3⁄4 %n\nuo¿aA'AaAan°u~1,¤AA1a»'Aa£1⁄2ni'ooooao>a÷\nE\n\n¦ (c)a«¬ (r)&¬A(c)1\nAA¿2¿.y1⁄2¡?¿a¤q1,3⁄4D1⁄2_E£a¤,1⁄2¢_¿q¢>¥£cO £a¤_I\nð\nAa¿*AAA£2A.¢>A3⁄4AAIA3⁄4¡>¿a¤UB1,¢>Aa¿a3⁄4Þ12»1⁄4¿.O¢BA¢1⁄2 1⁄2£,1,¤*A¥\nÆf¤*¿,A*£1⁄21⁄2O11⁄2·A¢A¿,£1⁄2O1Aa¿a3⁄4A\nE\n\n1⁄2h1⁄2¿,¿a3⁄4Ð1f1⁄2aA¢¡UA3⁄4 1⁄41⁄21,3⁄4Ð13⁄4D1⁄2_E£a¤\nð\n¦ (c)a«o¬(r)$¬(c)1\nÆ'1f1⁄21⁄2£1⁄21AAU1⁄2_¢aA*¿a3⁄4¢_1,A3⁄4A3⁄4AI¢>¥£1,3⁄4D1⁄2_E£a¤\nð\n¢o¿,n\nA£a¢>¥£a¤ EA¢>¥;¢>¥£¤*£aAA1,¢_£2 A3⁄4¡>¿*¤Ua1,¢>Aa¿a3⁄4\n1a»1⁄4¿.O¢B¥¿aE\n¢>¥£1,3⁄4D1⁄2_E£*¤E1f1⁄2i f£*¤AæO£,\nð\n¢o¿1¡AO3⁄4A*n\n¢>AA¿*3⁄4:Aa1,AAa£, 1@c1*'(+d2([a+d2*O(\nE\nao¥£hAa¿*3⁄4A¢>A3⁄41⁄4O 1,¢>AA¿*3⁄4:Aa1,3⁄4: f¿×E¥1,¢A¢AA$y£1⁄2·EA¢>¥¢>¥£§1,3⁄4D1⁄2_E£a¤\nE\naa¥£A3⁄4¡?¿a¤UB1¢?AA¿a3⁄4]¤*£,Aa£*AæO£, ¡U¤*¿aU\n¦ (c)a«o¬(r)$¬(c)1\n¤*£1⁄2_Aa f£1⁄2BA3⁄4u¢>¥£1⁄2_A3⁄4A'AA£A*¿a3⁄4¢>A3⁄4'OD1,¢>Aa¿a3⁄4Ð1,¤AfO n\nUB£a3⁄4A¢Aa1,AAA£, -eOac.fg6a]h\ni\n[``/*,]1+\nE\neOac1fg6aN]0h\n2i\n[``/*,]1+AI1⁄21]AAI1⁄2_¢ E¥¿1⁄2£]£*AA£aUB£a3⁄4¢1⁄21,¤*£fU\n¢>¥£\n1,3⁄4 1⁄2_E£a¤q¢_¿¢>¥£c,OD£*¤_I\nð\n¢>¥£¢?¤O¢?¥ÞO1,AæO £¿*¡a¢?¥£cO £a¤_I\nð\n13⁄4 :¢>¥£ f£a¤A$O1¢?AA¿a3⁄4\n¡?¿a¤¢>¥£1,3⁄4n\n1⁄2_E£a¤qn¢>¥1¢AU1⁄2\nð\nE¥1,¢AA3⁄4£¿a¡O¤*£211⁄2¿*3⁄4AA3⁄4AAIE1f1⁄2¡?¿aAAa¿aE£, ¢_¿ %£a¢_£a¤UUA3⁄4£q¢>¥£1,3⁄4 1⁄2_E£a¤\nE\n÷·¿a¢_£\n¢>¥1¢§1,A¢>¥¿OA'¥ø¢?¥£]1⁄2>OÆfÆ'¿*¤¢hAU1⁄2¿a3⁄4AA\nI\n¿*3⁄4££aAa£aUB£a3⁄4¢ ¿*¡¢>¥AI1⁄2§AAU1⁄2_¢\nð\nE£¤*£a¡?£a¤¢_¿¢>¥££a3⁄4A¢?A¤*£\nAAU1⁄2_¢E1f1⁄2e»1⁄41AyE1,¤* 1⁄2>OÆfÆ'¿*¤¢\nE\nAI1⁄2¿×3⁄4¿a¢_£×¢>¥1,¢¢>¥AI1⁄2EAAI1⁄2_¢AI1⁄2OA1⁄2>O 1,AANI1⁄2_¢_1AynA*¿a3⁄4D1⁄2£,\nE\naa¥£a¤*£q1,¤*£ ¢>E¿ E1.I1⁄2¿a¡E f£,1,AA3⁄4AAEA¢?¥]¢>¥£§»1⁄41AyE1,¤* :1⁄2>OÆfÆ¿a¤¢OA3⁄4¡>¿*¤Ua1,¢>Aa¿a3⁄4\nE\na3⁄4£ E1IAI1⁄2\n¢_¿O21⁄2£j¿1⁄2_¥'O 11⁄4eN1⁄2#ac.c1\\\ni.i\n*,]Kk[(c+2d2*'(\ni\nA3⁄4Ð¢>¥£i¦ (c)a«o¬(r)$¬(c)1EA*¿a3⁄4A¢?A3⁄4'OD1,¢>Aa¿a3⁄4\nE\nao¥£1⁄2£¡AO3⁄4A¢>AA¿*3⁄4 1⁄2\n»'¤*£,1ay:OÆ:¢>¥£q»1⁄41Ay'E1,¤* ;1⁄2?OÆ%Æ'¿a¤¢aA3⁄4A¢o¿1⁄2£aÆ1¤*1,¢_££aAA£*Ua£*3⁄4A¢1⁄2h1,3⁄4 AA£a¢EI¿.O\nA3⁄4¢_£a¤Æf¤*£*¢a¢>¥£1⁄2£\n£aAA£*Ua£*3⁄4A¢1⁄211⁄2 I'¿.OEAI1⁄2_¥\nE\ne\n£Þ AU1⁄2AO21⁄21⁄21A*Aa£1⁄21⁄2¿*¤I¡O3⁄4A.¢>Aa¿a3⁄4D1⁄2A3⁄4¢>¥£Þ AaA.¢?AA¿a3⁄41,¤_I\n£a3⁄4¢>¤_I\n¡?¿a¤\n¦ (c)a«¬ (r)&¬A(c)1\nE\n3⁄4:£,1f1⁄2_Aa£a¤aE1I¿a¡~Æf¤*¿2Aa£1⁄21⁄2_A3⁄4AA13⁄4D1⁄2_E£a¤,1⁄2E¢_¿hcO £a¤AA£1⁄2EAI1⁄2E¢_¿aOA1⁄2£Y¿1⁄2_¥1⁄4O 1'eN1⁄2>c1*O(mlL\\.(d2\\.(c.\\>k[(c\n\n+2d2*O(\ni\nA3⁄4¢>¥£¦ (c)a«¬ (r)&¬A(c)1\nAa¿*3⁄4A¢>A3⁄41⁄4O 1,¢>AA¿*3⁄4\nE\nao¥£1⁄2£;¡AO3⁄4A¢>AA¿a3⁄4D1⁄2£.Ø%¢>¤*1A¢Æ'1,¤¢1⁄2¿a¡q¢?¥£I»1Ay1⁄4n\nE1¤*\n1⁄2>OÆfÆ'¿*¤¢1,3⁄4 SA3⁄4¢_£a¤Æ%¤*£a¢A¢¡?¿a¤I'¿.O\nE<n\n£a3⁄4£a¤*1,AANI\nE£%eeAA»1⁄4£]O21⁄2_A3⁄4A\n¢>¥£ÞA*¿a3⁄4'O'£*3⁄4AAa£a3⁄4A*£\n¡O3⁄4A.¢>Aa¿a3⁄4D1⁄2¢>¥¤*¿.OA'¥¿O¢¢>¥AI1⁄2¡UA¤,1⁄2_¢UB1,3⁄41⁄4O 1,A\nEo5\n£*¤*£AU1⁄2i1AAI1⁄2_¢a¿a¡O¢>¥£1⁄2£q¡O3⁄4A¢>Aa¿a3⁄4 1⁄2\nE\nao¥£q¡UA¤,1⁄2_¢\n¢>E¿ f£21AEA¢>¥¢>¥£§13⁄4D1⁄2_E£a¤¢_¿h¢>¥£ c,OD£a¤_I\nð\n1,3⁄4 ¢?¥£ ¿*¢>¥£*¤×¢?E¿iA3⁄4¢_£a¤Æf¤*£*¢·¢>¥£h¤*£,1f1⁄2¿a3⁄4 1⁄2O¡?¿a¤\n¢>¥£§1,3⁄4D1⁄2_E£*¤\nE\n¦ (c)a«¬ (r)JFL±D31RS1⁄4«2μ,\noaØ%¢>¤*1A¢1⁄2U1,3⁄4 Æf¤A3⁄4¢1⁄2·¢>¥£h1,3⁄4 1⁄2_E£a¤B¢_¿×¢>¥£hcO £a¤_I\nE\n¦ (c)a«¬ (r)&(c)a¬RS1⁄4«2μ,\noaØ%¢>¤*1A¢1⁄2×¢>¥£c,OD£*¤_I;1,3⁄4 I AU1⁄2_ÆfAA1IA1⁄2×A¢aA3⁄4Þ¡>¿*¤Ua1,¢>¢o£, ¡>¿*¤U\nE\ni£,£\n¢>¥£\n1⁄2£,A¢>AA¿*3⁄4\n\"\nO\n¿a¤UB1,¢>¢>A3⁄4AA\nu\n¤*£2 AAA*1,¢>AA¿*3⁄4 1⁄2*U×¢>¥£i qpr£a¢?¥¿, \"\nð\nÆ'1,A£\nO\n¿a¤UB1,¢>¢>A3⁄4AAn\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2*U°n$¢>¥£2ni opnq£a¢>¥¿, %ni'oooao>a÷\nE\n¦ (c)a«¬ (r)JFL±D31RS1⁄4«2μ,GRb*μ%(c)«2¶3(c)\noaØ%¢>¤*1A¢1⁄2 1,3⁄4 IÆ%¤A3⁄4¢1⁄2h¢>¥£]1⁄2>OÆfÆ¿a¤¢×¡?¿a¤¢>¥£1,3⁄4D1⁄2_E£a¤\nE\naa¥£I1⁄2>OÆn\nÆ'¿a¤¢O1,¤AA£1⁄2 f£*Æ'£a3⁄4 A3⁄4AAE¿a3⁄4E¥£*¢>¥£*¤I¢>¥£Ð13⁄4D1⁄2_E£a¤:E1f1⁄2¡>¿O3⁄4\nA3⁄4¢>¥£h f1,¢_1a»1f1⁄2£h¿a¤× %£a¤AæO£, ¡U¤*¿aU\n¤OAA£1⁄2\nE\n¦ (c)a«¬ (r)sP2¬NF aRS1⁄4«2μ,GRb*μ%(c)«2¶3(c)\ni¤*1E~1⁄2:1SA'¤*1,Æf¥\n¿*¡¢>¥£ScO £a¤_I\n1⁄2>OÆfÆ¿a¤¢\nð\nAa12»1⁄4£aAA3⁄4AA¤OAA£1⁄2I1,3⁄4\ncO £1⁄2_¢>Aa¿a3⁄4 1⁄2\nE\n\nApril 2003\nJoshua Predications\n3⁄4\n1 f A¢>Aa¿a3⁄41,AAa¿a3⁄4'O£a3⁄4AA£a3⁄4Aa£E¡AO3⁄4A¢>Aa¿a3⁄4\nð\n¦ (c)a «¬(r)Qth¬F/Ræ Hμ,'R2¬'3¬NI ¬A(c)μRF*μ2%¬'30 '±2(c)uA3⁄4n\n1⁄2_¢_£,1 ¿a¡»1⁄41AyE1,¤*\n¤OAA£1⁄2.\nAI1⁄2OA1⁄2£a¡AOAE¥£a3⁄4I¿.O\nE1,3⁄4A¢¢_¿S¡UA3⁄4 13⁄4D1⁄2_E£a¤,1⁄2]¿a3⁄4AA\nIA3⁄4\n¢>¥£\nf1,¢_1a»1f1⁄2£q1,3⁄4 %¿1⁄2¿aUB£¿*Æ'£a¤*1,¢>Aa¿a3⁄4]EA¢>¥]¢?¥¿1⁄2£ Æ%¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2¢>¥1,¢I¿.O;¡IA3⁄4\nEe\n£ UB£a3⁄4¢>AA¿*3⁄4\n¢>¥AI1⁄2¡O3⁄4A.¢>Aa¿a3⁄4\n¥£a¤*£\n¡?¿a¤\nA*¿aUUÆfAa£a¢_£a3⁄4£1⁄21⁄2TO¡>¿*¤\n1,3⁄4\n£.Ø1,UUÆfAa£\n¿*¡A¢1⁄2O21⁄2£fUiA£,£\n¢?¥£O1⁄2£,A¢>AA¿*3⁄4\n\"\nu\n¤*£, AAA*1¢?AA¿a3⁄4D1⁄2\n1,3⁄4\nuo¿*A'AAA\nu~1,¤AA1a»'Aa£1⁄2 \"\nð\nÆ'1,A£\nu\n¤*£, AAA*1,¢>AA¿a3⁄4D1⁄2n1,3⁄4 fn$uo¿aA'AaAan°u~1,¤AA1a»'Aa£1⁄2n\ni1⁄4ooooao>a÷\nE\ne\n¥£a3⁄4)'¿1⁄2_¥1⁄4O 1AU1⁄2i1f1⁄2>y£2 1cO £1⁄2_¢>Aa¿a3⁄4ø1⁄2>O A.¥Þ1f1⁄2\nð\n\nM,K,\nC\nG2M,K\nn\nV2H,X*^'W.OW.H,Xt%[.Q*^TQ,M2KbaQ,KO,H*^M*d\nMOMOM>e\nð\nA¢×¢>¤Aa£1⁄2h¢_¿ f£*¤AæO£¢>¥£13⁄4D1⁄2_E£a¤¡U¤*¿aU\n¢>¥£ %1,¢_1a»1f1⁄2£»1⁄4£a¡?¿a¤*£Aa¿,¿.yA3⁄4AÐ¡>¿*¤»1Ay'E1,¤*\n¤OAa£1⁄2U1,3⁄4 cO £1⁄2_¢>AA¿*3⁄4 1⁄2·¢_¿i¤O3⁄4\nE5\n£a¤*£×E£h AU1⁄2AO21⁄21⁄2E¢?¥£h f1,¢_1a»1f1⁄2£×AA¿,¿yfOÆ\nE\ne\n¥£a3⁄4]¢>¤_IfA3⁄4AA:¢_¿1,3⁄4D1⁄2_E£*¤1cO £a¤_I\nð\n¦ (c)a «¬(r)$¬(c)vaAa¿a3⁄4A*£aÆf¢IO 1,AA\nI\neA¿,£1⁄2B¢>¥¤*¿.OA'¥u¢>¥£E¥¿*AA£\nf1,¢_1a»1f1⁄2£\nð\n¢?¤_IfA3⁄4AI¢_¿qUB1¢oA.¥;¢?¥£qÆ%¤*£, AaAa1,¢>Aa¿a3⁄4;Æ1¢?¢_£a¤3⁄4;A3⁄4;¢>¥£cO £a¤_II1,A1,A3⁄4D1⁄2_¢a1AA\nÆf¤*£2 AAA*1n\n¢>AA¿*3⁄4 1⁄2A3⁄4¢?¥£; f1,¢_1a»1f1⁄2£\nE\ne\n£]¤*£a¡>£*¤:¢_¿uÆ1,¢>¢_£a¤3⁄4EUB1¢oA.¥A3⁄4AOA3⁄4w¿1⁄2_¥'OD1\n1f1⁄2x[(dQkd2c.a+2d2*'(\nE\n\ncO £a¤_IÆ1¢?¢_£a¤3⁄4)[y(mdQkd2\\\ni\nEA¢>¥;1qÆ%¤*£, AaAa1,¢>Aa¿a3⁄4;£*A¢>¥£a¤»£2Aa1aO21⁄2£ ¢>¥£ ¢>E¿ Æ'1,¢>¢_£*¤3⁄4 1⁄2a1,¤*£z\\.Z[d{l\n\na|%\\1(m+#¢>¥1,¢AU1⁄2\nð\n¢?¥£IIAA¿2¿.yu¢>¥£1⁄21,UB£1,3⁄4 »1⁄4¿a¢>¥ÞÆ%¤*£, AaAa1,¢_£1,3⁄4 I1,¤AfOUa£*3⁄4A¢1⁄2×Ua1,¢oA.¥S£.Ø1A¢_n\nANI\nð\n11⁄2·A3⁄4\n}2L,Q%[Z,M,O,O,Q[.X~\nR>M2K,u\\G2M,K,j,V,H2X*^'W.O%WH,Xt%[Q*^TQ2M,KbaQ,KO,H*^M.dMOM'M>e\nN2M,O,M,P,M2K,QZ%[Q*^'W.V,M2O%W.H,X~\n\\G2M,K,j,V,H2X*^'W.O%WH,Xt%[Q*^TQ2M,KbaQ,KO,H*^M.d\n¿a¤h»£2Aa1aO21⁄2£1Æ%Æf¤*¿aÆ%¤AA1,¢_£O1,AæO £1⁄2iA*13⁄4]»£1⁄2>O»1⁄2_¢?A¢IO¢_£, ¡>¿a¤q1,3⁄4%IO1¤Aa1a»'AA£1⁄2A3⁄4Ð¢?¥£¢?E¿Æ1,¢_n\n¢_£a¤3⁄4D1⁄2B¢_¿UB1ay£¢>¥£aU\n£,c,OA$O'1,Aa£a3⁄4A¢\nE\niA£2£¢>¥£1⁄2£,A.¢?AA¿a3⁄4\n\"\nu\n1,¢>¢_£a¤3⁄41,¢_A¥A3⁄4AIA3⁄4)¿1⁄2_¥'O 11⁄4UqX3⁄4AAan\n¡IAaAa1,¢>Aa¿a3⁄4 \"\nð\nÆ1,A£\nu\n1,¢>¢_£*¤3⁄4nQ1,¢_A¥AA3⁄4AAn$A3⁄4n¿1⁄2_¥'OD1'U°nbX3⁄4A¡UAAA*1¢?AA¿a3⁄4ni'oooao>a÷\nE\ne\n¥£a3⁄4\n1]cO £a¤_IÐÆ1¢?¢_£a¤3⁄4E1⁄2>ODA*Aa£2£, 1⁄41⁄2 A3⁄4\nO3⁄4AA¡IfA3⁄4AA\nEA¢>¥O1:Æ%¤*£, AaAa1,¢>Aa¿a3⁄4\nð\n¢?¥£:c,OD£*¤_IÐÆ'1,¢>¢_£*¤3⁄4\n»£,A*¿aUB£1⁄2U¢_£*UÆ¿a¤*1,¤AA\nId2(\ni\n+ba(+d2a+b\\.hÐ1f1⁄2U¢>¥1,¢EÆf¤*£, AAA*1,¢>AA¿a3⁄4\nE\nao¥1,¢EAU1⁄2\nð\n¢>¥£§AA¿aA'AaAO1,¤AA1a»AA£1⁄2UA3⁄4\n¢>¥£\nc,OD£a¤_IþÆ'1,¢>¢_£*¤3⁄4\n1,¤*£\n¢_£aUUÆ'¿*¤*1¤AANI\n»¿.O3⁄4\n¢_¿\n¢>¥£\nA*¿a¤¤*£1⁄2_Æ'¿*3⁄4 A3⁄4A\nO1A$OD£1⁄2yA3⁄4\n¢>¥£\nf1,¢_1a»1f1⁄2£\nÆ%¤*£, AAA*1¢?AA¿a3⁄4\nE\n¢:¢>¥AI1⁄2]Æ¿aA3⁄4¢¿1⁄2_¥'OD1EA*1AAI1⁄2]¢?¥£u¦ (c)a «¬(r)$¬(c)þA*¿a3⁄4¢>A3⁄4'O 1¢?AA¿a3⁄4\n¢_¿\nÆf¤*¿,A*£1⁄21⁄2×¢>¥AI1⁄2h1,3⁄4 1⁄2_E£a¤\nE\naaa¥£Aa¿a3⁄4¢>A3⁄41⁄4O 1,¢>AA¿a3⁄4ÞAU1⁄2§A*1,AAa£, I¿a3⁄4Aa£¡?¿a¤£21A.¥Þ¢?AUB£¢?¥£c,OD£a¤_IuA*1,3⁄4\n»£1⁄21,¢>AI1⁄2_¡UAA£,\nE\n\n£*¤*£feN1⁄2¢?¥£]cO £a¤_I\nð\nO21⁄2_A3⁄4A\n¢?¥£]A*¿a3⁄4'O'£*3⁄4AAa£a3⁄4A*£:¡O3⁄4A.¢?AA¿a3⁄4Ð¦ (c)a «¬(r)EFT±D3.R2S'«Aμ,EA3⁄4\n¢>¥£uA*¿a3⁄4n\n¢>A3⁄4'O 1¢?AA¿a3⁄4\nE\ni'A3⁄4Aa£¢?¥£c,OD£*¤_IÐAa1,3⁄4Ð»£1,3⁄4D1⁄2_E£*¤*£, :$»Iu¡UA3⁄4 A3⁄4AA\n1UB1,¢_A.¥A3⁄4AÐÆf¤*£2 AAA*1,¢>AA¿*3⁄4SA3⁄4\n¢>¥£ f1,¢_1a»1⁄411⁄2£'\nð\n¢>¥£ Aa¿*3⁄4A¢>A3⁄41⁄4O 1,¢>AA¿*3⁄4IAU1⁄2BA*1AAA£, ¢_¿hÆf¤*¿,A*£1⁄21⁄2U¢>¥£1,3⁄4D1⁄2_E£a¤\nE\n¦ (c).a«¬(r)EFT±D3.R2S1⁄4«2μ,\nAU1⁄2_ÆfAA1IA1⁄2O¢>¥£c,OD£a¤_IEA¢>¥:A¢1⁄2EO1,¤AA1a»'Aa£1⁄2UA3⁄4 1⁄2_¢_1,3⁄4¢>AA1,¢_£2\nð\nAA'3⁄4¿a¤A3⁄4A:1,AA¢>¥£§¤*£1⁄2_¢U¿a¡¢>¥£×»1Ay1⁄4n\nE1¤* 1⁄2>OÆfÆ¿a¤¢eA3⁄4A¡?¿a¤UB1,¢>AA¿*3⁄4\nE\nR?M,K,u\\G,M,K,j,V2H,X*^'W.OW.H,Xt[.Q*^TQ,M,KbaQ2KO,H*^M*d9/>Z%[,W.X2O,j*UL,Q[fe\n\\i*cF,j,m2n,r,N'xgxn,rt2p,k,Ny2k*cF,o,k2Fg,n,N.c,ld\nO\n¿a¤AAAæO21⁄2_¢>¤*1,¢>AA¿*3⁄4\nð\nAA£*¢eN1⁄2O21⁄2£I¢?¥£]A*¿a3⁄4A¢?A3⁄4'OD1,¢>Aa¿a3⁄4O¡AO3⁄4A.¢?AA¿a3⁄4Ð¦ (c).a«¬(r)EFT±D3.R2S1⁄4«2μ,R%aμ%(c)«A¶3(c)¢_¿\n1⁄2_¥¿*E¥¿*E8¿1⁄2_¥1⁄4O 1 %£a¤AæO£, ¢>¥£§1,3⁄4D1⁄2_E£a¤a¢_¿h¿.O¤×c,OD£a¤_I\nE\nR?M,K,u\\G,M,K,j,V2H,X*^'W.OW.H,Xt[.Q*^TQ,M,KbaQ2KO,H*^M*d9/>Z%[,W.X2O,j*UL,Q[j%[.Q2K,LbaO,Ke\n\\i*cF,j,m2n,r,N'xgxn,rt2p,k,Ny2k*cF,o,k2Fg,n,N.c,ldK2L,V,V,Q,Q.^Q*^\n\\i*cF2j,m,n,r,Nxg'xn,rt,p,k,Ny,k*cF2o,k,Fg2n,N*c,ldqIM,KO%[.L,QW.XO,G2Q^M,O2M,P,M,K,Q\n\n1⁄2£Ø%Æ'£,A¢_£,\nð\n¿1⁄2_¥1⁄4O 1I¢_£aAAI1⁄2§O21⁄2¢>¥1,¢§¢?¥£I1,3⁄4D1⁄2_E£a¤E11⁄2¡?¿.O3⁄4 uA3⁄4\n¢>¥£I f1,¢_1a»1⁄411⁄2£\nð\n13⁄4 u¤*£,n\n¢IO¤3⁄4 1⁄2 ¢>¥£;1⁄2>OÆfÆ¿a¤¢h¡>¿*¤¢>¥£u1⁄21¢?AI1⁄2_¡UAA£, ÐcO £a¤_I\nð\n¢?¥1,¢hAI1⁄2\nð\n¢>¥£I1A¢IO 1AB %1,¢_1a»1f1⁄2£I¿»I£,A¢§¢?¥1,¢\nUB1¢oA.¥£, Þ¢>¥£;cO £a¤_I\nEe\n¥£a3⁄4\n¢>¥£;1,3⁄4D1⁄2_E£a¤AI1⁄2 f£a¤A$O£,\n¡U¤*¿aU\n¤OAA£1⁄2\nð\n¦ (c)a«¬ (r)JFL±D31RS1⁄4«2μ,GR\naμ%(c)«2¶3(c)a¢>¤*1Aa£1⁄2E¢>¥£§A¥1A3⁄4:¿a¡~¤*£,1f1⁄2¿a3⁄4A3⁄4A¢>¥1,¢¦ (c)a «¬(r)$¬(c);¡>¿aAAA¿aE£,\nE\n\nJoshua Predications\nApril 2003\ne\n¥1,¢BE¿.OAA 1A'¤*1,Æf¥Þ¿a¡U¢?¥£1⁄2>OÆ%Æ'¿a¤¢BAa¿,¿.yIAA$y£LU\nO\nAAfO¤*£1f1⁄2>y1⁄4næA'¤*1,Æf¥n2 1⁄2_¥¿aE~1⁄2¢?¥£A'¤*1,Æ%¥\n¤*1,E3⁄4»I×¦ (c)a«¬ (r)sP2¬NF aRS1⁄4«2μ,GRb*μ%(c)«2¶3(c)a¡?¿a¤a¢?¥£h1a»¿.O£hcO £a¤_I\nE\nO\nAAfO¤*£C\nE\ni'AUUÆfAa£§£Ø'1,UUÆfAa£O21⁄2_A3⁄4A¡AO3⁄4A¢>AA¿*3⁄4A'¤*1Æ%¥ncO £a¤_I'n$¤*£1⁄2>OA¢1⁄2\naa¥£\nA'¤*1,Æf¥\n¢_£aAAI1⁄2IOA1⁄2u¢>¥1,¢I¢>¥£\nÆf¤*£, AAA*1¢?AA¿a3⁄4\nE1f1⁄2uA3⁄4\n¢>¥£E %1,¢_1a»1f1⁄2£\nð\n1,3⁄4\nAU1⁄2_ÆfAA1IA1⁄2u¢>¥£\nf1,¢_1a»1f1⁄2£\nÆ%¤*£, AaAa1,¢>Aa¿a3⁄4\nA3⁄4D1⁄2_AA %£\n¤*£,A¢_1,3⁄4AA'Aa£\nE\n£2A.¢_1,3⁄4A'AA£1⁄2\nA3⁄4\n1⁄2>OÆ%Æ'¿a¤¢yA'¤*1,Æf¥D1⁄2\n%£a3⁄4¿a¢_£\ncO £a¤AA£1⁄2E¢>¥1,¢eE£a¤*£1⁄21,¢>AI1⁄2_¡UAA£, §»I¢>¥£h f1,¢_1a»1f1⁄2£9¤*1,¢>¥£a¤a¢?¥1,3⁄4»I¤OAA£1⁄2\nð\n¿a¤×c,OD£1⁄2_¢>AA¿a3⁄4D1⁄2.\nE\noI¡\nI'¿O¦ (c)a«o¬(r)$¬(c)1\n12»1⁄4¿.O¢B1qÆf¤*£, AAA*1¢?AA¿a3⁄4]¢>¥1,¢UAU1⁄2B3⁄4¿a¢OA3⁄4]¢>¥£q f1,¢_1a»1f1⁄2£\nð\n13⁄4 ¢>¥1,¢BA*1,3⁄4A3⁄4¿a¢\n»£ %£a¤AæO£, :¡U¤*¿aU\n¤OAa£1⁄2 ¿*¤c,OD£1⁄2_¢>AA¿a3⁄4D1⁄2\nð\n¢>¥£I1⁄2UI1⁄2_¢_£aU\nf¿,£1⁄2i3⁄4¿a¢iAa1,AA·¢>¥£A*¿a3⁄4¢>A3⁄4'O 1¢?AA¿a3⁄4ø1,3⁄4\n3⁄4¿*¢>¥AA3⁄4AAAI1⁄2·¤*£a¢IO¤3⁄4£,\nE\nR?M,K,u\\M*^LbaOqTM%[d9>Z[,W.X,O,j.UL,Q%[%e\np¿.O\nAa1,3⁄4y¢>¤*1A*£¦ (c).a«¬ (r)&¬A(c)1\n1,3⁄4 ]¦ (c).a«¬(r)N3_μ¶¶§¿aÆ'£a¤*1,¢>Aa¿a3⁄4D1⁄2A3⁄4v¿1⁄2_¥'OD1\nE\niA£,£;¢>¥£\n1⁄2£,A¢>AA¿*3⁄4\n\"\nao¤*1AA3⁄4A\nu\n¤*£2 AAA*1,¢>AA¿*3⁄4 1⁄2 \"\nð\nÆ'1,A£haa¤*1AA3⁄4An\nu\n¤*£, AAA*1,¢>AA¿a3⁄4D1⁄2ni'ooooao>a÷\nE\n\n1⁄2>yA3⁄4AøcO £1⁄2_¢>Aa¿a3⁄4 1⁄2q1a»1⁄4¿.O¢1⁄2oÆ'£,AA¡UAAA¡>1A¢1⁄2 AI1⁄2q¿a¡AAUUA¢_£, :OA1⁄2£*¡OA3⁄4£1⁄21⁄2\nE\noI¢hE¿.OAA :»£Æ%¤*£a¡?£a¤*n\n1a»'AA£;¢_¿]»£Þ1a»'Aa£Ð¢_¿Þ1f1⁄2>y\n¢>¥£\n1⁄2UIA1⁄2_¢o£aU\nUB¿a¤*£;A£a3⁄4£a¤*1,A c,OD£1⁄2_¢>AA¿a3⁄4D1⁄2\nð\n1⁄2>ODA¥\n1f1⁄21f1⁄2>y'A3⁄4AA\nA¢¢_¿\nAA %£a3⁄4A¢?A¡II1,AA~¢>¥£1 ,OA¢1⁄2aA3⁄4Ð¿.O¤ f1,¢_1a»1⁄411⁄2£\nE\noI3⁄4Ð¿*¢>¥£*¤§E¿a¤* 1⁄41⁄2\nð\nE£q3⁄4£,£, ¢_¿a¦ (c).a«¬ (r)&¬A(c)1\n¢>¥£\n1⁄2UIA1⁄2_¢_£aU\ncO £1⁄2_¢>Aa¿a3⁄4 1⁄2OA1⁄2_A3⁄4AA]O1,¤AA1a»'Aa£1⁄2h¡?¿a¤qE¥AAA¥\nA¢EAAA·¢>¤_I]¢_¿¡IA3⁄4 :¢>¥£1,Æ%Æf¤*¿aÆ%¤AA1,¢_£O1Aan\nOD£1⁄2\nE\n¿1⁄2_¥'O 1Æf¤*¿OfAa f£1⁄2|b*0Gd2c;lTa]1d2ae,|b\\\ni\n¡>¿a¤ ¢>¥AI1⁄2ÆO¤Æ'¿1⁄2£\nE\ni£,£¢>¥£1⁄2£2A.¢>Aa¿a3⁄4\n\"\nu\n¤*£2 AAA*1,¢>AA¿*3⁄4 1⁄2\n1,3⁄4 uo¿*A'AAAEu~1,¤AA1a»AA£1⁄2 \"\nð\nÆ'1,A£\nu\n¤*£, AaAa1,¢>Aa¿a3⁄4D1⁄2n1,3⁄4 %næu¿aA'AAA*n\nu~1,¤Aa12»AA£1⁄2ni1⁄4ooooao>a÷\nE\n4.3. Predications and Logic Variables\n\nAa¿aA'AaAiO1,¤AA1a»'Aa£AI1⁄211⁄2_Æ£,AAA1,A~¢AI%Æ'£¿a¡O¿.»I£2A.¢·OA1⁄2£, »I¿1⁄2_¥'O 11,3⁄4 ¤*£2Aa¿aA'3⁄4A{*£, »I:iIfUBn\n»¿aAAAA,1⁄2ioo¿aUUUa¿*3⁄4ÐuAAU1⁄2_Æ\nE\n4AOAAA A3⁄4AuÆ%¤*£, AaAa1,¢>Aa¿a3⁄4 1⁄2EA¢>¥;AA¿aA'AaA§O1,¤AA1a»'Aa£1⁄2×A3⁄4 1⁄2_¢o£,1 I¿*¡BA*¿a3⁄4 1⁄2_¢o13⁄4¢\nO1A$OD£1⁄2UAa£a¢1⁄2I¿.O;A¤*£,1,¢_£hÆ'1,¢>¢_£a¤3⁄4D1⁄2ToÆ1¢?¢_£a¤3⁄4D1⁄2UAA£*¢~I¿.O]UB¿.O£§¡U¤*¿aU\n¢>¥£hÆ1¤¢?AAAOAa1¤i¿.»I£,A¢·¢_¿\n¢>¥£iAa£.O£aA¿a¡~A£a3⁄4£a¤*1,AA{*£, cO £a¤Aa£1⁄2U¿a¤h1⁄2_¢_1,¢_£aUB£a3⁄4¢1⁄2\nE\noI¡UE£1,¤*£Aa¿,¿.yA3⁄4Au¡?¿a¤q1AAI1⁄2_¢>A3⁄4AA;¿a¡B1,AA¢?¥£1 OA¢1⁄2¢>¥£1⁄2UIA1⁄2_¢_£aU\ny'3⁄4¿aE~1⁄2h1a»1⁄4¿.O¢\nð\nE£A*¿.OAa\n¦ (c)a«¬ (r)&¬A(c)1¿1⁄2_¥'OD11a»1⁄4¿.O¢·£.O£a¤_I1⁄2_A3⁄4A'AA£×Æ'£a¤,1⁄2¿*3⁄4E£hA*13⁄4¢?¥AA3⁄41⁄4y¿a¡U\nR?M,K,u\\M*^LbaOt%[.Q*^d9>Z[,W.X,O,j.UL,Q%[%e\nR?M,K,u\\M*^LbaOqJH,G,X2d9>Z[,W.X,O,j.UL,Q%[%e\nM\nM\nM\na¤;Æf¤*£a¡?£a¤*1a»'A\nI\nð\nE£ A*¿.OAa ×¦ (c)a«¬ (r)&¬A(c)1\n¢?¥£ cO £1⁄2_¢>Aa¿a3⁄4:A3⁄4]1 Ua¿*¤*£hA£a3⁄4£*¤*1A¡?¿a¤U\n1⁄2>ODA¥]1f1⁄2\nð\n\"\n÷·1UB£h£.O£a¤_I'¿a3⁄4£×E¥¿×AI1⁄2U1,3⁄4:1 OA¢ \"\nEAO\n¿a¤×£Ø'1,UUÆfAa£fU\nR?M,K,u\\M*^LbaOxTd;>Z%[,WX,O,j*UL2Q%[fe\n\nApril 2003\nJoshua Predications\n,L;AzNy{ C¡/¢£2£%¤!¥T¦L§ O2§2§(c)\"9a«T¬O_¥LO ¬@(r)V¦L {¦L°±¬O;2,3; %μ.¶·2 1L¢N1·2¢o» bO1⁄4oT1⁄2\n3⁄4¬;¦L§¿A AA§m¦L°A°AAm¦$zÆK2(c)A A O§j(r)C¦L«O1⁄4/2E AEN¦AEj¥TO§\"(c)bEN¬CE/< VAE?§(r)C¦L«Æ#O V{¦L§1⁄2I\n{¦L(c)_¥;EN»«_L2 {¬\" O§my@(r)C¦L«0¦LÆ#¬L VA2§(c)II2§: VA ¥T.¬x(r)C¦L«$a¬L«O.¦L§mIÐNEN¦AyEG\"¬L ¬L«ÆK2§m¬\n°AAO O VA¬9.¦LÆ#¬L VA2§(c)E1⁄4O¬La¬T§,2§(c)¦L§ VAm¬zO»EG¬L«31⁄2\nEN¦AyEG «T¬O¥T¦L(c)§{OT¬>2y¦L VA VAm¬ OOEG¬ V{¦T§O%ÆYO«1AI2×IØO§9 VAm¬ ¬'O»EmbENO {¬L§m¥L¬9E3Æ<2¦T AI ≡\nI>I {3aN¬O\nUUUUYmÞLß '\nIa1⁄42,3$2 ..¬L 2(r)O¦L«#(r)V¦T 2 {¦T°B¬';2»3$E3Æ<2¦L E1⁄4OKz {¦L(c)_¥AEO«_'2N {¬a\na\nT,LxO\na\nT,L\n≡\n\na\nT,LxOaOaaæOcOeO\na\nT,L\n≡\naOaaæOcOeO\na\nT,LxT\na\nT,L\n≡\n\ne6¬T(c)»«T, {¬C¦T(r)?°AAm¬L VAm¬L«Y3¦EE.¬' {¦L(c)_¥zENO«{L2N {¬C¦L«9¥T¦L§ O§ .Y ¦=¬L§ ¬L«Y3¦Em« a«T¬'{¥T,O\nV{¦T§\"§\" VAm¬ » a'2y.¬1⁄43¦E-¥T»§E/.¬@ {¦L(c)_¥#ENO«{L2N {¬ O«(c)EmÆY¬T§ 1<§)O§9e1eiii iGðii1noO»EG¬L«31⁄2\noO¦L«¬oNOÆAa {¬a\no\na,o,÷e'aOøOaaa÷uOO'auOaO»LOuTu\no\ncOuTya'uO,þOþ\no\nOa,O\na\nuOaO,TOuTuy,cOuOeO,þ\no\nOæa\nuOaO,L'uTu\"Oa'aaæOcOe'VaaO÷eOOøOaa1uþ\na\n\ny\n\nA¦'¦2§(c)o¬.¥«2a VbEN¬§mOÆ#¬z(r)V¦T«= _¦L(c)_¥jENO«{L2 _¬z°A2 VA2§IO»EG¬L«3aN» C ¬L«§zCE/.¬L(r)Em <(r)C¦L«\n¦O¥1EmÆY¬T§ V§(c)x VAm¬@a«T¬O_¥LO ¬¿Q?»«(c)EmÆ#¬L§ 1KO§mj CA¬L«C¦L«T¬L«O1⁄2\n<¬T«T¬ O«T¬9.¦LÆ#¬?e.eiii iðØ O ¬LÆ#¬L§ 1KL2y¦E 7,»Em 2 1Ta\no\na,o,÷e'aOøOaaa÷uOO'aT»L\no\na'aaæOcOe»þOþ\no\nOa,O\na\nT,Taa,þ\no\nOa,O\na\nT,T$ycOu'eO,þ\no\nOa,O\na\nT,TOcOæ'aO,þ\n(r)9°±¬xe1eiiiOið%ii1n VAm¬\nE3 a¬LÆ\na¦(r)§I» C VAm¬\n,»Em 2 1x§\nVAm¬\n'OOuOOæ'a\no\nOæa\nT,,L\nOaOaaæOcOeO\"!!!VþL1⁄4± ;¦O¬x.¦2»3\n(r)E2«O zÆ#O ¥A§(c)o CA¬a«T¬O,{¥T» a¬T»LO1⁄4\nO§m VAm¬L§vVE¥T¥T¬.O\nbEN¬L s3\nVE2m V2 EE V§(c)w CA¬)ENO bEG¬\n¦L(r); VAm¬a«T¬O,{¥TO ¬¿QO«(c)EÆ#¬L§ IA¬L«T¬\n\n§mOÆY¬'Ia1⁄4O(r)C¦L« VAm¬\n{¦L(c)_¥ENO«{L2 _¬$#aOaaæOcOeC2§ VA¬9OOE¬L«31⁄2&%¦9O»EG¬L«{¬,A°A2 CA) {¦L(c)_¥ENO«{L2 _¬YO«T¬=.O V(r)E{¬'j2,3\n(r)§,2§(c)¥T¦L««T¬O¥ >Æ#O ¥A¬,<(r)C¦L«Y VAm¬YEO«_'2N {¬1⁄2\n%y§¥T¬-°±¬°±O§ e.eiii ið%iin\na¦ _¦O¦A\n(r)C¦L«\n.¦L %E C{¦L§¦T§ s3§v VAm¬\n» a'2y.¬1⁄4O°±¬oAm¦E _\na«T¬EN¬L§ #2 A(r)«T¦LÆ\n{¦'¦A§(c)!O K2,¥1A°±O«T«1E _¬@¦L«jO»EG¬ V_¦L§\n@°±¬L 2 E1⁄2o3⁄4¬x¦$ VA#2,3E/.O\n2§(c))ð('e*)(+/i-,On/.7i10'2)30i4i65/7E1⁄2o ¦L«C¬oNOÆKa _¬a\no\nOæa\nT,LxOaOaaæOcOeO$VaaO÷eOOø'aa1u98_cOøOuO'u:a.øa,TaOæe÷TOþ\na;<=\n>\n\na;<=\ny\n\na;<=\n\n<\n\nIAx°±¬:¥T»§D.¬O¬,1⁄4> VAm¬:¥T¦L§ V2§EO V_¦L§\n§yEN¦Ay¬O\nVA«T¬'¬! VÆY¬,1⁄4<¦L§m¥T¬!(r)C¦L«¬O,¥AA C2Æ#¬! VAm¬\nO»EG¬L«3$°B#.» C(r)E{¬O1⁄2? ¬L ¿Q<°±O bAx VA«T¦Em(c)A VAEK¬oNOÆKa _¬1⁄2\n\nJoshua Predications\nApril 2003\nI\nY VAm¬¦Em 1.¬L @¦T(r)# CA¬O»EG¬L«31⁄4\nCA¬x _¦L(c){¥;ENO«{L2 _¬@#aOaaæOcOej§o CA¬OOEG¬L«3-aO V a¬L«§8T,,L\nOaOaaæOcOeO\n¦O¬\n§m¦L W O§\n(r)V¦L«\nO§3\naO« V_¥Em {O«WEN» %E¬Ð\nVAmO\n1⁄4\n\nr3¬L\ny¤m·2¤*A£b¢¤£·2¢£%CB/1⁄2\nI\n§IEm§§\nO§ V{O ¬'EN»«_L2 {¬-¥TO§wÆ#O ¥AvO§3I¦2ED.¬O¥ 11⁄2F%¦°AAm¬L§EN¦AE\n.¬OO«T¥Am¬@ VA«T¦E(c)Ao CA¬O L2.¬x°A2 VAIO§\nEm§§\nO§ V{O ¬'\"ENO«{L2N {¬N O§I»«(c)EmÆ#¬L§ C§\nVAm¬=O»EG¬L«31⁄4q VAEAEN»«_L2 {¬9CO 2 _¦L°±¬O a¦jÆ#» a¥A\nO§3)O«(c)EmÆ#¬L§ A2§ VAm¬.OÆ#¬ja¦ V{¦T§!§\nVAm¬ » a'2y.¬@a«T¬O_¥LO V_¦L§\n1⁄4/a«T¦E_¬O1⁄4O¦T(r)O¥L¦Em«O.¬1⁄4/ VAm¬@a«T¬O_¥LO ¬7Æ#» a¥A1⁄2\nG\nAm¬@ _¦L(c){¥#ENO«_'2N {¬H#aOaaæOcOeY2§¦Em«C¬oN»ÆKa {¬ ¥T»§Æ#O ¥AO§3=(r)E2«O <O«(c)EmÆY¬T§ >§) a«T¬OO\n{¥TO V{¦L§2y¬L(c)2§§2§(c)°A2 VA\" VAm¬za«T¬O_¥LO ¬jT,TO1⁄2/3⁄4xAm¬L§E¦,AyEG;(r)E2§my? VAm¬z(r)E«O 7a«T¬'{¥TO V{¦T§\n°AA¦.¬)a«T¬O_¥LO ¬)E\",LIA¬T«T¬\na\nT,TI'cOæOaOTIV1⁄4Ø VAm¬!O«(c)EmÆ#¬L§ 11⁄4JOcOæOa'1⁄4AE$ ¬LÆKa¦L«TO« Q3\nVE2m V2 EE ¬'\"(r)V¦L«9 VAm¬x _¦L(c){¥;ENO«{L2 _¬@#aOaaæOcOe92§: VAm¬O»EG¬L«31⁄4B.¦x CAO K#a'aaæOcOe O§my@(r)C¦L«\nOcOæOa\nI%2¬O¥T¦LÆ#¬·2¤LA£b¢¤£·2¢£b BM'cOæOaTIV1⁄2N E§\nVA°B38 VAm¬IOOEG¬L«3vaNO V ¬L«§\nÆ#O ¥A¬,\" VAm¬\nO L2.¬wa«T¬'{¥TO V{¦T§\n1⁄2#EN¦AEA¥LO\nCA¬v¥T¦L§ V2§EO V_¦L§\n¦wa«2§ CAEoO§°B¬T«w!«T¬OO\nO»EG¬ ¬O1⁄2\nO\n§m¥L¬$ VAm¬¥T¦L§ V2§EG» C{¦L§\nAmC(r)E2§Am¬O¬oN¬O¥Em V§(c)1⁄4qEN¦AyEG,.¥T»«TC 1C ¬TÆAaN¦L«TO«3\"ENO bEG¬\n2(c)§ÆY¬T§ 11⁄4«T¬.¬L .? {¦L(c)_¥#EO«_'2N {¬H#aOaaæOc'e ¦2¬;¦T§¥T¬zÆ#¦L«T¬E§2§ O§ V{O ¬O1⁄4\nO§mx¥T¦L§mO\nV2§EG¬ CA¬.¬'»«T¥A! VA«T¦Em(c)A! VAm¬=O L2.¬j ¦j(r)E2§m VAm¬j§¬o AÆ#O ¥A!(r)V¦T«; CA¬=OOE¬L«31⁄4N CAO\n1⁄4\n»§m¦L VAm¬L«$§mOÆ#¬ VAmO P#aOaaæ'cOex¥T¦E _: a»§m(r)V¦L«O1⁄2NE¦,AyEG¥T» z VAm¬¥T¦L§ V2§EG» C{¦L§I¬O,¥A\nV2Æ#¬Q#ya'aaæOcOe\nDVEG¥L¥T¬(r){E Q3\n2§ O§ V_O ¬Oy1⁄2RG\nA\na«T¦O¥T¬\n«T¬La¬'» .8E§ V :§m¦\nÆ#¦L«T¬\nÆ#» a¥A2§(c)a«T¬O_¥LO V_¦L§\n?O«T¬@(r)C¦Em§92§ CA¬zO L2.¬1⁄2\ne6¬Ta¬OO V§(c)- VA¬xO»EG¬L«3-O§VA§(c)°AA3) VEG¥T¥L¬O¬'¬O¥T¦L§(r)E2«ÆCC CAO # VA¬xO»EG¬L«3aO V ¬T«§\n°±N#VE¥T¥T¬(r)Em 2 s3=Æ#O ¥A¬'=O(c)O2§ O(r)V,¥ 1<§ VA¬zO L2yN.¬,1⁄2\no\nOæa\nT,LxOaOaaæOcOeO$VaaO÷eOOø'aa1uøaaOæO,L'æS8{c'øOuOOu:a1øa,LaOæxe÷LOþ\na;<=\n>\n\næOOu'uOaOaTa\na<=\n>\n\nT:,OæaOa÷exOuOajOOOu'OæOa\na;<=\ny\n\næOOu'uOaOaTa\na<=\ny\n\nT:,OæaOa÷exOuOajOOOu'OæOa\na;<=\n\n<\næOOu'uOaOaTa\na<=\n\n<\nT:,OæaOa÷exOuOajOOOu'OæOa\nG\nA\"8.¦LÆ#¬L°AAO 2ÆKa 2(r)E{¬Ow¬oa {O§O V_¦L§\n¦L(r)$ VAm¬:aNO V ¬L«§uÆ#O ¥A§(c)va«T¦O¥T¬1⁄27oO¦L«\nÆ#¦L«T¬¬L O2 CaU%¬O¬x VA¬.¬O¥ V{¦L§\n\"\nV\nO V ¬T«§XWjO ¥A§(c)\n§:EN¦AEGyaZYO§2(r)E{¥T» C{¦L§ \"\n1⁄4AaN»(c)¬\nV\nO O\n¬L«§mO(WjO ¥A2§(c)Ob§OQEN¦AyEGaJO3YO§(r)_¥LO V_¦L§O[%1\\]^G_ `ObaK1⁄2\n?O¦L(c)_¥xEO«_L2 {¬,=¥LO§AVE2 V E a¬(r)C¦L«\"O§3IO«(c)EÆ#¬L§ ;§\nVAm¬-O«(c)EÆ#¬L§ ; 9¦L(r) !O»EG¬L«3\naO V ¬T«§\n»§m\n¥LO§2y¬\n¥T¦LÆ<2§¬Ou°A2 CA\n¦L VAm¬L«O1⁄4C§m¦L§mOENO«{L2 _¬\nO«(c)EmÆ#¬L§ .VEG¥A\no¥T¦L§mO\nO§ .1⁄2\n?O¬L ¿K,.¦TÆY¬j a» a¬LÆ#¬L§ .AL2¦E > VAm¬@A¬'» VA)¦L(r)Øa¬O¦Ta {¬@§)¦Em«@O L2.¬1⁄4OO§=VA=ENO«TO\n{¦E/YO»EG¬ V{¦T§\n1⁄2\noO¦T«z§\nO§m¥L¬,1⁄4q a¦$¬L ¬L«ÆK2§m¬; VAm¬$¥1Em««T¬L§ ?Am¬OO 2 VAoa O EY¦L(r)7 VAm¬;a¬L«O.¦T§\n\n2§)¦E«;.OÆKa {¬,1⁄4 VA¬;OOE¬L«3¥TO§-¥T¦LÆ<22§m¬z {¦T(c){¥YENO«{L2N {¬?°A2 VA-j¥T¦L§\na»§ 7 VAmO YaN¬O¥2(r)E{¬\n\"\n¦O3 \"\n7 VA¬C VÆY¬zO«(c)EÆ#¬L§ a\n\nApril 2003\nJoshua Predications\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOejycOuOedcaOOæ,TaOæL'æOOøTua'a,þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@OcOæOaxaOeOaOc,cOe÷xOcTTu,,þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@aaT@caOOæ,TaOæOcTu,þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@>÷axOaOeTc'e÷÷æxOcTu,þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@aaTuOc,LOæOOø:aOaO»þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@eOaO÷e'æOOe'uOaexOcTTu,,þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe@aaT-÷e,oLaOu'÷cOeLOæOOøccOeOOu',þ\no\nOa,O\na\nuOOæOø'uOcOeT÷÷cOe\n<\nf:c'cT\"uO'efOaa9O,E:uæO,þhg0eOcOOaLcf÷uTia'÷Ou,La\"÷e$,OOOuO'æOa\ng0aaaTN÷uOO÷cOe\no\nOæa\nuOOæOøOu'cOeT÷÷cOe'aOaaæOc'eOuOc'eT÷÷cOeOcTu$VaaO÷eOOø'aa1u98_cOøOuO'u:a.øa,TaOæe÷TOþ\na\n>Oøj\n<-kClk\n\ne\n\nkC\n>\n=m=\n\n<\n\na\n>Oøj\n<-kClk\n\n>n\nkCo\n<\n\nlkC-k\n>\n\n<\n\na\n>Oøj\n<-kClk\n\n>\n\no\n=\ne\n-kp\n\n<\n\na\n>Oøj\n<-kClk\n\n<qr\n\n<=q\n\n<\nMg`ia'÷Ou,La\"÷e$,OOOuO'æOa÷æ\"÷eOæO'OeO÷'OaT\"'c\ng0uOcOe'æOOOeO\"÷eT,Oaa1u\na\n>Oøj\n<-kClk\n\n<\ne\n\n>\n\n>\n\n<\n\n3⁄4xA {¬CÆYO ¥A2§(c))uOOæ'øOuOcOeTN÷÷cOe;a«T¬O,{¥TO V{¦L§1⁄4\nEN¦AEG 2§ O§ C{O ¬s#ya'aaæOcOe# ¦C VA¬C(r)E2«O\nO«(c)EÆ#¬L§ 2§ VAm¬a«T¬O,{¥TO V{¦L§\nO§mt#uOcOeTN÷÷cOeo ¦ VAm¬\n.¬O¥L¦T§uO«(c)EmÆY¬T§ 11⁄2K%2§m¥L¬°±¬\na¬O¥2(r)E{¬'w§m¦: {¦L(c)_¥ENO«_'2N {¬:(r)V¦T«! VAm¬o VA2«T8O«(c)EmÆY¬T§ 2§\nVAm¬IOOE¬T«3vaN» C ¬L«§1⁄47EN¦AE\nÆ#» a¥Am¬#2 #¬oN,¥ V Q31⁄2AI[a7¦L V{¥T¬9 VAmO C2§m¥L¬$¦L§m¬$O L2yN.¬9a«T¬O_¥LO V_¦L§1⁄4q§OÆ#¬L Q3\n{uOOæOuOcOe÷ø\n÷cOe\n<\nf:cOcT-uOOefOaaxO,E:uæO¥L¦L§ O2§j\" {¦L(c)_¥$EN»«_L2 {¬,1⁄4± VA@ENO«{L2 _¬2¬'¥LOÆ#¬ ¬LÆ#O\na¦L«TO« Q3$2§ O§ V_O ¬O9 ¦C VA¬z¥T¦L§\na»§ KOcTTuC2§ CA¬zO»EG¬L«3$aO V ¬L«§1⁄2JI\n<¬T«T¬ O«T¬9.¦LÆ#¬ ¦L CA¬L«¬oNOÆAa {¬1⁄2\no\nOæa\nuOOæOøOu'cOeT÷÷cOeaaT\"'uOcOeT÷÷cOex:uOaOe'VaaO÷eOOøOaa1uu8{cOø'uOOu:,a1øa,LaOæxe÷LOþ\na\n>Oøj\n<-kClk\n\n<vk\n\nj\nlk\n\n>\n\nøe\n\na\n>Oøj\n<-kClk\n\n<\nj\n<\n>\n\nø\nr\n\nnO\na\n>Oøj\n<-kClk\n\n<\nd\n>\n\n<\n\na\n>Oøj\n<-kClk\n\n<\ne\n\n>\n\n>\n\n<\n\n?O¦L(c)_¥@ENO«{L2 _¬YAmLEN¬j _¬o{¥TO ?0¥L¦LaN¬$»§m¥LO§)2y¬9«T¬L(r)V¬T««T¬O ¦ 2,3O§3w?Ea¥L¦'¬$¬LÆ<2¬OO\n¬O:§v CA¬xe.eiiiOið%ii1n¥L¦L§ V§yEGO V{¦L§1⁄2xGOAm¬ENO«{L2 _¬=AmLE¬) VAm¬L2«\"§\na»§ V_» a¬O\nENO bEG¬\nE§ V\nCA¬z¥L¦T§ V§yEGO V{¦T§(r)V¦L« (c)bEN¬L§O§°±¬L«YAm<(r)E2§Am¬O$¬oN¬O¥Em V§(c)1⁄2\n3⁄4¬x¥TO§!Æ#¦O(r)23\" VAm¬=¥L¦T§ V§yEGO V{¦T§:¦L(r)A¦Em«;a«T¬E{¦E/@OOEG¬L«3-L2y¦Em ¥1E««T¬T§ AAm¬OO 2 VAI a» EE\n¦:Ea _38:(r)C¦L«Æ#» C ¬O\nO§°B¬T«E/2§(c)8 VA¬! _¦L(c){¥\"EN»«_L2 {¬,\"2§ O§ C{O ¬OI(r)C¦L«¬O,¥A\nÆ#» a¥A/a\n\nJoshua Predications\nApril 2003\no\nOæa\nuOOæOøOu'cOeT÷÷cOe'aOaaæOc'eOuOc'eT÷÷cOeOcTu\no\nLc,uT\no\n÷fOeOcaa,þ\no\noTcaCcOxzyC{|{\n\n÷æ÷L':÷'uT{\n\n!;yjOaOaaæOcOexOuOcOeTN÷÷cOe»þOþ\n8_cOøOuO'u:a.øa,TaOæe÷TOþ\ne\n\nkC\n÷æ\"÷LO:N÷Ou>\n=m=\n\n!\n>n\nkCo\n÷æ÷L':÷'u\n\n<\n\n-kClk\n>/!\n>\n\n÷æ÷L':÷'u\no\n=\ne\n-k;\n!\n<qr\n\n<\n÷æ\"÷LO$:÷Ou\n=q\n/!\n\n<\n÷æ÷L':÷'ue\n\n>\n\n>/!\nIB§(c).¦LÆ#¬jÆAa {¬P?Ea=a«T¦O»EG¥T¬K¦Em Va,E O°A2 VA Am¬O,§(c)a\no\naacfOe\no\noLca cOpyC{|\n\ncTTu/Væ\no\n'÷aOeO@>OOO'Oæ/8yLþ\no\nOæa\nuOOæ'øOuOcOeTN÷÷cOexOaOaaæOcOe'uOcOeT÷÷cOexOcTTu,\n\no\nTcuT\no}\naa'æO÷f'eOcaa,þ\no\noLcaCc,OpyC{|{\n\n÷æ\"÷LO:N÷OuT{\n\n!yj'aOaaæOc'eOuOc'eT÷÷cOe,þOþOþ\n8{cOø'uOOu:,a1øa,LaOæxe÷LOþ\n\ncTTu/Væ\no\n'÷aOeO@>OOO'Oæ/8\ne\n\nkC\n÷æ\"÷LO:N÷Ou>\n=m=\n\n!\n>n\nkCo\n÷æ÷L':÷'u\n\n<\n\n-kClk\n>/!\n>\n\n÷æ÷L':÷'u\no\n=\ne\n-k;\n!\n<qr\n\n<\n÷æ\"÷LO$:÷Ou\n=q\n/!\n\n<\n÷æ÷L':÷'ue\n\n>\n\n>/!\nlkC\n~\n%E§(c)\n\na«T¬O_¥LO V_¦L§\naN» C ¬L«§\n¦\nVAm¬\n¥L¦L§EN¬L§{¬L§m¥L¬\n(r){E§m¥ C{¦L§\ne.eiiGi iðzi4)be*0)\n'i-1i+/ii)/0'L7[,i172e-5/i$EN¬L«3!E/.¬L(r)Em A°±3\n¦L(r) ¦L2§(c)8.¦LÆ#¬-¦Ta¬L«TO V_¦L§8¦L§wO L2.¬\na«T¬O,{¥TO V{¦L§K VAmO <Æ#» a¥A VAm¬ aO V ¬T«§\n1⁄2Oo ¦L«z¬oNOÆAa {¬1⁄4NVEaa¦.¬Y3N¦E\nO«T¬ §m¦ {¦T§(c)¬L«C§ a¬L«TO\n¬ ¬Ox§\na¦L«2§(c)(r)C¥ 1L2y¦E ?a¬T«O.¦L§\n#°A VA-Æ#¬O {¬1⁄4\n.¦C3¦E\n°±O§ K ¦;(r)§O§x«T¬LÆ#¦EN¬\nVAm¬.¬z(r)C,¥ 1K»\nO ?¦T§¥T¬1⁄2~AbEN¬z CA¬;Oaa«T¦La«{O ¬zaNO V ¬L«§\" ¦?e1eiiiOiðzi4)%e*0)'mi1.i+/iiE)\n/0'*7,i17e-5iO1⁄2ZG\nAC(r)Em§m¥ V_¦L§!E/.¬?e.eiii ið%iin8 a¦.¬OO«T¥A\n¦L§ Q3) VAm¬» a'2y.¬1⁄4\n¬o C«T¥ 1\nVAm¬xÆ#O ¥A§(c):O L2.¬=a«T¬O,{¥T» C{¦L§:(r)E«T¦LÆ\nVAm¬ze.eiiGi ið%iinv¥L¦L§ V§yEGO V{¦L§\nO§m-¬o¬'¥Em ¬\nVAm¬\naN¬O¥(r)_¬O\n¦La¬T«T» C{¦L§\n¦L§\nCAO va«T¬O_¥LO V_¦L§1⁄2p §\nCAE\n¥L.¬,1⁄4°±¬\n«T¬'O»EG¬ v CAO 82\ne1eiii iGðJi5/±¬EN¬L«3$Æ#» a¥A2§(c)a«T¬O_¥LO V_¦L§2 O(r)§1⁄2\no\ncOaOøOciaaøT,OOOuO'æOaOøOaaaT÷uO'÷cOeOæ\na\nuOOæ'øOuOcOeTN÷÷cOexOaOaaæOcOeTc,aOOæ,La'æ:u'aOeO4VOeOOa»OOþ\no\nuOa/8aT,aOuOOOa'øOuOccc,OeTvyE>OuOc:xycOæOuO'\n<\nO'OuOOæOayLþ\n\naOa'u÷efOæ\naC\n>'øj\n<lkC-k\n\n@<qr\n\n<=q\nx\nr\n>O\naC\n>'øj\n<lkC-k\n\n<hkC\n\nj\n-k\n\n@\n>\n\nøe\n\naC\n>'øj\n<lkC-k\n\ne\n\nk\n>\n=m=\n\n@\n\n<\n\naC\n>'øj\n<lkC-k\n\n<\nj\n<@\n>\n\nø\nr\n\nn'\naC\n>'øj\n<lkC-k\n\n>n\nkCo@\n<\n\n-kC-k\n>\n\n<\n\naC\n>'øj\n<lkC-k\n\n>\n\n@o\n=\ne\n-kw\n\n<\n\n',LæOaxOu÷ef'æ\n\ncOeOa\nq¦Ew¥LO§1⁄4B¦T(r)C¥L¦Em«O.¬1⁄4±O .¦=E.¬ VAm¬p _¬OO«jEN¦AEp±O L2.¬¥L¦TÆAÆ#O§m-°A VA\"a«T¬'{¥T,O\nV{¦T§aO V ¬T«§ ¦z«T¬LÆ#¦EN¬zÆ#» a¥A2§(c)a«T¬O_¥LO V_¦L§K(r)E«T¦LÆ\nCA¬;O L2yN.¬,1⁄2_Gq¦z2 bE/ V«TO ¬1⁄4NVEaNO\na¦.¬o/«T¬O\nAj {¬L(r)E ; VAE$(c)«T¦EmaI¦L(r)zaN¬O¦La {¬°B¬°±¬L«T¬Æ#¦L§ ¦L«§(c)1⁄4AO§oO 2 #§(r)C¦L«Æ#O V{¦T§\nL2¦Em >A2Æ\n§¬O¬'y< a¦2y¬@«T¬LÆ#¦EN¬O9(r)E«T¦LÆ\nVAm¬zO L2.¬1⁄2\n\nApril 2003\nJoshua Predications\nj,LaOa ycOæ'uOO\n<\nOOOuO'æOa\no\naaaT÷u'O÷cOe'æ*\n\n'-@ca\n\ncOeOa\na\na,oTO,L\n\nOL,þ\na\nuOOæ'øOuOcOeTN÷÷cOe@aaTT\":uOaOeO\no\naaT÷u'O÷cOe'æuOa÷efaacciaT48\naC\n>'øj\n<lkC-k\n\n<hkC\n\nj\n-k\n\n@\n>\n\nøe\n\naC\n>'øj\n<lkC-k\n\n<\nj\n<@\n>\n\nø\nr\n\nn'\n=\neOOa,O$OuOaxOuOciaxaaaTN÷uOO÷cOeOæO\na\na,oL',L\n\naOæO/8\n\naOæ\n?O¦L(c)_¥#EO«_'2N {¬K»«T¬ O .¦CE/.¬L(r){E\n(r)V¦T«§O««T¦L°A§(c)\"¦L°A§-O L2.¬;,a {3? ¦@ÆYO ¥A)¦L§ Q3\na¬O¥2(r)E{¬'-aO V ¬T«§\n1⁄2UGOA¬\"¬T(r)VLEm 2 EN¬L«O{¦T§\n¦L(r) VAm¬h>OuOc:oyc'æOuOO\n<\nOO'uOOæOa¥T¦LÆKÆ#»§m!E.O\na _3K¬EN¬L«3$2 ¬TÆ\n2§ VAm¬zO L2.¬1⁄2\n>OuOc:xycOæOuO'\n<\nO'OuOOæOa\no\ncO'uOu÷efxaOOO'aae\na\na,oLO»L\n\n'OþL\n(r)92§ ¬O,\n¦T(r)j VAm¬:¬L(r)VLEm 2 3N¦E\n(c)%EN¬! VAm¬>OuOc:8y,cOæOuOO\n<\nOOOuO'æOa¥T¦LÆKÆYO§m\n\na¬'¥(r)_¥\naO V ¬T«§I a¦ {¦O¦A:(r)C¦L«O1⁄4\nEN¦AE),a {39¦L§ Q3a«T¬O,{¥T» C{¦L§ Æ#O ¥A2§(c): VAmO @aO V a¬L«§\n1⁄2G\nA\n{¬L .73¦E!.¦T {O ¬9 CA¦.¬;a¦L« C{¦L§¦L(r)7 VAm¬$O L2yN.¬; VAm» ?2ÆKÆ#¬O_O ¬L Q32§ ¬L«T¬ A3¦E/1⁄2/I±_O\nV{¦T§O 2 s31⁄4N°AAm¬L§3¦Ewa¬'¥(r)23-xaO V a¬L«§\n¦$Æ#O ¥A\n1⁄43¦EI¥TO§\n2ÆK2 # VAm¬xEa _3) a¦$Æ#» a¥AmO\n2§(c)\"a«T¬O,{¥TO V{¦L§Y¦L(r)?¦T§ s3\"§(c) _¬; V«1Em VAENO bEG¬1⁄4Ge.eiii iðE0i4;¦L«?e.eiii iðC.i1_iO1⁄2&G\nAm¬\n¬L(r)CLE YEY2¦T VA\n1⁄2Go¦.¬L _¬O¥ ¦L§m¬jENO bEG¬1⁄4AO§°±¬L«\n\"\na7¦ \"\na¦= VAm¬OOE¬, V{¦L§\n\"\nI_¦Laa¦ ¬= V«1Em VAmO\nEN» %E¬C ¦O¦T×I \"\noO¦L«j¬oOÆKa _¬1⁄4N°±¬$°±O§ A ¦$ {¦O¦A!O ¦L§ Q3 CA¦.¬e1eiiiOiðE0i49a«T¬O_¥LO V_¦L§ VAO #«T¬T {O ¬\n¦CAyEm§(c)¬T«CO§9(c)§¦L«T¬C VAm¬@«T¬, <¦L(r)Ø CA¬zO L2.¬1⁄2\n>OuOc:xycOæOu'O\n<\n'OOuOOæ'a\no\nc'OuOu÷efaOO'Oaae,þ\na\nuOOæ'øOuOcOeTN÷÷cOexOaOaaæOcOeu'OefOaa9:uOa'eO\no\nc'aOaOcOæ÷OaaOOuOøi,,LOaxOcOcO\na\na,oL',L\n\naOæO,þ\n\nc\n\naOa'u÷efOæ\naC\n>'øj\n<lkC-k\n\n@<qr\n\n<=q\nx\nr\n>O\nV\n«T¬O_¥LO V_¦L§uaO V a¬L«§\n\"°±¬L 2 ;a«T¬O_¥LO V_¦L§¥T»§\n2y¬\n¥T¦LÆ<2§¬O ¦o¬oa«T¬,«T¬L _» a¬O\n{¬O#2§!¥L¦LÆ<2N2§m» C{¦L§1⁄2]GOA¬9§m¬o #¥T¦L§¥T¬La K2§!¦Em«9¥T¦L§{¬L«TO V{¦T§\n¦L(r)7a«T¬O,{¥TO V{¦L§## CAO\n¦L(r)> _¦L(c)_¥LO Ø¥T¦L§§¬O¥ V%E¬,1⁄2_%¬'¬ VA¬=.¬'¥ V_¦L§\n\"\nV\n«T¬O_¥LO V_¦L§YO§m?O¦T(c){¥T» O¦L§§¬O¥ V%E¬, \"\n1⁄4OaO(c)¬\nV\n«T¬O_¥LO V_¦L§.O2O§O3? ¦L(c){¥TO {OO¦T§§m¬O¥ VbEN¬.O[%1\\]^G& ObaK1⁄2\n4.4. Predications and Logical Connectives\nV\n«T¬O_¥LO ¬,Ta\ne.eiiGi ið2ði154'\ne.eiiGi ið2ðse-0\ne.eiiGi ið2ð5\ne-\n%¦z(r)CO«C°±¬zALEN¬@2y¬O¬L§-¥T¦L§{¬L«2§(c)a«T¬O_¥LO V_¦L§K§ VA¬T2«;2ÆKa _¬ <(r)C¦L«Æzaqx2§(c) {¬za«T¬OO\n{¥TO V{¦L§\"ÆY,¬@Ema¦L(r)79a«T¬O_¥LO ¬;O§m= 1A»«(c)EmÆ#¬L§ 11⁄2%NEG¥A-¥T¦L§ V«1EG¥ 1?Am'EN¬;O 2 {¦T°B¬'9E\n¦z¬oa«T¬7{¬'N72§E.¦L {O V_¦L§\n1⁄4/(r)C¦L«C¬oNOÆKa _¬a\na\nuOOæOøOu'cOeT÷÷cOe\n<\ncOeOøO÷1cOOaja,L'æ÷cOexOcTTu,\n6§¦L°A _¬O(c)¬=¦L(r)E ¬L§wÆ#¦T«T¬\"E/.¬L(r){E Q3I¬oa«T¬,.¬O\n2§u.¦TÆY¬ _¦L(c){¥TO ¥L¦LÆ<2N2§m» C{¦L§1⁄2\noO¦L«\"¬oNO\nOÆAa {¬1⁄4\n°±¬ÆA(c)A 9°±O§ ; ¦«T¬L _» a¬) C°B¦{¬OTaØ VAmO $B¦T§\nEmboN¦L ¬°±VEm(r)(r)C¬L«2§(c)I(r)«T¦LÆ\n¬L %E_¦L§<¢¤LB) VAm» 7Am¬C2¬T 2{¬E¬'$°\n§,ÆK2 2 E? ¦C2¬z(c)_»§ 11⁄2%E¥A-¥T¦LÆ<2§O V_¦L§\nAO«T¬zÆ#,¬\na¦%2 _¬\n°\nVA\nCA¬\n2E 2 O%2§\nEN¦AE\na«T¬'{¥TO ¬\ne.eiii iGðð%i-54'\n1⁄4\ne1eiiiOið2ðse-01⁄4\nO§m\n\nJoshua Predications\nApril 2003\ne1eiii iGðð5e-1⁄2%¦,1⁄4#O(r) ¬T«o¬L(r)E2§2§(c)u VAm¬Oaa«T¦Ta«{O ¬oa«T¬O,{¥T» a¬1⁄4K°±¬¥LO§\n°A«2 ¬w¥T¦LÆ#O\na¦Em§mja«T¬O_¥LO V_¦L§VEG¥ATa\na\nOeT\na\nuOOæOøOu'cOeT÷÷cOe\n<\ncOeOøO÷1cOOaja,L'æ÷cOexOcTTu,\na\nuOa,,÷aiaOæ\n<\ncOeOøO÷1cOOad:÷eTc÷LOLæ@f÷Oe'OæOO\na<¬, V2§(c)8a«T¬'{¥TO V{¦T§\n§\n_¬:¬'¥Au¦L VAm¬L«)»§m¦L VAm¬L«)°±38¦L(r) 2Em {§(c)8Æ#¦L«T¬\n¥L¦TÆAa {¬o\na«T¬O,{¥TO V{¦L§K¦E 7¦L(r)<2§(c) {¬z¦L§m¬1⁄2\nq¦E-¥LO§E/.¬@ _¦L(c){¥TO ±¥L¦L§§m¬O¥ CbEN¬<§9e1eiiiOið±O§me.eiiGi ið%iin a» a¬LÆ#¬L§ .YI VA¬.3O«T¬\naO« V_¥Em {O« Q39E/.¬L(r)Em 1⁄4/ VAm¦Em(c)A\n1⁄4/2§«1Em {¬?O§$O»EG¬ V_¦L§.Ia1⁄2\nO¦LÆKa¦Em§m@e.eiiGi iðO O ¬LÆ#¬L§ 17E§(c);e1eiiiOið2ði154'DVE #.LE¬$.¦LÆ#¬;¦L(r)O VAm¬ _'2y¦L«z¦T(r)\n¬L§ ¬L«2§(c)uÆ?Em 2 C2a _¬Ia«T¬O_¥LO V_¦L§)§ ¦\nVAm¬\nO L2.¬1⁄2O\n§m¥L¬¬L§ ¬L«T¬O1⁄4A CA¬\na«T¬'{¥TO V{¦T§\n\n¦L§/¿A A«T¬LÆ#O2§3¦Ay¬O ¦T(c)¬L VAm¬L«O1⁄4o VAmO A1⁄46¬O,¥A:¦T(r)? VAm¬=¥T¦LÆKa¦L§m¬L§ Aa«T¬O,{¥TO V{¦L§YY§\n.¬T« O\n¬O·2¤LBm·{1O·Bmy¢N 2\n\n1⁄2_q¦E\n¥TO§§m¦L #E.¬xe-0x°A2 VAe.eiii ið# O ¬LÆ#¬L§ 1z§o VA¬¥1E««T¬L§ «T¬OO\n{¬O.¬9IEe.eiiGi ið2§(c)9,DVE§m¥ V{¦L§EK= a» a¬LÆ#¬L§ 7¦L(r)ØaN»« C{O 6A§m¦L°A {¬O,(c)¬OIa1⁄2\ne1eiii iGðii1noO»EG¬L«_¬K¥TO§¬L(r)E2§m¬@Æ#¦L«T¬z¥T¦LÆKa {¬o$(c)¦OO O2,39E§(c)x {¦L(c)_¥LO ±¥L¦T§§m¬O¥ VbEN¬1⁄2\nGo¦x°A«2 ¬¥L¦TÆAaN¦Em§$e1eiii iGð[KO§m=e.eiii ið%iinv(r)C¦L«ÆC1⁄4A°A«TOa CA¬xa«T¬O,{¥TO V{¦L§z°A2 CA\nVAm¬ Oaa«T¦La«_O ¬ ¥T¦L§§¬'¥ V%EN¬1⁄2o ¦L«C¬oOÆKa _¬a\no\nOa,O\na\nOeT\na\nuOOæOø'uOcOeT÷÷cOe\n<\ncOeOø'÷1cO'a$a,TOæ÷cOexOcTu\na\nuOa,,÷aiaOæ\n<\ncOeOø'÷1cO'aT:÷ec÷LOTæf÷'eOOæOO»þ\na;<a\n>Oøj\n<-kClk\n\n<\n\nø\n=lk\n\n@<\n=\n>\nk\n\n@\n\n<\n\na m\n-kC\n\n>\n<\n\nø\n=lk\n\ndrLkC<\ne\nkC\n>\nq-k\n>OO\no\nOæa\nca\na\nu'OæOøOuOc'eT÷÷cOeOa'aaæOcOedcaOOæ»LaOæe'c:\na\nu'OæOøOuOc'eT÷÷cOeOa'aaæOcOexaOeOaOccOe÷xeOc:'VaaO÷eOOøOaa1uþ\na\n>Oøj\n<-kClk\n\n<\ne\n\n>\n\n>\n\nr\n\na\n>Oøj\n<-kClk\n\n>\n\no\n=\ne\n-kp\n\nr\n\na<¦T ¬o VAm» °AAm¬L§v3¦E8e1eiiiOiðj¥T¦LÆKa¦E§mw(r)V¦T«Æ@1⁄4\ne.eiii iðj¦O¬\"§¦L «T¬L EE«§\n\n2¦O¦T {¬OO§ENO bEG¬1⁄2\noO¦L«$ VAm¬§m¬o ¬oN»ÆKa {¬1⁄4A°±¬x2E {)aO« z¦L(r)C\" 2%2«TO«3\nO L2.¬¦L(r)CLE CA¦L«O1⁄462¦'¦A\nV2 V _¬1⁄4\nO§LE VAm¦L« §(r)C¦L«Æ#O V{¦T§\n1⁄2\n3⁄4¬¿A >¬LÆ<2y¬O-.¬EN¬L«TO BEN¦AyEG¦LaN¬L«TO V{¦L§Y2§{¬=?Ea\"(r){Em§¥TO\nV{¦T§A VAm» ¥ {¬OO«O VAm¬oO L2.¬1⁄4<¬L§ ¬L«O VA¬:¥T¦LÆKa¦Em§m-e1eiiiOið@a«T¬O_¥LO V_¦L§1⁄4?O§m\nEa {3C CA¬=§m¬L°A Q3¥«T¬OO ¬')O L2yN.¬,1⁄2ZGo¦,a {3) VAm¬O L2yN.¬=°A VA2§X?/a-¥L¦O¬1⁄46°±¬\nE.¬C VAm¬@(r){Em§¥ V{¦T§uOa/8aT,aOuOOOa'øOuOccc,OeTvyE>OuOc:xycOæOuO'\n<\nO'OuOOæOay1⁄2\no«O 11⁄4 CA¬Ca«T¬O,{¥TO ¬ ¬L(r)E2§2 V_¦L§\n1⁄2\no\na,o,÷e'aOøOaaa÷uOO'aOO'uOcaøOc»o\no\n:caO'OuOcaLþ'þ\no\na,o,÷e'aOøOaaa÷uOO'a,÷Ci,aT\no\nc'uTyaOuOd:uOaOe»þOþ\no\na,o,÷e'aOøOaaa÷uOO'aaac»oLaOæOæ÷cOeOøOc,o\no\naOaaæOcOeaac,oLaOæ'æ÷cOe,þ'þ\na<¬o O°±¬2E { Ema=aNO« <¦L(r)Ø CA¬C 2%2«TO«31⁄2\n\nApril 2003\nJoshua Predications\no\na,oLOe,÷uaa1u\no\nþ\no\nu,La'aLþ\no\nOa,'\na\nOe\na\nO'OuOcaø'c,o\n\nacaOaOæO@>OuO'aOæOaOaOaaO\na\n,÷ iaTp>'uOOaOæ'aOaOaaREOu'øOuOaOeO'a1u\na\naac,oLaOæOæ÷cOeOøOc»o>OuOOaOæOaOa'aa'uOOca\na\nO'OuOcaø'c,owy\n\nac,o\n\nciaydi÷.\na\n,÷ iaTpi÷1TæOOøOuOa'eOOa1u,ø\nm\njO\na\naac,oLaOæOæ÷cOeOøOc»oi÷.\"aOcOa'O\na\nO'OuOcaø'c,o=aOc'acæ\n\naOea1uø\n-kkk\n\na\n,÷ iaT\n\naOea1uø\n-kkk\nEOuOø'uOaOeOOa1u\na\naac,oLaOæOæ÷cOeOøOc»o\n\naOea1uø\n-kkk\n÷efO\na\nO'OuOcaø'c,owy\n\nac,o\n\nciaydjOOa'a,OLOe'OæO\na\n,÷ iaTpj'OaOa,OTOeOOæROOuOø'uOaOeOOa1u\na\naac,oLaOæOæ÷cOeOøOc»ojOOa'a,OLOe'OæuOu'Oa,L÷eO\na\nO'OuOcaø'c,owy\n\nac,o\n\nciaydaccc\na\n,÷ iaTpacccw OOuOø'uOaOeOOa1u\na\naac,oLaOæOæ÷cOeOøOc»oaccc\"æOc'u÷c,Lcf÷æOO\na\nO'OuOcaø'c,o=aOc'acæ',LafOu'\na\n,÷ iaTp',LafOuREOu'øOuOaOeO'a1u\na\naac,oLaOæOæ÷cOeOøOc»oO,TafOuæ'c,÷aaO,þ\no\nuOa/8EaTaOuO'OaOøOuOcccOeThy>OuOc:ycOæ'uOO\n<\nOOOuO'æOayLþOþ\nlkCm\n\no\n,÷uaa1uþ\n\naOa'u÷efOæ\naCo\n\n>>\nk\n\nø@\n\nq\n>\n<-kC\n'\naClkC\n<@\n\nø\n-kkk\nE\n\nøj\n\n=\n\naCo\n\n>>\nk\n\nø@ee>j\nk\n\nqlk\n>\n\naClkC\n<\n\n-kC<\n>\n\nøj\n\n=\n\nø\nm\njO\naCo\n\n>>\nk\n\nø@j\no\n=\n>j\noLkC\n\naClkC\n<\n>\n\nn\n\n>\no\n\nE\n\nøj\n\n=\n\naCo\n\n>>\nk\n\nø\n\nø\n-kkk\nn\nkCq\n\na=\n'ø\no\n\ne>@\n\nq\n\naCo\n\n>>\nk\n\nø@\n-kC<@o\n\na=\n'ø\no\n\ne>\n\nø\n-kkk\n\naCo\n\n>>\nk\n\nø@>\n\nn\n\n>\no\n\nT\nj\n\nO\na=\n'øzy\n\nac»o\n\nci,aydeeO\naC-kC\n<\n\nq\nE\n\nøj\n\n=\n\na=\n'øzy\n\nac»o\n\nci,aydj\no\n=\n>O\naC-kC\n<\nee\n\nøj\n\n=\n\na=\n'øzy\n\nac»o\n\nci,ayd\nlkC<\n\naC-kC\n<\nj\no\n=\n>w\n\nøj\n\n=\n\na=\n'ø\n\ne\no\n>\n\n>\n\nn\n\n>\no\n\n',LæOaxOu÷ef'æ\n\ncOeOa\na<¦T°\n°B¬=E.¬)¥L¦TÆAaN¦Em§O»EG¬L«3! a¦;e.eiii iGðii1n\n°AA¦°A«T¦L ¬ CA¬=2¦O¦A\n\"\nIA« ¦L(r)6? ¦EN¬1⁄4 \"\n°AA¬L§- CA¬jLE VAm¦L«@ 2bEN¬O1⁄4NO§m°AAmO K VAm¬j'Em VAm¦L«,¿Q#a«¦L(r)V¬,{¦L§-°±TÐq VAm¬$¥T¦L§ V2§EO V_¦L§-(r)C¦L«TO\nÆ#» .< VAm¬ O§°±¬L«O<§ ¦zE.¥Em«ObEN¬P\\o§(c) 2EA\n1⁄2\no\nOæa\nOeT\na\nOOOuOcaøOc,oRy\n\naxc,o\n\nciayj'OOOuOca\na\n,÷CiaTOOO'uOcaj'uOaOeOOa1u\na\naac,oLa'æOæ÷cOe'øOc,o='OOOuOcajOaac,oLaOæOæ÷cOeOO\n\no\nLcuT,\no\n÷f'eOcaa,þ\no\noLca cOpyC{|{|{\n\nCT{\n\n{\n\n:acOOaxTiaaæ÷cOe\nc,o\n\nuOa\n\nac,o\n\ncia¡!yjO'OOuOca9OuOaOe'Oa1uOaac,oTaOæOæ÷c'e,þOþOþ\n\nJoshua Predications\nApril 2003\nee1@\n\nøj\n\n=\n\n>j\nk\n\nqlk\n>\n\n:acOOaxTiaaæ÷cOe\nc,o\n\nuOa\n\nac,o\n\ncia¡!\nj\no\n=\n>1@w\n\nøj\n\n=\n\nj\noLkC\n6:ac'Oadiaaæ÷cOe\nc,o\n\nuOa\n\nac,o\n\ncia¡!\n\n-kC<\nCw>\n\nøj\n\n=\n\nø\nm\nj\no\n\n6:NacOOaxTiaaæ÷cOe\nc,o\n\nuOa\n\nac,o\n\ncia¡!\n?O¦L(c)_¥LO =¥T¦L§§¬O¥ V%E¬,-(r)C¦O¥E/!O§mv«T¬L(r)§¬\nOOE¬L«_¬!O§mA¥Em -¦L°A§\nVAm¬\nE3 ¬LÆz¿Qo.¬OO«T¥A\nV2Æ#¬1⁄2¢ §A:¥L¦TÆAaN¦Em§e.eiiiOið%ii1n\nE/2§(c)!e1eiiiOið2ði154'\n1⁄4A CA¬- _¦L(c){¥EN»«_L2 {¬,x CAO =O«T¬\n¥L¦TÆAÆ#¦L§\" ¦;O\n¥T¦LÆKa¦L§m¬L§ 7a«T¬O,{¥TO V{¦L§?Æ<E O2y¬z2§ O§ V{O ¬Oj ¦;j¥L¦TÆAÆ#¦L§)¦2£D1¬'¥ 7(r)C¦L«\nVAm¬ OOE¬L«3$ ¦9VE¥T¥T¬O¬Oy1⁄2\n§o¦E«j¬oNOÆKa _¬1⁄4N VAm¬$ {¦L(c)_¥ ENO«{L2N {¬T#OOOu'caC§\na»§ V_» a¬O ¦xx§m»Æ#¬$Æ#O ¥A§(c)- VAm¬\n(r)«O <OOE¬T«3=aN» C ¬L«§1⁄4\na\n'OOuOcaøOc,owy\n\nac»o\n\nci,ayjO'OOuOcaO1⁄4§mOÆ#¬L Q3$o«T¦LÆKÆC1⁄2\n#OOOuOcaj«T¬LÆ#»§\n92§ O§ V{O ¬O! a¦\"o«T¦LÆKÆ\n»§m! VAm¬!.¬OO«T¥A(r)V¦T«a«T¬O_¥LO V_¦L§\n9 ¦\"Æ#O ¥A\nVAm¬\"«T¬ 9¦L(r)C VAm¬)O»EG¬L«{¬,=L2y¦EN¬!I\na\n,÷CiaT\n'OOOuOca\n'uOaOeOOa1uO§m\na\naac»oLaOæOæ÷cOeOøOc,o:'OOø\nOuOca!'aac,oLa'æOæ÷cOe'TIa1⁄4BE9§O««T¦L°±¬O\n¦L°A§\na¦)¦L§ Q3: VAm¦.¬\"a«T¬'{¥TO V{¦T§\n9Æ#O ¥A§(c)\na\n,÷ iaT\nacccIOuOa'eOOa1u,O§\na\naac,oLaOæ'æ÷cOeOø'c,oMacccIOaac,oLaOæOæ÷cOeOO1⁄2O\n§ Q3°AA¬L§O 2 < VAm¬a«T¬O_O\n¥LO V_¦L§<2§ CA¬z¥L¦TÆAaN¦Em§$O»EG¬L«3$ALEN¬Y2¬O¬L§.O VE(r)_¬O97 VA¬z¥T¦L§ C2§EO V_¦L§¥LO {¬O1⁄2\nI\n(r)E ¬L« CA¬)¥T¦L§ V2§EO V_¦L§8¬o¬'¥Em ¬1⁄4U#OO'uOca1⁄4>Ou'aOeOOa.u1⁄4Ø»§mI'aac,oLa'æOæ÷cOe=2y¬O¥T¦LÆ#¬E§2§mO\nO§ C{O ¬O!2§\nVAm¬(r)«O ; V°±¦a«T¬O_¥LO V_¦L§\naO V ¬L«§1⁄2FGOA¬\" { ;a«¬O_¥LO V_¦L§waNO V ¬L«§A V2\nAOOOOu'caA§\na»§ V_» a¬Oy1⁄2/EN¦AyEG9 _¦O¦A?(r)V¦T«C VAm¬ §m¬o #.¦L bEm V{¦T§ ¦{aac»oLaOæOæ÷cOeTOc»o¤accc\nOaac»oLaOæOæ÷cOeE¥1⁄2 7(r)E2§my?§m¦L§m¬1⁄4N.¦z O2,¥1A7EmaO§j V«{¬,.¦L bEm V{¦T§\n? ¦=,÷ iaTTaccc$Ou'aOeOø\nOa1u¥01⁄2U @(r)E2§my;§m¦L§m¬\"¦L(r) VAm¬.¬\"¬L VA¬T«O1⁄4O.¦2 2y¥1A@EmaoO§m- {¦'¦A (r)V¦T«.¦L %E V_¦L§; ¦ VAm¬\n(r)«O O»EG¬L«3\naN» C ¬L«§1⁄4\na\nOO'uOcaøOc»o¦y\n\na8c,o\n\nciayIOOO'uOcaO1⁄2J E(r)j°±¬!Am,-e1eiii iGðii1n ¬O\nVAm¬@ VA«T¬O¬zO»EG¬ V_¦L§\n#.¬LaO«TO ¬L s31⁄4\no\nOæa\nOOOuOcaøOc,oRy\n\naxc,o\n\nciayj'OOOuOcaS!!!Vþ\no\nOæa\n,÷CiaTOOO'uOcaj'uOaOeOOa1uS!!!Vþ\no\nOæa\naac,oLa'æOæ÷cOe'øOc,o='OOOuOcajOaac,oLaOæOæ÷cOeO!!!Vþ\nVAm¬xE3 ¬LÆ\n°±¦Em {xAmLE¬;a«T¦OOE¥T¬Ox VA«T¬O¬x.¬LaNO«T» a¬; 2 .Y¥L¦L§ O2§2§(c))$(c)«T¬'» A¬OO A¦L(r)<¬oNO\nV«TO§¬'¦E$2§(r)C¦L«Æ#» C{¦L§1⁄4O¬a¬O¥{O Q3\n2(r) °±¬)A,\n)E¬T«3I _O«(c)¬!O L2.¬aA°±¬)°±¦E _:ALEN¬\n(c)¦L V ¬T§) 2E <¦L(r)>LEm VAm¦L«OK¦L(r) \"\nG\nAm¬AIA« <¦L(r)F? ¦EN¬ \"\nÐO; <¦T(r)>¬EN¬L«3LEm VAm¦L«Y2§ VAm¬ O L2.¬\nO§9AK¥T¬L§ Em«3ÐOO§$ 7¦L(r)O¬EN¬L«3xLE VAm¦L«#2§ VAm¬ O L2.¬ O§m9AE<a«T¦T(r)V¬_¦L§1⁄2\nG\nAm¬v {¦T(c){¥T» \"¥T¦L§§¬'¥ V%EN¬\ne.eiiGi ið2ðse-0v2§ O§ C{O ¬:2 1: {¦T(c){¥ENO«{L2 _¬w0¬LaO«TO ¬L s3(r)C¦L«\n¬O,¥Aa«T¬O_¥LO V_¦L§2§;O»EG¬L«31⁄2§G\nAm¬ ¬T(r)(r)C¬O¥ >E< VAm¬j.OÆ#¬zN?VA2§(c)).¬TaO«TO ¬ OOE¬T«{¬1⁄2\n?O¦L(c)_¥LO 7¥T¦L§§¬O¥ V%E¬,z¥TO§\n1⁄4\n¦L(r)#¥T¦Em«O.¬1⁄4q2¬x¥L¦LÆ<2N2§m¬Oy1⁄4\nC§\nVA@¬oN»ÆKa {¬1⁄2]<¬T«T¬=°±¬$ {¦'¦A\n(r)V¦T« O Ba¬L«O.¦T§\nK°AA¦9O«T¬ §m¦L K¥A {«T¬T§\n1⁄4qO§m=°AA¦9O«T¬9¥1E««T¬L§ V s32 2 ±°\nVA¬T2 VAm¬L«CÆ#¬O {¬\n¦L«YÆ<EmÆKa1⁄2qIQIØVEÆ#¬C VAm¬ Oaa«T¦La«_O ¬?e.eiiGi iðØ O ¬LÆ#¬L§ 17ALEN¬2y¬O¬L§¬L§ ¬L«T¬'y1⁄2JI\no\na,o,÷e'aOøOaaa÷uOO'auOu÷T\no\na'aaæOcOe»þOþ\n\nApril 2003\nJoshua Predications\no\nOæa\nOeT\na\neOcO\na\nuOu÷LOaOaaæOcOeOO\na\nca\na\nuOOæOøOu'cOeT÷÷cOe'aOaaæOc'eTcaO'æ,LaOæxOcTTu,\na\nuOOæOøOu'cOeT÷÷cOe'aOaaæOc'eTcc,aOæOcTuO'\n4VaaO÷e'OøOaa1u98{,cOøOuOOu:a1,øa,La'æe÷L'þ\na;<a\n\na\nj\n-kC<@\n\nO\na\n\naC\n>Oøj\n<-kC-k\n\ne\n\n>\n\n>\n\n<\n\na\n>Oøj\n<-kClk\n\ne\n=\ne\no\n>\n\n<\nOO\na<¦T°\nVAmO C°±¬¿\nE¬).¬'¬L§\nAm¦L°\na¦=2Em2 {a«T¬O,{¥T» C{¦L§9O§m)a«¬O_¥LO V_¦L§\naO V a¬L«§\n1⁄4A C°±¦E _\n2¬9E/.¬L(r){E A ¦xEa _3 CA¬$Æ#¬OO§2§(c)!¦L(r)Ka«T¬O_¥LO V_¦L§2§\n§mO Em«T» A {O§(c)EO(c)¬1⁄2%¬O¬$ VAm¬.¬O¥TO\nV{¦T§\n\"\noO¦T«ÆYO V C2§(c)\nV\n«T¬O,{¥T» C{¦L§TaC VAm¬%I_ Wj¬L VAm¦O \"\n1⁄4CaN»(c)¬wo ¦L«Æ#» C V2§(c)O\nV\n«T¬O,{¥TO V{¦L§TaJO\nVAm¬OO%,I&qOW$¬L CA¦OO%-\\(c)^G_ `OZaA1⁄2\n4.5. Formatting Predications: the SAY Method\no\nEm§¥ V_¦L§a\ne.eiiGi ið%iTila\noO¦L«Æ#O 72«T¬'¥ V%EN¬a\n« \\\\\n¬*Z(r) \\\\\nW$,¥«T¦a\ne.eiiGi ið'L7[5/)/0'*7,i1)3Pie*'\nGo¦9a«2§ A CA¬9Æ#¬OO§§(c)-¦L(r)K$a«T¬O,{¥T» C{¦L§§§O EE«TO Ø {O§(c)EO(c)¬I{¦T«=.¦LÆ#¬$¦L VAm¬L«;O 2 ¬L«§m,O\nVbEN¬1⁄46VEG¥AA(c)«TOaA{¥O.Ia1⁄4qN#¦LaaN¦.¬O= ¦; CA¬ a«T¬O,{¥T» a¬j¥TO {¥1E %EA§m¦L O V_¦L§)2§)°AA_¥A)a«T¦OO\n(c)«TOÆ@O«T¬°\n« V ¬L§1⁄4±3¦E\n¥TO§8E/.¬! VAm¬e-0zi1x(r)Em§¥ V_¦L§\n1⁄47°±¬AmLE¬)2¬'¬L§u¦T2§(c)8§\n.¦LÆ#¬=¦L(r)K¦E«Ae.eiiGi ið%iinw¥T¦L§ C2§EO V_¦L§\nTÐ6¦L« °±¬=¥TO§:¬LÆ<2y¬O(r)C¦L«Æ#» C V2§(c)«T¬O¥ CbEN¬Y2§ ¦\n\"aN¬O¥{O ØÆ#¬L VAm¦OLENO2 {L2N {¬9(r)C¦L« CAO Ka,E«aN¦.¬1⁄4q VAm¬Ye1eiiiOið%iTia\nÆ#¬L VAm¦Oy1⁄2e.eiiGi ið%iTila!\n,¥ EGO 2 s3uÆ<Em 2 V_Oba,E«aN¦.¬\n\"\nAm¦O¦A \"\n(r)C¦L«E/§(c)u§mO Em«T» ; _»§(c)EG»(c)¬,1⁄4#¦L«!(c)«TOaA{¥O1⁄4#¦L«:»§3\n¦L VAm¬L«@a«T¬'{¥TO ¬OO¬LaN¬L§¬L§ A»aa«T¦O,¥A3N¦E!°AA1⁄2 E,E,{¥{¦E/?E/.¬j¦L(r)±e.eiiGi ið%iTilaÆ#¬L VAm¦Oy\n¥LO§Æ#LA¬C2 7¬O{¬L«# ¦C(c)¬L§¬T«T» a¬E/.¬L«Y§ a¬L«(r)V,¥T¬KOOE_¥AN Q31⁄2\nq¦Ew¬L(r)E2§m¬9e1eiiiOið%iTiaÆ#¬L VAm¦O\"2»3)E/2§(c)\nVAm¬(c)¬L§¬T«T» 7Æ#¬L VAm¦O¬L(r)§ V{¦T§\n(r){E§m¥ V{¦L§1⁄4\ne1eiii iGð('L75/)(/0'L7,i-)P0ie*'\n1⁄2xI G\nAI CA¬.OÆ#¬\n(r){E§m¥ V{¦L§\n3N¦E\n°±¦E _DE.¬u ¦\nÆ#¦O(r)23!¦L VAm¬L«$aNO« 1;¦T(r)# VA¬$EN¦AEa«T¦L ¦'¥L¦L E1⁄4±O§m2 1 ,»ENO§¥T¬OE.¬x ¥T¦EN¬L«T¬O2§o VAm¬\n°GμAC±my¢$2B`3V01¤ 1¢ 9¢¤¢ E1⁄2JI\nG\nAm¬z»«(c)EmÆ#¬L§ 1< ¦<e.eiii iGð('L75/)(¡0'L7[,i-)3Pi\ne*'O«T¬a\n-\nGOA¬:(r){E§m¥ V{¦L§mOaN¬O¥:¦T(r)= VAm¬:a«T¦L a¦O¥L¦T ÆY¬T VA¦':3¦E\n»«T¬\n¬L(r)E2§2§(c)1⁄4<(r)V¦L«\n¬oNOÆKa {¬,1⁄4YIæOu\noLcOc»þL1⁄2\n-\nGOA¬»«(c)EÆ#¬L§ j 11⁄2x E§8 VA¬¥L.¬¦L(r)Ae1eiiiOið%iTiaAÆ#¬L CA¦O1⁄4A CAE\"A¦E _IO 2Æ#¦ $» _O\n°±3>2y¬jI μ>cOaO÷cOeO,CIæ'aaOc¶OæO'OeTa.øOcOO'aOO·,þ'þL1⁄2\n-\nGOA¬Y2¦OT3¦T(r)Ø VA¬CÆ#¬L VAm¦Oy1⁄2\nG\nAm¬2¦OT3¦T(r)z VAm¬)Æ#¬L CA¦Oo¥T¦L§ O2§xO§3 ?/aI¥T¦O¬1⁄4\na«¬VEÆ#L2 s3¦L2§(c)w¦E CaEm 9 ¦ VAm¬\nV«T¬OOÆ\nÆ#¬L§ V{¦T§¬O9§ VA¬zO«(c)EÆ#¬L§ O 2 .1⁄2\noO¦L«¬oN»ÆKa {¬1⁄4AVEaa¦.¬\"3¦E\n°BO§ x ¦!°A«2 ¬:)e.eiiiOið%iTia\nÆ#¬L CA¦OI(r)V¦T«- VAm¬\na«T¬'{¥TO ¬\na\noLi,caO÷Oa'øcaO,S!!!EO1⁄2&GOAKa«T¬O,{¥T» a¬; LAy¬A V°±¦9O«(c)EÆ#¬L§ 11⁄4O§OÆ#¬L s31⁄4\na'OOaa1⁄4qO§mIoLc'cT1⁄2\n\nJoshua Predications\nApril 2003\nq¦EO¿A Ø°BO§ K ¦ 22§m?EaEN»«_L2 {¬,Y ¦9 VAm¬$»«(c)EmÆ#¬L§ 1C¦T(r)< VAm¬ja«T¬O_¥LO V_¦L§\n.¦9 VAm» O3¦E\n¥LO§\nE/.¬\" VAm¬)O«(c)EmÆY¬T§ 1;°\nVA2§ VAm¬\"a«T¬'{¥TO ¬\"Æ#¬L CA¦O1⁄21Gq¦)¦ VA1⁄4B°A«TOa\nVA¬Æ#¥«T¦\ne1eiii iGðo.¢7i4)2iE1i-P5/ )'*iE0i4,Vi40'\nO«T¦E§mD VAm¬v2y¦OL31⁄2GOAm¬Aa«T¬O_¥LO ¬uO«(c)EÆ#¬L§ 1\nVAm¬L§\n2y¬O¥T¦LÆ#¬x {¬o_¥LO 2 s3!LEN» {L2 _¬1⁄4\nO§m-¥T»§!2¬x«T¬T(r)V¬L««T¬' ¦$2»3- VAm¬@?Ea-(r)C¦L«ÆC1⁄2\nI» E(r)73¦E\nALEN¬IO 2«T¬O,L3A¬T(r)§¬Ow CA¬oa«T¬O,{¥TO ¬\n°A VA\n2 .2§ O§m¥L¬\nEN»«_L2 {¬,-¬, V«1EG¥ Em«T¬O1⁄4O3¦E\n¦L§/¿A =§m¬O¬OI a¦-E/.¬e1eiii iGðo.¢7i4)2iE1i-P5/ )'*iE0i4,Vi40'\n1⁄2>o ¦L«)Æ#¦L«T¬:¦L§\nÆ#¬L VAm¦Oy¦T(r)\nÆ#'AN2§(c)\na«T¬'{¥TO ¬\nO«(c)EmÆ#¬L§ .A {¬o_¥LO 2 s3\nLEN» {L2 _¬ap%¬O¬\nVAm¬\nÆ#,¥«T¦Ae1eiii iGð('L75/)\n/0'*7,i11⁄4/aO(c)¬FD.¦AEGyaJ¬L(r)§¬'Oba«T¬'{¥TO ¬OO%oY¢aJ^G_ `ObaK1⁄2JI\nI\ne.eiiGi ið%iTila\nÆ#¬L VAm¦Oo(r)C¦L«\" VAm¬-a«T¬O_¥LO ¬\na\noLica'÷OaOøc,aO,-1⁄2Q1⁄2s1⁄2Q\"ÆK2(c)A j {¦'¦AA.¦LÆ#¬L CA§(c)\n2%A¬C VAETa\no\na,o,÷e'aOøOaaa÷uOO'aoLi,caO÷Oa'øcaO,\no\naOO'aa=oLc'cTþOþ\no\na,o,÷e'aOøOaaa÷uOO'aOøcaO'uOcT\no\næOTu)oTicaO÷OaOøca',Oþ\no;}\ncOaO÷cOeO,\no\næOaa'cp·Oæ'OOeTa1øOcO'OaOO·»þOþ\no\n:÷'uOøOæOO'OacaOe'OøTaOæ'aOuO'aaT\no\naOOOaa=oLcOcþ=æOa»Oo\no\noTcaCcOxæOaa'c\nyC{\n}$\ncOu'Oea,TaOOæOad{\n\nuTuwf÷Ci÷efOu'ac{\n\nOca'Oyja'OOaa$oLcOcTþ'þOþ\n<LE2§(c)8¬L(r)§¬'o VA@e.eiiGi ið%iTila\nÆ#¬L VAm¦O1⁄4\n3¦Eu¥T»§\nE/.¬-2 92§\n-EO«_¬L {3\n¦T(r);°±31⁄4>\nA¦T°\n§-Am¬L«T¬1⁄21⁄4o¦Eo¥TO§\n¥TO 2\nVAm¬9Æ#¬L VAm¦O2«T¬'¥ V s31⁄4q(c)%E2§(c)2 #O§-2§ O§ V{O ¬Oxa«T¬'{¥TO V{¦T§\nO«(c)EÆ#¬L§ a\no\næOTu\na\noLica'÷OaOøc,aO,c,cOeOaTu,æuOOe'OeOOæO»þ\n\ncOu'Oea,TaOOæOa@e\n\nn\n\n>uTuwf÷Ci÷efOu'ac\nm\n>xOca'O\nlkC\nO\n« 3N¦Ew¥LO§:E.¬je1eiiiOið2ðoe-0zi19,2«T¬O¥ VbEN¬2§m¥ %E¬O-§oEN¦,AyEG\" ¦\"¥TO 2 Be1eiiiOið%iTia\n2§ ¬O,$¦L(r)6e.eiii iGðð1⁄2/07543⁄4#¦L«>e.eiii ið2ð1⁄2¡07[51⁄4,a\no\noLcaCc'zy {|\nk\næ\"÷aOa'uOO/8s{¿¿>\n\n¿¿y\na\noLi,caO÷Oa'øcaO,$ccOe'aTuæu'OeOOeO'æO,þ\nk\næ÷xaOaxOuOO¡8\n\ncOu'Oea,TaOOæOa@e\n\nn\n\n>uTuwf÷Ci÷efOu'ac\nm\n>xOca'OO\nlkC\nEN¦AyEGa«T¦E{¬ VA¬\"¥T¦L§EN¬L§_¬L§m¥L¬(r){E§m¥ C{¦L§1⁄4\ne1eiiiOið%iTia/)[Ayi40Ea\na¦,a {3:\n.O VE(r)_¬O\nO»EG¬L«3\nE§(c)\n¬L VA¬T«\nVAm¬\n¬L(r)CLE\ne1eiiiOið%iTia\nÆ#¬L VAm¦Oy1⁄4¦L«D3¦Em«\n¦T°\n§re1eiiiOið%iTia\nÆ#¬L VAm¦Oy1⁄4\n(r);O§31⁄27I»GOA¬-¬L(r)C'Em 2 #e.eiii ið%iTila8ÆY¬T VA¦'2ÆKa s3oa«§ 1=¦Em ; VAm¬-»§°±¬L« ¦\nVAm¬ OOE¬L«31⁄2JI\n?O¬L ¿:(r)CO V ¬L§\nEma\n¦Em«8O L2.¬A¦L(r))(r)C¦O¦Oy\nO§m\n¬OO ¬T«O!2¬L(r)C¦L«T¬wE/2§(c)\nVA¬:e1eiiiOið%iTia\nÆ#¬L VAm¦Oy1⁄2\n\nApril 2003\nJoshua Predications\no\na,oLOexaOOOø÷\no\nþ\no\nu,La'aLþ\no\nOa,'\na\nOe\na\noLicaO÷'aOøcaO»=uOaOaæuOc'eOaTu\na\noLicaO÷'aOøcaO»ccOæ÷Oc'aOæaOa'cOa,LaO\na\noLicaO÷'aOøcaO»=æOa÷.aaæoO,÷aOæ'\na\noLicaO÷'aOøcaO»9ycOæ'uOOOæxaaaT÷uOO÷c'eOæO\na\noLicaO÷'aOøcaO»ccOeOaTuæxuOOeOOe'OæOO,þ\no\nuOa/8EaTaOuO'OaOøOuOcccOeThy>OuOc:ycOæ'uOO\n<\nOOOuO'æOayLþOþ\no\naOOOø÷,þ\n\naOa'u÷efOæ\na\n\nkC\nøe\n\ne\n\nn\n\n>\nm\n>O\na\n\nkC\nøe\n\ne>\n=-k\n\n>\no\n\no\n\na\n\nkC\nøe\n\ny>\n=\n>\no\n\n<-k\nj\n-k\n\n>O\na\n\nkC\nøe\n\nm\n\n>\n\na\n\nkC\nøe\n\n>\no-kC<\n>\n-kC\n>O\n',LæOaxOu÷ef'æ\n\ncOeOa\no\nOæa\noLica'÷OaOøc,aO,='aOOOaa9,oLcOcCæOTuø,Oaa1uu8{cOøOu'Ou:a1øa»LaOæe÷LOþ\n\ncOu'Oea,TaOOæOa@e\n\nn\n\n>uTuwf÷Ci÷efOu'ac\nm\n>xOca'O\n\ncOu'Oea,TaOOæOajy>\n=\n>uTuwf÷Ci÷efOu'ac\no\n\n<-k\nj\n-k\n\n>xOca'O\n\ncOu'Oea,TaOOæOa@>\no-kC<\n>uTuwf÷Ci÷efOu'acp\nlkC\n>'caOO\n\ncOu'Oea,TaOOæOa@e>\n=lkC\n\n>xuTupf÷Ci÷efxOuOac\no\n\no\nOcxaOO\n\ncOu'Oea,TaOOæOa\nm\n\n>xuTupf÷Ci÷efxOuOac\n\nOcxaOO\nAOe-yð@Gq¬O¥A§{¥T» Q3\n¦E«:e.eiiGi ið%iTila\nÆ#¬L VAm¦O\nE¥L¦T««T¬O¥ V Q3\n¬L(r)E2§m¬O\nO§m\n\n¥L¬T« O2§ Q3\n°±¦L«1A1⁄2sAE x°±¬:a,E«aN¦.¬L s38ÆKaA«T.¬O2 .1⁄4<2§\n¦T«T¬L«- ¦:Æ#LA¬o\naN¦L2§ a< VAm¬:aA«T§(c)\nÆ#'Ay¬$»§2ÆKa {¥2 11⁄4B§m¬L°\nI_O§-Em§°±O««TO§ a¬OI@¥T¦L§§¬'¥ V_¦L§I2y¬L V°±¬O¬L§\nCA¬\"{¬O\n\"\n(r)VLEN¦L«2 a¬OO\nÆ#¬OO \"\nO§- VAm¬{¬'\n\"\na¦a {¬'N.¬2»3\n(c)bE2§(c)o ¦¬OO \"\n1⁄2ZWzEG¥A\n¥L¦T§(r){E_¦L§§a«T¦L(c)«TOÆAÆK§(c)\n¥L¦TÆY¬,K(r)E«T¦LÆ\nVE¥A-¥TNVEGO ±«T¬O¬T(r)§ V{¦L§1⁄2GI\n2¬T V ¬L«aA«T2§(c)°±¦Em {$Am'EN¬C2y¬O¬L§\n.¦LÆ#¬L CA§(c)\n2%A¬\n\"\nG\nAm¬C(r)VLEN¦L«2 a¬@Æ#¬OO ±¦L(r)<1⁄2Q1⁄2Q1⁄2/#1⁄2Q1⁄2Q1⁄2 \"\n1⁄2\n4.6. Tracing Predications\nO¦LÆKÆ#»§myTa\n\\q§m'2N {¬YEN¦AyEGGO«T,¥§(c)\nAE.'2N {¬YEN¦AyEGGO«T,¥§(c)\nAq¬O¥T'E/.¬;O L2.¬;¦LaN¬L«TO V{¦T§\n? bAy¬Ke1eiii iGð[\nO§mCe.eiii ið%iin\nO«T¬$.¦@(r)Em§OÆY¬T§ O\n¦\nVAm¬j¦LaN¬L«TO V{¦L§¦L(r)AEN¦AEja«T¦L(c)«TOÆ@1⁄4O°B¬9¦L(r)E ¬L§)°BO§ ? ¦ °BO ¥ANK VA§(c)#»«T¬= ¦L«T¬O=2§mO\n¦\"¦T«x«¬L V«{¬E¬'-(r)E«T¦LÆ\nVA¬O L2.¬1⁄2&q¦Ew¥T»§\nV«T,¥T¬ VAm¬x2_¥¦LaN¬L«TO V{¦T§\n9¦L§\na«T¬'{¥T,O\nV{¦T§\nO2,39E§(c)x VA¬z¥T¦LÆKÆYO§ma\n\neOOu,LajycOæOu'O\n\naOu÷ef\no\nTua'ac,o$aOu÷ef,þ\no\naaT÷u'O÷cOe'æ\nG\nAY Em«§\nC¦L§! CA¬j V«T,¥2§(c)!¦L(r)\ne.eiiGi ið%iinwO§;e.eiii ið1⁄2&\\N,¥A! VÆ#¬z3N¦E« a«T¦T(c)«T»Æ\n¥LO Oe1eiiiOið%ii1nw¦L«Ke1eiii iGð[1⁄4q VAm¬j V«T,¥2§(c))(r)C,¥ 2 {3\"a«2§ 1=Æ#¬.O(c)¬.32§(c))°AA{¥A\n¦La¬T«T» C{¦L§E>2¬T2§(c)¦T§¬zO§$¦L§°AAm» Oa«T¬'{¥TO V{¦T§\n1⁄2\n\\\noNOÆKa _¬a\n\nJoshua Predications\nApril 2003\no\na,oLOexOa,OTøOOeTø'OæOø,oTcOcTæ\no\nþ\no\nu,TaOaLþ\no\nOa»O\na\n'eT\na\noTicaO÷OaOøca',=uOa'aæu'cOeOaTu\na\noTicaO÷OaOøca',cc'æ÷'cOaOæa'aOcOa,La'\na\noTicaO÷OaOøca',=æOa÷1aaæoO,÷a'æO\na\noTicaO÷OaOøca',9yc'æOuOOOæxaaaTN÷uOO÷cOeOæO\na\noTicaO÷OaOøca',cc'eOaTuæxuOOeO'eOOæOO»þ\no\nOæa\noLicaO÷'aOøcaO»=OaO'Oaaj»oLcOcT$VæOuøOaa1u\n8{c'øOuOOu:a1øa,LaOæxe÷LOþ'þ\n§¦L«T¬L«Y ¦zE.L2 {¬C VAm¬@ C«T¥2§(c)¦T(r)Øa«T¬O,{¥T» C{¦L§>E/.¬@ CA¬z¥L¦TÆAÆ#O§ma\n<\n÷æOOu,Ta$ycOæ'uOO\n\naOu÷ef\no\nTu,aOac,o$aOu÷ef,þ\no\naaT÷uOO÷c'eOæ\nG\nA7 Em«§\n?¦L(r)(r)OO\nC«T¥2§(c)¦T(r)Øa«T¬O,{¥T» C{¦L§1⁄2\nq¦EI¥TO§\n(c)¬T (c)N«T¬OO ¬L«j¬T(c)«T¬O¬x¦L(r)A¥L¦L§ V«T¦L >¦EN¬L«; V«T,¥2§(c))2»3E/2§(c)- VAm¬$ÆY¬T§yE\n¦La C{¦L§! ¦\nVAm¬H\\q§L2N {¬YE¦,AyEGGO«T¥2§(c)¥T¦LÆKÆ#O§a\n\neOOu,LajycOæOu'O\n\naOu÷ef\no\nTua'ac,o$aOu÷ef,þ\no\naaT÷u'O÷cOe'æS8AeOa'eO\n\na'æ\nG\nA9A¦T°A ÆY¬T§yE¦L(r)YO 2 <¦L(r)A VAm¬x V«T,¥2§(c):¦La V{¦L§ LENO2 {L2N {¬=(r)V¦L«ja«T¬O,{¥T» C{¦L§1⁄4\n_¬L V V§(c)\n3¦E C«T¥T¬¦L§ Q3a«T¬O,{¥T» C{¦L§ Æ#O ¥A§(c)o\"aN»« C{¥1E _»«$aO V ¬T«§\n1⁄4±¦L§ Q3a«T¬'{¥TO V{¦T§\nCE§(c)\n\naO« V_¥Em {O«a«T¬O_¥LO ¬oI_¦L« {3aN¬\n¦T(r)9a«T¬O_¥LO ¬'Ia1⁄4>O§o ¦oa¬O¥2(r)3wO j°\nA{¥AA¬EN¬L§ 1;3¦E\n°±¦E _9 2bAy¬@ a¦j.¬O¬C V«T,¥T¬@§(r)C¦L«Æ#O V{¦L§1⁄2\n§\n,,2 V_¦L§I ¦ CA¬\"'2y¦EN¬¥T¦LÆKÆ#O§3¦E8¥T»§v.¬T $.¦LÆ#¬ C«T,¥§(c)I¦Ta V_¦L§\n@2,3!ÆY¦E§(c)\n«2(c)A <¦T§ a«T¬O,{¥TO V{¦L§1⁄2§G\nA7(c)bEN¬Ø3N¦E- Æ#¬L§E-¦L(r)Ø VAm¬ LENO2 {L2N {¬z¦La V_¦L§1⁄2\n\nApril 2003\nJoshua Predications\n4.7. Miscellaneous Predication Facilities\n%¬E¬T«T» Ya«T¬O_¥LO V_¦L§8(r)C,¥ 22 C{¬xO«T¬!LENO2 _'2N {¬)(r)V¦T«E/.¬)°\nVA2§9?/a¥T¦O¬1⁄2B3⁄4¬)ALEN¬» _O\n«T¬O,L3\"E.¬'-¦L§m¬1⁄46§OÆ#¬L Q31⁄4 e.eiii iGðo.¢7i4)2iE.i1P51⁄4 )['Li0i,Vi40'\n1⁄2(c)<¬T«T¬O«T¬.¦TÆY¬¦L VAmO\n¬L«O1⁄23⁄4¬9VEm(c)(c)¬ B3N¦E {¦O¦A=Ema$ VAm¬L2«{¥ V_¦L§O«3x¬L§ V«{¬7(r)V¦T«YÆ#¦L«T¬z¬L O 1⁄2\ne1eiii iGð('L73`;05/C)%e+e ,.i\n(r)> VAm¬jO«(c)EÆ#¬L§ 1YO«T¬#e.eiii ið2ðALE1⁄4o¦L«@(r)?¬T2 VAm¬L« O«(c)EÆ#¬L§\nuO§\nEm§2§ O§ C{O ¬O\n{¦T(c){¥\nEN»«_L2 {¬,1⁄4;e.eiii ið'L7`05/ )\ne+e ,.iY«T¬L EE«§J5/7E1⁄2^OA VAm¬L«°A.¬C2 O«T¬L Em«§\ns1⁄2\ne1eiii iGðziNn4)(/0'L7,i-72e-5\nO¦L§ V«1EG¥ 18\na«T¬O,{¥T» C{¦L§\nI_¦'¬w§m¦L\n¬L§ ¬L«A2 I§ ¦\nVAm¬\nO L2yN.¬'Ia1⁄2GOA¬\n¤¥)E3§ Lo\nE\n«T¬'¬L«\nÆY,¥«T¦\nVAO ¬oNO\naO§my72§ ¦@ CAE1⁄2\ne1eiii iGðo/0'L7[,i172e-5\nGOA¬\n2.¬\n(r)E {LEN¦L«\n(r)C¦L«uO 2 a«T¬O,{¥TO V{¦L§§\nEN¦AE1⁄2dG\nA\n°±¦L«1A\n°±¬L 2\n°A VA\n(r)Em§m¥ V_¦L§\n2%A¬\ne.eiii iGðð`a*/\nO§m\ne.eiii iGðð`a*/,iiEy1⁄2\ne1eiii iGðo/0'L7[,i172e-52\nAm¬O¥Am\n°AA¬T VA¬T«\n»§\n¦2£D.¬O¥\n\n2E 2\n¦T§\ne.eiii iGðo/0'*7,i17e-5\n1⁄2\ne1eiii iGðo.¢7i4)2iE1i-P5/ )'*iE0i4,Vi40'\n?O¬T 1Ø3¦E22§m?EajENO«{L2N {¬7 ¦@a«T¬O_¥LO V_¦L§O«(c)EÆ#¬L§ 11⁄2\nG\nA¥Am»a ¬L«)Am)A¦L°A§3¦EuA¦L°r ¦(c)¬L§¬T«T» a¬!2§(r)V¦T«ÆYO V_¦L§\n2§vEN¦AEG\n2»3I2Em2 _§(c)\na«T¬O,{¥TO V{¦L§1⁄4 a¦L«2§(c)A VAm¬LÆ\n2§D\nO L2.¬1⁄4AO§mu.¬'»«T¥A2§(c)A VA¬\nO L2.¬o a¦IO§\n°±¬L«\nO»EG¬L«{¬,1⁄2UGOAm¬§m¬o CÆ#;D.¦L«x¥T¦L§¥T¬La @E@E/2§(c)!EN¦AEG\" ¦¬T«bEN¬§(r)C¦L«Æ#O V{¦T§:2,3«T¬O.¦L§mO\n2§(c)\nL2¦Em Ya«T¬'{¥TO V{¦T§\nC°A2 VA\n«1Em {¬zO§m)O»EG¬ V_¦L§\n1⁄2%¬O¬= CA¬\".¬'¥ V_¦L§\n\"\ne\nEm {¬, O§m §(r)C¬L«TO\n¬L§m¥L¬ \"\n1⁄4aN»(c)¬CeOE _¬.O2O§mO E§(r)C¬L«T¬L§m¥L¬'O%-\\(c)^G_ `ObaK1⁄2\n\nJoshua Predications\nApril 2003\n\nApril 2003\nJoshua Rules and Inference\n\n5. Joshua Rules and Inference\nW$,¥«T¦a\ne1eiii iGð('L0i4[\no\nEm§¥ V_¦L§a\ne1eiii iGðJi54'L0i4\nO¦LÆKÆ#»§ma\n%yAm¦L°8EN¦AEG e\nEm {¬,\nAÆ#,¥OK¥T¦LÆKÆYO§m\nUßA\n6 2 ±¬L(r)E2§2 C{¦L§\nO¦L§m¥L¬La 1Ta\noO¦L«°±O«TTAO§§(c)IEe.eiii ið{I\nAq,¥AN°BO«TTAm»§§(c)IEe.eiiGi ið%iin I\nO\n(r)E ¬L§! VA¬$§(r)C¦L«Æ#O V{¦T§o¦L§m¬$ {¦O¦AmC(r)C¦L«z2,3\n.¬'»«T¥A2§(c) VAm¬xO L2yN.¬$EC§m¦L # VAm¬L«T¬x¬oa {¥TO\n2 V s31⁄42Em >Æ<E/ A2y¬@§(r)C¬L««T¬O 2,3$«T¬O.¦L§2§(c)L2¦E O VAm¬AN§¦L°A _¬O(c)¬C VAm» O?O 2«T¬O,L3$ VAm¬L«T¬1⁄2\n3⁄4xA {¬$a«T¬O_¥LO V_¦L§z¬L(r)E2§m¬$ VAm¬$«T¬L _» C{¦L§Aa#2y¬L V°±¬O¬L§:¦2ED.¬O¥ 1@O§mVEmaa Q3E/°\nVA!2§mO\n(r)V¦T«ÆYO V_¦L§\n'2y¦Em VAm¬\n¦LÆ#O2§1⁄4<«1Em {¬¬L(r)§¬\nVA¬:1¢A1μO¤m·2¤,¶D VAmO aN¬L«(r)V¦T«ÆY¬'8L2¦Em\na«T¬O,{¥TO V{¦L§1⁄4 »§m$¥L¦T§ V«T¦T\nAm¦L°\n°±¬z¬OOE¥T¬YA§m¦L°A {¬O,(c)¬@(r)E«T¦LÆ\n¬oE V2§(c)=AN§¦L°A _¬O(c)¬1⁄2\nI\n«1Em {¬E9O§\n§m¬LaN¬L§¬L§ @a{¬O¥T¬¦L(r)¬O¥ {O«TO VbEN¬O§m)a«T¦O¥T¬OOE«TO <2§(r)C¦L«Æ#» C{¦L§o VAO z¬OO\n¬L«ÆK2§m¬@Am¦L°EN¦,AyEG«T¬,a¦L§my@ ¦-a¬'¥(r)_¬O\n.¬L @¦L(r)Y¥2«T¥1EÆC O§m¥L¬1⁄2YO§ 2bAy¬¥L¦T§yEN¬L§mO\nV{¦T§O xa«T¦L(c)«TOÆKÆK2§(c)\n¥L¦L§ V«1EG¥ .1⁄4«1E _¬:LE a¦LÆ#» C{¥T» Q3\n¬o¬'¥Em ¬w§\nVAm¬wa«T¦La¬L«\n¦T«T¬L«\n°AA¬L§m¬EN¬L«j CA¬»aa«T¦La«{O ¬¥«T¥EmÆC O§¥T¬ ¦O¥T¥1E«O1⁄46«T» CA¬L«9 VAO§\n¬oN¬O¥1E C2§(c)!°AA¬L§\na«T¦OO\n(c)«TOÆ ¿Q¥T¦L§ V«T¦L $ V«1EG¥ Em«T¬:«T¬'¥Am¬8a¬O¥2(r)E{¥aN¦L« V{¦T§D¦T(r)= CA¬\n¥T¦O¬1⁄2Æ §\n¦L CA¬L«-°B¦T«Ty1⁄4\n«1E _¬K¥TO§¬oN¬O¥1E ¬zO <O§3= C2Æ#¬1⁄4/«T¬L(c)O«T {¬,K¦L(r)Ø VAm¬z¦L«T¬L«#2§°AA{¥A VA¬.3O«T¬C°\n« V ¬L§1⁄2\nG\nAm¬9«T¬O.¦L§2§(c)¦L§¬ 2»3\"«1Em {¬,Y2§EN¦L bEN¬¬L VA¬T«N3Vμ, C6¢Bo¦T«@oO¢ CElC\n¢NBo¥Am»§§(c)1⁄2OEN¦AE\na«T¦L(c)«TOÆCK¥TO§E.¬z¬L VA¬T«C¦L«K2¦L VA¦T(r)Ø VA¬,.¬@«1Em {¬C {3aN¬1⁄2\noO¦L«°±O«T\"¥AO§§(c))NB¢£b¢EBm·{0. £b B:·2¤3V0.¤ .O1⁄4o VAmO A1⁄4o«T¬O.¦L§2§(c)-(r)E«T¦LÆEE¤μC6¤:(r)C¥ 1Y ¦\n.¦LÆ#¬ ¥T¦L§m¥ %E_¦L§\n1⁄2§G\nA7(r)V¦L«Æ\n¦T(r)A«T¬'N.¦T§§(c)).3Ta \"\nØ§m¦L°8A§m¦L°\n(r)V,¥ FE±1⁄2\n3⁄4xAm» 7¥LO§z >¥T¦L§mO\n¥ %E¬$(r)«T¦TÆ\nVA× \"\no ¦L«j¬oN»ÆKa {¬1⁄4N(c)%E¬T§\nVAm¬=(r)C,¥ .C VAmO K2«Tyz¥TO§\n(r)E Q3-O§m\" CAO KGO°B¬'¬L {3\n=2N2«Ty1⁄4Ø-(r)V¦L«°±O«To¥AmO2§2§(c)I«1E _¬-¥T»§8¬'»EG¥L¬ CA¬\"§¬L°\n(r)C,¥ ; CAO dGO°±¬O¬L {3\n¥LO§\n(r) s31⁄2\nG\nAE/1⁄4(r)C¦L«°±O«T=¥Am»§§(c)x72§ V«1EÆ#¬L§ O A2§,,2§(c) ¦C VAm¬ O L2.¬1⁄2\noO¦L«°±O«Tw¥AmO2§2§(c)\n,¥ VbENO ¬O\n2,3\ne1eiiiOiðE1⁄2ÆGOAO x1⁄4<°AAm¬L§m¬EN¬L«3¦Ewe.eiii iGð[\nEN¦AyEG§¬L°a«T¬O_¥LO V_¦L§\n1⁄4N VA¬E3 ¬LÆ\n{¦'¦AC(r)C¦L«9(r)C¦L«°±»«T¥AmO2§2§(c)«1E _¬C VAm» #2 C¥TO§\nE.¬I_¥L¦LÆ<2N2§m¬O°\nVA\nA§m¦L°A {¬'(c)¬» «T¬O,L3\n2§ VAm¬)O L2.¬OIY ¦«TO°\n¥T¦L§¥ bE/{¦T§\n;(r)«T¦LÆ\nVAm¬@§m¬L°8AN§¦L°A _¬O(c)¬K3¦E(c)LEN¬@ 11⁄2\nAq,¥AN°BO«T¥AmO2§2§(c)!EO¶μO¢ EBm·{0. £b B\n·2¤3V1¤ 1O1⁄4N VAO YE1⁄46«T¬O.¦L§2§(c) ¦\".O V(r)3:.¦LÆ#¬¬OO\n2«T¬O!¥L¦T§¥ bE/{¦L§1⁄2GOAE;(r)V¦T«Æ\n¦T(r)C«T¬O.¦L§2§(c)w.3Ta \"\nC°±O§ z a¦A§m¦L°\n(r)V,¥ PE±1⁄2<¦T°\n¦z\n¬L a¬L«ÆK2§m¬\n2 .\nEN» {,2 {3× \"\no ¦L«\n¬oNOÆAa {¬1⁄4(c)bEN¬L§\nVAm¬\n(c)¦OO I¦L(r)v¬L ¬T«ÆA§§(c)\n°\nAm¬L VAm¬L«\nG\n°±¬O¬T {3¥TO§\"(r)E s31⁄4O@2y¥1A°±O«T=¥AmO2§2§(c)«1E _¬@°±¦Em {9 {¦O¦A(r)C¦L«Y VAm¬@(r)C,¥ .<2 >§m¬O¬'y<§)¦T«T¬L«\n¦VEmaaN¦L« o CAEI(c)¦OO 1⁄4jVAN2§(c)1⁄4;(r)C¦L«A¬oNOÆKa {¬,1⁄4;°AA¬T VA¬T«w2«Ty\n¥TO§\n(r)E Q3\n»§m\n°\nAm¬L VAm¬L«\nG\n°±¬O¬T {3=EK@2N2«T1⁄2\nAq,¥AN°BO«T!¥AO§§(c):j,¥ VbENO ¬O2»3oO§-e.eiii ið%iinq1⁄2UG\nAm¬Ny{ x¡¢N£2£%0¤I2y¬O¥T¦LÆ#¬; VAm¬\n¶μO¢ E1⁄4BO§) VAm¬-E3 ¬TÆ\nCA¬L§\n{¦'¦A (r)C¦L«= VAm¬(r)C,¥ .9»§m-«1Em {¬,9O§O»EG¬ V{¦T§\nCAO @ÆK2(c)A\nVE2m O§ C{O ¬= VA@(c)¦'» E1⁄2(c)Aq¥1A°±O«T)¥AmO2§2§(c)!E@ CAyE/E/.¬L(r){E >§:A¬L a§(c)3¦E¬L ¬L«ÆK2§m¬\nVAm¬ENO 2_2 _3¦L(r)O;¥L¦L§m¥ bE/{¦L§¦L«#(c)¦OO 1⁄2\n\nJoshua Rules and Inference\nApril 2003\nI^IIEIÐINÐOONOO*ÐOC×-IÐIN ICØ2U UUU»IIE×IU`Y2U U ÐÞUßxUalOUaUdaIIpU`YOUz×*UCaIIINIa1⁄2aæ-cEese1ce¦II\na1⁄2e4e-ii/ese1ceOU`Y2ÐUiOONi OÐUUUPU`YOUTICØ2U UiU6ð noOoonoo1÷Eoo ø1ð£oø*ou@u[iUCUKiO*aUIUOOOUTÞUU`YOINu`uyAaÆU`YOU\nICØ2U UwNIUUOiþU6Ø4U Uy4iAUaOOINUßZiUUYOIØOU»NIIIC× UoØ¡ÐUUavIUUUJi[OUiU`YOUI@Ni[IUOEU`i»IO/u_iU`YOUI\nÞUU`YOINpIa\nIUÐU IO*iOMÐOOIÞÆaUiAUYOUU6U`YOUwU ÐÞUTIUU`Ø2U[U]U`YOUOYOIi»OUIa\niO*aUIUOOOUdÞUU`YOIN\nNUalUOON1UNIOpU`Y2UHaIIEO-U»UÞ\nO*Ui[OU IU\nlUN-u*IÞUaIIO-U UÞPUNÐIU6ø-ðÞIIU¤Ua\naAi Oi UOLUUaÐoa\naIIÐOEY2UNdIZi[U`YzIOOU¤OIO*U`IIU1UU`ICØ¡OUAØOIUPU`Y2ÐOwIZiUYwU`Y2UIU`YOUIu\nY*iAU@OEYOÐoaUUIvU`ØOÞÆÞ6ÐIEiUUO1ÐUi»Opi[OLaIIEÞÐU`i»IOtÐO*IEØ2UaIIEIÐIN\nÐOONMO*ÐOC×-IÐINXICØOU»UUTi[O\nlIUY1Ø¡Ðu\n¢eOe1⁄4iebæ/i! #\"$&%¢æ\"'-a\n^Y2U(lIUY-Ø¡ÐpaIIUIOIUsY2ÐUa»Ø2OOOEU`i»IO/UU`YOÐUNUU;UIEÞÆiOOUY2II\nICØOU»UU$ÐoIUzUUIIUN-ßNUU UUUN-ß\nÐO2NXU»II×*UNMØOaLu)*UUhUY2U UUOUi»IO\n\"\n^Y2U*-IUY1Ø¡Ð,+ØOU»UvyAO2NUaiO.-^IIUIOIU \"\niO0/2n÷Oø1\n2Uu43`u£ouCo*ðCu6571o2ø1-o\nu1yAaÆalIØuaII8 i NUzÐvOIO1⁄4Ui\nUUUO*UÐUU;UIEO2ÐUUwiÞÆaU»UÞUO*UÐU`i»IOuIaPU`YOUU U\n*UOOUIEi»Oa\nØOO2OEU`i IO1⁄4UEß&a-IEØ9OÐOIOCØ4UUIÞÆi9URICØ2U UwÞÐOOÐ!*UÞ6UOLUHaII$alIØ2IÐaaUi»OÐU`i»IO1⁄4u:*UU\nU`YOUdU UOU`i IO\n\"\n;\nØ4UUIÞÆi9EiOUY2U<+ØOU»UyAOONUa \"\niO=/2n÷Oø172Uu>3`uEou oLð u?571oOø1loAu\n5.1. Defining Joshua Rules\n@\nICØ2U Uvi\nURNUaAi[O2UN IZiU`YBA æ$C#D§e2aeacDFEG-uH@\nICØOU»UhY2ÐUÐvo1IÆußsÐv×1UCaIIINÐIØ2ÞUO*U\nUa-UOEia[ai[OtiUCUðCno2o[onoH÷£ooCø-ðEo[øLou\nuIZYOUU`YOUIMi[UiAUzÐaIIEIÐoIN9IIXÐ O1ÐO£×lIUÐIN9OEY2Ði[OLi[O\nICØ2U Uu`ß^ÐOONÐ$OIÞJOliOOÐoUi»IOzIa1alÐU`UUIEO/UÆNi\ni»NUNiO*UI¤ÐOKJL3Ma-ÐIEUJÐOONTÐ¤o\n*uCo#3alÐoIEU u\nYOUzOIO*U`IIUPUU`ICØ¡OEUAØ2IUzÐIØ2ÞUO*UaONGPQ /æ-cR\" e/ivU UUCUPalIØuaIEi IIEiU`iUwICØOU»UUu[U`YOUpY*iG-YOUI\nU`YOU( lÐU3Ø¡Ua-IØS-iT -U@UIaONGPQ /æ-cR\" e/i-ßZU`YOUY*iG-YOUITU`YOUaIEi»IIEi[U»a-u`uU¢iG-YOUITaIEi IIEiU avICØOU»UU\nICØ2OO1UaIIUHU IIUI6aIEi»IIEi[U»aTICØ2U UUEu\n@bOOIU`YOUIOIOLUIIU$UU`ICØ¡OUAØOIUMÐIØ2ÞUO*UCß\naeLæ-iDFP<V\"Ce\"'Næ^ßFU»UU U$a-IEØ\nÐNNÐ NIOCØ2ÞUO*UÐ\nU`i»IOOUU`IEi[OpUEaaU»ÐiO*iORIZY2ÐUsUY2UICØOU»U$NIUUEuXWÆU UU`YOUy4iAUa@a»Ø2OOOEU`i»IOeLæ-iDFP<Y\" e\"'NæMUI\nIUU`IEi U8 lUHU`YOUPICØ2U UiUÆNIO£ØOÞUOLU;ÐoUi»IOvUU`IEi[O2u\nI^IIUalÐÞÆaU UßbU`Y*iAU¤a`IIEIUÐINMOEYOÐoi[OLi[OXICØOU»UpNUU OIEiO*UUU IÞURaÐOEUCU¤U`YOÐUU UUNa-IØuNUNØ/OU\nÐOwi»NUOLU`i[U»aTa`IIKÐOØ2O-×-OOIIZOzOIUÐoU\nØ2IUu\nZ\\[^]_`8a!bc]\n[`8defgihIj[^hk^j8l0Zm>_cfI`n^d^`[om9[fpaRq^]igldlIjfgr^st[^]glIjR_j8]uv[`8defiguIrcw\njc_yxMdgR[zxM{ae]}|pI`8]dilaI`8]~\nxMI`8]dli{]u|ipI`8]dliaI`8]K_!j`8]~\nxMfI`*xeiadI`[^u}|pI`8]idlaI`8]}efb[~\nxeiadI`[^u}|pI`8]idlaI`8]vq^dIj[]g~~~\nl{]gx'[`8diefg|ipI`8]dliaI`8]~w\nZ\\[^fpaRq]gldl^j8fg0\\[`8defighIj[^hikIj8lw\nrs'[^]gl^jc_j8]uv[`8deifguIr\nY*iAUdO*ÐOC×-IÐINSOEY2Ði[OLi[OuI Ø2U UONUU OIEiO*UU@YOII\nU;IOOIÞÆaØOUUvU`YOUlIÐoOONaÐU`YOUIzIUU ÐoUi»IO\nUYLi[a@ÐoU IOa-ÐUUIEO2ÐUZUi[O2UUEu\n\nApril 2003\nJoshua Rules and Inference\n\nZ\\[^]_`8a!bc]dil]I`8gd!bcheI`8digR[_cdli{]I`,Z!mdpk8n^dI`[w\njc_yxMdgR[zx_cdl{]^`v|]^`8ufg}|R[^dR[^~\nx_cdl{]^`v|R[^d8[*|eI`dRq^u~i~\nl{]gxeI`8digR[_cdli{]I`v|i]I`8ufig|eI`dRq^u~!w\nalOUaU¢aII6U`YOUi[IPOIOLUIIU1UU`ICØ/OEUAØOIUß/O*IU`YwICØOU»UUJU»II×zUiÞÆiU ÐoIu\n@\nICØOU»UiU=JL34 o\n*uCoalÐIEUCU@ÐIUziUCUdo3nMJðM1-oUU`ICØ¡OUAØOIUu^Y2UJL34»alÐoIEUdIa$ÐhICØ2U UU Ic-i»OÐUUaSNU\nU OIEiO*UUPOIOONiUi»IO/UØOOONUI¤IZYLi OYMUY2UdICØOU»UdiAUPÐaaUi»OÐO-U UuYOUdo\n*uCo»a-ÐIEU6IaÆÐ@ICØOU»UdU»Ic-i\nOÐU[Ua@NUU OEIEi3O1UUJU`YOUPICØ2U UiUÆOIO2OEU3Ø4Ui»IO1⁄4UEu\nYOU<JL341ÐOONo\n*uCo1OEU»ÐØ4U UUJi[OzÐ¤ICØOU»UOÐOzIOO£ØOI6i[OzÐOa@IINUIu^Y2ÐU¢iAUEß/O*IUY\njR_yxi~l{i]gxi~\nÐO2N\nli{]gx~*jc_yxi~\nÐIU lÐUi N1u\n@YLi[U»UvUY2U}3`no\nIa$U`YOUJL34»oTLu o¦a-ÐIEUCU@i\nU@i»NUOLU`i OÐUKa`IIza`IIEIÐINÐoOONXO1ÐO£×lIUÐIN ICØ2U UUEß\n\nonðCuM2ø*o1loo U`YOUalÐIEUCU$Ni[aAaUIda`IIUÐOY ICØOU»U@U»aalUuH^YLi\nUi\nUPO*UOÐØU U@U`YOUU Ic-i»OÐU6UUICØ/OR\nUAØOIU@ÞÐaLUPiO*UIÐOzJG\n\nuEo'1-oGJ9uRU;U`ICØ/OEUAØOIUU`Y2ÐU6IUa\nU»UOEUCUPU`Y2UiO*aUIUOOOi[OvÞ6UU`YOINRO*Ui[O\nØU UNOu[a`IIEIÐINhIIO1ÐO£×lIÐoINOYOÐiO*iO*u;uI§IIEIÐINhÐO2NRO*ÐOC×-IÐINhOEY2ÐiO*iOMICØ2U UU¤Ni[aAaUI\niOwU`YOUi[I6ÞÐaai[ORIa1U»IR-i»OÐoUZUIPiÞÆalUIÐU`i\nlUPa-ÐIEUCUEu\n@\nICØOU»Ui(UPi[ÞÆa-UIÐU`iT -UTa-ÐIEUCUOIO1⁄4Ui\nUUPIaÐooJLuEoa-ÐIEUPÐOONÐO,1ðEoJno\nalÐIEUCu^Y2UUIEiG*UI\na-ÐIEUKNUUUIEÞÆiOOUUKiaNÐICØOU»UTi\nUHÐoaaU[i»OÐO-U»UTU;I@Ð-iT lUOSUi[UAØ/ÐU`i IO/uYOU@ÐOUi»IOOalÐIEUKNUU;UIR\nÞÆiOOUUKIZYOÐUKIalUIÐU`i»IO1⁄4U6U`Y2UdICØOU»Uda-UIEaIIEÞPUKIZYOUOMi[UKUalUOCØOUUUEu&I^IIEIÐINpÐoOON@O*ÐOC×-IÐIN\nICØ2U UUdY2Ðc lUhNi[aAaUIUO*U$U`IEiG*UIzÐOON ÐOEU`i IOualÐoIEU UEßsU IIUhNiAU OCØUEUUÐOEYuICØ2U UzU»aalUXU Ua-Ð\nIÐUUUa*u\nYOUTOIÞÆÞÐoOONK-YOII-IUY1Ø¡Ð=+ØOU»UUKNiAUaU»ÐEaLUU`YOUTOCØ2IEIUO*U`UazNUa\niOOUN@ICØ2U UUEuF1ÐIEi»IEØUKIa\nU`i»IO1⁄4UdU»UUPalIØUÐi[U»IIRU`YOUvNiAUaU»ÐEaLu-^U»UÐlU UhOIO/U`Ø2U[U$U`YOUvNi»OEU`i»IO2ÐIaUO*U`Ia a`IIwUYLi\nU@OIÞ\nÞÐoOON1u\n5.1.1. How Forward Rules Work\nyAO9ÐaIIEIÐINMICØOU»UßUU`YOU*JL3Ma-ÐIEU¤iAUU`YOUpU`IEi*UIß1ÐO2NMUY2UpoTLu o a-ÐIEU¤i\nUdUY2UÐOEU`i»IO1⁄4u*UU\naAiØ2IUNIÐ*IO/u\n(defrule dragon-id-kit (:forward)\nif [and [huge ≡creature]\n[breathes ≡creature ≡fire]\n[or [guards ≡creature gold]\n[guards ≡creature maiden]]]\nthen [dragon ≡creature])\nTrigger Part\nAction Part\nIiØ2IU61uOI§IIEIÐoIN7+^Ø2U U ^IEiG*UIPÐO2N<@OUi»IOK-_ÐIEUCU\n\nJoshua Rules and Inference\nApril 2003\nyAOMÐda`IIEIUÐIN@ICØOU»U$U`YOU$U`IEiG*UIi\nUKÐRUiO-U»U@u[a-IUEUiO-UazÐOIÞNalIØOO2Nu¢aIUNi»OÐU`i»IOha-ÐU`UUIEO\nUUÐU`iOMOIOONi[U`i»IO1⁄4UKU`YOÐoUÞJØUUÆO1UpU ÐU`i\nUaAi UNwa`IIU`YOUTICØ2U UUITa\niIUu^Y2UTU`IEi*UITOÐO ÐUAU I\nOIOLUÐi[OwyiAUa@OINUPIZYLi OYwi\nUÆNiAU OCØUEU UN¤O1UU»II1u\n¡ÐoU;Ð^[Ni[IUOU;UNwi[OLaUIUOOOUTiAU6U`IEiG*UIUNOoazU`YOU@ÐNNiU`i IOXIaJo*u¢QaÐOEUCUKiO*UITUY2UNÐUÐO*ÐU U\nIZiU`Y}A æ$8CD§e2aL\"'EGEAu£YOÐUÆi\nUEß_OOUI\naÐOUCU6OÐØ4U U lIUY-Ø/ÐTU;IU II×pa`IIa`IIEIUÐIN@ICØOU»UUIEiG*UIU\nU`YOÐoUsOÐoOO1UdU ÐU`i\nUaAi UN¤OaTU`YOUU UHaÐOU UEu\n@Y2ÐUNÐIU$OOUI\na`ÐOEUCU'¤¥@\na`ÐOEU\niAUNOOUI\nIOLUaRIZY2UORa-IØA æ$8CD§e¡aO\"'^EEi[U\na`IIHUY2U$a\niIUU\nUiÞUu\n@\naÐOU\nU`YOÐU¢alIØ¦A æ$8CD§e2aL\"'EGEÞIIU$U`YOÐOMIOOOU$iAUNOOI$U»IO*UIHO2UI¦×-OOIIZU»UN^*Uu£-iÞÆiU ÐoIEUaLß\nÐa`ÐOEUJU`YOÐoUa-IØA æ$CD^e2a§DFA'D$\"'N3a4 MÐO2NTU`Y2UO(A æ$8CD§e2aL\"'EGE1Ð*ÐiOziAUÆOOIUJOOUIt×-OOIIZU»UN*Uß\nUiOOOU$i[UÆIÐUOOU8 lUIIUÞ6I -UNa\nIIÞ\nUY2UdNÐUÐO*ÐU Uu&yAOMOIO*U`IÐUUCß&ÐTa`ÐOEUÆUY2ÐU¢alIØMIUÞI8 lU\naAIIÞ\nU`YOUzNÐUÐO*ÐU Uvu§A æ$C#D§e2a§DFV\"'^EE»uPÐOONvU`YOUOA æ$8CD§e¡aO\"'^EEÐ*Ðoi[O0*nuC÷@IUaIUU UO*UO2UI\n×-OOIIZU»UN*UHaII(c)-IUY1Ø¡Ðu\nYOUIU¤iAUNOOIUa-UOEi»ÐU1IINUIPiOIZYLi OYaIIEIÐIN@ICØOU»U¤a-ÐU`UUIEO1⁄4U6ÐIU¤U`IEiG*UIUN1uaY*iAUNi\nU6NU\nUUIEÞÆiOOUNTUO*U`iIUUaOaTU`Y2UIINUI6i[OwIbY*i»OEYwU`YOUHOOUItaÐOU UÆÐIU¤UOLUUIUN1u\n&IwU ÐU`i\nUaaza-ÐIEUKIaÐICØOU»Ui(UKU`IEiG*UIß(c)UY2UTa-ÐU`UUIEO IaÆU`YOÐU6U`IEi*UIÞJØ4UUÞ6ÐUOEYOU`YOÐUPIa\nU`YOUOOUIZUahÐNNUNNÐUÐO*ÐU UaIUNi OÐU`i IO/u^YLi\nUPÞÐUOEYLi[O2ßOÐU[U»UNwø-oJL3'JðM1-oGJno iOlIUY-Ø/Ðß\nY2Ðaa-UO/UKUiU`YOUIPO1UOÐØ4U UUY2U$U`II$a-ÐU`UUIEO/UKÐIUdÐUIUÐNapUØ2iT lÐoU UO*UCß]IIPO*UOÐØ4U U lIUY-Ø/Ð\nU`Ø/OOUUNUNiO a\niOONiOSU`Ø*O2UU`i[UAØ2Ui»IO/Ua`IIU Ic-i»O7 lÐIEi»ÐO-U UUTU IU`YOÐUPU`YOUU`IIa-ÐU`UUIEO1⁄4UPO1U\nOIÞ6UUoØOi\nlÐU»UOLUCu&IdØ2OONUIUUÐO2NpU`YOUTO*ÐUi»OU¤IaNaIIEIÐINzICØOU»URIa-UIÐU`i IOXIUUOÐOXa-IUU'\na-IOOURU»II×liOÐUU`YOUzNUUÐi[UAUdIaØOOLi[aAi OÐU`i IO/uRUzOI8 lUI@UYLi\nU$UIai»O@iOU`YOUvU UOU`i IO \"\n-_ÐU'\nUUIEO«dÐoU;OY*iOziOlIUY-Ø/Ð¬aW¢OLi[aAi OÐU`i IO \"\nÐU»IOzIZiUYvU`YOUU OIaiOzICØ2U UUU`YOÐUNUUUIEÞÆiOOU\nIZY2UOwUIUIPU»IR-i»O& lÐIEi»ÐO-U UUJIZiUYwU`Y2UU ÐÞUHOOÐÞ6UÐIUHUY2UU ÐÞ6UÐO2NIZYOUOwU`YOUCaNia\na`UIu\nyAaÆÐTICØOU»UiUU`IEi*UIa-ÐIEUCUKÐIU(r) IiOOUNTOazee/ß]ÐoU[U¢OIOONiUi»IO/UÞ\nØ4UUJO1UU ÐoUiAUa\ni»UNaIIU`YOU\nICØ2U URUIRUIEiG*UIuUy\naKU`YOURU`IEi*UIa-ÐIEUCUÐIU Ii[O2UNpOaMæ-cßFU ÐU`i\nUaai[O\nÐOaXIa6U`Y2UwOIOONi\nU`i»IO1⁄4UsU`IEiG*UIUsU`YOUHICØOU»Uu\nJIUUzUY2ÐUHO*ÐO£×lIÐoINMICØOU»UUTÐIUzOOIUdÐØOUIÞÐU`i»OÐUUa i[O lI×1UNOIZY*iU UzUIaiOUIMU ÐU`iAUa[aÐ\na`IIEIUÐINIUIEiG*UIu(c)-iOOOUalIØQOÐO¦ØU UXy4iAUatOINU i[O\naIIEIÐINIU`IEiG*UIUEß1a-IØOIMaIIEIÐIN\nICØ2U UUOÐoOhUaaU[i»OEiU`UawOÐoU[U\nZ4diuk°x_cffK|8±^~24w\ni[OvIINUIPUIPØU UÐ¤O1ÐOC×-IÐINICØOU»U¤U;IU ÐU'\niAUa[a\n_Rff\nu\n@Y2UO\nÐU[U$IaÐ aIIEIÐINSICØOU»Ui(UwOIO2NiU`i IO1⁄4UuGJL3Ma-ÐIEUCU udÐIUSU ÐU`i\nUaAi UN1ßsUY2UMICØ2U UOi\nURa»Ø2U[Ua\nU`IEiG*UIUN§i[UsUY2UOv3'J»ouC÷PÐO2NUalUOCØ2U;UU\nU`YOU$ÐOEU`i»IO1⁄4u\nU uiOpi[UCUNÐOUi»IOMu[o\n*uCo¡ua-ÐIEUCUEuYOU$ÐOR\nU`i»IO¦alÐIEUOÐoO\nUalUOi[aauÐOauÐOEU`i IO1⁄4ß¢iOOOUØ/NiO9U`YOUMOOUI aÐOEUCUU;IhO*UONUNØ/OUNSNi[IUOUUa\naAIIÞ U`YOUTOCØ2IEIUO*UÆa`ÐOEUCUEu]yAasU`Y2UTÐOEU`i»IOhiO lIU\nlUUKNUNoØ¡Oi[OhÐOOUI\na`ÐOEUCß_U`YOÐoUÆaÐOUÆi\nUPÐØ#\nUIÞÐU`i»OÐUUaÐNNUNdU;IHU`YOU¤NÐoU;ÐO1ÐU Udu[U`Y2ÐU¢iAUEß^Ð&A æ$C#D§e2aL\"'EGEZiAUJi[ÞNaUi Oi[UxaII6aIIEIÐoINICØOU»U\nNUNØ/OEU`i IO1⁄4U u`u\n@Y2UO U`YOUa\niIEi[O Ia6aIIEIÐINvOEY2Ði[OLi[OOICØOU»UUIUU`Ø2U[UCUi[O\nU`YOUwÐNNiUi»IOIaO2UI\naÐOEUCUUI\nU`YOUNÐoU;ÐO1ÐU Uß&UYLi\nU6iOvU\nØ2IEOOOÐOOOÐØ4U UdÞIIUa`IIEIUÐINICØOU»UUUI$O1UdUIEiG*UIUNwÐOONRa\niIUN1ß\n*UOOUIÐU`iOwOEY2Ði[O1⁄4U\nIa¢OIO2OEU3Ø4Ui»IO/UxØOO*U`iUZOOIHÞIIUPO2UIta`ÐOEUCUÆOÐOO*U<*UOOUIÐUUN1u\n;\nÐOa-IEØvNUaAi[O2U¤Ð¤aIIEIÐINdICØ2U U13ouEo6ÐNNi[OwÐ¤O2UI¦aÐOUxUY2ÐUxIZiU[UbU`IEi*UI6U`YOUHICØ2U UHiO\nUI¤U`YOUNÐUÐO*ÐU Uc¤<^Y2UÐO/UIUIHi\nUÆU`Y2ÐU1a-IØMOÐOvUOLUUIHOOUI\nICØOU»UU6ÐOONO2UI\naÐOEUCUÆiOhÐoOa\nIINUIß1⁄4O1UOÐØ4U UlIUY-Ø¡ÐUO/U`Ø2IUUsU`YOÐoU¢U`YOUHIEi-YLU¢aIIEIÐoINICØOU»UU\nÐUIÐEaLU(r)*UU¢U`IEi*UIUN1u\nUJUIUiUÐO UEalÐoÞÆaU»U@IaÆaIIEIÐINzOYOÐiO*iOhiOlIUY-Ø¡Ðlu3+^Ø2U U\n[^dgei]I`8huIjeg\nU ÐEaLUKU`YOÐUiaÐ\na-UIU IO¦i\nU×lO2IIZOtUIhO1UXÐIUÞI×1UIvÐOONUIvY2Ðc lUvYaalUIEUUO/Ui»IO1⁄4ßxUY2UO¦IUXOÐO\nNUNØ/OU\n\nApril 2003\nJoshua Rules and Inference\n\nU`YOÐoUsU`Y*iAU\na-UIU IOziAU\niOÐY*iG-Y3IEiAU`×pOÐUUc*IIaLuFRU$ÐUAU IIÐoO*UsU`YOUU\na*UUUÞ\nU;I¤OOIU`i[aaTØ4UÆi[a\niU¢ÞÐ×1UU6U`Ø¡OEYzÐNUNØ/OEU`i IOvU IHUY2ÐU¢IUUOÐoOwU;Ð×1UdU IÞ6UÐaaIIaIEi ÐoU;U¤ÐOEU`i»IO/u\nZ [^]_!j8g]h^`8]R[j8pidl]u8q^fk]I`Z4]I`ufgww\nZ [^]_!j8g]h^`8]R[j8pidl]{iduhpfigR[j8lIjfg0Z4i]I`8ufg}pfgR[j8lIj8fgvn^{]g!ww\nZ [^]_!j8g]h^`8]R[j8pidl]dilhI`j8uik0Z4]^`8ufgwiw\nZ [^]_!`8abc]v[^dge]^`8huIj8eig0Zm4_RfI`n^dI`M[w\njc_xdgR[°xuRq^fik]I`v|i]I`8ufig~\nx{duihpfgR[j8lIj8fg}|]I`ufg{8μ^]I`8li]guIj8figlfR[dRμ^~~\nl{i]gxdigR[zxdilhI`j8uik|]^`8ufg~\nZ'_RfI`q^dl}lr8¶iaee]uillfv·^¶l{idluRqfkIj8ge*j8u=[dge]I`faulif{Rμ^i]I`8l]giuIj ^]}]I`8ufiguIr\n|i]I`8ufigwc~w\n1ØOI¤NÐoU;ÐO1ÐU UdÐUIUÐNapOIOLU;Ðoi[O1⁄4UÆU`Y2U¤aIUNi»OÐU`i»IO\nxu8q^fk]I`7o^u{bR]Rμ^~\nuX@YOUOU`YOÐU\naIUNi»OÐ\nU`i»IOwIUÐUsaAi[IUUJÐNNUN1ß4iUÆU ÐU`iAUa\ni»UNdU`YOUPaAi[IUU)JL3Ma-ÐIEUJIaFI Ø2U U\n[^dgie]I`8hu^j8eg\nß4O2ÐÞUUa\nxuRqfkh\n]I`|]^`8ufg~\nu» JII\nIU1⁄4A æ$C#D§e2aL\"'EGE\nUY2UhU\na*UUUÞ\nU`YOÐoU&@1UY*U»UCaMi\nUU`Ø2a\naUIEiOXaAIIÞ\nYaalUIR\nUUO/Ui»IO/uY*iAUOU ÐoUiAUa\ni»UUUY2U\nICØOU»UiUXU UOIOONoJL3M3a-ÐIEUzÐO2N9U`IEi*UIUU`YOUICØOU»UuQ^Y2U\nICØOU»U\naAi[IUU¤ÐOONhUalUOCØOUUUHi[UCUHo\n*uCo#3alÐoIEU¤uUY2UÐOEU`i IO alÐIEUu;uY*iAUOÐØ4U UUHiUKU;IRNiAUaU ÐEaMÐRÞUUM\nU Ð*U¤ÐOONdU;I¤ÐNNU`YOUPO2UIZUaNUNoØ¡OUNdaIUNi OÐU`i IO/ß\nxdilhI`j8uik=o^u{!bc]Rμ^~\nß4UIPU`YOU¤NÐoU;ÐO1ÐU Uu\nZ>l]bbx{duhipfgR[jlIj8fgvo^u{bc]8μ*{Rμ^i]I`8l]giuIj8fg}lfR[^dRμ~w\n¶iaee]uillfvo^u{bc]8μ*l{diluRq^fikIj8ge*j8u=[^dige]I`8fiaulf}{Rμ^]^`8l]gu^j ^]i]I`8ufgiu\nxM1⁄2Ro^¶h3⁄4i¿AAsAs¿A=o¶1⁄2AARAK1⁄2RA^ÆAiCAAA¶s¿AAi¿ARoA^~\n¶{fRn}E^fu{iadAdilddui]0Z q^dilp{Ij8giedlil]I`8gwxdlh^`j8uk}|]I`8uifg~\nA^`8a]li{Ij8geu\nx'o^AhiCs¶Evo^¶1⁄2AA8A^~\nE\ndbcu]}l{Ij8geiu\nAfg]\n@FUEU`ØOÞUHIUPY2Ðc lUÐoOOIU`YOUIa`IIEIÐINICØ2U Uß\nI`8]R ^]iglIj ^]ihpdI`8]\nß^ÐUJaIU[U»II1UR¬\nZ\\[^]_j8gi]hI`8]8[j8pdli]g]]8[^uhp{i]pkaBZ4]I`ufg=n{]gww\nZ\\[^]_`8a!bc]I`]R ^]gl^j ^]hpidI`8]0Z!m4_cfI`ndI`[w\njc_yxMdlhI`juk|i]I`8ufgi~\nl{]gxg]]8[^uhp{i]pka}|]I`ufg=qfgl{bμ^~w\nYOUwÐNNi[U`i»IOSIa6U`YOUO2UI\naÐOEUCß\nxdlihI`j8uko^u{!bc]Rμ^~\nßZUIU`YOUwNÐUÐO*ÐU UO2IIEU ÐU`iAUa\ni»UU¤U`YOU\nICØ2U UwUIEiG*UIRIaPUY2UpÐO*I8 lUwICØOU»UßOÐØUi[O i[UUIRa\niIUwi[OiUCU$U\nØ2IEO/ßÐOONvU;IK*UOOUIÐUUda-UU\nÐO2IUY2UIO2UIta`ÐOEUCß4O2ÐÞUUa*ß\nxgi]]R[^uhip{]pkia=o^ui{bc]Rμ}q^fgl{!bμ^~\nu\n¶{fRn}E^fu{iadAdilddui]0Z q^dilp{Ij8giedlil]I`8gwxg]]8[^uhp{i]pka}|]I`ufg|!_`8]RE^ai]gpRμ^~\nA^`8a]li{Ij8geu\nxAAAiA¶h3⁄41⁄2iA3⁄4EIÆvo^¶1⁄2AiARA*I¿iAA1⁄2ARA~\nE\ndbcu]}l{Ij8geiu\nAfg]\nY*iAUHOYOÐiO IaÆi[OLaUIUOOOUUOIOLUiO-Ø/UUHÐUPU»IOOÐUPUY2UIUÐIUaIIEIÐINpI Ø2U UUPU`YOÐUPOÐOvO*U\na\nØOUUaUIEiG*UIUN¤OoaOOUIZUa=*UOOUIÐUUNa`ÐOEUCUEu\n\nJoshua Rules and Inference\nApril 2003\nI^IIEIÐINOYOÐiO*iOMICØOU»UU¤OÐO\nOIO*UÐiOXy4iAUavOINU@i[OMO*IU`YXU`YOUi[IvJL34Ku[U`IEi*UIuNÐoOONpo\n*uCo\nu»ÐOEU`i»IO2ua-ÐIEUCUEuØ¡OYyiAUaXOINUzOÐoOIUaUI@UIzÐOaOU»Ic-i O( lÐIEi»ÐO-U UU$U`YOÐU$Ðoaa-UÐI@i[O1⁄4Ui NU\nU`YOUKO1INa@Ia1U`YOUHICØOU»Uu\n1ØOIUÐIEUi UIdICØ2U Uß\n[^dgie]I`8hu^j8eg\nßaIIUalÐÞNaU»Uß]Ø4U UUHyi\nUahi[O i[UCU$ÐOEU`i IO alÐoIEU uyi\nUaMOINU\niO\nUY2Uo\n*uCo»alÐoIEUIaPÐwa`IIEIUÐINICØOU»UiAU?;Ø4UUPaØOUHi[OLU;IRU`YOUICØ2U U@O1INa*ßbU;I@O1URICØOO\nIZY2UO\nU`YOUHICØOU»UPaAi[IUUEu\nUJUIUpiAUTÐOuUalÐÞNaU»URØ4UiO\ny4iAUa\nOINUpiOuÐa`IIEIUÐINMI Ø2U UpU`IEiG*UIu»RUpIUaUIUIMU`Ø¡OEY\nOINUIÐUMÐ\n\nonðCuM2ø*o1lo$oLniLuu&-^IIOUNØ2IÐUdOOINUUMOÐO\"iO*U`IINØ/OUO2UII lÐIEi»ÐO-U UUEßNY2Ðc lU\nUi»NUUa\naUOU UEßZOÐUUA æ$8CD§e2aT$Diie1⁄4ßZÐOONvU IIO1⁄4u\nuJyiAUahOINUi[OOU`YOU(JL34 a-ÐIEUKIaÐaIIEIÐIN\nICØ2U UHIUUAØ2IEO/UJOOIO\nVNGEZi[a1iU¢IUÐO*UCUJUY2UPÞÐoU;OYwUIOIOLUiO-Ø/Uu\nZ\\[^]_`8a!bc]dpip]ldibc]h^`j8p]h^`8abc]BZm4_cfI`Mn^dI`[w\njc_yxMdgR[zxMI`j8p]ihp]Ijcb!j8ge|idR ^dIjcbRdbc]hipdu{~\nxMlfR[^dRμuhI`jp]|piful~\nZ ≤\n|piful|idR ^dIjcbRdbc]hipdu{wR~\nl{]gxdppi]ld!bc]hI`ij8p]|ipful~!w\nI_IØ\nOÐOMIÐoU;OYMaIIEIÐoINRICØOU»U@UalUOCØOU`i»IOhOoahUOOÐO-Ui[O*-IUY1Ø¡Ð@U`IÐOi[O2uLUUdU`YOUwU UOEU`i»IO\n\"\n^IÐOEiO+^ØOU»UU \"\nß4a-Ð*U6IÐOEiO\n+^Ø2U UUMG\n;\n&y41 Nu\n5.1.2. How Backward Rules Work\n1i[O2OU O1ÐO£×lIUÐIN9ICØ2U UUvÐIUS*IÐU9[Ni[IUOU;UNi[OLaUIUOOOUßNiUwiAUUY2UICØOU»Ui(UoT*uCo»a-ÐIEUpUY2ÐU\nUa-UOEia\ni»UUvU`YOUuNUUi[IUNÐ*IÐUAu^Y1Ø4UEßÆO*ÐOC×-IÐINtICØ2U UIi[OLaUIUOOOEiO\niAUhU`IEi*UIUN9Oa\nU`YOU\nICØ2U UiUJoTLu o a-ÐIEUCß4IbY*iU UHUY2U<JL34»alÐoIEU¢iAUsU`YOU¤ÐOEU`i»IOwalÐIEUCu*UUPaAiØ2IU<-IÐÞÆaLUEu\nJIUU¤U`YOÐoUsU`Y2UIINUIIaxUY2U JL3Mo\n*uCoOOEU ÐØ4U UUNIUUÆO2IUJÞÐU`UUIuaYOIU U¤IZY2I¤U[i3×1U¤UI¤aU ÐOU\nU`YOUpo\n*uCo»alÐoIEU$IaKO1ÐO£×lIUÐINvICØ2U UUaAi[IUUCßxU IpUY2ÐU¤U`YOUpU`IEi*UIwÐUIÐEaLUTOIÞUUaAi[IUUCß1OÐO\nU Ða`UUaNIdU Iu\n(defrule paternal-grandfather (:backward)\nif [and [father ≡person ≡dad]\n[father ≡dad ≡gramps]]\nthen [grandfather ≡person ≡gramps])\nAction Part\nTrigger Part\nIiØ2IU<NLu°O_ÐOC×-IÐINv+^ØOU»U6IEi*UIPÐOONO@OEU`i»IOK-_ÐIEUCU\n;\nØ2IEIUOLU`UaLß^O1ÐOC×-IÐINICØOU»Ui[OLaUIUOOOEiOziAUU`IEi*UIUNOoazÐpU;iO-U»U7*IÐUAßU`Y2ÐUÆi\nUEß]ÐO*ÐO£×\nIÐoINUIEiG*UIXÞJØUURO*UIÐ\nUi[O-U UaIUNi»OÐoUi»IO\"alÐU`UUIEO/uQY*iAUIUUU`IEi OU`i IO\"ÞÐEatO1UIU\nÞI8 lUNiOwU`YOUHa»ØOUAØ2IUu\n@\"O1ÐO£×lIUÐINpICØOU»UOÐO\nOIO*UÐiOOyiAUahOINUiOOiUCUÐOEU`i»IOIuGJO3Mu\nalÐIEUCß&OØOU6OOIU6iOOiUCUPU`IEi\n*UI¤u[o\n*uCo\nuUalÐIEUCuI§IIPUEa-ÐÞÆaU U¬\nZ\\[^]_`8a!bc]efifR[^hpfigR[j8lIjfghI`8a!bc]0Zm dpkRndI`[w\njc_zZ>gfl0Z>]REb(|ipfgR[jlIj8fgBM`8auli]R[ww\nl{]gxeff8[^hpfg8[j8lIj8fig|pfigR[j8lIjfg~w\n\nApril 2003\nJoshua Rules and Inference\n\nyAOXU`YOUzU UOEU`i IO\n\"\nO\nØ¡UIai[OMUY2U}¡ÐUÐO1ÐlU U \"\nßIU@i[OLUIINoØ¡OUN=A æ$8CD§e2ae$£i9aIIdU`YOU@U[iÞÆiU;UN\naØOIEa-IU UQIa U»II×liO\nØOa\niU;UÞPU9iO\nU`Y2UQNÐoU;ÐO1ÐU Uu/aai»OÐUUa*ßUY2U\nÞÐoi[O aØOIEa-IU U\nIa\nACæ$CD§e¡a(e$Ci\ni\nUOUIuaAi[O2NQU IUØ2Ui»IO/UOU`Y*IIØ-Y\nIUÐU IO*iO\nu[aAi[O2NiO\nO1ÐOC×-IÐIN\nICØ2U UU ÐOON\noØ¡UUU`i IO1⁄4UsUIPICØ2OOu1ÐUJIUUUÐUJUYLIIØ-YzNÐUÐO1ÐlU UPU»II×ØOaLu\n&IRU ÐU`iAUa[ahÐ¦oØ¡UIaLßYACæ$CD^e2ae$Ci9ÐoU[IÐa*UKU»II×OUKiOMU`YOU@NÐUÐO1ÐlU UdaAi[IUUCß]U`IaiOhUITÞÐUOEY\nU`YOU7oØ¡UIaalÐoUUUIEOIZi[U`YhÐNÐoU;ÐO1ÐU U¤aIUNi»OÐU`i»IO/u sUaUCßA æ$8CD§e2ae$£iOOawNUaÐØOUUU UÐIOY\nUUSa`IIO1ÐOC×-IÐIN\nOEY2Ði[OLi[O\nICØ2U UUSIbYOIU U\nU`IEi*UIta-ÐU`UUIEO\nuoTLu oVa-ÐIEUuMÞÐUOEY2UUIU`YOU\noØ¡UIa\na-ÐU`U;UIEO1⁄4uQ@YOUOEU`Ø¡OEY\nÐ¦ÞÐUOEY\nIOOCØ2IUEßPU`YOUIO*ÐOC×-IÐIN\nICØOU»U9iAUOU`IEi*UIUN1uy\nO\nlIUY1Ø¡ÐßU`Y*iAUPa-ÐU`UUIEOXÞÐUOEYLi[OMi\nU¤OÐU[U»UNpø1oJL3'Jð1loGJno4uI§IIdÞIIURIO UY2UÞ6UOYOÐOLi OoU¤Ia\nØ2O*ia\ni»OÐU`i»IO\nÐO2N\nU`YOU\nU OIaiO\nIaK lÐIEi»ÐO-U UUR¬6*UUuU`YOU\nU UOU`i IO\n\"\n-_ÐU`UUIEOO«TÐUOEY*iOQi[O\nlIUY1Ø¡Ð¬OW¢OLi[aAi OÐU`i IO \"\nßalÐ!*U<-_ÐU`UUIEO×«dÐUOEYLi[OiO×lIUY-Ø/Ð¬\nW¢OLi[aAi OÐU`i IOG\n;\n_y41» Æu\n1bOOOUTÐTO1ÐOC×-IÐINRICØOU»Udi\nUKUIEiG*UIUN-ß&iUNaIIOUUEU UU6iUCUQJL3Ma-ÐIEUCU¤uUY2UÐOEU`i»IOva-ÐIEUCU uxaAIIÞ\nU`YOURUIaMi[OU`YOUpIINUI(-i\nlUO/ßFU UÐIOY*iOXa`II@aÐOU U$U;I} -ÐU[i»NÐUURUY2UpNUUiIUNMOIO2OEU3Ø4Ui»IO/u\nu»y\naxU`YOU1⁄4JL34 a-ÐIEUJiAUÐOIÞÆa-IØOOONaIUNi»OÐoUi»IO Ii[O2UNdOawe4e1⁄4ß_UÐOEYvOIÞÆa-IOOUO*UsO1UOIÞUU6Ð\nU`ØLO*IÐUZU`Y2ÐU¢iAUsU`Y2UU`Ø*O UOEUJIa¢ÐOwi[ÞNaUi Oi[U»A æ$8CD§e2ae$£i_uou\nYOUSICØOU»U\n÷Eø-ðCð uCuML÷ IZYOUO\nÐU[UTiUCUJL3Ma-ÐIEUCU uAU`Ø*O*IÐoU\nU uYOÐc -U\nO1UUO\nU ÐoUiAUa\ni»UN-uLÐU`i\nUaAi UN\nÞUÐO1⁄4UsU`Y2ÐU¢U`Y2UIUHiAU\nÐ¤a`ÐOEUxiOwUY2UNÐUÐO*ÐU UHUY2ÐUJOÐOvU UI lU¤ÐUJU`YOUKO1IU`UIÞEIa1U`Y2UU`Ø2a\na-IIEUÆUU`ICØ¡OU\nØ2IUPa`IIPUÐOEYvU`ØLO*IÐUAu\nACæ$CD§e¡a(e$Ci\nOIU[U»UOEUCUwiO*a`IIEÞÐU`i IO\nNUU OIEiO-i[OtU`YOUuU IU3ØOU`i»IO\naIIOUUEURJIbYOUO\ni[UaAi[O2N-UÐ\nU IU3ØOU`i IO1⁄4ß£A æ$8CD§e¡a(e$Ci\nOÐoU[UAUdi[UCUOIO*U`iO-Ø¡ÐoUi»IO/ßalÐlUEUi[O\niU$UY2UÐO1⁄4UIUIß1ÐoU IOIZiU`YIU`YOU\niO*a`IIEÞ6ÐU`i IOvOIUU»UOUUNRÐO*IØOU\ni[UCu£^Y2UOIOLU`i[O1Ø¡ÐU`i»IOhU`YOUOvUalUOCØ2UUU6IOU`YLi\nUNIUU`ØOUUCuOwUi\nU[U\nU»IIE×wÐUÆU IÞUHU aai OÐUOIOLU`i[O1Ø¡ÐU`i»IOwIUoØ¡UUUCUUY2IIEUUaLu\nuI§IIuUY2UuO*ÐUi»OUIa}ACæ$CD^e2ae$Ci¬1⁄4*UUU`YOU\nU UOEU`i IO\n\"\nO\nØ¡UIai[O\nU`YOUÐ¡ÐUÐO*ÐU U \"\nßHa-Ð*U\nO\nØ¡UIai[OU`Y2Ui\n¡ÐUÐO*ÐU UG\n;\n&y41 Nu\nu\nYOUi[O*a`IIEÞÐU`i IOhIUU`Ø2U[U`iOza\nIIÞ\nU`YOUUØ/OOUUEUKIa\nÐO*ÐOC×-IÐINROYOÐiO*iOzICØOU»Ui\nUOOIUÐØ#\nUIÞÐU`i»OÐUUaRÐNNUNTUIU`YOU$NÐUÐO1ÐlU Uß4Ø2O*U»UUEU¢alIØMUaaUi»OEiUUaRNIHU`YLi\nU\niOa-IØOIPaIIc-IÐÞ\nui[O\nU`YOU¤OIO*U`iO-Ø/ÐU`i IOzIa1U`YOU(r)ACæ$CD^e2ae$Ci&ß4aIIPUalÐÞÆaU Uu;u\nJIUUSU`YOÐUza`IIuUa-UOEi»ÐU@OÐU UUhIZY2UIUMa-IØ\nNIO4iþUzIÐoO*U=A æ$8CD§e2ae$£i\nUI\nØ4U U\nO*ÐOC×-IÐIN\nICØ2U UUEßpa-IØ\nOÐO\nNiAU ÐO-U U\nU`Y*iAU\na`UÐUAØOIU\nOa\nUalUOi[aaiO\na(eLæØ(e1⁄4e1ii/ese1ceØc8DFEGI$UVNEUI\nACæ$CD§e¡a(e$Ci_u\nUJUIUiU@ÐhO1ÐO£×lIUÐIN OYOÐiO*iOuUalÐoÞÆaU»Uu@1UEU`Ø2ÞÆi[OOa-IEØ2IK*IÐUiAUTUIa\niOON\nÐvU`IUÐU`ÞUO*U\na`II¤alÐU`i»UO*UCUIZiU`YMÐ(-iT lUOOOIO2NiU`i IO/ß4a-IØOÞÆi-YLUÆaIIEÞJØ2U ÐUUTÐdO1ÐOC×-IÐINwOEY2Ði[OLi[OzICØOU»U\nU IÞUU`Y*iOU[i3×*UPU`Y*iAUR¬\nZ\\[^]_j8gi]hI`8]8[j8pdli]{duihpfgR[j8lIj8fgBZ4]I`ufgpifgR[j8l^j8fg=n{]gww\nZ\\[^]_j8gi]hI`8]8[j8pdli]]__R]plIj ]hlI`8]idlRq^]gil0Z [`aepfigR[j8lIjfgww\nZ\\[^]_j8gi]hI`8]8[j8pdli]dbbR]I`8eIj8pBZ4]I`ufg=[`8aeww\nZ\\[^]_j8gi]hI`8]8[j8pdli]d^`8fI`jdl]hl^`8]dlRq]gl0Z\\[`8ae}]I`8ufigpfg8[j8lIj8figww\nZ\\[^]_`8a!bc]K_jgR[^hpa^`8]0Zm dpkRndI`[w\njc_yxMdgR[zxM{duhpifgR[j8l^j8fg|i]I`8ufig|pfigR[j8lIjfglf8[^dRμ^~\nxM]__c]pilIj ^]hilI`8]dl8q^]gl}|R[`8ae}|pfg8[j8lIj8fig~\nxMgflxMdbbc]I`eIj8p|i]I`8ufig|R[`ae~~~\nl{]gxd^`8fI`jdl]hl^`8]dlRq]gl|8[`8ae}|]I`8uifg|pifgR[j8l^j8fg~w\n\nJoshua Rules and Inference\nApril 2003\nyAaFa-IØXU`YOUOKA æ$C#D§e2ae$£iIIZYOÐoU6NICØhiAUHÐaaIIaIEi ÐoU;UTa`IIdÐROUIEU;Ðoi[O OIOONi[U`i»IO/ß]iOXÐROUIR\nUÐiO\na-ÐU`i»UOLUCßUlIUY-Ø/ÐaAi[IUUhU UÐIOYOUUpU`Y2UNÐoU;ÐO1ÐU UßNÐoa\nUUIMIZY*i»OEY\nU`YOUUØ/UIatUIEiG*UIU\nICØ2U U\n_!j8gR[^hpiaI`8]\nOazÞÐUOEY*iOhiU UKo\n*uCo#3alÐoIEU ua@YOUOMU`YOUTICØOU»UdaAi[IUUEßalIUY-Ø¡Ð@IIIC×2UNO*ÐO£×\nIÐoIN-UJa\nIIÞ\nU`Y*iAUU*IÐUZUIdU ÐU`i\nUaa@UÐOEYzIa1U`YOU¤OIÞÆa-IOOUO*UxalÐIEUCUÆIa1UY2UPICØ2U Uu\n-\n;\nYOUO£×OUKUY2ÐUNU`YOUTalÐU`i»UOLUxa-IØIU;a-UOEia\ni»UNRYOÐUKUY2ÐU6OIO2NiU`i IOu IIß]i[aFa-IEØz*Ðc -UÐv -ÐIEi\nÐO-U UHaII6UY2UPa-ÐU`i UOLU ßi[Uxi[UUIÐUUU\nI8 lUIPÐUUZalÐoUi»UO*UCUJIZi[U`YwU`YOÐoU¢iU[UOOUUEU u'\n-\n^IEi»UUPUIa\niOONhÐO UaAaUOEU`i\nlUNICØMaIIU`YOÐUHOIOONi[U`i»IOFi[aHU`Ø¡OOUUEUa»Ø2U\nßbOEYOUO£×OUHIZYOUU`YOUI\nU`YOUHalÐU`i»UO*U¢iAUÆÐU[U»UI-i O6UIHUYLi\nUÆNICØ2u\n-\nyAaNU`YOU@a-ÐU`i»UOLUJ÷ÐU[U»UI-i OTUI@U`Y*iAU¤NICØ2ßbIIdi[a(c)lIUY-Ø/ÐhUiÞÆaUaMNIUUOiþU×-OOII1ßiUHNiAUM\nOÐoIN-U¤U`Y2UpNICØ\nÐOONhIUa-UÐoU U$U`YOURaIIOUUEUIa¤U UÐIOY*iOXa`IIRÐOOIU`YOUIUaAaUOEU`i\nlUpNICØ\nÐO2NRU;UUU`iOhaII¤a-ÐU`i»UOLU6ÐUU»UIaLß_ØOO*U`iUFiUNa\niOON1UPÐRNICØhU;ITIZY*i»OEYMU`Y2UdalÐoUi»UO*Ui\nUKOOIU\nÐUU UI-i»Oß^II6aÐoi[UAUsU`IaiO2u\nI^IIKUalÐÞNaU»Uß§ÐUEU`Ø2ÞUPU`YOU¤NÐoU;ÐO1ÐU U¤OIO*UÐiO/UJU`YOUHaIU[U»IIZiOaIUNi OÐU`i IO/UR¬\nZ4l]bibyxdg8[zx{diuhpfg8[j8lIj8figI`jMq^dR[^fgigduf^`8]hl{^`8fdl}lfR[^dRμ~\nx]_i_c]plIjM ^]hlI`]dlRq^]igled^`8ebc]h8nj8l{hidRqq^fg^j8duf^`8]hl{^`8fdl~\nxgfilxdbibc]I`8eIjpI`jMq^dR[^fgigded^`8ebc]h8nj8l{hidRqq^fg^j8d~~~!w\n@Y2UO@a-IØMÐU`×wU`YOUU\naLUU;UÞEaIIÐU`IUÐU`ÞUO*UJaIIU IIU¤UYLIIÐUJaIIÐUUa-ÐU`i»UOLUCUÆIZi[U`YUY2ÐU\nÐaAa\nUi OU`i IO/ß§U`Y2UPO1ÐOC×-IÐINTICØOU»U\n_j8g8[^hpaI`]\nUIEiG*UIUEß]U ÐU`i\nUaAi UUÆi[UCUKU`ØLO*IÐUAUEßÐO2N@UEa-UO£ØOUUU\nU`YOU OIO*U`iO-Ø/ÐU`i IO¦IZYLi OY¦i[O¦U`YLi\nUpOÐU UvØ4U UURUY2UXOIO lUO*i»UOOOUOa»Ø2OOOUi»IOSA æ$8CD§e2a§ /cRNGV\"MØ\nU\nDFc8 zUIPaIEi[OLUsIØOUxUY2UÐO1⁄4UIUIu\nZ4dukxd^`8fI`jdl]hl^`8]dlRq]gl|8[`8ae}|]I`8uifguf^`8]hl{^`8fdl~1⁄4YO4I`ij8glhREa]I`μw\nxto^ÆÆC¿iÆCs'o^AiAhACA8o^AIAAiAÞRo^CiÞAAhRßsA1⁄2hRoII¿Asto*ÆCsMIRo^A¿AiARo*¶¿iCAhA1⁄2iC¿Ro^A~\n5.1.2.1. Explaining Backward Chaining Support\n@FUHÞUOLU`i IOOUNhUÐIEU[i»UIßXA æ$C#D§e2ae$£i9alÐUEU UUHiUCU¤OIO*U`iO-Ø¡ÐoUi»IO\nÐRUi\nUUHOIOLUÐi[OLi[OMUY2URÐO\nUIUI¤iUÆa`IEØ2OONhu IINUIEi\nlUNusUIR*UU`YOUI¤IZiU`Yvi[OLaIIEÞÐU`i»IOvU`IÐOEiOU`YOUdIUÐU IO*iOaIIOUUEU\nU`YOÐoUIUÐUPaIUU IIUNMu[aIITUalÐÞNaU»Uß(c)IZYOUU`YOUIU`YOUÐO1⁄4U;IUUIdIÐUPaIØ2OONpi[OXUY2UNÐUÐO*ÐU UII\nOÐÞUPaAIIÞ\nO*ÐO£×lIÐoINICØOU»UUEß§ÐO2Ni[aJU IßIZY*i»OEYzIOOUuAU u`ß§ÐoOONU I¤IO2u`u\nlIUY1Ø¡ÐaII8 i»NUUU`IIOIO lUO*i»UOOOUwa\nØOOOOU`i IO/UU`YOÐUUaU`IÐOEUÐOONMi[O*UUIEaIUU¤U`YOUMU`ØOaalIIEU\niO*a`IIEÞ6ÐU`i IOzaII\na-IØ4uORUi\nlUiO*U`IINØ/OUNTU`YOUU U$UÐIEUi UIu(c)u*UUU`YOUU UOEU`i IO\n\"\nO\nØ/UIaiOwU`YOU\n¡ÐoU;ÐO1ÐU U \"\nßxa-Ð*U\nO\nØ/UIaiO3U`YOU\n¡ÐUÐO*ÐU U\n;\n_y41» Æuou6RUMÞUO*U`i»IO¦U`YOUÞ\nÐ!*Ði[O¦YOUIUß\nUiOOOUPU`YOUiIÆØU Ua\nØOUOOUUEUxO1UOIÞUUJaÐI6ÞIIUÐoaa-ÐIUO*Uxi[OzÐ¤ICØOU»UOIO*UUaUCu\nACæ$CD§e¡a /ccNV\"Ø\nU\nDFc8 #Ø3cRI$DFEG\"M$HUaU`IÐOEUCUNÐoOON@NiAUaU»ÐEaLU\nU`YOUTU`Ø¡OOUUEUa»Ø2U:oØ¡UIaRÐOONTUUU[UAUFa-IEØ\nIZYaTiUÆU`Ø/OOUUNUN1u\nY*iAUEß6aIISUalÐoÞÆaU»Uß6iAUvU`YOUuIUÐlU IOLi[OalIUY1Ø¡ÐIUO*UU`Y*IIØ-YQUIÐO/UIUIIIEØ2IUoØ¡UIa\nÐO*IØOUxUY2UPIEiG-Y*UxUIUÐU`ÞUOLU¢aII¤U IIUPU`Y*IIÐUCu\n\nApril 2003\nJoshua Rules and Inference\n\nZ4dukxd^`8fI`jdl]hl^`8]dlRq]gl|8[`8ae}|]I`8uifguf^`8]hl{^`8fdl~1⁄4YO4I`ij8glhREa]I`μ^h^`8]uabRluw\nxto^ÆÆC¿iÆCs'o^AiAhACA8o^AIAAiAÞRo^CiÞAAhRßsA1⁄2hRoII¿Asto*ÆCsMIRo^A¿AiARo*¶¿iCAhA1⁄2iC¿Ro^A~}uappi]]R[^]R[\nsl=ndu=[^]^`j ^]R[_`8fRq`8abc]\nE\nsAAih3⁄4ICA\nx1⁄2Ro^¶ih3⁄4¿AAsAs¿A}ÆCsI8o^A¿AA8o*¶¿CiAhA1⁄2Ci¿Ro^AAi¿ARoA^~}uappi]]R[^]R[\nx1⁄28o^¶h3⁄4¿iAAsAsM¿AÆCsIRo^A¿iAARo*¶i¿CAhAi1⁄2C¿Ro^A}A¿ARoiA^~=n^diulI`8ai]j8g}l{]=[dlddiu]\nxA\nEE\nA3⁄4AsaiAhACA8o^AIAAiAÞRo^CiÞAAhRßsA1⁄2hRoII¿Asto*¶¿CiAhA1⁄2Ci¿Ro^A~}uapp]i]R[^]R[\nxA\nEE\nA3⁄4AsaAhAiCARo^AIiAAAÞ8o^CÞAAihRßsA1⁄2ihRo^II¿iAs'o*¶i¿CAhAi1⁄2C¿Ro^Ai~=n^du}lI`8a]*j8gli{]=[^dilddui]\na\no*no\nx'o^AAiACÞs3⁄4}ÆCsI8o^A¿AA8o*ÞRo^CiÞAAhRßsA1⁄2hRoII¿Asto^~ a(uaipp]]R[]R[\nx'oAAACÞs3⁄4ÆCsIRo^A¿iAARo*Þ8o^CÞAAihRßsA1⁄2ihRo^II¿iAs'o^~vn^duK_Rdbcu]*j8gl{i]=[^dliddu]\nY*iAU\nU;UUU\nUsØU\nU`YOÐUsU`YOU1⁄4oØ¡UIa@alÐU`UUIEOpU`IEiG*UIUNTICØOU»U\n_!j8gR[^hpiaI`8]\nßÐOONTU`YOÐU\nUÐOEYhIaFU`Y*iAU\nICØ2U UiUHU`Y*IUUzU`Ø*O*IÐU\nUHIUÐUdU ÐU`i\nUaAi UNza\nIIÞ\nÐpNÐUÐO1ÐlU UU»II×Ø2a*u»-iOOOUdO*ÐO£×lIÐoINOYOÐiO\niOXUU;IaLUIZY2UOvi[UÆIUÐOYOUUKNÐUÐO*ÐU UaIUNi»OÐU`i»IO/UEß_U`YOÐoUÆi\nU6U`YOUTUOONpIaJU`YOURU`ØOaalIIEUÆiO\na`IIEÞ6ÐU`i IOFU`YOUIUHi\nUJOOI¤ÐU`U;UÞÆaU¢UIHUIÐOUPIbYaTU`Y2IU U¤NÐoU;ÐO1ÐU UHaIUNi OÐU`i IO1⁄4U\nÐIU lÐUi N1u\nyAa Þ6IIU\nU`YOÐoO\nIOOU\nO*ÐOC×-IÐIN\nICØOU»U\nYOÐN\nO*UUO\ni[O lI×1UN\nU;I\naAi[O2N\nU`Y2U\nÐoO/UIUIß\nACæ$CD§e¡a /ccNV\"Ø\nU\nDFc8 #Ø3cRI$DFEG\"M$IIØOU»NMYOÐc lUpiO*UUIEaIUUUNvU`Y2ÐU¤i[OLaIIEÞÐU`i»IO9ÐUIUU[UAßUU`IÐOR\niOMU`YOUzUØ2aa-IIEU6U`YLIIEØ-Y\nUÐOEYXICØ2U U@UIU`YOU@aIUNi OÐU`i IO1⁄4U6ØU UNpUIpU ÐU`iAUa[ahalÐIEUCU¤IaNU`YOU\nICØ2U Uu\nYOUOIO lUO*i»UO2OU$a»ØOO2OEU`i IO(A æ$8CD§e¡aOaLce VCFØ\nU\nDFc8 #Ø3cRI$DFE\"$<-i\nlUU¢a-IØvUY2UU ÐÞU$i[OLaIIEÞÐ\nU`i»IOzÐlUHACæ$CD§e¡a /ccNV\"Ø\nU\nDFc8 #Ø3cRI$DFEG\"M$NOØ2U¢iOK-IÐaYwaIIEÞPu\nIiØ2IU<-IÐaY3ICØOU»UUY2II1UsIbYOÐUxUYLi\nU(r)-IÐaYwU II×2UsUi×*UPa`IIKIØOI6aIU i IØ4U(c)oØ¡UIaLu\nYOU@UIaMIaU`YOU}-IÐoaYuUYOII1UU`YOUU ÐU`i\nUaAi UNoØ¡UIaMÐoOONzOOÐoÞUUHU`YOUICØOU»U@U`YOÐUU ÐU`i\nUaAi UN\niUCu1 lÐoU\nUPNUOOIUU(Ø/UIEi UU6U`YOÐoUNIUIU$o*no\nU ÐU`i\nUaAi UNRiOvU`YOU@NÐUÐO*ÐU Uu£+]UOU;ÐoO-U»UUHNUOOIUU\noØ¡UIEi»UUui[OU`Y*iAUOÐU UhU`Ø*O*IÐUAU uNU`YOÐoUPIUUIUhU ÐU`iAUa\ni»UNaAIIÞ\nUY2UpNÐoU;ÐO1ÐU Uu:^Y2UpÐIEIII1U\na-Ii[OLU¢a\nIIÞ\nU`YOUdU`ØOaalIIEU¢UIHUY2UIO UOEU1O*Ui[OzU`Ø2aa-IIEUUN1u\nyAOhIØOIUalÐÞNaU»Uß§U`YOU -IÐaYOUY2IIFU\nU`Y2U$NÐUÐO*ÐU UaIUNi»OÐoUi»IO/UÆU`YOÐU6U ÐU`iAUa\ni»UNTU`YOU¤ICØOU»UiU\nU`ØLO*IÐUAUEu(r) JIU;U U`YOÐURU`YOUB¡ÐUÐO*ÐU U YOUÐNi[O¦i[O2Ni»OÐUUUpIZYOUO\nU`Y2UXU`ICØOU`Y lÐU3Ø¡U aIIXÐ\n-i\nlUOwaIUNi OÐU`i IOwiAUHACæ$CD^e2aTaCa eE9$Iaou\nIiØ2IU6æ1uBcZIÐoaYLi[O¦oØ¡UIawU`Ø2aa-IIEU¢aAIIÞ\nO*ÐOC×-IÐINdICØOU»U\nyAa1alIØOaIUa`UI¤U;IUEaU`IÐOUÐO2N@iO*UUIEaIUUÆU`Y2UU`ØOaalIIEUÆiO*aIIEÞÐoUi»IOwalIØ2IU UUaJIÐU`YOUIU`YOÐO\nY2Ðc lUwiUiO*UUIEaIUUUNva`IIa-IØ4ß»lIUY1Ø¡ÐaII8 i NUU61ðCð uC÷ ÷Cno<3ø-oLð£oGJno*÷@UIpU UU6alIØNIwU`Y*iAUEu\n;\nIO/U`Ø2U[UTU`YOUONi OU`i IOOÐoIaIUOLUIaSa`II=ACæ$CD^e2ae$CiQU;I\nU UUvYOII\nU`YOUU UOÐOOUUEU IIza»ØOO2OEU`i»IO1⁄4U\nIIIC×2u\nu»y\na¢a-IEØ YOÐc -U@Ð¦O«v¡ß§alIØOÐO°*UU6ÐoOXUaaU ÐO2ÐU`i IO IaÆaIIEIÐINvU`ØOaa-IIEUCßÐUAU Iu^YOÐoUNiAUEß\nIZiU`Y ÐKX«vy-IUY1Ø¡ÐpOÐOOUUUUa-IØ U`YOUIUÐU IO/UPIbYavÐwNÐUÐO1ÐlU UTaIUNi»OÐoUi»IOOiAUPi[OXU`YOU\nNÐUÐO*ÐU Uu£^YOUa»ØOO2OEU`i»IO}ACæ$CD§e¡aO!e VE eNNiAUaU ÐEaLUUY2U@U`ØOaalIIEU\niOMÐdÞ6ÐO*OOUITUi[ÞÆiU»ÐIHUI\n\nJoshua Rules and Inference\nApril 2003\nU`YOUIØOU`aØOUMIa=A æ$8CD§e2a§ /cRNGV\"MØ\nU\nDFc VØccI$DOE\"M$^UA æ$8CD§e2aLa*ce VCFØ\n\"'P6$RØG$DY /æ-cc\",-IÐaY/UMU`YOU\nUaaU ÐoOOÐU`i»IOwiOzÐ¤ÞÐOLOOUIUiÞÆiU ÐoIUI(r)ACæ$CD^e2aLa*ce VCFØ\nU\nDFc #Ø3cR$DFEG\"M$uou\nI_IØ9OÐOU`IÐOUO1ÐOC×-IÐINhICØ2U UzIalUIÐU`i»IO\nOoavØ4UiO U`YOUwUIÐOEiO aÐOi[Ui[U»aLu*UURU`YOUvU UOR\nU`i»IO\n\"\nIÐOEiO+^Ø2U UU \"\nß4a-Ð*U6IÐOEiO\n+^Ø2U UUMG\n;\n_y41 Nu\n5.2. Removing Joshua Rule Definitions\nI_IØhOÐOwIUÞI8 lUPICØ2U U¤NUa\niO*iU`i IO1⁄4UsaAIIÞ\nU`YOUdU\naLUU;UÞ\nUi[U`Y2UI6iOONiT i»NoØ¡ÐUUaIIKOIUU»UOU`iT lUUaLu\nYOUPa\nØOO2OEU`i IO7ACæ$CD§e¡aDO4eacDFEGIUÞ6I -UUÆÐUi[O-U UHICØOU»UNUa\niO*iUi»IO/u\nI^IIKUalÐÞNaU»U¬\nZ>agR[^]_!`8abc]B [^dgei]I`8huIjegw\nI_IØ\nOÐOQNIU`Y*iAUOU ÐÞ6USIalUIÐU`i»IO\na\nIIÞ\nÐUeLÞÐOoUhUNi[UIIvOØOaAaUIXIZi[U`Y\nU`YOUIUaUUO2NUN\neLÞÐOUOIÞÆÞ6ÐOONeei¦i(c)iU[U)¡UaAi[OLi[U`i»IO/u(c)I§IIdÐU ÐÞNaU»UTiO*UUIÐOUi»IOOIZiUYOU`YLi\nUOIÞÆÞÐoOON¬\nLUU\nU`Y2U\nÞÐOEII\nA æ$CD^e2a§DF4ea'NYIØL /cceN[ie\"'-ß\na-Ð*U\nIUY1Ø¡Ð¬\nØ2OONUa\niOOUaIUNi»OÐoU;U\nIOW?\n;\n_y41 Nu JIU;UU`YOÐUÐOahaIUNi»OÐU`i»IO/UaIU8 i»IØ4UUaMNUNØ/OUNwOaOÐwICØOU»UzUU`iU[UJIUÞ6Ði[O\niOwU`YOUNÐUÐO*ÐU UÐoa\nUUIsa-IØzIUÞI8 lUPU`YOUHICØOU»UiU\nNUa\niO*iU`i IO/u\n&IOIUÞI8 lU\nÐUU¤ICØOU»U\nNUa\niO*iU`i IO/UÐUwIO2OUßxØ4U UXU`YOUXa»Ø2OOOUi»IOUACæ$CD^e2aiEe-cu)RUXY2Ðc lU\nO*UUOOØ4UiOOUYLi\nUa»ØOO2OEU`i»IO UIROEU»UÐIdU`YOURNÐUÐO*ÐU Uß]OØ2UKi[UKY2ÐU¤ÐhU UOIO2NhIaU`i IO2ÐU\nÐIØ#\nÞUOLU¢UIPU»UUa-IØhOEU»UÐoIKÐUUZICØ2U U¤NUa\niO*iU`i IO1⁄4UEu\nYOUPa\nØOUUÐIØ2ÞUO*U¢UiAUUsIaA æ$8CD§e2aiEGe-cPiAUR¬\n3⁄4iAARo^CVm=Z'ic¿ÆiAs¿ARoA0Z43⁄4AiARo^ChA8o^ARo^iRo¶AAw=IAAA\nE\nCIAAihCIAAi¶w\nY-Ø4UEßFU aai[O\nZ4pbR]dI`zl.lw\nOEU»UÐIUTU`YOUMNÐUÐO*ÐU U*1o\nÐUdUY2UXU ÐÞUU`iÞUIUÞI8 lUU@ÐoU[U\nICØ2U U¤NUa\niO*iUi»IO/UEuXOU$ÐIÐIUUY2ÐUxU`Y*iAUJiAUÆÐ$IÐU`YOUIPNIÐUU`i O$UUUa*ßÐUÆÐoaaU[i»OÐU`i»IO/UÆNUalUO2NI\niOwIOwUY2UU UPICØOU»UUU¢»J»o[o(c)oLn$o3no!LuEo(c)¢(c)noðOß1⁄4ØOO*U`iU_a-IØzIUU»IÐNU`YOUU UHICØOU»UUEu\nYOU\nOIÞÆÞÐoOON\n;\nU UÐIylIUY1Ø¡Ð0¡ÐoU;ÐO1ÐU UXY2ÐUzÐO\nIaU`i IO\nUIXU»UU$a-IØ\"OU UÐIOÐoU[UOlIUY-Ø/Ð\nICØ2U UUEuXYOU¤OÐØ2Ui»IO/U`Ø4UUxÞUO*U`i»IO2UNTÐaaUaTY2UIU¤ÐUJIUU[UAu\n5.3. Tracing Rules\n;\nIÞÆÞÐoOON1UR¬\n_OOÐOlU»UQlIUY1Ø¡Ð7^IÐOi[O\n¡Zi\nU ÐOlU»UQlIUY1Ø¡Ð7^IÐOi[O\n@YLi[U»UvNUOØ-iO0lIUY1Ø¡ÐvaIIc-IÐÞPUa-IØ¦Ia\nUUOuIUÐO*UUIpO1UvÐO-U UUIIÐUOYuU`YOUICØOU»UU\nUalUOCØ2UUuI_IØhOÐOwU`IÐOUPU`YOUKO1UY2Ðc i»IIPIa1ICØOU»UU¢OaØUi[O@U`YOU¤OIÞÆÞÐoOON\nAigdbc]vE^fu{iadlI`dpIj8geBZ4lRμ^i]f_=lI`8dpIjgew\nE\nfI`n^dI`M[*CabR]u\na`II6aIIEIÐoINICØOU»UUEß§IIU`Y2UOIÞÆÞ6ÐOON\nAigdbc]vE^fu{iadAI`dpIj8geBZ4lRμ^i]f_=lI`8dpIjgew(iidpkRn^d^`[*Ca!bc]u\na`IINO*ÐOC×-IÐINICØ2U UUEu\nY*iAUdOÐØ4U UUdÐU`IÐOUpÞUUEU Ð*UwUIO*UwaIEi[OLU;UNOU8 lUIaOU`iÞUzÐICØOU»UwICØOO1⁄4UEu@iU`YSaIIEIÐIN\nICØ2U UUdU`YOUzÞUUEU Ð*UhÐaalUÐIUUÐOYIU`iÞUzUY2UJL34 a-ÐIEUdIaHU`YOUzICØOU»UOu[U`YOUzU`IEiG*UIuPi\nURU`Ø/OR\n\nApril 2003\nJoshua Rules and Inference\n\nOUUEUa\nØOUUaMOIÞÆaU UUUN-ßbÐOONzUY2Uo\n*uCo»alÐoIEU¤uUY2UÐOU`i IOOu\niAU¤ÐO1IØ2U6UIdO*UUalUO£ØOUUN-uUsUIUiU\nÐUiÞÆaU»UUalÐoÞÆaU»UIa1U`IÐOi[O@a`IIEIUÐINICØOU»UUEu\nalÐÞÆaU U¬\nZ\\[^]_j8gi]hI`8]8[j8pdli]{Ij8ei{]I`8hIjgh_cff8[^hp{d^j8g0Z4]idl]I`=bcfRn^]I`hIj8gh_RffR[^hpi{dIj8gwiw\nZ\\[^]_j8gi]hI`8]8[j8pdli]K_cdR fI`j8l]ihRq^]db°Z4]dli]I`(_cfifR[ww\nZ\\[^]_`8a!bc]diuIj8ph_RffR[^hpi{dIj8gBZm4_cfI`Mn^dI`[w\njc_yx_cdR ^fI`ij8l]hRq]db(|i]dl]I`7|]dli]]~\nl{]gx{Ij8ei{]I`8hIjgh_cff8[^hp{d^j8g|]idl]I`7|]dl]i]~w\nZ\\[^]_`8a!bc]lI`dguIj8l^j ^]h_RffR[^hpi{dIj8gBZm4_cfI`Mn^dI`[w\njc_yxMdgR[zx_cdR ^fI`ij8l]hRq]db(|i]dl]I`7|]dli]]~\nxM{Ij8e{]^`8hIj8gh!_cffR[^hip{dIj8g}|]dli]]|_RffR[^~~\nl{]gx{Ij8ei{]I`8hIjgh_cff8[^hp{d^j8g|]idl]I`7|_cffR[~w\nZ\\[^]_cagvq^]dbRu0Z'w\nZ4pbR]dI`cw\nZ4l]!bbyxdigR[zx_RdR ^fI`jl]hRq^]idbK`8]8[^h{]I`i`j8gevn^fI`q^~\nx_RdR ^fI`jl]hRq^]idb7n^f^`q*dbRed]~~!w\nZ4l]!bbyx_RdR ^fI`jl]hRq^]idb(IIjuuhId^`8bc]*`8]R[^h{i]I``j8gie~w\nZ4p#m]R±^]pial]hpifRqq^dg8[r8¶{ifRnE^fiu{ad}Adldidu]Ircwiw\nA^`8a]li{Ij8geu\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosAIsM¶¶hIRoCÆAA}CAAh1⁄2iACCsAiÞ~\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosAIsM¶¶hIRoCÆAAvß^¿CI~\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosAIsM¶¶hIRoCÆAAvo^AÞRo^Ai~\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosA=ß^¿iCI=o^AiÞRo^A~\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosACAiAh1⁄2ACiCsAÞvo^AÞRo^Ai~\nx1⁄2sÞi1⁄2AChsMAh\nE\n¿¿iAh3⁄41⁄2RosACAiAh1⁄2ACiCsAÞvß^¿CI~\nx\nE\no^ai¿CsAAihIARo^A}Is¶¶ihIRo^CÆiAACAiAh1⁄2ACiCsAÞ~\nx\nE\no^ai¿CsAAihIARo^Avß^¿CIvo^AÞRoA~\nx\nE\no^ai¿CsAAihIARo^A}CAAhi1⁄2ACCsMAÞ=ß^¿iCI~\nE\ndbcu]}l{Ij8geiu\nAfg]\nJIU`i»OURUY2ÐUÐlU$IOOURICØOU»UaAi[IEiO*A æ$8CD§e¡aO\"'^EEAU$ÐpaIUNi»OÐU`i»IO\nUY2ÐU¤OÐØU UUÐO2IU`Y2UIICØOU»U\n\nJoshua Rules and Inference\nApril 2003\nUIwa\niIUßU`YOUwU`IÐOEiO\naÐOi[Ui[U»aOiOONUO*UCUdÐO2IUY2UI@U U8 lUUAu^YLi\nUU;Y2II1UKa-IØIU`Y2UzNUa-UO2NUO2Oa\nO*UUIUUUOzU`YOU¤I Ø2U UUEuV@ZUAU IßO lÐIEi»IEØU\niUUÞPU\niOzUY2UU`IÐOU$NiAUaU ÐEawÐIUÞIØU UTU UO/UiU`iT lUÐOON\nOÐOwaII8 i»NUPÞIIUPiO*a`IIEÞÐU`i IOzÐO*IØOUxUY2UPaIIc-IÐÞ\nUEa-UO£ØOU`i»IO1⁄4u\nIÐOEiORO1ÐOC×-IÐINICØ2U UUNi\nU6ÐdUi[U`U`U»U¤ÞIIUdOIÞÆaU[i»OÐUUN1ß_ÐUNU`YOUCapOÐOpO*UHØU UNUI *UOOUIR\nÐUUwÞJØOUUiaU UvU IU3ØOU`i»IO/U¤UIzÐyoØ¡UIaLu:YOUIUpÐoIUwaIØOIRU8 lUO*UCUÐlUEU IOi ÐoU;UNhIbi[U`YU`YOURICØ2O\nOLi[ORIa¢ÐHO1ÐOC×-IÐINICØ2U Uu\nIi[IUUCßZIbYOUO\nIUU`IavUIÞÐUOEY\nU`YOURUIEiG*UI@Ia6U`YOUICØ2U UuU`YOUo\n*uCo#3alÐoIEUIaKÐRO*ÐOC×-IÐIN\nICØ2U Uu`ßZU`YOUU`IÐOUÞUUEU Ð*UU ÐEaLUUY2ÐUPIUwÐIU}n(c)c8 NGVa U`YOUICØOU»Uu3YOUO IUU`Ø¡OOUUEUa»Ø2U[Ua\nOIÞNaU»UU;UpUY2UwICØOU»UzÐOEU`i»IOuUY2UK*IÐUAU$iOU`YOUKJL34»a-ÐIEUu`ßU`YOUwÞ6UUEU Ð!*UvU ÐEaLU$U`YOÐU¤IUzÐIU\no#D4ii^eNVa aAIIÞ\nU`YOUICØOU»Uu@1UIUUIavUI@aAi[OONvÐOOIU`YOUITIÐEavU;IU ÐU`i\nUaahU`YOUICØOU»UßZU`YOU\nÞUUEU Ð*UzU ÐEaLUHUY2ÐU6IUUÐIU}o\"c8 NGVaXU`YOU@ICØOU»Uu@ZO2NpU»ÐUU`UaLßIZYOUOXU`YOUIUÐoIUO2IÞIIU\nU IU3ØOU`i IO1⁄4Usa`II6U`YOUHICØOU»UßU`YOUPU`IÐOUPÞUUEU Ð*UdU ÐEaLUsU`Y2ÐU¢U`YOUHICØOU»UPiAUUo(c)eNGENGVao\nYOU$O1ÐOC×-IÐINRICØOU»UdU`IÐOEiOhaÐOEiUi[U»aRØ4U UU6U`YLi\nU6UUIEÞÆiOOIU»IRapUIdU»UUxa-IØXaIU[U»II\nU`YOUUalU\nO£ØOU`i IOXIaJU`YOUdICØ2U UUHÐU&lIUY-Ø/ÐU`IEi»UUKU;IRU ÐoUiAUa[aÐ¦Ø/UIa*uy\nOXIINUI¤UINUÞIO/UU`IÐUUdU`YOU\nU`IÐOi[OIa¢O*ÐOC×-IÐINICØOU»UUIUIZiU[U1a\niIUUNUOOÐO-U»U$U`YOUU`IÐOEiOhIa¢O1IU`YhaIUNi»OÐU`i»IO1⁄4UKÐOON\nO*ÐOC×-IÐINICØOU»UUEuH^IÐOi[OOaIUNi OÐU`i IO/U$ÐoU IOOIbi[U`Y ICØ2U UUTUY2IIFUalIØSUY2U A æ$C#D§e2ae$£i_U\nII(r)A æ$8CD§e¡aO\"'^EEAUOIIEIUUalIO2NiOwUIUÐOEYICØOU»U¤a\niIEi[O2uXUJUIUi(UÐUi[ÞNaU»UUalÐÞÆaU UIa1O*ÐO£×\nIÐoINICØOU»UPU`IÐOi[O2u\nalÐÞÆaU U¬\nZ\\[^]_j8gi]hI`8]8[j8pdli]{duihpfgR[j8lIj8fgBZ4]I`ufgpifgR[j8l^j8fg=n{]gww\nZ\\[^]_j8gi]hI`8]8[j8pdli]]__R]plIj ]hlI`8]idlRq^]gil0Z [`aepfigR[j8lIjfgww\nZ\\[^]_j8gi]hI`8]8[j8pdli]dbbR]I`8eIj8pBZ4]I`ufg=[`8aeww\nZ\\[^]_j8gi]hI`8]8[j8pdli]d^`8fI`jdl]hl^`8]dlRq]gl0Z\\[`8ae}]I`8ufigpfg8[j8lIj8figww\nZ\\[^]_`8a!bc]K_jgR[^hpa^`8]0Zm dpkRndI`[w\njc_yxMdgR[zxM{duhpifgR[j8l^j8fg|i]I`8ufig|pfigR[j8lIjfglf8[^dRμ^~\nxM]__c]pilIj ^]hilI`8]dl8q^]gl}|R[`8ae}|pfg8[j8lIj8fig~\nxMgflxMdbbc]I`eIj8p|i]I`8ufig|R[`ae~~~\nl{]gxd^`8fI`jdl]hl^`8]dlRq]gl|8[`8ae}|]I`8uifg|pifgR[j8l^j8fg~w\nZ>l]bbxdgR[°x{duhipfgR[jlIj8fg}I`jq^d8[^fggd}ufI`8]ihl{I`8fidllf8[^dRμ^~\nx]__c]iplIj ^]ihlI`8]dilRq^]gl}edI`8e!bc]hRnjl{hdRqiq^fgIj8d}ufI`8]ihl{I`8fidl~\nxgflxdbbc]^`8eIj8p}I`jq^d8[^fggd}edI`8e!bc]hRnjl{hdRqiq^fgIj8di~~~w\n\nApril 2003\nJoshua Rules and Inference\n\nJIU`i»OUMU`YOÐoUU8 lUO\nÐoa\nUUIU`YOUMICØ2U U NUIEiT -UURU`YOUXIO*UaIa-IUEUiO-U U ÐO/UIUIvÐoOONaIEi[OLU URU`YOU\nØ2O*ia\ni»UNoØ¡UIaLß]O*ÐOC×-IÐINzICØ2U U@U`IÐOi[OXNi\nUaU»ÐEaLUHU`YOU}o^\"c NVaÐO2No]eNGEGNVaU8 lUO*UCU$ÐU\nU`YOUHICØOU»UPU`IEi»UUÆÐO2NaÐiUAUsUIPaAi[O2NTÐO2IU`Y2UIPÐO1⁄4UIUIu\nI_IØOÐO°*UUKÐ-IUÐoU;UITNUc-IUU@IaNOIO*U`IIUsI lUIICØOU»UTU`IÐOEiOzOazaII8 i NiOhU`YOUpaOP<#D\n×*UCaIUIINpUI=&OOÐO-U UvlIUY-Ø/ÐK^IÐOi[O2u^Y*iAUPU UUCUÆa-IEØ9UalUOEia[aa-ÐIEU`i O£ØOU»ÐIICØOU»UUKUIU`IÐOUß\nU`IÐOUTIOLUawICØ2U UUU`IEiG*UIUNOazOUIEUÐiOhaIUNi»OÐU`i»IO/UEß]ÐO2NUIÐOUICØOU»UiÞÆalIIEUÐO2OU=oØ¡UØ#\niOwÐOONNUoØ¡UØOiO2u\n&INi\nU ÐO-U»UPICØOU»UPU`IÐOi[OTØU UPU`YOU¤OIÞÆÞÐoOON\nA^j8udbR]=E^fui{adA^`8dpIj8gie0Z4lRμ]f_=lI`8dp^j8gew\nE\nfI`n^d^`[*Ca!bc]u\na`II6aIIEIÐoINICØOU»UUEß§II\nA^j8udbR]=E^fui{adA^`8dpIj8gie0Z4lRμ]f_=lI`8dp^j8gew=idpkRndI`[*Ciabc]u\na`IINO*ÐOC×-IÐINICØ2U UUEu\nI_IØ¦OÐOÐUAU IhÐN`Ø4UUICØOU»UzUIÐOEiOIIaU`i IO/UOoa Þ6IEØUi[OIIOIICØ2U UOOÐÞUUÐoOONOaIUNi»OÐ\nU`i»IO1⁄4UEuV«TIEØU UPIEiG-Y*UJIOwU`Y2UIOCUOU¢UIUY2IIU`Y2UPa-IUEUi3O-U U¤IaU`i IO1⁄4UEu\n\nJoshua Rules and Inference\nApril 2003\n5.4. Joshua Rule Basics At a Glance\nIiØ2IUOICØ2U U\nU`ØOÞÆÞ6ÐIaLßsa-Ð*UXICØOU»Ui\nU`ØOÞNÞÐIa\nU`ØOÞÆÞ6ÐIEiUURU`Y2UvO*ÐUi»OvICØOU»UXi[OLaIIEÞÐU`i»IO\nIUi\n-U`ØUUsOI8 lUIUN1u\nRule Type Triggered\nby\nForward\nBackward\nif-part\nthen-part\nTELL\nASK\nCompound\nSingle\nthen-part\nif-part\nRule executes\naction part\nASK calls\ncontinuation\nRule Success\n(all if-parts\nTrigger\nPart\nPredications\nIn Trigger\nRule Fires\nWhen\nAction\nPart\nTrigger\nAsked\nTriggers\nSatisfied\nsatisfied)\nIiØ2IU6o1uBØ2ÞÆÞÐIaIa:-IUY1Ø¡Ð +^Ø2U U 1Za-UIÐU`i IO\nLIÞ6UU`iÞUUU`YOU$×lO2IIbU UN^*UOOUUNUNUIU ÐU`iAUa[aÐTICØ2U UdUIEiG*UI$OÐoOzO*UTUUi Oi[UUNa\nIIÞ U`YOU\nØU UIUYLIIØ-Y\nU`YOUooØ¡UUU`i IO\naÐOEiU[iU»a*uO^Y*iAUvIUIIC×2U\nU IÞUIZY2ÐUXUiÞÆi[U»ÐIEUa\nUIO*ÐOC×-IÐIN\nICØ2U UUEß1ÐO2NMIUhNiAU OCØ4UEUdiU¤i[OIU`Y2UOEY2ÐaU;UIRUY2ÐU¤a`IU[U»II1UEuLUUzUY2UMU UOEU`i»IO\n\"\n@FU`×liOU`YOU\nWNU UI\nO\nØ¡UUU`i IO/U \"\nßalÐ*U&@1U`×-i[OU`Y2Ui\nWÆU UIR\nO\nØ/UUUi»IO/UMG\n;\n_y41 Nu\n\nApril 2003\nAsking the User Questions\n6. Asking the User Questions\nRU$YOÐc -UU UUOU`Y2ÐUx×-OOIIZU»UN*U@UU;IIUNiOU`YOUdNÐUÐO*ÐU UdOÐOpO*UUaUUOONUNTOoaRIUÐlU IOLi[O\nÐO*IØOUi[UIZi[U`YuICØ2U UUEu\nO\nØ/UUU`i»IO/UO1UYOÐi lUOUiÞÆiU ÐoIEUa\nU;IICØOU»UUEßFÐO2N ÐIUvÐOOIU`YOUIwIÐEaSIa\nUaUUOONi[OR×lO2IIZU UN^*UOoahU UU×liOhIEØ2U\ni[OLaIIEÞÐU`i»IOha\nIIÞEU`Y2UØ4U UIu \"\nWÆU UI \"\ni[OhUYLi\nUKOIO\nUUaUJiAUÐ1⁄4 lUIa*UOOUIÐUUUUIEÞ\nNUOOIU`i[OzÐOaalUIU IO/ßaIIOUUEUEß_IINU8 i»OU¤U`YOÐoUÆÐ=oØ¡UUU`i»IO\nOÐOwi[OLUUIÐOEU¢Ibi[U`Y/u\nO\nØ¡UUU`i IO1⁄4UKÐIUUi3×1U$O1ÐO£×lIÐoINwOEYOÐoi[OLi[OzICØOU»UUEuF@OoØ¡UUU`i IOvYOÐUPÐTO2ÐÞUß]ÐU`IEi*UI¤alÐU'\nUUIEO\nÐOON\nÐSO1INa*ßKÐO2Na-IEØQØ4U USi[Uzi[O÷*IÐU9NiIUOEUUNi[OLaUIUOOOUUItUÐoUiAUa[atO*ÐOC×-IÐIN\nOYOÐiO*iO*IÐU\nUEu\nY*iAU¤OEYOÐoaUUIÐUEU`Ø2ÞUUHUY2ÐU\na-IØSÐIU@a`ÐÞÆiU[i»ÐIdIZiU`YXU`Y2UTO1ÐUi»OU¤IaICØOU»URIa-UIÐU`i IO aIU\nU UO*UUNiOwU`YOUOYOÐaUUI \"\n+ØOU»UU\nÐO2NTyAO*a`UIUO2OU \"\nu\nACæ$CD§e¡a(e$Ci\nNIUU\nOOIU\nÐØOUIÞ6ÐU`i OÐU[Ua\niO lI×*UøØ/UUUi»IO/UEßvØ2O*U»UUEU\nalIØ\nUa-UOi[aa\na(eLæØ\nU\nDFI$8\"'NæF$u\"Euzu»y\nO\nOIO*U`IÐUUCß@ICØOU»UU¦ÐIU\nØ4U UN\nOoa\nNUaÐØ2U[UCßTØOOLU UUEUa-IØ\nUa-UOEia[a\na(eLæØ\ne4e-ioi/ese-ceØ3cDOEI$QYNEAuou\nlIUY1Ø¡ÐhUUÐIOYOUUPa`IITÐaaUi OÐO-U UoØ¡UUU`i»IO1⁄4UQ13ouEoU UÐIOEYLi[OvU`YOUNÐUÐO*ÐU UÐO2NpICØOO*OLi[O\nÐUUÐoaaIIaIEi»ÐUUOO1ÐO£×lIUÐINIICØ2U UUEuU@YOUO\"Ð.Ø/UUUi»IO\nU`IEi*UIhØ2O*ia\ni»UUpIbi[U`Y\nU`YOUSoØ¡UIa\na-ÐU`UUIEO1⁄4ßUY2U¦Ø/UUUi»IOMO*INahICØ2O/UEßbÐO2N-ßiaHU`Ø/OOUUEUa\nØOUAßbOÐUUAUHUY2U6A æ$8CD§e2ae$£itOIOLU`i[O1Ø¡Ð\nU`i»IO1⁄4u\nlIUY1Ø¡ÐU`ØOaaUi»UUÆÐNUa`ÐØOUUUoØ¡UUU`i IOwa`ÐOEiU[iU»aTU`YOÐoUa-IØhOÐOzO£Ø4UUIÞÆiUPiaZa-IEØzIbi\nUY1⁄4u\n6.1. Adding and Removing Joshua Question Definitions\nACæ$CD§e¡a(ea\nU\nDFI$8\"'Næ\nNUaAi[O2UU\nÐ\nØ/UUU`i»IO/u\n^Y2U\nO1ÐUi»O\nÐoIØOÞUO*UCU\nUI\nACæ$CD§e¡a(ea\nU\nDFI$8\"'Næ\nÐIUvÐMICØOU»Upo1Æuß¢ÐðCnoOoono\n[÷Eo[oCø-ðEoø*ouwUY2ÐUUa-UOi[aAi UUaIIEIÐIN\nII\nO*ÐOC×-IÐINooØ¡UUU`i IO/UMu OCØ2IEIUOLU`UatOÐO\nIO*UaIO*USa1⁄2e4e-ii1⁄4ese-ce2u;ßÆÐOON9Ð\n\n1loo3u£oo\nUa-UOEia[ai[O\nU`YOU Ø/UUUi»IO4iUJU`IEi*UIu\nyi×*U\nICØ2U UUEßuoØ¡UUU`i»IO1⁄4U\nY2Ðc lU\nOIO*U`IIU\nUU`ICØ¡OU\nØ2IU\nÐIØ2ÞUO*UCU\naLNGPQ ¡æ-cc\" e1⁄4i\nÐOON\naeLæ-iDFP<V\"Ce\"'Næ^u^Y2UpaIIEÞUIU»UUCUPa-IØuaIEi IIEiU`iUpUY2UIINUIiOIIZY*i»OEYooØ¡UUU`i IO/UÐIU\nICØ2O/u^YOUdU»ÐU`U;UI¤U»UUCUJa-IØ ÐNNwÐNIO£ØOÞUOLU;ÐoUi»IO\nUU`IEi[OU;IUaaU ÐiOvIZY2ÐUxalIØ2I1⁄4oØ¡UUU`i»IO\nNIUUEu\nyAO¦UY2UXOCØUU;IÞ\nlUIUi IOIalIØ\nU`ØOaaUa9ÐSØ/UUU`i»IOoun!1⁄4ßFØ4UiOU`YOUh×*U aIIINIÐIØ2ÞUO*U\n¬\nðCn*uÆO*UaIIUPU`Y2UOCØUUIÞ\nOINUu\n-^U»UÐU UOIO/U`Ø2U[U\nUY2UNi»OEU`i»IO2ÐIawUO*U`Iaa`II¥A æ$C#D§e2aea\nU\nDOI$\"'NæXaIIÐa\nØOUU1NUU OIEi[aU`i IOvIa\nU`Y*iAUJÞÐOEIIu\nYOUXa»ØOO2OEU`i»IO.A æ$C#D§e2a§DF4ea\nU\nDFI$8\"'N[æ\nIUÞI8 lUUzÐ9UiO-U»UBoØ¡UUU`i»IO\nNUa\niO*iU`i IO1⁄4u¥&IOIU\nÞI8 lU¤Ð7Ø/UUU`i»IOwa\nIIÞ\nÐ6eLÞÐOoU¢OØOaAaUIß/ØU U7eeIi1⁄4ii[UU¡Ua\niO*iU`i IO1⁄4u\n\nAsking the User Questions\nApril 2003\n6.2. Default Joshua Questions\nYOU¤O1ÐUi»O$OIÞÆa-IOOUO*UCUKÐIUTÐTOOÐÞ6Uß]Ðwa1⁄2e1⁄4e1ii/ese1ceOOIO*U`IIUsUU`ICØ¡OUAØOIUß&IaU`i IOOÐoUFOIOLUIIU\nUU`ICØ¡OUAØOIUÐoIØOÞUO*UCUEß^ÐOONTÐ¤U`IEiG*UI6a-ÐU`U;UIEO1⁄4u4I^IIPUalÐÞÆaU»UI¬\nZ\\[^]_E^ai]ulIj8fig=E^a]iulIj8fg!uzZmidpkRn^d^`[w\nxdail{fI`8hif_7ßjggIj8]hil{]hÆiff{I^jcbcg]~!w\nZ\\[^]_E^ai]ulIj8fig=E^a]iulIj8fgiy0ZmidpkRn^d^`[\nm9[fpaRq^]igldlIjfgr8Þi]lj8g!_cfI`q^dilIj8fg}dfal}dal{ifI`8u{IjIrcw\nxdail{fI`8hif_(|RnfI`8k|idal{f^`8~w\nUJUIUiUJIZY2ÐU¢Y2Ðaa-UO/UJi[a1U`Y2U6oØ¡UUU`i IOwiAUsiO lI×*UN¬\n-\nyAaU`YOUØ/UIaOIO*UÐiO/UTOOIU»IR-i»O lÐoIEi ÐO-U»UU@ÐUICØ2OuU`i[ÞUß¢ÐKI_UU@IIK sIØ/UUU`i»IOuiAU\n*UOOUIÐUUNTIOOOUu&uO@Ð JIÐO1⁄4UIUIÞUÐO1⁄4UsU`Y2UPaIIa-IUi[U`i»IOwi\nUJaÐUAU UIINØOO1×lO2IIbO/uou\n-\nyAaUY2UoØ¡UIaNIUU@OIOLU;Ðoi[OuU»Ic-i O lÐIEi»ÐO-U UU@ÐU$ICØ2OuUiÞUßU`Y2UØ/UUUi»IOuU IIaLUEßaIU\nU UO*U`iOSiUUIÐoUi»IO/U@IaÐO0@a\nuO@UOOUaU<1ÐIEi»ÐOlU»U1ÐU3Ø¡UU uHÞUO-Ø4ß¢UÐOY9U II×liOIaII\nlÐU3Ø¡UUÆIa1UY2UQ lÐoIEi ÐO-U»UUJU`YOÐUxIIØOU»NÞÐ×*UPU`Y2UPU`IEi*UIUJU`ICØ¡Uu\n&i[U`YOUI9UY2U\nNUa`ÐØOUUKACæ$CD§e¡a×$e\nÞUU`YOINQIIÐ¦Ø4U UIR3IZIEiUUUOþA æ$8CD§e2aT$e\nÞUU`YOIN\ni[a\nÐc -Ði[U»ÐO-U UHi\nUxØ4U UNiOwaIIEÞÐoUU`iOU`YOU6oØ¡UUU`i»IO1⁄4u\nUJUIU¤ÐIUU IÞU¤UalÐÞÆaU UUR¬\nZ\\[^]_j8gi]hI`8]8[j8pdli]Kbcfuil0Z4]^`8ufg}fRy^]pilww\nZ\\[^]_j8gi]hI`8]8[j8pdli]j8ghifuu]iuuIj8fgihf_zZ>fRy^]piluaui]plwiw\nZ\\[^]_j8gi]hI`8]8[j8pdli]uaui]pluBZ4]I`ufguifau]!ww\nZ\\[^]_j8gi]hI`8]8[j8pdli]ag_RdIj8l{_RabzZ4i]I`8ufg}lfhuifau]!ww\nZ\\[^]_E^ai]ulIj8fig=n^{]^`8]hIj8uihIj8l|BZmdpikRn^dI`[Iw\nxbcfiul|i]I`8ufg}|fRy]pl~w\nJIItIU¤NI¤ÐO7A æ$8CD§e¡a(e$Ci_ß&UalUOEia[aiOU`YOÐUxIUPIÐoO*UUoØ¡UUU`i»IO1⁄4UsUIKO1UHICØOO/u\nAR±^dRqbc]Kum&Afv ^dI`j8dibc]u*j8gl{i]=E^a]^`μ*l{idllI`ij8ee]I`ul{]vE^a]uilIj8fg\nZ4diukxbRfulAi]uR[^]Rqfgd{idgR[^k]^`8p{Ij8]!_c~7YO>I`j8glihRE^a]I`Mμom9[^fihRE^a]uilIj8fgu}lw\nsujllI`8ai]l{dilr^xAi¿¶AAiA¶AAIi¿ARo*1⁄28o^AAEAiC3⁄41⁄2sA\nE\n~Ir8|\nx'[^]_Rdabcl}Af~VmUA^]u\nxA¿¶iAAA¶iAAI¿A8o*1⁄2Ro^AiAEAC3⁄4i1⁄2sA\nE\n~\ny^UU£i(UÐNNhÐ@Ø4U UIR[NUa\niOOUNvACæ$CD^e2aT$e ÞUU`YOINpUI@UY2UÐO1I8 lURUalÐÞÆaU URÐO2NNIÐoOOIU`YOUI\nACæ$CD§e¡a(e$Ci_u\nAR±^dRqbc]y#m\nZ [^]_!j8g]h^`8]R[j8pidl]hRq]l{fR[UZ4udRμbcful!wzZ'icfilIj8fgidbzZ4uilI`8]dRquldigR[^dI`[hfalialww\nZ nj8l{huildl]Rq]glhR[]ulI`8aiplaI`8]8[.Z4]^`8ufg}fRy^]pilw(u]!b_\nZ'_cfI`qdlul^`8]dRqr·oybRfulli{]=·orv]I`ufgfiRy^]pl!www\n\nApril 2003\nAsking the User Questions\nZ4diukxbRfulAi]uR[^]Rqfgd{idgR[^k]^`8p{Ij8]!_c~7YO>I`j8glihRE^a]I`Mμom9[^fihRE^a]uilIj8fgu}lw\nsujllI`8ai]l{dilr8AAi¶AAI¿iARoybcfiull{i]1⁄2Ro^AiAEAC3⁄4i1⁄2sA\nE\nr|\nx'[]_cdabRlAf~#m(r)A^]u\nxA¿¶iAAA¶iAAI¿A8o*1⁄2Ro^AiAEAC3⁄4i1⁄2sA\nE\n~\nyAO¦U`YOUOO2UEaUUalÐÞNaU»UßxU`Y2UzoØ¡UIauU`YOÐU@U`IEi*UIURU`YOUBoØ¡UUU`i IO\nÐU@ICØ2O¦U`i[ÞU OIOLUÐi[O1⁄4U\nlÐoIEi ÐO-U»UUEuQ^YOU.Ø/UUU`i»IO\nU»IIa*UpØOO*U`iUIU\niOONi»OÐUU\nU`YOÐoUwOOI\nÞ6IIUU IUØ2Ui»IO/UvUEai\nUUOa\nOU[i»OC×-i[ORIOK JIÐO2NTIOK_OON1u\nAR±^dRqbc]#m\nalÐÞÆaU UÐN\nØU UU iO*a`IIEÞ6ÐU`i IO\nIO-U;Ðoi[O2UN\na\nIIÞ\nU`YOUØ/UUUi»IO\nUI\nUÐoUiAUa[a\nÐtO*ÐOC×-IÐIN\nICØ2U UiU$U`Ø*O*IÐoU\nu^YOUTICØOU»UdiÞÆi[UÐUUUO1ZU`YOUUU IiUHUÞIU`i IOOÐoUFU Ic-i»O$IZYOUOMYOU@OIOOOUØ/NUUKUY2ÐU\n¡UU NUÞIOOÐiAUJØ2O*aÐoi[U`Y*a\nØOUUUI¤Y*iÞ\nO*UOÐØU U¤YOUIPU»IUU\nYOÐOONo×*UIOY*i»Ua¢UAØ2IEO/UJØ2a@iOUY2U¤alIUM\nU UUEUi»IOIa\n;\nÐUEUi3Ø4U6uIZYOIÞU1bU`YOUU[U»IdU`Ø4Ua-UOEUCUÆIaUO*UiOY2UI6U I8 lUIu`uYRUKØU UPU`Y2U6oØ¡UUU`i»IO\nUIpUUUÐO-U[iAUYUY2ÐUO¡UU NUÞIOOÐzYOÐU$i[O2NUUNhU»IUUYOUIY2ÐOONo×1UIOY*i»UaHÐO2NhU`Y-ØU¤UIhU ÐU`iAUa[a\nU`YOUHICØOU»UiUsaAi[IUUNU`Ø*O*IÐU\nu\nUJUIUiUU`Y2UICØ2U UMNUaAi[OLi[U`i»IOtÐO2N\nÐOa»ØOO2OEU`i IOUY2ÐURUYOII1UY2II\nU;IzØU Uhi[UCu)_I U UUY2II\nACæ$CD§e¡a(e$Ci¦ÐIEIEiT -UNhÐUPi[UCU¤ÐoO/UIUIdIUØ4U U@U`YOUROIO lUO*i»UOOOUa»ØOO2OEU`i»IO1⁄4ßXA æ$8CD§e2aLa*ce VCFØ\nU\nDFc8 #Ø3cRI$DFEG\"M$u\nAR±^dRqbc]Fm\nZ [^]_!`8abc]¦_j[^]b!j8lRμ^hli]ul0Z!mdpk8n^dI`[w\njc_xdgR[°xbcfuil|]^`8ufg}|fRy^]ipl~\nxRj8ghifuu]iuuIj8fgihf_(|ifRy^]pil|dhiuau]ipl~\nxuaui]plu}|ufiau]|idhuaui]pl~i~\nl{i]gxaig_cdIj8li{_cab=|]I`8uifg|uifau]i~w\nZ [^]_Rag=[^]iuR[^]Rq^figIj8dR[UZ'w\n\nu]]*jc_(A]iuR[^]Rq^figdj8u}ag_cd^j8l{_ca!b(lf}¿l{]bibcf\nZ4p!bc]dI`cw\nZ4li]bbyxMdgR[zx8j8ghfiuu]uu^j8fghf!_({dg8[^k]I`8pi{Ij8]_=3⁄4duuIjau~\nxMuau]iplu¿il{]bbRf3⁄4duiuIj8au~i~w\nZ4diukxaig_cdIj8li{_cab=A]uR[^]8q^fgd}¿l{]bibcf~7YF4eI`8di{hRE^a]^`μ^hI`8]iuabclu\nm9[fhRE^a]iulIj8fgiulww\n\nAsking the User Questions\nApril 2003\n6.3. Writing Custom Questions\n&IIZIEi[UUTÐOCØUU;IÞ\nlUIUi IOOIaÆÐØ/UUU`i»IO/ß^Ø4U UdUY2U¤O1ÐlUi O7oØ¡UUUi»IOvaIIEÞÐUÐNNi[OzU`YOU\n×*UCaIUIIN1ß_aiæ*e-ß^ÐOONiUCU\nÐoIØOÞUO*UCUxO1Ua`IIUNa-IEØzIbIEi[UUPU`Y2U6oØ¡UUU`i IOO*INaLu\nZ\\[^]_E^ai]ulIj8figE^ai]ulIj8fighgdRq]\n.Zm dpkRndI`[w\n^lI`ij8ee]I`hdlli]I`8g\n\nmpfR[]\nZZ E^ai]I`μ*l^`8al{h8 ^dbca]}pfgl^j8gadl^j8fgKiRflIj8figdb7Ea]I`μ^hipfgl]8±^lw\n^f8[μ w\n\nø-uEopi\nUJU`YOU Ø/UIaaII)A æ$C#D§e2ae$£i_ß/Ø2O*ia\ni»UNdIZi[U`YwU`YOUHU`IEi*UI6alÐU`UUIEOzIa1UY2U6oØ¡UUU`i IO1⁄4u\nyAapo[oCø*o\n9c1loø-ui\nU¦A æ$C#D§e2aTa\"c8DFIaoß6U`YOU\nU\naLUUUÞ\ni\nUXÐU`×-i[O\nIZY2UU`Y2UIU`YOU\nU;UÐUUÞUO*Uhi[O\nU`ICØ¡UßsÐURIaalIU UN\nU;IO*UiO9aÐUAU UOIIwØ2O-×-OOIIZO1⁄4usy\nao[oCø*o\n9c1loø-uziAU6A æ$C#D§e2aTaCa eE9$aß¢U`YOU\nU\naLUUUÞ\niAUÆÐU`×-iORIZYOUU`YOUI6U`YOUTUUÐUUÞ6UOLUxiAU:A æ$8CD§e¡a×a£aeE$8IaßÐUÆIaalIU UNdUIKO*UiORU`ICØ¡U\nIINØOO-×-OOIIZO1⁄4u\nYOU\n\nø-uEo9(ðCno2ouoUÐIØOÞUOLUsOÐoOzÐU[Þ6IUUJÐUIÐEaLU¢O*UPiG-OOIIUN1u\nYOU}Ø/UUU`i»IOuniXOÐOhO*UdyiAUapaIIEÞPUHII6lIUY-Ø/ÐROIÞÆÞÐO2N-UEßÐO2NRiUNIIIC×2UKU[i3×1UTyi\nUa\nOINUziOIU`Y2UwO1INaIa¤ÐO1ÐOC×-IÐINOICØOU»UuFyAaUY2UK lÐU3Ø¡UhIa<uniuiAUvVNGE\nßU`Y2UØ/UIa\nUY2ÐU\nU`IEiG*UIUN\nU`YOU°Ø/UUUi»IOa`ÐiU\nUEusyAa$U`YOUy -ÐUØ/UOIa uniti\nU@O2IO\nVNEAß¢U`YOU°oØ¡UIatU`Ø¡OOUUN1UEu\n;\nÐUUi[OzU`YOUA æ$8CD§e2aT$DiieMa»Ø2OOOEU`i»IOOUaaUi»OEiUUawIbi[U`Y*iOvU`YOU1⁄4uniOÐoU[U»IIFUU`YOU(oØ¡UIawUI\nU`Ø/OOUUN\nÞ6ÐOaIU`i[ÞUUEu(r)^YLi\nUiAUYOIIøØ/UUUi»IO/UIZiU`Yo lÐIEi»ÐO-U UUwÐUICØOOU`iÞUOOÐOtU»IIaLß\nUUi Oi[U`iOwÐU[UbalIUEUi3OlU»U6O-i[O2NiO2UJa\nIIÞ\nU`YOUKØ4U UIu\nun!\nOÐoO NI@ÐoOaU`Y*iO2ß(c)iOOOEU3Ø¡NiOOÐO*A æ$C#D§e2ae$£iIIQA æ$8CD§e2aL\"'EGEAuZy\nU¤UY2IEØ2U N1ß(c)YOIIU8 lUIß\nNIPU`YOUHaIUU IIZiOV¬\n-\nyAaJUY2UIUTÐIUO2IU Ic-i»OO lÐIEi»ÐOlU»UUiOvU`YOU=oØ¡UIaLß]NUOi NUU IÞUYOII\nu[a-UIEYOÐaLUÆOazÐU`×-iO\nU`YOUKØ4U UIKÐ7oØ¡UUU`i IO2u`ß4ia1U`YOU Ø/UIai\nUJU`ICØ¡Uu§yAaJU Iß§OÐUUZU`YOUOIO*U`i[O1Ø¡ÐU`i»IO/u\n-\nyAasUY2UIUdÐIU$U»Ic-i O< lÐIEi»ÐO-U UUaIUU UO*UCßU IUi Oi[UKU UUCU6Ia¢O-i[O2NiO2UaIIHU`YOUÞ\na\nIIÞ\nU IÞ6Ui\nIZY2UIUdu[a`IIPUalÐÞÆaU»UßU`YOU6ØU UIu`u4I^IIKUÐOYvU`Ø¡OYvU UUCß^OÐUUA æ$8CD§e¡a×$D4iie/u\n\nApril 2003\nAsking the User Questions\nYOU1⁄4oØ¡UUU`i»IOi[OzU`Y*iAUUalÐÞÆaU U¤U`IEi UUÆUIa\niOONIOOUIIPÞIIU¤U ÐOØ¡Ð*UUÆUIIZYLi OYhÐ7-iT -UO\nIIINO1UU»IO2UEu(c)-UÐO2NÐIN9OEY2Ii OUUÐIU\nIaAaUIUNSiO\nÐU ÐOØ¡Ð*UUwÞ6UO1Ø4u(c)^Y2UMØ4U UIOOÐO\nOU[i»OC×pIOhIOOU$IIKÞ6IIU$IaFU`YOUU U$OEY2Ii»OUUEßÐU\nIUUUUÐUNUO*UUIHÐOaRIU`YOUIUEuFRU$ÐU\nU I$ÐU`×RU`YOU\na\nØOOOOU`i IO7A æ$8CD§e¡a×$D4iiewUIPIUUAØOIEOzÐHØ4U UIR3i NdU;UUU[iOØ4UJIZY2IÐO1⁄4UIUIUNdUY2U6oØ¡UUU`i IO1⁄4u\n&ISU UUOU`YOUXIUU`ØOUU UzÐO2NSYOII\nU`YOUCatOÐÞU\nÐO*IEØ2UCßsIUMØ4U UXUY2U OIO lUO*i»UOOOUXa»Ø2OOOEU`i»IO/ß\nACæ$CD§e¡a /ccNV\"Ø\nU\nDFc8 #Ø3cRI$DFEG\"M$6i[OwU`Y2U(r)A æ$8CD§e¡a(e$Ci OIO*U`iO-Ø/ÐU`i IO/u\nZ\\[^]_j8gi]hI`8]8[j8pdli]= ^db!j[^hRn^f^`[.Z nfI`[ybRdgeadie]ww\n\nA{i]pauilfRqji]R[[^]!_E^a]uilIj8fg\nZ\\[^]_E^ai]ulIj8figp{]ipkhIjc_RhR ^dbjM[^hRn^fI`M[.ZmidpkRn^d^`[w\nx' ^d!bj[^hRnfI`[*|8n^fI`[K|bcdgeiade]~\nmpf8[^]\nZZ Ea]I`μKlI`8al{ihR ^dbcai]pfgilIj8gadilIj8fg¦icflIjfgdb¦j8egfI`]w\nZ4aigbc]uuBZ4]REb=lI`8ali{hR ^dbRa]l^`8a]w\nZ4]I``8f^`r^s[^fg4l}kgfRnK{fRnKlfduikjc_1⁄4·^¶j8u¦_cdbcui]V'r Ea]I`μwiw\nZ4l8μ^]pdiu]|RnfI`[\nZ4agfiagR[^hbRfeIj8ph8 ^dI`j8dibc]\nZ4]I`i`8fI`rs<[^fg4lkgifRn*{f8n*lf}duk=Ea]ulIjfgudifal}]R ^]I`μ\nfuuIjbc]=nfI`[OmU·^¶Ir Ea]I`μwiw\nZ4fl{]^`nj8u]\nZ4lRμ]pdui]|bcdigeadei]\nZ>agfaigR[^hbcfieIj8phR dI`j8d!bc]\nZ'bc]lBZZ'bjulhf_Rhbcdgeiade]u\nZ [nFmdpp]ilIj8geihR ^dbcai]u\nZ8E^a]I`μhIj8fSm4bcd]!bKr8Adigeadei]uIrzm fRn^ghRnj8gR[^fRnKlw\nZt_cfI`q^dilRE^ai]I`μ^hIjfrAdgeaide]u*j8g=n^{^j8p{=·ioj8u}d=n^fI`M[rv|RnfI`[w\nZ>d]g8[\nZ4dpp]il0Z>uau]il]ge!bj8u{¦_`8]gpi{e]I`Mq^dgu8n^d{Ijcb!jvudgiukI`j8l!w\nmI`8fRqlgIjRbw\nZ4dpp]il0Z>u]RE^a]igp]u8μq^fbiw0mI`fRq^l*r8¿l{]^`8uIrzm[^]_cda!bclgIjRbwwwwiw\nZ'bcffiK_cfI`7l{]h!bcdgeaide]jgKbj8uilhf_ch!bcdgeaide]u\n[^fBZ nj8l{ihagIjc_!j8pdlIjfg\nZ4ag^jc_μ*|!bcdgeaide]li{]hbcdigeadei]w\nZ4uaipp]]R[KuRμ^uVm au]I`8h^j[wwwiww\nZ>fl{]I`Mnj8u]\nZ n^{]ig0Z [nFmdpp]ilIj8geihR ^dbcai]u\nZRE^a]^`μ^hIj8fUm4bcdi]bKrAdgeaide]uIr°mfRn^gihRnj8gR[fRn*lw\nZ'_cfI`qdlREa]I`μ^h^j8fr^su=·io*d=nfI`[jg=·o^|\nrv|8n^fI`[K|bcdgeiade]w\nZ4dpp]il04iffbc]digUmI`fRq^l}gIjcb0m I`8fRq^ilhRq^fR[]Um'`8d8nom9[^]!_cdabcl}lww\nZ4uiapp]]8[*uRμ^u#mau]I`hIj[wwiwwwwwiw\nZ>dukxt ^dbj[hRn^fI`[Kfal^jE^a]}|bcdgeiade]~1⁄4YO4I`ij8glhREa]I`μ^h^`8]uabRluUm9[fhRE^a]iulIj8fgiulw\n\nAsking the User Questions\nApril 2003\n;\nUi O£×\nIOOalIØ2IzU UU UOEU`i»IO/UEßÐOONvU`YOUCa ÐIUwY*iG-Y*UiG-Y*UUN-u3@FU$UY2UwOOUaUTU OEIUUOtUYOII1UEßIU\nU UU»UOUUNUIUI$U»ÐOØ/Ð*UUNaAIIÞ\nUY2UdNUaÐØ2U[UCß]ÐOONRÐNNUNRÐO2IU`Y2UI$IOOUa\nIIÞ\nU`YOU\n\"\n1bU`YOUIU \"\nIaUi»IO/uF@ba\nUUIIUTOEUi»OC×hIO¡IO2Uß&UY2UQA æ$C#D§e2ae$£iIOIOLU`i[O1Ø¡ÐU`i»IOOUalUOCØ2U;UUEß_aIEi[OLU`i[OhIØOU\nU`YOUXÐO1⁄4UIUIU@UIMU`YOUzØ/UIa9ÐO2N\nU`YOUMIUÐU IOtIZYa9UÐOEY\nÐO/UIUIXU`Ø¡OOUUNUN1uU1i[O2OUMIU\nÐU`×*UNKA æ$8CD§e¡a×$D4iieuUIzIUUAØOIEOÐØU UIwi»NOUUUUi[O ØUdIZY2IhÐoO/UIUIUNOU`YOUØ/UUU`i»IO/ß\nIUO*UU¢U`Y*iAUsiO*a`IIEÞÐU`i IOzÐUJIUUU\nu\nZ4dukx' ^db!j[^hRn^f^`[*fialIjE^ai]|bcdigeadei]~7YO>I`j8glihRE^a]I`Mμ^hI`8]uiabcluSm9[^fhREa]ulIjfgul!w\nxMaRo^AsAihRß^¿CA}i¿IAsIA\nE\nCAA3⁄4i1⁄2~uaipp]]R[]R[\nsl=ndu=[^]^`j ^]R[_`8fRq}E^a]uilIj8fg}3⁄41⁄2A3⁄4Eihs\nE\nha8o^AsAh8ß^¿CA\nr8ÆIj8gi{]dR[r\nxMaRo^AsAihRß^¿CA}i¿IAsIA}AAÞAsM¶1⁄2~uiapp]]8[^]R[\nsl=ndu=[^]^`j ^]R[_`8fRq}E^a]uilIj8fg}3⁄41⁄2A3⁄4Eihs\nE\nha8o^AsAh8ß^¿CA\nr8ÆIj8gi{]dR[r\nxMaRo^AsAihRß^¿CA}i¿IAsIA}A¶ÆAC8o^AA¿~}uappi]]R[^]R[\nsl=ndu=[^]^`j ^]R[_`8fRq}E^a]uilIj8fg}3⁄41⁄2A3⁄4Eihs\nE\nha8o^AsAh8ß^¿CA\nr8ÆIj8gi{]dR[r\n\nApril 2003\nPattern Matching in Joshua: Unification\n7. Pattern Matching in Joshua: Unification\nI1⁄4ØOO2OEU`i IO1⁄4U\nA æ$C#D§e2a§DFVN3a4\nA æ$C#D§e2a§Oe-ccN eV\"\nA æ$C#D§e2aT$D4iie\n«TÐOEII\nA æ$C#D§e2a1⁄2e?N\"CFØLDOVNa'Nie\"N[æ\n@FUNUU OEIEi3O1UNvi[OSUY2UhU UOEU`i»IO\n\"\n+^Ø2U UUdÐOONOyAO*aUIUOOOU \"\nßa-ÐU`U;UIEOSÞÐUOEYLi[OMØ2OONUIEU[i»UUÐoU[U\niO*a`UIUO2OEiOzIalUIÐU`i»IO1⁄4UÆi[OK-IUY1Ø¡Ðu_yAOzaIIEIÐoIN@OEY2ÐiO*iO2ßOlIUY-Ø¡ÐÞ6ÐUOEYOUUÆICØOU»U¤UIEiG*UI\na-ÐU`UUIEO1⁄4UdIZi[U`YNÐUÐO*ÐU UzaIUNi OÐU`i IO/UEuFyAOO*ÐOC×-IÐIN OEY2Ði[OLi[O2ßUiU$ÞÐUOEY2UUv*IÐUAUdIZiUY\nNÐUÐO*ÐU U¤aIUNi OÐU`i IO/UÐoOONIZi[U`YICØOU»U¤UIEiG*UIPalÐoUUUIEO/UEuaYOU¤U»aa-UIa¢a-ÐU`UUIEOÞÐUOEYLi[O\nØU UNdi\nUÆOÐUU»UNdø-oJL3'Jð1-oJno4u\n7.1. Unification Rules\nII¤aIUNi»OÐU`i»IO1⁄4UÆU`YOÐoUÆOIO*UÐiOOOI6 lÐIEi»ÐOlU»UUÆÞÐoU;OYXu II6Ø2O*ia[a-u`ßi[axU`YOUCawÐIU@UUICØ/OEUAØOIÐoU\nUau\n\nøJ9R1-o3u o2o\nßbUY2ÐUPiAUEßbi[a6U`YOUCa\n\"\nU»IIE×XUY2UU ÐÞ6U \"\nu:^Y*iAU¤i\nU¤ÞJØ¡OY\nUY2UU ÐÞ6UUUUUÐU¤U`YOU\nyi\nUa(\nU\nD§eEZa\nØOO2OEU`i IO1⁄4u4I^IIPUalÐÞÆaU»UI¬\nx_cdpl}dpi~\nq^dilp{]u\nx_cdpl}dpi~\nx_cdpl}dpi~\n[^fi]ugfil=q^dlip{\nx_cdpl}d=[~\nYOUwÞ6IIUpi[OLUUIUUU`iOSOÐU UpaIIalÐU`UUIEOSÞÐUOEYLi[O\ni\nUIZYOUOSU`YOUpaIUNi OÐU`i IOSa-ÐU`UUIEO1⁄4U\nOIOLUÐi[O¦U Ic-i»O* lÐIEi»ÐO-U UUEu(r)^YOUO¦aIUNi»OÐoUi»IO/UØ2O*ia[aIi[aU`Y2UIUMiAUwÐXIÐEa9Ia$÷£øu÷EoGJ»o[øLoJo\nc1-o[ø1u ÷(r)3`noo\n*u<c1loJG1Iuo3u ÷U I¤U`YOÐUxO*IUYaIUNi OÐU`i IO1⁄4UJO1UOIÞUUU`ICØ/OEUAØOIÐUUaRUoØOi\nlÐU»UO*UCu_y\nO\nU`YOUUi[ÞÆaU»UdOÐU Uß]ÐOpØ2O*iO/UUÐOLUi»ÐUUN@U»IR-i»O< lÐIEi»ÐO-U U$Þ6ÐUOEYOUUKÐOazIEO UOEUÆi[OhU`YOUdUoØOi\nlÐ\nU»UO*U6a-IUi[U`i»IO/ß&O*UOIÞÆiOMi[O1⁄4UUÐO*U`i»ÐUUNhÐUHUY2ÐUPIO UOEUCuZyAOXU`YOU@a-ÐUUUIEOXa-ÐiIU6O*UU II1ßaII\nUalÐÞNaU»Uß4U`YOUU UÐoIUPU`YOUHÞÐUOEY2UUÆÐO2NU`Ø*O2UU`i[UAØOU`i»IO/U<¬\nÆidll]I`gKum6x_cdpl}d}p~\n\nÆidll]I`gyVm6x_cdpl}d}|R±^~\n\n_cdplK_cdipl0Z'_Rdpl=qdlp{]iuK_cdpilw\nd}d\nZ4dvq^dlpi{]ud!w\n}\nZ4vq^dlpi{]u!w\n|R±*hih\n*p\nZ4p*j8uuiaulIjlal]R[_cfI`7|R±w\nÆidll]I`gKum6x_cdpl}d~\n\nÆidll]I`gyVm6x_cdpl}|R±*|8μ^~\n\n_cdplK_cdipl0Z'_Rdpl=qdlp{]iuK_cdpilw\n|R±*hih\n*d\n\n|Rμ*hih\n*\n\nPattern Matching in Joshua: Unification\nApril 2003\n\"!#%$'&(\"!*),+-/.&+0!1\n\"\n7898:6;\n<=8\n8> \"\n?0@0A@\n?B@\nA@DCE@DCF?HG679@/IJAKECMLN@07N?:PO6?0@C=@Q:@\n5SR\n;SASIJA;TCUA9OK\nAV?0@;:,8\n<\n@Q:;\n8979GP@0ACEGPCEGPWX@\nA@IJA;TCUA9OK\n5ZY\\[\nG\n;\nAJ?]7\nG\nR\n;^@\nCQ?%CQ?%@\nA@_?:,8\nA`?:PO6?0@C=@Q:@CU79G\na\nCEW\n@b8\nA9:c?\n@\n?FdP?0@\na\n@07eLZ;\nAfgKM79WCU8\nAKEKhdi:G ?]7T:6GLjCEG\nR5\n;\nG68\n?\nY\n24365HR\nKEKU7\nf'C=GkWlLm7HG67\n@n:GkC\nR\ndo\npTqSr\nsr\nsZt\npTq^uvr\nwmxr\nwZt\ny\n;zA{L\n@0ACEK\nL`L\"CQ?]8:c?T?0CM79G|7\nR\n@\n\"\n7898:;\n<E8\n8> \"\no~}\n@\n365R\n:G68T@CU7\nG{\n&P-661(\n\nAW\n7Z?\n:,Ao\n:6GPC\nR\nd<\ny42['Y\n7zL\n@\n;\na\nCEG\n@\n79;T;\n8T@\na\nA@08\nCEG@\nG\n@\nA\na\nK\n5Z\n79G\nG\nL?N@07_>G79ff\nG\nIJA*;TCMA9OK\n?lf'C=@\n@\n?]A\na\nGA\na\nA*;\nCUL\nGk@CM89AKA*GLf\nG`@\nd{LZC\nRFR5\n;\nYy\n;VCEG(?0@0AG68\n5Z\nf\ndLm7\n?A@;TC=WW\n;\n\nA@@\n;TGK=C>\n@\nCQ?\no\npqSr\nsr\nsZt\na\nA*@8\n@\n35HR\nC=;?0@\n\n;\nLZCM89A@CM79G\n\nA@@\n;TGO\nKM79f\n\nO#:6@G67\n@@\n?\nG6L79G\n5ZY\npqSvvt\nZ¡¢£¤¥¦¢#§ vv¥#§i(c)¡¢¢¥#§a\npqS¦# 9««TwN(c)¬¢¢\nwZt\nZ¥¦a¢i Z¡¢£¤¢#§ Tvv¥#§j(c)¡¢¢¥Z§a\n}\n8@CM79G\n\"\n(r)A;TCMAOJK\n? AG6L}P897\n\nCEGPWC=G°7\"?\n:,A \"\n7I\n;?b@\n?\n?]8\n\nC=GkW;:6K\n?\nY\n7.2. Variables and Scoping in Joshua\n\nG±W\nG\n;\nAK2@\n;\na\n?\n\n@\n?]8\n\nR\nA3IJA*;TCMA9OK\nCQ?/@\nA*;\nAif CE@\nCEG±f\nCM8\nC=@ CQ?bImCF?0COJK\nAGL\n89AGμO\n;\n59R5\n;T;\nLV@07\nY'y\n79;\na\n;\nG{?]897\n\nCEGPW^f'C=@\nCEG¶}\"d\na\nOP7\nKECU8?\n\naa\nG·cCF?\n\no2}\n@\n?\n8T@CU79G\n\"\n}k8\n\nC=GkW \"\nCEG 1o»1⁄4\"1⁄2=3⁄4E¿A~AA1⁄4oo/1⁄4AAA3⁄4EAEAVA4ÆmA*C,EÆ\nCkE~AA1⁄4AP¿EEAEA\nY\n\nG^°J7Z?\n:,A\n\n?0C=G68\nKU7\nWCU8iIJA;TCUA9OJK\n?e@Ud\n\nCU8\nAKEKEd\nA9I\nGA\na\n?SI\nr\ns\n\nr# ¢¥\n\nAGL^?]779GI\n\nIJAKECML\na\nA*@8\nCEGPW±CF?/OPAm?\nL79G±:GL\n;?0@0AGLZC=GkW±f\nG±IJA;TCUA9OK\n?Df CE@\n@\n?]A\na\nGA\na\nA;\nCML\nG<\n@CU8\nAKIA*GLjf\nG@\ndLZC\nRQR5\n;\nY2I35\n?]897\n\nCEGPW;:K\n?\nR\n;/°J7Z?\n:(AjL\n@\n;\na\nC=G\n@\nCQ?\nY\n·479WCM8BIJA;TCUA9OK\n?~A;\n1⁄2ÐEN#3⁄4E¿ÆJ1⁄2E1⁄2\n1VA]¿1⁄4AcEO_f'C=@\nCEGO;:K\nO7LZC\n?\nYO243\nA@CQ?\n\n1⁄2Ð1⁄4]C63⁄4E¿eO9ÆO]3⁄4EÆm»\"1⁄2ÐEAe× 3⁄4UEÐØ\nEØPEAÆmoEAPÆmoE\\×'3⁄4UEÐØ63⁄4EAÆO]Ek1⁄2ÐE/»1⁄4O\"1ÆO0E\\3⁄4EOkE]A6E=3⁄4E¿Æ1⁄2UÆ#AkOo\\EATEUoÆE¿]Ø%EØPEAÆmoE1⁄4»=UZE]¿TE\nY\nU\n§ vv¥Z§i(c)¡¢¢¥#§a¬¦# avr\nscU\npTqr\ns±Y9t\nÞ¢¤Z ¦r\nsV ¦J 9qq9¥#§T¥a¢q*§\n\nß\n¡¢¡a¡¦¥(c)#§T¥\n£¡¢# a¬¦# avr\nscU\npTqar\nsZt\nÞ¢¤Z ¦r\ns\na\n¡¢£¤¥¦¡a\n¦¬a¦¢# ¢¬¢Z a¦(U\na\na¢#§ Tvv¥#§\npqSr\ns%Y9t\nr\nsNaaaNa\na¥£\n\"¥¦\npTqSalY9t\na\na(c)#§¥ £¡¢Z aOpqSarsZt\nr\nsNaaa±Y\na¥£\n\"¥¦\npTqSalY9t\n\n?\nLVO\"d^CE@?\nK\nR0\n@\n365±æ\n:\n?0@CM79G<\na\nA;>¶7\n;l@\n35±5æ\n:CIJAK\nG68\n?cd\na\nOP79KBI=eTI~CF?SAGeAG79Gmd\na\n7T:c?\nKU79WCM8DIA;TCMAOJK\n5ZYe\nA\"8\nG\nd7:V@Ud\n\nCQ?/LZC\nRFR5\n;\nGP@\n\nC\na/\n7Z?0CEGPWG7S?]8\n\nC=GkW%8\n79G(?0@;\nACEGP@?\n\nAGL\n89AG@\n;\n59R\n79;\nO\n:c?\nL\nR\n79;\n\"\nG67e8\nA*;\n5 \"\n?0KM79@?\nYy\n79;\nA\na\nK\no\n\nApril 2003\nPattern Matching in Joshua: Unification\npq9rrt\nZ¡¢£¤¥¦\npTq9YSat\n¡a\n\npq9\n≡≡\nt\n\"¡¢£¤¥¦\npq9Yat\ne\n¤¥#§¥¡¦\npq9rsNr\nsZt\nZ¥¦a¢\n·479WCM8eIJA;TCUA9OK\nGA\na\n?BA;\nG\nf\nA\"8\n@C\na\nAS;:6K\nCQ?D@;TC=WW\n;\nL\nYU\n79G8\n\n@Q:,AKEKhd%@\n?Fdk?]<\n@\naia\nA>\n?HAl8\n\nd±7\nR\n@\n@;TCEWW\n;\nLl;:6K\n5ZYU2I35\nIJA;TCUA9OK\nGA\na\n?DCEG_@\n\"\n\nd \"\nA;\n@\n?]A\na\nGA\na\n?\\Am?@\n7Z?\nCEG%@\n79;TC=WCEGA*K\n\nO#:6@ A;\nALZC\nRQR5\n;\nGP@I\n;?0CU79GV7\nR\n@\n?\nIJA;TCUA9OK\n?\nY\ni\n:6;TC=GkW;:K\n5j5T5\n8:@CU7\nG±@\nCQ?\n\"\n\nd \"\nR\n@\n;:K\nCF?H?:(8\n?T?0CI\nKhd\na\n7LZC\nR\nC\nLAm?G\nf`:GkC\nR\nCM<\n89A@CM79G(?V78\n8:;\nY\\[\nG68\n;:K\n55J5\n8:@CM79Gi@\n;\na\nCEGA@\n?\n\nAK=KOJCEGLZCEGPW6?VA;\n:GLm79G\nAGLe@\n;:6K\n\"\n\nd \"\nCQ?L\"CQ?]8\nA;\nL\nL\nY\n7.3. Some Examples of Joshua Unification\nib5\n;\nA;\n?]7\na\n?0C\na/\nK\n5e5\nA\na/\nK\n?\no\npq9¡¢¤¥Z§ir\nsr\nwZt\n¬a# 9q\" ¥¦\ne\n¢¤\npq9¡¢¤¥Z§ðZ¤aðZ¤aa\nð§t\npq9¡¢¤¥Z§ir\nsðZ¤at\n¬a# 9q\" ¥¦\ne\n¢¤\npq9¡¢¤¥Z§iv¥Z§v¥rwZt\npq9¡¢¤¥Z§ir\nsr\nwZt\n¬a# 9q\" ¥¦\ne\n¢¤\npq9¡¢¤¥Z§irnrnt\npq9¡¢¤¥Z§ir\nsðZ¤at\n\"¥¦a¢¬aZ 9qTw\ne\n¢¤\npTq9¡¢¤¥#§jr\nwNv¥#§v¥t\nib5\n;\n5mo\n?lA\nR\n79;TfIA;\nLz;]:6K\n5o5\nA\na/\nK\nf C=@\nA\n&o9oe+\n?0@0A@\na\nGP@@07\nK\n\n:?%?\nf\nA@CQ?\nA\n#\nGPCEGPW\nY\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥(c)\"«9¡wZ¦a# a¦¢#§¬\n\"¥a¢zu(c)¥#§¦a% a¦¢#§¬\nZ¥a¢\"xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥\ne\na¦zu(c)¥Z§¦a¢¤# av*xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥% a\noJ ¢¥a¢a¡¬\nJ ¢# aμu(c)¥#§T¦a\"xx\nu¢¥\"««%p(c)\"«9¡\nw\"¦a# a¦¢#§¬\nZ¥a¢÷Z¡a¥¢¬a¡t\"x\nucZ¥\"q\"§¬*«9¥¢¥¦¢a¥\"«* v# a#\n«\" ¢\nwu\"Uq9#§\ne\n¡#§mx\n9q±p]¡a\n^p](c)\"«9¡\nwZ¦a# a¦¢Z§¬\nZ¥a¢r(c)¥Z§¦ar# a¦¢Z§¬\nZ¥a¢t\np]\ne\na¦r(c)¥#§¦ar# Ta¦¢#§¬ Z¥a¢tt\n¢¤¥aVp¡a\nop\na\noJ ¢¥a¢a¡¬\nJ ¢# ar(c)¥#§T¦at\nu0q9#§] Z¡¢¢Nøuu\na\na¢¤¥%§¬\"«\n¥a\nwNr(c)¥Z§¦aN ¦a¬a\nN¢uu6uH¡a\nr# a¦¢Z§¬\nZ¥a¢\n¦a¬a\nN¢uucyøir(c)¥Z§¦ar# a¦¢Z§¬\nZ¥a¢\"x9t\"x\nþ365\nGy@\nCF?\n;:K\n5#o\n?i@;TC=WW\n;\n\nA*@@\n;TG\nI\np(c)\"«9¡wZ¦a# a¦¢#§¬\n\"¥a¢\nr(c)¥#§¦a\nr# Ta¦¢#§¬ Z¥a¢t\nIeCQ?\na\nA*@8\nL_AWPACEG(?0@e@\nLmA@0A9OAJ?\n5\"\nC=@H:GPC\nR\nC\n?f CE@\np](c)\"«9¡\nwZ¦a# a¦¢Z§¬\nZ¥a¢_÷Z¡a¥μ¢¬a¡t\nY\nA@\nCQ?\n\nr(c)¥#§T¦a\nCQ?:GPC\nR\nC\nLjf CE@\n÷\"¡a¥\n\nAG6L\nr# a¦¢#§¬\n\"¥a¢\nCQ?:GPC\nR\nC\nLjf CE@\n¢¬a¡\nY\nQR\nf\nA\"LmLAG79@\n;\n&P-661E+0!\n\n?0@A*@\na\nGk@/?:(8\nAm?\n\ne\na¦B÷Z¡a¥3¢¬a¡t\n\n@\nCQ?:GPC\nR\nC\n? f CE@\n@\n?\n79GL\n\nA;T@/7\nR\n@\n;:6K\n5mo\n?/@;TC=WW\n;\n\nAGL@\n;:6K\n53R\nCE;\n?\nYA24365\nA\"8@CM79G\n\nA;T@b@\nGOAZL#L?\n@\n;:K\n5mo\n?C=G\nR5\n;\nG8\n@07l@\nL#A@0A9OPAm?\nf CE@\n@\nOJCEGLZC=GkW6?@\nA@\nA9I\nO\nG\n?0@0A9OK=CQ?\nL\nO\"d:6GPC\nR\nCU8\nA@CU79G\nY2435^R\n79;\na\nA*@\na\n?T?]AW\nf\nA\"LmL\nL¶@7^@\nA\"8T@CU79G\n\nA;T@l8979G\nR\nCE;\na\n?@\n?\nOC=G6L\"CEGPW6?\no\n\nPattern Matching in Joshua: Unification\nApril 2003\nu¢¥\"««±p\ne\na¦÷Z¡a¥¢¬a¡t\"x\na\na¢¤¥%§¬\"«\n¥a\nwNr(c)¥Z§¦aN ¦a¬a\nN¢÷uPuB¡aNr# a¦¢#§¬\n\"¥a¢\n¦a¬a\nN¢\nU\n\nucy\np\ni÷u\n\nU\n\nuZt\n2I35\nG\n@\nA\na/\nK\n:c?\n?OPA\"8>fIA;\nL8\nACEGPCEGPWAG6L8\na\n7:GLl?:POWP7A*KF?\nY\n\nA\"8>Jf\nA;\nLi;:K\n\ne\na¥#§¦¤# T(c)a\"Y\n?0@0A@\n?b@\nA*@bA\n\n;?]79G±7\nf'G(? f\nA@\nI\n;H7O\n]5\n8T@/?\n365B3\nAm?\n\nA*CML\nR\n;\nY\nA\"8>fIA;\nL;:K\n\ne\na¥Z§¦¤# (c)aa\n?0@0A@\n?l@\nA*@SC\nRiy\n;\nL\nAGL\n\n7O`7\nf'G`@\n?ÞA\na\nCE@\na\n@\nG¶C=@CQ?AOL\n?0C=;\nA9OK\nC=@\na\nY'þl5\n@\nGO\n&P-T6461ÐP-\nA\næ\n:\n;0d^f\n7Z?\nWP7AK/CF?j@07±L\n@\n;\n<\na\nCEG\nf\nA*@CE@\na\n?A;\nL\n?0CE;\nA9OJK\n5ZY2I35eæ\n:\n;0dN?:,8\nL?\nY(þ3\nA@C=@\na\n?:GPC\nR\nC\nL\"e\n2I35æ\n:\n;0d\nZ¥¦Z §¡a\"«\n¥N ¢¥\n\n:6GPC\nR\nC\n?Hf C=@\n@\n@;TC=WW\n;i7\nR\nOAZ8>fIA;\nL;:K\n\ne\na¥#§¦¤Z (c)aa\n@\nA*@;:6K\n5mo\n?±?:POWP7AK\n\ne\na¦^r(c)¥#§¦aora\nðZ¥£¢\n\n@\nGe:6GPC\nR\nC\n?f CE@\n@\n@;TC=WW\n;O7\nR\n;:K\n\ne\na¥Z§¦¤# (c)a\"Y\nY±24365\nKMA@@\n;\no\n?\n?:POWP7AK\n(c)¡#\n<\nq9#§\nr(c)¥#§¦a\nra\nð\"¥£¢\n:6GPC\nR\nC\n?f C=@\n@\nLmA@0A9OPAm?\n\n;\nLZCM89A@CM79G\n(c)¡Z Za\"q9Z§! #§¥\nN¦¢¥#§¥\"\nY 2435\nWP7AKb7\nR\n;:6K\n\ne\na¥#§¦¤# T(c)a\"Y\nCQ?j?]A@CF?]<\nR\nC\nL\nY5\n@°J7Z?\n:(A^@;TC\n?@07?]A@CF?\nR\nd¶@\n?\n8979GL\n\nA;T@7\nR\n;:6K\n\ne\na¥#§¦¤Z (c)aa\no\n?±?:kOJWP7AK\n\ne\na¦\n\naer# ¢¥\n\nA*GL?]77\nG\n\n:6GP@C=K'@\nWP7AK?:(8\nL?\nY\nib5\n;\nA;\n@\nL\nR\nC=GkC=@CU79G(?AGLD\n&P-T6461E+0!\n\n?0@0A@\na\nGk@?\nR\n;D@\nCQ?\nA\na\nK\n5ZY\n\nß\n¥*q\" a¥¦\nZ¥¡\n¢Z a¡\"«(c)#§¥\nJ £¡¢¥¦\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥(c)¡# ]Za\"q9#§Ou(c)¥#§T¦a¢¤# av\"xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥Z¥¦Z §¡a\"«\n¥zu¢¤Z av\"xx\nu¢¥\"««%p¡a\nop(c)¡# \"a\"q9#§# #§¥\n¦¢¥#§¥t\np(c)¡# \"a\"q9#§\n\na\n¦¢¥#§¥tt\"x\nucZ¥\"q\"§¬*«9¥\ne\na¥#§¦¤Z (c)a\"You\"UQa¡£$\ne\n¡#§#x\n9q±p](c)¡# Za*q9#§ir(c)¥#§¦araðZ¥£¢t\n¢¤¥aVp\ne\na¦r(c)¥Z§¦ara\nðZ¥£¢t\"x\nucZ¥\"q\"§¬*«9¥\ne\na¥#§¦¤Z (c)aaμu\"UQa¡£$\ne\n¡#§#x\n9q±p]¡a\n^p]\ne\na¦% #§¥\nr# ¢¥\n\"t\np]\ne\na¦\n\narZ ¢¥\nZtt\n¢¤¥aVp0Z¥¦Z §¡a\"«\n¥r# ¢¥\nZt\"x\nQR\nf\n897T:6KMLNKU77>OC=G ?0CML\n@\n:GkC\nR\nC\n;L*:;TCEGPW\n5J5\n8:6@CU79Gμ7\nR\n@\n365æ\n:\n;0d\n\n@\nCQ?HCF?Hf\nA@Df\nfI7:6KML?\no\nu¡¦\n$OpZ¥¦# §T¡a\"«9¥r\nsZt#&('(c)#§ a¢a)Z¬¥Z§wmx\n\nApril 2003\nPattern Matching in Joshua: Unification\nu\"¦\n$# avVp\nß\n\na*\nu\n\n+\nr,Zt\nZ § ava¡£\n$\ne\n¡#§V§¬\"«9¥%\n\n*\n\n-\na.\naa\n/\n\na# 9qw avVp\nß\n\na*\nu\n\n+\nr,Zt\ne\n¢¤Vp\nß\n\na*\nu\n\n+\nr\naU\n\na\nt\n/\n\na# 9qw avr\naU\n\na\ne\n¢¤r,\n/uZ¦\n$# TavOp0\n*\n\nß\nr0,Zt\n/2 # § Tava¡£\n$\ne\n¡#§]O§¬\"«\n¥1\n*\n\n-\na.\na\"Y\n/%/\n\naZ 9qTw avOp\n*\n\nß\nr,\"t\ne\n¢¤Op\nr\n.\n\n*\n\nr\n\n÷\nU\nt\n/%/\n\naZ 9qTw avr\n.\n\n*\n\ne\n¢¤%\n*\n\nß\n/%/\n\naZ 9qTw avr\n\n÷\nU\ne\n¢¤r,\n/%/uZ¦$# avVp\n.\nu\naß\na\n\n*\n\n*\n\nß\nr,Zt\n/%/\n\naZ 9qTw avr,\ne\n¢¤%\nU\n\n*\n\n/%/uZ¦$# avVp\n\nU\n\n*\nt\n/2 # § Tava¡£\n$\ne\n¡#§]O§¬\"«\n¥1\n*\n\n-\na.\na\"Y\n/%/\n\naZ 9qTw avOp\n\nU\n\n*\n\nt\ne\n¢¤Vp\nr\n.\n\n*\n\nr\n\n÷\nU\nt\n/%/\n\naZ 9qTw avr\n.\n\n*\n\ne\n¢¤\n\n/%/\n\naZ 9qTw avr\n\n÷\nU\ne\n¢¤%\nU\n\n*\n\n/%/uZ¦$# avVp\n.\nu\naß\na\n\n*%\n\nU\n\n*\n\nt\np\nß\n\na*\nu\n\n+\n%\nU\n\n*\nt\n7.4. Basic Unification Facilities\n°J7Z?\n:,A\n\n;\n7I#CUL\n?B?]7\na\n:GkC\nR\nCM89A@CM79G\nR\nAZ8TCEK=CE@C\n?\nR\n79;D:c?\nf CE@\nC=G±·cCQ?\n\n7L\n5ZYA2435\nL\"CU8T@CU7\nG6A;0d\nGP@;0d\nR\n79;\nA\"8\n3R\nA\"8C=KECE@MdL\n@0ACEKF?bCE@]?:?\nAGL\n\n;\n7I#CUL\n?\nA\na\nK\n?\nY\n2I35VR\n:G68T@CM79Gμ\n&P-T6461(\n:GPC\nR\nC\n?\n5T\n\n;\n?T?0CU7\nG ?Sf C=@\nC=Ge·cCQ?\n\n7L\n5O5\na\nO\nL#L\nL^CEGe@\n3⁄4546\n\nA*;T@j7\nR\n;:6K\n?\n\n;lC=G¶@\nO7L9dz7\nR\nA\n&P-T,61Ðk!7c!#-T+0E&4\n;lf\n;\nI\n;idJ7:\nR\nCEGL_CE@\nGI\nGPC\nGP@@078\nAKEK CE@Id7:;?\nK\nRÞY\n2I35\na\nA\"8;\n&P-66198E+0(:\n(E#+0=&μ5\n?0@AOJKECF?\n? @\n?]897\n\nR\n:6GPC\nR\nCU8\nA@CU79G(?/Lm79G\nf CE@\n<\nCEG{CE@]?SO7L\nd\n\nAG6L\n?0@0A9OK=CQ?\n?lA\n\nKMAZ8\n@07%O\n@\n;\n79f G{@07OC\nR\nAO:GkC\nR\nCM89A@CM79GgC=GgC=@?OP7L9d\nR\nAC=KQ?\nY2I3\nA@CF?\no\n-\nQR\nA:GPC\nR\nCU8\nA*@CU79G8\nAGkG79@DO\nL#79G\n5Z\n\n&P-T,61(+0(o\n&;8\n?e@07@\nL9d#G6A\na\nCU8\nAKEKEdVCEGPG\n;\n<\na\n7Z?0@\nG68TKU7\"?0CEGPW\n&P-6,1<8E+0(:\n(0=#+0E&4\nAG6L\n-\n243655T\n@\nGk@7\nR\n@\n:GPC\nR\nCU8\nA*@CU79GCQ?b@\nL\ndmG6A\na\nCU8\n@\nGP@b7\nR\n@\nL9d#G6A\na\nCU8\nAKEKEdCEGPG\n;\na\n7Z?0@\nG8KM7Z?0CEGPW\n&P-T,6198=+Þ(:Ec(Ð0E#+Þ=&4Y\n2I35R\n:6G8@CU79G%\n&P-T,61Ð-Z\"!\"!#\nf'C=KEK\n\nOAm?\nLV79GμC=@?38\n79GP@\n@\n\nR\nCEGL%@\n79GP@CEG:,A*@CU79GAGL\n89AK=K'C=@bA\"8\n;\nLZCEGPWKEd\nY\n2I35iR\n:G8@CM79Gl\n&P-661o9M(+\nCF?~;\nKUA@\nLl@07~\n&P-661(\nOm:@e?\n7:KUL\"G\no\n@ O\n79G\nR\n:?\nL\nf CE@\nCE@\nY þ35\n;\nAm?\\\n&P-6,1\nÐ\n@;TC\n?3@07O?\nC\nR\n@fI7%7O\n]5\n8T@?i89AGμO\noÆmOPE@\n?]A\na\n5Z\n\n&P-T6,1\no\nU(+\n8>6?f\n@\n;@f\n7N7O\n8@?BÆOÞES@\n?]A\na\n5ZY>=\n;\nLZCM89A@CM79G(?3@\nA*@LZC\nRQR5\n;\n79GPKEdNC=G_@\nGA\na\n?H7\nR\n@\nKU79WCM8eIJA;TCUA9OJK\n?D@\nd±8\n79GP@0ACEGoA;\n5S5æ\n:6CÐIAK\nGk@\n\nAG6LA*;\nO9ÆO]3⁄46\nÆmAEA7\nR 5\nA\"8\n@\n;\nY\nI\n&P-T6461E+0!\n\n:c?\n?\n&P-6,1\no\nU(+\n@078\n8>Nf\n@\n;e@\n\n;\nLZCU8\nA\"<\n@CU7\nGCE@CQ?A\"L#LZCEGPW@7B@\nLmA@0A9OPAm?\nCQ?AK=;\nA\"L9d@\n;\n5ZY\nI\n\nPattern Matching in Joshua: Unification\nApril 2003\n\n&P-T6,1\no\nU(+\nCQ?OPAm?\nLS79GN@\nG79@CU7\nGN@\nA*@CE@/?\n7:KULiG67\n@\na\nA@@\n;~f\nA@@\nG6A\na\n?/7\nR\n@\nKU79WCM8IJA;TCUA9OK\n?A;\n5Z\n?]7VKU7\nGkWeAm?S@\n?0@;:(8T@Q:;\n?A*;\n@\n?]A\na\n5ZY243\nCF?SCQ?A\na\n:,8\n?0@;\n79GPW\n;j8979GLZC=@CU7\nG_@\nA*G\n&P-T6461(cY?=\nACE;?D@\nA*@B?]A@CF?\nR\ndi\n&P-6,1\nÐ\nA;\nG67\n@\\G\n<\n?T?]A;TCEKhd\nIJA*;TCMAGk@?\n\nO#:6@\nI\n;0d\n\nACE;i@\nA@\n?]A*@CQ?\nR\nC\n?\n\n&P-6,1\no\nU(+\nAKF?]7\n?]A*@CQ?\nR\nC\n?\n\n&P-T6,1\nc(ÐcY\n\nApril 2003\nUsing Joshua Within Lisp Code\n8. Using Joshua Within Lisp Code\nib5\n;\nA;\n?\nI\n;\nAK\\OPAm?0CU8\nR\n:6G8@CU79G(?@\nA@Bd7T:8\nA*G¶:?\nC=G(?0CUL\n·CQ?\n\n7L\n5ZY2I35\n?\n5VR\n:G68\n<\n@CU7\nG ?^8\nA*G\nO\nW;\n7:\n\nLg:GL\n;\n\n;\nL\"CU8\nA@CU79G\nR\nA\"8TCEK=CE@C\n?μAGLg:6GPC\nR\nCU8\nA@CU7\nG\nR\nAZ8TCEK=CE@C\n?\nYB2I35\n@0A9OK\n?jO\nKM79f\n?:\naa\nA;TCA@\n5O5\nA\"8\n3eR\n:6G8@CU79G\no\n?j:c?\n5ZYB=\nK\nAm?\n79G(?:6K=@j@\n;\n?\n\n8T@CÐI\nLZCU8T@CM7<\nG6A;0d\nGP@;TC\n?\nR\n;\na\n79;\nL\n@0AC=K\nAGL\nA\na\nK\n?\nY\n=\n;\nLZCM89A@CM79G\ny\nA\"8TCEK=CE@C\n?\no\n\n&P-T6,1\nk!Zo\n!\"(+:Ð&;C\n\n!Z\"+]-\nQR\n@\nA;TWm:\na\nGP@?DA;\n\n&P-661E1E!D7\n\n79;BC\nR 5\nCE@\n;A;TWm:\na\nGP@\nCQ?XAG\n:GPCEG(?0@0AGk@CUA@\nL\nKU7\nWCU8iIJA*;TCMA9OK\n5\"\n\n&P-661ÐkÐ0!\"o9!\"(+:\n&;C\n\n!\"Z+]-\n;\n@F:6;TG(?\n(\n\nY4[\n@\n;Tf CQ?\nCE@;\n@Q:;TG ?\n+Y\n\n&P-T6,1hoeE!D:\n)(o\n!#kE#+0E&\n\n79G(?0@;:,8@?eA\n\n;\nL\"CU8\nA*@CU79G\nIMLm7\n?\nG79@\nGP@\n;`CE@C=Gk@07i@\nLmA@0A9OAJ?\nI\nY\\24365\n\n?FdmGP@0A\n\nCF?OA¶;\nAZL\n;\na\nA\"8T;\n7z@\nA@\n<\n\nAGL?CEGP@07B@\nCF?\nY\n\n&P-T6,1\n)(o9!#k=#+0E&\nOPAm?\n5R\nKUA9IJ79;\nR\n79;XAKEK\n\n;\nL\"CU8\nA@CU79G(?C=G\n°J7Z?\n:(A\nYi2I3\nCQ?\nfI79;>6?\nf\nKEK\nf C=@\nR\n:G8@CM79G(?yKECÐ>\n\n&P-6,1=1E+P)(!)\nAGL\n\n&P-6,1=1E+P)(!\"mP-T!Y\n\n&P-T6,1\n)(o9!#k=#+0E&6)\nc35\n8>?\nf\n@\n;\nA*G\n7O\n]5\n8@\nCQ?\nO#:6C=KE@\nG\n\n&P-6,1\n)(o\n!mPE#+0=&IY\n\n&P-T6,1<8E+0(:E-T++0!\"oH!Z(+:EP!m-T+0o\"+o9!#\n·\n@?d7T:OCEGLj·cCF?\n\nIJA;TCUA9OJK\n?@07\n\n;\nLZCM89A@CM79G%A;TWm:\na\nGP@?\nY\n\nGPC\nR\nCU8\nA@CU7\nG\ny\nA\"8C=KEC=@C\n?\no\n\n&P-T6,1\n-\"\"!Z!#\n\nAm?\nL79G%8\n79Gk@\n@\ncR\nCEGL? AG6L8\nA*K=KQ? 8979GP@C=G:,A@CU79G\n\n&P-T6,1\nc(Ð\n\nGkC\nR\nC\n?z@fI7{°J7Z?\n:,A\n\nA@@\n;TG(?\n\nf\nCEK\n?0CUL\n<\n59RFR5\n8@C=GkW\nA*G#d\nKU7\nWCU8\nIJA;TCMAOJK\n?\nR\n79;\n@\n@\nGP@\nR\n@\nG8TKU7Z?0C=GkW\n\n&P-6,1<8E+0(:\n(0=#+0E&\n\n&P-T6,1\no\nU(+\nc35\n8>?f\n@\n;S@fI7\n\n;\nL\"CU8\nA*@CU79G(?jA;\n5N5æ\n:CIJAK\nGP@\n\nLZC\nRFR5\n;\n<\nCEGPW¶79GPKEdμC=G\n@\nGA\na\n?7\nR\n@\nKU7\nWCU8IJA;TCMAOJK\n?i@\nd8\n79G<\n@0ACEG\nY\nCQ?\nLm7\n?\nG67\n@\nG\nL\n@07\nO\nL#79G\n:6GL\n;\nA\n\n&P-6,1<8E+0(:\n(0=#+0E&\n\nC=@\na\n;\nKEd\n;\n@Q:6;TG(?\n(\n\nC\nR\nCE@\nR\nA*C=KQ?\nY\n\n&P-T6,1<8E+0(:\n(0=m+0E&\ne\n?0@0A9OKECF?\n?@\n?]8\n\nf CE@\nC=G\nf\nCM8\n?:kO?0@CE@Q:@CM79G ?l?\n\n8CM<\nR\nC\nL%O*dl\n&P-6,1\nÐ\n@A>\n5N59RFR5\n8T@\n\n?0@0A9OK=CQ?\n?jA\n\nKUA\"8\n@07\nO\n@\n;\n79f G@07HC\nR\nAB:GkC\nR\nCM89A@CM79GCEGC=@?O7L9d\nR\nA*C=KQ?\nY\n\nUsing Joshua Within Lisp Code\nApril 2003\n\nApril 2003\nAdvanced Features of Joshua Rules\n9. Advanced Features of Joshua Rules\n2I3\nCQ?%?\n8T@CU79G\n?:\naa\nA*;TCF@\n?@\n35_R\n:6K=Ki?cdmGk@A\n\nR\nOP79@\n3gR\n79;TfIA;\nL¶AGL^OPA\"8>JfIA*;\nL8\nAC=GkC=GkW\n;:6K\n?\nY\n\n79@\n3NR\n79;TfIA;\nLSA*GL3OPA\"8>fIA;\nL;:K\n?/AKEKM79f{IJA;TCU7:?>\ndmfI79;\nL? @07~O\nA@@0A\"8\nLi@07B@\n\nA@0<\n@\n;TG(?7\nR\n@\n35lQR\n<\n\nA*;T@B7\nR\n@\n;:6K\n5ZYG\n79@\n3^y\n79;TfIA;\nLVAGL\n\nA\"8>Jf\nA;\nL%;:K\n?3AK=KU79f\n@\n35IH'5\nd<\nfI79;\nLo\n?:\nm\n79;T@\nR\n79K=KU79f\nLO*dAKM79WCU8\n<\nIJA;TCUA9OJK\no\nucZ¥\"q\"§¬*«9¥q9a¡#§Ou\"Uq9#§\ne\n¡#§mx\na\nq±p]¡a\n^pq9rsNr\nwZtUQ¦¬(c)(c)#§¢r\"qY\np]a¡#§irwNrntUQ¦¬(c)(c)#§¢r\"q9at\nU\n¤¥aμu0q9#§] Z¡¢¢Nøu;J\na\ne\na\ne\n¢¤% \"YLKiuZ¦¡aM a%KuZ¦#øjr\"qYr\"q9a\"xx\nucZ¥\"q\"§¬*«9¥q9a¡#§Ou\"UQa¡£$\ne\n¡#§#x\na\nq±p]¡a\n^p]a¡#§irsNr\nwZtUQ¦¬(c)(c)#§¢r\"qY\np]a¡#§irwNrntUQ¦¬(c)(c)#§¢r\"q9at\nU\n¤¥aVpTq9r\nsNrnt\"x\n2I3\nCQ?NCEGLZCM89A@\n?%@\nA@@\nKU79WCM89<EIJA*;TCMA9OK\n?\n7:KULO\nOP7T:6GL\n@07μ@\n\"\n?:\nm\n79;T@ \"\nR\n;o@\nCQ?\n\nA@@\n;TG\nYj\nG\n@\nAm?\nR\nA\nR\n;Tf\nA;\nL\n;:K\n5Z\n@\n?:\nm\n;T@^CQ?e?0C\na\nKhd\n@\n365`R\nA\"8@^f\nCU8\na\nA*@8\nLj@\n79;T;\n?\n\n79G6L\"CEGPW\n\nA*@@\n;TG\nY4243\n:?\nu¢¥\"««%p¡a\nopTq9lYSatVpa¡#§ja1Ntt*x\nf CEKEKI8\nA9:c?\n@\n35BR\nCE;?0@;:6K\nA9O7I\n@07\n\n;TC=Gk@o\na\ne\na\ne\n¢¤% \"YLKVp\n\nlYSat¡a\nM a1KOp\n\nu\n*\na%Nt\n\nA\"8>Jf\nA;\nLV;:6K\n?3@Q:;TG@\nC=;\nFR\n<\n\nA;T@eCEGP@07%Ao?\n;TC\n?i7\nR\nG\n?0@\nL\n&P-661ÐP-\"Oo\n?\nY þ365\nG@\nR\nC=;?0@e\n&P-T,61ÐP-\"|R\nC=G6L?NA\na\nA@08\nCE@89AKEKF?NA8\n79GP@CEG:,A*@CU79G`f\nCU8\n\n;\nR\n79;\na\n?l@\nG\n@\n\n&P-T6,1\nk-Y\nA;TWm:\na\nGP@B@07l@\nCF?j897\nGk@C=G:,A@CU7\nGCF?jA\n\"OPA\"8>fIA;\nLm<U?:\n#\n79;T@ \"\n?0@;:(8T@Q:;\n5Z\n?\n@\n?\n8T@CU7\nG\n\"\n\n79GP@CEG:(A@CM79G\nO ;TWm:\na\nGP@ \"\n\nAW\n\n79Gk@CEG:(A@CM79G6<<O';TWm:\na\nGP@0<\nyQP\nOSRUT\ne2\nY\n2I35\n?:\nm\n79;T@D>\ndmfI79;\nL±C=GAOPA\"8>fIA;\nL±;:K\nOJCEGL?e@\nKU7\nWCU8\n<\nIJA;TCUA9OK\n@07@\nOPA\"8>fIA;\nL\n?:\n#\n79;T@8\n79;T;\n?\n\nG6L\"CEGPW@07HCE@?\næ\n:\n;0d\nY\n2I3\n:?bf CE@\n@\n365HR\nKEKU7\nf'C=GkW;:6K\nAGLLmA@0Ao\nucZ¥\"q\"§¬*«9¥q9a¡#§Ou\"UQa¡£$\ne\n¡#§#x\na\nq±p]¡a\n^p]a¡#§irsNr\nwZtUQ¦¬(c)(c)#§¢r\"qY\np]a¡#§irwNrntUQ¦¬(c)(c)#§¢r\"q9a\nu(c)#§vaμu0q9#§] Z¡¢¢Nøu;J\na\ne\na\ne\n¢¤% \"YLKiuZ¦¡aM a%KuZ¦#øjr\"qYr\"q9a\"x\nu¦¬££¥¥\nmxx\nt\nU\n¤¥aVpTq9r\nsNrnt\"x\nu¢¥\"««%p¡a\nopa¡#§YSatVpa¡#§ja1Ntt*x\n\nAdvanced Features of Joshua Rules\nApril 2003\n2I35eæ\n:\n;0d6o\nu¡¦\n$Opq9YNt#&('(c)#§ a¢a)Z¬¥Z§wmx\nf CEKEKI8\nA9:c?\n@\n35BR\n79KEKM79f CEGPW7:@\n\n:6@To\na\ne\na\ne\n¢¤% \"YLKμuTp\n\nu\n*\nYSatlY±p\n\nu\n*\nYat\"xS¡a\nM a%KzuTp\n\nu\n*\na%NtY%p\n\nu\n*\na1Nt*x\np\n\nYNt\n2I3\nCQ?/OPA\"8>fIA;\nLO?:\nm\n79;T@\na\nATdlO\n:c?\nL@07\n\n;\n7TImCML\nA\n\n:c?0@C\nR\nCU8\nA*@CU79GI\nR\n;iA\nT}PIf\nG^A\nOPA\"8>fIA;\nLi;:K\nAZ8\n?b@\n;\n?:6K=@?7\nR\nCE@?f\n;>\n\nAJ?\nR\nKEKU7\nfn?\no\nucZ¥\"q\"§¬*«9¥q9a¡#§Ou\"UQa¡£$\ne\n¡#§#x\na\nq±p]¡a\n^p]a¡#§irsNr\nwZtUQ¦¬(c)(c)#§¢r\"qY\np]a¡#§irwNrntUQ¦¬(c)(c)#§¢r\"q9a\nu(c)#§va\nu¢¥\"««±pTq9r\nsrnt\nUUðZ¬¦¢# 9q\" T£¡¢# aWVu0q\na¡#§\nu\nuZu¡¦\n$a\nZ¡¢¡a¡¦¥a(c)#§¥ £¡¢Z ar*qYx\nuZu¡¦\n$a\nZ¡¢¡a¡¦¥a(c)#§¥ £¡¢Z ar*q9a\"xxxx\nu¦¬££¥¥\nmxx\nt\nU\n¤¥aVpTq9r\nsNrnt\"x\n\nA\"8>Jf\nA;\nL|;:6K\n?\nAKQ?]7|?:\n#\n79;T@μ@fI7\n79@\n;e>\ndmfI79;\nL?\n1Ðk&X:5CYZ8o[:oT\n\n!#-\nAGL\nk&X:\n7!#-+0E&-Y/2I35\n?\n89AGXO\n:c?\nL\n@078\n79GP@;\n79K3@\nO\nA9ImCM79;μ7\nR\n@\n\n&P-T,61ÐP-\"\n;T;\n<\n?\n\n79GLZC=GkWN@07AjOA\"8>Jf\nA;\nLlA\"8@CM79G\nYOQR\n@\nk&X:\\C\nZ8o]:oT\n\n!#-\n>\nd#f\n;\nLCF?\n\n;\n?\nGk@ @\nG\n@\nIJAK:\n5VR\n79K=KU79f C=GkW¶CE@l?\n7T:6KML\nIJA*KÐ:(A@\n@07\nCE@\n;i\n&P-6,1=1E+\n;\n&P-661E1E(\n\nC\nR\nCE@iCQ?\n\n&P-T6,1=1E(\n\n@\nG±@\nCF?\næ\n:\n;0df CEKEK\nG79@A*@@\na\n@b@07B:?\n;:K\n?@07S?]A*@CQ?\nR\ndl@\n365jæ\n:\n;0d\n\n79@\n<\n;Tf CQ?\n;:K\n?ef'C=KEKO\n:?\nL\nY\n}C\na\nC=KUA;TKEd\n\n@\n35±1Ðk&X:^7!#-+0E&-æ\n:\n?0@CM79G ?38\n79GP@;\n79KF?ef\n@\n;\nOPA\"8>fIA;\nL\næ\n:\n?0@CU79G(?Sf CEKEK/O\nC=GIJ7>\nLμ@7\næ\n:\n;0d@\n:?\n;\nY2435\nL\n59R\nA9:6K=@3IJAK:\nCQ?S@\nA@\nOPA\"8>fIA;\nLV;:K\n?jA;\n:?\nLOAG6L±@\nA@\næ\n:\n?0@CU79G(?f C=KEKO\nA@@\na\n@\nL±C\nR\n@\n35Næ\n:\n;0d_f\nCU8\n89A9:?\nLj@\nCQ?b;:K\n@07DO\nCEGIJ7>\nLAKEKM79f\nL\næ\n:\n?0@CM79G ?@07DO\n:c?\nL\nY\n\nApril 2003\nJustification and Truth Maintenance\n10. Justification and Truth Maintenance\ny\n:G68T@CM79G ?\no\n\n&P-T,61E!\n_\")\n\nE\n\n&P-T,61\n\n-T+0\n\n&P-T,615`Pom)((:+0oe-:E-()6)(&o\n+\nH 5\ndmfI79;\nLko\n\n-T+00=m+0E&\n}Zd\na\nO79KQ?\no\n)(o\n!ZoHM-!\nk-\n-coD),+Þ=&\n1h(& !\nO\n;:@\nTAC=Gk@\nG6AG8\n}Zdk?0@\na\nI\nTi}kIDCQ?A%@0779Kb:c?\nLVO\"dμL\nL:(8T@CÐI\n?Fdk?0@\na\n?j@7l>\n\n@;\nA\"8>l7\nR\nC=Gk@\n;\nL\n\nGL\nG8C\n?A\na\n79GPW±?0@0A@\na\nGk@?CEG%AjL#A@0A9OPAm?\n5ZY\nO\nTi}\nAJ?@fI7\na\nACEG\nR\n:G68T@CU7\nG ?\no\n-\nPO5\n;\nLZCEGPW±AG6L\na\nA*C=Gk@A*C=GkC=GkWN@\n;\nAJ?]7\nGkC=GkWN@\nA@~?:\n#\n79;T@]?/@\n8:;T;\nGP@~?\n@/7\nR\n\n;\nL\"CU<\nA*@CU79G(?bC=G@\nLmA@0A9OAJ?\n-\nTiA*C=Gk@A*C=GkC=GkW@\nKM79WCU8\nAK\n79G(?0CQ?0@\nG680d7\nR\n@\n?\n\n;\nLZCM89A@CM79G ?\n}C=G68\nI\n;0dX7\nR\n@\nG\nL#A@0A9OPAm?\n\n;\nLZCM89A@CM79G ?±KM79WCM89AKEKhdL\n\nGL`7\nG\nAZ8\n79@\n;zAm?OL\n@\n;\n<\na\nCEG\nL3O\"dS;:K\n?\n\n>\n\nCEGPW@;\nA\"8>7\nR\n@\n?\nL\n\nGL\nG8ÞdS;\nKUA@CU7\nG ?\nC\n\n? K\n@?b@\n?Fdk?0@\na\n<\n\nKMA*C=G^CE@?B;\nAJ?]7\nGkC=GkW\n\n;\n?T?\nY\nTi79;\n7I\n;\n\n>G79f CEGPW_@\nL\n\nGL\nG68TC\n?\nR\n79;\nA\"8\n\n;\nLZCU8\nA\"<\n@CU7\nGzK\n@?B@\n?Fdk?0@\na\nf\n;>μ7:@H@\nG ?\n5æ\n:\nG68\n?37\nR\nA*GPW\n?e@7@\n@;:6@\nIJAK:\n?37\nR\n\n;\nL\"CU8\nA@CU79G(?AG6L\na\n7L\"C\nR\ndμ@\nL#A*@AOAm?\n@07l>\n\nCE@j8:6;T;\nGP@jAG6L^8\n79G(?0CQ?0@\nGk@\nY\ni\nA@0A9OPAm?\na\n7LZC\nR\nCM89A@CM79G ?DC=GI7\nKI\nOÞEEEO0Æm¿TE=3⁄4EA\"C¶I=;\na\n7I#CEGPWPI\nR\nA\"8T@?\nYU243\nCF?\na\nAG ?D@\nA@DA\n\n:c?0@C\nR\nCU8\nA*@CU79GOCQ?\nABOCMLZC=;\n8@CU79GAK'K=CEG>\nR\n;\na\nR\nA\"8T@@78\n79G8KÐ:c?0CM79GÆmAPO»Æm¿a\nY\n}C=G68\nA\nTi}\na\nATdgG67\n@%A*K=fIAdP?NO\nG\n?T?]A;0d\n\nC=@?±C=G8KÐ:c?0CM79G\nCF?O7\n\n@CU7\nG6AKjC=G°J7Z?\n:(A\nY\nþ\nCE@\n7:@3A\nTi}\n\n°J7Z?\n:,A%;\n79;\nL?@\n@;:6@\nIAKÐ:\nRB5\nAZ8\n\n;\nLZCU8\nA@CU7\nG\n\nAG6L_8\nA*GPW\n?\n@\nCQ?IJAK:\nC\nR\nG\nfz\n&P-661E+0!\n\n?@0A@\na\nGP@?Am?T?\n;T@bAjL\"C\nRFR5\n;\nGk@@;:6@\nIJAK:\n5ZY\n}\n@\n?\n<\n@CU7\nG\n\"\n;:@\n(r)AKÐ:\n? \"\n\nA*W\n5e2\n;:6@\n<(r)2A*KÐ:\n?]<E}\neU42['Y\ni\nf\nI\n;\n\nf CE@\n7:@HA\nTi}\n\n@\n?FdP?0@\na\nAm?BG7>JG679f K\nLZW\nR\n@\n;\nAm?]79G(?i?:\nm\n79;T@C=GkW\nCE@?O\nKEC\nR\n?\n\nAG6L\nG8\nG7jAfIA;\nG\n?T?\\7\nR\nKU79WCM89AK28\n79GP@;\nA\"LZCU8T@CM79G ?\nYI[\nG68\n@\nLmA@0A9OAJ?\nO\n<\na\n?CEG8979G(?0CQ?0@\nGk@HCE@B;\na\nACEG(?S?]7:GkK\n?T?Dd7:\na\n7LZC\nR\nd_C=@~:G6L\n;\n\n;\n79W;\nA\na\nGk@;\nK\nY\n[\nG\n@\n79@\n;\nAGL\n\nd7:^L#79G\no\n@\n\nATd\nCE@\n;e@\n?\n\nA\"8\n79;B@C\na\n\nGAKE@C\n?~7\nRb3\nA9I#CEGPWVA\nT}\nY\n2I35\n@;\nA\"L\nRFR\nCQ?:\n\n@07d7:\nY\nO'GVC=G68\n79G(?0CQ?0@\nGP@\\L#A@0A9OPAm?\na\nATd%79;\na\nATdG79@O\nA\"8\n\n@0A9OK\nL\n\nGLZC=GkWV7\nGO@\n\n;\n7OJK\na\nY\nQR\nd7:gLm7NfIA*GP@3@7:?\nA\nTi}\n\n°J7Z?\n:(A_8:6;T;\nGk@Khd\n?:\nm\n79;T@?SA_8TKUA9:c?]AK\nTi}{IE·\nTi}PI\n@\nA*@Sd7T:\n89AG\na\nC\n\nC=GP@07odJ7:6;\n\n;\nLZCU8\nA@\nL\n59R\nCEGPCE@CM79G(?\nY~243\nCF?\nTi}\nCF?%OAm?\nL`79G\ni\nA9ImCML\nT8bO KEK\n?0@\n;\no\n?@\n;\n<EIJA*KÐ:\nL\nT}gIcTiAJ?T?]A\"8\n:?T?\n@@]?\n\nG(?0@CE@Q:@\nR32A5\nG67\nKU79W\"d\n\nO';T@C\nR\nCU8TCUAK\n\nGP@\nKEK=CEW\nG8\n·AO\n\nO\nY\nÞY\nT\na\n7dXef\nhg\nTATd\nhij\nek#I\nY\n2I3\nCQ? 8\nA\n\n@\n;DCQ? AG%7I\n;I#C\nfX7\nR3\n79f\n°7\"?\n:,AfI79;>6?f CE@\n@\n·\nT}\nY\n7CEG8KÐ:(L\nA\nT}^CEGOd7:;lA\n#\nK=CU8\nA*@CU79G\n\nd7:g?\n\n8TC\nR\nd_@\n\nA;T@CU8:KUA;\nTi}\na\n7L\nKnd7T:\nA;\n:?0CEGPW\nI=·\nT}\n\n°\nTi}\n\nA*G#d^79@\n;\nI~Am?iAG¶A;TWm:\na\nGP@e@7d7:;\n\n;\nLZCM89A@\nL\nR\nC=GkC=@CU79G\nY\ny\n79;\\CEG(?0@0AG68\no\n\nJustification and Truth Maintenance\nApril 2003\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥¢¥\n\"(c)¥#§¡¢¬#§¥a*q^uaðZ¥£¢¢¥\nZ(c)¥Z§¡¢¬#§T¥\"x\nu0«9¢ Z¦(U«9¢ Z¦a(c)#§T¥\n£¡¢¥a\nZZ¥\"«xx\nib5\n;\n5Z\nAm?iC=G¶@\n365NR\n79KEKM79f CEGPW\nA\na/\nK\n?\n\nf\n:?\n@\n?:\nm\nKEC\nLo·\nTi}\na\n7L\nK\n\nf\nCU8\n;\n<\n?0CUL\n?bC=GCE@? 79f G\n\nA\"8>AW\n5ZY\n\"!#%$'&(\"!*),+-/.&+0!1\nl\n7:|8\nAGC=G68\n79;\n\n;\nA*@\nA*G#d\nT}X7\nR\nd7T:6;o8\n79CM8\nC=Gk@7±d7:;V°J7Z?\n:,A¶A\nm\nKECM89A@CM79G\nY\nO?\nf CE@\nAG#d^79@\n;@0779Kd7:fIAGk@H@07O#:6C=KUL±CEGP@07°J7Z?\n:,AN@\nCQ?CF?S?0@;\nACEW\n@\nR\n79;TfIA*;\nL\n\n?0C=G68\n°J7Z?\n:(A3@0AK>?@7\n;:@\nTiACEGP@\nGAG68\n}ZdP?0@\na\n?ImCMAA3W\nG\n;TCU8\n\n;\n79@7897\nK\n\n@\n:?nd7:±G\nL\n79GPKEdf ;TCE@\n\n;\n79@078\n79K\na\n@\n7L?\nR\n79;B@\n35j2\nTi}NW\nG\n;TCM8\nR\n:G8@CM79G(?\nY\n°J7Z?\n:,A\no\n?\nR\nA\"8TCEKEC=@C\n?\nR\n79;\n?:\nm\n;T@CEGPW\n@\n;TG6AK\nTi}±?Fdk?0@\na\n? A;\nL\"CQ?]8:c?T?\nLjC=G@\n365nm\n1⁄4AØEÆpo\nE4EOÞE]Ak¿]ErqjÆ#A6EÆ1⁄2\nY\nþ\nCE@\nA\nT}\na\n7L\nK °J7Z?\n:(AO89AGUmEATE=3⁄454=1\n\nEN0A41⁄2ÆJ3⁄4EA\n\nAGL_OÞEO3⁄4EAEC=@?3O\nKEC\n59R\n?\nYIþl5±5\n\nKM79;\nA\"8\nR\n@\n?\nA\"8T@CI#CE@C\n?CEG@\n35BR\n79K=KU79f CEGPW±?\n8@CM79G(?\nY\n10.1. Justification\n°J7Z?\n:,A»E1⁄2E3⁄4EEO9EAjA\nR\nA\"8T@\\@073O\nIJA*K=CULlC\nR\nCE@/CQ?~C=G_@\nLmA@0A9OAJ?\nAG6L\nAm?BAS@;:6@\nIJAK:\nR\n\n&P-T6,1\\s+0oTc!Ds\n79;\n&P-T6,1\\s]\n\n-T!Ds*Y\nItOi@;:6@\nIAKÐ:\nR\n\n&P-6,1\\s](&;8Qs\nL\nG79@\n?A\nR\nA\"8T@Sf\n7Z?\nIJAKECUL\"CE@Ud¶CF?N8:6;T;\nGk@Khd\nG79@i>G79f G\nY\nI\nþ\nCE@\n7:@lA\nT}{@\n?Fdk?0@\na\n;\n79;\nL?\n@;:@\nIJA*KÐ:\n?\n\nO#:6@G67\n@@\n;\nAm?]79G ?\nR\n;D@\na\nY\n}\n@\n?\n8@CU79G\n\"\n;:@\n(r)AK:\n? \"\n\nAW\n5e2\n;:@\n<(r)AK:\n?]<=}\neO42A['Y\nþ365\nG\nA\nTi}iCQ?\n\n;\n?\nGP@\n\nAO\nK=C\nI\nL\n\n;\nLZCM89A@CM79G\na\n:c?0@\nA9I\nAUmEAEE3⁄45403⁄4E¿ÆJEE3⁄4E1⁄4A\nYD2I3\nCQ?\na\nAG ?@\n;\na\n:?0@O\nA@jK\nAm?0@79G\n8:6;T;\nGP@Khd^IAK=CULo;\nAm?]79G?:\nm\n79;T@CEGPW@\n\n;\nLZCU8\nA\"<\n@CU7\nG\no\n?@;:@\n?0@0A@Q:?\nYcþ365\nGS\n&P-6,1h+0!\n^\nGP@\n;?\\AiG\nf\n\n;\nL\"CU8\nA@CU79G%CE@\n\n;\n7TImCML\n?\\A\n\n:c?0@C\nR\nCM<\n89A@CM79G\nR\n79;DC=@\nY42I352\nT};\n79;\nL?b@\nCQ?\n\n:c?0@C\nR\nCU8\nA*@CU79G%Am?\n\nA;T@b7\nR\n@\nC=G\nR\n79;\na\nA@CU79GCE@\na\nACEG<\n@0ACEG(?±A9OP7:@l@\nLmA@0A9OAJ?\n\n;\nLZCM89A@CM79G\nY/2\n;:@\nIJA*KÐ:\n?VAGL\n@\nC=;\n\n:?0@C\nR\nCM89A@CM79G\n?0@A*@F:c?\n89AGO8\nAGPW\nAm?DAi;\n?:KE@/7\nR\nG\nfCEG\nR\n;\na\nA@CM79GOAG6LS;\n?:6K=@CEGPW±A\"8@CU79G±@0A9>\nG%O*dl@\n35i2\nT}\n\n79;HAm? A;\n?:KE@7\nR\n\n;\n79W;\nA\na\nA\"8T@CU7\nG\nY\nA:?\n@\n·\nT}\nG(?:;\n?~LmA@0A8\n79G(?0CQ?0@\nG680d\n\nC=@\\L#7\n?\\G79@\\A\"8\n\n@KM79WCU8\nAKEKhd%8\n79Gk@;\nAZL\"CU8\n<\n@079;0d\nR\nA\"8T@?\n\n@\n:c?DC=@D8\nA*GPG79@ O\nKEC\nI\n?0C\na\n:KE@0AG\n7:?0KEd\n\n;\nLZCM89A@CM79G\np\n.\nYEYhY\nt\nAG6L\n\n;\nLZCU8\nA@CU7\nG\np\n\nU\np\n.\nYEYEY\ntt\nI=@\nA@/CQ?\n\nA\n\n;\nL\"CU8\nA@CU79G^8\nAGkG79@ O\n\n&P-T6,1\\s+0oTc!Ds\nAG6L3\n&P-661cs]\n\n-!Ds\nA@\n@\n?]A\na\n@C\na\nI\nY QR\n@\nCQ?\nA\n#\nG(?\n\nG\nR\n@\n?\n?0@A*@\na\nGk@]?\na\n:c?0@O\n;\n@;\nA\"8T@\nLO\"d%;\n<\na\n7I#CEGPWCE@]?\n\n:c?0@C\nR\nCU8\nA*@CU79GOI\n\n&P-T6,1\nc\n\n-+0\nI\nY\nTi}\n\n:c?0@C\nR\nCU8\nA*@CU79G(?j8\nAGμO\n5N5\nCE@\n; AO3⁄4Eo\\3⁄4UEE3⁄4UO9E\n\n;i¿1⁄4o'A1⁄4\"EAkO\nY\n@\n;\na\n?nAO3⁄4Eo\\3⁄4UEE3⁄4UO\nEAGL\n¿1⁄4o A1⁄4\"EAPO%;\n59R5\n;D@7B@\nL\nW;\nR\n;\nAm?]79GPCEGPWS:?\nLjCEGW\nG\n;\nA@C=GkW@\n35n\n:?0@C\nR\nCU8\nA@CU79G\nY\n10.1.1. Primitive Justifications\n=\n;TC\na\nCE@CI\n:?0@C\nR\nCU8\nA@CU7\nG ?A;\n\n;TC\na\nC=@CI\nf C=@\n;\n?\n\n8T@i@7V@\n;\nAJ?]7\nGkC=GkW\n\n;\n?T?\nY\nI\n2I35\n?Fdk?0@\na\n;\na\na\nO\n;?eG7\nR\n:6;T@\n;\n5T\n\nKUAGA*@CU79G\nY\nI\n=\n;TC\na\nCE@CI\n:c?@C\nR\nCU8\nA@CU79G(?gA;\n:?:(AK=KEd\n?\n\n8TC\nR\nC\nLO*dN@\n\n;\n79W;\nA\naa\n;j7\n;BO\"dO?Fdk?0@\na\nL\n59R\nA9:6K=@?DC=GoAB\n&P-T6,1h+Þ!\n^\n:?\nL7:@?0CUL\nA\n;:6K\n5ZY\nCF?H@Md\n\nR\n\n:?0@C\nR\nCM89A@CM79Gof\nCM8\nL\n\nGL?B79GoG79@\nCEGPW\n\n@\\CE@?\nK\nR\nCF?H@\nOPAm?0CM8\na/\n79G\nGk@7\nR\n@\nO\nK=C\n59R\n?0@;:,8T@Q:6;\n5\"Y\n\nApril 2003\nJustification and Truth Maintenance\n2I35\n;\nA;\n@\n;\n@Ud\n\n?7\nR\n\n;TC\na\nCE@CI\n5n\n:?0@C\nR\nCU8\nA@CU7\nGco\n-\nu'AAEo AEE3⁄4E1⁄4APA\n-\nvUOÞE]o\\3⁄4EAEA\n-\nw1⁄4AkE\nu'AAEo A4E=3⁄4E1⁄4APA\n\n:?0@C\nR\nd\n\n;\nLZCU8\nA@CU7\nG ?Sf\n7Z?\n;\n@;\nAZ8T@CM79Gzd7:A;\nf'C=KEK=CEGPW¶@07VK\nA9I\n@07V@\nTi}\nY\nvUOÞE]oD3⁄4EA]EA\n\n:?0@C\nR\nd\n\n;\nLZCM89A@CM79G(?Bf\n7\"?\n;\n@;\nAZ8T@CM79G±d7:zfIAGk@D@078\n79Gk@;\n79K\nd7:;?\nK\nR0\n;\nA@\n;\n@\nA*GK\nA9I\n@\na\n@7B@\n35e2\nTi}\nY\nOn?f\n?\nAK=K3?\n55Z\nf\nGe@\n35_2\nT}\nR\nCEGL?A_KU7\nWCU8\nA*KH8\n79Gk@;\nAZL\"CU8T@CU7\nG{@\nA@S8\nA*G¶O\n@;\nA\"8\nL\nOPA\"8>@07±Aμ?0CEGPWK\nAJ?T?:\na\n@CM79G\n\nCE@;\n@;\nA\"8@]?i@\nA*@jAm?T?:\na\n@CU79GeA9:6@7\na\nA*@CU8\nA*K=KEd\nYQR\n@\nCEG<\nG ?0CF?0@\nGP@\n\n;\nLZCM89A@CM79GL\n\nGL?j7\nGkKhd^79G\n\n;\na\nCQ?\n?\n\n79;C\nR\n@\n;\nCQ?\na\n79;\n@\nAG79G\nAm?]<\n?:\na\n@CU79GCEG@\n?:\nm\n;T@\n\n@\n·\nTi}{?0C=WG6AKQ?AO8\n79GLZCE@CU79G\nAG6LO;\n5æ\n:\n?0@?Hd7T:e@07@0A9>\n89A;\nR\n79;T;\n8T@CEGPWV@\nCEG8\n79G ?0CF?0@\nG8Þd\nY\nA@ :c?:,AKEKhd\na\nAG(?\\:?0CEGPWV@\n35ii\nOm:WW\n;\n\n;\n7<\nW;\nA\na\n?8\nAG\nAG6L\"K\n@\n79GLZCE@CU79G@07±Lm7±7\n@\n;Tf CQ?\n5ZY\ny\n79;\na\n79;\n79G\n8979GLZC=@CU7\nG6<\nAGLZKEC=GkW(o\n}\n@\n?\n8@CU79G\n\"\n\nG6L\"CE@CM79G ? \"\nCEG 1o»1⁄4\"1⁄2=3⁄4E¿A~AA1⁄4oo/1⁄4AAA3⁄4EAEAxvUO01⁄4]C6OÞÆmoo\\3⁄4EA*COAA1⁄4AkAEEO]E¿EA\nY\nw/1⁄4AkE\n\n:c?0@C\nR\nCM89A@CM79G(?A;\n5B\n:?0@C\nR\nCM89A@CM79G ?i@\nA@iL#79G\no\n@3;\nAKEKEdz89A9:?\n@\n\n;\nLZCU8\nA@CU7\nG\n@07lO\nO\nK=C\nI\nL\nY4243\nA*@CQ?\n\nu¢¥\"««%pTq9r\nsZtUMðZ¬¦¢#\nq\" £¡¢Z aUFaa¥\"x\n\n:@?\n@\n\n;\nLZCM89A@CM79G\nC=G\n@\nLmA@QOAJ?\n5\"\nO#:6@\n>\n\n?\nC=@?\n@;:6@\nIJA*KÐ:\nA@\n\n&P-T6,1\\s] &;8(sY\nI\nl\n7:\na\nCEW\n@\\fIAGk@/@07L#7@\nCQ?/O\nA9:c?\nd7:zA;\n:?0CEGPW\n&P-6,1h+0!\n^\n@07e89AG79GkCM89AK=CA@\n@\n\n;\nL\"CU8\nA*@CU79G\n\nO#:6@Id7:VL#79G\no\n@Id\n@fIAGk@@\n?Fdk?0@\na\n@07DO\nK=C\nI\nCE@\nY\nI\nþ365\nG\n@\n·\nTi}iCF?±WCI\nG|A\n\n:?0@C\nR\nCM89A@CM79G\nR\n79;zA\n\n;\nLZCM89A@CM79G\nC=G\n@\nL#A@0A9OPAm?\n5Z\n@\n·\nT}SO#:6C=KUL?AB¿1⁄2ÆEAE~8\n79G(?0CQ?0@C=GkWl7\nR\n@\n\n;\nLZCM89A@CM79G%AG6LjCE@]?D?:\nm\n;T@\nY\nQR\nAG\nf\n\n;\nL\"CU8\nA*@CU79GoCQ?DO\nC=GkWoA\"LmL\nLO\"dOA\n&P-T,61E+0!\n\n7:@?0CUL\nA;:K\n79GP@\n@HAGLNC\nR\nd7:z?:\n#\nKEdlG7\n\nK=CU8TCE@\n\n:?0@C\nR\nCU8\nA@CU79G\n\n@\nL\n59R\nA9:6K=@\n\n:?0@C\nR\nCM89A@CM79GVCF? AOÞE]oD3⁄4EA]E\nYA2\n7?\n@\nCQ?\n\nGAOJK\n@\n@;\nA\"8TCEGPW7\nR2\nTi}7\n\n;\nA@CM79G(?\nR\n79;D@\nG\n@\nA\na/\nK\n?\nY\na¡a\"«9¥i÷Z¦¤¬¡\nU\n§T¡£# avμu\nU\nwZ(c)¥\"q¢#§¡£# Tav\"x\nUa\n1(c)¥#§¡¢# Ta¦\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥¢¥\n\"(c)¥#§¡¢¬#§¥a*q^uaðZ¥£¢¢¥\nZ(c)¥Z§¡¢¬#§T¥\"x\nu0«9¢\nZ¦,U«9¢\nZ¦a(c)#§¥\nJ £¡¢¥a\nZ\nZ¥*«xx\n\nf\n&P-661E+0!\n\nA\nR\nAZ8T@bA9OP7:@@\n@\na\n;\nA*@F:6;\nR\n?]7\na\n7O\n]5\n8T@\nY424365\n@;\nAZ8\n?\n79f? @\nA@\n@\nG\nf\n\n;\nLZCM89A@CM79GO\"dL\n59R\nA9:6K=@CF?O\nCEGPW\n?0@AOJKECF?\nLjC=G@\nLmA@0A9OAJ?\nAm?A\n\n;\na\nCQ?\n5ZY\n\nJustification and Truth Maintenance\nApril 2003\n?\n\n8TC\nR\nd\nA\n\n:?0@C\nR\nCM89A@CM79G\nd7T:6;?\nK\nRÞ\n:?\n@\n>\ndmfI79;\nL\n\n-+0Ð0E#+Þ=&\nf C=@\nCEG\nA\n\n&P-T6,1h+Þ!\n^\n?@0A@\na\nGP@\nR\n79K=KU79f\nL3O\"dS@\n:?0@C\nR\nCU8\nA@CU7\nG_IUA?cd\na\nOP79K\n79;HA3KECF?0@0I\nY4QR\n@\n365n\n:c?0@CM<\nR\nCM89A@CM79GoCQ?eA±?Fd\na\nOP79K\n\nA\n\n;TC\na\nC=@CI\n5/\n:?0@C\nR\nCU8\nA@CU7\nG^CF?DOm:CEKE@Df\n7Z?\na\nG\na\n79GkCM8iCF?H@\n?Fd\na\n<\nOP79K\nY\nk-\n-coD),+Þ=&\nCQ?/@\n?Fd\na\nOP79K\nR\n;B@\n\n;TC\na\nCE@CÐI\n:c?0@C\nR\nCU8\nA*@CU79GOAm?T?:\na\n@CU79G\nY\n)(o\n!ZoHM-!\nCQ?@\n?Fd\na\nOP79K\nR\n79;S@\n\n;TC\na\nCE@CÐI\n5~\n:c?0@C\nR\nCU8\nA*@CU79G\n\n;\na\nCF?\n5Z\nAGL\n1h(& !\nCF?@\n?Fd\na\nO79K\nR\n79;\n@\n\n;TC\na\nCE@CÐI\n5n\n:?0@C\nR\nCU8\nA@CU79GG79G\n5ZY\n10.1.2. Compound Justifications\n2I35\n;\nA;\n?\nI\n;\nA*K2@Ud\n\n?~7\nR\na\n7T:6GL\n\n:c?0@C\nR\nCU8\nA*@CU79G\nYi5\n;\nf\nL\nAK2f'C=@\n@\na\n7Z?0@OPA\"<\n?0CU8D@Ud\n\n5Z\nG6A\na\nKhd\n\nOPEOE¿TEE3⁄4E1⁄4A\nY(þl5\nL\"CQ?]8:c?T? 79@\n;?bC=G@\n365nm\n1⁄4AØEÆpo\nE4EOÞE]Ak¿]ErqjÆ#A6EÆ1⁄2\nY\nþ365\nGV°J7\"?\n:,Ae\n&P-6,1h+0!\n^\n?D@\nL#A*@AOAm?\nAG\nf\n\n;\nL\"CU8\nA*@CU79G_C=G\nR5\n;T;\nL\nR\n;\na\nA\nR\n79;TfIA;\nL\nACEGPCEGPWe;:K\n5Z\n@\nL\n59R\nA:KE@\n\n:c?0@C\nR\nCU8\nA*@CU79GgCQ?OkE]O6E¿TE=3⁄4E1⁄4A\n\n@\nCQ?±?0@A*@\n?@\nA@S@\n35OR\nA\"8T@L\n<\n\nGL?B79Go@\n355T5\n8:@CEGPWO;:K\nAG6L@\n\n;\nLZCM89A@CM79G(?H@\nA@D@;TC=WW\n;\nLCE@\nY\n?\n\n;\nLZCU8\nA\"<\n@CU7\nG ?\na\nATd^C=G@Q:;TGzO\nL\nL:(8T@CM79G ?\nR\n;\na\n@\n;;:K\n?\n\n:KE@C\na\nA@\nKEdo@\nACEG\nR\nL\n\nG<\nL\nG8TC\n?K\nA\"L?@07\n\n;TC\na\nC=@CI\n?:\n#\n79;T@I\n\n;\na\nCQ?\n? AG6L\n=79;HAm?T?:\na\n@CM79G ?]I\nY\n°J7Z?\n:,Aj89AG\n@;\nA\"8@@\n\n;TC\na\nCE@CI\nAG6L897\na\n7:6GL\n\n:?0@C\nR\nCU8\nA@CU7\nG\nR\n79;HAiL#A@0A9OPAm?\n\n;\nLZCU8\nA\"<\n@CU7\nGeA*GL_CEGP@\n;\n\n;\n@3C=@\nR\n79;id7T:\nY\n}\n@\n?\n8T@CM79G\n\"\ne4\n\nKUACEGPCEGPW\n=\n;\n79W;\nA\na\nKEC\nR\n? \"\n\nAW\neI\n\nKUACEGPCEGPWP<\n=\n;\n79W;\nA\na\n<\nKEC\nR\n?]<=}\neO42A['Y\n10.1.3. Database Predications Can Have Multiple Justifications\ne\nI\n;0d@C\na\nd7T:IM79;B@\n\n;\n79W;\nA\na\nI\n\n&P-T6461E+0!\n\nA?0@A*@\na\nGk@\n\nCE@ CF?/WCI\nG_AiG\nf\n\n:c?0@C\nR\nCM<\n89A@CM79G\nY\n}P7AKE@\n7:W\n@\n;\nCQ?379GPKEd_79G\nI\n;?0CU79G7\nR\n@\n?0@0A@\na\nGk@HC=Gz@\nLmA@0A9OPAm?\n5Z\nCE@\n89AG\nA9I\na\n:KE@C\n\nK\n5%\n:c?0@C\nR\nCM89A@CM79G(?\nYHy\n79;\nA\na\nK\n5ZB5\nA;TK=C\n;f\nA\"L#L\nLX@\n\n;\nLZCU8\nA@CU7\nG\n\n¢¥\nZ(c)¥#§T¡¢¬#§¥\n<\n\"qB¦¬#§9q9¡£¥BoZ¥Z§wZa¤¢t\n@07B@\nLmA@0A9OPAm?\nAJ?A*GlÆ#AATEo A4E=3⁄4E1⁄4A\nYc\nfXf\nAZL#LA\n\n&P-T6,1h+Þ!\n^\n?0@A*@\na\nGk@@\nA@@;TC=WW\n;?b@\n365HR\n;Tf\nA;\nLj;:K\nZ¥¢¥#§] a¥a¢¥\nZ(c)\"Y\nY\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥£a ¢# aa\"qoua\nðZ¥£¢£a\n¢# Ta\"x^u«9¢\nZ¦(U«9¢\nZ¦a(c)#§¥\nT£¡¢¥a Z\nZ¥\"«xx\nu¢¥\"««%p£a\nJ ¢# aa\"qS¦¬#§9q9¡£¥ Z¥\"«\n¢# avt*x\nucZ¥\"q\"§¬*«9¥Z¥¢¥#§ Ta¥a¢¥ Z(c)\"Y^u*Uq9#§\ne\n¡#§mx\n9q±p]£a\nT¢# aa\"qSra\nðZ¥£¢i Z¥\"«9¢Z avt\n¢¤¥aVp¢¥\n\"(c)¥#§¡¢¬#§¥a*qSraðZ¥£¢ioZ¥#§wZa¤¢t\"x\nþ365\nG_@\nCQ?~;:K\n5iR\nC=;\n?\n\nCE@/CEG\nR5\n;?!\n¢¥\n\"(c)¥#§¡¢¬#§¥a*q¦¬#§9q\n¡£¥io\"¥#§wZa¤¢\nY\n}C=G68\n@\nCQ?\n\n;\nLZCM<\n89A@CM79G%CQ?/A*K=;\nA\"L9dCEG%@\nL#A@0A9OPAm?\n5Z\n@\n?Fdk?0@\na\nL#7\n?G79@;\nCEG(?\n;T@CE@\nYhP\nA@\n;\n\nCE@A\"L#L?\\A\nG\nf\n\n:?0@C\nR\nCU8\nA@CU7\nG\nR\n79;DCE@@\nA@\na\nGP@CU79G(?b@\n;:K\nZ¥¢¥#§ a¥a¢¥\n\"(c)\"Y\nYc\n79@\n5Zc3\n79f\nI\n;\n\n@\nA@\n@\n\"\n?:\n#\n79;T@ \"\nCQ?\\AKEfIATdk?@\n8:6;T;\nGk@\n\n:c?0@C\nR\nCM89A@CM79G\n\n@\n?cdk?0@\na\nGkKhd:?\n?@\nG\nf\n\n:?]<\n@C\nR\nCU8\nA@CU7\nGVC\nR\n@\n8:;T;\nGP@/79G\n53R\n;?]7\na\n;\nAJ?]7\nG%O\na\n?~7TO6?]79K\n@\n5ZYIy\n79;\nA\na/\nK\n5Z\nC\nR\nd7T:\n;\na\n7I\n@\n8:6;T;\nGk@\n\n:?0@C\nR\nCU8\nA@CU7\nG\n\n@\nG\n@\n\n:?0@C\nR\nCU8\nA@CU79G\n\nC\nR\nAGmd\n\nO\na\n?3@\n\n;\nLZCM<\n\nApril 2003\nJustification and Truth Maintenance\n89A@CM79G\no\n?~?:\nm\n79;T@\nYI24365\n\n;\nLZCM89A@CM79G\no\n? @;:@\nIJAK:\nLm7\n?G79@O\na\n\n&P-661csc](&;8(s\n:6GP@C=K\nI\n;0d{79G\nR\nC=@?\n\n:?0@C\nR\nCU8\nA@CU79G(?\nAm?O\nG`;\na\n7I\nL\nYy\n79;\na\n;\n79G`;\na\n7I#C=GkW`A\n\n;\nL\"CU8\nA@CU79G\no\n?D?:\nm\n79;T@To\n}\n@\n?\n8T@CU7\nG\n\"\nPU5\n@;\nA\"8@C=GkW\n=\n;\nL\"CU8\nA*@CU79G(?jf C=@\n\n&-6,1\n\n-+0Ð \"\n\nA*W\n5yPO5\n@;\nA\"8T@CEGPWP<\n=\n;\nLZCM89A@CM79G(?]<f CE@\n<\n°\n[\n}\ni\nOo\n\n°\n\n}\n2Qy]l\n<E}\neO42A[ /Y\n10.2. Explaining Program Beliefs\n2I35OR\n:6G8T@CU79Gμ\n&P-T6,1h!Y_\")\n\n=\n\n;\n7I#CUL\n?C=G\nR\n79;\na\nA@CM79GXA9OP7T:6@@\n35j\n:c?0@C\nR\nCU8\nA*@CU79G(IQ?]I\nR\n;OA\nLmA@0A9OPAm?\n\n;\nLZCU8\nA@CU7\nG\nY\n\n&P-6,1h!\n_Z)\n\nE\nCF?@\n35OR\n;Tf\nA;\nL8\nAC=GkC=GkW{L*:,AKB@7l\n&P-T,61ÐP-\"\nGk@C=G:,A@CU7\nG\nR\n:G68T@CU7\nG ?\n?:,8\nAm?\n\n&P-6615`Pom)((:7!\"oTZ:Ðo9!#-\n\n+]-\nAGL\n\n&P-661)(o\nE(+:\n7!\"oz:o\n!#-\n\n+]-\n@\nA@±@;\nAZ8\nOA\"8>JfIA*;\nLX8\nACEGPCEGPW\n?:\nm\n79;T@\nR\n79;A?]A@CQ?\nR\nC\nL\næ\n:\n;0d\nY\nI\n2I35\n·\nT}¶L#7\n?3>\n\n?]7\na\nG79@\n?SA9OP7T:6@@\n;\n?:KE@?S7\nR\nOA\"8>Jf\nA;\nL^8\nACEGPCEGPW\n\nGA\na\nKhdμ@\nR\nA\"8T@?bC=G@\nL#A*@AOAm?\n5BR\n;\na\nf\nCU8\nd7:\nAI\nACEG\nL\nY\nI\nib5\n;\n5mo\n?BA\nR\n79;TfIA;\nLl;:6K\n5Z\n«9\noZ¥a Z¥\n¥oZ¡\"«9a¦¢\nwm«9¥\n\n@07\nK\n\n:?BL\nL*:,8\nf\na\nCEW\n@\n\n;\n\n;TKEd\nGPWPA*W\nCEGoA897T:6;T@KhdNKU7TI\nA\nRQR\nACE;\nYU[\nG\nR\n@\n365iR\nA\"8@]?D@\nA*@@;TCEWW\n;?\\@\nCF?D;:6K\n5Z\n@\n\n;\nLZCM<\n89A@CM79G\np\n¦a¡¢¢¡£¤¥\n\nyyyQt\n\nCQ? L\nL:(8\nLO\"d@\n35BR\n79;TfIA;\nLj;:6K\n¥av¡v¥\n\nY\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥% ¦a¥av¡v¥\n¶u0«\n¡\nwN¤¬¦a¡amx^u0«\n¢\nZ¦(U«\n¢\nZ¦a(c)Z§¥\n£¡¢¥a\n\"\nZ¥\"«xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥% ¦a¡¢¢¡£¤¥\n¶u«9¡\nw¤¬¦a¡a\nmx^u«9¢\nZ¦(U«9¢\nZ¦a(c)#§¥\nT£¡¢¥a Z\nZ¥\"«xx\nucZ¥\"q\"§¬*«9¥¥av¡v¥\nu\"Uq9Z§\ne\n¡#§#x\n9q±p ¦a¥av¡v¥\n%«9¡\nw¤¬¦a¡a\nZt\n¢¤¥aVp\n¦a¡¢¢¡£¤¥\n±«\n¡\nwN¤¬¦a¡aZt\"x\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥aa*«9¥a\"«9¡w¶u0«\n¡\nwmxou0«9¢\nZ¦,U«9¢\nZ¦a(c)#§¥\nJ £¡¢¥a\nZ\nZ¥*«xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥¬¢Z§¡a\n$¦μu0«9¡\nwNv¥a¢\"«9¥\nZ¡a\"x^u0«\n¢\nZ¦(U«\n¢\nZ¦a(c)Z§¥\n£¡¢¥a\n\"\nZ¥\"«xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥% aa(c)#§\ns ] ¢\nwu0«9¡\nwv¥a¢*«9¥\nZ¡a*x^u0«9¢ Z¦(U«9¢ Z¦a(c)#§T¥\n£¡¢¥a\nZZ¥\"«xx\nucZ¥\"q\" a¥a(c)#§¥ £¡¢¥vZa¢a¡££¥(c)¢a¡¦a*«9\noZ¥#§Ou0«9¡\nwNv¥a¢\"«9¥\nZ¡a\"x\nu0«9¢\n\"¦(U«9¢\n\"¦a(c)#§¥ £¡¢¥a\nZ\n\"¥\"«xx\nucZ¥\"q9¬a£¬#§T¢\"«TwZa¦¥¢¬(c)μu0x\nu£\"«9¥¡#§9x\nu¢¥\"««±p¡a^paa\"«9¥a\"«\n¡\nw\na\n¦\"«TZ¥t\np¬¢#§¡a\n$¦\na\n¦*«TZ¥\nU\n§ ¦¢¡at\np\naa(c)#§\nsJ ¢\nw\na\n¦\"«Z¥\nU\n§ ¦¢¡at\np\n¦a¥av¡v¥\n\na\n¦\"«TZ¥\na\n¡#§0$tt\"xx\nu£¬#§¢*«TwZa¦¥¢¬(c)\"x\n\nJustification and Truth Maintenance\nApril 2003\nucZ¥\"q\"§¬*«9¥«9oZ¥a\nZ¥ ¥\noZ¡*«9a¦¢\nw#«9¥zu\"Uq9#§\ne\n¡Z§mx\n9q±p]¡a\n^p]aa\"«9¥a\"«9¡\nwr\"«9¡\nwZt\np]¬¢#§¡a\n$¦r*«9¡\nwrv¥a¢*«9¥\nZ¡at\np aa(c)#§T\ns T¢\nwNr\"«\n¡\nwNrv¥a¢\"«\n¥\nZ¡at\np ¦a¡¢¢¡£¤¥Nr\"«9¡wNr¤¬¦a¡aZt\nuc 9qq9¥Z§¥a¢aa\nðZ¥£¢¦rv¥a¢\"«9¥ Z¡ar¤¬¦a¡a\nmx9t\n¢¤¥aVpvZa¢a¡££¥(c)¢a¡¦a*«9\noZ¥#§jr\"«9¡\nwNrv¥a¢\"«9¥\n\"¡at\"x\n\nf\nf\nAm?>f\nA@3@\n?Fdk?0@\na\n>G79f?SA9OP7:@iAZ8\n\n@AOJK\nKM7I\n;%8\nAG6L\"CUL#A*@\n?\n\nAG6Lof\nd\nY\n\n&P-T6,1h!Y_\")\n\n=\na\n:?0@HO\nWCI\nG@\nA\"8@F:(AK\\L#A@0A9OPAm?\n\n;\nLZCU8\nA@CU7\nGC=G\n79;\nL\n;@07\n5T\n@;\nAZ8T@\nCE@?\n\n:?0@C\nR\nCM89A@CM79G\nY/[\nG\n?0C\na\nK\nfIATdg@7Lm7μ@\nCF?%CQ?%@7^:?\n@\n79GI\nGPC\nG68\n5zR\n:6G8T@CU79G\n\n&P-T6,1hoeJ)(:Ð&mP!\"o\n:=6+];CP-!D:\n),o9!#k=m+0E&-Y\nuc Z¡(c)aoZ¥#§a\n\"¡¢¡a¡¦¥a(c)#§T¥\n£¡¢# a¦VpvZa¢a¡££¥(c)¢a¡¦a*«9\noZ¥#§jr\nsNrwZt#&Q'¥\nsZ(c)\"«9¡Z a\"x\np{\n\nß\na\nU\na\nu33\n\n.U\naua\n+\n|\n\n*Oa\n\n+ß\n\nU\n*a\n\nU\nutN ¦¢#§T¬¥\na\n¢\ne\n¡¦Z¥Z§ oZ¥\n%q\"§\nV§¬\"«9¥\n+\n\n|\na\na\n\nßa\n\n|\nu\n+\na\nU}+\n\np\n\n+\na\n+\nu\nß}^a\n\n+ß\ntN ¦¢Z§¬¥\na\n¢N ¦¡U\n.\n*\n\naa\n\np\nU*\nu\n~\n\na\n\n+ß\n\nU\n*Ja\n\nU\nut% ¦¢#§¬¥\na\n¢N ¦¡U\n.\n*\n\naa\n\np\na\na\n.\n*\n,\na]aaU}oa\n\n+ß\n\nU\n*a\n\nU\nutN ¦¢Z§¬¥\na\n¢N ¦¡U\n.\n*\n\naa\n\np\na\nau\nUU\nu3-\n\nßOa\n\n+ß\n\na\nu\n*\n~t% ¦¢#§¬¥\na\n¢\ne\n¡¦iZ¥#§ o\"¥\n±q\"§T\nO§¬*«9¥1\n{\nu{\n\nß\np\na\na\n\n{u{\n\nßVa\n\n+ß\n\na\nu\n*\n~t% ¦¢#§¬¥\na\n¢% ¦¡U\n.*\n\naa\n\n&P-T6,1h!Y_\")\n\n=^5\n@;\nA\"8@?/AGLLZCF?\n\nKUATdk? @\nACEG±7\nR\n?:\nm\n79;T@@\n;\n7:W\n3%R\n79;TfIA;\nL;:6K\n? @07\n\n;TC\na\nC=@CI\n?:\n#\n79;T@I\n\n;\na\nCQ?\n?AG6LAm?T?:\na/\n@CU7\nG ?]I\n@07\nW\n@\n;Df CE@\n@\nCE;D@;:6@\nIJAK:\n?\nY\n7_?\n@\n?]A\na\nCEG\nR\n79;\na\nA*@CU79G¶CEG¶W;\nA\n\n3¶R\n;\na\n\n:c?\n@\n365%R\n:G68T@CM79Go\n&P-T,615`Pom)((:+0oe-:\n-()6),&o9+TY\nI\nCF?\nCF?\nAG6AKM79WP7:?\n@07\n@\nR\n:6G8@CU79G\n\n&P-6,1t`kom)((:7!\"oz:o\n!#-\n\n+-\n@\nA@\nW;\nA\n\n?OPA\"8>fIA;\nL?:\n#\n79;T@\nY\nI\ny\nC=Wm:6;\nW;\nA\n\n<c?:\nm\n;T@:?\n?~@\n\n;\nI#CM7:c?\nA\na\nK\nA*GLV?\nfn?D@\nW;\nA\n\nR\n@\n:c?0@CM<\nR\nCM89A@CM79G\nY\ny\nC=Wm:6;\ne\nY\n}PA\na/\nK\nR';\nA\n\nR2\nTi}}J:\nm\n79;T@\n\nApril 2003\nJustification and Truth Maintenance\n}C=G68\nAKEKn7O\n]5\n8T@?\\C=GV@\nW;\nA\n\nA*;\nCEGV@\nLmA@0A9OPAm?\n5Z\nAKEKnA;\nLZ;\nAf GOC=G(?0CUL\n;\n8T@0AGkWK\n?\nY\n2I35\n@07\n\nR\n@\nW;\nA\n\n?\n79f?j@\nLmA@0A9OAJ?\n\n;\nL\"CU8\nA*@CU79Gf\n7Z?\n5B\n:?0@C\nR\nCU8\nA@CU7\nG¶CF?O\nC=GkW\n@;\nA\"8\nL\nY24365\nW;\nA\n\n@;\nA\"8\n?@\n35S\n:?0@C\nR\nCM89A@CM79G@\n;\n7:W\n;:K\n?@07_:G6L\n;TKEdmC=GkW\n\n;\na\nCF?\n?\nY\n2I35\nA;T;\n79f?\na\n7I\n:\n\nR\n;\na\n@\n\n;TC\na\nC=@CI\n?:\n#\n79;T@@\n;\n7:W\nCEGP@\n;\na\nLZCMA@\n?:\n#\n79;T@@07\n@\n7O\n]5\n8@O\nCEGPW\n\nKMACEG\nL\nY\n°\":c?0@C\nR\nd#CEGPW^AGL\n5T\n\nKUACEGPCEGPW_@\n;\nAm?]79G(?~:G6L\n;TKEdmC=GkWo8:;T;\nGP@\\>JG79f K\nL\"W\nA;\nG679@?0@0A@CM8\nA\"8@CÐI#CE@C\n?\n\n?0C=G68\n@\n365OR\nKU79f\nR\nG\nfiC=G\nR\n79;\na\nA@CU7\nG\na\nA9>\n?@\nL#A@0A9OPAm?\n?:PO\n]5\n8T@@07^8\n79G<\n?0@0AGk@\na\n7LZC\nR\nCM89A@CM79G\nY424365\nG\n@/?\n8T@CM79GO?:6;I\ndP?b@\n;\n79K\n\nKUATd\nLO*dS@\nTi}CEG>\n\nC=GkW\n@\n>G79f K\nL\"W\nOAm?\n:\n\nL#A@\nLSAGLiKU79WCM89AKEKhd897\nG ?0CF?0@\nGP@\nY\n}\n@\n?\n8T@CU7\nG\n\"\nPO5\nI#CQ?0CEGPW\n=\n;\n7<\nW;\nA\na\nKEC\n59R\n? \"\n\nAW\n5PO5\nI#CQ?0C=GkWP<\n=\n;\n79W;\nA\na\n<\nKEC\n59R\n?]<E}\neU42['Y\n10.3. Revising Program Beliefs\n7l;\nAm?]79G\n59RQR5\n8T@CI\nKhd\n\nA\n\n;\n79W;\nA\naya\n:?0@HO\nA9OK\n@07;\nImCF?\nO\nKEC\n59R\n?3f\nGG\nf\n>JG67\nf'KM<\nLZW\n79GP@;\nA\"LZCM8@?@\na\nY\nO\n79Gk@;\nAZL\"CU8T@CU7\nG¶897\na\n?iA9OP7T:6@Bf\nG¶AIJAKECML\n\n:c?0@C\nR\nCU8\nA*@CU79G\nR\n79;\nA\"898\n\n@CEGPWzAG\nf|O\nK=C\n59R\n8979G\nR\nKECU8T@?ef'C=@\n@\n35D\n:c?0@C\nR\nCM89A@CM79G\nR\n79;jO\nK=C\nI#CEGPWzAGAK=;\nA\"L9d\n<\nCQ?0@C=GkW\n\n;\nL\"CU8\nA*@CU79G\nY\nOX@;:6@\nIJAK:\nR\n\n&P-T6,1\\s\"&(+0oPkE\"+0&oTZs\nCQ? @\na/\n79;\nA;TCEKhdlAm?T?0CEWG\nL\n@07e@\nG\nf\n\n;\nLZCM89A@CM79G\n\n@\nCQ?/AK\n;T@? @\nT}l@078979;T;\n8@@\n79GP@;\nA\"LZCM8@CM79G\nY\n}CEG8\n79G<\n@;\nA\"LZCM8@07\n;0d\nR\nA\"8@?B89AGPG67\n@/O\n?0C\na\n:KE@A*G\n7:?0KEdVA\"898\n\n@\nL\n\n79G\nR\n@\na\na\n:?0@O\n;\n@;\nA\"8@\nL\nO\"d\nA9I#CEGPWzC=@?\n\n:c?0@C\nR\nCU8\nA*@CU79G(IQ?]I\\;\na\n7I\nLzI\n\n&P-T6,1\nc\n\n-+0\nI\nY224365%2\nT}o>\n\n?i8:6;T;\nGP@\nCEG\nR\n;\na\nA@CM79G{8979G(?0CQ?0@\nGk@3f'C=@\nG\nf\nCEG\nR\n79;\na\nA*@CU79GO\"dAK=KU79f CEGPW@\n:\n\nLmA@C=GkW\nR\n8:6;T;\nGP@\n>G79f K\nL\"W\nC=G%A\"898\n79;\nLjf CE@\nG\nfg;\nAm?]79G(?\nY\nl\n7:\nAG`K\n@@\n365^2\nTi}\nAGLZK\n8979GP@;\nA\"LZCM8@CU79G(?\n\n79;ldJ7:\nAGgOJCEGLC=Gk@7%d7:;\n\n;\nW;\nA\na\nd7:;B79f GV897L\n@07\nA*GLZK\n@\n?\n8979GLZC=@CU7\nG ?\nYy\n79;\na\n;\nG%@\n?0CEWGA*K=KEC=GkWNAG6L\nAG6L\"KEC=GkW\nR\n79G6L\"CE@CM79G(?\no/}\n@\n?\n8@CU79G\n\"\n\n79GLZC=@CU7\nG ? \"\nCEG` 1o»1⁄4\"1⁄2E3⁄4E¿]A^AA1⁄4oo1⁄4AgA3⁄4EAEAvUOÞ1⁄4]C6O0Æmon6\no\\3⁄4EA\"COAA1⁄4APATE=OE¿TEÐA\nY\n2I3\nCQ?BCQ?ef\nA*@\nA\nm\nG(?eCEGμ@\nA9O6?\nG8\nR\nOP7T:6GLO8\n79GLZCE@CU79G\nA*GLZK\n;?\no f\nGz@\nTi}\nL\n@\n8@]?AN8\n79Gk@;\nAZL\"CU8T@079;0d\n\n;\nL\"CU8\nA*@CU79G¶I=CEG^@\nAm?\nR\nAG^·\nT}\n\nAN8TKUA9:?\n@\nA@B8\nAGkG79@\nO\n?]A@CF?\nR\nC\nLmI CE@~@;\nA\"8\n?~OPA\"8>JfIA*;\nL%@\n;\n7:W\n@\n;\nAm?]79G(?\nR\n;@\n79G\nR\nKECM8@CEGPWOO\nKEC\n59R\nAGL\nR\nC=G6L?b@\n\n;TC\na\nC=@CI\n?:\n#\n79;T@:6GL\n;TKEdmC=GkWCE@\nY\nQR\nA?0CEGPWK\nAJ?T?:\na\n@CM79G%CQ?\\8\nA9:c?0C=GkW@\n8979GP@;\nA\"LZCM8@CU79G\n\n@\n35j2\nTi}±A9:@07\na\nA@CU8\nAKEKEdlLm7\n?\\AG\n\n&P-T6,1\nc\n\n-+0\n\n;\nA*@CU79Gi79GXC=@\n\nA*GL\nGk@C=G:\n?\n\n;\n?T?0C=GkW\nY\n\n&P-T6,1\nc\n\n-+0\n;\n<\na\n7I\n?\\@\n8:6;T;\nGk@H?:\nm\n79;T@\nR\n79;e@\n\n;\nLZCM89A@CM79G\nYOQR\n@\n\n;\nLZCU8\nA@CU7\nG\nA\"LA?0CEGPWK\n?:\n\n<\n\n79;T@\n\n&P-T6,1\nc\n\n-+0\nAGPW\n?CE@]?@;:6@\nIJAK:\n@07\n&P-661csc](&;8(s*YiQR\n@\n;\nf\n;\nA9:\n\nC=KECUA;0d\n\n:?0@C\nR\nCU8\nA@CU79G(?\n\n@\nd\na\nATd\nAGkW\n@\n@;:6@\nIJAK:\nR\n;\na\n\n&P-T6,1\\s] &;8(s\nOPA\"8>¶@7\nC=@\n;i\n&P-T6461csT+0o!Ds\n79;i\n&P-661cs]\n\n-!DsY\nIM}\n@\n?\n<\n@CU7\nG\n\"\nPO5\n@;\nA\"8T@CEGPW\n=\n;\nL\"CU8\nA*@CU79G(?/f CE@\n\n&P-T6,1\nc\n\n-+0 \"\n\nAW\n5pPO5\n@;\nA\"8@CEGPWP<\n=\n;\nL\"CU8\nA*@CU79G(?]<\nf CE@\n<\n°\n[\n}\ni\nOo\n\n°\n\n}\n2AFy]l\n<E}\neU42[ /Y\nI\nQR\na\n79;\n@\nAG79G\nAm?T?:\na\n@CU79G{:GL\n;TK=C\n?@\n8979GP@;\nA\"LZCM8@CU79G\n\n79;±C\nR\n@\n79Gk@;\nAZL\"CU8T@CU7\nG\n;\n?0@?H79G\n\n;\na\nCF?\n?~;\nA@\n;@\nA*G^Am?T?:\na\n@CM79G ?\n\n@\nTi}μ?0CEWGAKQ?BAG^A\n#\n;\n\n;TCUA@\n8979GLZCM<\n@CU7\nG\n\nC\nR\nG67\n\n;\nW;\nA\na\nAm?3O7:6GL^A\nAGLZK\n;\nR\n79;l@\nCF?S897\nG6L\"CE@CM79G¶@\n35V2\nT}C=GIJ7>\n?i@\niI5\nOm:WW\n;\n\nKECQ?0@CEGPWzAKEKb@\nAm?:\na/\n@CU7\nG ?jAGL\n\n;\na\nCQ?\n?j79Gzf\nCM8\n@\n8979GP@;\nA\"LZCM8@CU79GL\n<\n\nGL?\nY\n\nJustification and Truth Maintenance\nApril 2003\n[0;[X\nrE0[#0[F#Xr(b^F\nF ¡^¢\n0[£z¤¥b20¦§X 0[(c)0FZa«¬hD\nbXMXZ[¢(r) >[p[¢2E°\n\nAz\n±¡¬h2[h3! 1^]±n\n[[μX±AF £\n10.3.1. An LTMS Example\n¶· ^ A ¥^¢1nL\n1Yz[ro\nn; F2b] >^¢1[0[\n¢X»b#±;\nbX;;»(r)]D\n°\nbXW2[ 1⁄21⁄43⁄4X¿A]A·A]A5AbAÆÆ2bY¢ECE1by¢(r)±AA pY[±EX]\nZX\nAZ£Ba^¶·IbnD AF¢¬G SI;[yxbX A(bA\nAE%\nD\n±F\nF £E«\n[^\nbn0oEYnD A¬Ub] >¦^¦;[p(r)°^E0¬· ^ E(b\nbL¢(r)±AA¦] ^Xy\n[yY(r)bn;μby¢b1y[ I(r)0μ^¢b1(r)]y±;\n¡;£IQ A\n±¦[2X\n]1;[\n[±F\nbμ[!\nZ]0CE¢£\nII;I\nCÐ±D±;\n±Nbb°\\Y°ObO X;x ^ L;·Ð\n[±OS;[XW±bD A¢¦b\nb] O^¢0F >^O(r)]EO¢bbμ£·]nX%\n¦¡[2X±EbbE]±×b\n[;[[»¡\n£\n[Ø±D^¢^A !\n[±11⁄43⁄4X¿0A]AhAzAtAbAÆ^Æμbb\nb2¢p(r)%X!0oE\nn; FØ\n;YI\n[Ø[±×\nX(c)\nAZ£ X\n[L\n0(r)A\n\"\nS^¢^AZ»μ(r)]U·Q3! yU·oEYnD A \"\n¬hEYXX(r)AZ°\n°E[\n°EUhh3! X°EU·o\nn; F\n° UUI·?UY¥Þ £\nE0£\nII¡E >^WYEXF\n»±;\nbX;I\n[±Ø %(r) Y±¦0[\nXX] F¬>;!b] ¥\n^×;[%ß¡£Gay\n¥]\n[\n; ¬U [[1· ^AØ(r)!h3! ×E°\n\nFZrXμ;\n±X]£\na\na\na\naYaæcee\ne\ne\na%iDi0a\niDia\nðWni0oo\næ1eYoLoDi0aiDi0a\nðoi\n÷\nø%u\no\næDi0aoDi0e\na\ne\nu\n£\n¤u[ 1⁄21⁄43⁄4X¿0A]AhA]A5AbAÆÆbb\nbXμpXb\n±x\n]±Ø[¦Xbbu\nb Db%Z(c)\n^¢bμ[±D\nbX;£\ny\n£\n·]pQ3 M±;\n0X±F0(r)Ay¡\nØ(r)][ þ1⁄43⁄4X¿AzAhA]A5AbAÆÆbb\nb2¢¬By\nae\no\ny\nea\ne\ni\neai0oDie\na\nce\ne\na\noa\næ\neeaDi0a\noeao\n¬x\n[±\n\n;Eb\n;FZ¬y\nea\nei\neai0oDie\naLcee\naIo\naæ\nee\nai0aIo\neao\n\n]X t%bF±^¢1M[p±D\nbX;£·[p[°\n±AAb%O; 1\n[±Ðb[¦ ¦]CE¦]IbE\nA\n±E[ Ob¦[\n]± A\n[p[±^A ¬h[0D]X(c)»C§X\n±£UacI%[0[nQ3! z¬Eb¡z# 0[ A±ybnD 5\n[C\n[YXX\n±\n(r)]\n[\nCE\nEz\nN(r)]\nF±\nbb\nbX\nbu1⁄43⁄4X¿A]AhAzAAÆA¿AY£E«\n¶(;[μ°O¢bE!b[\nμ(r)]%1±bD A\n[±y]#(#^¢bF× ¥×[\n¢b\n\n2[h3! 1XbCE[£\n\n£\nIIÐ±D\nA±;Wbx1⁄43⁄4X¿0A]AhA]A9A1⁄4Ah¿A]EX ^A1[\nEX\n±D\n¦[CW;[0[2¢FE£\nÞb1(r)]\nμ y±D¦LDbX×[ 1§X×\n]±x0 ^A§X]1 A\nCE\n2[I]D\n;[Y !\n¢ b(c)1⁄43⁄4X¿AzAhA]A9A1⁄4Ah¿A!\"(£U[LL±b; AM^\n;[#\nb]\nW[YE[1⁄2[\nCE\nEzN×(r)]\nbb\nbXNy\ne\na\ne\nie\nai0oi0e\na\nce\ne\na\no\naæ\nee\nai0a1o\neao\n] 0[\n¢X\n±#\n1⁄43⁄4X¿0A]AhA]AA$A(A2b»1⁄43⁄4X¿AzAhA]AA&%Z3⁄4'(Y£\n\nApril 2003\nJustification and Truth Maintenance\n[ALLERGIC JOHN PENICILLIN]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\nTrue things\nFalse things\nNone\n(tell [not [has-condition john pneumonia today]]\nInitial Database\nNew tell Statement Is Entered\nTMS intervenes:\ntell statement contradicts\nexisting fact\n(defrule schedule-tests (:forward)\nif [and [allergic ≡person ≡drug]\n[test-for ≡problem ≡person never-done]\nthen [schedule-test-for allergies ≡person now])\n(defrule allergy-test (:forward)\nif [and [had-treatment ≡person ≡condition ≡drug yesterday]\n[has-condition ≡person health today]]\nthen [not [allergic ≡person ≡drug]])\nRules\n[ALLERGIC JOHN PENICILLIN]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\nTrue things\nFalse things\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\nDatabase after first retraction\nUser retracts fact\ntell statement is\nadded to database\n¶Q^;]ß¡£Q3 1U·oE\nD A°°UÞ\n¶·2I·¢±A2U·oDb^¢%¶·0\n¶(;[)#£h3! 1UoE\nn; F°^°>·\n]±#0D]X¥b; F¢¬·\n[±#¶Q\nb(*U°\nF\n\nJustification and Truth Maintenance\nApril 2003\n+\n£\n·]¦0CE\n[^]\nbb\nbXL\nF\n%(r)]E¢bb\nbx^ ![x[\n1⁄43⁄4X¿0A]AhA]A5AbAÆÆpbb\nb2¢¬y\na\ne\no\ny\ne\na\ne\ni\ne\naEi0oDi0e\naWce\neaoa\næ\neeaDi0aÐo\nea0o\n¬\nXbx[\n±DY¡;£\n,\n£\n·]E±D\nbX; ¥1⁄2[2b\nbXLb\n±¡¬2\n[±Ð[[\nbb\nbX\n±;±D\n±][±;2[[\n±^¢\n\"\n¶·\nXX] \"\n£\nI·X^¡[X\n\nXb^Z\nFZ¬2[E[0oDy0oE\nn; A× ^ E(b\nbØþ¢(r)±AA\nX[\nb\n±1¦(r)]L^¢×21 S\n±Ø0[\nXX] F£U¶Q^;]L(r)°\nu\nb[\nμ ¥]\n\n[\n; £\n-\n£\n¤\nn0[[±L1⁄43⁄4X¿0A]AhA]A5AbAÆÆbb\nbX 1D\n±F\nFZ[\n±y11⁄43⁄4X¿A]A·A]AA\\A./\n(c)±;±D\n±%b#(r)]!±;\nb¡E£U·]1bb\nb2¢ X[#(r)\n±%] F¬\naa\naæDiðoo\næe\no\n£\nß¡£\n*·] F\naa\naæDi0ðoo\næ\ne\no\nY[±¦\nn;μb1±D±¦1[ ¥ 5±;±Yz\n±y¬2y\nae\no\ny\naa0aæi0ðDi0ice\ne\nao\næ\nai0iDia\naYi0a\n¬by[Ø±;\nbX;£BY¥]ØYX\n^ ¬[y!¢(r)±A°\nF1(r)]±DY¡;x];1xX ^A]\n2EXOI\n^ AFØbxEXA ^Z¬\n¥¢^ Ax[\n[ AL±D\n±Yz2]\n[!2[£¥aU·CDA±;¢ t¢¬>\n[!E2±I[L0oD^¢2\ncC;^¢3¢\n¢F0^ ^\n±DbDb4¢(I5M§[ ¥\n\n^ A\nb\nØ\n]±5E¢\nEb ^\n\ncCE¬Q(r)¡(2EbXyD0 F\n(r)2(r)]h3! ]£<«\n#¡£\n6a ¥^¢þb¦[¦(r)¬\n;§þ[E¢bb\nbL1⁄43⁄4X¿0A]AhAzA<A¡1⁄4bAh¿0A!\n[MX A[\n\ny\naYa\naæDi0ði0icee\na1o\næaDi0iDiaai0a\n£\n¶(;[pμ°OXbb\nu\nb[\n[!·!±bD AM; [p[\nbb\nbX2\n!±;±D\n±\nb[E±;\nb¡E¬r[x(¦XbA ¥^\n]W¢bb\n\nb¦[EQ3! O^¢°\nCE[¬\n[±[#·p±bD AØb[ ¥Xy(r)](r)F £87\\II[CEp\n^F0FY ^ 5E\n°\n§¡[¦[M¢bb\n±b; F0X^¢M\n\nbL;[μbL§¡1\n0þbbEbF#b\n(r) F\n£?U¦\n\nB ^(r)¬[!X%1Yz]p[\n; [!¢(r)Z0(20CEX[¢^\n\nX±AF »\nbX1\nn1⁄43⁄4X¿A]A·A]A5AbAÆÆ\nbb\nb2¢\nECE\n±¡£\n¤\n2]·±b; F1Yr(r)](c)Xb\n\n(r)];[!b]\n¬Q[[ICE\nEz\n[\nD\n±F\nF\ny\naa\naæDi0ðDi0iOce\ne\naoæ\naDi0iDia\nai0a\n[Yx O[CE0\n±O]\nXX\n±\n\n1⁄43⁄4X¿0A]AhA]AA$A(A2b»1⁄43⁄4X¿AzAhA]AA&%Z3⁄4'(Y£\nE;:£\n·]%X A±D\n±Yz\n±¦Y×[ A\naa\naæDiðo\no\næe\no\n¬[\n5¢¬ y\na\ne\no\ny\naa\naæDi0ðDi0ice\ne\naoæ\naDiiDia\nai0a\n¬Q2[\n^\n±#Xb(r)]±;\nbX;£\nEE£\n·¢22[\n±A\n±±DY¡;£\nI·X^¡[X\n(r)¢×^¢¬μ(r)]O[\n¦\nZ]Ob[\nE[\nA\n\nQE^]Zbbb]Ay^O[W±;\n¡;¬n\n]±þ]\n[WQ3 1⁄2[b\nF\nt\n°\n\n]£Q¶(;[(r)°\ny\ncQb(r)Y£\nE\nu\n£\nY¥]Ø;\n±A\nAN[±D\nbX;¬\n[\n5¢¬(c)y\ne\nie\næeaæ\no\næ\neooeDi<\naa\naæi0ðDi0æ\nece\ne\na\na\ne=\n±;E]±D\n±(r)[;Ø\nþD\n±F\nF\ny\naa\naæDiðDi0iOce\ne\nao\næ\nai0iDia\naYi0a\n[\n(c) %b\n±Ø^bb>#¡£UI%^]]p[;E¬>I;\n±A\nAW\nE]% FXXpX\n¡ F0CE\n±¡£\n\nApril 2003\nJustification and Truth Maintenance\ndeduction contradicts\nexisting fact\nRule fires; TMS\nintervenes:\n[ALLERGIC JOHN PENICILLIN]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\nTrue things\nFalse things\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\nDatabase with New tell Statements\n(defrule schedule-tests (:forward)\nif [and [allergic ≡person ≡drug]\n[test-for ≡problem ≡person never-done]\nthen [schedule-test-for allergies ≡person now])\n(defrule allergy-test (:forward)\nif [and [had-treatment ≡person ≡condition ≡drug yesterday]\n[has-condition ≡person health today]]\nthen [not [allergic ≡person ≡drug]])\nRules\n(tell [and [had-treatment john pneumonia penicillin yesterday]\n[has-condition john health today]])\n[ALLERGIC JOHN PENICILLIN]\nTrue things\nFalse things\n[ALLERGIC JOHN PENICILLIN]\nNew tell Statements Trigger Rule\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\nUser retracts fact\nDeduced statement\nis added to database\nTrue things\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\nModified Database\nFalse things\n[ALLERGIC JOHN PENICILLIN]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\nChanges to Database\n¶Q^;]E;:£h3! 1UoE\nn; F¬·I·¢^¡z\n±°°U\n±\nZ\n±#¶·2I·X±F02U·o;bX1¶h0\nE\ny\n£\n·]pQ3! 1§E]\nX0[»\nB±D]±D]A¬Y[±%[b\nA\n5L0n(r)]μ[ [°\nEb\n±yD\n±AY(r)Ay\ne\ni\ne\næeaæo\næ\ne\noYoeDi\naYa\naæDi0ði0æ\ne!ce\nea1ae=\n£G·[1·%±bD A\n^y¶Q;[μμ°O¢bb\ny\n¬?b[\n2(r)¢2A £\nE\n\n£\n·¢2b[\n2[μ^]\n¬Z[±;\nb±¡¬hY[± bbbX2±DY¡;£\n\nJustification and Truth Maintenance\nApril 2003\n¶(;[EE0£Q3 1U·oEYnD A¬hI·XZ±L°^°¥¥bD A%Y[± ¢[±?*U0F\n10.3.1.1. Definitions for the LTMS Example\n@@@BA\ni0æii\na\no\næCæoi0ai0oDi0e\nae\nnDæoYi0a\næ\noi0æi0ia\no\næ1aYa\naæDi0ði0iWnoæDi0e\ne\naCi0e\nðYo\nnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\nnDæoYi0a\næ\noi0æi0ia\no\næ1ea\noDiæ\na\noæa\noWnoæDi0e\ne\na%i\ne\naEi0oDi0e\naCi0e\nðC=e\næ\naYo\nnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\nnDæoYi0a\næ\noi0æi0ia\no\næ1oæ\ne\nooeDinoi0e\naaæMo\næDie\ne\naG=e\næ\nae\na\næo\nnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\nnDæoYi0a\næ\noi0æi0ia\no\næ1ei\ne\næeYaæ\no\næe\nooeinoDie\naaæyo\næDi0ee\naG=eæ\nao\nnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\nnDæoYi0a\næ\noi0æi0ia\no\næ1ea\ne\ni\neai0oDie\naWnoæDi0e\ne\na%i\ne\naEi0oDi0e\naC=e\næ\naYo\nnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\n@@@BH\neaæCæoi0ai0oDi0e\nae\nnDæoYi0eaæ%e\ni\ne\næeaæ\noæ\ne\no\nenIEoeDiJ=aDi;;o\nio\ny\na\na\ny\naa\naæDi0ðDi0iLK\no\næDie\ne\naMKi0e\nð\ny\no\næ\neooeDi?K\noDi0eaaæNK\no\næDi0ee\na1a\næOæDie\na\næ\no\neæ\na\ny\nei\ne\næeYaæ\no\næe\nooei!aa\naæDi0ðDi0æeMK\no\næi0e\ne\na%a\ne=o\nnDæoYi0eaæ%aa\naæDiðo\no\næe\noWnIE(r)oeDi;=ai;;o\nio\ny\naa\ny\nea\noDiæ\na\noæa\noMK\noæDi0e\ne\naLK\ni\ne\nai0oDi0eaMKie\nðoæe\no\næDi;ao\ny\nae\no\ny\nea\ne\ni\neai0oDie\naMK\noæDi0e\ne\naLK\ni\ne\nai0oDi0ea1o\neao\ny\nea\ne\ni\neai0oDie\naMK\noæDi0e\ne\na%e\næ\naao\ne1o\neao\no\ne\næ\na\ny\na\ne\no\ny\naa\naæi0ðDi0iLK\no\næDi0ee\naMKEi0e\nðYo\n\nApril 2003\nJustification and Truth Maintenance\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\nTrue things\nFalse things\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\nTrue things\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\nFalse things\nFinal, Updated Database\nRetraction removes\nsupport for\ndeduced fact\n(defrule schedule-tests (:forward)\nif [and [allergic ≡person ≡drug]\n[test-for ≡problem ≡person never-done]\nthen [schedule-test-for allergies ≡person now])\n(defrule allergy-test (:forward)\nif [and [had-treatment ≡person ≡condition ≡drug yesterday]\n[has-condition ≡person health today]]\nthen [not [allergic ≡person ≡drug]])\nRules\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\nTrue things\nFalse things\n[ALLERGIC JOHN PENICILLIN]\n[HAD-TREATMENT JOHN PNEUMONIA PENICILLIN YESTERDAY]\n[HAS-CONDITION JOHN HEALTH TODAY]\n[TEST-FOR ALLERGIES JOHN NEVER-DONE]\n[SCHEDULE-TEST-FOR ALLERGIES JOHN NOW]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[ALLERGIC JOHN PENICILLIN]\nTMS retracts\nunsupported fact\nChanges to Database\nDatabase\n[ALLERGIC JOHN PENICILLIN]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n[ALLERGIC JOHN PENICILLIN]\n[HAS-CONDITION JOHN PNEUMONIA TODAY]\n¶Q^;]E\nu\n£h3! 1UoE\nn; F¬·I·] Ez±;\n±°^°>Q3! #¤G[b\nA\ntP*URQ [;Eb\n±\n¶·\n¶(;[E\ny\n£Q3 1U·oEYnD A¬hI·[0 cZ±D\n±°°·¤G[b\nFS*U(r)F1[Q3\n\nJustification and Truth Maintenance\nApril 2003\n@@@\no\næa\nae\no\na\no\nææ\na\no\ne%o\ne1eæ\no1e\no%e\no\naDioDi0a\nðCa\no\na\naa\ne\næ\nnDæoe\na1e\næo\ne\noDiaDi0oDi0aYa0\ni\ne\nai0oDi0ea\neWnbo\nniYaæ\naDio\nnoæa\na\ny\na\na\ny\naa\naæDiðDi0iGTe\ne\na1oæ\naDi0iDia\nai0a\ny\ne\na\ne\nie\nai0oi0e\naGTe\ne\na1oa\næ\neeaDi0a1oeao\ny\no\næ\ne\noYoeDi!aYa\naæDi0ði0æ\neGTe\ne\na1aæOæDie\na\næo\no\n@@@BU\ni0æ\na\noæyoi\nie\no1i\nea\noDi0aEi0i\noDi0ea\nnDæoe\na1iDiæ\na\no\næi\ne\na\noDiai0i\noi0e\naWno\nnoæa\na\ny\na\ne\no\ny\ne\na\ne\nie\nai0oi0e\naGTe\ne\na1oa\næ\neeaDi0a1oeaoo\no\n@@@BU\ni0æ\na\noæ1e\næ\nie\naMie\na\noDi0ai0i\noDie\na\nnDæoe\na1iDiæ\na\no\næi\ne\na\noDiai0i\noi0e\naVnbo\nnoæa\na\ny\na\na\ny\ne\na\noi0æ\na\noæ\na\noce\ne\na1oa\næ\neeaDi0a1oæ\naDi0iDia\nai0a!oæ\ne\no\næi;ao\ny\ne\na\ne\nie\nai0oi0e\naGTe\ne\na1eæ\naao\ne%o\nea0oo\no\n10.3.2. Retracting Predications with joshua:unjustify\nWa0\nIQ[A][0(r)A!1⁄43⁄4X¿A]AhAzA<AX1⁄4bAh¿0A!\"Yx0CE(r)](r)]D(r)pbE\nA(c);\n±D°\nA\nAZ\n]M±D\nbX;I^]±D[±;¢ tEμFY[MQ3 ]£\naEI%^]]¦Q3 ]¬\n1⁄43⁄4X¿A]AhAzA<AX1⁄4bAh¿0A!\"Y\n(b\n\n(r)]\n(r)]\nCE\nEz\n\n]\n;\n±AY(r)A\nb\n1⁄43⁄4X¿A]AhAzA\"AZ% 3⁄4'(\n£<«\nÞ2b\n(r)]\n\n¥[\n\n[\n\n]\n(b^F\nF\n]D\n\n;\n±A\nAZ¬\n1⁄43⁄4X¿A]AhAzA<AX1⁄4bAh¿0A!\"Yþ»(b2XyY ^ A\n±[I(r)101(bA\nAZ£\naU(E§¡p1⁄43⁄4X¿0A]AhA]A5A[I\\ZÆAA]^·¬\n1⁄43⁄4X¿A]AhAzA<AX1⁄4bAh¿0A!\"Y\n]\n±¡]Z\nμ±;\nb¡E¦;±A\nAO[Yμ0\n\nX!E\nb\nZ¬Q[#\n%\n[Y0ØF;μZ£<«\nUØYØ\n\nFμ0oE\nn; Aμ S2Q\n±;\n±AY(r)Ay ¥y\nQb(r)AY(r)AZ£· X\n[!\nA\n\"\n\nbX;\n_·\n±A\nAZ\nI·\n\n`2CE\n3[ ^; A\nQb^F\nFZ \"\n¬\nEYX\nY¡;\n°\n_·\n±F\nFZ°I·\n]°`2CE\n°53[ ^; F\n°(bA\nAZ° UUI·?UY¥Þ £\n¶Q^\nb\n\nZb±\nX\n;\n±A\nAZ¬87\no\næo\næDi0a\noeDi0æ\neYoe\neDioa\ni\næBOæDio\nee\no\n¬Q^¢[±;\nb¡EEn\nØ;]nDAZ£\nU·\nb» ;(c)±;±Yz\n±%\n(r)\n±1[ A\næ\noæDi;i0aæ\no\næoIa\nb] ¥Ø¡ A\n¬Q\nECE°\nXy\nØ±;±F]\nZQb(r)AY(r)AØ;np±;\n±\nZA £\nnbæoi0aæ\noDi0æi0i\na\noæ1i\ne\nai0oDi0ea\neo×ne\naTæi\no1i\neai0oDie\naoEnaoeFE(r)aoeoDi0æii\na\no\næeæao\no\nnbæoi0aæ\noDi0æi0i\na\noæ1o\næo\næDi0a\noeDi0æ\neYoEne\naTæ\ni\no%o\næo\næi0a\no\neDiæoEnbaoeFEaoe\noi0æi0ia\no\næeæa\noo\nn(r)o\næa\na\ny\ni\ne\naEi0oDi0e\na\neoLeeDioa\niæGæaoDi0a\nðYo\nnbæoi0eYaæGæo\næDi;ia\næ\no\næoIaEncEoeDi;=aDi;;o\nio\ny\ni\ne\naioDi0e\naeoPK\neaTæ\ni\noCæaoi0a\nð\no\ne\næ\na\ny\no\næo\næDi0a\noeDi0æ\neYoPK\ne\naTæ\ni\noCOæDioe\ne\noo\nU·\"I\\!]E AM(r)]y0^¢þQ3! Ð\nF pb\ny ¥]\n[\n;E p >[þ Mb×b\n1⁄43⁄4X¿A]AhAzA<AX1⁄4bAh¿0A!\"YÐX;\n±AY(r)AZ£acIIIXY[I;\n±A\nAEE0 ^A§^¢W\n^\n[±DY¡;±b; F¢£<«\n\nApril 2003\nJustification and Truth Maintenance\ndefgLhfiejkMlkmknkio\npqjoMmersti\nu\npvwxvyzp{yv|}~Md{y~zvLvy|}p\nu\n}l];p];}|}~Ld{y~zIvMwvp];\n~kI0ioLmersti\nfso\nZ]J\nZ&.!! ¡£¢¤0¥¦§ ¤(c)¤«a¢<¢¤0¬\nZ(r)(r)]0¢<M Y0¢°¤4(r)¢¤(c)±2a3±2¬μ R¤\n¶·¢3Ia¤2(c)±D!(r) 31o!Z0»1⁄41⁄233⁄4¤¿(r)¢¤(c)I±2a3±20¬o±AA!Y±^^·;\n<Z&A!A<XAA A\n¤a030J¤¿±^3⁄4»Æ3AZ(r) C\n(r)]0¢<E¤(c)EAc133c¬E3I(c)(c)I±^± 0¬3c(EE!± A± a03± 0¬I»I\n±2a<I3N¬Z0»IA.¤a0¥S¤I±^;Ða;Z¢<¢¤0¬\n(r)(r) 0¢<;N\n¶·¤Z(r)(r)]0¢<?J3<1O¿3cB¤M(r)¢¤(c)I±2a3±20¬«»Æ32(c)¤(c)Fa¤(c) D¢0¥O3N 0¢<»Æ3¢(c)¢;2¤NÆ¶OO±D?(c)¤C\n(c)c&aY±20¬4¢¤0¥¦3±^¬FA§ 3c±2(c)3 B20¬\n43OZ¤P(r)¢¤(c)I±2a3±20¬FC(r)(r)]¢<±^¬\n>¤L¢;2¤O×)a0¬Za<\"!±2¬\n3¢¤4§ 3c±2(c)]N¦¶·]< Ø¢!1±¬OU!Ð;\n<ZOZU]!O<!\" ¡U\n±AU(c)¤(c)c&a0¤(c)Y(r)¢¤(c)±2a3±2¬£¬0»Þ»ÆZ (c)\na030J¤)3¬Ð¤0¢<¢¢)ß»±N¤Oa¶aCa?1]Ua3¬Ð0¬\n×1B;\n<ZOZU]!O<!\" ¡Ð(r)¢<±^¥Ø±^Y±\"§ ¤C(r)(r) 0¢<!aN\na\njsaIjimr0æcSe;eFeOe¿iOeiiði1⁄4eInOie8oDoðo«oInOiIoZi1⁄4oOe3÷Zeði(ø&ouBoue\nuu\nvqqfqOyØxqoþ rykmr<fs\nu\npvwxvyzp{yv|}~Md{y~zvMvy|}pMyksmMnoLjsajimr0æIr<oþ\n\nrmiMijfq<mÐrilvpvyw];v|pvwx\nu\n}l ;p];}|}~Md{y~zvMwvp];\n→\nu\npvwxvyzp{yv|}~Ld{y~zvMvy|}p\n\n¶·\n±A¿J¤a± 0¬Ia0¬a<\"&(c)¤A¢GZ¢;§ ¤;1Ð\nA.3 !± a !]&3Ma0¬a0¤(r);<Nð>¬Z»£30§ ¤G3P»Æ0¢.C\n±^¬\n¬Z0»I ¤(c)\n¤0 !]F3UYZ3C¤¬Z30A] ¤O1 Y!A±^2(c)43(r)(r)^± a03± 0¬μ)X!±¬O«Z¤(c)¤ 30^\n!.&3) Y3Ia±^±^Y±2¤<N\n¶·¤]I!.&3N 2Z¬aY±20¬F23¬Z(c)Ua0¥Ø¥¦3c¬(c).)a0<§]¤¢¤(c)±¬\n\n±A¿¥¦3¬]F31⁄23c(r)(r)]¤3¢C±^¬\n¤\n\"\n\n3!± a\n!.&3I±2a<± 0¬Z3¢!1 \"\n±^¥Ø¥¦¤(c)I±23!¤0\n1P Y0^ 0»I±^¬\nM\n±A¦J¤a<±20¬FN\nu(c)§ 3c¬a¤(c)]I!.&3Ia0¬Za¤0(r);L3¢¤°a§ ¤0¢¤(c)4±¬\nZ¤Ua0¥Ø(r)]3¬O± 0¬§ 0\"¥¦¤E\n±A<N\naO¤¤¤\n(c)a;¥S¤¬O !#\"\ni%$'&'$)(*$+-,$(e\n\"\n+\n!.\"./DN\n\nJustification and Truth Maintenance\nApril 2003\n\nApril 2003\nDictionary Notes: Basic Joshua Dictionary\n11. Dictionary Notes: Basic Joshua Dictionary\n¶·¤¤0¬\n¢<±2¤O±^¬4O±D2(c)I±2a<±2¬Z3¢!1>3¢¤N301!.2\n$)3\n0 ¦J¤L±^¬4Z¤\n\"\n!]&3NaO3¬\nF3\n¤0I±2aC\n±2¬Z3¢!1 \"\nN54¤PZ30§ ¤P±^¬aF(c)¤(c)oZ¤¢¤0¬\n×1J¤P 2Z¬aY±20¬F)3¬(c)a00¥Ø¥¦3¬Z(c)]OYZ3R1]«»I±^\nA±¬Z(c)PJ¤0 2Z1⁄4 Y0¢)\n¤0Y±^¬\n4!!3¢<!¤(c)o3¬(c)»IJ¤G0(r)]¤¢3cY±20¬°3\nA\n¤¤¬I(c)±AJa;<J¤(c)M±^¬°¤Pa0¬C\na0¤(r)A&3\n(r)]¢<±20¬FS0 3⁄4YO±D¦¥¦3¬]F3DNμu(c)§]3¬a0¤(c)L b¬a± 0¬FS3c¬(c)L 2Z¬a<±20¬F\n¬Z¤¤(c)¤(c)P ¢¿¥¦(c)C\n¤0^±¬O3¢¤)0¥Ø±!¤(c)]N\n6R¤¢¤O±DR¤)3(r)3A.¤0±870¤(c)?±A!3⁄40 % !.&3) 3c¬\n&3c\n¤¿AE;¤a;3⁄4±^¬aF(c)¤(c)?±^¬N\n±A1⁄2(c)± a± 0¬3c¢!1\nN\n\nDictionary Notes: Basic Joshua Dictionary\nApril 2003\n11.1. List of Entries in the Basic Joshua Dictionary\nJ\n<&Z\n)9\nJ\n<&Z\n)9;:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\nJ\n<&Z\n)9;:=<OAIA0ED.!^]\nJ\n<&Z\n)9;:=F.AA<¡\nJ\n<&Z\n)9;:=F.AA<¡:\"!A!:BD.G\"A\nJ\n<&ZHCG^A]A\n\"\nI\n2¤3¢J !]&3Æ3cE3A.3J¤\nI\n0¥Ø¥¦3¬Z(c) \"\nJ\n<&ZA1CI]μ!AK<\nLCI!]A¡&A\nJ\n<&ZHCI?AZ¡:\"?>]JACI:\" M:FANCIA0]A¡\nJ\n<&ZE<OA !FA?:HAFAA?<\nLC.!A\n\nApril 2003\nDictionary Notes: Basic Joshua Dictionary\nJ\n<&ZE<OA MF]XA<!^]\nJ\n<&ZE<OA !A<G^A\nJ\n<&ZE<O !AIAAFM:\"?> ;ACIJ\n\"\nI±DJ30A]2¤O !]F3?¶O¢3Ia±¬O\nI\n0¥Ø¥¦3c¬(c) \"\n\"\nP\n¬30A]2¤O !]F3?¶O¢3Ia±¬O\nI\n0¥Ø¥¦3c¬(c) \"\n\"\nPRQ\n(r) 3±^¬TSO¢¤(c)I±2a3cY±20¬\nI\n0¥Ø¥¦3¬Z(c) \"\nJ\n<&Z×AUAVG2]^\nJ\n<&ZA; J.G2<AA\nJ\n<&ZHW\nA?AF:LF]XAIA<¡V:A0A;G^J\nJ\n<&ZHW\nA?AF:\"YX¿:^;VAZAF]A\nJ\n<&Z[9F?\\(\nJ\n<&ZHX¿?9A?:HAFAA?<\nLC.!]\nJ\n<&ZHX¿?A:\"?D\nAIA:L<Z]J]>μO<A@:BAFAA@<OLC]]\nJ\n<&Z[AFAA@<OLC]!^]\nJ\n<&Z[AFAA@<OLC]!^]ZA\nJ\n<&Z[AFA^FM:LF]XAIA<¡\nJ\n<&Z[AFA^FM:LF]XAIA<¡V:A0A;G^J\nJ\n<&Z[AFA?D?>VG^A\n\"\n^\n¤J¤_ !]F32¶·¢3Ia<±^¬\n\nI\n0¥Ø¥¦3¬Z(c) \"\n\"\n` \\\\\na\n3<1 \\\\\"\nJ\n<&Z ¡\nJ\n<&Z ¡:LF]XAIA<¡\n\"\na]0»a !]F3bSO¢¤(c)± a03!¤\nI\n0¥Ø¥¦3c¬(c) \"\n\"\na]0»a !]F3\n^\n2¤\nI\n0¥Ø¥¦3c¬(c) \"\n\"\na]0»a !]F32¶·¢3Ia<±^¬\n\nI\n0¥Ø¥¦3¬Z(c) \"\n\"\na]0»\n^\nZ ¤Æ¤0 D±^¬\n±^Y±20¬\nI\n0¥Ø¥¦3¬Z(c) \"\nJ\n<&Z;CNCIAIA@<\nJ\n<&Z×!AGLG\nJ\n<&ZA<!AAA\nJ\n<&ZU<OA !^FA@:BA&A0A@<O=C]!A\nJ\n<&ZU<OA MF.A!]\nJ\n<&ZU<OA !A<cGA\nJ\n<&ZUF\" ¡\nJ\n<&ZU]<!\" ¡\nJ\n<&ZA;9F?\\(A\nJ\n<&ZUF!ANG=G\nJ\n<&Z[D]A0 .F\nJ\n<&Z[\\(:J]AXBAIFM:L<OA<A<CIEAA@<\nJ\n<&Z[\\(:×XZ>F<Z:EG^.W\nLC@:BD]A0 ]>G^A\nJ\n<&Z[\\(:×XF !LC]]\n\nDictionary Notes: Basic Joshua Dictionary\nApril 2003\n\nApril 2003\nBasic Joshua Dictionary\n12. Basic Joshua Dictionary\n;\n<Z&O9\no\n!\n+-,13Ld\n\n+\ne\n!\n$1(8fg,\n\n+3LdL+\n!#\"\n3Ld\n\n+ih\n.¤;1kjHlEmK\no\n2\"\n,Mn.o\n\"\n(\nm\no8(\n!-/\n$\nS=pqlEmK\no\ne\n!\n$\n\n3Ld\n\n+\n\nr8F¤¢<±2¤3⁄4Z¤S§±^¢<A&3Æ(c)3!30A\n3J¤¿3c¬(c))A\n3Ia]»Æ3¢(c)C¢;2¤IØ3¬Z(c)sF¤!Y±20¬F<N\nt(]!A]uJ\n<&Z\n)9E±DL3>¥¦3Ia<¢ (3¬(c)«3NFa<\n±^Ga3¬O¬0)A.¤oJ¤(c)«3L3¬33¢<&C\n¥¦¤0¬\n\nEOYZ¤B b¬a± 0¬M VC#G=GAN\ne\n!\n$)(uf\na]Z2(c))A.¤)3)(r)¢¤(c)± a03± 0¬FN\n,\n\n+3LdL+\n!#\"\n3Ld\n\n+\na]Z2(c)oA\n¤o3o 2Z¬aY±20¬0 O¬Z¤o3¢<¥¦¤0¬OJ u(c)¤Ja<¢<±\"A ±^¬\n4»IZ3\n1]Ð»Æ3¬\nR(c)0¬Z¤B»I±^NYZ¤¿3¬μ!»Æ¤0¢3⁄4!OYZ¤bsc&¤0¢!1ON\nv3⁄40!¤LZ3A¤N3¢<¥¦¤0¬OA]±\"§ ¤0¬\nE\n,\n\n+Z3=dL+\n!.\"\n3=d\n\n+\n¥Ø±^]\n¦A\n¤\n¤0(r)Z¤0¥¦¤0¢3(±¬\n0¬¤L0 ØY»uG»Æ3<1Ow\n±^Aa2(c)MA.¤N!!3Ia).C^a0¬μJ¤(c).\n3¬Z(c)o±Ba02(c)a0¬\n!3±^¬I20]± a2§ 3c¢<± 30A]2¤IO»IJ¤CA]±¬Z(c)I±^¬\nZO»I±^\nA\n¤\n¬(c)0¬¤\n»IZ¤¬\n1]<\n¤\nQ\n±\n\n±AI D¢3c¥¦¤NyxA¬μ!E3c¬\n± 3cE¤(c)\nsc&¤0¢<± ¤\n3^¥¦!\n3^»Æ3<1O\n¬Z¤¤(c)\nE\nA.¤\na0(r)±2¤(c)\n»I±^Y\nJ\nZ&zCI?AZ¡V:?>]JANCIM:\" M:\"FACIA0.A<¡ °A\n¤a30XJ¤IYZ¤\n§ 3¢<±230A 2¤\nA]±¬Z(c)I±^¬\nZØ3¢¤¿¤0(r)¤0¥¦¤0¢3ANaO¤¤)¤\nQ\n3¥Ø(r) ¤{)A\n¤20»1⁄4N\nxA !\n0¬U¤G0YZ¤0¢OZ3¬(c). 1 43c¢¤Ca0^2¤a±¬O(c)3!30A\n3J¤?(r)¢¤(c)± C\na3cY±20¬F< ¤;143¢¤¬0)¤(r)¤0¥¦¤0¢3A u3¬(c)1]\n(c)0¬XO\nO»Æ3¬\nO!\na0(r)14¤0¥BN3⁄4ß\nI\n0(r)1±^¬\n53>(c)3cE3A.3J¤Ð(r)¢¤(c)± a03± 0¬Ya3J¤?2<\n0 P¤E(c)3cE3A.3J¤\n±^¬\nY0¢<¥¦3cY±20¬£3<Ja<±23!¤(c)5»I±^I¤\n(r)¢¤(c)± C\na3cY±20¬FNa\n|(A¡K\\(]A<Z\nw\nm-\no\n2\"\n,n]o\n\"\n(\nm\nou(\n!K/\n$\n}xA AYO±Db.¤;1»Æ0¢(c)U3C3o¬Z0¬C\"F=G3⁄4§]3F¤\nA.3Ia) »u3¢(c)>a<Z3±¬O±¬O\n¢;2¤3¢¤«a¤a\n¤(c)5 0¢«J0\"±2¬μ<NØ¶·¤E(c)¤0 30^M±Ao<N~ØJ¤\nw\nmKCB2\"\n,n.o\n\"\n(\nm&C\n(\n!-/\n$\nYFLGo!Ia<Z¤a\nPEE!4¤I(c)3!30A\n3J¤\nJ0Z± 0¬FN\nw\nm-\no\ne\n!\n$\n\n3=d\n\n+\n\nxA S\n±A\n¤J1»Æ0¢(c)U3?3Ð¬0¬C\"F=G3⁄4§ 3\"&¤ u3¬1sc&¤!± 0¬μ)YZ3\na<23±^¥\n!3c¬F!»Æ¤0¢\ne\n!\n$1(uf\n3¢¤L¢;¬\n!ÐJ0±2a<±^A¥¦0¢¤ÐJ0\"±2¬μ\nD¢0¥\n¤AJ¤0¢N¶·¤¿(c)¤0 Y30Z\n±DRFLGAN\nJ\n<&Z\n)95J¤OYZ¤M(c)3!30A\n3J¤ iA\n3Ia]»Æ3¢(c)Ð¢;2¤I< 3¬Z(c)sF¤!Y±20¬FO!oJ3±A! 1U¤\nsF¤¢!1\n(r)¢¤(c)I±2a3±20¬FN\nP\n3Ia5±¥¦¤G;\n<Z&O9I A±¬Z(c)]P3\nJ0\"± 0¬5!\ne\n!\n$)(uf\n±Ca3cA\nYZ¤Ga0¬\n±^¬]F3± 0¬F ð(r)]3<!±^¬\nÐ±^¦3G^±D!Ø3c¦a0¬\n!3±^¬F¦Z¤G3¬F!»Æ¤0¢23c¬(c)M±¬O Y0¢<¥¦3±2¬\n30A.Z(0»3¤)3¬F!»Æ¤0¢S»Æ3Ø(c)¤0¢<±\"§ ¤(c)]N\nJ\n<&Z\n)9£(c)¤!¬O\n2¢¤0A¢<¬Y3¬5±^¬\n!¤0¢¤!±¬O4§]3F¤N%vR¢<¥S3×1\nYZ¤a0¬O±¬.&3±2¬\n(r) ¤0¢< Y0¢<¥B¿J0¥¦¤G3Ia<±20¬U»I±^YI¤3a<\nJ0Z± 0¬FNð4a03¬>a0^ ¤a3⁄4§ 3cF¤I¦±^¬U¤Ga0¬C\nY±^¬]F3± 0¬μ O0¢E¢¤0DZ¢<¬\n§ 3\"&¤YEI0¥¦¤3a3^ ¤0¢\nGJ\nZ&O9\n!±¬OU!μA?\\Ø\nAAIXA: !A.X? (0¢°J0¥¦¤4!±^¥Ø±23¢NaX±A!(r)\n0¢<¥BN(aFa<5J¤L0 ¿FA?\\\n3c¬(c)4AAIXA:\nEA0.X\n3c¢¤B^±E\n¤B¤SO¢0 0kCR Y¤3A¢¤NOa\n¤¤¿¤\nQ\n3¥\n(r)2¤{?O¢<Z]]N\n\nBasic Joshua Dictionary\nApril 2003\nI¬1420]± aL§ 3¢<±230A 2¤)J¤(c)°±^¬\ne\n!\n$1(uf\na03¬«A\n¤o¢¤ ¤0¢<¢¤(c)>!Ð3 ?YZ]¤;14»Æ¤0¢¤\n¤\nQ\n±2a33⁄4aX±D!(r)Ð§ 3¢<±230A] ¤O»I±^YO±¬\n,\n\n+Z3=dL+\n!.\"\n3=d\n\n+R\nJ\n<&Z\n)93¤!E3A ^±D!Z¤)3LA ±^¬(c)±¬O\na0¬\n!¢U ¢U¤\n2]±2aE§]3¢<± 3A 2¤<Nß2a\n¤¤\n¤\nQ\n3c¥Ø(r)2¤\nA\n¤0 0»1⁄4NaxA¬\nO±DUJ¤0¬FJ¤\nJ\n<&Z\n)95±DA^±E\n¤GAIOa0¥1⁄2A ±^¬¤(c)N»I±X¿]AC.NiaX±E\n¤GAI μ;\n<Z&O9Y¤!!30A]±A!C\n¤IS2¤\nQ\n± a03uA]±^¬(c)±¬OUa00¬\n!¢S Y0¢)YZ¤C 0]± a¿§ 3¢<±230A 2¤S±¬°Z¤sc&¤0¢!1ONðaX±E\n¤X¿?AVC]\n±1⁄2±^E¤0¢3±\"§ ¤0\n1oa03A\n¤Ca0¬OY±^¬]F3± 0¬>¬UYZ¤C3¬F!»Æ¤0¢NO¢)3P(c)±AJa;<!±20¬°0\nJa00(r) C\n±¬O3¢;2¤wØaO¤¤\nYZ¤5J¤a<± 0¬\n\"\n\n3c¢<± 30A]2¤I3¬(c)YaOa0(r)±^¬\n\n±¬ !]F3 \"\nR(r) 3c\n¤\n\n3c¢<± C\n30A 2¤JC3c¬(c)CaOa0(r)±^¬\n\nC\"±^¬CB !]&3Ca\nPI\n¶x'vØN\nJ\n<&Z\n)9\na03^Do¤«a00¬\n±¬.&3±20¬I 2¬Za<± 0¬I»±£3\nE±^¬\n]2¤E3¢<¥¦¤0¬\n; 2\"\n,no\no\n\"\n(\nm\no\n1!1?\n(3\nu3o^±D!)a0¬O!3±¬O±¬O4±¬O Y0¢<¥¦3±2¬530A\n<ZOYZ¤U0\"±2¬E(r)¢a0¤I<<Nu¶·¤\n±A!\na0¬\n!3±^¬F\n¤2±^¬F!!3¬OY±23!¤(c)ksc&¤0¢!1O ·±;\n¢;o§]3F¤ ð3c¬(c)LYZ¤LYZ(r)(r)]0¢<1⁄2 Y0¢O¤\nsF¤¢!1\n\nYZ¤) Y0¢<¥\nYZ¤P(r)(r) 0¢<\n§ 3c¢<± ¤< ð(c)¤(r)]¤0¬(c)±¬OÐ0¬ÐZ»I¤sc&¤0¢!1M»Æ3BJ3!C\n±D! A± ¤(c).N\n¶F1(r)±2a3c×1N1 OO\nR»Æ3¬OBEN(c)¤31⁄20¬\n×1°»I±^Y«(r) 3c¢<O0 SYZ¤L±^¬\n0¢<¥¦3± 0¬«(r)¢§±2(c)¤(c)±¬\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n¢3cYZ¤0¢P3c¬E»I±E¤Ð¤0¬\n±¢¤N±A!;NO0¢P±^¬F!!3¬Za¤ i1]5¥Ø±^]\n\n»Æ3¬\nØ!LJ¤¤G0¬\n×1¤G3¬F!»u¤¢\n0¢2¬O\n1N¤G(c)3cE3A.3J¤?(r)¢¤(c)± a03± 0¬°YZ31⁄2¥S3!a<¤(c)\nYZ¤¿3¬μ!»Æ¤0¢ 0¢B¬O\n1P¤?Z(r)(r)]0¢<( ¢S¤)3¬F!»Æ¤0¢N\n!]&3(r)(r)^±2¤IO\"\n,,M$\nM\n(&\n!\n+-,13Ld\n\n+\n2EL¤\nQ\n¢3IaØ§ 3¢<± XO¤0 ¤0¥¦¤0¬\n;O0 ØYZ¤G±A!¦±¬\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n¥¦3 ±^¬\nM±R30§ 3±^230A 2¤B!\n1 Ð ¢S±^¬\n!¤0¢<(r)¢¤0!3± 0¬μN\nxD¬3I(c)(c)I±^± 0¬μ I!.&32(r)¢§±2(c)¤\n,\n\n+$M+ZdL$M+K,M$q&\n!\n+K,)3Ld\n\n+\nS3R¤\nQ\n¢3Ia\nJ¥S¤¿¤02¤0¥¦¤0¬\n\n1⁄2¤C±A!\n±¬i2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n3¬(c)±^¬\n!¤0¢<(r)¢¤0\n±\n¢S1]N8¶OZ¤J¤C 2¬Za<± 0¬μS ¤0\n(r)]!Y(r)]0¬¤£(c)¤3^±¬O\n»I±^\nYZ¤E(c)¤!3±^A50 2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n3¬(c)\n3Ia0a¤<J0¢\n2¬Za<±2¬μ)¬O±\n1]\n¬Z¤¤(c)>¤0¥\nY0¢M¥¦0¢¤3I(c)c§ 3¬Za¤(c)>»Æ0¢N1⁄4aOA.¤0 Y0¢¤o¢¤3I(c)±¬O\n¬o1]4¥Ø±^]\n¦»Æ3¬\n¦!']±(r)U3¤3I(c)!CZ¤J¤a<±2¬\n\"\na.Y¢¤3¥\n±^¬\n±^¬\n>¶F1(r)± a03\nI\n0¬C\nY±^¬]F3± 0¬\n^\n¤sc&¤!;2»I±\nI\n0¬]§ ¤0¬O± ¤0¬a0¤gμ¬Za<± 0¬μ \"\n3¬Z(c)\nJ¤¤N± A¤J¤N 2¬Za<±2¬μ\n¥¦¤¤u1]<Z¢Aa¢<¢¤0¬\n\n¬¤¤(c)]<N\nContinuation Argument\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n3^±D!R 1⁄4Z¤B Y0^ 0»I±^¬\nM Y0¢<¥bw\n-\n¶·¤¿ A±¢!1⁄2¤0 ¤0¥¦¤0¬O3⁄4±D\n3c»Æ31\n1⁄2Z¤B¬\n±^ D±2¤(c)sc&¤0¢!1O 33⁄4±A< ¤sF¤0¢!1LYZ33⁄4»Æ3\n(r)]3<J¤(c)4!PJ\n<&Z\n)9ð 1⁄4»I±^\n3(r)(r)¢(r)¢<±23!¤o§ 3¢<±230A 2¤G±^¬F!!3¬\n±23!¤(c)\n3 L3«!±2(c)¤C\n¤0 A Y¤a<R uZ¬\n±^ D±2a3±20¬FN\n-\n¶·¤NJ¤a0¬Z(c)Ð¤2¤0¥¦¤0¬\n¦±AA¤G¢;°§ 3\"&¤L0 ØYZ¤0sF¤0¢!1\nN\n¶·\n±AOa0¢<¢¤!(r)]¬Z(c)]BE\nZ¤MY¢;ZI§ 3cF¤N S¤M¥¦3!a\n±^¬\nI(r)¢¤(c)I±2a3±20¬\n±^¬\nZ¤N(c)3!30A\n3J¤N3B¤M±^¥¦¤\n;\n<ZOZ\n9I21\n¤(c)G3\n±;N\n-\n¶·¤C¢¤!¦0 R¤P¤0 ¤0¥¦¤0¬\n;B3¢¤CYZ¤MZ(r)(r)]0¢<Ø 0¢¿¤C±^¬F!!3¬\n±23!¤(c)Tsc&¤0¢!1ON\n¶OZ¤\nZ(r)(r)]0¢<Ca3c¬5!3\n¤IJ¤§ ¤0¢3¦ Y0¢<¥B<\n(c)¤0(r) ¤0¬Z(c)I±^¬\n50¬\n0»\nYZ¤isc&¤0¢!1\n»Æ3NJ3±DJC\nA± ¤(c).N\n°\n4LZ¤0¬Ð¤sc&¤0¢!1M±DBJ3±A! D±2¤(c)?AI1M¥¦3!a<\n±^¬\nÐ3C(r)¢¤(c)± a03± 0¬Ð±^¬Ð¤?(c)3!30A\n3J¤\n¤C(r)(r) 0¢<\n±DR3R(c)3!30A\n3J¤)<A<EJ¤a<;N\n\nApril 2003\nBasic Joshua Dictionary\n°\n4LZ¤0¬E¤sc&¤0¢!1\n3¬F!»u¤¢a0¥¦¤2 D¢0¥\n3Ua0¬EE¬a± 0¬\nß2]<Za Æ¤°(r)(r) 0¢<\n±A?¤ID1¥1⁄2A.0S]c<F\nY020»Æ¤(c)UAc1\nYZ¤A.3a]»Æ3¢(c)E(r)(r)]¢<2 Y0¢N¤3Ia<Y0 O¤\na0¥\n(r) ¬Z(c)?(r)¢¤(c)±2a3±2¬μ<N\n°\n4LZ¤0¬4Z¤gsF¤0¢!1>3¬F!»u¤¢La0¥¦¤O A¢¥\n3Ð(c)I±AE¬Za<±2¬\nß^]Aa IYZ¤Ð(r)(r) 0¢<B±D\n¤ND1¥RA\n0( A\nY0^ 0»Æ¤(c)MAc1Ð¤NZ(r)(r)]0¢<¦ Y0¢2¤N!±^¬\n]2¤C(r)¢¤(c)I±2a3cY±20¬> A¢0¥\n¤O]AB3\n&aa0¤¤(c)¤(c)]N\n°\n4LZ¤0¬\nYZ¤gsc&¤0¢!1>3c¬F!»Æ¤0¢G±D2(c)¤0¢<±\"§ ¤(c)Ð D¢0¥\n3MA.3Ia) »u3¢(c)Ð¢;2¤\n¤(r)(r) 0¢<\nZ33⁄4Z¤B Y0¢<¥¦3c\naa\nqjI0ooqjI0o|skoIu\n\nqjc0o|ijfqmcu\n»IZ¤0¢¤\n-\n(\n!-/\n$\n±DR¤CD1¥1⁄2A.0I¢;Z ¤\n-\n(\n!-/\n$JoL+\n\"?\n$\n±A3⁄4Z¤B¬3c¥¦¤¿0 1⁄4¤O¢;2¤SJ¤(c)?!CJ3±D! ^1G¤sF¤¢!1\n-\n(\n!-/\n$Jo\n)!@c\n(M3\n±AL3°±A!Ga0¬\n!3±^¬\n±^¬\n3ß^¢¤a¢!±\"§ ¤0\n1]aOYZ¤NA\n3Ia) »Æ3c¢(c)Z(r)(r)]0¢<\nJ¤(c)CECJ3±D! ^1G(r)]3¢<;1⁄20 1⁄4¤O¢;2¤SA\n(c)01ON\n°\n4LZ¤0¬IYZ¤sc&¤0¢!133c¬F!»Æ¤0¢4a0¥¦¤N A¢¥\n3sc&¤!± 0¬F 1⁄2¤5Z(r)(r)]0¢<M±AN^±E\n¤\n3cL Y0¢U¢;2¤I< 1⁄2¤\nQ\na0¤(r)L3L±GXJ¤IZ¤sc&¤!±2¬U¬3¥S¤>±^¬F!!¤3I(c)\nG¤\n¢;Z ¤O¬3¥¦¤N\n°\n4LZ¤0¬5YZ¤sc&¤0¢!1«3¬μ!»Æ¤0¢Na00¥¦¤? D¢0¥\n¤o(r)¢¤(c)I±2a3cE¤AJ\nZZ[9F?\\(I0¢\n;\n<Z& AFA0?D?>VGA.\nYZ¤\n(r)(r) 0¢<\n±A\n¤\n¢¤!(r) ¤aY±\"§ ¤\nD1¥RA\n\n¬Z3¥¦¤\nßUJ\n<&Z[9F?\\(\n0¢P;\n<ZOZ[A&A0?D?>VG^Aa\n020»Æ¤(c)\nAc1\n¤EZ(r)(r)]0¢<P ¢U¤\n(r)¢¤(c)I±2a3±20¬NYZ3ØJ¤0¢;§ ¤(c)G3 3⁄4¤CD1¥RA.0O×Ø3¢<¥¦¤0¬OJN\n°\n4LZ¤0¬U¤sc&¤0¢!1Ð¢<±^]±^¬3!¤\nA¢0¥I3c¬LJ\n<&Z\n)90¢23¬L;\n<Z&O9;:L<Z]J\n¥¦¤0(c).\n¤\n(r)(r)]¢<C±AP»IZ3!¤<§]¤¢ÐYZ¤U»I¢<±^E¤0¢0 2YZ3C¥¦¤0(c)\n(r)¢§±2(c)¤(c).N\naO¤¤EYZ¤\nJ¤a<±2¬\n\"\nI\n!!0¥Ø±u7<±^¬\n\nYZ¤¡Æ3!3¢xD¬Z(c)¤\nQ \"\n±¬£Z !#\"\ni%$¤&'$1(*$M+K,M$\ne\n\"\n+\n!#\"]/AN\nxD¬°Ja¤0¥¦3±2aS Y0¢<¥B XYZ¤O2\"\n,Mn.o\n\"\n(\nm\no\n1!1?\n(3\n^±D!\nØ3R Y0^ 0»1⁄4w\npeoMnky¥gkqJþ|ijfqmIrimFy\na\njsr0æcroþk¦Ijoq;c\n0mqjme|§kc0jo\n\nþoqr§kmrfs\nu\na\n\na\njsræIroþu¦joqJc\nu\na\nm æ1\nu\n\nBasic Joshua Dictionary\nApril 2003\na\nþoqrM§kmrfs\nu\nxfiir<nr0IrmroiNæfqCmeoioMoc0oosmiMkq<oFy\na\nþkmknkiokqoþ]rykmrfs\nu\na\nzlyfsajsym(c) ?þoqr§kmr<fs\nkIyfsajsymaCþoqr§Ikmrfs\n\nu\na\n}yijyyoiiIæ0jc?þ]riajsymCþoqrM§kmrfs\nu\naa\ny{v]q<jI0oMsko\nuyfsajsym(c) Pm æ2þoqrM§kmrfs\nkyfsajsymaMm æ?þoqr§kmrfs\n\nu\naa'«\n{vdp];}¦joimrfsMskIo\nuIijyyooþokq<tjosm\nu\na'¬\n}þIoqr§kmrfs\nu\na\nxy}zN(r)vþoqr§kmr<fs\nu\nExtracting Parts of the Continuation with Accessor Functions\n!]&3L(r)¢<§± (c)¤S Y¢C3Iaa0¤<J¢2 2Z¬a<±20¬FS!P¤\nQ\n¢3IaO!(r) ¤a<±^ D±2a2(r) 0¢<±2¬μB0 2\"\n,no\no\n\"\n(\nm\no\n1!1?\n(3\nN~ØJ¤)¤J¤) b¬a± 0¬F\n± u1]°»Æ3¬\n1⁄2E2±¬OE¤0¢<(r)¢¤0R¤?3¬μ!»Æ¤0¢Ø1]¢C\nJ¤^ !N~ØJ¤C¤Pa0¬.§ ¤0¬\n±2¤0¬a¤C b¬Za<± 0¬μB(c)¤Ja¢<±A\n¤(c)LA.¤0 0»U±\n1]I»Æ3c¬\n\n¤D1O!!¤0¥\nEO±¬O!¤¢<(r)¢¤0(¤O±¬O Y0¢<¥¦3±20¬N Y0¢3⁄41]N\nJ\n<&Z\n)9;:=F.AA<¡\nPRQ\nY¢3a<;A¤P±¬μ!E3c¬\n± 3cE¤(c)sc&¤0¢!1Iß^YZ¤G A±¢!A¤02¤¥S¤¬O!a3⁄4 A¢0¥\n2\"\n,n.o\n\"\n(\nm\no\n1!1?\n(3\nNc0¢B¤\nQ\n3¥Ø(r) ¤?w\na\nki¥\nu\n\nca\n0knþk\na\nnky¥gkq;þ|ijfq<mIu\na\nqrsm\na\nki¥|¦Ijoq;cNnky¥gIkq;þ|ijfq<mIuuuu\nJ\n<&Z\n)9;:=F.AA<¡:\"!A!:BD.G\"A\nPRQ\nY¢3a<;CYZ¤o¢;ZY§ 3F¤0 OZ¤o±^¬F!!3¬OY±23!¤(c)sc&¤0¢!15ß^¤\nJ¤a0¬(c)P¤2¤0¥¦¤0¬\n!au D¢0¥£2\"\n,n.o\n\"\n(\nm\no\n1!1?\n(3\nNc0¢B¤\nQ\n3¥Ø(r) ¤?w\na\nki¥\nu\n\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nki¥|¦Ijoq;c|mqjme|§kI0joMnky¥gkq;þI|ijfqmIuuuu\nJ\n<&Z\n)9;:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\nPRQ\nY¢3a<;OZ¤(c)3!30A.3 J¤AEJ¤aA3B¥¦3!a<Z¤(c)\ne\n!\n$)(uf\nNxA ¦¤\nA\n3Ia]»Æ3¢(c)°(r)(r) 0¢<¦±AO3L¢;2¤I\n(c)±D!(r)23<1OAYZ¤G¢JZ ¤G¬Z3¥¦¤NßDJ¤¤\n¤\nQ\n3¥Ø(r)2¤T ]aN~\nJ¤N\n±A? 2¬Za<± 0¬\n0¬\n×1I»¤0¬I1 °]¬0»\n¤\n(r)(r)]¢<\n±D\n(c)3!30A.3 J¤\nAEJ¤a\nß3c\n±D<\n»±\nB<O-:\n>.C9\\3⁄4]A<Z:\"A<G^ASFLGANO¢B¤\nQ\n3¥Ø(r)2¤@w\na\nki¥\nu\n\na\n0kInþk\na\nnky¥gIkq;þ|ijfq<mIu\na\nqrsm\na\nki¥|þkmknkio|qoþ]rykmrfsLnky¥gkq;þ|ijfqmIuuu\ny þf|nky¥gkqJþ|qjIoiMsru\nJ\n<&Z\n)9;:=<OAIA0ED.!^]\nPRQ\nY¢3a<;\n¤£Z(r)(r)]0¢<I±^¬\nY0¢<¥¦3cY±20¬\n±¬£2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\nN\naC3.¤\nY¤0»Æ¤0¢\n3<¥Ø(r)± 0¬μUZ3¬\nJ\nZZ\n)9;:L<.J?>O<A@:\nAFAA@<OLC]]\n30A\n»¤0¢¤5¤U(r)(r) 0¢<>a3¥¦¤\nD¢0¥BNOO0¢\n¤\nQ\n3¥Ø(r)2¤@w\na\nki¥\nu\n\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nki¥|þIoqr§kmrfsLnky¥gIkq;þ|ijfq<mIuuuu\n\nApril 2003\nBasic Joshua Dictionary\nStreamlining Typical Continuation Requests with Convenience Functions\n4L¤0¬33c¬4J\nZZ\n)9±sc&¤0¢!1\n&aa0¤¤(c).<\nYZ¤0¢¤°3c¢¤4J0¥¦¤\n!!3¬(c)3¢(c)\nYO±¬OZ)1]<\n¥Ø±]O1⁄2»Æ3c¬\nØEG(c)?»I±^YUZ¤C3¬μ!»Æ¤0¢\n&a>3wð(r)¢<±^¬\n±^¬\nU0¢O 0¢<¥¦3±¬Oo¤)¬O± C\nD±2¤(c)sc&¤0¢!1O 1⁄4(r)]¤0¢3±¬O0¬¤(c)3!30A.3 J¤o(r)¢¤(c)I±2a3cY±20¬3Z(r)(r)]0¢<Y±^¬\nEYZ¤sF¤¢!1O 1⁄40¢\n±¬OE¤0¢<(r)¢¤0Y±^¬\nN3^Æ0 1⁄4¤SA\n3Ia) »Æ3c¢(c)M(r)(r) 0¢<;N\n!]&3M(r)¢§±2(c)¤A A±§ ¤La0¬.§ ¤0¬\n±2¤0¬a¤G 2Z¬aY±20¬FA3cS¤\nQ\n¢3IaS3c¬43(r)(r)¢0(r)¢<± 3cE¤G(r)]3¢<\nNYZ¤53¬μ!»Æ¤0¢«3c¬(c)\n±^¬\n!¤0¢<(r)¢¤0Ð±Ð±¬\nJ0¥¦¤3!(r) ¤a± A± a\n»u3<1\nNA¶OZ¤E A±¢!Ð Y¢E3¢¤\nJ\n<&Z\n)9\na0¬OY±^¬]F3± 0¬U 2Z¬a<±20¬F<N1⁄2¶OZ¤I D±^ D\n±Ao3YE(r)]¤a<±232C(r)¢<(r)]J¤I 2¬Za<±2¬\nYZ3L2¤0JG1]<U(c)\n(c)3!30A.3 J¤I Z(r)\n0¬\n×1\nØ3¬(c)±^¬\n!¤0¢<(r)¢¤0LZ¤\n3¬F!»Æ¤0¢°±¬\nJ0¥¦¤\n»Æ3<1ON2J\nZ&zX¿]A:\"?D\nAIA:=<Z];?>\nA@:HAFA0A@<O=C.!^]£J¤E;\n<ZOZ\n!\nJ¤3¢a<\nYZ¤¿(c)3!30A\n3J¤¿3¬Z(c)G¤\nQ\n¢3Ia<\n¤B(r)¢¤(c)I±2a3cY±20¬FßAJau¥¦3!a<O±¬OL±^;1⁄23¢<Z¥¦¤0¬\n\n(r) 3!¤0¢<¬FN\n¶O¤J¤O 2¬Za<±2¬μ1⁄23c¢¤@w\nJ\n<&Z[AFA^FM:LF]XAIA<¡\nPQ\n¢3Ia<;3¬(c)(c)I±A!(r)23<1OLYZ¤ÐZ¬\n±^ D±2¤(c)°sF¤¢!1ON20¢U¤\nQ\n3¥¦C\n(r) ¤?w\na\nki¥\nu\n\n'qrsm|¦joq;cu\nJ\n<&Z ¡:LF]XAIA<¡\nPQ\n¢3Ia<;\nYZ¤OZ¬\n±^ D±2¤(c)ksc&¤0¢!1o3¬(c)M(c)±A!(r)23<1OØ±^R±^¬ Y0¢<¥¦3!C\n!¤(c)? Y0¢<¥BN\nJ\n<&Z[AFA^FM:LF]XAIA<¡V:A0A;G^J\n¶i3.¤G¤Ð±^¬\n0¢<¥¦3± 0¬\n±^¬°2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n3c¬(c)\n(c)±DJC\n(r) 31\nR±^(»I±^Ð3¬\n¬Z!3±20¬F<N\nJ\n<&ZHW\nA?AF:LF]XAIA<¡V:A0A;G^J\n¶·¤¿3A.§ ¤O±¬N]¢3(r)N Y0¢<¥BN\nJ\n<&ZHX¿?A:\"?D\nAIA:L<Z]J]>μO<A@:BAFAA@<OLC]]\nO0¢M!(r) ¤a± 3Ra3 J¤I¿0\nYZ¤oJ\"±20¬I(r)¢a¤<< 8»I¤0¢¤)1]<\n21U¬O\n1N±¬UZ¤C(c)3E3A.3J¤? Y0¢23¬>3¬F!»Æ¤0¢\n¤\nQ\nY¢3a<;S3c\n(c)3!30A\n3J¤I(r)¢¤(c)± a03± 0¬FZ3CZ¬\n±^ 1\n»I±^I3\n(r)¢¤(c)±2a3±2¬\n(r)]3!¤¢<¬\n3¬Z(c)«3c(r)(r)±2¤oJ0¥¦¤U 2Z¬a<±20¬Y!>¤3Ia<μN_0¢¤\nQ\nC\n3¥\n(r)2¤?w\na\nIk|f§Ioq|þkmknkio|qoþ]rykmrfsi\nu\næ0ff03 jsmocu\n;\n<Z&zX¿]A:?D\nAIA:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\n±D\n¤sc±\"§ 3IC\n2¤0¬\n(!?w\na\nki¥¦joqJcca\n0knþIk\na\nu\na\næ0jsykIGyfsmr<sjkmr<fs\na\nki¥|þkmknkio|qoþ]rykmrfs uuu\ny2þf|nky¥gIkq;þ|q<jI0oiLsr0u\n4¤LJ¤UJ0¥¦¤Ð A¤oa0¬.§ ¤0¬\n±2¤0¬a¤ b¬Za<± 0¬μ)±^¬«¤o¤\nQ\n3¥\n(r)2¤)!2J\nZZ\n)9ðN\n0¢S¥¦0¢¤¿0¬Ð¤3Ia<N b¬a± 0¬F X(r)2¤3J¤¿a00¬F^(±^;1⁄2(c)±2a<± 0¬Z3¢!1L¤0¬\n¢!1ON\n\nBasic Joshua Dictionary\nApril 2003\nExamples of Using joshua:ask\na¤0<O×\n(c)¤0 D±^¬¤IJ0¥¦¤Y(r)¢¤(c)±2a3!¤< ¿¤0¬\n!¤0¢¤0¥\n±^¬\n!Y¤3(c)3!30A.3 J¤I BZ¤¬\n3I(c)(c)£3\nA.3Ia) »u3¢(c)E¢;2¤43¬Z(c)53>A\n3Ia) »Æ3c¢(c)sF¤!Y±20¬FNR¶·¤>¢;Z ¤\n(c)¤0!¤0¢<¥Ø±¬Z¤M»IZ3P±AN3¬\n¤3cE¤0¢IO×P 30§ 0¢<±!¤U Y(c)]N\n¶O¤sc&¤!± 0¬3¤0±2a<±^;P±¬O Y0¢<¥¦3±2¬Y!\nJ3±D! ^1«¤U¢;2¤O×\n\nA]\n3cDN\na\nþoIæcrso|qoþ]rykmoNæk§fqr<mo|okI\na\nokmoqGæ0ffþuu\na\nþoIæcrso|qoþ]rykmoMtjμμI0oi\na\nokmoqPæffþuu\na\nþoIæjsMokm|rm\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\næ0k§fqrmo|IokIPnokqiLefsocI\nu\næ0k§fqrmo|IokIIfi¦jr<mfoi0ofIo\nu\næ0k§fqrmo|IokIPir;þoq<iNæIr<oi\nu\næ0k§fqrmo|IokIIfs¥ocIiMnkskski\nu\ntjμμIoiMmoþ°ryo|yqokIu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\ndefgLhfiejkMlkmknkio\npqjoMmer<sti\nu\n~z}y]Jpv|wvzk(r)vzydM}v\nu\n~z}y]Jpv|wvzMw}d\n«\n{];p}vdMxv}xv\nu\n~z}y]Jpv|wvzMdx ;lvydL~];vd\nu\n~z}y]Jpv|wvzMw}\n¬\nvd0(r)zzIzd\nu\n{··vdMpvlU;v|yvzw\n~kIioMmersti\nfso\na\nþoIæcqjI0oLsfm|Iæcrsry¥c\na\nyAnky¥gkq;þu\nr0æ\nu\ntjμμI0oi03okmoq3Iæ0ffþ\nmeos\nu\næk§fqr<mo|okI3okmoq3Iæ0ffþIIu\na\nþoIæ)¦joimrfsMtjμμI0oq3\na\nyDnky¥gIkq;þu\nu\ntjμμI0oik3okmoq3cæ0ffþcu\nv3⁄4¤\nQ\n2»Æ¤G;\n<Z&O9E»I3b !.&3]¬0»1⁄4L30A.ZC¤<§ ¤0¢!1A\n(c)01ZO×C 30§ 0¢<±!¤Ð¥¦¤3A<N\nPRQ\n3¥\n(r)2¤OXJ¤I)Z¤P§]3¢<± 3A 2¤¿±^¬EYZ¤PZ¬\n±^ D±2¤(c)sc&¤0¢!1>!M(r)¢<±¬O)3¬\nP\n¬\n]^±D!ZC^±E\n¤\nJ¤¬O!¤¬Za¤Eß¬Z> 2X<D1\n3A.>¬]Z¥RA.¤0¢Y3]¢¤¤0¥¦¤0¬\nUA.¤0»Æ¤¤0¬\n\nA<EJ¤a<43¬Z(c)\n§ ¤0¢;A.a\n30A.ZA¤§ ¤0¢!1A.(c)01ZO×B¥¦¤3D<N xA¦±^]¬0¢¤BYZ¤2\"\n,Mn.o\n\"\n(\nm\no\n1!1?c\n(3\n3c¢Z¥¦¤0¬\nB3¬(c)JC\n¤I?3M E]AX¿]?(c)I±^¢¤a±§ ¤NxAB )±¬«YZ¤(c)3!30A\n3J¤N3¬(c)¢;2¤< 8AZA¬Z0A±^¬1sc&¤JC\nY±20¬F<N\n\nApril 2003\nBasic Joshua Dictionary\nv kI0oT\n\na\nki¥\nu\næ0k§Ifqrmo|okI3okmoq3Iæffþ\nca\nknþk\na\nrtsfqoIu\na\næ0fqIkmMm¶o»odoriMmeokq<oIæ0oqq<oþæ0ffþofIæod\n\n¶3Iæ0ffþ3okmoq0uuu\n(r)zzIzdÐr<iMmeo0qoIæoqqoþÐæ0ffþNfIæPw}\n¬\nvId\n\n~];vdÐriLmeokqoIæ0oqqoþæffþofcæPdx]Jlvyd\n\nxv}xvÐriLmeo0qoIæ0oqqoþÐæ0ffþNfIæPw}d\n«\n{];p}vd\n\n}v°riLmeokqoIæ0oqqoþæffþofcæ(r)vzIyd\n\n;v|yvzworiMmeokq<oIæ0oqq<oþæ0ffþofIæGpvl\n\nPRQ\n3¥\n(r)2¤1⁄45(r)¢<±^¬\n;MZ¤>±¬μ!!3¬\n±23!¤(c)1⁄2sF¤¢!1\nY0¢>¤<§]¤¢!1A\n(c)1ZO×¥¦¤3D< (!±^¬\n\n¤\na0¬]§ ¤0¬O± ¤0¬a0¤L b¬a± 0¬F OJ\nZZ[AFA^FM:LF.AIA<¡XNxA¦XJ¤I¿¤N(c)3!30A\n3J¤N¬O\n1O\n±^]¬0¢C\n±¬OGA\n0YN¢;Z ¤Ø3¬(c)sF¤I!±20¬F<N\nv kI0oka\n\na\nki¥\nu\næ0k§Ifqrmo|okI3okmoq3Iæffþc'qr<sm|¦joq;cYy þf|nky¥gkqJþ|qjIoiMsru\n3⁄4\nqrsmCajimLmefioorsMmeoGþkmknkio\nu\n~z}y];pv|wvzLw}\n¬\nvdk(r)zzzId\nu\n~z}y];pv|wvzLdx];lvydM~];vd\nu\n~z}y];pv|wvzLw}d\n«\n{];p}vdMxv}xv\nu\n~z}y];pv|wvz0(r)vzydM}v\nPRQ\n3¥\n(r)2¤¿°(r)¢<±¬OJ?¤N±^¬F!!3¬OY±23!¤(c)sF¤¢!14 Y0¢L¤o¥¦¤3DG0 ¦A\n¤3¢< I!±^¬\n«¤\na0¬]§ ¤0¬O± ¤0¬a0¤\nb¬a± 0¬F )J\nZZ[AFA^FM:LF.AIA<¡XNgxA\n21Z3±¬\n¤\n(c)3!30A\n3J¤\n3¬(c)\nA.3Ia) »u3¢(c)?¢;2¤< FA\n¬0(±^¬sF¤!Y±20¬F<N\nv kI0okA\n\na\nki¥\nu\næ0k§Ifqrmo|okIGnokq<ik3Iæ0ffþ'qrsm|¦joq;cu\n3⁄4\nqrsmLfjmMnokqiZAæ0k§fqrmo|okILæ0ffþi\nu\n~z}y];pv|wvz0(r)vzydM}v\nPRQ\n3¥\n(r)2¤g I(r)¢<±^¬\n;2¤N(r)¢¤(c)I±2a3cY±20¬5AEJ¤aO3cCJ3±A! D±2¤(c)°¤s&¤0¢!1I Y0¢¤<§]¤¢!1]C\nA.(c)01OO¥¦¤3AAX!±¬O>¤3Ia0a¤<J0¢C b¬aY±20¬ÐJ\n<&Z\n)9;:=<Z.J?>\nA@:BA&A0A@<O=C]!^]ON\nxD?2G±^¬YYZ¤°(c)3cE3A.3J¤°3c¬(c)>A.3Ia) »u3¢(c)4¢;2¤I< uA?¬Z0?±¬AsF¤I!±20¬F<NAv3⁄40±2a¤\nYZ3¦»IZ¤¬I¤0sc&¤0¢!1Ð±D2J3±A! D±2¤(c) A¢0¥\n3L¢;Z ¤\n¤G¢;2¤G¬3¥S¤C±AA(r)¢<±¬O!¤(c).\n¬0\n3)(r)¢¤(c)I±2a3±20¬ÐA<EJ¤a<;NRxA\n±A\nA\n¤I!3⁄4EBJ¤1⁄2J\nZ&O9;:L<Z]J]>μO<A@:BAFAA@<OLC]]>»I±^Y\nB<O-:B>μ#C9V\\3⁄4.A<Z:AG^ACFLGA 8Z3A±D<\n»IZ¤¬U1 ¬Z»\nYZ¤Ð(r)(r) 0¢<A±D)0¬\n×1U±¬\n¤\n(c)3!30A\n3J¤N\nv kI0oA\n\na\nki¥\nu\næ0k§Ifqrmo|okI3okmoq3Iæffþ\nca\nknþk\na\nnky¥gkq;þI|ijfqmIu\na\nqrsm\na\nki¥|þkmknkio|qoþ rykmr<fsMnky¥gkqJþ|ijfqmIuuuu\nu\n~z}y];pv|wvzLw}\n¬\nvdk(r)zzzId\nu\n~z}y];pv|wvzLdx];lvydM~];vd\nu\n~z}y];pv|wvzLw}d\n«\n{];p}vdMxv}xv\nu\n~z}y];pv|wvz0(r)vzydM}v\na\ny{vM}p|~];]J\n¬\nu\nPRQ\n3¥\n(r)2¤TA(r)¢<±¬OJ)¤M±^¬F!!3¬OY±23!¤(c)sF¤0¢!1° Y0¢L¤§ ¤0¢!1A.(c)01ZO×¿¥¦¤3A<NxASXJ¤I)¤\n(c)3!30A\n3J¤ XA.3Ia) »u3¢(c)G¢;Z ¤< c\"\n+\nmsF¤I!±20¬F<NRv3⁄40!¤¿3R»Æ¤P(r)(r)^±2¤(c)\nE!Ø0¬¤?3¬C\n!»Æ¤0¢¦±^¬\n!¤0¢3Ia<±\"§ ¤0\n1P!B¤sF¤I!±20¬F 3cZ]N»Æ¤¿a0<Z (c)C30§ ¤C(r)(r)^±2¤(c)C¥¦0¢¤IN\n\nBasic Joshua Dictionary\nApril 2003\nv kI0okA\n\na\nki¥\nu\næ0k§Ifqrmo|okI3okmoq3Iæffþc'qr<sm|¦joq;cYy þf|¦joimrfsiMmIu\n3⁄4\nff¥NæfqCnky¥gkqJþk¦joimrfsiMkiCgoI\nu\n~z}y];pv|wvzLw}\n¬\nvdk(r)zzzId\nu\n~z}y];pv|wvzLdx];lvydM~];vd\nu\n~z}y];pv|wvzLw}d\n«\n{];p}vdMxv}xv\nu\n~z}y];pv|wvz0(r)vzydM}v\nu\n~z}y];pv|wvzLpvlU;v|yvzw\nu\n~z}y];pv|wvzLy]Jdp}xvyk(r)zIzz|x];v\nPRQ\n3¥\n(r)2¤{Na0^ ¤aJB3G^±A!¦ R(r)]3!¤¢<¬μ¦3c¦(c)¤Ja¢<±A\n¤G¤§ ¤0¢!1A.(c)01O¦¥¦¤3A<NxARJC\n¤IA¤L(c)3!30A\n3J¤L3¬(c)¢;Z ¤< ·A¦¬0Osc&¤!±2¬μ<N5vR!¤GYZ¤2J¤L0\nJ\n<&ZHCI?AZ¡:\n?> ;ACIM:\"\" *:\"FACA0]A<¡XN\n¶OO±D2±A¿A.¤a030J¤N¤MA]±¬Z(c)I±^¬\nZ?±¬YZ¤sF¤¢!1\n3c¢¤LZ¬(c)0¬¤\n(r)]¬«¤\nQ\n±^S D¢0¥\nYZ¤La0¬OY±^¬]F3± 0¬μ ÆJP»Æ¤G¥RX!¦¥¦3\n¤M3a0(r)1Ð±^¬I»IO± aIEP(r)¢¤C\nJ¤¢;§]¤B¤0¥BN\nv3⁄40!¤CYZ3\nYZ¤C¢¤IZ±^¬\n^±A!Ø±A\n+\n\n3P^±D!S0 R\n±^¬\nZSZ3S3¢¤C±¬>YZ¤P(c)3!30A\n3J¤\nAZ\n¢3¤0¢O3)^±A!R0\nD¢¤¤C A 3±^¬\nM(r)¢¤(c)I±2a3cY±20¬F1⁄2YZ3R3c¢¤)a0(r)± ¤\n\n¤sF¤0¢!1\nNxD\n»Æ3¬\nÞ¤\n3cY!¤0¢ UJ¤OJ\n<&Z\n)9;:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\n»I±^\nB<O-:\n>μ#C9V\\3⁄4.A<Z:AG^ASFLGÆ3¬(c)P(c)0¬O\n3⁄4a0(r)1G±^;Na\n¤¤)¤\nQ\n3¥Ø(r) ¤ÆN\nv kI0oC\n\na\nþoIæjsMyfc0oym|ksigIoqi\na\nu\na\nom\naa\nksigoqiMsruu\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\njie\na\nyfcI|fnaoym|r0æ|soyoiikq;c\na\nki¥|¦joq;conky¥gkqJþ|ijfqmIuuPksigoqiIuuu\nksigoqiIuu\n}vp|zIdvyd\na\nyfI0oym|ksigoqiIu\na<u\n~zI}y];pv|wvzIMpvlU;v|yvzw\nu\n~zI}y];pv|wvzIk(r)vzIydM}v\nu\n~zI}y];pv|wvzIMw}d\n«\n{];p}vdMxv}xv\nu\n~zI}y];pv|wvzIMdx]JlvydL~];vd\nu\n~zI}y];pv|wvzIMw}\n¬\nvd0(r)zzzdIu\nPRQ\n3¥\n(r)2¤Æ±D?±2(c)¤¬O± a03\nE¤\nQ\n3¥\n(r)2¤{] 1⁄4¤\nQ\na0¤0(r))3c)¤0¢¤o»Æ¤a0^ ¤a<?(c)3!30A\n3J¤\n(r)¢¤(c)± a03± 0¬F1⁄2±^¬F!!¤3I(c)P0 1⁄4±^¬F!!3¬O± 3!¤(c)sc&¤0¢<± ¤< ·3¬(c)C¤¿ Y0¢<¥¦¤0¢B(c)0¬O\n\n¬Z¤¤(c)C!AA\n¤\na0(r)±2¤(c)]Nia]±^¬a0¤)»Æ¤C3¢¤?0¬O\n1 ±^¬\no±^¬YZ¤?(c)3!30A\n3J¤)»Æ¤L!(r) ¤a± ^1E<\n-:B>.C9\\3⁄4]A<Z:\n\nApril 2003\nBasic Joshua Dictionary\nA<G^ASFLGDN\na\nþoIæjsMyfc0oym|ksigIoqi|þIkmknkio|q<oþ]rykmrfsi\na\nu\na\nom\naa\nksigoqiMsruu\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\njie\na\nki¥|þkmknkio|qoþ]rykmrfsLnky¥gkq;þ|ijfqmIu\nksigoqiIu\ny2þf|nky¥gkq;þ|qjc0oiMsr0uu\nksigoqiIuu\n}vp|zIdvyd|lzpzN(r)zdv|xyvl ;zp]J}d\na\nyfI0oym|ksigoqi|þkmknkio|qoþ]rykmrfsiIu\na<u\n~zI}y];pv|wvzIk(r)vzIydM}v\nu\n~zI}y];pv|wvzIMw}d\n«\n{];p}vdMxv}xv\nu\n~zI}y];pv|wvzIMdx]JlvydL~];vd\nu\n~zI}y];pv|wvzIMw}\n¬\nvd0(r)zzzdIu\n\n¤!¤0¢¿!212¤B Y0¢S¤¿3A.§ ¤)¤\nQ\n3¥Ø(r) ¤O»Æ2(c))A.¤?w\na\nyfI0oym|ksigoqi|þkmknkio|qoþ]rykmrfsia\na\nu\na\nom\naa\nksigoqiMsruu\na\nk|f§oq|þkmknkio|qoþ]rykmrfsi\nu\næ0k§fqrmo|okc3okmoq3cæ0ffþ\nca\n0knþIk\na\nþn|qoþ rykmr<fsIu\na\njieGþn|qoþ]r<ykmrfsMksigoqiIuuu\nksigoqiIuu\nI AE¤0¬Ð1 O\n¢¤C±^¬\n!¤0¢¤!E¤(c)N±¬>»¤0¤0¢2YZ¤¢¤\nd\n?3ÐJ0\"±2¬μ ·A¦¬0A3¬1E\"\n(3=dL,\n!\no\n/E\"\n(\nJ0\"±2¬μN\nPQ\n3¥Ø(r)2¤EL±^X!¢3!¤I\n¤¿X¤C0\nA0AIA0:× !A0.X\n±^¬°3Pa0¬O±¬.&3±2¬\nEO¢¤0DZ¢<¬N»I¤0¬N¤O D±^¢!ØJ0\"± 0¬N±A3⁄4 ¬(c).N\nv kI0okE\n\na\nþoIæjsMifc0jmrfs|o ]r<imi|\na\nu\na\nki¥\nu\næk§fqr<mo|okI3okmoq3Iæ0ffþI\nca\n0knþk\na\nr<tsfqocu\na\nqomjqs|cæIqfNifI0jmrfs|o ]rimi|MmIuuu\n3⁄43⁄4\nqomjqsLsr0NræPsfmerstLijyyooþoþ\nsr0uu\na\nifI0jmrfs|o ]rimi|Iu\np\nPRQ\n3¥\n(r)2¤G±A1⁄2±E\n¤¿¤2¤\nQ\n3¥\n(r)2¤230A\n<§]¤I XAZ3⁄4±R¢¤0A¢<¬μ\n3Ga0(r)1N (¤s&¤0¢!1O ±^¬C\n!E¤3I(c)N0 Ø3?A\n02¤3¬FN\n¶·\n±A¦±D\nJ¤0 2Z\n±^ 1⁄41 I»Æ3¬OØE ¬0»\nJ¥S¤O±¬OU30A\n<ZØ¤\nJ\"±20¬F ±^¬3I(c)(c)±±2¬Ð!¿±;\n¤\nQ\n±A!!¤¬Za¤N\nß=6R0»Æ¤§ ¤0¢ ± Æ1]<U»Æ3¬O3⁄4EOJ¤2(c)3cE3A.3J¤C\n¢¤23!¤(c)\n(r)¢(r)]¤0¢<± ¤<\nFa<\n¶XaGa\nC\"¢¤23±2¬μ\nJ¤\nJ\nZZ\n)9;:L<.J?>O<A@:\nA&A0A@<O=C]!^]I3¬(c)G(c)0¬O\nRa0(r)1G±^EaEN\n\nBasic Joshua Dictionary\nApril 2003\nv kI0okI\n\na\nþoIæjsNæIrqim|ifI0jmr<fs\na\nu\na\nnc0fy¥æIrsþ|k|ifIjmrfs\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\nqomjq<s|IæIqfæIrsþ|k|ifI0jmr<fs\na\nyfc|fnaIoym|ræ0|soyoiikqJc\na\nki¥|¦joq;conky¥gkqJþ|ijfqmIuuuuu\n3⁄43⁄4\nqomjqsLsr0NræPsfmerstLijyyooþoþ\nsr0uu\na\næcrqim|ifI0jmrfsIu\nu\n~z}y];pv|wvzLw}\n¬\nvdk(r)zzzId\nIL-<OAG^VWkt(]!A.\nI\n3¬Za¤A3¢¤23c\n1]EJ¤0 (c)0¥\n»Æ3¬O1⁄2!G(c)¤0 D±^¬¤G3G¥¦¤0(c)L3c1⁄2!3\n¤S§ ¤0¢¿¤\n¤¬O±¢¤ 2Z¬a<±20¬3^±210 ØJ\nZ&O9ðN2xA<O×G¥¦0¢¤Ð^±E.¤0×1U1]\n»Æ3c¬\n?!U(c)¤0 D±^¬¤°3\n¥¦¤0YZ(c)5 ¢40¬Z¤«0 LYZ¤\n\n¤¬Z¤0¢<± aI 2¬Za<±2¬μo±oa03A< A&a£3C;\n<ZOZU EAYCIO\nJ\n<&Z\n)9;:=<Z.JZ J\n<ZOZ\n9R:AGA O;\n<ZOZ\n9R:=F.A!^] ·¢3⁄4J\nZ&zX¿]A:\n?D\nAIA: !]A1\\3⁄4]A<Z:AGA?:!A0=WKW\nAIAN\nIAJI YZ¤0¢¤O±AØ3C;¡FE<O?\\(Z\\3⁄4]A<: .AW(c)¤a 3c¢3± 0¬0¬\n,\n\n+3LdL+\n!#\"\n3Ld\n\n+\n\nJ\n1]¢\n±¥Ø(r)2¤¥S¤¬O!3± 0¬F?0\n;\n<Z&O9£!Z2(c)¬0AJ¤\n,\n\n+Z3=dL+\n!.\"\n3=d\n\n+\n±¬0¤0¢P3c¬\n!E3a\nC^±E\n¤B»u3<1O<N\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&\nAG=G\n;\n<Z&zCNGA.A\n;\n<Z&zC?A¡V:?>];ACIM:\" M:\"FACIA.A<¡\n;\n<Z&zX¿]A:?D\nAIA:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\na\n¤¤IYZ¤\n¤aY±20¬\n\"\nr\n&¤0¢!1±¬O\nYZ¤Iu3!30A.3 J¤ \"\nI(r) 3c\n¤}r\n&¤0¢!1±^¬\n\nC\"YZ¤CEÆ3cE3A.3J¤C\na\nPI\n¶5x' v\nNða\n¤¤)YZ¤PJ¤a± 0¬\n\"\n¶·¤ !]F3Æ3!30A\n3J¤SO¢0Ea0 \"\n±^¬0Z !#\"\ni%$'&'$1(!o\n$M+K,M$3⁄4e\n\"\n+\n!.\"./DN·a\n¤¤¿YZ¤CJ¤a<±20¬\n\"\nI\nX!!¥\n±87±¬OMZ¤Æ3cE3xA¬(c)¤\nQ \"\n±¬ !#\"\ni%$'&'$1(!o\n$M+K,M$(e\n\"\n+\n!#\"]/AN\n;\n<Z&O9;:L<Z]J]>\n<A?:HAFAA?<\nLC.!]\no\n!\n+-,13Ld\n\n+\n2\"\n,Mn.o\n\"\n(\nm\no\n1!1?\n(3\nI¬43Iaa¤<J0¢) 2Z¬aY±20¬° 0¢OJ¤C±¬43¬M;\n<ZOZ\n9Ya0¬\n±^¬]&3cY±20¬FNIxAS¤\nQ\nY¢3a<;S¤\n(c)3!30A\n3J¤4(r)¢¤(c)I±2a3cY±20¬IYZ3M¥¦3!a¤(c)5YZ¤sc&¤0¢!1Y D¢0¥\nYZ¤«a0¬\n±^¬]F3± 0¬£3¢<&C\n¥¦¤0¬\n; c2\"\n,n.o\n\"\n(\nm\no\n1!1?\n(3\nO3cØa0¬\n!3±^¬F\n±¬\n0¢<¥¦3± 0¬°30A\n<ZR¤PJ3±A! D±2¤(c)0sc&¤0¢!1ON\n4¤(c)¤Ja<¢<±\"A\n¤\n\n±AUa0¬OY±^¬]F3± 0¬\n3¢<¥¦¤0¬O b^\n13±^¬E¤(c)I±2a<±20¬3¢!1U¤0¬\n¢!13 Y0¢\nJ\n<&Z\n)9ðN\nv3⁄40!¤\n3E±^ UYZ¤\nA\n3Ia]»Æ3¢(c)O(r)(r)]¢<\n(c)I±2(c)\n¬0Ua0¥¦¤\nD¢0¥\n¤I(c)3!30A\n3J¤\nJ\n<&Z\n)9;:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\n]±\"§ ¤I3\nA.0I3¬μ!»Æ¤0¢\n\n±^¬\nJ0¥¦¤\na3J¤<\n&a<\n3ÐJ¤0¢C»¢<±!¤0¬U¥¦(c)¤0A<\n±^o¥S3<1E¤<§ ¤0¬\na030J¤\n¢<±(r)UE¤\n(c)¤A]\n¤0¢N\n¶O]X< o1]\n!2(c)\nJ¤\n;\n<ZOZ\n9R:=<Z];?>\nA@:HAFA0A@<O=C.!^]\n0¬\n×1\n»±\nB<O-:\n>μ#C9V\\3⁄4.A<Z:AG^ASFLGDN\nPRQ\n3¥\n(r)2¤w\n\nApril 2003\nBasic Joshua Dictionary\n4¤PA±^ (c)°3o±\"A]¢3¢!1I(c)3!30A.3 J¤P!±^¬\nN;\n<ZOZ×!AGLGS!E3cE¤0¥¦¤0¬OJ?3¿»u¤^Ø323o Y0¢C\n»Æ3¢(c)E¢;Z ¤>Z3oJ3<1OYZ¤>^±A]¢3¢!1Y0»I¬μN3¬15»Æ0¢330Z¢¤(c)\nAI1Ya.3\n¤!(r) ¤3¢¤N\n4¤L3DJG±^¬a<\"&(c)¤L3¬>aO¶XaCa°±¬\n<Z¢2(r)¢¤(c)± a03!¤P(c)¤0 D±^¬\n±^Y±20¬F2JGYZ3¦»Æ¤La3¬>23!¤0¢\n3(r)(r)×1BJ\nZ&\nAUNAG2]^°!B¤)(c)3!30A\n3J¤O(r)¢¤(c)± a03± 0¬FR»Æ¤O D±^¬(c).N\na\nþoIæcrso|qoþ]rykmoMkjmefq<|fIæ\na\ngfq¥Lkjmefq0u\na\nmiFymi|qoþ]rykmo|IfþoIuu\na\nþoIæcrso|qoþ]rykmoMfgsi|IcrnqkqJc\na\ngfq¥Iu\na\n0miFyY0mi|qoþ]r<ykmo|fþoIuu\na\nþoIæcqjI0oLdek¥oiokq<o|efIþ]rsti\na\nyæ0fq;gkq;þu\nr0æ\nu\nkjmefq|fcæ3gfq¥Mdek¥oiokqo\nmeos\nu\nfgsi|IcrnqkqJc3gfq¥Iu\na\nþoIæjsMnjr0<þ|kjmefq<|mrmIo|rsþIo Na\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\nkjmefq|fIæg¶\n¬\nrstLokq¶Cdek¥oiokqo\nu\nkjmefq|fIæg¶oþþIkMknc0oq¶N;nios\nu\nfgsi|cIrnqkq;c¶pqjNomrstChfiejk@¶\nu\nkjmefq|fIæg¶;zolfcKiLfjioN¶o;niosIu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\n(r){];l|z{p}y|p ;pv| ;lvÐa\na\nnjr<þ|kjmefq|mrmI0o|rsþo NaIu\npqjoLmersti\nu\n}d| (r)yzy¶pq<jNomrstGhIfiejkN¶\nu\nz{p}y|}~¶oþþIkMknc0oq¶N(r)dv\nu\n}d| (r)yzy¶\n¬\nr<stMokq¶\nu\nz{p}y|}~¶\n¬\nrstLokq¶Cdz\n¬\nvdxvzyv\nu\nzI{p}y|}~¶JzolfIKiMfjio@¶N(r)dv\n~kI0ioMmer<sti\nfso\nv3⁄40»\n»Æ¤I3'1]I!.&3I!° D±^¬(c)3¬(c)J\nZZ×AUAVG2]^E¤I(c)3cE3A.3J¤°(r)¢¤(c)±2a3±2¬μ\nYZ3(!¤0^I»I3c(¤O±\"A ¢3c¢!1L0»I¬F<N\na\nki¥\nu\nfgsi|IIrnqkq;cT3gfq¥\nca\nknþk\na\nnky¥gkq;þI|ijfqmIu\na\no NIkrs\na\nki¥|þIkmknkio|q<oþ]rykmrfsLnky¥gIkq;þ|ijfq<mIuuuu\nu\n}d|](r)yzyi¶pqjomrstGhfiejk@¶orikNpqjoN\n\n;miMkEyAxqo rio\n\nu\n}d|](r)yzyi¶\n¬\nrstLokq¶Ðri0NpqjoN\n\n;miGþoqr§oþÐæIqfNmeooqjI0oLdek¥oiokq<|fI<þ rsti\n\njirstFy\nu\nzI{p}y|}~¶\n¬\nrstLokq¶?dz\n¬\nvdxvzIyv\n~Ø&3c×1I1]Ia03¬YJ¤°¤4a0¬]§ ¤0¬O± ¤0¬a0¤° 2Z¬a<±20¬\n;\n<ZOZHX¿?A:?D\nAA:L<.J?>O<A@:\nA&A0A@<O=C]!^]S±^¬F!!¤3I(c)G0 8J\nZZ\n)9;:L<.J?>O<A@:BAFAA@<OLC]!^]ON\n0¢Ba0¥Ø(r)]3¢<±DJ0¬N»Æ¤AJ¤OYZ¤?J3¥S¤B^±A]¢3¢!1L¤\nQ\n3c¥Ø(r)2¤B 0¢ØA\n0YN b¬Za<± 0¬μ<N\n0¢B¥¦0¢¤20¬ÐYZ¤J¤23¬Z(c)G¢¤23!¤(c)G 2Z¬aY±20¬Fwða\n¤¤)YZ¤¿ 2Z¬aY±20¬GJ\n<&Z\n)9ð (r)]3\n¤\nEJ!]&3#w3'\nCEc~2v\nI\n¶x' v\nN\n;\n<Z&O9;:L<OAIAED]]\no\n!\n+-,13Ld\n\n+\n2\"\n,n.o\n\"\n(\nm\no\n1!1?\n(3\nI¬43Iaa¤<J0¢) 2Z¬aY±20¬° 0¢OJ¤C±¬43¬M;\n<ZOZ\n9Ya0¬\n±^¬]&3cY±20¬FNIxAS¤\nQ\nY¢3a<;S¤\n(r)(r) 0¢<C±¬O Y0¢<¥¦3±20¬330A\nC¤\nJ3±A! D±2¤(c)1sc&¤0¢!1E D¢0¥\n¤>a0¬OY±^¬]F3± 0¬\n3¢<&C\n¥¦¤0¬\n_2\"\n,Mn.o\n\"\n(\nm\no\n1!1?c\n(3\nN\n\nBasic Joshua Dictionary\nApril 2003\nv3⁄40!¤I3E¤£3Ia0a¤<J0¢3 b¬Za<± 0¬\nJ\nZ&O9;:L<Z]J]>μO<A@:BAFAA@<OLC]]\n¥¦3\n¤\n¥¦0¢¤¿3<Z¥Ø(r)±20¬FØ30A.Z(¤C(r)(r) 0¢<(Z3¬?J\nZZ\n)9;:L<\nAAED]!^]I(c)¤<N\n63⁄4¤0¢¤\n±D«3UJa<Z¤¥S3± a5¢¤0(r)¢¤IJ¤0¬OE3cY±20¬\n0 ¤\na0¬\n!¤0¬\n;«0 2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\nN\nJ\n<&Z\n)9;:=<OAIA0ED.!^]5¤\nQ\n¢3Ia;O0¬\n×1Ð¤L(c)¤0¢<±§]3± 0¬I(r) 0¢<±2¬μNO0¢2¥¦0¢¤L(c)¤0E3c±\n(r)2¤3J¤¿a0¬μ^(¤)(c)I±2a<±20¬3¢!1M¤¬O¢!1G Y0¢\nJ\nZZ\n)9ðN\npeoLnky¥gIkq;þ|ijfq<mNIrimFy\na\njsr0æIroþ0¦joqJc\nkmqjme|§kI0jo\n\nþoqr§Ikmrfs\nu\na\n\na\njsr0æIroþu¦joq;c\nu\na\nm æ1\nu\na\nþoqr§kmrfs\nu\nxfiirnr0crmroiæ0fq?meoioLoI0oIosmiLkqoFy\na\nþkmknkiokqoþ]rykmrfs\nu\na\nzIlyfsajsym ?þIoqr§kmrfs\n0yfsajsymaGþoqr§kmr<fs\n\nu\na\n}yijyyoiicæ0jI?þ riajsymGþoqr§kmrfs\nu\naa\ny{v]qjI0oLsko\nuyfsajsym Pm æ?þoqr§kmrfs\n0yfsaIjsymaLm æ2þoqr§Ikmrfs\n\nu\naa¤«\n{vdp ;}¦joimrfsMsko\nuijyyooþNkqtjIosm\nu\na'¬\n}þoqrM§kmrfs\nu\na\nxy}zN(r)vþIoqr§kmrfs\nu\na±E.¤GYZ¤P0YZ¤0¢?3Iaa0¤<J¢2 2¬Za<±2¬μ< μJ\nZZ\n)9;:L<\nAAED]!^](c)¤S¬0\n±^¬\n!¤0¢<(r)¢¤0\nYZ¤B±^¬\n¢<¥S3± 0¬N±^3⁄4¤\nQ\n¢3Ia<;<NROÆ¤0¬¤0¢3^×1¿1]Ð»Æ0¬O\n\n¬¤¤(c)?!SJ¤O±\n§ ¤0¢!1L0 D!¤0¬FN\nv3⁄40!¤\nYZ3\n¤\na0¬.§ ¤0¬\n±2¤¬Za¤\nb¬a± 0¬F\nJ\n<ZOZ[A&A0μM:=F.AA<¡:\"AA;G^J\n3¬(c)\nJ\n<&ZHW\nA?AF:LF]XAIA<¡V:A0A;G^Jc ¦¢¤I!(r)]¤a<±\"§ ¤0\n1O A(c)±D!(r) 31I3c¬(c)3]¢3(r)\n3¬\n3¬\n¬Z0E3cE¤(c)\n§ ¤0¢!± 0¬\n0 2¤\nZ(r)(r)]0¢<C±^¬\n¢<¥S3± 0¬F ØJU3¿1]<I(c)0¬O\nG30§]¤U!U±^¬\n!¤0¢<(r)¢¤0C±^\n1 Z¢J¤^ !N\n0¢?a0¥\n(r) 3¢<±AJ0¬°»u¤O\n\nJ¤CZ¤3c¥¦¤P¤\nQ\n3¥Ø(r) ¤S!C±^\"!¢3!¤P3^\nYO¢¤¤P 1⁄2¤J¤\n2¬Za<±2¬μ<N\nPRQ\n3¥\n(r)2¤w\n¶O¤U D±^¢!«¤\nQ\n3¥Ø(r)2¤U!0»1⁄4EYZ¤UZ(r)(r)]0¢<4 Y0¢\n3Osc&¤0¢!1\nJ3±A! D±2¤(c)£Ac1\n(c)3!30A\n3J¤\nZ(r)\n\nYZ¤¿(c)3!30A\n3J¤B(r)¢¤(c)I±2a3±20¬NYZ3ØJ3cY±A! D±2¤(c)?¤sF¤¢!1P±DR(r)¢<±¬OE¤(c).N\na\nþoIæcrso|qoþ]rykmoMmcNo|fcæ\na\nfnaoymLmcNoIuu\na\nmoI\nu\nmco|fIæÐ<Irkþoor<yIu\nv kI0oT\n\na\nki¥\nu\nmcNo|fIæ3nff¥Lory\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nki¥|þoqr§IkmrfsLnky¥gkq;þ|ijfqmIuuuu\na<u\npIxv|}~U;]!zIlMvx]JIu\n¶O¤\n¬¤\nQ\n>¤\nQ\n3¥Ø(r)2¤\n!Z»\n°Z¤\n(r)(r)]¢<U Y0¢53sc&¤0¢!1IZ3±AEJ3±D! A± ¤(c)\nA¢0¥\n¢;2¤I<N4¤U3§ ¤E3£¢;2¤I\nþIoiioq<m3\n23cE(c)¤0!¤0¢<¥Ø±^¬¤E±^\n3E]±\"§ ¤0¬\nY(c)\n±D\n(c)¤<J¤0¢<;N\nP\n3Ia S\n±A¿¢;Z ¤O×P\nA]\n3cD)±D?(c)¤0¢<±\"§ ¤(c) D¢0¥\n0¤0¢P¢JZ ¤<N63⁄4¤0¢¤N3¢¤\n\nApril 2003\nBasic Joshua Dictionary\nYZ¤¿(c)¤0 D±^¬\n±^Y±20¬F<N\n3⁄4\nv IkNI0o0a\n\n«\njoq;cUriGþoqr§oþÐæIqfNnky¥gkq;þUqjI0oi\n3⁄4\nlocæIrsoLmeokqoþ]rykmoi\na\nþoIæcrso|qoþ]rykmoMoþ]rnI0o\na\nfnaIoymIuu\na\nþoIæcrso|qoþ]rykmoÐr<i|Iæ0ffþ\na\nfnaoymIuu\na\nþoIæcrso|qoþ]rykmoMyfsmkr<si\na\nfnaoymLijnimksyocuu\na\nþoIæcrso|qoþ]rykmoMigoom\na\nfnaoymIuu\n3⁄4\nlocæIrsoLmeoÐq<jI0oi\na\nþoIæcqjI0oæ0ffþN3\na\nyAnky¥gkqJþu\nr0æ\nu\noþ]r<nI0o\n3fnaoym\nmeos\nu\nr<i|Iæ0ffþ\n3fnaoymIu\na\nþoIæcqjI0oLigoom3\na\nyAnky¥gkq;þu\nr0æ\nu\nfq\nu\nyfsmkrsi03fnaoymMyefyfI0kmo\nu\nyfsmkrsi03fnaoymMijtkq\nu\nyfsmkrsi03fnaoymMefsoc\nmeos\nu\nigoom03fnaoymIu\na\nþoIæcqjI0oCþoiioqm3\na\nyAnky¥gkq;þu\nr0æ\nu\nksþ\nu\nri|cæ0ffþT3fnaoym\nu\nigoomk3fnaoym\nmeos\nu\nmcNo|fcæ3fnaoymCþoiioqmIu\n3⁄4\nmocPifoMimry¥cÐæ0kymi\na\nmoI\nu\noþ rnI0oLyefyfc0kmo|yfkmoþ|ksmiIu\na\nmoI\nu\nyfsmkrsiMyefyfI0kmo|yfkmoþ|ksmiMefsoccu\nv3⁄40»£»Æ¤AJ\nZ&O9»IZ3\nY(c)]Esc&3^±^ 13B(c)¤I<J¤0¢<;B3¬Z(c)M»I1ON\n¶·¤P(c)I±A!(r) 3<1o±A\n3M±A!)!!3¢<±¬O°»I±4¢JZ ¤\nþoiioqm3\nYZ3)J3±D! A± ¤(c)oYZ¤ksF¤¢!1\n\n¬Z¤\nQ\n¦±AB¤P D±^¢!\n\nA]\n3c1⁄2Z3¿»Æ3LJ3cY±A! D±2¤(c)] Æ!0\n¤0¤0¢L»I±^Y±^J?Y¢;Z\n§ 3cF¤I\n3c¬(c)°YZ¤N¬3c¥¦¤Ð\nYZ¤I¢;2¤I»IO± a\nJ3±D! A± ¤(c)±^Ðß¢;2¤\næ0ffþ3\naEN1⁄2¶OZ3L¢;2¤O× A±¢!ÐOA\n3)±DZ¤¬\n±A!!¤(c)\n»I±^YI±^;N¢;ZY\n§]3F¤«3c¬(c)5¤E(c)3!30A\n3J¤\n(r)¢¤(c)± a03± 0¬I3cJ3±A! D±2¤(c)\n±;\n3¬(c)MJ)0¬F O¢<Z]Ð3^I¤SA\n3Ia) »Æ3c¢(c)M(r)(r) 0¢<;N\na\nki¥\nu\nmcNo|fIæ3fnaoymGþoiioqm\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nki¥|þoqr§IkmrfsLnky¥gkq;þ|ijfqmIuuuu\naa\ny{vMlvddvyp3Iu\na<u\nJd|~}}lM}}zpv|}zIpvl|zIpdg\na\ny{vM~}}l3Iu\na<u\nvl](r)vM}}zpv|}zIpvl|zIpdg\nu\nvl (r)vL}}zpv|}zpvl|zpdIuu\na<u\ndvvpL}}zpv|}zpvl|zpdT\na\ny{vLdvvp3Iu\na<u\n}pz\n;dM}}zpv|}zpvl|zpdL}vT\nu\n}pzO;dL}}zpv|}zpvl|zpdM}vIuuu\n0¢B¥¦0¢¤20¬ÐYZ¤J¤23¬Z(c)G¢¤23!¤(c)G 2Z¬aY±20¬Fwða\n¤¤)YZ¤¿ 2Z¬aY±20¬GJ\n<&Z\n)9ð (r)]3\n¤\nEJ!]&3#w3'\nCEc~2v\nI\n¶x' v\nN\n\nBasic Joshua Dictionary\nApril 2003\n;\n<Z&O9;:LF.AIA¡\no\n!\n+-,13Ld\n\n+\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\nI¬\n3Ia0a¤<J0¢2 2Z¬aY±20¬I Y0¢)J¤G±^¬F!±2(c)¤M3¬NJ\nZZ\n)9\na0¬\n±^¬]&3cY±20¬FN xDB¤\nQ\nY¢3a<;\nYZ¤B±^¬F!!3¬OY±23!¤(c)sc&¤0¢!1G A¢¥\n¤)a0¬\n±^¬]F3± 0¬Ð3¢<Z¥¦¤0¬\nA2\"\n,Mn.o\n\"\n(\nm\no\n1!1?c\n(3\nN\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n±AR 2^×1L(c)¤IJa¢<±A\n¤(c)?±^¬NYZ¤¿(c)± a± 0¬3c¢!1L¤0¬\n¢!1G 0¢(;\n<Z&O9iN\nPRQ\n3¥\n(r)2¤?w\n63⁄4¤0¢¤L»Æ¤a0^ ¤aO3¬(c)IJ30§ ¤3^3⁄4YZ¤3¬F!»u¤¢¿ D¢0¥\n3sc&¤0¢!1ON\nß aO¤¤¤\nQ\n3¥Ø(r) ¤g{Ð±¬\nYZ¤¿(c)± a± 0¬3c¢!1L¤0¬\n¢!1G 0¢(;\n<Z&O9ðNa\na\nþoIæjsMyfc0oym|ksigIoqi\na\nu\na\nom\naa\nksigoqiMsruu\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\njie\na\nyfcI|fnaoym|r0æ|soyoiikq;c\na\nki¥|¦joq;conky¥gkqJþ|ijfqmIuu\nksigoqiIuuu\nksigoqiIuu\n¶ðN¤\nQ\n¢3Ia¿3¬(c)(r)¢<±^¬\n¿OYZ¤M±^¬F!!3¬\n±23!¤(c)isc&¤0¢!1O 8XJ¤M¤Na0¬.§ ¤0¬\n±2¤0¬a¤ 2¬ZaC\nY±20¬?J\nZZ[AFA^FM:LF.AIA<¡XN\n0¢B¥¦0¢¤20¬ÐYZ¤J¤23¬Z(c)G¢¤23!¤(c)G 2Z¬aY±20¬Fwða\n¤¤)YZ¤¿ 2Z¬aY±20¬GJ\n<&Z\n)9ð (r)]3\n¤\nEJ!]&3#w3'\nCEc~2v\nI\n¶x' v\nN\n;\n<Z&O9;:LF.AIA¡:\"!A<:HD#GXA\no\n!\n+-,13Ld\n\n+\n2\"\n,Mn.o\n\"\n(\nm\no\n1!1?c\n(3\nI¬\n3Ia0a¤<J0¢2 2Z¬aY±20¬I Y0¢)J¤G±^¬F!±2(c)¤M3¬NJ\nZZ\n)9\na0¬\n±^¬]&3cY±20¬FN xDB¤\nQ\nY¢3a<;\nYZ¤¢;ZY5§]3F¤°0 )¤U±¬μ!!3¬\n±23!¤(c)1sF¤0¢!1« D¢0¥\n¤>a0¬\n±^¬]F3± 0¬33¢<Z¥¦¤0¬\n\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\nN\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n±AR 2^×1L(c)¤IJa¢<±A\n¤(c)?±^¬NYZ¤¿(c)± a± 0¬3c¢!1L¤0¬\n¢!1G 0¢(;\n<Z&O9iN\n¶O¤O¢;M§ 3\"&¤O±DØ3)¬]¥1⁄2A.¤0¢ 3 3⁄4 ^2»\nw\nO\n¶O¢;ZM§ 3\"&¤¿0 8;\n<Z&AZ9μ?\\(A\n\n¶O¢;ZM§ 3\"&¤¿0 8;\n<Z&A!A<XAA\n1⁄4\n¶O¢;ZM§ 3\"&¤¿0 8;\n<Z&A J.G2<AA\n¿\n¶O¢;ZM§ 3\"&¤¿0 8;\n<Z&ACI]F!A-<OLCI!]A<¡FA\n¶O¤;\n<ZOZ×!A<:HD#GXAU(r)¢¤J¤0¬\n!3±20¬\n21(r) ¤U¢3¬F!23!¤E¤J¤U¬]Z¥RA.¤0¢E±^¬\n!\nD1¥1⁄2A.0A3⁄4¬Z3¥Ø±^¬\nN3¿¢;ZYM§]3F¤N\naC!A0 Ø¤PY±^¥¦¤)1 ]¬0»\n¤0sc&¤0¢!1ZO×BY¢;Z°§ 3\"&¤P D¢0¥\nZ¤0sc&¤0¢!1Ð(r)]3!¤¢<¬\n±;J¤0 (N3c\n1]53§ ¤^±^Y2¤¬Z¤¤(c)I0 A\n±A2 2¬Za<± 0¬μNu¶·¤N¢;\n§ 3\"&¤N±^¬\nY0¢C\n¥¦3± 0¬\n±D\n¥¦!×1UZ¤¢¤3 ¢UD1O!!¤0¥\nJ¤ ¿!\n2¤0IYZ¤£b1O!!¤0¥\n±^¬\n!¤0¢<(r)¢¤0I¤\nsF¤¢!1ON\nPQ\n3¥Ø(r) ¤w\na\nþoIæcrso|qoþ]rykmoMimkmji|fIæ\na\nfnaoymMimkmjiIuu\na\nmoI\nu\nimkmji|fIæPiIf¥o|kc0kqNfIææ0Iu\n\nApril 2003\nBasic Joshua Dictionary\n3⁄4\nv IkNI0og\n\na\nki¥\nu\nimkmji|fcæ3rsþ]rykmfqCfIææ0\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nki¥|¦Ijoq;c|mqjme|§kI0joMnky¥gkq;þI|ijfqmIuuuu\n\n3⁄4\nv IkNI0o0a\n\n{ioMmq<jme|§IkI0jo|skoLmfMmq<ksiI0kmoMmeoMsjInoq\na\nki¥\nu\nimkmji|fcæ3rsþ]rykmfqCfIææ0\nca\n0knþk\na\nnky¥gkq;þ|ijfqmcu\na\nqrsm\na\nmqjme|§kI0jo|skIo\na\nki¥|¦joq;c|mq<jme|§IkI0joLnky¥gIkq;þ|ijfq<mIuuuuu\nNpy{vN\n0¢C¥¦0¢¤0¬4\n±A)3¬Z(c)o¢¤023!¤(c)o b¬a± 0¬FwÆa\n¤¤L¤L 2Z¬a<±20¬o;\n<Z&O9ð\n(r)]3\n¤\nEJ!]&3#w3'\nCEc~2v\nI\n¶x' v\nN\n;\n<Z&zCNGA.A\no\n!\n+-,13Ld\n\n+\nh\n0(r)±2¬Z31⁄4ß\n,\n/\n$\n\"\n(o\nmK\"\n\"@2\"?\n$\nJa\nß=!\n+\nm\n$'&Y(\n!-/\n$Jou(\n!K/\n$\n¦FLG2a\n4L±Ð3¢<Z¥¦¤0¬\n;RR< ¤0¥Ø(r)Y±2¤3⁄4Z¤¿(c)3!30A.3 J¤¿3¬Z(c)\n\"\n¬Z(c)¤ \"\n3^I¢;Z ¤)(c)¤0 D±^¬\n±^± 0¬μ<N\n,\n/\n$\n\"\n(o\nmK\"\n\"@2\"?\n$\na](r)]¤a<±^ D±2¤?»I¤0¤0¢N0¢L¬Z0¿!a<2¤3c¢MYZ¤Ð(c)3!30A\n3J¤Nu¤ 30^\n±A3⁄4N\n!\n+\nm\n$¤&Y(\n!-/\n$;o8(\n!-/\n$\n\na](r)]¤a<±^ D±2¤N»I¤0¤0¢I¢°¬0M!\n(c)¤0 ¤0!¤\n3c)¢JZ ¤«(c)¤ A±¬O±±20¬F<N\nÆ¤0 Y3^(±A3⁄4FLGAN\nI\n¤3¢<±^¬\nI¤5(c)3!30A.3 J¤«±A°¤sZ±§ 3c ¤0¬\no!UJ\n<&ZUF!ANG=G^±¬O£¤3a<£ 3Ia<o±^¬£¤\n(c)3!30A\n3J¤N\nv3⁄40!¤53Ð¬(c)¤0 D±^¬\n±^¬\n\n3^P¢;2¤Y(c)¤ A±¬O±±20¬F°±A433(c)¢3!± aE\n±^¬\nU!Y(c)I O3°±^\na<2¤3c¢S<Z\"]/L/u¢;Z ¤\n±^¬M1]¢O»Æ0¢<2(c)]NμI¬1o3(r)(r)^± a03± 0¬°(c)¤0(r) ¤0¬Z(c)I±^¬\n0¬¤J¤2¢;2¤\n»I±^\n¬G 0¬\n\n¤0¢)»Æ0¢ZN\nI\n2¤3c¢?S3^\n¢;2¤B0¬\n×1o±\n1]I»u3¬\nS3\n\"\na< ¤3¬ \"\n¤0¬]§±^¢0¬C\n¥¦¤0¬\n; Y0¢O¤\nQ\n3¥Ø(r) ¤ ±^ 1]¬Z¤¤(c)G!O\n¤03⁄4¢<±2(c)P0\n3?¢;¬3c»Æ3<1L¢;2¤¿YZ3\n1]<>a3¬O¬0\n!E0(r)?AI1L0¤0¢S¥¦¤3¬F<N\nPQ\n3¥Ø(r) ¤w\ndefgLhfiejkMlkmknkio\npqjoMmer<sti\nu\n~z}y]Jpv|wvzk(r)vzydM}v\nu\n~z}y]Jpv|wvzMw}d\n«\n{];p}vdMxv}xv\nu\n~z}y]Jpv|wvzMdx ;lvydL~];vd\nu\n~z}y]Jpv|wvzMw}\n¬\nvd0(r)zzIzd\n~kIioMmersti\nfso\na\nyI0okq0u\n\nBasic Joshua Dictionary\nApril 2003\ndefgLhfiejkMlkmknkio\npqjoMmer<sti\nfso\n~kIioMmersti\nfso\n^\n¤0 3cE¤(c)\nI\n0¥Ø¥S3¬(c)Kw\n\"\nI\n2¤3c¢ !.&3Æ3!30A\n3J¤\nI\n0¥Ø¥S3¬(c) \"\na\n¤¤Ð¤IJ¤a<±20¬\n\"\n^\n¤0¥¦§±^¬\n°SO¢¤(c)±2a3±2¬μX¢¥\n¤Æ3!30A\n3J¤ \"\n\n(r)]3\n¤\n^\n¤0¥¦§ C\n±¬O\nCESO¢¤(c)± a03± 0¬FJCEX¢¥SC¤CEÆ3!30A\n3J¤Ca\nPI\n¶5x¤v\nN\na\n¤¤\nYZ¤\nJ¤aY±20¬\n\"\n¶OZ¤I !.&3OÆ3!30A\n3J¤OSO¢0Ea0 \"\n±¬\nZM Z!.\"\ni%$¤&'$1(*$M+K,M$\ne\n\"\n+\n!.\"./DN\na\n¤¤B¤CJ¤a<± 0¬\n\"\nI\nX!E0¥Ø±u7<±^¬\nM¤Æ3!3xD¬Z(c)¤\nQ \"\n±¬M Z!.\"\ni%$'&'$1(Y$+-,$(e\n\"\n+\n!.\"./AN\nClear Joshua Database Command\nI\n2¤3¢3⁄4(r)¢¤(c)I±2a3cY±20¬FR D¢0¥\n¤O]I!.&3Æ3!30A\n3J¤N\niI(*$\nm\ndL,\n\"\n3Ld\n\n+\n\n4L\n±2a<I(r)¢¤(c)I±2a3cY±20¬FB!G¢¤0¥¦§ ¤P A¢¥\nZ¤L(c)3!30A\n3J¤N\nI\n2¤3¢ !]F3\nÆ3!30A\n3J¤P3'ZS¤P(c)3!30A\n3J¤C ¢C3^1⁄4(r)¢¤(c)I±2a3cY±20¬FA¥¦3!a<O±¬OJ¤\n!(r) ¤a<±^ D±2¤(c)O±^¬\nYZ¤\niI(*$\nm\ndL,\n\"\n3Ld\n\n+\n\n3c¢Z¥¦¤0¬\n\n3¬(c)\nJ\n<&ZUF!ANG=GA\nYZ¤0¥\nD¢0¥\nZ¤L(c)3!30A\n3J¤N\n¶OZ¤?§ 3\"&¤L0\niI(*$\nm\ndL,\n\"\n3Ld\n\n+\nCa3¬\n3DJ?A\n¤\nI^Æ0¢×vR¬Z¤N\nw\no3\n\n$1(¦eR(\n!\n\n÷\n\"./L!\n$\n\ne\n\n4L¤0¤0¢)¢O¬0R!?a ¤3¢O¤2(r)¢¤(c)I±2a3cY±20¬F\n±¬Z¤?(c)3cE3A.3J¤2»I\n±2a<\n¥¦3!a<\nJ¤4!(r) ¤a± A± ¤(c)°AI1«YZ¤\niI(*$\nm\ndL,\n\"\n3Ld\n\n+\no3c¢Z¥¦¤0¬\n; uAZ2Z30§ ¤\nYZ¤¿0(r)(r) !±^E¤O¢;M§ 3\"&¤N¶·\n±A1⁄23c¢<¥¦¤0¬\nR(c)¤0 30^;3⁄4!i¤I<N\nw Ø!\n$1(uf\n4L¤0¤0¢OEC3'G1]<UA.¤0 Y0¢¤)¥S3 ±^¬\na<Z3¬\n\n¤\nE2¤?(c)3!30A\n3J¤N\n\n(c)¤0 Y3^J X¤)a0¥Ø¥S3¬(c)!E0(r)OØ3¬(c)P3'Z\nA.¤0 Y0¢¤O¢¤0¥¦§±^¬\nN3¬1P(r)¢¤(c)C\n± a03± 0¬FØ0¢¦¢;Z ¤<N\nw\nn5+\nm\n$'&YdL+-$3⁄4i\n!-/\n$\n\nxD\nn5+\nm\n$'&YdL+-$¦i\n!-/\n$\n¿±AUð¤< ð¤Pa0¥Ø¥¦3c¬(c)M»I±^^u¬Z(c)¤0 D±^¬¤P3^(0 R¤\n!]&3\n^\n2¤I<NO¶OO±DØ3¢<¥S¤¬O3⁄4(c)¤0 Y30Z;REv3⁄4N\nw\n÷$1(\n$\n4L¤0¤0¢!Ð(r)¢<±^¬\n2±¬O Y0¢<¥¦3±20¬Y30A\n2»I3c2YZ¤Ua0¥Ø¥¦3¬Z(c)>±AP(c)C\n±¬OZN\nI\n2¤3¢ !]&3Æ3!30A\n3J¤N(r)¢§±2(c)¤C3Ua0¬.§ ¤0¬\n±2¤0¬\n¿±¬OE¤0¢< 3Ia¤N!NYZ¤2;\n<ZOZUF!AGLGØ 2¬ZaC\n±2¬μNxA)3')¤o(c)3!30A.3 J¤M ¢M3^R(r)¢¤(c)I±2a3cY±20¬F)¥¦3!a\n±^¬\n4J¤UE(r)]¤a<±^ D±2¤(c)oAI1°¤o3¢C\nZ¥¦¤0¬\n;< 8(r)¢¥\n(r);\n1 « ¢Pa0¬O D±^¢<¥¦3± 0¬μ I3¬Z(c)CJ\nZZUFAG=GA)¤3Ia4(r)¢¤(c)± a03!¤N xAB3AJ\n3^2»\nB1 YEZ¬(c)¤ A±¬Z¤3\n¤g !]F3¢;2¤< u¢¤IZ±^¬\n«±^¬\n3 A¢¤! !]F3°¤0¬]§±^¢0¬C\n¥¦¤0¬OJN\nvR!¤MZ3S¬Z(c)¤0 D±^¬\n±^¬\n«3^R¢;2¤N(c)¤0 A±¬O±±2¬μ¿±A23(c)¢3 !Y±2aP\n±^¬\n4EN(c) Æ3)±¿a ¤3¢?\n\"./=/S¢;Z ¤P±¬«1]¢N»u¢<2(c).NII¬13(r)(r)^± a03± 0¬3(c)¤(r)]¤0¬(c)±¬O\n0¬Y¤J¤¢;2¤G»I±^^S¬20¬\n\n¤0¢\n»Æ0¢ZN\nI\n¤3¢N<Z23Ø¢;Z ¤C0¬\n×1I±^ 1⁄21]5»u3¬\n\"\na ¤3¬ \"\n¤¬.§±^¢¬O¥¦¤0¬\n; Æ Y0¢N¤\nQ\n3c¥Ø(r)2¤ Æ±\n1]Ð¬¤¤(c)?!B\n¤0(¢<±2(c)G0 (3)¢;¬Z3»Æ3<1P¢;2¤B3u1]<Ua03¬\n¬Z0Ø!!0(r)?Ac1M0YZ¤0¢¦¥¦¤3¬μ<N\n\nApril 2003\nBasic Joshua Dictionary\n^\n¤23!¤(c)μ¬a± 0¬Fw\nJ\n<&ZHCG^A]A\nJ\n<&ZUF!ANG=G\n;\n<Z&ACI]F!A-<OLCI!]A<¡FA\n÷\n\"\n(Md\n\"?2/\n$\n3¬Z3¥¦¤(c)Pa0¬F!!3¬O\nJ¤(c)2Ac1 !]F3)!)(c)¤¬Z0E¤)3c¬N±^¬\n!¤0¢<±¥\n!E3cE¤)0\na0¥Ø(r)!3±2¬\n»I¤0¢¤0±¬\n(r)¢¤(c)± a03± 0¬\n±D\nA.¤0^± ¤§ ¤(c)\n!\nA.¤\nA\n;\n<ZOZA<!AAA\n3¬(c)\nJ\n<&ZA; J.G2<AANE4L¤0¬\n\n±AEa0a;Z¢< ]I!.&3U±^¬]§\n¤I\n¤U3(r)(r)¢0(r)¢<± 3!¤U¶O¢;ZY\naC3±^¬\n!¤0¬3¬Za¤)aI1O!!¤¥\n!B¢¤J0\"§ ¤B¤)a0¬\n¢3I(c)±2a<!0¢!1N!!3!¤N\nJ\n<&ZA1CI]μ!AK<\nLCI!]A¡&A¿±D\n¬Z1⁄2¥S¤3c¬\n±^¬\n] 2ZZ¬\n2¤<S3P¶XaGao±A\n(r)¢¤J¤0¬\n;N63⁄40»Æ¤§ C\n¤¢ X¬03⁄43cÆ¶·¢;MaC3c±¬OE¤0¬Z3¬a0¤¿aI1O!!¤0¥BØ3¢¤B¢¤sc±^¢¤(c)CEAJ¤OYO±D\n§ 3\"&¤N\n^\n¤0 3cE¤(c)G¶i0(r)±2aw\n;\n<Z&A!A<XAA\n;\n<Z&A J.G2<AA\n;\n<Z&AZ9μ?\\(A\n;\n<Z&\nA<!c:HD#GA\n;\n<Z& AFA0A@<O=C.!^]:A<!c:HD#GA\na\n¤¤N¤°J¤a<± 0¬\n\"\n¶O¢;\n\n3cF¤I \"\nÆ(r)]3\n¤Ð¶O¢;ZC\n\n3cF¤IJC^a\nPII\n¶x'vØN\na\n¤¤N¤°J¤aC\nY±20¬\n\"\n!± A± a03± 0¬\n3¬(c)\n¶·¢;\naC3±^¬\n!¤0¬3¬Za¤ \"\n)(r) 3c\n¤yI!±^ D±2a3±2¬ZC3c¬(c)C¶·¢;C\naC3±^¬\n!¤0¬3¬Za¤C^a\nPI\n¶5x' v\nN\n;\n<Z&zC?A¡V:?>];ACIM:\" M:\"FACIA.A<¡\no\n!\n+-,13Ld\n\n+\n2=U\n$M,13\nI\n(r)±2¤I¤2=U\n$M,13\nZ3¬(c)¤(c)\n!U±^\n±^ I±^Ea00¬\n!3±^¬F«§ 3¢<±230A] ¤< G¢3±A50¤0¢<»I±AJ¤\n¤(r)¤0¥¦¤0¢3AN\n2=U\n$,)3\nI¬1LA<EJ¤a<; ¢B¤\nQ\n3¥Ø(r)2¤I O3)±A!; 0¢A3)(r)¢¤(c)I±2a3±20¬\n\n3c¢<± 30A]2¤I±¬U2=U\n$,)3\n3¢¤«¢¤¬Z3¥¦¤(c)3(c)Z¢<±¬OEa0(r)1±^¬\nZ BJ«YZ3M§ 3¢<±230A] ¤Ð±¬£¤\na0(r)1M(c)I±^ D ¤0¢¦ A¢¥\n§ 3c¢<± 30A]2¤IR±^¬NYZ¤¿0¢<±^]±¬Z3DN\nJ\n<&ZHCI?AZ¡:\"?>]JACI:\" M:FANCIA0]A¡\n±DSXJ¤ b\nY0¢2¥S3 ±^¬\nIa0(r)±2¤I¿0 Ø(r)¢¤(c)±2a3±2¬μ\nYZ3G¥¦3<1«A\n¤«!!3Ia\nCa00¬FJ¤(c)] 3⁄40¢Ð»IZJ¤§ 3¢<±230A 2¤L¥¦3<1«A\n¤°E¤0¥Ø(r)]0¢3¢<±^\n1«Z¬\n±^ D±2¤(c).N\n¶O¤O 3cY!¤0¢ X Y0¢A¤\nQ\n3¥\n(r)2¤ ±A3⁄4¢;&¤)0 u§ 3¢<±230A 2¤3⁄4±^¬N¤sF¤¢!1P!RJ\nZ&O9ðN\nJ\n<&ZHCI?AZ¡:\"?>]JACI:\" M:FANCIA0]A¡«a¢¤3cE¤O3J¤(r)]3¢3!¤La0(r)1U0 1⁄2±^;O3¢<¥S¤¬O¦±¬\nYZ¤BZ¤3c(r)\nN\nPRQ\n3¥\n(r)2¤wU63⁄4¤0¢¤\n»Æ¤\n¢¤J¤\nJ¥S¤\n¤\n¤\nQ\n3¥Ø(r) ¤\n±¬O¢(c)c&a0¤(c)\n»I±^Y\nJ\n<&Z\n)9ðN%4¤U(c)¤0 D±^¬¤40¥¦¤(r)¢¤(c)±2a3!¤L3¬(c)\n3°¢;Z ¤ 1⁄4¤0¬\n¤0¬\n!¤0¢UJ0¥¦¤ Y3a<;\n±¬OEO¤¿(c)3!30A\n3J¤N\na\nþoIæcrso|qoþ]rykmoNæk§fqr<mo|okI\na\nokmoqGæ0ffþuu\na\nþoIæcrso|qoþ]rykmoMtjμμI0oi\na\nokmoqPæffþuu\n\nBasic Joshua Dictionary\nApril 2003\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\næ0k§fqrmo|IokIPnokqiLefsocI\nu\næ0k§fqrmo|IokIIfi¦jr<mfoi0ofIo\nu\næ0k§fqrmo|IokIPir;þoq<iNæIr<oi\nu\næ0k§fqrmo|IokIIfs¥ocIiMnkskski\nu\ntjμμIoiMmoþ°ryo|yqokIu\ndefgLhfiejkMlkmknkio\npqjoMmer<sti\nu\n~z}y]Jpv|wvzk(r)vzydM}v\nu\n~z}y]Jpv|wvzMw}d\n«\n{];p}vdMxv}xv\nu\n~z}y]Jpv|wvzMdx ;lvydL~];vd\nu\n~z}y]Jpv|wvzMw}\n¬\nvd0(r)zzIzd\nu\n{··vdMpvlU;v|yvzw\n~kIioMmersti\nfso\na\nþoIæcqjI0oLsfm|Iæcrsry¥c\na\nyAnky¥gkq;þu\nr0æ\nu\ntjμμI0oi03okmoq3Iæ0ffþ\nmeos\nu\næk§fqr<mo|okI3okmoq3Iæ0ffþIIu\nv kI0oT\n\n3⁄43⁄43⁄4\næ?cfjCþfsZYmMyfcomeo¦joqJc\n\ncfjN0fioMmeoorsIæ0fqkmr<fsVY\na\nþoIæjsMyfc0oym|ksigIoqi|g qfst\na\nu\na\nom\naa\nksigoqiMsruu\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\njie\na\nki¥|¦joq;cNnky¥gkq;þ|ijfqmIuPksigoq<iIuuu\nksigoqiIuu\n}vp|zIdvyd|y}\na\nyfI0oym|ksigoqi|g]qfstcu\nvqqfqqrsmr<stMfnaoymL}dANaAAAACA\nv kI0oka\n\n3⁄43⁄43⁄4\n{irstLyfc|fnaoym|r0æ0|soyoiikq;cNik§oiLmeoorsIæ0fqMkmrfs\na\nþoIæjsMyfc0oym|ksigIoqi\na\nu\na\nom\naa\nksigoqiMsruu\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\njie\na\nyfcI|fnaoym|r0æ|soyoiikq;c\na\nki¥|¦joq;conky¥gkqJþ|ijfqmIuuPksigoqiIuuu\nksigoqiIuu\n}vp|zIdvyd\n\nApril 2003\nBasic Joshua Dictionary\na\nyfI0oym|ksigoqiIu\na<u\n~zI}y];pv|wvzIMpvlU;v|yvzw\nu\n~zI}y];pv|wvzIk(r)vzIydM}v\nu\n~zI}y];pv|wvzIMw}d\n«\n{];p}vdMxv}xv\nu\n~zI}y];pv|wvzIMdx]JlvydL~];vd\nu\n~zI}y];pv|wvzIMw}\n¬\nvd0(r)zzzdIu\na\nþoIæjsNæIrqim|ifI0jmr<fs\na\nu\na\nnc0fy¥æIrsþ|k|ifIjmrfs\na\nki¥\nu\næ0k§fqrmo|okI3okmoq3Iæ0ffþ\nca\n0knþk\na\nnky¥gkq;þ|ijfqmIu\na\nqomjq<s|IæIqfæIrsþ|k|ifI0jmr<fs\na\nyfc|fnaIoym|ræ0|soyoiikqJc\na\nki¥|¦joq;conky¥gkqJþ|ijfqmIuuuuu\n3⁄43⁄4\nqomjqsLsr0NræPsfmerstLijyyooþoþ\nsr0uu\n~];ydp|d}{p];}\na\næcrqim|ifI0jmrfsIu\nu\n~z}y];pv|wvzLw}\n¬\nvdk(r)zzzId\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&O9\n;\n<Z&B<OA !^FA@:BAFAA@<OLC]!A\ne\n\"\n,)(\n\n+\n\"@\n$\n\"\n(uÞ\n\nh\n0(r)Y±20¬3%jHm\n$\n/\no\n\"\n+\nm\no\n\n$1(!o\n,\nc\n+-$+3\nbßLaa<OA J G:HAFAA?<\nLC.!A@:EXB-<\nANGaa p\nh\nA\n(c)1\n'\n3Ld\n\n+\n\nÆ¤0 D±^¬¤1⁄23)(r)¢¤(c)I±2a3!¤O Y0¢ØXJ¤B±^¬MAZ±2(c)±¬OL(r)¢¤(c)I±2a3±20¬F<N\n+\n\"?\n$\nI¬1ID1¥RA\n(YZ3A(c)¤S¬Z0Sa0¬O D^± a\n»I±^>¤C¬Z3¥¦¤L ¦3¬4¤\nQ\n±D!!C\n±¬O\nD230§ 0¢U¢E(r)¢¤J¤0¬\n!3±2¬\n21(r) ¤NMaO P Y0¢£¤\nQ\n3¥\n(r)2¤ Pμ!AW\nAAI\nCI]c Æ3¬Z(c)°]A0A¡\n3c¢¤M¬0O\n(c)U(r)¢¤(c)I±2a3cE¤¬3¥S¤I<N%xA¬« Y3Ia; I¤;1\na3¬\nA\n¤I(c)±DJ3 !Y¢X<NÆ0±¬OI;\n<ZOZE<\nAc E^FA@:BAFAA@<OLC]A\n0¬\n¤J¤\n»I±^)^±E\n¤0\na30XJ¤4(r)¢A] ¤0¥Bo±^¬\nA.0IYZ¤\nI\na\n21(r) ¤\nD1\n!!¤0¥\n3¬(c)\nYZ¤B(r)¢¤J¤¬O!3± 0¬°D1O!!¤¥ON\n\"\n(uÞ\n\n^±A!¿0 )b1¥RA\n0D<\n!±¥Ø±^23¢G!MaX±D!(r)> 3¥RA\n(c)3N^±D!;<N2a\nfmr<fskI\n3¢C\n¥¦¤0¬\n;2a3¬IA\n¤(c)¤ 30^!¤(c)U3O±^¬\na±A!(r)\nN v3⁄40!¤L3;\nZ¬\n^±E\n¤LaX±D!(r)O\na\nqoim\n3¢<Z¥¦¤0¬\n;Oa3¬43AJ2A\n¤P(c)¤0 Y30Z!¤(c)]N\nhØqoim\n3¢<¥¦¤0¬\n;Oa3¬\nA.¤5J¤(c)U±^¬\n\"\nE3c± \"\n3!\n±20¬F O3 >±^¬wa\næff\nzU(r)\n\n3¦jj æ\nB»I\n±2a<\n¥¦3!a<Z¤I?3c\næ0ff\n(r)¢¤(c)I±2a3!¤)»I±^Y53¢<¥S¤¬O;\nz\n3¬Z(c)\n(r)\nY0^ 0»Æ¤(c)\nAc1E3¬1YO±¬O5¤0DJ¤Na\n¥oc\na\nkj\n\n3¬(c)\n0¤0¢23¥RA\n(c)3IC\"^±D!b\n¤J1»Æ0¢(c).\n3¢¤B¬Z\n(r)(r) 0¢<!¤(c)]N\nm\n$\n/\no\n\"\n+\nm\no\n\n$)(o=,\nc\n+K$M+Z3\n\na±A!;>(r)± 0¬Z3G¥¦(c)¤0A>(c)¤0 D±^¬¤(c)3»I±^Y3J\nZZE<OA !μA@:HAFA0A@<O=C.!A@:\nXB-<\nANGDNcð\na3¬I3AJ)XJ¤G3¬1N A 30§ 0¢ 83¦20¬\n°3S±S(c)¤!¬O\n1⁄2J¤\n\n]A<\nAAA@<Z:\"J]CIA@:BD]A2?>VG^AcN·¶·¤)¢;2¤\n(r)¢a¤(c)c¢¤?3¢¤)± (c)¤0¬C\nY±2a3cI!BJ¤¿0 2<OA YG ]D\n]AIN\n\nBasic Joshua Dictionary\nApril 2003\n¤\n3Ld\n\n+\n\nI¬1Y(r)± 0¬U3Ia0a¤0(r)!30A]2¤°E<\nAc Y YG2?D\n]ANØzC]<!ACI!]A°±AG¬O±E\n¤×1\nE°A.¤°J¤0 2ZD 1⁄232J\n<ZOZE<\nAc E^FA@:BAFAA@<OLC]A3c¢¤3I(c)01EXJ¤I±^JNxD¬\n3I(c)(c)±^Y±20¬F iJ¤¤CB<OA!A<cCIA0A@:^F!-:\"^<J.VCIA@:BD]A0 ]>VGAc FA\n¤0 0»1⁄4N\n¶O¤0¢¤I3¢¤U»ÆU»u3<1OP3¿1 Ia03¬\n¥¦3\n¤U¤U(r)¢¤(c)I±2a3cE¤I3¢<¥S¤¬O;P2¤\nQ\n± a03×1\n30§ 3±^ 3A 2¤O!O¥¦¤Z(c).<NcO¢S A¢¤sF¤¬O\nJ¤ i!(r) ¤a± ^1PYZ¤)(r)± 0¬>B<OA!A<CAA?:^F!-:\nJ]CIA@:BD]A2?>VG^AA±^¬P1]¢A(r)¢¤(c)I±2a3!¤2(c)¤0 A±¬O±±2¬μN·¶O\n±A.¤¤0(r)O1⁄2YZ¤O(r)¢¤(c)I±2a3cE¤23¢C\n¥¦¤0¬\n;3(c)¤!¢;&aA¢¤(c)\n(r) ¤0¢<¥¦3c¬¤0¬\n×1\n±¬\n¤3IaI(r)¢¤(c)I±2a3cY±20¬F PE3 ±^¬\n\n(r)\n¥¦0¢¤\n!(r) 3Ia0¤AA\n(r)¢§± (c)±^¬\nM 3!!¤0¢B3Ia0a¤<<NcO¢Oa0a3!±20¬3\nXJ¤\n1]Ua03¬a3^¤O¥¦3a<¢\nJ\n<&Z[\\(:J]AXBAIFM:L<OA<A<CIEAA@<μN\na.±¬Za¤N¤N¥¦3a<¢Ð(c)¤!¢;&aA¢¤2¤Ð3¢C\n¥¦¤0¬\n;G¤3a<±¥¦¤P1\na3cØ±^; Æ±)±DL!20»Æ¤0¢ IAGFa<(r)¢¤(c)± a03± 0¬μ2!3\n¤M(r)\n¤<U!(r) 3Ia0¤NR¶OZ¤>23!¤¢ 3⁄4 Y0¢°¤\nQ\n3c¥Ø(r)2¤\n±APX&3^×1Y3(r)(r)¢0(r)¢<± 3!¤I Y0¢P;\n<ZOZ¡\n¥¦¤0YZ(c)]<NO¶O¤O Y0¢<¥¦¤0¢S¥Ø±]O1⁄4A\n¤B¥¦0¢¤)3(r)(r)¢0(r)¢<±23!¤B 0¢¦±^¬\n¬Z¤¢S20(r)O<N\nPRQ\n3¥\n(r)2¤w\na\nþoIæcrso|qoþ]rykmoNæcqjrm\na\nk|IæIq<jrmIuu\na\nþoIæcrso|qoþ]rykmoMnrq;þ\na\nnrq;þu\na\n0mIiFy0mIi|qoþ]rykmo|fþIoIuu\na\nþoIæcrso|qoþ]rykmoMmersti|mf|ky¥\na\nmqk§oc0oq\na\nqoimLfnaoymiIuu\na\nþoIæcrso|qoþ]rykmoMtjs\na\nq<kstoLykIIrnqoIu\ny2þoimqjymjqo|rsmf|rsimksyo|§kqrknI0oiIu\na\nþoIæcrso|qoþ]rykmoMeki|þ]r<iokio\na\nkmrosmCþ]riokio\na\nq<oimMicNmfiIu\na\ny2þoimqjymjqo|r<smf|r<simksyo|§kqrknIoiGþ]r<iokiocuu\n3⁄4\nkqmr<kI?þoimqjymjqrst\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&X<OA !FA?:HAFAA?<\nLC.!A\n;\n<Z&zX¿]9A@:BAFAA@<OLC]!^]\n;\n<Z& AFA0A@<O=C.!^]ZA\n^\n¤0 3cE¤(c)X230§ 0¢w\n;\n<Z& AFA0A@<O=C.!^]\na\n¤¤B¤CJ¤a<± 0¬\n\"\n!.&3SO¢¤(c)I±2a3±20¬F \"\n(r)]3\n¤O]I!.&3ICESO¢¤(c)I±2a3cY±20¬FJC^a\nPII\n¶x' v\nN\n;\n<Z&B<OA MF.A!^]\ne\n\"\n,)(\n\n+\n\"@\n$\nj\n,\n\n+3L(\n/\no\n\n3L(\n!\n,)3\n!\n(*$h\n¢¤!\n,\n\n+3L(\n/\no\n\n3L(\n!\n,13\n!\n(Y$;o\n\"\n(uÞ\nap\"\n3=3E$1(Y+ih\n\n¤;1l\n,\nm\n$\nÆ¤0 D±^¬¤1⁄23sc&¤!± 0¬μN\n+\n\"?\n$\n¶OZ¤B¬Z3¥¦¤¿0 1⁄4¤sF¤!Y±20¬FN\n,\n\n+3L(\n(c)/\no\n\n3L(\n!\n,)3\n!\n(*$\na](r)]¤a<±^ D±2¤1⁄2YZ¤2(c)I±^¢¤a± 0¬0 3⁄4a<3±^¬\n±^¬\nZ¤sc&¤!± 0¬Ð¢¤I!(r)]0¬(c).\n!N\nI\n¢<¢¤0¬\n×1O 20¬\n×1\n>.C(c)9V\\3⁄4]A<\na<Z3±¬O±¬Osc&¤!± 0¬F3¢¤\n(r)(r)]¢<!¤(c).N\n,\n\n+3L(\n(c)/2CB\n3L(\n!\n,)3\n!\n(*$\nCH\"\n(8Þ\n\naX±E\n¤\nJ\nZ&B<OA !A<cGA] ·YZ¤IJ¤C3¢¤?3¢<¥S¤¬O;Ø!)¤?a0¬OY¢0\n!¢;&aDZ¢¤N\nI\nZ¢<¢¤0¬\n\nZ(r)(r)]0¢<!¤(c)\n3¢¤O×=XOAF]A;]VCIA\n3¬(c)\n\nApril 2003\nBasic Joshua Dictionary\nE<\n.CcXBAIFJ.!^]ON\n\n»Æ0¢\n3°¤;1£(c)5±^¬\n¢;2¤wB¶·¤\nY0¢<¥¦¤0¢2¤0JO1]I!(r)]¤a<±^ 1\nYZ¤o(r)¢<±2¢<±^21\n±¬\n»I\n±2a<41]Y»Æ3c¬\n\n1]¢sc&¤!± 0¬μ¦E?¢;Z¬\nßZ0»Æ¤§ ¤0¢ ðYZ¤J1ZO\n^(3^»Æ3<1O¦¢;¬I3 D!¤0¢\n¢;2¤Ja\n\n¤P23E¤0¢?2¤;Ø1]<3I(c)(c)3!¢<±¬OU!M(c)a;Z¥¦¤0¬\nS¤\n¥¦¤3¬O±¬OE0 L¤°sc&¤!±2¬μN¦¶O\n±AI!¢<±^¬\nEa03¬E¤0¬IA.¤«¢¤C\n¢<± ¤§ ¤(c)?»±N¤Oa±A!(r)G 2Z¬aY±20¬?J\nZZ^E<\n.CcXBAIFJ.!^]ON\n\"\n3=3E$1(Y+\n\n!±^¬\n]2¤E(r)¢¤(c)± a03± 0¬μNS¶OZ¤sc&¤!± 0¬U¢<±]\n¤0¢U»I¤0¬U\n±A\n(r)]3E¤0¢<¬\n±A\n¥¦3!a<Z¤(c)£±¬\n3¬£J\n<ZOZ\n9i O ¢U[>μ#C9V\\3⁄4.A<\nsc&¤!± 0¬FN\n|(A¡K\\(]A<Z\nw\n,\nm\n$\nI¬1\naX±D!(r)\na0(c)¤N«¶OO±D\n±D\nY0¢Ia!!0¥Ø±870¤(c)Þ§ ¤¢!±20¬F\n\nJ\nZ&B<OA MF.A!]·N\n\n3Ia]»Æ3¢(c)sF¤!Y±20¬F2A\n¤Z30§ ¤Ð^±E\n¤A\n3Ia) »Æ3c¢(c)4a<Z3±^¬\n±^¬\nE¢;2¤<\n¤\nQ\na0¤0(r)232¤;1\n¢;¬y\"\n&Y3E$1(\n3^AA.3Ia) »u3¢(c)E¢;2¤<NR¶·¤;15¢¤3cP¤UXJ¤0¢°3o3¬I¤\nQ\n!¤¬μ!± 0¬I0 C¤\n(c)3!30A\n3J¤ 83¬Z(c)J0^± a±\n¥S¢¤J0\"±2¬μS D¢0¥IO±¥ONß=O¢2YZ¤2A.3 !± acB 1⁄2¢;2¤P0(r) ¤0¢C\n3± 0¬wNaO¤¤\n¤\nJ¤a± 0¬\n\"\n^\nZ ¤U3¬(c)UxD¬O Y¤0¢¤0¬a¤ \"\nM(r) 3\n¤\n^\nZ ¤JC^3¬(c)C=xA¬O Y¤0¢¤0¬a¤C\na\nPI\n¶5x' v\nNa\na±E.¤\n¢;Z ¤< sc&¤!± 0¬μ>30§]¤\n¬3¥S¤I ¿3\n¢<±]\n¤0¢E(r)]3!¤¢<¬μ O3¬(c)E3YA.(c)1ONAaX±E\n¤\n¢;2¤I< RsF¤!Y±20¬FØ3¢¤¿3)»Æ31L0 1⁄4\n¤0¬¤0¢3±¬OL±^¬\n0¢<¥¦3± 0¬μN\n4L¤0¬\n1]<\nJ\nZ&O9\nJ0¥¦¤0\n±^¬\nI»I±OE<\n-:LF.A<]Y;\n<Z&×\n3c¬(c)\n¤\nsF¤¢!1>(r) 3!¤0¢<¬IZ¬\n±^ D±2¤I)»I±\"\n3=3E$1(Y+\n±¬«¤Tsc&¤!± 0¬μ IYZ¤TsF¤I!±20¬IA\n(c)1°¢;Z¬F<N\nr8F¤I!±20¬FR¢;¬Ð0¬O\n1M3 D!¤0¢S¤)(c)3!30A\n3J¤O3\nA\n¤¤0¬>¤3¢a¤(c)G3c¬(c)G3cu3(r)(r)¢0(r)¢<±23!¤\nA.3Ia) »u3¢(c)?¢;2¤3⁄4Z30§ ¤AA.¤¤0¬N¢<±]\n¤0¢¤(c)]N\nxD 3⁄41]<5(c)0¬XO\n2(r)(r)×1Z¤oHCI-<OAg\n¤;1»u¢(c). J\nZZE<OA MF.A<]\nZ(r)(r)±2¤)3LA\n(c)01\nY0¢3⁄41]N\nIC¢;¬Y±^¥¦¤\nYZ¤sc&¤0¢!1\n¬O± A± ¤P»I±^Y¤sF¤!Y±20¬Y¢<±]\n¤0¢NqxA )¤0¢¤>3¢¤U¬\n0]±2aB¬Z) 0]±2aS§ 3¢<±230A] ¤\n±¬YZ¤O¬\n±^ D±2¤(c)ksF¤¢!1O ð3ð¤¦¢v3⁄4sc&¤!± 0¬±DØ\n¤0¬¤0¢C\n3!¤(c)U0¬a0¤IN¶·¤(c)¤0 30^O3¬F!»Æ¤0¢C±Av3⁄4N·I¬F!»u¤¢<±^¬\ni¤IO¥S3.¤O¤gsc&¤0¢!1UYZ3\nY¢<±^]\n¤0¢¤(c)YZ¤Tsc&¤!± 0¬Y&a0a¤¤(c)]NiI¬F!»Æ¤0¢<±^¬\nv3⁄4M¥¦3.¤¿Z¤TsF¤0¢!1° Y3±^A I»I\n±2a<\na3¬U¥¦¤3¬>¤0±^YZ¤0¢O3c1⁄2¤s&¤0¢!1N±D ¬Z»¬UE)A.¤SJ\n<&ZA; J.G2<AA i0¢¿YZ31⁄2±^1⁄2±A\n¬0A]¬0»I¬N!SA\n¤R;\n<ZOZA<!AAAcN\nxD ¦YZ¤CZ¬\n±^ D±2¤(c)isF¤0¢!1°a0¬O!3±¬μO 0]± a?§ 3¢<±230A 2¤< 8¤gsc&¤!± 0¬420(r)O< 8(r)¢¤J¤0¬\n±¬O\n±!¤0¢3± 0¬μG0 )3c¬4\nI\nß×Æa0a¤0(r)\n\n3¢<±230A 2¤\n\n3cF¤IJaB¥¦¤0¬]\n¤3Ia<\nJ0^± a±±^¬\n\nA]±¬Z(c)C\n±¬OZ3⁄4 ¢SJ¤S§]3¢<± 3A 2¤<N\nr8F¤I!±20¬FØa3c¬MA\n¤SXJ¤(c)C!O±¬OE¤0¢3Ia\n»I±Ð3¿J¤0¢ X»I±°J0¥¦¤)0¤0¢S(r)¢a0¤I<R¢;Z¬C\n¬\n±^¬\n5¬5Z¤o¥¦3Ia\n±^¬¤ 1⁄40¢o¤<§]¤¬\nJ0¥¦¤U0YZ¤0¢N(c)¤§± a0¤N%O¢o¤\nQ\n3¥Ø(r) ¤\n3sc&¤!±2¬\na2(c)P\n?Ø§ ¤0¢BZ¤)¬¤0»Æ0¢Ð3¬(c)M3'°J0¥¦¤?0¤0¢¿(c)¤§±2a¤)!?3¬μ!»Æ¤0¢¿3sc&¤JC\nY±20¬FN\n!]&3)Z31⁄23?(c)¤0 Y30Z\n»Æ3<1L0 (3']±^¬\nTsF¤I!±20¬F\n\n1]<Ua03¬Ð3AJB»I¢<±^!¤Ø1]¢B0»I¬FN\n¶O¤\n(c)¤0 30^C§ ¤0¢!±20¬\nJ¤N¤0±^YZ¤0¢¤\n(c)¤0 30^O;\n<Z&0¡I¥¦¤0(c)E!> 0¢<¥¦3\n\"\n3=3E$1(Y+\n0¢B3BXJ¤0¢C(c)¤0 D±^¬¤(c)SJ\nZ&0¡Ð¥¦¤0(c)?±^ (30§ 3±^230A 2¤N\n\nBasic Joshua Dictionary\nApril 2003\nPRQ\n3¥\n(r)2¤w\n4¤«(c)¤0 D±^¬¤«3«(r)¢¤(c)± a03!¤\n3c¬(c)¤0¬I»Æ¤\n(c)¤0 D±^¬¤«3°sF¤I!±20¬U3MY¢<±^]\n¤0¢Ð¬£3\n(r)¢¤(c)± a03± 0¬N(r)]3E¤0¢<¬MA±^\nD¢0¥\n\n±A3⁄4(r)¢¤(c)I±2a3!¤N\na\nþoIæcrso|qoþ]rykmoNæff\na\nifomerstMifomerst|oc0ioIuu\na\nþoIæ)¦joimrfs¦Ijoimr<fs\na\nyAnky¥gkq;þ\ny2þfyjosmkmrfs¶periLekiLsfMkkqosmMjioN¶0u\nu\næ0ffT 3 Iu\nPRQ\n3¥\n(r)2¤bR±AØ3sc&¤0¢!1P»I±N¬ZB2]±2a\n§ 3¢<±230A] ¤R±¬NZ¤S¬O± A± ¤(c)sc&¤0¢!1P(r) 3!¤0¢<¬FN\nv kI0oT y\na\nki¥\nu\næffT ac¤qrsm|¦joqJcYy2þf|¦joimrfsiLmIu\n;iÐr<mMmqjoMmekm¶\nu\n~}}T a@¶3\nu\nþoIækjI0mLfFy3⁄4oi\nu\n~}}g a\n];\n0¢P¤\nQ\n3¥Ø(r) ¤01⁄4»u¤M(c)¤0 D±^¬¤32J\n<ZOZ¡E¥¦¤0YZ(c)] 3¬(c)Ð¤ksc&¤!±2¬IJ¤OYZ3\n¥¦¤0YZ(c)]N\nv kI0oka&y\na\nþoIæcrso|qoþ]rykmo|Iomefþ\na\nikcÐæ0ffIu\na\na\nfmrfskc\na\nimqokTNimksþkq;þ|fjmjmNIuu\na\ng rme|imkmoIosm|þIoimqjymjqoþ\na\nifomer<stMifomer<st|oIioIu\na\nu\na\næ0fqIkmMimqoki¶meoLkqtjIosmiozoksþkozNkqoMyfqqoym@¶\nifIomerstMifIomerst|oI0ioIuuu\na\nki¥\nu\næffT ac¤qrsm|¦joqJcYy2þf|¦joimrfsiLmIu\n;iÐr<mMmqjoMmekm¶meoMkqtjosmiT PksþaLkqoMyfqqoym@¶3\nu\nþoIæ0kjI0mMfFyRIoi\nu\n~}}g a\n];\nPRQ\n3¥\n(r)2¤b¿)XJ¤1⁄23sc&¤0¢!1G»I±^N 0]±2a\n§ 3¢<±230A] ¤R±¬N¤sF¤0¢!1G(r)]3E¤0¢<¬μN\nv kI0okA&y\n¶ðM»I¢<±^!¤?1]¢L0»I¬a(c)¤M!N(c)TsF¤!Y±20¬F< 8XJ¤M¤HCI-<OAT\n¤;1»u¢(c).NÆ¶·\n±AE\n¤J1]C\n»Æ0¢(c)?!3.¤Ø3¢<¥S¤¬O;1⁄23¬Z(c)G3OA.(c)01O 3R Y0^ 0»1⁄4w\n\"\n(uÞ\n\nß8sc&¤0¢!1PY¢;ZC§ 3\"&¤¿a00¬\n±¬.&3±20¬\nh\n(r)± 0¬Z3sc&¤0¢!1]Ca0¬O!¤\nQ\nEa\n\nApril 2003\nBasic Joshua Dictionary\n2m\nf\n¶OZ¤2m\nf\n0 S3);\n<Z&B<OA MF.A!^]»Æ0¢ZB^±E\n¤PaX±D!(r)°a0(c)¤\n±^¬\n¤PA.(c)01>0 A3MA\n3Ia]»Æ3¢(c)¢;2¤INxA ¦¤P§ 3\"&¤N J2m\nf\n±A\nFLGA (¤sc&¤0¢!15YZ3PY¢<±^]\n¤0¢¤(c)«¤sc&¤!± 0¬3 3±A<NUxA ?¤\n§ 3\"&¤C0 A2m\nf\n±D\n¬0¬C\"FLGD ·YZ¤sc&¤0¢!1Faa¤¤(c).<N\nI\n3^±^¬\no¤\nJ\nZ&CCIAIA?<U 2Z¬a<±20¬\n¤\nQ\n(r)^± a±×1\n»I±O±¬U¤2m\nf\n3c C\n2»\n3⁄4¤sF¤0¢!1G!?Faa¤¤(c)?¥¦3c¬1G±^¥¦¤<N\n4L±O±¬2m\nf\n\ne\n!\n$)(uf\n±D¿Z¤TsF¤¢!1°(r)¢¤(c)I±2a3cY±20¬\n]±\"§ ¤0¬«E);\n<Z&O9i Æ3 D!¤0¢G¤\nsF¤¢!1P3\nA\n¤¤0¬MZ¬\n±^ D±2¤(c)C»I±N¤sF¤!Y±20¬O×R¢<±]\n¤0¢N\nxD\n3L(\n!\n\nou\n\"./L!\n$\n±AS;\n<Z&A!A<XAA !]&3U±A?¢!1±¬O«!(c)¤0!¤¢<¥\n±¬Z¤o»I¤0¤0¢¤\nsF¤¢!1±D×]¬0»I¬I!?A.¤PY¢;F¤\n3O0(r)(r)]J¤(c)!G 3AJ¤L¢)¬.]¬0»I¬μN\na]±^¥Ø±^ 3¢<×1Ð ¢G3\n3=(\n!\n\nou\n\"]/L!\n$\n\nJ\n<&ZA; J.G2<AAJ !]F3)Y¢<±2¤RE)(c)¤!¤0¢<¥Ø±^¬¤O»I¤0¤0¢S¤sF¤0¢!1G±A\n¬Z»¬NEAA.¤O Y3AJ¤ 3Ø0(r)(r)]J¤(c)?!B¢;&¤)¢\n¬# ¬Z0»I¬FN\n¶O¤\ne\n!\n$)(uf\nC\n,\n\n+3E$¤c?3\n3¢<Z¥¦¤0¬\n3⁄4a03¬Ð3^¥¦!3⁄43^»Æ3<1O\nA.¤O±]¬Z0¢¤(c).N\n2m\nf\n!Z (c)G(c)BZ¤B Y0^ 0»I±^¬\nVw\n-\nxA 1⁄2¤0¢¤P3¢¤C¬C2]±2a¿§ 3¢<±230A 2¤S±¬>¤sc&¤0¢!1O 8(c)¤a<±2(c)¤MJ0¥¦¤0Z»\nß(r)]¤0¢<3(r)O\nAc1\n3 ' ±^¬\nI¤PJ¤0¢L3sF¤!Y±20¬aØ±^ ¦¤Tsc&¤0¢!1°±D¿¢;&¤NxA ¿J Æa3^\n,\n\n+3LdL+\n!#\"\n3Ld\n\n+\nN\ni<U&3c×1\n¢¤0×1\n¬UYZ¤> ¢<¥\na×;\n<Z&CCIAA@<a)!\na3^\n,\n\n+3LdL+\n!.\"\n3Ld\n\n+\nY0¢\n1]N\n-\nxA (¤0¢¤23¢¤¿ 0]±2a¦§ 3¢<±230A] ¤1⁄2(r)¢¤J¤¬O;\nJ^±2a<±^\nJ¤0;\nA]±¬Z(c)I±^¬\nZ1⁄2 0¢A¤0¥\nD¢0¥\nJ0¥¦¤0»IZ¤0¢¤Iß Y0¢o¤\nQ\n3¥Ø(r)2¤I\n¤NXJ¤¢aENe0¢o¤3Ia<U&a\nJ¤0; 1⁄4a03^\n,\n\n+3LdL+\n!.\"\n3Ld\n\n+\nß\"F3×1?§± 3a×J\nZZ;cCCIAIA@<aDaEN\nPRQ\n3¥\n(r)2¤1⁄20 (a;X!!¥SC»I¢<±^!¤¬sc&¤!±2¬μw\n±^¢!»u¤Y(c)¤ A±¬Z¤5¤\n(r)¢¤(c)± a03!¤< B3\nJ\nZ&0¡\n¥¦¤0(c). B3sF¤!Y±20¬F O3¬(c)E3\nA.3Ia) »u3¢(c)?¢;2¤N\na\nþoIæcrso|qoþ]rykmoGg qfmo\na\nkjmefqCnff¥Iuu\na\nþoIæcrso|qoþ]rykmoMjsþoqimksþi\na\nqokþoqCnff¥Iuu\na\nþoIæcrso|qoþ]rykmo|Iomefþ\na\nikcNjsþoqimksþiIu\na\na\nfmrfskc\na\nimqokTNimksþkq;þ|fjmjmNIuu\na\ng rme|imkmoIosm|þIoimqjymjqoþ\na\nqokþoq?nff¥IuGioIæ\na\næ0fqIkmMimqoki¶ozojsþoqimksþioz\n\n¶LqokþIoqCnff¥Iuuu\n\nBasic Joshua Dictionary\nApril 2003\na\nþoIæ1¦joimrfsGg]qr<mrsti|fIæ0|ykoikq\na\nyAnky¥gkqJþu\nu\ng qfmoLykoikq3nff¥\nyAyfþo\naa\n¦joq;cNmqjme|§kIjoMyfsmrsjkmrfs\na\nfmrfskIrtsfqoIu\na\njsI0oii\na\no¦Pmqjme|§kc0jokNmqjoN\na\noqqfqk¶I)yksLfsI<cNki¥0firmr§o¦Ijoimr<fsi\n\n¶uuu\na\nmcNoykiok3nff¥\na\njsnfjsþ|c0ftry|§kqr<knI0o\n3⁄43⁄4\nki¥oþLg]rme03nff¥Mjsnfjsþ\na\nffNæfqq<fNm0e¶pocoLifomerstLmekmLkoikq)g]q<fmoFy¶\nmeos¶poIoMifomerstMoc0ioMkoikq¿g]qfmoFyE¶\næfqCksigoqe\na\nkyyom\naa\nmf¥os|fq<|mcNo\naa\n¶ffq<o@¶\n\nsf|fqoIuu\naa\nimqrstIuuuu\nyaqfNmkqfNmy þoIæ0kjc0m¶lok(r)oI0fMkcIryfN¶0u\njsmr0\na\no¦oksigoqsf|fqoIu\nþIf\na\ng]r<me|jsr0æIrykmrfs\na\njsr0æ<cT3nff¥Mksigoq0u\na\nijyyooþuuuu\na\nfmeoq;g]rio\n3⁄43⁄4\nki¥oþLg]rme03nff¥Mnfjsþ\na\ncIoi|fq<|sf|¶o\na\nlr;þokoikq¿g]qrmoozN3¶3nff¥Iuuuuu\na\nþoIæcqjI0oCg]qrmoqi|jsþoqimksþ|meorq|gfq¥\na\nyAnky¥gkq;þu\nr0æ\nu\ng]qfmok3kjmefq3gfq1¥\nmeos\nu\njsþoqimksþi03kjmefq3gfq¥cu\nv3⁄40»3»Æ¤R;\n<Z&O9I¤sF¤¢!1ON\na\nki¥\nu\njsþoqimksþiLkoikq3nff¥cikcI|¦joqJcYy2þf|¦joimrfsiLmIu\npoIoMifomerstMmekmMkoikq¿g]qfmoFy\nu\nþoIæ0kjc0m¶lok(r)oI0fMkcIryfN¶Fy\nlo0(r)oI0fLkIcryf\nzvdzyMjsþoqimksþiLlok(r)oc0fMkIIryf\n\npoIoMifomerstMoc0ioMkoikq¿g]qfmoFy\nu\nþoIæ0kjc0m¶lok(r)oI0fMkcIryfN¶Fy\nzoksmryc0oNæ0fqCor<nfg]rmμ\nzvdzyMjsþoqimksþiCzoksmryI0oæ0fq?ornfg]rmμ\n\npoIoMifomerstMoc0ioMkoikq¿g]qfmoFy\nu\nþoIæ0kjc0m¶lok(r)oI0fMkcIryfN¶Fy\nffq<o\n];\na\nki¥\nu\njsþoqimksþiLkoikqk¶xkiirfsMfsLmeoMr00o@¶cikc|¦joq;cYy2þIf|¦joimrfsiMmIu\nlr;þNkoikq)g]qr<moMxkiirfsLfsMmeoMr0o3\na\noiMfqCfIu2oi\nzvdzyMjsþoqimksþiLxkiir<fsMfsLmeoLr00o\n\n];\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&X<OA MF]XA<!^]\n;\n<Z&O9\n;\n<Z&O9;:LF.A!]X\n;\n<Z&zX¿]A:?D\nAIA:H>#C9V\\3⁄4]A<Z:=F.A!^]:ALW-W\nAA\n;\n<Z&zG^.C.!A@:B>μ#C9V\\3⁄4.A<Z:=F.A<!^]:\"!ALW-WOAIA\n\nApril 2003\nBasic Joshua Dictionary\na\n¤¤\nYZ¤\nJ¤aY±20¬\n\"\n1⁄4']±¬O\nYZ¤\n~ØJ¤0¢\nr8&¤!±2¬μ \"\n\n(r)]3\n¤\n1⁄4']±¬O\nCZ¤CE~ØJ¤0¢C\nr8F¤I!±20¬FJC^a\nPI\n¶5x' v\nN\n;\n<Z&B<OA !AGA\no\n!\n+-,13Ld\n\n+\n(\n!-/\n$JoL+\n\"?\n$\nj\n,\n\n+Z3=(\n/\no\n\n3=(\n!\n,13\n!\n(Y$Eh\n¢¤I!\n,\n\n+Z3=(\n/\no\n\n3L(\n!\n,13\n!\n(Y$;o\n\"\n(uÞ\nap\ndH&UdH&o\nc\"\n(3 3\n\n$+3\n\n$M+Oo\nc\"\n(M3\nÆ¤0 D±^¬¤°35 Y0¢<»Æ3c¢(c)30¢>A.3a]»Æ3¢(c)\na<3c±¬O±¬OI¢;2¤INS¶OZ¤\n,\n\n+3L(\n(c)/\no\n\n3L(\n!\n,)3\n!\n(*$\n3¢<&C\n¥¦¤0¬\nØ!(r)]¤a<±^ D±2¤3⁄4¤)(c)I±^¢¤a<±2¬Ð0 1⁄4¤O¢;2¤N\n0¢<»Æ3¢(c)>a<Z3±^¬\n±^¬\n4¢;2¤)¢¤!(r)]0¬(c)UE¬¤0»\n3Ia<;?¤0¬\n!¤0¢¤(c)»I±^J\nZ&\n!ANG=G\n\n¤\n¢¤I!(r)]0¬FJ¤Gß^33⁄4±A< ¤¿¢;Z ¤BA\n(c)1N¢\n\n$M+Oo\n(r)]3¢<!a ·a03¬Ð±¬.§ 0§ ¤?(c)¤(c)Fa<±^¬\nÐ3I(c)(c)±^Y±20¬C\n31⁄4 Y3Ia<;¦3c¦3¢¤C3!0¥¦3± a03^\n1Ð3I(c)(c)¤(c)M!?YZ¤G(c)3!30A\n3J¤\n¢¿±^¦a3¬°±¬.§ 0§]¤C¤\nQ\n¤C\na;±^¬\nN3¬1Pa±A!(r)G(r)¢0]¢3¥BN\n\n3Ia]»Æ3¢(c)Na<Z3±^¬\n±^¬\nÐ¢;Z ¤¦¢¤!(r) 0¬Z(c)MEG3P.3(¤0¬\n!¤0¢¤(c)M»I±MJ\nZZ\n)9\nAI1NY¢!1]C\n±¬OU!NJ3±A! 1Ð±^\n\n±AOa03¬I±¬.§ 0§ ¤oJ3±D! ^1±^¬\nI3ÐJ¤0¢<±2¤O0 BYFaa0¤I<!±\"§ ¤NOA\n3A<\n¢I3¬1\naX±A!(r)\n(r)¢0]¢3¥BN\n\n3a]»Æ3¢(c)\na<Z3±¬O±¬O\n(c)¤IN¬030!0¥¦3±2a3^×1\n3I(c)(c)E¬Z¤0»\nY3IaJ!>¤\n(c)3!30A\n3J¤NRaO¤¤>¤EJ¤aY±20¬\n\"\n^\n2¤N3¬Z(c)xA¬\n¤¢¤0¬Za¤ \"\n\n(r) 3c\n¤\n^\nZ ¤JC\n3¬(c)C=xA¬O Y¤0¢¤0¬a¤C^a\nPII\n¶x' v\nN\n(\n!K/\n$;o=+\n\"@\n$\nI¬1oD1¥RA.0IZ31⁄4Z¬\n±usF¤×1G±2(c)¤¬O± A± ¤RYZ¤B¢;Z ¤N\n,\n\n+3L(\n(c)/\no\n\n3L(\n!\n,)3\n!\n(*$\nI¬Z¤\n0 o¤.¤;1»Æ0¢(c)] !]A1\\3⁄4.A<\n0¢\n[>.C9V\\3⁄4.A<\na0¢<¢¤C\n!(r) 0¬(c)±^¬\nZ S¢¤!(r)]¤a<±§]¤×1O S!Y3\nY0¢<»Æ3¢(c)\n¢;Z ¤\n¢535A\n3Ia).C\n»Æ3¢(c)G¢;2¤N;μA¢¤¿¢¤02¤3 J¤IØ¥¦3<13(c)(c)G¥¦0¢¤¿(r)]<!±A] ¤?a0¬C\nY¢01⁄4!¢;Fa<A¢¤<N\n,\n\n+3L(\n(c)/\no\n\n3L(\n!\n,)3\n!\n(*$;o\n\"\n(8Þ\nI\nLXOAF]AJ.VCIAU2¤;A1]<Ya00¬\n¢01⁄2¤Ð¢(c)¤0¢M0 A¢;Z ¤Ð¤\nQ\n¤a&C\nY±20¬FNuE<O.CXBAIF;]!^]2¤;Ø1]E3(c)(c)3!¢<±¬O°3B(c)a&C\n¥¦¤0¬\n;MYZ¤°¥¦¤3¬O±¬O\n0 ?¤>¢;2¤N2μA¢¤>¢¤0 ¤3J¤M¥¦3<1\n3I(c)(c)C¥¦0¢¤O\n¤J1»Æ0¢(c).<N\n\nLXOAF]AJ.VCIA?!3.¤Ø3\n\n\"./L!\n$\n3¢<Z¥¦¤0¬\n\nYZ33⁄4a03¬MA\n¤@w\n-\nv\n¥¦¤0¢<±2a\n\n3¬1E¬Z¬ZCa00¥Ø(r)2¤\nQ\n¬.¥RA\n¤0¢\n±¬Za<\"&(c)±¬O\n+\n;¤ inf\n0¢BC=;¤ inf\nß^±¬O D±^¬\n±^21 aEN\n-\n\nD1¥1⁄2A.0Sß^±¬E»I\n±2a<5a3J¤ YZ¤D1O!!¤0¥\n¢¤3cJ)±^¿3 23\n!(r)]¤a<±23C§]3¢<± 30A]2¤5»IZIJ¤\n¢;¬OY±^¥¦¤§ 3\"&¤\n!Z<Z (c)3A.¤\n¬.¥RA\n¤0¢aN\n-\nE ¢<¥\n\n¤Ga0¥Ø(r)±2¤0¢)¤0¬\n»I¢3c(r)\n¦±1⁄2»±\nß23¥RA\n(c)3Nß aØN×N×Na\n3c¬(c)\na0¥Ø(r)±^ ¤±^;NOxA>!2(c)\n¢¤0A¢<¬\n35¬.¥RA\n¤0¢4»IZ¤¬\na03^ ¤(c).N\n¶O¤M 3¢<\n¤0¢CZ¤\n\n\"./L!\n$\n3¢<¥S¤¬O;\nYZ¤L\n±^]¤0¢CZ¤L(r)¢<±20¢<± C\n1ON\n^\n2¤U»I±^Y\n¬\n\n\"./=!\n$\n3¢<¥¦¤0¬O3¢;¬\nD±^¢!; Ð3 D!¤0¢\n»I\n±2a<3¢JZ ¤L»I±^\n\n\"]/L!\n$\n3¢<¥S¤¬OP3c¢¤U¢;Z¬\n±¬U¢(c)¤0¢\nD¢0¥\nYZ¤BO±]Z¤I!\n!B¤O 0»Æ¤!\n\n\"./=!\n$\nN\n\nBasic Joshua Dictionary\nApril 2003\na\n0¥¦¤\n¤\nQ\n(r)]¤¬μJ¤\n±D\n3<Ja± 3cE¤(c)\n»I±^\n0¢(c)¤0¢<±^¬\n\nX!±¬O\n\nLXOAF]AJ.VCIA]NxA¬\n0¢<»Æ3¢(c)\na<3c±¬O±¬O\n¢;2¤I«±^«a30XJ¤3\n\"\nA.¤!!C A±¢! \"\nJ¤3¢a<\nO¢<Z]I3\n¤3(r)\n0 C¢;2¤N3aa0¢(c)±¬O\nE\n¤§ 3\"&¤\n3<Ja<±23!¤(c)U»I±^Y\n\nLXOA&]A0J]CIA]N\n\n3Ia]»Æ3¢(c)\na<3c±¬O±¬O\n¬O\n0¢(c)¤0¢«¤\na3c\n\"\nA.¤!!C\" D±^¢! \"\nJ¤3¢a<\n\n¢;2¤IØ3\nYZ¤¿a¢<¢¤0¬\nRa<0±2a¤O(r) 0±^¬\n;N\nI¥¦0¢¤ED1¥1⁄2A.0^± aU 1(r)]¤I0 C¢¤3J0¬O±¬OZ 3⁄40¢4J0¥¦¤> ¤§ ¤0)\n¥¦(c)¤0^±¬O\n3¢¤&3c×1(r)¢¤0 Y¤0¢30A] ¤°!°YZ¤°±¬Z(c)I±AJa<¢<±^¥Ø±^¬3!¤\nJ¤¿0 R×=XOAF]A0J]VCA]N\ndH&\n¶O¤CD1¥RA.0O;\n<ZOZ^\n\" <N\ndH&o\nc\"\n(3\na](r)]¤a± A± ¤3¤\na00¬(c)±±2¬μ\nZ¬(c)¤¢£»IO± a\nYZ¤\n¢;2¤\nFaC\na¤¤(c)]<NÆ¶O¤\n&\n\n(\nO0 ¦¤\ndH&o\n(r) 3c¢<A±D¿± (c)¤0¬\n± a033⁄4 Y0¢G Y0¢<»Æ3¢(c)\n3¬(c)UA\n3Ia) »Æ3c¢(c)E¢;2¤<N\niI(\n\n,$\nmZ!\n(\n\"]/L/\nf\nO¤\ndH&o\n(r) 3c¢<JE(c)± A Y¤0¢\n(c)¤0(r)]¤¬Z(c)I±^¬\nN0¬N¢;2¤B21(r) ¤?w\nxD¬\n&\n\n(o\n\"\n(\nmE¢;2¤O¤\ndH&o\n(r)]3¢<A±AO¤\n3=(d ÞÞK$1(\n(r)]3¢<;NxAOa3¬\nA.¤L0¬¤L0¢)¥S¢¤G(r)¢¤(c)±2a3±2¬μ< EJ±^¬¤(c)MAc1GJ\nZ&]<\n0¢\nJ\n<&Z^\n]ANSaX±A!(r)I Y0¢<¥BEß a03^ ¤(c)i\n(\n\n,$\nm!\n(\n\"./\n+\nm\n$\naoa3¬\nA.¤E±^¬aF(c)¤(c)\n±¬U¤\ndH&o\n(r)]3¢<0 M ¢<»u3¢(c)\n¢;2¤I< S3 »Æ¤0AN\na\n¤¤)Z¤PJ¤a<±2¬\n\"\n¶·¤]I!.&3\n^\nZ ¤\nI\n0¥Ø(r)±^2¤¢ \"\n±^¬kZM Z!.\"\ni%$¤&'$1(*$M+K,M$(e\n\"\n+\n!#\"]/AN\nxD¬2\"\n,Mn.o\n\"\n(\nm>¢;2¤\n¤\ndH&o\n(r)]3¢<1⁄2±A\n¤\"\n,13=d\n\n+\n(r)]3¢<;N5xA\na3¬\nA.¤Ð0¬¤Ð0¢L¥¦0¢¤N(r)¢¤(c)±2a3±2¬μC3C30A\n§ ¤\n32»Æ¤0¦3C3c¬1\na±A!(r)La0¬μ!Y¢;Fa<;N¶·¤J¤SA\n¤a0¥¦¤)!#2\nÞ\n\"./EN\n\n$M+\n¶O¤CD1¥RA.0O;\n<ZOZ^\n!μAION\n\n$M+Oo\nc\"\n(3\na](r)]¤a± A± ¤«¤Ia0¬aX!± 0¬F(c)¢3»I¬\nA¢¥\n¤\n¢;2¤N2¶·¤\n&\n\n(\n\n0 RYZ¤\n\n$M+Oo\n(r)]3¢<Ø±A¦± (c)¤0¬\n± a031⁄4±¬° Y0¢<»Æ3¢(c)N3¬Z(c)GA\n3Ia).C\n»Æ3¢(c)¢;2¤<N\niI(\n\n,$\nmZ!\n(\n\"]/L/\nf\nI¤\n\n$+\no\n(r) 3c¢<J2(c)±^ D Y¤0¢L(c)¤0(r) ¤0¬Z(c)C\n±¬O0¬N¢;2¤B21(r)]¤@w\nxD¬\n&\n\n(o\n\"\n(\nm5¢JZ ¤)¤\n\n$M+Oo\n(r)]3¢<B±A)¤0\"\n,13=d\n\n+\n(r)]3¢<;N\nI\n3¬\nA.¤L0¬¤L0¢)¥S¢¤G(r)¢¤(c)±2a3±2¬μ< EJ±^¬¤(c)MAc1GJ\nZ&]<\n0¢\nJ\n<&Z^\n]A 3R»Æ¤0^Æ3Ø3¬1Pa±A!(r)La0¬μ!Y¢;Fa<;N\nxD¬12\"\n,n]o\n\"\n(\nm\n¢;2¤?YO±D?±A2Z¤\n3L(Md ÞNÞK$)(\n(r) 3c¢<JNa¿X!BA\n¤3\n!±¬O] ¤Cß¬0R32a00¥Ø(r) Z¬(c)au(r)¢¤(c)± a03± 0¬FN\nv3⁄40!¤oYZ3)¤\ndH&\n3¬Z(c)\n\n$+\na<230J¤Ga3c¬\naa¢M±^¬Y¤±^¤0¢N0¢(c)¤0¢N%O¢o¤\nQ\n3¥Ø(r) ¤\nJ¥S¤G(r)¢0]¢3¥Ø¥¦¤0¢B(r)¢¤0 ¤¢?!P(r)23Ia¤P¤\n\n$M+Oo\n(r)]3¢<B 1⁄2A.3Ia) »u3¢(c)N¢;2¤B D±^¢!J uJ\nYZ3R¤2Y¢<±^]\n¤0¢?ß^(r)¢a¤(c)c¢¤2¤3I(c)a\n3c»Æ3<1OSa0¥¦¤Ø A±¢!;N\nP\n±¤0¢)\n¤C3¢<¢3¬\n\n¤C\n¥¦¤0¬\n;¦!Z0»I¬MA.¤020»\n±A\n§ 3^± (c).N\n<æ\nu\n\nLpeos\nu\n\n3¬(c)\npeos\nu\n\n°<æ\nu\n\nApril 2003\nBasic Joshua Dictionary\nI¢;Z ¤O×A3Ia<±2¬U(r)]3¢<Aß¤\n\n$M+\nC(r)]3¢<\n0¢<»Æ3¢(c)L¢;2¤< i3¬(c)L¤\ndz&o\n(r)]3¢<\nA\n3Ia).C\n»Æ3¢(c)N¢;2¤JaØa3¬!(r) ¤a± ^1U3¬1IZ±!30A]2¤L3Ia<±20¬FßDJaE Æ&a\n3O3I(c)(c)I±^¬\nI¢?¢¤0Y¢3a<±¬O\n(r)¢¤(c)± a03± 0¬F<\nX!±¬OYaX±D!(r)Ya(c)¤>EI(r) ¤0¢< Y0¢<¥\n¤0¥RA\n¤(c)(c)¤(c)EE¤!;N0¢°a0¥Ø(r)!3±20¬F<\na3^±^¬\n>J\n<ZOZ\n¢?;\n<ZOZ×!AGLGD 1⁄4±¬O!¤¢3a<±¬O»I±^YY¤oJ¤0¢ (¢Ð(c)±A!(r)23<1±¬O\n¥¦¤<J3\n¤<N¢4LZ¤0¬\n1 Z¢\naX±A!(r)\na(c)¤\n(c)¤\n±^E¤0¢3±20¬F<\na3^\n¤\n2¬Za<±2¬\nJ\n<&Z;CNCIAIA@<5±^¬F!±2(c)¤o±^)!o ¤0 !]F3]¬0»\nZ3)¤a;Z¢<¢¤0¬\nPJ¤0? AA]±¬Z(c)C\n±¬OZP±DMa0¢<¢¤aJNq¤0¢<»I±AJ¤I\naX±D!(r)5a(c)¤\n\"\nFaa0¤¤(c). \"\nAc1E¢¤0A¢<¬\n±^¬\n5¬Z0¬C\"F=GAN\na\n¤¤\n¤\nQ\n3¥Ø(r) ¤\nA.¤02»\nN\nxD S¤o3Ia<±2¬«(r)]3¢<¿0 B3N Y0¢<»Æ3c¢(c)¢;2¤Na0¬\n!3±^¬F?3N(r)¢¤(c)I±2a3±20¬\nZ3B±A¿¬0¿¤0¥¦C\nA.¤(c)(c)¤(c)Ð±^¬\na±A!(r)>a0(c)¤\n\n±AO¬Z¤0»I\n1I(c)¤(c)c&a0¤(c) Y3IaA±A)30Z!¥S3± a03×1>3I(c)(c)¤(c)EM¤\n(c)3!30A\n3J¤P»IZ¤0¬I¤P¢;Z ¤M¤\nQ\n¤a!¤?ß 32J\n<&Z×!AGLG\n±DO±¥Ø(r)±2a<±^!aNIvR!¤P3c)&a<\n3E(r)¢¤(c)± a03± 0¬£a3c¬\nA.¤IA.3Ia)#sc&0!¤(c)]NJxA PYZ¤4(r)¢¤(c)I±2a3±20¬I±D¤0¥RA\n¤(c)(c)¤(c)\n±¬IaX±D!(r)O\n0»Æ¤§ ¤0¢ 1]<\n¥RX!P¤\nQ\n(r)^± a±×1\nJ¤>3;\n<ZOZ×!AGLGS!U±^¬FJ¤0¢<C¤U Y3a<C±^¬\n!U¤\n(c)3!30A\n3J¤N\n¶O¤U3Ia<±2¬5(r)]3¢<?0 )3oA\n3Ia]»Æ3¢(c)I¢JZ ¤Ð3P3¬5±¥Ø(r)^± a±\n;\n<Z&O9£3¢¬Z(c)>±;N\n\n3Ia]»Æ3¢(c)o¢JZ ¤M3Ia<±20¬>(r)]3¢<;¿3I(c)(c)o¬G(r)¢¤(c)I±2a3±20¬FBEP¤L(c)3!30A\n3J¤ ð¬O ¤<Ø1]<\n¤\nQ\n(r)^± a±×1?XJ¤¿3\nJ\nZZ×!AGLGI!¿3aa0¥Ø(r)^±D!N\n±A<N\n\nA\n3Ia) »Æ3c¢(c)I¢;Z ¤O×\nY¢<±^]\n¤0¢5(r)]3¢<EßZ¤\n\n$M+Oo\n(r)]3¢<!aÐ¥R!4a0¬μ!±D!40 >3U!±^¬\n]2¤\n(r)¢¤(c)± a03± 0¬FNO¶O¤\nY¢<±^]\n¤0¢a03¬\na00¬\n!3±^¬\n0]± a\n§ 3c¢<± 30A]2¤I<NO¶O¤J¤E§ 3c¢<± 30A]2¤I43¢¤\nA.¬Z(c)NAI1U¤P¬\n±^ D±2¤0¢G»I¤0¬\n¤MY¢<±^]\n¤0¢C(r)]3¢<¿ ¦Z¤L¢;2¤L±A¿¥¦3!a<Z¤(c)°3\n3±^¬F!\nYZ¤bsc&¤0¢!1\n\nYZ¤;1L3¢¤OYZ¤0¬N(r) 3<J¤(c)?!OYZ¤¿3Ia± 0¬N(r)]3¢<Øß^YZ¤\ndH&\nC\"(r) 3c¢<EaEN\n\n¢<»u3¢(c)o¢;Z ¤O×O¢<±^]\n¤0¢C(r) 3c¢<)ß^¤\ndH&\nC(r)]3¢<!aØ¥¦3<1>a0¬\n!3±^¬E3¬«3¢;A]±^E3c¢!1¬.¥RA\n¤0¢\n¦(r)¢¤(c)±2a3±2¬μ)3¬(c)ÐaX±D!(r)U Y0¢<¥B<N¶·¤L¢<±]\n¤0¢)a03¬«a0¬O!3±¬\n0]±2a2§]3¢<± 3A 2¤<NO\nY0¢<»Æ3¢(c)?¢;Z ¤O×R¢<±]\n¤0¢\nA.¤0Z30§ ¤¿3 3⁄4 ^2»qw\n-\nxA AZ¤¢<±]\n¤0¢L±A?3Ð(r)¢¤(c)I±2a3±20¬F Æ±¿±Db\"\n3Ld\n\n&YdL$\nm5»IZ¤¬±¿3¿A\n¤¤0¬E¥S3Ea¤(c)\n3c\n3±¬μ!¿3o(r)¢¤(c)±2a3±2¬«±^¬«¤o(c)3!30A\n3J¤NÆ¶·¤ 0]±2aC§ 3¢<±230A 2¤)±¬«¤Y¢<±^]\n¤0¢\n3c¢¤oA.Z¬(c)>AI1«YZ¤o¬O± A± ¤0¢o»I¤0¬YYZ¤¢<±]\n¤0¢o(r) 3¢<G0 )¤¢;Z ¤±AG¥S3!a<¤(c)\n3c\n3±¬μ!(¤)(c)3cE3A.3J¤O(r)¢¤(c)± a03± 0¬μN\n-\n¶·¤\nY¢<±^]\n¤0¢I¥S3<1\nA\n¤\na±A!(r)\n¢<¥\nß^»Æ¤\na03&a<\n¢<±^]\n¤¢\n(\n\n,$\nmZ!\n(\n\"]/\n3L(d ÞÞK$1(\naN2a &a<\n3U¢<±^]\n¤0¢\n¥¦3<1£A\n¤£J3±D! A± ¤(c)£±¬\n»Æ3»Æ3<1OwxD °±I¢¤0A¢<¬μ\n;\n<ZOZ^\n·±Ø±D¦¢¤0\n3¢(c)¤(c)N3OJ3±A! D±2¤(c)]NxDØ±DA3AJ2¢¤0\n3¢(c)¤(c)3OJ3cY±A! D±2¤(c)¤3Ia<\n±^¥¦¤O±3⁄4a03^DuJ\nZZ;cCCIAIA@<μN\n-\nxA C3I(r)¢a¤(c)Z¢3A¢<±^]\n¤¢Ð¬¤§ ¤0¢Ua3^AO;\n<Z&CCIAA@<μ\nAG¥¦¤0¢¤×1E¢¤0A¢<¬μ\n;\n<ZOZ^\n)0¢S;\n<ZOZ^\nFLGA 8¤0¬4±^B3Ia<;)3)3\n&Yd\n/\n3E$)(\n0¬4¤L(r)¢¤§±2OY¢<±^]\n¤0¢\nß2¤0±¤0¢B3Iaa0¤0(r)±^¬\nN¢S¢¤AEJ¤a<±^¬\nMYZ¤SA]±¬Z(c)I±^¬\nZR(r)¢(c)c&a0¤(c))Ac1P±;R(r)¢¤(c)¤a¤<J0¢JaN\n-\n\n(r)¢a0¤(c)Z¢3\nY¢<±^]\n¤0¢M¥¦3<1«3cDJ3Ia?3G3\nÞ$M+K$)(\n\"\n\n(\nu(r)¢(c)Fa<±^¬\nYJ¤§ ¤0¢3S3Ia0C\na0¤0(r)!30A] ¤CJ¤0JØ0 uA ±^¬(c)±^¬\nZØ3¬(c)Ga03^±^¬\n)J\nZZ;cCCIAIA@<o Y0¢B¤3a<Ð0¬¤N\n-\naO0]± aU§ 3¢<±230A 2¤N»I\n±2a<Ea0a;¢° ¢°¤4 D±^¢!L±^¥¦¤4±¬E3«(r)¢a¤(c)Z¢3¿¢<±^]\n¤0¢\n¥S3<1YA.¤4A.Z¬(c)5Ac1Ua3c^±¬OJ\n<&ZUF\" ¡NØa0]±2a°§ 3c¢±230A] ¤Ð3co3c¢¤«¢¤0 Y¤0¢C\n¤0¬Za¤(c)Ð±^¬E3N(r)¢a0¤(c)Z¢33⁄4¢<±^]\n¤¢?AB»I\n±2a<Ea0a;¢G±^¬E3¬E¤3¢<^± ¤0¢G¢<±]\n¤0¢ Æ3¢¤\nA\n¬Z(c)?!OYZ¤S§ 3cF¤¿¤!!30A]±A!¤(c))AI1PYZ¤¿¤3¢<^± ¤0¢S¢<±]\n¤0¢B(c)c¢<±^¬\nM¤)¤\nQ\n¤a±2¬\n0 1⁄4¤Oa±A!(r)G¢<±^]\n¤¢N\n\nBasic Joshua Dictionary\nApril 2003\n-\n¶·¤o2]±2a3c¦a0¬O¬¤a<±\"§ ¤g\"\n+\nm\na3c¬«A\n¤MXJ¤(c)>!o]¢<Z(r)I¤o¢<±^]\n¤¢?±^¬\n!>\nA\nC\n]¢Z(r)\nP3^S0 O»IO± a5¥RX!OA\n¤>J3±A! D±2¤(c)]N\n¶OZ¤o20]± a03Sa0¬O¬¤a<±\"§ ¤T\n(\na3¬EA\n¤\nXJ¤(c)P!)]¢(r)¤2(r) 3!¤0¢<¬F\n±¬O!P\nA]]¢(r)OS3¬1o¬Z¤?0\n»IO± a¥RX!\nA\n¤PJ3!C\n±A! D±2¤(c)]N\n-\n¶·¤?Y¢<±^]\n¤0¢O(r)]3¢<\n0 1⁄23G Y0¢<»Æ3¢(c)L¢;Z ¤Ca03¬U±¬Za<\"&(c)¤2¤.¤;1»Æ0¢(c)ÐVAZAF]A¦ Y0 C\n20»Æ¤(c)PAI13P20]± a¿§ 3¢<±230A 2¤P3 D!¤0¢?3¬1N¢<±^]\n¤0¢)(r) 3!¤0¢<¬FN58Z¢<±¬OYZ¤P¤\nQ\n¤a±2¬\n0 S¤¢;2¤ I\n±A¿20]± aC§ 3c¢<± 30A]2¤M±ABA\n¬(c)UE¤M(r)¢¤(c)I±2a3±20¬«YZ3B¥S3!a<¤(c)\nZ¤B¢<±]\n¤0¢S(r) 3cY!¤0¢<¬N±^¥Ø¥¦¤(c)I±23!¤0\n1P(r)¢¤a0¤(c)±^¬\nMYZ¤O\n¤;1»u¢(c)VAZA&]A0<N\n-\n\n(r)¢a¤(c)Z¢3(¢<±]\n¤0¢2¥¦31Ð(r)¢§±2(c)¤L3¬\n3¢<¥¦¤0¬O¦EOJ\n<ZOZ;CCAIA@<I»IO± a\n!Z2(c)MA.¤M3mK\"\n\"?2\"?\n$Jo\n\n(*$\nm\ndL,\n\"\n3Ld\n\n+\nN xD Ø±^A(c)¤I?J\n\n±AA(r)¢¤(c)I±2a3cY±20¬I±DB¢¤3cE¤(c)\n3 S± 1⁄2±^\n3I(c)¥¦3!a¤(c)o3P¬0¢<¥¦3\n¢<±^]\n¤¢C 1⁄2¤C¢;Z ¤NIxA R¤0¢¤C±AB3o;AAF]A0\n\n¤;1»Æ0¢(c)U Y0^ 0»I±^¬\n\n¤N(r)¢a0¤(c)Z¢31⁄2¢<±]\n¤0¢ Æ¤0¬E¤N 0]±2aG§ 3¢<±230A] ¤N Y0^ 0»ÆC\n±^¬\nM±^(»I±^\nA.¤AA.¬Z(c)?!B¤m-\"\n\"?2\"@\n$;o\n\n(Y$\nm\ndL,\n\"\n3=d\n\n+\nN\n!]&3o!E0¢¤A3¬Z(c)L¢¤0¢<± ¤§ ¤¦¢;Z ¤ØAI1NYZ¤±^¢¿¢<±]\n¤0¢<NR4LZ¤¬I3G¬¤0»E¢;Z ¤?±AA(c)¤C\nD±^¬¤(c)] Æ¤N¢;Z ¤Ða0¥Ø(r)±^ ¤0¢Ð!!0¢¤I2¤N¢;Z ¤O×2¢<±^]\n¤¢L±^¬53(r)23Ia¤Ð3(r)(r)¢0(r)¢<± 3cE¤N!\nYZ¤U¢;Z ¤°21(r)]¤N\n¶·¤«D1\n!!¤0¥\nD±^¬(c).3¬(c)¤\nQ\n¤a!¤3(r)(r)±2a3A 2¤U¢;Z ¤GAc12a03±¬O\nYZ¤0±¢M¢<±^]\n¤0¢\n\n!±¥\n±23¢<×1\nu±^?(c)¤02¤!¤)¬O»Æ3¬OE¤(c)>¢;2¤)Ac14¢¤0¥¦§±^¬\n«¤0±^¢M¢<±\nC\n\n¤¢<N8aO¤¤C¤J¤a<± 0¬\n\"\n¶·¤ !]F3\n^\n2¤xA¬(c)¤\nQ\n±¬OSO¢0!a0 \"\n±^¬T !#\"\ni%$'&'$1(!o\n$M+K,M$(e\n\"\n+\n!#\"]/AN\n63⁄4¤0¢¤G3¢¤J0¥¦¤G¤\nQ\n3¥\n(r)2¤<NX±¢!; ðZ¤0¢¤O¦Z»£!)XJ¤?¤B<O.CXBAFJ]]\n¤J1]C\n»Æ0¢(c)]N4N¤IJ¤E3 Y0¢<»Æ3¢(c)\n¢;2¤E3U3¬U¤\nQ\n3¥Ø(r) ¤ 3⁄4AUE<O.CXBAIF;]!^]\n»Æ0¢Z\n± (c)¤0¬\n± a03^\n1P Y0¢ØA\n3Ia) »Æ3c¢(c)?¢;2¤<N\na\nþoIæcrso|qoþ]rykmoÐq<okþi\na\noqifsMefg|jyeIuu\na\nþoIæcrso|qoþ]rykmoÐr<i|nff¥gfq\na\noq<ifsIuu\na\nþoIæcqjI0oLirNIo\na\nyæfq;gkqJþYy2þfyjosmkmrfs¶!þIosmr0æcroiMnff¥gfqi@¶0u\nr0æ\nu\nqokþik3oqifsLyfsimksmIc\nmeos\nu\nr<i|nff¥gfqT3oq<ifsIu\n¶ð«¢¤0¢<± ¤§ ¤EYZ¤(c)a¥¦¤0¬OE3cY±20¬\n!Y¢<±^¬\n£0 LO±D¢JZ ¤ RXJ¤«¤Ea±A!(r)3 2¬Za<±2¬\nJ\n<&Z^B<O.CcXBAIFJ.!]·N\na\nþfyjosmkmrfsirI0oIu\n¶!þosmr0æIr<oiMnff¥gfqMi@¶\n63⁄4¤0¢¤)3¢¤CJ0¥¦¤)¤\nQ\n3¥\n(r)2¤Ø0 1⁄4 ¢<»u3¢(c)Pa<3c±¬O±¬OZNO¶O\n±AR A±¢!R3L!±¥Ø(r)2¤)(c)¤a<23¢3±\"§ ¤\n¢;2¤@w\na\nþoIæcqjI0oLtffþ|yk¥o\na\nyæ0fqJgkq;þu\nr0æ\nu\nksþ\nu\nqrioik3yk¥oGaIjimqr<tem\nu\nyfIfq3yk¥oMo§osI<cI|tfI<þI\nu\nmo Imjqo03yk¥ofrim\nu\nmkimok3yk¥oGaIjimqr<tem\nmeos\nu\ntffþ3yk¥ocu\nv3⁄4¤\nQ\n¦±AO3¬\n¤\nQ\n3¥Ø(r) ¤L0 R!±^¬\n°YZ¤w×(r)(r)]¢<J.¤;1»Æ0¢(c)NEL3c20»U¤?A\n(c)1U0 Ø¤\n¢;2¤B!B¢¤0 Y¤0¢¤0¬a0¤B¤O¢<±]\n¤0¢<±^¬\nM Y3IaJw\n\nApril 2003\nBasic Joshua Dictionary\na\nþoIæcqjI0oLtffþ|yk¥o\na\nyæ0fqJgkq;þu\nr0æ\nu\nksþ\nu\nqrioik3yk¥oGaIjimqr<temEyAijfqmk3cæ\nu\nyfIfq3yk¥oMo§osI<cI|tfI<þIyAijfqm03Iæa\nu\nmo Imjqo03yk¥ofrimyAijfq<mk3IæA\nu\nmkimok3yk¥oGaIjimqr<temEyAijfqmk3cæ1A\n\nmeos\nu\nksþ\na\n~fqkmLm¶o»peooqokifs°)merstLmekmoiÐriLtffþUriMmekmFyY¶\n3yk¥oIu\na\nikcT3Iæ u\na\nikcT3IæaIu\na\nikcT3IæAIu\na\nikcT3Iæ1Au\nu\ntffþT3yk¥oIu\n63⁄4¤0¢¤C»Æ¤N!0»U0»\n30SO¢a¤(c)c¢3\n¶·¢<±]\n¤0¢Ca3¬UA\n¤2J¤(c)o3O3L\n¤¬Z¤0¢3!¢NeI¬Za¤\n31⁄4¢<±]\n¤0¢ØA.¤0 Y0¢¤?¤?(r)¢a¤(c)c¢31⁄4Y¢<±^]\n¤0¢)3c¢¤2¥¦3cEa¤(c). ·±^\n¤\nQ\n¤a;Z!¤IA3¬Z(c)L\n¤0¬C\n¤¢3cE¤R»Æ¿3Ia0a¤0(r)E3A 2¤SA]±¬Z(c)I±^¬\nZR Y0¢Oea00 0¢N\na\nþoIæcqjI0oLtffþ|yk¥o\na\nyæ0fqJgkq;þu\nr0æ\nu\nksþ\nu\nqrioik3yk¥oGaIjimqr<tem\nu\nmo Imjqo03yk¥ofrim\na\n0ffNæ0fq?yfI0fqMrsa\no§osI<c|tfI<þosryoI<cI|nqfgIsIu\nþf\na\njsræ<c3yfI0fq?yfI0fqu\na\nijyyooþuu\nu\nmkimok3yk¥oGaIjimqr<tem\n\nmeos\nu\nksþ\na\næfqkmLm¶o\na\noiÐr<iMkMtffþoyk¥oGg rmeMyfI0fqboi@¶\n3yk¥o03yfIfq0u\nu\ntffþT3yk¥oIu\n63⁄4¤0¢¤B±A1⁄23c¬Ð¤\nQ\n3¥Ø(r) ¤) (3)(r)¢a¤(c)Z¢3I¢<±^]\n¤¢\nA\n¤±^¬\nPJ¤(c)G3 1⁄23) D±^^E¤0¢w\na\nþoIæcqjI0oLyeoy¥|moNoqkmjqo\na\nyYæ0fq;gkq;þu\nr0æ\nu\nksþ\nu\nmooqkmjqo|jioþ3fnaoymk3moN\na\nAaAk3moNAiiIu0\n3⁄4\no IkNI0oLfIæPriMjioþokiMkNæcr00moq\nmeos\nu\nyfqqoym|mooqkmjqo|jioþ3fnaoymk3moNIu\na\nþoIæjsMyeoy¥|f§os|iommrst\na\nu\na\nyc0okq0u\na\nmoI\nu\nmoNoqkmjq<o|jioþMaoI<c|qfcAiAIu\na\nki¥\nu\nyfqqoym|mooqkmjqo|jioþMaIoI<c|qfI3moNc'qrsm|¦joq;cuu\na\nyeoy¥|f§Ios|iommrstcu\nu\n}yyvp|pvwxvyzp{yv|{dvlGhv|y}kAiA\n];\n±^¬3^×1\nX¤0¢¤B±AØ3¬Ð¤\nQ\n3¥Ø(r) ¤A!±^¬\nM¬¤!!¤(c)\"\n+\nmO×Ø3¬Z(c)\n(\nO×w\na\nþoIæcqjI0oCþoþjyo|ksyoimq;c\na\nyæ0fq;gkq;þu\nr0æ\nu\nfq\nu\nri|kqosm|fIæ3fI<þ3cfjst\nu\nksþ\nu\nri|ksyoimfq|fIæ3fI<þT3]r;þþ0o\nu\nri|kqosm|fIæ3]r;þþok3cfjst\nmeos\nu\nr<i|ksyoimfq<|fIæ3fI<þ3cfjstIu\n63⁄4¤0¢¤¿3¢¤CJ0¥¦¤¿¤\nQ\n3¥\n(r)2¤(X!±¬OGA\n3Ia]»Æ3¢(c)Pa<3c±¬O±¬OVw\n\nBasic Joshua Dictionary\nApril 2003\na\nþoIæcqjI0oLikr00fq|kI0oqm\na\nyDnky¥gIkq;þu\nr0æ\nu\nfq\nu\nyfsþ rmrfs|fIæ?g rsþotjimrst\nu\ngokmeoq|IæfqoykimMi¦IjkI0i\nmeos\nu\nr<iijo|gkqsr<stMiIkI0|yqkIæ0mLkI0oqmIu\n3⁄43⁄43⁄4\nriLyfþoorsMkymrfs0kqmLfIæPnky¥gkqJþ°qjIo\na\nþoIæcrso|qoþ]rykmoMtffþ|mf|qokþ\na\nnff¥Iuu\na\nþoIækqkIomoqNnff¥iNa\nþoykIoqfsLyksmoqnjq;cI|mkI0oiMtkq<tksmjk|ksþI|ksmktqjoc\nmf|aIfsoiLykmye|aaIuu\na\nþoIæcqjI0ooqokþ]r<st|IIr<im\na\nyDnky¥gIkq;þu\nr0æ\na\nmcNoykio03yksþ]r;þkmo|nff¥\na\njsnfjsþI|I0ftr<y|§kqrknI0o\na\nffNæfqCnff¥Ðrs0Nnff¥iN\nþfrst\na\ng]rme|jsræIrykmrfs\na\njsr0æ<cT3yksþ]r;þkmo|nff¥Mnff¥Iu\na\nijyyooþuuuu\na\nfmeoq;g]r<io\na\nIonoq3yksþ]r;þkmo|nff¥kNnff¥iNIuuu\nmeos\nu\ntffþ|mf|qokþ3yksþ]r;þkmo|nff¥Iu\na\nki¥\nu\ntffþ|mf|qokþT3 'qrsm|¦joq;cu\nu\n}}l|p}|yvzlLlvzwvy}\nu\n}}l|p}|yvzlLzpvy(r){yI|pzvd\nu\n}}l|p}|yvzlLzyzIp{z|zl|xzpzy{v\nu\n}}l|p}|yvzlLp}w|hI}vd\nu\n}}l|p}|yvzlLzp|aa\n];\nð°a03¬Ð±¬O\n±\"A ±^(A.3a]»Æ3¢(c)La<Z3±¬O±¬O¢;2¤¿±^¬]§ a3cY±20¬AI1L(r)]3<!±^¬\n2;\n<Z&×FLG\nYZ¤GE<\n-:B>.C9\\3⁄4]A<Z:\"A<G^AO\n¤J1»Æ0¢(c)L3¢<Z¥¦¤0¬\n3⁄4!Ø;\n<Z&O9\nß¤2(c)¤0 Y30Z\n§ 3\"&¤\n±DuJ\nZZ^×JaNRxD¬NO±DØa3J¤O¤?D1O!!¤0¥\n(c)¤1⁄20¬O\n1M32(c)3!30A\n3J¤B2Z(r)\nN\nð\na3c¬Ua30XJ¤4A.3Ia) »u3¢(c)ysc&¤!±2¬£±¬.§ a3±2¬IAc13(r)]3<!±¬OJ\nZZ^×U3Ð¤\nB<O-:LF]XA<!^]J\n¤;1»u¢(c)P3¢<¥¦¤0¬O(!R;\n<Z&O9ßZ¤¿(c)¤ 30^(±AuJ\n<&Z^\nμ=G2aN\n\nApril 2003\nBasic Joshua Dictionary\ni2<#D]VCIA?<i]VCIAAFJJt(]!A.\na]±\nQ\nA±^^EC\"±^¬Ð¥¦(c)¤0A\n3c¢¤230§ 3c±230A] ¤) Y0¢B(r)¢¤(c)I±2a3cE¤Ø±^¬GJ\n<&Z\n)9\n.3A<Nð¶O¤J¤\nD230§ 0¢C(c)°\nAZJ¤0JC0 A»3ØJ\nZZ\n)9\n¬0¢<¥¦3^×14(c)¤<\nAI1I ¤30§±^¬\nE20¬¤\n¢¥¦0¢¤40 ?¤E!!¤(r)O)J\nZ&O9;:L<Z]J& I;\n<Z&O9;:\"A<cGAc R¢P;\n<Z&O9;:\nF]XA<!^]cNO¶O.1⁄2¤O¥S(c)¤0DAJ30§ ¤23Ca¤0¢<!3±¬3c¥¦¬\n1⁄20\n<§]¤¢<Z¤3I(c)C»IZ¤¬oZ¤±^¢\n(r)¢¤(c)± a03!¤IG3¢¤XJ¤(c)43?\n3A?ECJ\nZ&O9ðN1⁄4¶OZ¤°!!¤0(r)O?YZ3\"\n(*$\n(c)0¬¤3¢¤\n±¬Z(c)I±2a3!¤(c))AI1G¤O¬3¥S¤Iw\n-\n;\n<ZOZ\n9R:=<Z];-:\"]VG¡V:EXBEU^\n-\n;\n<ZOZ\n9R:AGA:\"]VG¡V:EXBEU^\n-\n;\n<ZOZ\n9R:=F.A!^]:\"]VG\"¡:EXBEU^\n-\n;\n<ZOZ\n9R:=<Z];-:^]<Z:\"A<G^A:\"]VG\"¡:EXBEU\n-\n;\n<ZOZ\n9R:=<Z];-:^]<Z:LF]XA<!^]:]VG\"¡:EXBEU\n-\n;\n<ZOZ\n9R:AGA:^]<Z:LF]XA<!^]:]VG\"¡:EXBEU\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&X<OA !A<G^A\n;\n<Z&\nAG=G\n;\n<Z&O9\n;\n<Z&O9;:\"A<cGA\na\n¤¤o¤>J¤aY±20¬\n\"\n^\n2¤IP3¬(c)xA¬O Y¤0¢¤0¬a¤ \"\nu(r)]3\n¤\n^\nZ ¤JC^3¬(c)CLxD¬O Y¤0¢¤0¬a0¤C^a\nPII\n¶x'vØN\na\n¤¤B¤CJ¤a<± 0¬\n\"\n¶·¤O]I!.&3\n^\nZ ¤3a<±^±^± ¤\n\"\n±^¬ZM Z!.\"\nie$¤&'$1(Y$+-,$(e\n\"\n+\n!#\"]/AN\n;\n<Z&B<O\" EAAAIF:?>]JANCIJ\no\n!\n+-,13Ld\n\n+\n2=U\n$M,13Eð\n2=U\n$M,13 n\n^\n¤0A¢<¬FRμ=G±\nYZ¤)3¢<¥¦¤0¬OJØ3c¢¤BA@FKGu0¢S±\n¤±^¤0¢B3¢<¥S¤¬O\n±DØ3¬¬\n±^¬F!!3¬O± C\n3!¤(c)Y 0]± a°§ 3c¢<± 30A]2¤\nß±^¬EYZ¤\n3cY!¤0¢\na3J¤\n¤«Y»uEAEJ¤aJUa3¬E(r)]!¤0¬\n±23^\nA\n¤\n\"@m\n$\n!A.¤>YZ¤«J3¥¦¤UAc1¤Z¬\n±^ D±2¤0¢aN¤0¢<»I±AJ¤I J\n<&ZE<O !AIAAFM:\"?> ;ACIJ\n¢¤AZ¢<¬FR<N\n2=U\n$,)3Eð\n3aX±D!(r)LA<EJ¤a<;N\n2=U\n$,)3[n\n3aX±D!(r)LA<EJ¤a<;N\n¶O\n±AM 2¬Za<±2¬3±APJ¤0 2ZB±¬3¥S3 ±^¬\nY¢;2¤L3cG»Æ¤¤(c)P±¬Z3(r)(r)¢0(r)¢<±23!¤«J¤0^ YC\n¢¤ ¤0¢¤¬O± 3(A.¤0Z30§±2¢Ne0¢P¤\nQ\n3¥Ø(r)2¤I\n±^¬«3(r)¢0]¢3¥\n!±^¥R23±¬O>YZ¤CA\n¤030§±20¢P\n3P¥S¬#.¤;1ÐYZ3Sa03¬>(r)± a)o(r)A<EJ¤a<;< i±^\n±AS±^¥Ø(r)]0¢<E3c¬\n\n!L¤¬μ¢¤CZ3\n¤G¥¦0¬C\n.¤;1L(c)¤3⁄4¬Z\n¢!1G!B(r)± a)G(r)P±;J¤0 N\n¶O\n±AR 2¬Za<±2¬N±AØ A!¤¬MXJ¤0 2±¬N¤\ndH&o\n(r) 3¢<R 1⁄4¢;Z ¤< O¢S±^¬Na±A!(r)La(c)¤N\na\nþoIæcqjI0o0ry¥|j\na\nyDnky¥gIkq;þu\nr0æ\na\nþ]r0ææ0oqosm|fnaIoymi03fna°afs¥ocu\nmeos\nu\nyks|r<y¥|jfs¥oc3fnaIu\n¶ðB±^¬]§]1\n¤BO±DR¢;2¤ 1]Ð»Æ2(c)?21(r)]¤?J0¥¦¤0\n±^¬\nM^±E\n¤?w\na\nki¥\nu\nyks|ry¥|jIfs¥ocLg]qosye'qrsm|¦joq;cu\na\n¤¤\nZ¤\nJ¤a<±2¬\n\"\n~\n!±¬OI I!.&3o4L±^\n±^¬\na±A!(r)\nI\n(c)¤ \"\n(r) 3c\n¤¢~\n!±¬O\nCH !.&3IC\n4L±O±¬ZCaX±D!(r)]C\nI\n(c)¤Ca\nPI\n¶5x¤v\nN\n\nBasic Joshua Dictionary\nApril 2003\nDisable Joshua Tracing Command\n¶¢<¬FØ0 D % !.&3)¢3Ia<±^¬\nZN\neKf\n\n$\n\n&ØeR(\n\"\n,1dL+(c)Þ\n¶O¤G21(r)]¤L0 1⁄2¢3Ia±¬OU!L(c)±DJ30A]2¤IN xDAa03¬°A.¤L0¬Z¤L0 1⁄2 ¢<»u3¢(c)N¢;2¤<\nA.3Ia) »u3¢(c)M¢;2¤< ð(r)¢¤(c)I±2a3cY±20¬F< 8¶XaGa°0(r) ¤0¢3±2¬μ<\n0¢?3^DN8¶OZ¤?21(r) ¤C\n1⁄4¢3Ia±¬O(c)¤0 Y30Z;R!¿3^DN\nI±AJ30A] ¤ !]F32¶·¢3Ia<±^¬\nMA¢<¬μ1⁄20 D 1⁄4Z¤O !]F3)Y¢3a<±^¬\nM Y3Ia±^±21ON\n^\n¤23!¤(c)\nI\n0¥Ø¥¦3¬Z(c)]w\n\"\nP\n¬30A]2¤O !]F3?¶O¢3Ia±¬O\nI\n0¥Ø¥¦3c¬(c) \"\n\"\n^\n¤J¤_ !]F32¶·¢3Ia<±^¬\n\nI\n0¥Ø¥¦3¬Z(c) \"\nEnable Joshua Tracing Command\n¶¢<¬FØ0¬k !]F32¶·¢3Ia<±^¬\nZN\neKf\n\n$\n\n&ØeR(\n\"\n,1dL+(c)Þ\n¶O¤Ð21(r) ¤U0 O¢3Ia<±^¬\nE!U¤0¬30A]2¤INeð3a03¬Y¤0¬Z30A 2¤ÐYZ¤ÐY¢3a<±^¬\nY0¢<»Æ3¢(c)G¢;2¤< A\n3Ia]»Æ3¢(c)G¢;Z ¤< (r)¢¤(c)I±2a3±20¬F< ·¶aCaÐ0(r) ¤0¢3±2¬μ< ·0¢\nI^DN~(¬O ¤<?0¤0¢<»I±AJ¤U!(r) ¤a<±^ D±2¤(c)\nßAI1X!±¬O4¤w\ne$+\n!5(r)± 0¬E Y0¢\n¤\nQ\n3¥Ø(r) ¤a ð¢3Ia±¬OÐ±A¦A¢<¬¤(c)N0¬U»±°YZ¤MJ3¥¦¤G0(r)Y±20¬FA3c¬(c)M¢3IaC\n±¬O¤§ ¤0¬\n;R3\n»Æ¤0¢¤B±^¬Ð¤ A Y¤a<\n¤B23!\nY±^¥¦¤\n1 NXJ¤(c)CY¢3a<±^¬\nZN\nw\ne$+\n!\n\n¢<±¬OZP(r)Y34¥¦¤0¬]£0 G(c)¤0E3c±2¤(c)«¢3Ia±¬O30(r)±2¬μM Y0¢¤\n3of\n\n$\n\n&\n3=(\n\"\n,1dL+(c)Þ\nA\n¤0±¬O4¤0¬30A] ¤(c).N¶O\n±AO¥¦¤0¬]E(r)¢§±2(c)¤)3]¢¤3!¤0¢P(c)¤0]¢¤¤\na0¬\n¢0(§ ¤0¢?¤\nQ\n3IaY×1o»I3\n\n¤0;S¢3Ia¤(c)o3¬(c)»I¤0¬°Z¤?¢3Ia±¬O Y3IC\na<±^±^21G±^¬\n!¤0¢3Ia<;R»I±N¤AJ¤0¢N\nw\ne(\n\"\n,$3⁄4e $+3\n\n4L¤0¬Y¤¬Z30A]±^¬\n53(r)]3¢<± a23¢M21(r)]¤0 B¢3Ia±¬O«\n±AG0(r)Y±20¬Y320»1⁄4\n1 YE>!(r)]¤a± ^14(r)¢¤a<±AJ¤0\n14»IO± a\n¤§ ¤0¬\n;?»I±^1⁄2A.¤(c)±D!(r) 31 ¤(c)4(c)Z¢<±¬O\nY¢3a<±^¬\nZN¶·¤J¤¿a03¬Ð3AJSA\n¤?J¤01⁄4AI1?X!±¬OLZ¤w\ne$+\n!Ð0(r)Y±20¬FN\nw\noR3E$\n\ne$M+Z3\n\nI^ 0»1⁄4S1]!U!(r)]¤a± ^143O»I\n±2a<5¤§ ¤0¬\n;)¤¢3Ia±¬O4 Y3Ia±^±^ 1>»I±^^\n!E0(r)M3¬Z(c)C(r)¢0¥Ø(r)\nY0¢S±^¬\n!¤0¢3IaY±20¬FNO¶·¤J¤)a3c¬Ð3AJAA\n¤CJ¤0\nAc1CX!±¬O\nYZ¤w\ne$+\n!Ð0(r)± 0¬FN\n¶·¤\nP\n¬Z30A 2¤ !]F3G¶O¢3Ia±¬OÐa0¥Ø¥¦3c¬(c)PA¢<¬F¦0¬YZ¤ !]&3CY¢3a<±^¬\nN!0D¦3¬Z(c)L3c20»1⁄4\n1]!oa;!!0¥Ø±u7¤¢3Ia<±^¬\n4!C1 Z¢G(r)]3¢<±2a;23¢M3(r)(r)±2a3±20¬0¢P(r)¢¤0 Y¤0¢¤0¬a0¤NÆ¶·¤0 !]F3\n¢3Ia±¬Oo Y3a<±^±^21±A1⁄2§ ¤0¢!1 A ¤\nQ\n±\"A] ¤Nð4a03¬F ð Y0¢)¤\nQ\n3¥\n(r)2¤ ·¢3Ia¤RE!Ø Y0¢<»Æ3¢(c)L¢;Z ¤¦YZ3\n3¢¤O¢<±]\n¤0¢¤(c))AI1G(r)¢¤(c)±2a3±2¬μ3⁄4¥S3!a<\n±^¬\nN3)(r) 3c¢<Y±2a;Z 3c¢¦(r)]3!¤¢<¬cw\nvsknIoGhfiejkMpqkyrstM~fqJgkq;þNyjI0oiEyAwosjGoi\n\nApril 2003\nBasic Joshua Dictionary\n¢ 1]Ua3¬Ð¤§ ¤0¬BEX!(¢3Ia0¤B(r)¢¤(c)±2a3±2¬μ(A±^^3⁄40¬Ð3)(r) 3¢<±2a;Z 3¢S¥¦(c)¤'w\nvsknI0oChfiejkMpq<kyrstLxqoþ rykmr<fsiyDwosjCoi\n¶·¤°A.¤!L»Æ315!I 3¥Ø±^±23¢<±u7¤Ð1]<Z¢J¤0 G»I±^YU\n±A Y3Ia±^±21\n±A!I 1(r)]¤\nP\n¬3A 2¤ !]F3\n¶·¢3Ia<±^¬\noI^Ow\naG¤0¬]ð¤<N¶OO±DAA]¢<±¬OZSZ(r)°3¥¦¤0¬.0 S3^\n¤L21(r)]¤) !]&3¢3Ia±¬O\n3¬Z(c)L¤G0(r)Y±20¬FA30§ 3c±230A] ¤? Y0¢2¤3Ia>0¬¤N\n\n1¥¦§±^¬\nÐZ¤2¥S<XJ¤C§ ¤0¢2¤3Ia>0(r)±2¬N1]<\na03¬°J¤¤B¤)(c)a;Z¥¦¤0¬\n!3±2¬N 0¢¦3c3⁄40(r)±20¬N±¬N¤O¥¦J¤)(c)a;Z¥¦¤0¬\n!3±2¬N^±^¬¤N\n^\n¤23!¤(c)\nI\n0¥Ø¥¦3¬Z(c)]w\n\"\nI±DJ30A]2¤O !]F3?¶O¢3Ia±¬O\nI\n0¥Ø¥¦3c¬(c) \"\n\"\n^\n¤J¤_ !]F32¶·¢3Ia<±^¬\n\nI\n0¥Ø¥¦3¬Z(c) \"\naO¤¤«YZ¤\nJ¤a<± 0¬\n\"\n¶O¢3Ia±¬OSO¢¤(c)± a03± 0¬F \"\n1⁄2(r)]3\n¤E¶·¢3Ia<±^¬\n\nCESO¢¤(c)I±2a3±20¬FJC^a\nPI\n¶5x' v\nN\na\n¤¤\n¤CJ¤a<± 0¬\n\"\n¶O¢3a<±^¬\n\n^\n2¤ \"\n(r)]3\n¤¿¶·¢3Ia<±^¬\n\nC\n^\nZ ¤JC^a\nPI\n¶5x' v\nN\nExplain Predication Command\n¶·¢3Ia¤N¤Ea<3c±¬£0 M¶XaCa>EX!Y±^ D±2a3cY±20¬Fo Y0¢m-\"\n\"@2\"?\n$;o\n\n(*$\nm\ndL,\n\"\n3=d\n\n+\n\n¢]I¢;2¤N!\n(r)¢<±¥\n±±\"§ ¤?Z(r)(r)]0¢<Øß(r)¢¤0¥Ø±AJ¤IØ3¬Z(c)G3<¥\n(r)±2¬μJaN\nmK\"\n\"@2\"?\n$;o\n\n(*$\nm\ndL,\n\"\n3Ld\n\n+\n3(r)¢¤(c)±2a3±2¬AEJ¤a\nYZ3\n±D1⁄2±¬oYZ¤)(c)3!30A\n3J¤Nμa¿X!\nA.¤O¤)3IaA&3\n(c)3!30A\n3J¤)<A<EJ¤a<; O3¬(c)?¬Z03⁄43?a0(r)1L0 1⁄4±;N\nm\n$\n\na](r)]¤a± A± ¤)0»\n¥¦3¬1> 3<1]¤0¢?(c)¤¤0(r)°±¬O!M¤N¤\nQ\n(r)23¬3±20¬«E\nPA.¤C\nY0¢¤¿a±¬O0 D N\n¶·\n±A3⁄4±A1⁄23?a0¥\n¥¦3¬(c)C±¬OE¤0¢< 3Ia¤OE !]F3]O×uJ\n<&Z×AUAVG2]^U b¬Za<± 0¬μN\n;\n<Z&\nA(c)UAVG .\no\n!\n+-,13Ld\n\n+\nm-\"\n\"@2\"?\n$;o\n\n(*$\nm\ndL,\n\"\n3=d\n\n+ih\n0(r)Y±20¬3em\n$\n\nijH\n3L(Y$\n\"@\nAJ]<Z.A<Z:X'AZJAap\n¶O¢3Ia0¤IYYZ¤\na<Z3±¬\n0 E¶aCaIE!±^ D±2a3±2¬μ\nY0¢AmK\"\n\"@2\"?\n$;o\n\n(*$\nm\ndL,\n\"\n3Ld\n\n+\n\n¢]\n¢;2¤IR!B(r)¢<±¥\n±±\"§ ¤?Z(r)(r)]0¢<Øß(r)¢¤0¥Ø±AJ¤IØ3¬Z(c)G3<¥\n(r)±2¬μJaN\nm-\"\n\"?2\"@\n$Jo\n\n(Y$\nm\ndL,\n\"\n3Ld\n\n+\nÞ(r)¢¤(c)I±2a3cY±20¬UAE;¤aNYZ3N±DÐ±^¬E¤(c)3E3A.3J¤NRa¿X!LA\n¤\n¤)3Ia<A&3cÆ(c)3cE3A.3J¤)AEJ¤aJ O3¬(c)C¬03⁄43?a0(r)1L0 1⁄4±^JN\nm\n$\n\na](r)]¤a<±^ D±2¤)Z0»\n¥S3¬1I 3<1]¤0¢C(c)¤¤0(r)>±^¬\n!Z¤o¤\nQ\n(r) 3¬Z3± 0¬E!\n\nSA\n¤0 Y0¢¤)a;±¬O0 A !N\n\n3L(Y$\n\"?\na](r)]¤a<±^ D±2¤1⁄23P!¢¤3¥\nEO»I\n±2a<N!)(c)I±A!(r)23<1PYZ¤¿(r);N\nxD¬\n\n¤0¬¤0¢3A J\nZZ×AUAVG2]^5±AAJ¤0 b1⁄20¬\n×1U± m-\"\n\"?2\"@\n$;o\n\n(Y$\nm\ndL,\n\"\n3=d\n\n+\n±DAA±^^O¬\nJ¥S¤B¥¦(c)¤YZ3ØZ(r)(r)]0¢<;3⁄4¤)¶XaGaM(r)¢0!a0DN\n\nBasic Joshua Dictionary\nApril 2003\nPRQ\n3¥\n(r)2¤w\na\nþoIæcrso|qoþ]rykmoMerteoq<|rs|Iæffþ|yekrs\na\nokmoqP0fgIoq|rs|Iæ0ffþI|yekr<sIu\na\n0mi&y0mi|qoþ rykmo|fþocuu\na\nþoIæcrso|qoþ]rykmoNæk§fqr<mo|okI\na\nokmoqGæ0ffþu\na\n0mIiFy0mIi|qoþ]rykmo|fþIoIuu\n3⁄4\nzNtffþNo kNc0oMfIæGefgNmfÐrI0oosmMmq<ksirmr§oÐq<oI0kmr<fsi\na\nþoIæcqjI0oLnkiry|Iæ0ffþI|yekr<s\na\nyæfq;gkqJþu\nr0æ\nu\næ0k§Ifqrmo|okI3okmoq3okmoo\nmeos\nu\nerteoq<|rs|Iæffþ|yekrs03okmoq3okmooIu\na\nþoIæcqjI0oLmqksirmr§o|Iæ0ffþI|yekr<s\na\nyæfq;gkqJþu\nr0æ\nu\nksþ\nu\næ0k§Ifqrmo|okI3okmoq3okmoo\nu\nerteoq|r<s|Iæ0ffþ|yekrsk3okmoo03Iæ0ffþI\nmeos\nu\nerteoq<|rs|Iæffþ|yekrs03okmoq3Iæ0ffþIu\na\nþoIæjsokI0i\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\næ0k§fqrmo|IokINq<oþ|eoqqrstCgfqI\nu\næ0k§fqrmo|IokI?gIfqokc0tkoIu\na\nmoI\nu\næ0k§fqrmo|IokIPwrii|wkqI0ooqoþ|eoqqr<sty ajimræIrykmrfsyDkiijmrfscu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\na\nokc0iIu\npqjoLmersti\nu\n;vy|];|~}}l|zO;Lw];dd|wzyxvMyvl|vyy ;\nu\n;vy|];|~}}l|zO;Lw];dd|wzyxv}yw\nu\n;vy|];|~}}l|zO;Lw];dd|wzyxvGzzv\nu\n;vy|];|~}}l|zO;}ywCzzv\nu\n;vy|];|~}}l|zO;Lyvl|vyy];Gzzv\nu\n;vy|];|~}}l|zO;Lyvl|vyy];}yw\nu\n~z}y]Jpv|wvzMw]Jdd|wzIyxvLyvl|vyy];\nu\n~z}y]Jpv|wvz}ywGzzv\nu\n~z}y]Jpv|wvzMyvl|vyy];}yw\n~kI0ioMmer<sti\nfso\n\nApril 2003\nBasic Joshua Dictionary\na\nki¥\nu\nerteoq|r<s|Iæ0ffþ|yekrsMwr<ii|wkqI0o03Iæ0ffþI\na\n0kInþk\na\nnky¥gIkq;þ|ijfq<mIu\na\no NI0kr<s\na\nki¥|þkmknkio|qoþ rykmr<fsMnky¥gkqJþ|ijfqmIuuuu\nu\n];vy|]J|~}}l|z\n;Mw]Jdd|wzIyxvLyvl|vyy];ÐriLmqjo\n;mCgkiCþoqr§IoþæIq<f°qjc0ok(r)zId];|~}}l|zO;\nu\n~z}y]Jpv|wvzMw]Jdd|wzIyxvLyvl|vyy];ÐriLmqjo\n;mÐriLksy zdd{wxp];}\nu\n];vy|]J|~}}l|z\n;Mw]Jdd|wzIyxv}yworiMmqjo\n;mCgkiCþoqr§IoþæIq<f°qjc0oMpyzd];p ;v|~}}l|zO;\nu\n~z}y]Jpv|wvzMw]Jdd|wzIyxvLyvl|vyy];ÐriLmqjo\n;mÐriLksy zdd{wxp];}\nu\n;vy|];|~}}l|zO;Lyvl|vyy];}ywÐriLmqjo\n;mGgkiGþoqr§oþÐæIqfUqjI0o0(r)zd];|~}}l|zOJ\nu\n~z}y];pv|wvzLyvl|vyy];}ywÐriLmqjo\n;moriMkEyAxyvw ;dv\nu\n];vy|]J|~}}l|z\n;Mw]Jdd|wzIyxvCzzvÐriLmqjo\n;mCgkiCþoqr§IoþæIq<f°qjc0oMpyzd];p ;v|~}}l|zO;\nu\n~z}y]Jpv|wvzMw]Jdd|wzIyxvLyvl|vyy];ÐriLmqjo\n;mÐriLksy zdd{wxp];}\nu\n;vy|];|~}}l|zO;Lyvl|vyy];GzzvÐr<iMmqjo\n;mGgkiGþoqr§oþÐæIqfUqjI0oLpyzd ;p];v|~}}l|zOJ\nu\n~z}y];pv|wvzLyvl|vyy];}ywÐriLmqjo\n;moriMkEyAxyvw ;dv\nu\n];vy|];|~}}l|zOJ}ywGzzvÐr<iMmqjo\n;mCgkiGþIoqr§oþæIqf°qjIok(r)zd ;|~}}l|zO;\nu\n~zI}y];pv|wvzI}ywGzzvÐr<iMmqjo\nJmÐriLkyAxyvw];dv\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&zWOA]A&c:YX¿:VAZAF]A\na\n¤¤U¤\nJ¤a± 0¬\n\"\nPRQ\n(r)23±¬O±¬OSO¢0]¢3¥\n\n¤0±2¤0 ! \"\n2(r)]3\n¤\nPQ\n(r) 3±^¬\n±^¬\n\nCESO¢0]¢3¥¦C\n\n¤^±2¤ JCa\nPI\n¶5x¤vØN\n;\n<Z&A J.G2<AA\n÷\n\"\n(Md\n\"?2/\n$\nE¬3¥S¤(c)Na0¬F!!3¬O3⁄4XJ¤(c)PAc1k !]&3G!G(c)¤0¬0!¤G3C¢;ZY§ 3F¤C0 3⁄4 3DJ¤Nð4a3¬\na0¥Ø(r)]3¢¤B¢;M§ 3cF¤I\n!±^¬\nMA@FKGAN\n^\n¤0 3cE¤(c)G¶i0(r)±2aw\n;\n<Z&A!A<XAA\n;\n<Z&AZ9μ?\\(A\n;\n<Z&ACI]F!A-<OLCI!]A<¡FA\n;\n<Z&\nA<!c:HD#GA\n;\n<Z& AFA0A@<O=C.!^]:A<!c:HD#GA\na\n¤¤B¤CJ¤a<± 0¬\n\"\n¶·¢;\n\n3F¤ \"\nX(r) 3c\n¤¿¶O¢;ZC\n\n3cF¤IJC^a\nPII\n¶x'vØN\n\nBasic Joshua Dictionary\nApril 2003\n;\n<Z&zWOA]A&c:=F.AIA¡:\"AAG^J\no\n!\n+-,13Ld\n\n+\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3%h\n.¤;10jBlE\n(dL$M+Z3\n\"\n3=d\n\n+\nD\nAA!LC.GopjBlE\n3=(*$\n\"?\nAJ]<Z.A<Z:X'AZJAap\n\na0¬]§]¤¬O± ¤0¬Za¤\n2¬Za<±2¬\n0¢\nJ¤\n±^¬\n3¬\nJ\n<ZOZ\na00¬\n±¬.&3±20¬FN\nJ\n<&ZHW\nA?AF:LF]XAIA<¡V:A0A;G^J«(c)I¢3c»1⁄4U3]¢3(r)\nM¤YZ(r)(r)]0¢<N±¬\n0¢<¥¦3± 0¬£±¬\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n8YZ3S±D< 8¤oFaa¤<! bUsF¤¢!1O I3¬Z(c)N¤P¢¤3J0¬FB±^)&a0a¤¤(c)C\n¤(c).N\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n±A? 2^×1\n(c)¤IJa¢<±A\n¤(c)°±¬Z¤Ð(c)± aY±20¬3¢!1«¤¬O¢!1I Y0¢)J\nZZ\n)9ðN\nJ\n<&ZHW\nA?AF:LF]XAIA<¡V:A0A;G^J\nA\n0Y\n¤\nQ\n¢3Ia;3¬Z(c)U±¬O!¤¢<(r)¢¤0;«¤U±¬O Y0¢<¥¦3±2¬\nY0¢3⁄41]N\n2\"\n,n]o\n\"\n(\nm\no\n)!@c\n(M3\n\n(r)(r) 0¢<¦3¢<¥S¤¬OØ(r) 3<J¤(c)PAc1?;\n<Z&O9EG3La00¬\n±¬.&C\n3±2¬μN\nw\n\n(MdL$+3\n\"\n3Ld\n\n+\na](r)]¤a<±^ D±2¤3⁄4¤O]¢3(r)Ð¢<±2¤0¬\n!3±2¬μNÆ¤0 30^(±A(§]¤¢<±2a3AN\nw\n\n3L(*$\n\"?\n¶OZ¤\n!Y¢¤3¥\n¬U»I\n±2a<UYZ¤E]¢3(r)U±D°(r);NJÆ¤0 Y30Zo±A\nAJ]c<.A<Z:\"'AZJAcN\n¶O¤Ga0¬.§ ¤0¬\n±2¤0¬a¤? b¬a± 0¬L;\n<ZOZ[A&A0μM:=F.AA<¡:\"AA;G^J¿(r)¢<±^¬\n;¦¤MJ3¥¦¤?±^¬\nY0¢C\n¥¦3± 0¬Ð3uJ\nZ&zWOA?AF:LF.AIA¡:\"AAG;N\n¶O¤N3aa¤<J0¢G b¬a± 0¬J\n<&Z\n)9;:=<OAIA0ED.!^]\n¤\nQ\n¢3Ia<;23^R¤(r)(r) 0¢<B ¢M3\nJ3±D! A± ¤(c)ks&¤0¢!1PAZ3⁄4»I±^R±^¬\n!¤0¢<(r)¢¤0±¬ON±;N;O0¢BYZ¤GJ3.¤?0 3⁄4a0¥Ø(r)]3¢<±DJ0¬Ð»u¤O\n\nJ¤BZ¤?J3¥¦¤)¤\nQ\n3¥Ø(r) ¤R!B±^\"!¢3!¤¿3cIO¢¤¤)0 1⁄4YZ¤J¤B 2Z¬aY±20¬F<N\nPRQ\n3¥\n(r)2¤wIX±¢!; I3sc&¤0¢!14J3±A! D±2¤(c)o D¢0¥\nZ¤M(c)3cE3A.3J¤NI¶·¤P]¢3c(r)5!0»1⁄4O¤\n(c)3!30A\n3J¤O(r)¢¤(c)± a03± 0¬N3\n¥¦3!a<Z¤(c)?¤bsc&¤0¢!1ON\na\nþoIæcrso|qoþ]rykmoMoþ]rnI0o\na\nfnaIoymIuu\na\nþoIæcrso|qoþ]rykmoÐr<i|Iæ0ffþ\na\nfnaoymIuu\na\nþoIæcrso|qoþ]rykmoMyfsmkr<si\na\nfnaoymLijnimksyocuu\na\nþoIæcrso|qoþ]rykmoMigoom\na\nfnaoymIuu\na\nþoIæcrso|qoþ]rykmoMmcNo|fcæ\na\nfnaoymLmcNoIuu\na\nmoI\nu\noþ rnI0oLyefyfc0kmo|yfkmoþ|ksmiIu\na\nmoI\nu\nyfsmkrsiMyefyfI0kmo|yfkmoþ|ksmiMefsoccu\n¶O¤\n¬¤\nQ\n>¤\nQ\n3¥Ø(r)2¤\n!Z»\n°Z¤\n(r)(r)]¢<U Y0¢53sc&¤0¢!1IZ3±AEJ3±D! A± ¤(c)\nA¢0¥\n¢;2¤I<N4¤U3§ ¤E3£¢;2¤I\nþIoiioq<m3\n23cE(c)¤0!¤0¢<¥Ø±^¬¤E±^\n3E]±\"§ ¤0¬\nY(c)\n±D\n(c)¤<J¤0¢<;N\nP\n3Ia S\n±A¿¢;Z ¤O×P\nA]\n3cD)±D?(c)¤0¢<±\"§ ¤(c) D¢0¥\n0¤0¢P¢JZ ¤<N63⁄4¤0¢¤N3¢¤\nYZ¤B¢;Z ¤)(c)¤0 D±^¬\n±^± 0¬μ<N\na\nþoIæcqjI0oæ0ffþN3\na\nyAnky¥gkqJþu\nr0æ\nu\noþ]r<nI0o\n3fnaoym\nmeos\nu\nr<i|Iæ0ffþ\n3fnaoymIu\n\nApril 2003\nBasic Joshua Dictionary\na\nþoIæcqjI0oLigoom3\na\nyAnky¥gkq;þu\nr0æ\nu\nfq\nu\nyfsmkrsi03fnaoymMyefyfI0kmo\nu\nyfsmkrsi03fnaoymMijtkq\nu\nyfsmkrsi03fnaoymMefsoc\nmeos\nu\nigoom03fnaoymIu\na\nþoIæcqjI0oCþoiioqm3\na\nyAnky¥gkq;þu\nr0æ\nu\nksþ\nu\nri|cæ0ffþT3fnaoym\nu\nigoomk3fnaoym\nmeos\nu\nmcNo|fcæ3fnaoymCþoiioqmIu\nv3⁄40»\n»Æ¤¿;\n<ZOZ\n»I3cA Y(c)]sc&3^±^ 1>3)(c)¤<J¤0¢<J23¬(c)Ð»I1\nNxA¬\nYZ¤L]¢3(r)F\n<§]3D2(c)¤0¬0!¤gsc&¤0¢<±2¤I¿3B»Æ¤0¢¤\n+\n\nJ3±A! D±2¤(c)°(c)I±^¢¤a<×1ÐAI1U¤N(c)3cE3A.3J¤N\n^\n¤a<!C\n3¬\n]2¤1⁄2(c)¤0¬0!¤bsc&¤0¢<± ¤R3\n»Æ¤0¢¤?J3±A! D±2¤(c)2Ac1PYZ¤¿(c)3!30A\n3J¤N\n¶O¤2!(r)o\n¤2]¢3(r)4!Z»\nØ¤LJ3±D! A± ¤(c)P\n3A ð3¬Z(c)P¬3¥¦¤\n¤)¢;Z ¤2YZ3SJ3!C\n±D! A± ¤(c)±^JNØ¶O¤4¢¤I!N G¤4 ¢3c(r)\n!0»1⁄4°&a0a¤<!±§]¤\nA]\n3DÐ3¬(c)Z»Þ¤3Ia<\n»Æ3SJ3±D! A± ¤(c).N\na]±^¬a¤2A.3Ia) »u3¢(c)Na<Z3±¬O±¬OI!!0(r)\nS»I¤0¬°±\nD±^¬(c).A(c)3!30A.3 J¤?(r)¢¤(c)± a03± 0¬F< iYZ¤)A\n!C\nE0¥\n¤30§]¤IU0 YZ¤\n]¢3(r)\n¢¤¤\n3¢¤osc&¤0¢<±2¤I3U»Æ¤0¢¤\nJ3±D! A± ¤(c)\nAI1\n¤\n(c)3!30A\n3J¤N6R¤0¬a¤O¤;1L3¢¤O¢¤a<!3¬\n]2¤< »IZ¤0¢¤3 3⁄4±^¬\n!¤0¢<¥¦¤(c)I±23!¤B¬Z(c)¤Ø3¢¤¿§ 3A<N\n¶O¤)3¢<¢0»1⁄4R¥¦§ ¤B±^¬N¤\ndz&ou3\n\n$+\nß2]±2a3cÆa0¬aX!± 0¬Za1⁄4(c)I±^¢¤a<± 0¬μN\n63⁄4¤0¢¤O×L3¬3¤\nQ\n!¤¬μ!± 0¬Y!YZ¤(r)¢¤§±2L¤\nQ\n3¥\n(r)2¤ 1⁄4E4!Z0»\n0»\nZ¤]¢3(r)3(c)±DJC\n(r)23<1O5¢;\n§ 3\"&¤Y0 ÐJ\nZZA; J#G AAN4N¤U3I(c)(c)\n¢;2¤E!U¤0±^¥Ø±^¬3!¤E D±^¢!\na¢J¤\na<Z±2a¤wL¤\n¢;2¤\nJ3<1OY3c5\n±^¬\nZ\n3cY3¢¤\n^±8sc±2(c)\n3¬Z(c)\n3¢¤\n¬0\n(c)¤<J¤0¢<;1⁄23¢¤O¬03⁄43)¥¦3c±¬Ða0<Z¢J¤N\na\nþoIæcrso|qoþ]rykmoÐr<i|yfsirimosyc|fcæ\na\næ0ffþoyfsirimosycuu\na\nþoIæcqjI0oLifj3\na\nyAnky¥gkqJþu\nr0æ\nu\nksþ\nu\nsfm\nu\nmcNo|fIæ3Iæ0ffþLþoiioqm\nu\nri|yfsir<imosyc|fIæ3Iæ0ffþÐIr¦jr;þ\nmeos\nu\nsfm\nu\nmcNo|fcæ3Iæ0ffþkkrs|yfjqioIu\n\nBasic Joshua Dictionary\nApril 2003\na\nmoI\nu\nsfm\nu\nmco|fIæGyery¥os|nqfmeCþoiioqmIu\na\nmoI\nu\nri|yfsirimosyc|fIæGyery¥os|nqfmeIr¦jrJþIu\n¶O¤L]¢3(r)«(c)I±A!(r) 3<1OO¤oJ3cY±A! D±2¤(c)sc&¤0¢!1(r)¢¤0 D±\nQ\n¤(c)Ac11a\nsfm\n\nNI¶·¤M(c)3!30A\n3J¤\n(r)¢¤(c)± a03± 0¬°¥¦3!a\n±^¬\nYZ¤sc&¤0¢!1Ð3c(r)(r)]¤3¢¦»±ZØ¤?(r)¢¤0 D±\nQ\n\nEE!S3¦±^Ø»ÆZ (c)\n±¬4YZ¤L(c)3!30A\n3J¤L(c)±A!(r)23<1ON\n¶·¤P 30A\n¤03⁄430A\n§ ¤P±S±¬Z(c)I±2a3cE¤B3S±^JB¢;°§ 3cF¤G±A\nJ\n<&ZA; J.G2<AAN\nß=SO¢¤(c)± a03± 0¬μM»I±^YI34¢;\n§ 3\"&¤40 AJ\n<ZOZA<!AAA>3¢¤>¬0\n30A\n¤02¤(c)G3S&aN±¬N¤O]¢3(r)TÆ3!30A\n3J¤BZ¤3(c)I±^¬\nZNa\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&O9\n;\n<Z& AFA0F:=F.AIA¡:\"AAG^J\na\n¤¤IYZ¤\n¤aY±20¬\n\"\nr\n&¤0¢!1±¬O\nYZ¤Iu3!30A.3 J¤ \"\nI(r) 3c\n¤}r\n&¤0¢!1±^¬\n\nC\"YZ¤CEÆ3cE3A.3J¤C\na\nPI\n¶5x' v\nN3⁄4a\n¤¤°¤«J¤a<± 0¬\n\"\nPRQ\n(r) 3c±¬O±¬O\n\n3Ia]»Æ3¢(c)\nI\n3c±¬O±¬O\naZ(r)(r)]0¢< \"\n((r)]3\n¤\nPRQ\n(r) 3c±¬O±¬O\nC\n\n3Ia) »u3¢(c)C\nI\n3c±¬O±¬O\nCa (r)(r) 0¢<!Ca\nPI\n¶5x¤v\nN\n;\n<Z&zWOA]A&c:YX¿:VAZAF]A\no\n!\n+-,13Ld\n\n+\nh\n¢¤!R\n(Y$\nm\ndL,\n\"\n3Ld\n\n+\n\nI±D!(r)23<1O¦3C]¢3(r)°\nZ¤?¶XaGa>(r)(r) 0¢<R ¢e\n(Y$\nm\ndL,\n\"\n3Ld\n\n+\nO3cR±A i0\nYZ¤?(c)¤(r)]¤0¬C\n(c)¤0¬a1\n±¬O Y0¢<¥¦3±2¬\n»I\n±2a<\n¶O¢;\naC3±^¬\n!¤0¬3¬Za¤\naI1O!!¤0¥\n!E0¢¤\n±^¬\n¤\n(c)3!30A\n3J¤\n320¬\n\n»I±^Y\n(*$\nm\ndL,\n\"\n3Ld\n\n+\nNU¶·¤\n]¢3(r)\n¢3Ia¤£¤\n(r)(r) 0¢<£a<Z3±¬\nYO¢]¤(c)¤(r)]¤0¬(c)¤0¬a!14¢¤a0¢(c).Ga<¢¤3!¤(c)UAc14 Y0¢<»Æ3c¢(c)°¢;2¤Mß 0¢NZ¤¢Na032¤0¢\n«J\nZ&\n<!\" ¡\nFa<\n3E¤\n¤I\n!! !LC]]\n.¤;1»Æ0¢(c)\n3c¢<¥¦¤0¬\nU!\nJ\n<&Z×!AGLG a)!°¤Z¬(c)¤0¢<\n1±^¬\nY(r)¢<±^¥Ø±±\"§ ¤«Z(r)(r)]0¢<Nß 3<Z¥Ø(r)Y±20¬F3c¬(c)«(r)¢¤¥\n±DJC\n¤IJaENIß\n\n3Ia]»Æ3¢(c)Na<Z3±¬O±¬OI(r)(r) 0¢<Ø±D¦¬0Ø]¢3(r)Z¤(c)] I!±¬Za¤?¤?¢;2¤2¢¤^1⁄2±A¦¬0\n!E0¢¤(c)E±^¬\n¤\n(c)3cE3A.3J¤N0¢UYZ3; u1]I(r)¢<A\n30A]\n»Æ3¬OO;\n<Z&zWOA]A&c:=F.AIA¡:\nAAG;Na\nPRQ\n3¥\n(r)2¤?w\na\nþoIæcrso|qoþ]rykmoGþ qoki|rs\na\n0kstjktoGþ qokoq0u\na\nmiFymi|qoþ]rykmo|IfþoIuu\na\nþoIæcrso|qoþ]rykmoMyfjsmi|rs\na\n0kstjktokoqifscu\na\n0miFy0mi|q<oþ]rykmo|fþoIuu\na\nþoIæcrso|qoþ]rykmoMskmr§o|iok¥oq|fcæ\na\n0kstjktoMiok¥oq0u\na\n0miFyY0mi|qoþ]r<ykmo|fþoIuu\na\nþoIæcqjI0oLskmr§Io|iok¥oq3\na\nyæ0fq;gkq;þu\nr0æ\nu\nksþ\nu\nþ]qoki|r<sk3I0kstjktok3oqifs\nu\nyfjsmi|r<sk3I0kstjktok3oqifs\nmeos\nu\nskmr§o|iok¥oq|fcæ3I0kstjktok3oqifscu\n\nApril 2003\nBasic Joshua Dictionary\na\nmoI\nu\nþ]q<oki|rsMdksrieLrfIomy ajimræIrykmrfsyDkiijmrfscu\na\nmoI\nu\nyfjsmi|rsMdksrieLrfIomIu\ndefgLhfiejkMlkmknkio\na\nkmyerstkkmmoqs\nu\nþoIæ0kjI0mGz0Iu\nu\nskmr§o|iok¥oq|fcæ3 T3c\na\nffirmoMmqjme|§kI0joLmff3\nu\nþoIækjI0mCoiIu2oi\npqjoLmersti\nu\nzp];v|dxvz\n¬\nvy|}~MdxzI];dL];}vp\n~kI0ioMmer<sti\nfso\nð>¥R!1⁄2]±\"§ ¤¦;\n<ZOZHW\nA]AF:*X¿:^;VAZAF]A¦¤C3IaA&3\n(r)¢¤(c)I±2a3cY±20¬><A<EJ¤a<ØYZ3\n¢¤I!±2(c)¤I±¬\nYZ¤4(c)3!30A\n3J¤\n¢3¤0¢3c¬U3«a0(r)1Y0 ?±^;NxA¬I<Z¢°¤\nQ\n3¥Ø(r) ¤>»u¤°¢¤C\nY¢<±2¤§ ¤YZ¤M(r)¢¤(c)±2a3±2¬A<EJ¤a<AAc14a<±2a]±^¬\n4YZ¤M¥¦XJ¤N§ ¤0¢G±^B±^¬«¤N(c)3!30A\n3J¤\n(c)I±A!(r)23<1ON\na]±^¬a¤\n¤\nZ(r)(r)]0¢<\n]¢3c(r)\nY¢3a¤3YZ¤\n(r)(r) 0¢<Y Y0¢£ Y3a<;3333¢¤\n±¬\n¤\n(c)3!30A\n3J¤ (3^¦¬Z(c)¤L3¢¤¢¤a!3¬\n]2¤<N3⁄4ß\nI\n0¥Ø(r) 3c¢¤ÐZ¤U(c)±D!(r)23<1\nJ\nZZHW\nA?AF:\nF]XAIA<¡V:A0A;G^JcN\na3⁄4¶·¤2!0(r)o0 3⁄4¤2]¢3(r)U¢¤¤L!0»1⁄4¦¤2(r)¢¤(c)I±2a3±20¬U»IJ¤LZ(r) C\n(r) 0¢<R»Æ¤2»Æ3¬\n1⁄2Eb ¬0»£30A\n<Z;Nc4¤PJ¤¤)3RO±D\n(r)¢¤(c)± a03± 0¬»Æ3S(c)¤0¢<±§]¤(c)P A¢0¥\n3? ¢<»u3¢(c)P¢;2¤ O»I\n±2a<±^¬ÐAZ¢<¬»Æ3¦(c)¤0¢<±§ ¤(c)P A¢¥\nJ0¥¦¤)(r)¢¤(c)±2a3±2¬μ<Nð¶OZ¤OA\n!C\nE0¥\n2¤3§ ¤L0 )¤U]¢3(r)YY¢¤¤\n!0»\n(r)¢<±^¥Ø±^Y±\"§ ¤\n(r)(r) 0¢<Mß^(r)¢¤0¥Ø±AJ¤°0¢3<¥\n(r) C\nY±20¬a\n(c)¤0¬0±¬ONYZ¤2¤0¬Z(c)L0 (¤) Y0¢<»Æ3¢(c)Ma<3c±¬O±¬O(r)¢a¤<<Nð¶O¤?3¢<¢0»1⁄4Ø(r) 0±^¬\nR±¬\nYZ¤\ndH&ou3\n\n$M+\nß^ 0]±2a3ua0¬aX!± 0¬a1⁄4(c)±^¢¤a± 0¬FN\n63⁄4¤0¢¤O×\n3¬U¤\nQ\n3¥Ø(r)2¤G!0»I±^¬\nNYZ¤G(r)(r) 0¢<3⁄4]¢3(r)Ð Y0¢O3?(r)¢¤(c)± a03± 0¬Ð»IJ¤¿¢;ZY\n§ 3\"&¤B±AuJ\n<&ZA; J.G2<AAN\na\nþoIæcrso|qoþ]rykmoMeki|mr<y¥om\na\nyI0krMksmIu\na\n0mi&y0mi|qoþ rykmo|fþocuu\na\nþoIæcrso|qoþ]rykmoMkþ]riirnI0o\na\nyI0krMksmIu\na\n0mi&y0mi|qoþ rykmo|fþocuu\na\nþoIæcqjI0oLsf|IæIq<oo|I0jsye\na\nyæ0fq;gIkq;þu\nr0æ\nu\nsfm\nu\neki|mry¥omk3 I\nmeos\nu\nsfm\nu\nkþ]riirnI0o03 Iu\na\nmoI\nu\nsfm\nu\neki|mry¥omGhIksocu\n\nBasic Joshua Dictionary\nApril 2003\nSO¢¤(c)±2a3±2¬μ¦»I±^>3PY¢;ZY§ 3\"&¤G0 uJ\n<&ZA; J.G2<AA23(r)(r) ¤3¢)»I±I3¬U±^¬(c)±2a3±2¬\nYZ3(Z¤J1M3¢¤B 3AJ¤IN\na\n¤¤U¤\nJ¤a± 0¬\n\"\nPRQ\n(r)23±¬O±¬OSO¢0]¢3¥\n\n¤0±2¤0 ! \"\n2(r)]3\n¤\nPQ\n(r) 3±^¬\n±^¬\n\nCESO¢0]¢3¥¦C\n\n¤^±2¤ JCa\nPI\n¶5x¤vØN\n;\n<Z& 9XF?\\(\nZ !#\"\niI(Y$\nm\ndL,\n\"\n3E$\n\n(\n'\ndu3=d\n\n+\n¶O\n±A\n¥¦(c)3\n(r)]¤0¢3!0¢\na¤aZ\n±^\n(\n'\ndu3=d\n\n+\n±A\n]¬0»I¬\n!\nA\n¤\n¤0±^¤0¢\nJ\n<&ZA<!AAAB0¢\nJ\n<&ZA; J.G2<AAN\n\n(\n'\ndu3=d\n\n+\na !]F3)(r)¢¤(c)± a03± 0¬N(r)]3E¤0¢<¬N!B¥S3!a<FN\npeo¦joq;cy\na\nki¥\nu\n¥sfgs\nu\næ0ff03 c\nu\ndjyyooþiCgeosFy\normeoq\nu\næ0ff03 Lfq\nu\nsfm\nu\næffk3 IMijyyooþ\nxD E&a0a¤<! 2ZD C;\n<ZOZ[9F?\\(\na03AI¤\na00¬\n±¬.&3±20¬O0¬\nYZ¤\n±¬μ!E3c¬\n± 3cE¤(c)\nsF¤¢!1ON\nPRQ\n3¥\n(r)2¤w\n4¤>J¤4¤4(r)¢¤(c)± a03!¤\nieko|fIæ\n3¬Z(c)¤5!!3!¤0¥¦¤0¬\n;Ð30A\n<Z!3(r)]¤NYZ3M»Æ¤\nJ¤(c)?!B±^\"!¢3!¤OYZ¤B(r)¢¤(c)I±2a3!¤1⁄2J\n<&Z[AFA?D?>VG^A]N6R¤0¢¤B¤;1L3c¢¤IN\na\nþoIæcrso|qoþ]rykmoMieko|fIæ\na\nfnaoymLiekoIuu\na\nmoI\nu\nksþ\nu\nieko|fcæ?þffqCf§kc0\nu\nsfm\nu\nieko|fcæM0okcæfr<smoþIu\nu\nzl\nu\ndzIxv|}~Ll}}yL}z\nu\n}p\nu\ndzxv|}~MvzI~Mx}]Jpvl\ndefgMhfiejkLlkmknkio\npqjoLmersti\nu\ndzxv|}~Ml}}yM}z\n~kI0ioMmer<sti\nu\ndzxv|}~Mvz~Mx} ;pvl\n¶O¤5(c)3!30A.3 J¤a0¬OE3c±¬μU0¬Z¤Y!!3!¤0¥¦¤0¬\n30A.>!3c(r) ¤YZ3o±DPJ\nZZA<A<AA\n3¬(c)\n0¬¤I3L±A2J\nZZA; J#G AANÆ;.Z& 9μ?\\(\n&a0a¤¤(c)]±^¬I¤3IaIa03J¤\n¢¤C\n\nApril 2003\nBasic Joshua Dictionary\nDZ¢<¬\n±^¬\n\n¤\n±^¬F!!3¬\n±23!¤(c)asc&¤0¢!1ONUvR!¤\n3¤0¢¤\n±Do¬\n±^¬(c)± a03± 0¬£0 P¢;ZY\n§ 3\"&¤P±¬IZ¤G±^¬F!!3¬OY±23!¤(c)sc&¤0¢!1ON\n¶·3S±DSA\n¤a30XJ¤G»IZ¤0¬I»Æ¤L3 'U±^ BJ0¥¦¤0YO±¬O\n±D(J\nZZ[9F?\\(· ·»Æ¤G3¢¤2±^¬\n!¤0¢¤!E¤(c)0¬\n×1±^¬U¤G¤\nQ\n±D!!¤0¬a0¤C0 1⁄23¬>3¬μE»u¤¢ ð¬0\n±¬I±^JB(r) 3¢<±2a;Z 3¢?Y¢;ZU§]3F¤NÆßE2\"\n,n.o\n\"\n(\nm\no\n1!1?\n(3\nY0¢2¤B;\n<Z&O9\n(c)¤A±^¬C\n(c)I±2a3!¤O»I3\n¤OY¢;ZYM§]3F¤¿0 1⁄4¤O±¬μ!E3c¬\n± 3cE¤(c)sc&¤0¢!1P»Æ3<Na\na\nki¥\nu\n¥sfgs\nu\nieko|fIæ3fnaoymk3iekoc'qrsm|¦joq;cu\nu¬\n}\nu\ndzxv|}~Ml}}yM}z\nu¬\n}\nu\ndzxv|}~Mvz~Mx} ;pvl\n3⁄4\nkqtjIosmGgIkiMkymjkIcæ0kIio\n\n¥¦0¢¤¿±^¬\n!¤0¢¤I!±^¬\nsc&¤!± 0¬Ð±D1⁄2!23'»I¤0¤0¢O3?(r)¢¤(c)I±2a3cY±20¬o±A\n+\n\n¬Z0»I¬o!\n!]&3 N\npeo¦joq;cy\na\nki¥\nu\nsfm\nu\n¥sfgs\nu\næ0ff03 c\nu\ndjyyooþiCgeosFy\nu\næ0ffk3 Mksþ\nu\nsfm\nu\næ0ffk3 MnfmeNæ0kr\nPRQ\n3¥\n(r)2¤w\n3⁄4\npeokqffirmrfsÐr<iMsfmorsMmeoGþkmknkioMfqLrsÐqjc0oi\na\nki¥\nu\nsfm\nu\n¥sfgs\nu\nieko|fIæGsfio0frsmoþc'qrsm|¦Ijoq;cu\neo+\n\nu¬\n}\nu\ndzxv|}~M}dvMx} ;pvlDu\nJ\n<&Z[9F?\\(«a3¬°3AJOA\n¤OJ¤(c)P±^¬NA\n3Ia]»Æ3¢(c)P¢;Z ¤<Nð¶·¤)\n31⁄40\n¤O§ ¤0¢!1M±^¬C\na0¬F!±2(c)¤0¢3!¤I¢;2¤>±^¬\nYZ¤>¬Z¤\nQ\nM¤\nQ\n3¥Ø(r) ¤I±AM!EJ¤02¤aM3E(c)3c¬a<±^¬\n\n(r)]3¢<¬¤0¢NR¶·¤\n¢;2¤P D±^!¤0¢)<ZSJ¤P»IZJ¤M30A]±^±21°3c\n3kymr§]r<mc\n±ASZ¬.]¬0»I¬μ 5.¤¤0(r)±¬O°J¤\n»I)3¢¤B\n(c)G0¢ØA\n3I(c).N\na\nþoIæcrso|qoþ]rykmoMsooþ|k|kqmsoq\na\nkymr§ rmcuu\na\nþoIæcrso|qoþ]rykmoÐr<i|tffþ|km\na\nkymrM§]rmcToqifsIuu\na\nþoIæcrso|qoþ]rykmoMjio|ki|kqmsoq\na\noqifsMkymr§]rmcuu\na\nþoIæcqjI0oLmgf|IoIæ0m|Iæoom|g r00|þIf\na\nyAnky¥gkq;þu\nr0æ\nu\nksþ\nu\nsooþ|k|kqmsoq3kymr§]rmc\nu\n¥sfgs\nu\nr<i|tffþ|km03kymrM§]rmcT3oqifs\nmeos\nu\njio|ki|kqmsoq3oqifsk3kymr§]rmcIu\na\nþoIæjsMmoim|¥sfgs\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\nsooþ|k|kq<msoq¿þksyr<st\nu\nri|tffþ|kmCþksyrstMpf\nu\nsfm\nu\nri|tffþ|kmCþksyrstM~qoþIu\nlfso\n\nu\na\nmoim|¥sfgsIu\nl}v\n\na\nki¥\nu\njio|ki|kqmsoq3oqifsk3kymr§]rmcc¤qrsm|¦joqJcu\nu\n{dv|zd|xzypvyMp}wLlz ;\nu\n{dv|zd|xzypvyM~yvlMlz];\n\nBasic Joshua Dictionary\nApril 2003\n¶O¤L\n31⁄2 ¦¤L¢;2¤P±^¬4¤L¬¤\nQ\nO¤\nQ\n3¥\n(r)2¤P±AO!L\n±¢¤3¬E3(r)(r)^± a03¬\nA±^\n\n±A'o¤0¢\nsF3±^ D±2a3cY±20¬F?3¢¤o¤\nQ\na¤02¤0¬\n; Æ¤§ ¤0¬«±^ S¬0\n±^¬\n4±D]¬0»I¬30A\nOYZ¤N3(r)(r)±2a3¬O<O×\n¤\nQ\n(r) ¤0¢<±2¤¬Za¤O ¤§ ¤0AN\na\nþoIæcrso|qoþ]rykmoMeki|¦jkIIr0æIr<ykmrfsi\na\noqifs¦jkIcr0æIrykmrfsicuu\na\nþoIæcrso|qoþ]rykmokqo§]rfji|o oqrosyo\na\noqifsMo NoqrosyoIuu\na\nþoIæcrso|qoþ]rykmoMerqo|yksþ]r;þIkmo\na\nskoIuu\na\nmoI\nu\nksþ\nu\neki|¦jkcIr0æIrykmrfsiM~qoþffq\nu\neki|¦jkcIr0æIrykmrfsiGhfksMo yoI0osmIu\nu\nzl\nu\nzd|\n«\n{z ;~];zIp];}dL~yvlLx}}y\nu\nzId|\n«\n{zI];~];zp];}dGh}zIMvÐvvp\na\nþoIæcqjI0oorso Noqrosyo|sf|fnimkyI0o\na\nyAnky¥gkq;þu\nr0æ\nu\nksþ\nu\neki|¦jkIcr0æIrykmrfsi03kcIryksmMo yoI0osm\nu\nsfm\nu\n¥sfgs\nu\nqo§]rfji|o oqrosyok3kIIr<yksm03efg|jye\nmeos\nu\nerqo|yksþ]r;þIkmok3kIIr<yksmcu\na\nki¥\nu\nerq<o|yksþ]r;þkmoM~qoþc¤qrsm|¦joqJcu\na\nki¥\nu\nerq<o|yksþ]r;þkmok3kIIryksm'qrsm|¦joq;cu\nu\n];yv|zl];lzpvGh}zI\n^\n¤0 3cE¤(c)SO¢¤(c)± a03!¤?w\n;\n<Z& AFA0?D?>VGA\n;\n<Z&zX¿]9A@:BAFAA@<OLC]!^]\no\n!\n+-,13Ld\n\n+\n\n\"\n3E$\n\n$+3h\n0(r)Y±20¬3e\"\n(*$\n\"\nI\n¬μ!¢;&a<)3N(r)¢¤(c)I±2a3±20¬EZ¿0 ¦Z¤!(r) ¤a± A± ¤(c)\n\"\n3E$\n\n$+3\nß±^¬«¤N0(r)Y±20¬3q\"\n(*$\n\"\n(r)(r)^± ¤(c)aN\n¶OZ¤2¬¤0»I×1oa00¬F!¢;&aE¤(c)L(r)¢¤(c)I±2a3cY±20¬U±D\n+\n\n¤¬OE¤0¢¤(c)L±^¬U¤G(c)3!30A\n3J¤\n¬\n2¤<\n1]Ua0¥RA]±^¬¤1⁄2J\n<ZOZHX¿?9A@:BAFAA@<OLC]]°»I±^?J\n<&Z×!AGLGAN\nð£!2(c)\n¤02(c)0¥\n¬Z¤¤(c)\nE]¬0»I30A.Z?\n±A<\n3PYZ¤a\næ\nD1¬O!3\nQ\n±A?XJ¤(c)\n±¬\n!]&3?a0¬O!¤\nQ\nJØ3Ø3)¢¤3(c)¤0¢S¥¦3Ia<¢O Y0¢\nJ\n<&ZHX¿?9A?:HAFAA?<\nLC.!]·N\n\n\"\n3E$\n\n$M+Z3\n\n±A!M»IZIJ¤4 A±¢!N¤02¤0¥¦¤0¬\nM±AN¤4¬3c¥¦¤«0 L3\nß (c)¤0 D±^¬¤(c)a\n(r)¢¤(c)±2a3!¤NØ¶O¤4¢¤!N0 G¤4^±D!N¤02¤¥S¤¬O;Ð3¢¤4YZ¤«3¢<&C\n¥¦¤0¬\n;R!B¤O(r)¢¤(c)± a03!¤IN\n\"\n(*$\n\"\na]!0¢3\n¤)3¢¤3¿!)a0¬FR±¬\nPRQ\n3¥\n(r)2¤w\na\nþoIæIr<so|q<oþ]rykmoMieko|fcæ\na\nfnaoymLiekocuu\na\nk¥o|qoþ rykmr<fsa\nieko|fIæ?g rsþfgUqfjsþuu\nu\ndzxv|}~O;l}oy}{l\n3⁄4\nmeriÐr<iMsfmorsMmeoGþkmknkio\na\nmoI\na\nk¥o|qoþ]rykmrfsa\nieko|fIæ2g]rsþfg°qfjsþuuu\nu\ndzxv|}~O;l}oy}{l\n3⁄4\nsogTqoþ rykmr<fsMkþþoþomfMmeoCþkmknkio\np\n\nApril 2003\nBasic Joshua Dictionary\nJ\n<&ZHX¿?9A?:HAFAA?<\nLC.!]\n±A3J¤0 b« Y0¢\na00¬F!¢;&aY±^¬\n} !]&3\n(r)¢¤(c)±2a3±2¬μ\nD¢0¥\n(c)3cE3\n¤0¬¤0¢3!¤(c)\n»±\n±^¬EaX±D!(r)\na0(c)¤NBß a]±^A 3⁄4A\n3Ia)#sc&0±¬Ooa\næ\n¤\nQ\n(r)¢¤<!±2¬μ\n!2(c)M A D±2a¤O¥¦!3⁄40 1⁄4¤B±^¥¦¤Na\n^\n¤0 3cE¤(c)μ¬Za<±2¬μw\n;\n<Z&B<OA !^FA@:BAFAA@<OLC]!A\na\n¤¤\n¤\nJ¤a<±2¬\n\"\nSO¢¤(c)I±2a3±20¬F\n3¬Z(c)\nSO¢¤(c)± a03!¤ \"\n\n(r) 3\n¤\nSO¢¤(c)± a03± 0¬FJC^3¬Z(c)C\nSO¢¤(c)±2a3!¤JCa\nPI\n¶5x¤vØN\n;\n<Z&zX¿]A:?D\nAIA:=<Z.J?>\nA@:BA&A0A@<O=C]!^]\ne\n\"\n,)(\n\n(Y$\nm\ndL,\n\"\n3Ld\n\n+\no\n\"\n3L3E$1(Y+&\n!\n+-,;o\n3=d\n\n+\n\na0¬.§ ¤0¬\n±2¤0¬a¤G¥S3Ia<¢G ¢SJ\n<&Z\n)9ðN~ØJ¤G±^¦»I¤0¬¤§ ¤0¢A1]\n»Æ3¬\n¦!G D±^¬(c)Ð3¬\n3¬F!»Æ¤0¢S!¿3sF¤0¢!1G±^¬NYZ¤¿(c)3!30A\n3J¤B»I±^\n!±^¬\nM¢;2¤1⁄20¢EsF¤I!±20¬F<N\nJ\n<&ZHX¿?A:\"?D\nAIA:L<Z]J]>μO<A@:BAFAA@<OLC]]B A±¬Z(c)]¦3^\n(c)3!30A\n3J¤¿(r)¢¤(c)I±2a3cY±20¬FØYZ3\n¬\n±^ 1P»I±^YO\n(*$\nm\ndL,\n\"\n3=d\n\n+Oo\nc\"\n3L3E$)(*+\n3¬(c)P3(r)(r)^± ¤\n&\n!\n+-,13Ld\n\n+\n!)¤3a<FN\n\n(*$\nm\ndL,\n\"\n3Ld\n\n+Oo\nc\"\n3=3E$)(*+\n3(r)]3E¤0¢<¬N!B¥S3!a<Ð3\n3±^¬F!R(c)3cE3A.3J¤O(r)¢¤(c)± a03± 0¬μ<N\n&\n!\n+-,13Ld\n\n+\na](r)]¤a<±^ D±2¤2¤Ð0(r)]¤¢3cY±20¬E!Ð(c)Ð0¬5¤3Ia5(c)3!30A\n3J¤N(r)¢¤(c)±2a3IC\n± 0¬IYZ3GZ¬\n±^ D±2¤»±U(r)¢¤(c)±2a3±2¬ZC(r)]3!¤0¢<¬FNØa]Z (c)EA.¤«3\n2Z¬aY±20¬Ð0 (¬Z¤¿3¢<Z¥¦¤0¬\n;N\nß\nk|f§oq<|þkmknkio|qoþ]r<ykmrfsi\n<\nq<oþ]rykmrfs\n<\nyfsmrsjkmrfs\naI±A\n¤sc±\"§ 3IC\n¤0¬\n\n!@w\na\nki¥\nu\næ0ff03\nca\nknþk\na\nijfqmIu\na\næ0jsykIIyfsm\na\nki¥|þIkmknkio|q<oþ]rykmrfsLijfqmIuuu\ny2þf|nky¥gIkq;þ|q<jI0oiLsr0u\nPRQ\n3¥\n(r)2¤?w\n4¤O\nÆA±^ (c)3¬°30Z0¢C±^ ¤2±^¬(c)¤\nQ\nY0¢)3C±\"A ¢3c¢!1\nX!±¬OCJ\n<ZOZ×!AGLG\n!!3!¤0¥¦¤0¬\n;<N\n4¤O\nB±¬aF(c)¤I3¬\na¶aCa\n±¬\n¢Ð(r)¢¤(c)± a03!¤>(c)¤0 A±¬O±±2¬μ< 1⁄2JU3cC»Æ¤>a3c¬Y23!¤0¢\n\n¤J\nZZ×AUAVG2]^°EO!¤^8X1⁄230A\n\nJ¥S¤¿(c)3!30A.3 J¤B(r)¢¤(c)±2a3±2¬μ<N\na\nþoIæcrso|qoþ]rykmoMkjmefq<|fIæ\na\ngfq¥Lkjmefq0u\na\nmiFymi|qoþ]rykmo|IfþoIuu\na\nþoIæjsMnjr0<þ|kjmefq<|mrmIo|rsþIo ?\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\nkjmefq|fIæg¶peoU;smoq1qomkmrfsLfIæPlq<oki@¶?~qojþ\nu\nkjmefq|fIæg¶oþþIkMknc0oq¶N;nios\nu\nkjmefq|fIæg¶pfmooksþNpknff@¶C~q<ojþ\nu\nkjmefq|fIæg¶;zolfcKiLfjioN¶o;niosIu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\n(r){];l|z{p}y|p ;pv| ;lvÐ@\n\nBasic Joshua Dictionary\nApril 2003\na\nnjr<þ|kjmefq|mrmI0o|rsþo ? u\npqjoLmersti\nu\nzI{p}y|}~¶JzolfIKiMfjio@¶N(r)dv\nu\nzI{p}y|}~¶<pfmoNksþNpknffN¶C~yv{l\nu\nzI{p}y|}~¶<oþþkLknIoq¶oM(r)dv\nu\nzI{p}y|}~¶<peo°JsmoqqomkmrfsMfcæPlqoki@¶?~yv{l\n~kI0ioMmer<sti\nfso\n¶O¤M D±^¢!O¤\nQ\n3¥\n(r)2¤L21Z¿±¬\nZ¤L^±A]¢3¢!1>(c)3!30A\n3J¤3c¬(c)Ð¢¤0¥¦§ ¤¿ D¢0¥Þ±¿3Ø\n¢¤&(c)OO×SA.?ß(r)]¤¢<Z3(r)OA Y0¢2¢¤A]±¬Z(c)I±^¬\nI(c)F¤G!L<§]¤¢;XJ¤aN4¤?XJ¤BJ\nZZHX¿?A:\n?D\nAIA:L<Z]J]>μO<A@:BAFAA@<OLC]]P!M\n¤0¿<Z¢G3¬Z(c)]?¬«¤N3IaDF3R(r)¢¤(c)± a03± 0¬A.C\nEJ¤a<;¦JO3\n»Æ¤¿a03¬N¢¤0¥¦§ ¤B¤0¥BN\n¶ð\n3^ 0»Þ¤3 D1\n¢¤0(r)23Ia¤0¥¦¤0¬O G\n±A±^¬\nY0¢<¥¦3cY±20¬\n»u¤O\nØJ\nZ&.!! ¡E¤\nY3IaJ>¢3¤0¢«Z3¬\n3Ia<A&3c×1I¢¤0¥¦§±¬O£¤0¥\n»I±^Y\nJ\nZ&μ!AGLGDNO¶O¤5¢;ZY\n§ 3\"&¤M0 ¦¤3Ia<«0 Ø¤J¤P Y3Ia;SA.¤a0¥¦¤R;\n<Z&AZ9μ?\\(A I¤§ ¤0¬IZ]I¤;1\n(r)1\n!±2a3c×1G¢¤0¥¦3±^¬N±^¬NYZ¤?D1O!!¤0¥BN\na\nþoIæjsMkgIkc|g]r<me|ir<tjsþ\na\nu\na\nIk|f§Ioq|þkmknkio|qoþ]rykmrfsi\nu\nkjmefq|fIæ3gfq1¥M~qojþjsajimr0æ<cu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\nzzI|O;p|d];w{l\na\nkgkc|g]rme|d];w{lIu\npqjoLmersti\nu\nzI{p}y|}~¶JzolfIKiMfjio@¶N(r)dv\nu\nzI{p}y|}~¶<oþþkLknIoq¶oM(r)dv\n~kI0ioMmer<sti\nfso\na¤0<O×O3(c)(c)Ð3M Y0¢<»Æ3c¢(c)N¢;2¤G3)31\nB¤G^±A]¢3¢!1°»I¬μO3¬1Ð»Æ0¢U3c¦»Æ3¿30&C\nYZ0¢¤(c)2Ac1Ma]3.¤!(r)]¤3c¢¤I O3¬(c)CYZ¤0¬MAZ±2(c)G3¬ZZ¤¢B(c)3!30A.3 J¤IN\na\nþoIæcrso|qoþ]rykmoMfgsi|IcrnqkqJc\na\ngfq¥Iu\na\n0miFyY0mi|qoþ]r<ykmo|fþoIuu\n\nApril 2003\nBasic Joshua Dictionary\na\nþoIæcqjI0oLdek¥oiokq<o|efIþ]rsti\na\nyæ0fq;gkq;þu\nr0æ\nu\nkjmefq|fcæ3gfq¥Mdek¥oiokqo\nmeos\nu\nfgsi|IcrnqkqJc3gfq¥Iu\na\nþoIæjsMnjr0<þ|kjmefq<|mrmIo|rsþIo Na\na\nu\na\nyc0okq0u\na\nmoI\nu\nksþ\nu\nkjmefq|fIæg¶\n¬\nrstLokq¶Cdek¥oiokqo\nu\nkjmefq|fIæg¶oþþIkMknc0oq¶N;nios\nu\nfgsi|cIrnqkq;c¶pqjNomrstChfiejk@¶\nu\nkjmefq|fIæg¶;zolfcKiLfjioN¶o;niosIu\na\nyFyAo oyjmo|yfksþ¶defgMhIfiejkLlkmknkio@¶uu\n(r){];l|z{p}y|p ;pv| ;lvÐa\na\nnjr<þ|kjmefq|mrmI0o|rsþo NaIu\npqjoLmersti\nu\n}d| (r)yzy¶pq<jNomrstGhIfiejkN¶\nu\nz{p}y|}~¶oþþIkMknc0oq¶N(r)dv\nu\n}d| (r)yzy¶\n¬\nr<stMokq¶\nu\nz{p}y|}~¶\n¬\nrstLokq¶Cdz\n¬\nvdxvzyv\nu\nzI{p}y|}~¶JzolfIKiMfjio@¶N(r)dv\n~kI0ioMmer<sti\nfso\n4¤Na3¬«¬0»\n3' !]&3oE)J\nZ&\nAUNAG2]^\n¤N(c)3!30A.3 J¤L(r)¢¤(c)I±2a3±20¬F230A\n\n»Æ0¢R¤B^±\"A ¢3¢!1M0»I¬F<N\na\nk|f§oq<|þkmknkio|qoþ]r<ykmrfsi\nu\nfgsi|IcrnqkqJc3gfq¥o NIkrsIu\nu\n}d|](r)yzyi¶pqjomrstGhfiejk@¶oriMmqjo\n;moriMkEyAxyvw];dv\nu\n}d|](r)yzyi¶\n¬\nrstLokq¶ÐriLmqjo\n;mCgkiCþoqr§IoþæIq<f°qjc0oMdz\n¬\nvdxvzyv|}l]Jd\nu\nzI{p}y|}~¶\n¬\nrstLokq¶?dz\n¬\nvdxvzIyvÐr<iMmqjo\n;mÐriLkyAxyvw];dv\n63⁄4¤0¢¤O×\n3¬U¤\nQ\n3¥Ø(r)2¤G!0»I±^¬\nNYZ¤2(c)I±A!(r) 3<1L»¤0¬ÐYZ¤2(c)3E3A.3J¤)(r)¢¤(c)± a03± 0¬Ð3¦3\nY¢;Z\n§ 3\"&¤\n0 AJ\nZ&A #G AAN1⁄2¶OZ¤I(r)¢¤(c)I±2a3cY±20¬I(c)±D!(r)23<1OM»±ZP±^¬(c)± a03±¬O\n±;2¢;«§ 3\"&¤\n\n3¿±^¬\n0¢<¥¦3± 0¬±DLZ(r)(r)^± ¤(c)Ac1I¤Ð3Ia0a0¥Ø(r)]3¬1±^¬\nE¤\nQ\n(r) 3c¬3IC\nY±20¬FN\na\nmoI\nu\nsfm\nu\nfgIsi|IIr<nqkq;ci¶v§oq;cþkcNdksi¥qrm@¶<Iu\n¬\nu\n}Id|]M(r)yzyi¶v§oq;cþkcNdksi¥qrm@¶<\np\na\nk|f§oq<|þkmknkio|qoþ]r<ykmrfsi\nu\nsfm\nu\nfgsi|IcrnqkqJc3gfq¥co Nc0krsIu\nu\n}d|](r)yzyi¶v§oqJcþkcNdksi¥qrm@¶oriNækI0io\n;moriMkEyAxyvw];dv\n¶O¤C3Iaa0¤I<J0¢B b¬Za<± 0¬PJ\nZZ\n)9;:L<.J?>O<A@:BAFAA@<OLC]!^]«a3¬°3DJ¿A.¤OXJ¤(c)P!\n¤\nQ\nY¢3a<U(c)3!30A\n3J¤(r)¢¤(c)± a03± 0¬μU D¢0¥\nYZ¤«A.3a]»Æ3¢(c)£(r)(r)]¢<4YZ(r)(r)^± ¤(c)3!¤\nJ\n<&Z\n)9\na0¬\n±^¬]F3± 0¬FN>aGI!\n0 £¤\n±¥S¤\n;\n<ZOZHX¿?A:?D\nAA:L<.J?>O<A@:\nA&A0A@<O=C]!^]2(r)¢<A\n30A]\n1IJ¤¢;§]¤I\nE!A3A»Æ¤^A 83¬(c)N±\n±AO¤3 !± ¤0¢)!2XJ¤N5O¢Ca0¥¦C\n(r) 3¢<±AJ0¬N»Æ¤¿3c¢¤S!±^¬\nM¤CJ3¥¦¤¿¤\nQ\n3c¥Ø(r)2¤3⁄4!O±^X!¢3!¤SA\nN b¬a± 0¬F<N\n\nBasic Joshua Dictionary\nApril 2003\n÷øu8u(c)uoøuyþy1uy\n\n-øø\nuZø*øuy\n\"\n\nþø \"!#=y$\nuZø&%%uuYu '#u(Mø \"\n)+*\nu,$-ø\n\nþø \"!#Ly$-EuZø-.%u(c)uou/'#u#Mø-\n103254768:9<;\n\n>=@? ACBDFECHG\"DI1J\nKMLON1P QSR\n45økyyT-O=yYuou(c)y-u8u/']uuøU'#u(MøWVauuu X( YV 0uuLu\n*\nøuZ[uu[y\\=y^](Z\".þVu#;_6\nu`a\\b<.c]øu\n=yKudyø e\n*\nøuZ[uu[yfXCuu\n\ngh.BAi\"DFJACjk=@? ACBDFECHG\"A\n;\nlMþmuyAuoøZYuYV uanVauuu X( o',!þp\"Ly$\nGq=A,=\n\ngr=@? ACBDIEC1G\"DI1J=ts\nLy-u\"\ne:\nGq=@A=\nuv\n*\nuFbwxøu#y;\n÷øu8u(c)uoøu{z5øZMøy-uYuuy|4@!\n*\nøZ\n\n>=@? ACBDFECHG\"DI1J\n\nBHGg#}phACj=? ACBDFE#1G\"DI1J\n\n>=@? ACBDFECHG\"DI1J=\nK7~1IIQ/\nQFZg\n2øve:øuø\nQFZg\naJu\\](Z\"#þu\n*\nøuSuuy\n)\nuuuu\n)\neøuø uZø'Mø1uu\n'@þ=uLuyuZø'-u#Mø{Vauuu X(\n\ng5r=? ACBDFE#1G\"DI1J\n;\n\n>=@? ACBDFECHG\"DI1J\nu×uø{ u\nVAuZø](Z\".þVubu@øu uøøZ;\n\ngr=@? ACBDIEC1G\"DI1J=\nøu\nþT1y@\nG\nIVOuøh'ø/uau](Z\".þVu\n*\nøuZuuy\n)\nuø -\ne:aMø\nJ@DI\n;\nQ/FZ\n\ny|h'Mø1u=yTuøpu\n*\ne_ 1uuu1;\n05c]ub\n*\nuuøZ\naSSSh/Ch (h ¡¢¤£Z¡S¥SgZ ¦Z§Cg a¦Z§Z(c)¥ ¡/a«¡a/S¬¬\n¢/S¥¥(c)d£Z¡S¥SS ¦Z§C(r)h ¡Zh¡ 1W /aS¥Sh°±/2S¬\n3 Zμ(¶· Z1/o·»¶1⁄4/1⁄2 Zo1⁄4 S·1¶1⁄4 n 1⁄43⁄4μ1¶g¿A2\nA\nZh 1h /¡¢Ch§/wAAA(ACÆE\"EEEIIIMIEÐENOOACICNOACEOENO×OØNOU7ÆpEUUYU¬\nÞ\nS¥,h ßW§/W§a aS ¢|¢«Ch/ a ao¢S¥¥\nao /·1¶1⁄2\nA\n¶11⁄4Wa/μ Z31oau3 Z1⁄41¶gμμ #¬\n¡°/ß»\"£Z¡,¥SZ ¦S§C» ¡Ch/¡ 1hnæS¥ ¡/a«¡a/2\nce\nd¥ ¡ eZa S¡ea¡/ ß ¦Z¡CgZ°«/§Ch¢S¬\na¦Z±/eC 1h ¡/¢Ch§e¡°ß/ Z¡¢¡/a¡°/Ch 1 ¡¢Ch§/Wa¡ /ß ¦Z¡CS°«/§Ch¢S¬¬\nZh¢e¡°ßhZ¡¢¡a/¡°Zh 1h /¡¢Ch§na¡ ßh¦Z¡CZ/°«§Zh¢S¬¬¬/¬¬\n3 Zμ(¶· Z1/o·»¶1⁄4/1⁄2 Zo1⁄4 S·1¶1⁄4 n 1⁄43⁄4μ1¶g¿A2\nlMþ»uyTþpMø\nGq=@A=\nu\"u#buøUMub×øbuYøZYuu#\n\ngr=@? ACBDIEC1G\"DI1J=\n;Ø6\ny|V¤uSu\n)\nuø\nb\n*\n=uuø O\n*\nuIbwxøZUuZø`V b\n¢ aZ/Yi\ne\nCh (h ¡¢C§S¬\n=yKuduø`V b\\\nChh1h ¡¢Zh§¤i#¬\n\nApril 2003\nBasic Joshua Dictionary\ny Eøc.ub\n*\nu8ø#\n¡/°ß»\"£S¡S¥SZh¦Z§C(r)h ¡C¡ 1h/WæS¥ ¡/a«¡a/2\nce\n\"¥ ¡ eZahZ¡ea/¡ ß ¦Z¡ZZ°«/§Ch¢,¬\na¦Z±/e¢haZe¡°ßhZ¡¢¡a/¡°Zh 1h /¡¢Ch§na¡ ßh¦Z¡CZ/°«§Zh¢S¬\ne\nCh (h ¡¢C§S¬\nCh¢e¡°ß/ Z¡¢¡/a¡°/Ch 1 ¡¢Ch§/Wa¡ /ß ¦Z¡CS°«/§Ch¢S¬¬/¬¬¬\n3 Zμ(¶· Z1/o·»¶1⁄4/1⁄2 Zo1⁄4 S·1¶1⁄4 n 1⁄43⁄4μ1¶g¿A2\n÷øu8u(c)uoøuyþy1uy\n\n>=@? ACBDFECHG\"DI1J\nGq=@A=\n\n>=@? DFJ@GjFiHpAS?hq\nK7~1IIQ/\nNCi(iðN(RAn\nEIo\n~hoCoQSRgOo\n\n*\nu[yZuu_o\no\nIR\"N#o\n÷\nhGg1JpBH?/Bj.#G=pG\n÷aø\n\ny1X.øy8øyø\nVuþy1uy\nV\nþpMø\nLy\nuy\n\ng5.\ny-u=y#þuuy@;\n\ngr=@? DIJ@GgjIi1AS?q\nuZa\n*\nu8uh!uø\n\nghuu\nþVø \"!ue:=uuLug^X]uuu ']uuøZeLyT-\nYuou(c)y-u8u(c)uoøuH;\n/N#i(iCN1RAn\nEIo\n~hoCoQSRg\n45Zø'-uS1euu 'þ\n*#*\n1uW'þ\n*C*\nuI8øuu\"uø\n\nyT-\nu=y#þuuy@;\no\nIR\"N#o\n\nYuøu,b\nu\"(c)e:au\"»þu\n*\nþZuuø(c)LyV bOuu[y@;Y%%ø V'uþuLu\nu\"\\÷\nGgHJpB1?/BjO#pG=pG\n÷,;\n05c]ub\n*\nuuøZ\naZS,hZh 1h /¡¢W¢haZ§,^§ahaZ ¢n¢ aZS¬/¬\n¢S¥/¥(c)¢ aS§S|¶¥Sh¡hC 2S¬\n¡°ß(r)¢ aZ/§SYæa§§ßnCh /2\nce\nZh¢hyZ«CaC¬\n\nA þ\na/ 1a(r)¶μ1¶\" Z·n a1¶1⁄2/2\n6aV!11þ(c)euy-uqu\"þpMøuø=yYuYuy-uuuuYøu\nu\nþVø \"!YLyoeuh!wuø Ouuy\n*\nLy-uLy$WLu\n)\nøhc(-\nuuZ1ufLu_!1þTMøuIV%þp\"Ly$kuøbuZ øZg Vuþy1uy\n\ng5.5jFiHpAS?hq\n;\n÷øu8u(c)uoøuyþy1uy\n\ny?/(=jFiHpAS?hqjO? ACpIGg\n\n>=@? DFJ@GjFiHpAS?hqjO? ACpIGg\n\n#q@jFiHpAS?hq\n-øø\nuZø*øuy\n\"\n\nþø \"!#=y$\nuZø&%%uuYu '#u(Mø \"\n)+*\nu,$-ø\n\nþø \"!#Ly$-EuZø-.%u(c)uou/'#u#Mø-\n103254768:9<;\n\n>=@? DFJ@GjFiHpAS?hqjO? ACpIGg\nK7~1IIQ/\nNCi(iðN(RAn\nEIo\n~hoCoQSRgOo\n#ø!no\n\no\nFRANCo\n÷\nhGg1JpBH?/Bj.#G=pG\n÷aø<o\n\no5RITOR\n#\n\n=@? DFJ\nø\n\ny1X.øy8øyø\nVuþy1uy\nV\nþpMø\nLy\nuy\n\ng5.\ny-u=y#þuuy@;\n\ngr=@? DIJ@GgjIi1AS?q@j.? ACpIGg\nuZu\n*\nuuu!uyu+=y-uYø\n*\nøuuø+'þ\n*#*\n1u=yV b×uuy\n\nBasic Joshua Dictionary\nApril 2003\n=yuø\n\ngh.\ny-uLy.þVuu[yu$?þb×øy-u\n)\nN#gi1iCN1R\"n\nEFo\n~o#opQSR\nuu(c)uwu\n)\nLuuYøu=uu\n!(þ|e:Zuu\nu\nþø uøZ'þ@ øøu?øu\n)\nu(c)yu{e:#!;\n/N#i(iCN1RAn\n-\no\n~hoCoQSRg\n\nuIaYue y-uYuLyLy$£uø\nMuua\"Vu8øu\nu\nþø \"!£uyu\n=yV b×uuy\nu 'þufLu'þ\n*C*\n1u;\no\nIR\"N#o\n\nYuøubIu\"{e:iu\"Yþu\n*\nþZuuZøLyV bOuu[y@;M%ø V¤uþuLuvu\n÷\nhGg1JBTH?/BjO#pG=pG\n÷,;\noRITOR\n\nVuþZyT1uy\nVue_u,$?þb×øy-u\n)\nuI.-ø\n=@? DIJ\n)\nuZuuvuþpMøu0u\"\n*\n=yKubøu8ø b×øy-u{ VOuZø(c)'þ\n*#*\n1u;\n=@? DIJ\nauZøTu?ø V'uþuLu\n)\n'?þu\nuyuZø øu#gyu '.uuøX]uuEþøu\"`$1OX]ø`u\n\n5. #q\n;\nwMø\n\ngky?#=@pjIi1AS?q@j.? ACpIGg\nu\"nMøøu¤$1u\n*\n» Vquø=yV b×uuy\n*\nhXCuu@øu\n',!\n\ngr=@? DIJ@GgjIi1AS?q@j.? ACpIGg\n;\n45øuS øZg Vaþy1u[y\n\njIBAS? D T1GADF1J\nøhc@uuSuguøY'þ\n*#*\n1u\n*\n1uy(r) V\n/N#i(iCN1RAn\nEIo\n~hoCoQSRg\n'?þuUuCøZUyTufLy-uYø\n*\nøuquZø`LyV bOuu[y@;\ny ` b\n*\nuagy\n)\neøþpMøEuZø{Mub×øøhc]ub\n*\nu8øZUu\"`Lu=uEþpYuuuYøbu(c)u=u uøøVuþZyT1uy@;\n05c]ub\n*\nuuøZ\n45øUVaIYuEøc.ub\n*\nu8ø\"T eYbu\nu\nþVø \"!+Muuu\"VauøuW'S!iu?uuYu '-u#Møuh@þ\n*\n;\nMuuZøYLyT-\nYuou(c)y-u8u(c)uoøu\nu\nþø \"!uyZue=u'þ\n*C*\n1u\ns\nø øiuZø(r)b×uu\"=y$au?uuYu '#u(Mø\n*\nøuZ[uu[yTy\nuø\n*\n=yKuYøuH;\naZS,hZh 1h /¡¢W¢haZ§,^§ahaZ ¢n¢ aZS¬/¬\n¢S¥/¥(c)¢ aS§S|¶¥Sh¡hC 2S¬\n¡°ß(r)¢ aZ/§SYæa§§ßnCh /2\nce\nZh¢hyZ«CaSCh°«,¥ ¢°S¬\n\nA þ\na/ 1a(r)¶μ1¶\" Z·n a1¶1⁄2/2W°« / Zha\nAhþ\na 1/a»¶μ1¶d Z·W a(¶1⁄22Y¦S¡°\nA\no |hn¢±¤Z¡¢¡a/¡°\n45ø1⁄2yøhc@uøhc]ub\n*\nuuø\n\" eEuZø\n'þ\n*#*\n1u(r)V u\nu\nþø \"!¡uZuu(c)u\nMuua\"Vu8øu\nVu b\nþuuøS;gøÐu/X]ø\nu\nþuuø\n)\nS°°C¢æ\n)\nuu(c)u1u@øuYø bwLyøZ\nIVu\n$1OX]øy\nVu\na1⁄2u\nu@øZMø 1u;:0uSh× VOuu\\þZu8økU'þ'1$u(c)uaau@ø OX]øu(c)Va b\nuø UMþZu8øZ;ø øTuø\nuZøbu?ø VaLyLuy@;\naZS,hZh 1h /¡¢Wh1haS¥ e§a aS ¢S¬¬\naZS,hZh 1h /¡¢|°S §§h §ahaZ ¢S¬/¬\naZS,hZh 1h /¡¢W /§¢¡C°e§/a aZ ¢n°«a°/¢¡ ,¬¬\naZS,hZh 1h /¡¢W°h¦Z¢e§a aZ/ ¢S¬¬\naZS,h«S¥ §§ ZæeSaua¡/ ß ¦Z¡Cg#¬\n| 1aS¥\næ§a aZ/ ¢2\n¢±/» °S §§h\næ§/a aZ ¢/2S¬\n\nApril 2003\nBasic Joshua Dictionary\naZS,h«S¥ n° ¦Z¢/æeSaua/¡ ß ¦Z¡Z#¬\n|§Co §¢/¡Ch°næ§a aZ/ ¢W ±/§ §S¥ ¡/¢2\n§¢/¡Ch°næ§a aZ/ ¢W°«/a¡Ch2\n§¢/¡Ch°næ§a aZ/ ¢W±§/ aZ22\n¢±/»°h¦Z¢næ§a aZ/ ¢2S¬\naZS,h«S¥ ¤Z°°Zh¢æe,aua¡ ßh¦Z¡C#¬\n|¡ + h°, §§ oæ§a aZ/ ¢2\n° ¦Z/¢Wæ§/a aZ ¢/22\n¢±/»¢haZ§,Uæ§ahaZ ¢¤Z°°Zh¢2S¬\nÞ\n¢S¥/¥U°§ eSW°¢C ß a(c) ¡ ¢°\n¢S¥/¥(c) (haS¥ n ±§ §,¥ ¡¢/ §¡¢hZ¡¢/°2S¬\n¢S¥/¥(c) §/¢¡Ch/°W ±§/ §S¥ ¡¢/ §¡/¢ Z¡/¢°W±/§ aZ2,¬\n9 e\neø\n\n5.\ne:u(c)uVu1\nu\nþuuIIVF!iu#u?øZMø 1ugbuyuoe:#!;\n\n\"=y$.u8øYVu\n)\n/±§ §S¥ ¡¢ /§ £ZChh\n-\n¡/¢°\n)\n'þ øøu@øuH;Ð45Zø\nuSu\n*\nuuu!\n\"T eY\nuZø\n=yYuou(c)y-u8u(c)uoøu\nu\nþVø \"!\n)\nøc\n*\nuuu=y=y$ eC!\nLu'þ øøu@øuv'þ\n*C*\n1u¤uuuSøu+'-uS1euueVu b\nþuuø\nS°°C¢æ\nuuu\\Muua\"Vu8øuguø\nu\nþø \"!\n)\nu þT$1uZø'þ\n*C*\n1uþpMøugu\"oMuua\"VI!\n*\nu1u\nVAuZø`þuuø'u !;\n¡/°ß»¢haZ§,Uæ§ahaZ ¢¤Z°°Zh¢2\ncpe\nCh/¢ yZ«ZaZCh/°«S¥ ¢°,¬\n\nA þ\na/ 1an1⁄2A11⁄21/μ\nA\n/1⁄21\nA\n/· Z1⁄4\nA\n¿W· ¿/¿ o\nA\n2n°« / Z\n¶¢¤¦Z¡°¤ZC£S (c)S§ e»h«,¥ W· /¿¿ o\nA\næ\n¶g¿a11/·W1⁄2A1/1⁄21μ\nA\n1⁄21\nA\n· S1⁄4\nA\n¿2n°« / Z\n¶¢Y¦Z¡/°YZC/£Z |Sh§ e(r)h«S¥ na11·æ\n·1¶/μ W1⁄2A/11⁄21μ\nA\n1⁄21h\nA\n·h Z1⁄4\nA\n¿2n°« / Z\n·(¶μ n1⁄2A11⁄21/μ\nA\n/1⁄21\nA\n/· Z1⁄4\nA\n¿2Y¦Z¡/°W¢Ch«/|hn¢±YS¡¢¡a¡/°\n¿h Z\nA\n1⁄2A11⁄21/μ\nA\n/1⁄21\nA\n/· Z1⁄4\nA\n¿2W°«/ S\n¶¢Y¦Z¡/°YZC/£Z |Sh§ e(r)h«S¥ n¿ Z\nA\næ\n1⁄211⁄4\nA\n¶1⁄4¿n1⁄2A11⁄21/μ\nA\n/1⁄21\nA\n/· Z1⁄4\nA\n¿WA11⁄4/\nþ\n2W°/« hZ\n1⁄21/1⁄4\nA\n¶1⁄4/¿W1⁄2A1/1⁄21μ\nA\n1⁄21\nA\n· S1⁄4\nA\n¿WA/11⁄4\nþ\n2¤¦Z¡°n¢Ch«hW¢±/YZ¡¢/¡a¡°\n÷øu8u(c)uoøuyþy1uy\n\ny?/(=jFiHpAS?hqjO? ACpIGg\n\n>=@? DFJ@GjFiHpAS?hq\n\n#q@jFiHpAS?hq\n-øø\nuZø*øuy\n\"\n\nþø \"!#=y$\nuZø&%%uuYu '#u(Mø \"\n)+*\nu,$-ø\n\nþø \"!#Ly$-EuZø-.%u(c)uou/'#u#Mø-\n103254768:9<;-øøuøeMø1u[y\n\"\n05c\n*\nu8u,=y=y$\nuS1euu×2u,=y=y$\n?þ\n*C*\n1u \"\n)f*\nu$-ø\n05c\n*\nu8u,=y=y$-\nuS(e%uuC-I2u,=y=y$-F]þ\n*#*\n1u\"-FH032547689<;\n\n>=@? T#}@FA\nQ\no\n~HNCR\"nTIN1.\no5R\"QoQ\no\nIIQ\n2ø<IV\noRAQopQ\no\nFIQ\naw]y eyu\"\\'-ø\n\ngh\n÷\nG\"?pA\n÷\n)\ns\n\\FVLuvaw]y e yu\"\\'-ø\n\ng\n÷\nig1A\n÷\n)\nIV\n/§¢ u2\nu\ne:u\n*#*\nøuu þZyu{Lu;\ny\n\nBasic Joshua Dictionary\nApril 2003\n45uau^bu?uu\n*\nø uu\" ;!\nC§ £Z¡aS¥ \" u2\nu(c)yu#\n/§¢\n\nZh§ £Z¡a,¥ \" u22\nø-\n\n*\nyuuduø\n\"\n'hc \"\nu(c)yu\n\"\nuZ8ubyZu \"\n\n*\nø uu\" v V\ng b×øbu@uuu[ $1;\noRAQopQ\no\nFIQ\n\n](Z\".þVu\n*\nøuZ[uu[y\n*\nuu'uoø 1yTu\"`bOuu\"@;\nA\n±¤yZ«Capa\n¡°ß»gCh§ £Z¡/aS¥ » §§WæhiZ22\ncpe\n¬\n¿« / Z°¤¦Z±@a\n§§WæhiZ2Y¦Z§/«S¥°/« h\nA\n±¤yZ«Capa\n¡°ß»gCh§ £Z¡/aS¥ »g§¢» §§WæhiZ22\ncpe\n¬\n¿« / Z°¤¦Z±@a\ng§¢» §§WæhiZ22Y¦S§«S¥o°« /\n6aV^'þ øZ\"VuþZu\n)\n\ngh>=@? T(}@FA\nuu=uuuø\nyKuLy.þVuu[yuy£uZø\n=yYuou(c)y-u8u(c)uoøu\nu\nþVø \"!;\n05c]ub\n*\nuuøZ\n;øu$ku?ø VaLyøu\n*\nøuZ[uuYø\n)\n°±¡/§S\n)\n\nghkG\"ASI\ng b×ø×YuYuuYø bOøyKuu '1þZu0uø\n\"u\n*\nø\\ Vfh'ø/u\n)\nuyZuuøyuSu\n*\nu8u!uøbu?uuYu '-u#MøZ;\naZS,hZh 1h /¡¢W°/±¡/§S^§/a aZ ¢n°±¡/S¬¬\n¢S¥/¥(c)¡h^°±/¡§,{Z§§Z¤§ £Z¡,¥ 2\n§/¢»°±/¡§,W¥ ¡,U§C¢ Z2/22S¬\n\" Z1⁄4·(r)¿A Sa 1an·11on13 Zμ/2»1⁄41\nA\n¿Ah Za 1/aWμ SaWa11¶g1⁄4\nA\n·2/22\n¿±/§ ¦&%Z§/°±«¡n·¡¢¡a/¡°\nA\nh«n¢±Ch/a°\n¿/A Za /1aW·1/1oW13h Zμ2\na¡S¥ °/W¢±Ca°\n¿/A Za /1aWμ h ZaWa1(¶1⁄4\nA\n·/22\n9 e\neø(r)uy\nhø\ne:ÐouYuuYø b×øy-uu 'þun\"u\n*\nøZuø\n\nHh\n÷\nG\"?pA\n÷\n)\nuyu\ne:uø\n\ngh\n÷\nigH[hA\n÷;\nÞÞ\n1⁄2/± ß U¢±/WCh§/§°Ch¢Zh§|°\n\ngh\n÷\nGA?pA\n÷\n¡°ß(r)Ch§h£Z¡aS¥ (r)°±¡/§SZ§§C{§ £Z¡S¥ 22\nce\nCh¢/ yZ«Cga#¬\nao1/3 'μ (r)¿A Sa 1an·11on13 Zμ/22\nÞÞ\n1⁄2/§ eZ¡C/haWZh§ £Z¡a,¥ W¢§nß§ ¦S\n¡°ß(r)Ch§h£Z¡aS¥ (r)°±¡/§Sn¥ ¡SY§Ch/¢ Z22\nce\nC/h¢ yS«Ca#¬\nÞ\n¢/±Ch°o ¡C ¥ °\n¡°ß(r)ß§h¦Z»°/±¡/§SW¥ /¡SU§Zh¢ S22\nce\nCh¢/ yZ«Cga#¬\n(1⁄41h Z1⁄4»¿/A Za /1aWμ h ZaWa1(¶1⁄4\nA\n·/22\nÞÞ\n1⁄2/± ß U¢±/WCh§/§°Ch¢Zh§|°\n\ngh\n÷\niAH[hA\n÷\n¡/°ß»Zh§ £Z¡a,¥ »/§¢»°/±¡/§S¥ ¡S`§Ch¢/ Z222\nce\nC/h¢ yS«Ca#¬\nao1/3 'μ (r)1⁄41\nA\n¿A Sa 1anμ Zana11¶1⁄4\nA\n·22/2\n¡/°ß»Zh§ £Z¡a,¥ »/§¢»°/±¡/§SUæ§/a aZ ¢næ°±¡/222\nce\nC/h¢ yS«Ca#¬\nao1/3 'μ (r)1⁄41\nA\n¿A Sa 1anμ Zana11¶1⁄4\nA\n·22/2\n\nApril 2003\nBasic Joshua Dictionary\nÞÞ\n1⁄2/§ eZ¡C/haWZh§ £Z¡a,¥ W¢§nß§ ¦S\n¡°ß(r)Ch§h£Z¡aS¥ (r)§¢(r)°±¡/§SZ§§C{§ £Z¡S¥ 222\ncpe\nCh/¢ yZ«Za#¬\nÞ\n¢/±Ch°o ¡C ¥ °\n¡°ß(r)ß§h¦Z»/§¢»°/±¡/§S{Z§/§C¤§ £S¡S¥ 222\nce\nC/h¢ yS«Ca#¬\n(1⁄41h Z1⁄4»1⁄4/1\nA\n¿/A Za /1aW·1/1oW13h Zμ222\n6aua\nb ø`Ly-uYø øZYu=y$0u\"bu(nFV\ng b×øuLy$Wu\nQ,\n*\nhX]u '.uuøS;\nA\n±¤yZ«Capa\n¡°ß»g§¢»gCh§ £Z¡/aS¥ » §§WæhiZ222\nce\n¬\n¿« / Z°¤¦Z±@a\n§§WæhiZ2Y¦Z§/«S¥±/¡ £Zo ¡C ¥\nÞÞ\n1⁄2/± ß {¦Z¤Z§\ne\n¢Wß§h¦¢±nCh§/§°Ch¢C§W¢§na\n\ng\n÷\nG\"?hpA\n÷\n¡/°ß»/§¢»Zh§ £Z¡a,¥ »°/±¡/§SU°¢/¡C Sh°/±|h§«/ Z222\nce\nC/h¢ yS«Ca#¬\nA\nQS\nao1/3 'μ (r)¿A Sa 1an¿\nA\nZo/a1¶¿Ano1 1⁄4·/22aU\nÞÞ\n1⁄2/± ß {¦Z¤Z§\ne\n¢Wß§h¦¢±nCh§/§°Ch¢C§W¢§na\n\ng\n÷\nig1A\n÷\n¡/°ß»/§¢»Zh§ £Z¡a,¥ »/§¢»°/±¡/§SU±C ¥¥U §/Ch ¡S¥ 2222\nce\nC¢ yZ«/Ca#¬\nA\nQS\nao1/3 'μ (r)1⁄41\nA\n¿A Sa 1anA1¶μμn1⁄211⁄41¶g1⁄2 Zμ22/2aU\n\ngr=@? T#}@IA\nuyuuug'-øOþMøu{=yW'-uS(eu,u{þuuøZ;\n÷øu8u(c)uoøu{z5øuZ[uuYø#\n\n>J@)fJ\nReset Joshua Tracing Command\n÷IøSMøuUuZøEuuSh=y$\n*\nuy@Uu\"Euø I$1Lyuuu?ø V¤uþZu=u;\n*,+\nowQ$-\n*\nRANCI/.\nnu!\n*\nøU VuuSLy$iu\"¤øZMøug;ð45ø\n*\nZ\"O']uuøu!\n*\nøZEu,ø¤V eu,u\nþuuøS\n)\n'#uZ1euu{þZu8øZ\n)p*\nøuSu(c)uy@\n)\n410¤o\n*\nø uu[y@uyZu\n\nuLua;\n\nE\nLF~HnwP g\no\nnøuø u\"\\øZMøuuZøbuuSøu0uyZuYuYø\n*#*\nøu0øhX]øy-uvV EuZø*2+\no<Q$-\n*\nRANCI/.\nu#\neøu=uu;\n4Øø÷øZMøu<](Z\".þu45uSh=y$+ bwb×uyZu\nMøuEuø¤](Z\"#þukuuSh=y$+\n*\nu[y'#uZuduø I\nLyLu8uuu@ø V'uþuLu;:4Øu\\ bwb×uyZuuþpMø VuþZuIV!11þ\nu X]øY'-øøy\nMøuuø1uOX]øu\n!iuuSLy$\nþuuøZ\n\n*\nøuZ[uu[y@uyZu(r)e_þuuuiuI.-øgu\"$W'#uZu\"guuSh=y$u(c)u=uvþZu8øZ¤ kuuLu\n*\nøuSuuy@;\n4Øø\nE\nLI~1n`P T\no\n\n*\nuy+ bOøSLy(r)Zuyu !oe:Zøyo!(þ+u X.ø'#øøyuuSLy$» YYuYø\n*C*\n=y$\n*\nu1u[)þuuuøhX]øy-u×uyuYe_þZu8uuI.-øbu\"\\$`'-uSgu\"f'þYuuuSLy$Tuøu?ø V'uþuLuøhX]øy-u;Ø4Øu\nb<b×uyuou#øS°yTu1uSuMu '.u8ø\nUøyZu '.u8øUuuSh=y$\n)\n=unoþpYu1uVaV'ø1u\ne:[hou=y$uø\nuuSøuH;\n÷IøuuuuYøuY25 bwb×uyZu1\n\"\n0yu '.uuø](Z\".þVu{45uSh=y$25 bwb×u(c)yu \"\n\"\n%:aMu '.uuø](Z\".þVu{45uSh=y$25 bwb×u(c)yu \"\n3 \\\\\n#q \\\\\no5R\"nTIN(IIQ\nKØQSR\"o<N(\nE\nRAgFP\n\nid1?54\\1G\nuZFø1uOX]øuZuuYb×u/#øZW=u0øu#a!u\"+ b\n'1LyøuZøþpMø^ V\n\n5. #q\ne:=uuuZø\n(LyuH» VWV b×uu'uYøu\nþu\n*\nþu;6\nuuou -øZ»yø\nV b×u(c)ud-Lu$?þb×øy-u\n)\nuø\n*\nøuZ[uu[yTu\"'-ø\n\n#q\nuu\"Euøþu\n*\nþZuwYuøub`;\n\nBasic Joshua Dictionary\nApril 2003\n05c]ub\n*\nuuøZ\n\" §CgeZ¡¢W¢7689\nA\n±|h/aCh°¢Cga§SZ Z°n°¡ aZ°n¢±¡¢:8 ; ;Z°/¡ a ; ;1<6\nSh§a§= =WaC§°C§?>$@>A@»h eS§¢C°S¥ ¡ S2S¬\n45u\ne_þuuu\n*\nLy-uquø`Vu=u e:=y$|MøyKuoøyø#\nA\n±haCh°/¢Ca§,{ZhZ°W°¡haZ°W¢±/¡¢Wao/1¿a o/1Y¦Z¡°n¡W§h¦ZC{§SU¡Sh§a§= =\nh?>A@>$@¡/¢Wo B/1\nA\n1¶g¿μ Z1⁄4·C\nlMþ\nuyAuuagþMø\n3 \\\\\n(q \\\\\n=y\nuø\n*\nu8uSøZ\ni\"1?D4\\1G\nYu=y$0uøþpMøu\n)\nV oLyT-\nYuou(c)yTø\n=@? E4=@GgjI1JpBjI1ESESA,=G\n\nCh§heZ¢¡/ Z¡ / ¢\ne\nh¢/aC&6a§C¦S±¡¢Y£S¡S¥ «°n§SF8S¿|h°h¢W¢C«W¢±/¡¢G8 ;;Z°¡ a ;;ZæH6\næ i^oZh eZ¡/ =¢/¡&IWæhiZ2S¬\n÷øu8u(c)uoøuyþy1uy\n\n#q\nKøø\nuZøuMø1uy\n\"\ny5 b×uu'u=y$uz5øuSu(c)uy@ uø\n\nlJ0øuTu \"\n)¤*\nu,$-ø¡y b×u(c)u¤uLy$-\nz5øuZ[uu[y@ r-Euø-I\n\nlM-K0øuuC-I10C254M68:9<;\n\n#q\nK7~1IIQ/\no5R\"nTIN1FIQ(r)o\n\n*\nuyuu_o\no\nFRAgN#o\n÷\nhGg1JpBH?/Bj.#G=pG\n÷aø\nz5=yKug1þZu\no5RAgnIgN1FIQ\ny\no\nIRAgN#o\n)7*\nZ\"O']uk!=yuUeu!(c)uø uZuy\n=? DFJ\neO1þZu8uH;\n45uu$/uWV\n*\n=yKuLy$uø{bOøuy=y$(r) Vu\n*\nøuSuuy(r)=yyuu\nþuueuuuy$?þu$-ø\n)\nu#Y\n*#*\nSMøuuduø\n*\nøuZ[uuYø|uuþuEþpyuYuuy×=y×e\n*\n$1ub`uøe:=u\"-\nuoøy;L eøhX]ø\n)\n!(þyyøøuNy\nuøZYu1uO!11þguLy11=y$u 'HþZu\n\n5. #q\nu\"oþpYu\nyuu\nþTu(c)u%uuuy$?þu$-øZ;y5 øc.ub\n*\nu8ø\n)\n\ngh. (q\nþuuu\n*\nøZMøy-uJu\n*\nøuSuuyu(Ou\n*\nuøø¤ V$1u\n*\n\nMøøøhc]ub\n*\nu8øZv'-øu eY;]þuZ1þþpMø¤ V\n\ngh. (q\nb×øuTuH\nuyob×u/#ø=uUøu(\"8ø Oud$-øyø uuYøOþMø Ly-uYø V¤uSøS;\n6auþp'þu(c)u=uk!u#øZYy1ouwb×uu'uYø \\e:Zuu\nX]uuEþøuZø{Ib\n*\nuuø b×øy-uYuuyO V\n\ng. (q\nø-\nuaþ1y\n)\ndLyTø\n\ngh #q\naJþp'þu(c)u=uk!u#yZø{V U\"8u?ø-=ø VaV'ø1u;345Zøøhc(ø\n*\nuy»aOuZuu\nFV\no\nFRAgN#o\naøhc\n*\nuI[h=u'uk!×'þ\n*#*\nuIuøuu(\nJ@DINM\nuøoIb\n*\nu8ø b×øy-uYuuy@n\"þuuuuCoe:Zuu\nid1?54\\1G\ne_þuuugu#\n)\nuuuvu\n)\nøu\nþT1yuoYu=y$IV\n*\nZ\"O']uuøZ;\nsNO\nu\n*\nuu\n\n5. #q\nb×øuu1wuy1ouu#Eua;>y\n05c]ub\n*\nuuøZ\naZS,hZh 1h /¡¢o,h§a§ ==ea¦Z±/§Y¦Z±/Y¦Z±ZhS¬^d¬\naZ/°¢Ch« /¢«ChZh¢§Zh°¢¡/ £S¡Ch¡a,¥ °S¬\naZS,hZh 1h /¡¢ eS¢±§ ×°¡ a|Sh§a/§ = =S¬+P9 §¢Zh§¡S¥+°¢C¡ e7Q/°¢¡ S¡CZ§/«¢«¢QS¬¬\n\" §CeZ¡¢n°¢Ch/¡ eR68S¿Y¦Z¡°n¡W§h¦ZC{§SU¡Sh§a§= =|h:8Z¿W¡/¢G8Z¿S<6¦Z±§¤¦Z±¤¦Z±CS¬¬\n°¡ a+Sh§/a§ = =naCh§°/Ch§?>A@>$@» eZ§¢/Ch°S¥ ¡/ Z2S¬\n*\nLy-uUuZø{Møy-uYøyTø#\nao1¿/a o1¤¦Z¡°W¡/W§ ¦Z/C¤§SY¡oS§a§ = =h?>A@>$@¡/¢Wo B/1\nA\n1¶g¿μ Z1⁄4·C\n\nyøhc]ub\n*\nuuøOþp\"Ly$W$1u\n*\n\ne_þuuu'-øC\n\nApril 2003\nBasic Joshua Dictionary\naZS,hZh 1h /¡¢ eS¢±§ ×°¡ a|Sh§a/§ = =S¬+P9 §¢Zh§¡S¥+°¢C¡ e7Q/°¢¡ S¡CZ§/«¢«¢QS¬¬\na/¦a¦1h¢/±§«¢/«¢¡/°Ch/°¢¡/¢Ch§\nSau°/¢Ch¡ eo°¢Ch/¡ e\nau§/a aZ ¢n°S¥eau¢ aZ/e¢ aS§SY°S¥/¬¬\n\" §CeS¡¢aC¡±S,h§ eZC§§¢ed¥Sh°¢¤¦Z±§ed¥Sh°¢¤¦Z±Ch,¬^\"¥S°¢Y¦Z±/S¬¬\ncpe\n\"¥ ¡ eSa Z¡eIi°S¬+Ch/>^ ¡Zi#¬Y°S¬¬\ncpe\naa°¢Ch¡he°¢C¡ e#¬¬/¬\n45ø\n\ngh #q\nb×øuTu1y eOuZueYue$1u\n*\n\nø\n*\nøZMøy-uLy$\nz5 Z\n*\nø køuuuS-\nuy@\"\n*\nu\"u\n*\n\n*\nø 1u!0u(c)yuuøuIb×øuufe:[hoø eyøu{Lug;\n÷øu8u(c)uoøuyþy1uy\n\"\nT \\\\\nKu! \\\\\"\n-øøuø^Mø/u[y\n\"\ny b×u(c)u¤uLy$×z5øuZuuy AuZø(r)\n\nlU0øuTu \"\n)Y*\nu$-øy b×uu\"-\nuLy$-Oz5øuSu(c)uy@ >-Euø-I\n\nl7-K0øuu#-I103254768:9<;\n\n#q@jFiHpAS?hq\nK7~1IIQ/\nNCi(iðN(RAn\nEIo\n~hoCoQSRgOo\n\n*\nu[yZuu_o\no\nIR\"N#o\n÷\nGgHJpB1?BTj\n#pG=pG\n÷uø\n\ny1X]øy8øyTøUVaþyTu[y^V þpMøULyuy\n\ngh\ny-uLy.þVuu[y@;\n\ngh. (qj\ni1AS?q\nuZa\n*\nu8uh!¡uZø\n=yYuYuy-uuuuYøu\nu\nþø \"!UþdLy$\nu£þMø -Lu?ø Vu=yZøu\n\n5. #q\nb×øuu×FV0u X]uLuuu ']uuø\n)\niuøu?ø V¤uþZu=u\n\n5. #q\nb×øuTuH;v45øu8uu'uYø e\"Ib\n*\nuk!\n*\nLy-uUuZø`Ly@YuYuyKuuuuYøu\nu\nþø \"!;\n/N#i(iCN1RAn\nEIo\n~hoCoQSRg\n45Zø{'þ\n*C*\n1uw'þ\n*#*\nuFuøuu\"Euø\n\ng.\ny-u=y#þuuy@;\no\nIR\"N#o\n\nYuøub\nud»eyu\"+þu\n*\nþuuø»LyV b×u(c)uy@;4Øøu@ø-\nV¤uþuLufuv÷\nGgHJpB1?/BjO#pG=pG\n÷,;\n05c]ub\n*\nuuøZ\nÞÞ\n°/¡ aZ yZ«/CaW¦(h¢±YSS ¡«S¥ ¢W°¡ aneZ¢±/§\naZS,hZh 1h /¡¢o¥ § £Z°eCh°/§W§ahaZ ¢S¬/¬\n¢S¥/¥(c)¥ §h£Z°&/§aW ±/§ §S¥ ¡/¢2S¬\n¡°ß(r)¥ § £S°&§/aWæ iZ2\nce\n°¡haZ yZ«Za#¬\nμ1/3 ¿&/1 W1⁄2A/11⁄21μ\nA\nÞÞ\n°/¡ aZ yZ«/CaW¦(h¢±W«/°Ch SSShh°¡ aneZ¢±/§\naZS,hZh 1h /¡¢W¢haZ§,^§ahaZ ¢n¢ aZS¬/¬\n\nBasic Joshua Dictionary\nApril 2003\naZS,hZh 1h /¡¢ eS¢±§ ×°¡ ao¢ aZ/§S¬+P9 §¢Zh§¡S¥+°¢C¡ e7Q/°¢¡ S¡CZ§/«¢«¢QS¬¬\na¦(h¢±°/¢¡¢ eS¢ S°¢Ch«/ ¢«Chh §ahaZ ¢n¢ aZS¬+\"¬\n\" §ZeZ¡¢n°¢Ch¡he\n68 V\nA\n±G8 (r)h°W¡/W iZ¡heZS¥ n§SU¢±/G8 |¥Sh¢C¡Ca(c) §Ce1P6{§a aZ/ ¢W¢ aSS¬¬¬\n¢S¥/¥(c)¢ aS§S|¶¥Sh¡hC 2S¬\n\nA þ\na/ 1a(r)¶μ1¶\" Z·n a1¶1⁄2/2\n¡°ß(r)¢ aZ/§SYæa§§ßnCh /2\nce\n°/¡ aZ yZ«/Ca#¬\nA\n±(r)¶μ1¶\" S·|h°n¡W iS¡ eZS¥ n§SU¢/±W a(¶1⁄2o¥S¢Ch¡Cga(c) §Cge1\n4MEþMøbuø=yYuou(c)y-u8u(c)uoøu\nu\nþø \"!nLy+g b×øuø `eu!nu(c)uZø uuy\n\n5. #q\n=y$\n=u\n)\nøhc@uuS1uU=uUVa b\nuø^ yKuLy.þVuu[y¡u$?þTb×øy-uþp\"Ly$auZøuS øZg (c)Vuþy1uy\n\ng.jFiHpAZ?q\n)\nuyu¤=yKuoø\n*\nøu2uø=yV b×uuy;\n÷øu8u(c)uoøuyþy1uy\n\ny?/(=jFiHpAS?hqjO? ACpIGg\n\n>=@? DFJ@GjFiHpAS?hq\n\n>=@? DFJ@GjFiHpAS?hqjO? ACpIGg\n-øø\nuZø*øuy\n\"\n\nþø \"!#=y$\nuZø&%%uuYu '#u(Mø \"\n)+*\nu,$-ø\n\nþø \"!#Ly$-EuZø-.%u(c)uou/'#u#Mø-\n103254768:9<;\nShow Joshua Database Command\n%:u\n*\nu8u!×uZø¤ yKuYøyKu Vuø{%uuYu '-u#Mø\n)\nuo'þ'TMøu< VuøY y-uYøy-ub×uu\"=y$unø -\nuYuLy\n*\nu(c)u¤uYø 1y@;\nowN1O\n\nI/.opN1I.R\"\n\n*\nø/hFVu8øZJuø\n*\nøuSuuy\n*\nuu'uoø 1yJuduZa\n*\nuuu!;M4Øøu?ø V'uþuLuvaJuZø\nøyKuFøu@uuYu '-u#MøZ;\n4ØøuSu\n*\nuuu!e$1 þ\n*\n\n*\nøuSu(c)uy@þZyu@ø Tuø(c)øuuZ=y$n45þøuyZuyRuuuMø\n)\nV\n*\nøuZuS-\nuye=uuuþuWX]uuEþø V\n\n÷\nG\"?hpA\n÷EuyZu\n\ngh\n÷\nigH[hA\n÷\n)\nøS\n*\nø1uOX]øu\n!;\nnZøy»\n*\nøIVF!#=y$Tu\n*\nu(c)u¤uYø 1yU!11þ»uyVuþT1uZø uFIbwLuquøuZa\n*\nuuu!u\"\n*\nuu'uoø 1y\ne:Luø Luø\nuþuWX]u(c)uEþVøS;\n0Øc]ub\n*\nu8øZ\n¿±§ ¦W%Z§°±/«¡W·¡/¢¡a¡°/eaeZ¡/¢ ±Ch/aW¡¢/¢Ch(r)\"ZS ¡/«S¥ ¢Y C¥¥ 2S¬ #¥¥\nA\nh«W¢/±Cha°\nÞ\n1h ¡/¢Ch§n§SU¢C«¢±Y£S¡S¥ «h°|hn¢±n±¡ 1a\n·o h 'B¿1¶g1⁄4W¿a S1⁄41¶¿Anμ 1⁄21¶1⁄4/· Z2\n1⁄4\nA\n¶3 /¿a '(/ o1an¿a Z1⁄4(¶¿AWμ1⁄21¶1⁄4·h Z2\n·o h 'B¿1¶g1⁄4W¿ B/ o1¶\" Z1⁄4n·oah Zo1⁄2A B/ 1⁄4\nA\n1⁄4\nA\n¶3 ¿/a '( /o1an3⁄4 o B S1⁄4W·o/a Zo1⁄2AB 1⁄4\nA\n1⁄21 /1⁄4\nA\n¿1¶g1⁄4W¿a S1⁄41¶¿Anμ 1⁄21¶1⁄4/· Z2\na/¡S¥ °n¢±Cha/°\n1⁄21 /1⁄4\nA\n¿1¶g1⁄4W3⁄4 oB Z1⁄4WA/ 1⁄4o\nþ\nÞ\nh 1h /¡¢Ch§n§SU¢Zh«¢±¤£Z¡S¥ «h°|W¢±n±¡ (ha\n\nApril 2003\nBasic Joshua Dictionary\n¿±§ ¦W%Z§°±/«¡W·¡/¢¡a¡°/eaeZ¡/¢ ±Ch/aW¡¢/¢Ch(r)\"ZS ¡/«S¥ ¢Y C¥¥ 2S¬|\"1h¡heZ°Chnæ iæhaZ2\n§/§°Ch¢n¢Ch«¢/± £Z¡S¥ «W¢§/§æ»\"SS ¡«S¥ ¢\nþ\n°/2S¬\nþ\n/°\nA\nh«W¢/±Cha°\n·o h 'B¿1¶g1⁄4W¿a S1⁄41¶¿Anμ 1⁄21¶1⁄4/· Z2\n·o h 'B¿1¶g1⁄4W¿ B/ o1¶\" Z1⁄4n·oah Zo1⁄2A B/ 1⁄4\nA\na/¡S¥ °n¢±Cha/°\n1⁄4§\nKøøkuø(c)Mø1u[y\n\"\n05y-uYø =y$uyu(c)%:u\n*\nuuu!#=y$+z5øuZuuy\\=yuZøW%uuYu '#u(Mø \"\n):*\nu$-øn05yT-\nuYø =y$-=u(c)yu#-.%:u\n*\nu8u!#Ly$-Oz5øuSuuy@g-O=y-Euø-O%uuYu '-u#Mø-FH032547689w;\nShow Joshua Predicates Command\nHT eYUuZø\\)þTøy-u'uk!0u?ø Vu=yZøu](Z\".þVu\n*\nøuSu(c)uoøZ;\n\nE\nLF~HnYX{QnL\no\nnøuø Eu\"\\LyTuEþVu@ø\n*\nøuZ[uuYøZuZuuuøEþMøuku#\n'-u#Mø\\V\nu8u/X( vV\n'@þ=uuuSLy$ouø\n*\nøuSu(c)uoøZ\n=yTuZø\\þu\n*\nþu;\n\nX{N1O\n\nI/.\n1T ety-uk!\n*\nøuZuuYøZ`e:TZMøyZub×øZ\\ y-uYuLyu|'þ'TYuLy$+ n'þ'H-\nYuLy$;\n\nI\n~\no5~\nE\n\no\nIIN1FIQ\nnø øEu\"uSu\n*\nuuu!uZø`LyV bOuu[y@;\n\n7N#iCND.\no\n8 yKu\n!\n\"T e\n*\nøuSuuYøZ\nLyouø\n\n*\nø/hFVu8øu\n*\nuS#u,$-øm\n*\nuS-u$-øZ;\n?þ\n*#*\nu\n!u(r)X]uuEþø\nV\n\nu=uudeMøøuuLuOuø\nþøy-u'u\n!u@ø Vu=yZøu+](Z\".þVu\n*\nøuZ[uuYøS;Z2yKu8øZ!(þÐuø e:uMø^\n*\nøIVF!1uZø\n*\nuS-u$-ø\n)\n!(þ\nMøø\nyKu\n!uø\n*\nøuSu(c)uoøZu@ø Vu=yZøu¤=yTuøþøyKu\n*\nuS-u$-øZ;\n\nU\nN(RA\nnE\n\nR.n\nU\n+\nowQSL\no\nnøuø ku\"=y1uEþu?ø\n*\nøuZ[uuYøZuuuuø|=yZø =uYøu(r)',!uø\n*\nuSH-\nu$-øZ\n*\nøIVauøu¤=y+\n7N#iCND.\no\n;\n\nU\n+\no\nOo\n1T e\ny-uk!uø\n*\nøuZ[uuYøSuZuuuøu@ø VaLyøu»=y1⁄2u\n*\nu1uþZu8u|a!g-\nuoø b`;\n4Øø\nHT e\n](Z\".þVu\nz5øuZ[uuYøZ+ b<b×uyu\n*\nhXCuu@øZu\ny1X]øy8øy-uiu\"/uUV ^'1 eY\"=y$\nu þ$1uuLuuø\n*\nøuSuuYøZu?ø Vu=yZøu(r)Ly1uø|þøy-u\\e_ 1u8uH;O45ø|þu\n*\nþu\\uuuou/']uuø| V\n*\nøuSuuYøTyZub×øZuyZuu,$?þTb×øy-u;O4Øø øuøuy#þTb\n'-ø VOb1þMøW'#ø Zu XC u@ø VaLyøu\nV uø\n*\nøuZ[uuYø0yZub×øZbuZuuua bwb×u(c)yuiuZa\n*\nuuu!;4ØøZMøuy+'-ø|Møøy+',!»bþpg-\nLy$WF$1KuyTuøyub×øZ;\n¿/±§ ¦&%S§°±«¡naCh (h ¡¢/°×aua¡/ ß¡a/°\nA\nB\nA\nB @a '/1⁄41o B Sμea ZA/1Wa1o/ ZA\nA\n¬\nA\nB @auμ1/3 ¿eμ13 onμ13 / S¬\nA\nB @a[1¶go·e\\/11¶·S¬\nA\nB @au11⁄4/ a o/o1 Z/1o1⁄21/μeo/1o1⁄2(r)¶1⁄4· D]C¬\nA\nB @auaμ\nþ\n\\1(¶·S¬\nA\nB @aua /1⁄43⁄4 1¶1⁄4e\\11¶g·S¬\n¶g¿ D] ^Baμ /1ae1⁄4h 'B\nAhþ\na S¬\na/o13 '/μ ea/o1a1¿(¶\nA\n¶11⁄4,¬\nA\nB @a_%Z h Zμ1 ¿ea ZA1,¬\nA\nB @a[` / 1⁄4eo1 1⁄2/1μS¬\nA\nB @a[(1¶gμμ¿e(1¶μμ /oW31¶1⁄2\nA\n¶BS¬\nA\nB @a\nA\noh Z3⁄4 ·\nþ\n3 /1⁄4\nA\n¬\n(/1⁄41 Z1⁄4eao1a/1¿1¶\nA\n¶g11⁄4S¬\n÷IøuuuuYøuY25 bwb×uyZu1\n\nBasic Joshua Dictionary\nApril 2003\n\"\naEbdc5egfhc'iPbEjSkmlnjdo_p'irqsc5ttuk/vdw \"\n\"\naEbdc5egfhc'iPbEjSkxnyDk^z${|v2}?qsc5ttuk v~w \"\nShow Joshua Rules Command\n\n{[iPoNk$,i\\bdpmzAjdy$yDp5v2\\oKWwp5{|vdp wFyjdo_p'i$\nn',AW\naEbdc5eyjdo_p'ire{|\\bcDv~pc5ytuc5yDpm\\y${|}E}2p5y ir\\bdk jdv2{|&e{\\b\\bdpiPhp zD\n{[{Np wFyDp w^{_zDk \\{_c5vS\n\nFE ~|¡/\naEbdc5e¢yjdo_p'i£e{\\b?vdk/tup'irz5cDv,Pk {v,{v,}¤c5v~pmc5yut!cDyDp:i\\j2¥~iP\\y${v,}~i$\n¦§2\ns§2a(c)Z«$||¡2E|¬ ¡&\nbdp5yDp(r)Pcw^{[iPHo_k$b~pmc jd\\'jdyDc5t°b,{izDc5tt!k vdw±\n\n23 HD,«\naEbdc5eμ\\bdpyj~oNp'iwHp5{|vdp wW{|veb2{_z$bEk^z¶2k }2pGcDymhk'z¶2k }2p'i$3xsb,{iwHp\nk5j~oi<c·\\bdpmzAjdy$yDp5v2hk'z¶2k }2p'\n\n1h W1A¡2 2$_? ±±o» ¬^1⁄4 «\n1⁄2\nv~z$o jCwp(r)yj~oNp'ib~k £k/yDp(r){|v2bdp5y${|Ppw¥/\n23H HD,«\n\n2±«A o\naEbdc5ec5v2oKG\\bdp·yjdo_p'irwp5{|vdp wF{|vkmEk y$\\{_zjdo_k yi,iP<p5t(r)\n,\naEbdc5e3⁄4c5v2oK&¥±k'z¶Ee¿k yDw?c5ym\\c5y$e¿k yDw&yjdo_p'i$aASwp5k5j~oAb~pGzDc5tt!k vdw\niPbdc5eAi¥±c5\\b&¥±k'z¶Ee¿k yDwGk v~wFc5y$e¿k/yDwFyjdo_p'i$\nxnbdpaEb~cDeAfhc'iPbEjCkAlsjdo_p'izDc5ttuk/vdwgHyDc AH{_wp^ikA<c c5oFc5yR¥Ey c5eAiP{|v2}Æb,yDc jd}EbCk/ooF\\bdp\nfhc'iPb±jCkRyjdo_p'i$\n1⁄2\nGw^{[iPoNk$,iWkRPk5¥EoNpRc5k o|ou\\b~pyj~oNp'i?ik \\{iP|{v,}b~p}E{ Ahp5vEk y$}j~tup5v2i$\nE\nc$j1iP{v,}WtA{Nww^o_pmc5vkyjdo_p(r)v~k tupw^{[iPHo_k$,ib~p(r)tuc'iPyDpz5p5v2£wp5{|v2{|\\{Nc5vc5A\\bdk yjdo_p^\nEnE\nk toNp\n\nII IDI&Ð^I N I O OWO O^O5ON×[ØHUU U U OHU$ODU7YDÞaßaDa'OC×\\O5IDa'ON&a&aa×[æ Oc e O U ONGeO O\neIHUI'OHUU7O O^ODO NS×\nÐ^eDe'i i iIDi\ni i ð e nhoo nEooi e o e II&i o i i'n i o en i i ð eWo iDe'ihoØDi'n oi Ø n o i e'o ØEoØ i\nio O e o ihoØ e o ni i ð e\nxnbdpk5¥2c$AEpp\nE\nk/tHo_pmo|{iPiAk o|ooc5Y\\bdpmyjdo_p'irb~k rzDc j~oNwF¥±pm\\y${|}E}2p5yDpwF¥^¤kHyDp w'{Nz5k \\{Nc5vcD\n\\bdp·c5y$t\nßaDa^OS×\\O5IDa^O Nama a\n\nlpDo_k Pp wGqsc5ttuk v~wEi\n\n\"\naEbdc5egfhc'iPbEjSkm÷syDp w'{Nz5k Pp'irqsc5ttuk/vdw \"\n\"\naEbdc5egfhc'iPbEjSkxnyDk^z${|v2}?qsc5ttuk v~w \"\nShow Joshua Tracing Command\na±bdc5eAi{v,c5y$tuk \\{_cDvk¥±c jdZfhc'iPbEjSkm\\yDk^z {v,}~\n,$ 1¬$øsH$|¡/\n\nb2{_z$b#NEpuc5F\\yDk^z {v,}gPcuwHp'iz$y${ ¥2p^\n1⁄2\n&z5k vg¥2puc5vdpuc5:c5y$e¿k yDw\nyjdo_p^i$uu¥±k'z¶Ee¿k yDwFyj~oNp'i$uyDp w^{_zDk/{_c5vSi$usx\nE\na?c5Ep5yDk \\{Nc5vSi$usc5yk o|o[\n¦§2\ns§2a(c)Z«$||¡2E|¬ ¡&\nbdp5yDp(r)Pcw^{[iPHo_k$b~pmc jd\\'jdyDc5t°b,{izDc5tt!k vdw±\nxnbdpa±bdc5eμfhc'iPbEjCk¤xnyDk^z${|v2}uzDc5ttuk v~w7wp^iz y${¥2p'i!\\b~pzj~y$yDpDv,·iPPk Ppc5£fhc'iPbEjSkWyDk'z${|v2}~u\n\nApril 2003\nBasic Joshua Dictionary\nik${|v2}?eb~p5b~p5ympk'z$b\n, !¬$øusH$|¡/\n{iuc5vc5ymc5syþc5ymp k^z$bRk^z$\\{ Ahp\n2 1u¬$øunPA|¡^\nu\na±bdc5eCfhc'iPbEjSk7xnyDk^z${|v2}uy${|v2ic jd{|v2c5y$tuk/{_c5vyk¥±c jd\\b~p¤zjdy$yDp5v,·cD\\{Nc5vSik vdw\\yDk^zDp w\np Ahp5v2i$\nEnE\nk toNp\n\nII IDI&Ð^I N I O OWØHU O c'U UaDÞ OWIaHU$O cHU U FeO O\nlpDo_k Pp wGqsc5ttuk v~wEi\n\n\"\naEbdc5egfhc'iPbEjSkmlnjdo_p'irqsc5ttuk/vdw \"\n\"\naEbdc5egfhc'iPbEjSkm÷syDp w'{Nz5k Pp'irqsc5ttuk/vdw \"\nShow Rule Definition Command\na±bdc5eAib~p(r)o_k Pp'iP£wpD[{v,{\\{_c5vcDYk·fhc'iPb±jCkyjdo_p'\n\n§,1⁄4\naEbdc5e¢\\bdpwHp5{|v2{|\\{Nc5vc5Aeb,{Nz b?yjdo_pmc5yuyj~oNp'i$\n\nn¬ H\nxsb2{[iuk/yA}j~tup5v2z5c5v2\\yDc5oiAb~p·¥±p5b~k5AH{_cDyc5Y\\bdp:zDc5ttuk v~webdp5v\n\\bdp\nwHp'iP{|yDpwuyjdo_pRwHp5[{v,{\\{_cDvg{ivdc5Gzjdy$yDp5v,oKy{v¢k v¢pw'{Pc5y&¥jd[p5y\n1⁄2\n\nhc j\np5v2Pp5yap'i$ua\\bdpzDc5ttuk/vdw&o_c k^w±iu\\bdpwpD[{v,{\\{_c5vR{v,<ck vap w'{Pc5y\n¥Hj~p5y\n1⁄2\n¿Ec jRp5v,<p5y£c'uþ{|rwcp'ivdc5nxsb~p(r)Ahk o jCpFcD\nn¬ H\nwpD\\k5jdo|i\n<c\njCp5yP,uatup k v2{|v2}\nb~pGzDc5ttuk/vdw\niPbdc jdo_w?ki\\¶WEc$jR¥2pD\\c5yDpFoNc k^w'{v,}\nk vH{|oNp·{v,<c·\\bdpmp w'{Pc5y\n¦§2\ns§2a(c)Z«$||¡2E|¬ ¡&\nbdp5yDp(r)Pcw^{[iPHo_k$b~pmc jd\\'jdyDc5t°b,{izDc5tt!k vdw±\nxnbdp\na±bdc5e\"lsj~oNp\n\np5{|v2{|\\{Nc5vgz5cDtAtuk vdw\nk o|oNc5eAi·Ec jgPcuip pb~p\nwp5{|v2{|{_c5vgc5kfhc'iPbEjSk\nyj~oNp&{|vk1{[iP{[iPPpDv~p5yGe{|\\bdc jd(r)b~k5AH{|v2}u<c7pDv,PpDy\\bdp?p w'{Pc5y\n\nb~pDvy\\bdp¤yjdo_p?wHp5[{v,{N\n\\{_cDv#zDk/vA¥2pc j~vdw\n{|vg\\b~pupw'{|<c5yb~puzDc5tt!k vdw\nw'{iPoNk 2iW\\bdpo_k Pp'iPAhp5y iP{Nc5vS\\bdp5yD\ne{[ip'uYwp5hp5vdw'{|v2}gc5vgb~p7AEk ojSpRc5\nn¬ H\nuA\\bdpuzDc5ttuk/vdwyc5[p5y i<cyDp k^wu{|vg\\bdpoNk Pp'iP\nwp5{|v2{|{_c5v?yDc5t°\\bdp(r)[{o_pmz5c5v2Pk {|v2{|v2}&b~p(r)yj~oNpwHp5{|v2{|\\{Nc5vu\nEnE\nk toNp\n\nBasic Joshua Dictionary\nApril 2003\nII IDI7OO^O5O&oO^UHU$aHU I:Ð'eDe'i ii IDi\nOO^O5OGÐ^O O^O5I ONDÞ1×\n\nU'O^U O/O5O'OO^O5I O N Þ^×DIHUI'OHUUg×PUa IHU a O c O\noeRßODUuß'O O^O5IO N&a ^a\nßAO5IDa'O NWa 7a Þ'a\nßAO5IDa'O NWa!&a Þ'a\n\nUEU\"5O'U O a nI# 'O ca N&a ?a!5a\nØ$ e oßeHU5OO5N&a ?a! a\n%'&)(+*-,/.102(3,5446687\n§E¡2$||¬¡\n:\nc5{_c5vdk o\n«A§ H 1¬^\nfhc'iPbEjCky{iki\\jCz5zDp'i$iz5c5v2\\{v±jCk \\{_c5vd hki$iP{|v2}¢oNk v,}jCk }2p'\n1⁄2\nvtuc'iPWHo_k^zDp'i$urzDk/oo|{v,}\nb~pWzDc5v2\\{v±jCk \\{_c5vutup k vSi\n\"\n}2cWk bdp k^w¤e{\\bu\\bdpGyDp'iP!c5r\\bdpWzDc5t'jdPk \\{_cDv \"\n3Aakip w\ncDvuz5c5v2Pp\nE\nu3\\bdp:\\cDy$t\n%;&)(*-,/.102(3,54466<7\n{|vdw±i!\\b~pzDc5v2\\{|vEjSk \\{Nc5vuk vdw7z5k o|oi{k^zD\nzDc5yDw^{|v2}EoK,\nac jzDk v&j1ip\n%;&)(*-,/.102(3,54466<7\ne{|\\b2{|v{[iPWzDc wpmp5t¥2p wHwp wF{v\n\n-\nxnbdp\nKø=\nhk y$uc57yjdo_p'i?>{|v@1{iPCzDc wHp{|v\nc5y$e¿k/yDw#yjdo_p'i$u(r)k/vdw{v\ntrjdo|{|o\nE\ni\\jSzDz5pp w'{v,}{[iPGc5y$t(r)ic5o¥±k^zA¶heok yDwFyjdo_p'i;A\n-\nxnbdp¥±c w5Wc5Yk\n%;&)(+*1,/.-0B7C6D;EF,G68(+HJIK&FL\n1⁄2\ntuk5¶2p'i£v~cFip5vSip·<czDk o|o\n%'&)(+*-,/.102(3,5446687\np5o[ipDebdp5yDp'\nxsbdpc5H\\{_cDv~k o\n«$§$ ¬^\nk y$}jdtup5v,Fk o|oNc5eAi:b~pM1{iPyz5cwp7PcuiPEp z${|u\\b~p\nwHp5y${ Ahk^\n{_c5v?{v,c5y$tuk \\{_c5v?c5yu\\b~pON/jCp5yP,\nEsE\nk tAHo_p\n\nU'O/U O n'U ODUEU cO a O&UI IDU'n aI nHU O O U# II e\nU'O OHU ODa^O a OHUQP# I I eNPR\nU'O c ODa^OHU IWc O a O'U# OHUÞ^n a O^O5ON&U OHU$U O a OO n ODU^n O aO UHU O O/O\na IDa'n ^I O NWc O a c InSS\nU'O/U O^O5O7U O ODUEU+ U n^O^U$N a^×T# O c eDI^OHUU<\nU\"U\\aDÞO c O N OWa c O UEUU'O aO n# I Ie\n\\O# I O U'n^O5I U'U c nDa'O'U U O#^ODO\nPO5I IV5IHUQ# I I e7UP#I I e NP\nU'IHUUIEU$a I n O'U\"^U c OaHU IOHU\"$Þ?a c O UEUU'O aO n# I Ie# I Ie\nN O c c OODUR$ODa'IHU n W\"XW5nHU$O ODUEUU n^O^U Na\n\\Ia I OHUIhU N O\nI'I OYa'ODa# OHU:ac ODUEUU'O a O n# I I eZP# I I eNP\n\\N Oc c O ODU[\\N O cc O ODU[R$ ODa'I'U nW\"XWDnHU O ODUhU U n^O/U N a\na IORßUI IDU'n aI nHU O O U7a c ODUEUU'Oa O n# II e a\n\nApril 2003\nBasic Joshua Dictionary\n\\O N eßU I I U'n a I n'U O ODU?a 'aQ\\5RHU Ua n ]'O O'UÞ'nHU ON O^O5a N\nß'^ i io n Ø i nO eDe'oWo e_De`e O i o aWN O c cO ODU'ODU\noa:I'O N:U'OHU Ua^ODUa^U$IDaRU O/O5O&O e e'oEoo^n iEoI Ø\n$ i` i O nW XW5n O e e'oEoo^n iEoI Ø\nß'^ i io n Ø i nO eDe'oZ_De'o Ø eO Y i ODi^n ØDe'i eI a&N Oc c O ODU^ODU\noa:I'O N:U'OHU Ua^ODUa^U$IDaRU O/O5O&O e e'oEoo^n iEoI Ø\n$ i` i O nW XW5n O e e'oEoo^n iEoI Ø\nß'^ i io n Ø i nO eDe'oZ^De'O^De^o Ø iDe'n e'o o n æ e'o ØDe^O i e i aWN O c cO ODU'ODU\noa:I'O N:U'OHU Ua^ODUa^U$IDaRU O/O5O&O e e'oEoo^n iEoI Ø\n$ i` i O nW XW5n O e e'oEoo^n iEoI Ø\nß'^ i io n Ø i nO eDe'oWØ i` nDÐ^i o e I aWN O c cO ODU'ODU\noa:I'O N:U'OHU Ua^ODUa^U$IDaRU O/O5O&O e e'oEoo^n iEoI Ø\n$ i` i O nW XW5n O e e'oEoo^n iEoI Ø\nß'^ i io n Ø i nO eDe'oZ_De'Ø_$nSS aWN O c c OODU'ODU\noa:I'O N:U'OHU Ua^ODUa^U$IDaRU O/O5O&O e e'oEoo^n iEoI Ø\n$ i` i O nW XW5n O e e'oEoo^n iEoI Ø\nl\np5oNk/<p wFyujdv~z$\\{_cDvui\n\n%'&)(+*-,/.10b,GLcIBDd\n%'&)(+*-,/.10befIKHJ*5g2,5LcIhDJIi4<.FHJIK&FL\n%'&)(+*-,/.102(3,cj-jc&Fk H\n§E¡2$||¬¡\n2E» H«'=\nsPd|E|¬ ¡\n:\nc5H\\{_c5vdk o\nøP_1⁄4| A\nEsE\nk tA{v~p^iub~pgx\nE\nal\\j1iP{|{_zDk/{_c5v\"i<\\yjSz$[jdyDp'iazAjdy$yDp5v2\\oK\ni\\jdhc5y$\\{v,}Æ¥2pDo|{Np57{v\n2E» H«;=\nsPd|h||¬ ¡\nuoyDk'z${|v2}yb~p5t\n¥2k^z¶y<c7Hy${|t{|\\{Ahp5oKl\\j1iP{|{_p wRyDpw'{_zDk \\{_cDvui\n>{[\np'n<c\\bdc'ipeb~c'ipi\\jdEcDy$AwHc p'iAvdc5wpDEp5vdw&c5vRk v?c5\\bdp5y·HyDp w^{_zDk/{_c5vSi;A<sl\np\nj~y$vSiGko{[iPc5·b~p7Hy${|t{|{ Ahpui\\jdEcDy$m>_ki$i\\jdt\\{Nc5vuiGk vdwuy p5t{[ip'i;A\\\n_1⁄4 A\nuo{\nHyDc AH{_wHp w±uþ{iAkyDpw'{_zDk Ppm<c(r)¥2pk Ho{_p w:Pcm\\bdpGi\\jdhc5y$nv2oKWb~c'ipp5o_p5tup5v2iAcD\nb~p(r)y${tA{\\{ AhpFi\\j~HEc5y$Yeb,{Nz bRik \\{iP|G\\bdp·HyDp w'{Nz5k Ppmk yDpzDc5oo_p z$Pp wE\n2E» H«;=\nsPd|h||¬ ¡\no\nyDp w^{_zDk \\{_c5v\nc ¥3lpz !\\bdk !{[i(r){vub~p&wHk Pk5¥2kip'\nE\nj1iP¥2p\n\\bdpmk'z$[jCk oowHk Pk5¥2kipc$¥+lp z$usk vdwFv~c5£kFzDc5 Wc5A{\nøP_1⁄4 A\n1⁄2\n\nø<_1⁄4| A\n{[iuv~cD(r)i\\j~Ho|{Np w&\\bdpAEk ojSpGwpD\\k5jdo|Pc\nLcIKp\neb2{_z$b\ntup k vSib~k 7k oo\\bdp\nyA{|t{|\\{Ahpi\\j~HEc5y$\niPb~c jdo_w\n¥2pyz5c5oN\noNp z <p w\nk v~w°y p5[jdy$v~p wEV\\bdp5y$e{[ip^u\nø<_1⁄4| A\niPbdc j~oNw\n¥2p\nk\n_j~vdz$\\{_c5vucDAc5v~pk y$}jdt!pDv,A\\bdk/AyDp5[jdy$vSivdc5v~\nLcIKp\nc5vu\\bdp\ni\\jdhc5y$Ec$jeok v2q>|yþc5yRp\nE\nk toNp'uohc jtA{}Eb,Ge¿k v,GPc\noNc c ¶\nk [l\\j1iPC\\b~p\nki$i\\jdt\\{Nc5v\ni\\jdhc5y$\nc5\n,h »«;=\nþd|h||¬ ¡\nbA\n\nbdp5v\\bdp\n,h »«;=\nþd|h||¬ ¡\nk y$}j~tup5v2\n{i£¥2kip wc5v\nk:x\nE\na~uþ\\b2{[i\njdv~z$\\{Nc5v7{[irhki$ip wWkl\\jiP\\{|{_zDk^\n\\{Nc5vRki{|iuk y$}jdt!pDv,\n1⁄2\nrtuk$?p\nE\nk t{|vdp\\b~prl\\jiP\\{|{_zDk \\{_cDv\njiP{|v2}\n%;&)(*-,/.-0B7C68(+Hsk+,54H,5k 68gt%J,n(+HJIhDJIi48.uHJIK&FL\n\nEsE\nk tAHo_p'i\n\n÷syDc^iPEp5yDc'uþzj~y${Nc j1irk5¥2c jdb2{[irwk5jd}Eb,PpDyv\ni£yDp5o_k \\{Nc5vSiPb,{e{\\bqsk o|{ ¥±k vuut{|}Eb2wHc\n\nBasic Joshua Dictionary\nApril 2003\n\\O N eßDU N n ^U U O U'n I`HU U O U'O&a a\n\\GRPODODa#DU'OY# O ceDI'OHUU^n N OIHU a\nJ5IHUa^O a&aMw'x<y5Ø IO&N O IHU aV5IHUzx^IU N{x'Ic|Jw\n\\ON e nDU'Oa O# O NO nHU O UEU c O a'U I#O c eDI'O'UU'n N O IHU a\n\\NO IHU$a\\O Ne nDU'O aO# O N OnHU ODUhU c O aHU$I# Oc eDI'OHUU'n N O IHU a\n×_U'I n# O c eDI^OHUU'nHU$O^O5O NZHU5O\n1⁄2\nAb~p(r)e¿k/v2Pp wFPcFip p}l\\j1iPY\\bdpki$i\\jdtAH\\{_cDvuiYj~vdwp5y$o\n{|v2}&{ub~p(r)e¿c j~oNwGwc\n\n\\O N eßDU N n ^U U O U'n I`HU U O U'O&a a\n\\GRPODODa#DU'OY# O ceDI'OHUU^n N OIHU a\nJ5IHUa^O a&aMw'x<y5Ø IO&N O IHU aV5IHUzx^IU N{x'Ic|Jw\n\\ON e nDU'Oa O# O NO nHU O UEU c O a'U I#O c eDI'O'UU'n N O IHU a\n\\NO IHU$a\\O Ne nDU'O aO# O N OnHU ODUhU c O aHU$I# Oc eDI'OHUU'n N O IHU a\n\\GR<O5ODa#DU^OT'ON aHU\"^U$c O aHU I\na'O^ODaHU^O5OnDa'O^O5OO n#HU UU U IHU O:a ODa'IHU c\n\\O ]&a ODa'I'U c×[ON N ODaaHU I\n×_U'I n# O c eDI^OHUU'nHU$O^O5O NZHU5O\na2p pμb~p\nip z {_c5v\n\"\nxsb~pCxsyjd\\b\nE\nk {|v2Pp5vdk v~zDpμ÷syDcDPc zDc5o \"\n{v~\n¬ « ~§E\n\nø\\$¡,\nFH¡~§EE1⁄4\n\n%'&)(+*-,/.10Hs6pip\n§E¡2$||¬¡\nþ~|E||¬¡\n:\n¶2pQ\n\n§±«A|KøP|h||¬ ¡\n÷1jdirkyDp w^{_zDk \\{_c5v?{v,<c·\\bdp!A{y$[jCk/o¿wHk/<k¥±kip'\n\n&FHJ6F0c%'&)(+*-,n.-0HJ6pKp\n{[irktuk'z$yDc'uþk/vdwGki!i\\jSz$b?{|£z5k v2v~c5A¥2p!j1ipwkik vk y$}j~tup5v2\n<c·\\bdp(r)\njdv~z$\\{Nc5v\nD,5Lc4<.FpKp\n\nþ~|E||¬¡\niPbdc jdo_w\n¥±p?\\bdc jd}Eb,cDmki:kEk \\<p5y$vk y$}jdtup5v,u¿v~cDki\\bdpk^z [jCk o\nwHk Pk?{|v\nb~p¤wk Pk5¥2kip'\n1⁄2\nmic5tup5\\b2{|v2}\nk oyDp k^w5up\nE\n{[iPi·{|v\n\\bdp?wHk Pk5¥2kip&b~k {[ik\n%;&)(+*1,/.-0.Fk\"I.uLcH\nc5\nþ~|E||¬¡\nun\\bdpFyDp5j~y$vdp w>_zDk v~cDv,{Nz5k oAAAhk o jCpFe{o|oLv~cD¥±p\n68E\n<c\ns~|E|¬ ¡\noxnbEj1i\n%;&)(+*1,/.-0HJ6pKp\nipDyAEp^iGki:k v\n{|v2Pp5y$vdp5yW\\cDy\nþ~|E||¬¡\nu¿b~k\n{i$u1{}E{Ahp'iAEc$j\\b~pmzDk/vdc5v2{_zDk oozDc5{v?\\b~pmwk Pk5¥±khip^usz$yDp k \\{|v2}&{{Av~pz5p'i$ik yP,\n1⁄2\n\nsPd|h||¬ ¡\n{[i!v~cD!k/oyDp k^w57{vu\\bdpwk Pk5¥±khip^u3\\b~p:yDpD[j~y$vdp wWAhk ojSp'i(r)k yDp\nsPdK=\nE|¬ ¡\nk v~wF\\bdp:iHtr¥±c5o\nH\n\n1⁄2\nuic5tup5\\b2{|v2}3⁄4k o|yDp k^w5Up\nE\n{iPiR{|v\nb~pgwHk/<k¥±kipA\\b~k\n{iuk\n%;&)(*-,/.10b.uk I.FLcH\ncD\nþ~|E||¬¡\nu\nþ~|E|¬ ¡\n{[i?vdc5W'jd&{|v2Pca\\b~p\nwk Pk5¥2kip'uuiP{|vdz5pa\\bdk &e¿c jdo_wy¥2p\nw j~Ho|{Nz5k \\{Nc5vu\n1⁄2\nvSiPPp k^w±u\\bdpμz5k vdc5v,{Nz5k o?Ahp5y iP{_cDv\n\\c$j~vdw3⁄4{|v\n\\bdpμwk Pk5¥2kip{[i\nyDp\nj~y$vdp w±uþk o_c5v2}&e{\\b?\\bdp:it¥±c5o\nLcIip\n\n~\n§E«$|KøP|E|¬ ¡\nz5k v&¥±pc5vdpmc5A\\bdp·c5o|oNc5e{|v2}\n\n-\nLIip\nuþ{veb,{Nz b\nz5kipk:wp5k5j~ol\\jiP\\{[{Nz5k \\{Nc5v{ijip wE\n1⁄2\nY\\bdp\n%'&)(+*-,/.10Hs6pip\nc zDzAjdy i\nc j~iP{_wp?k?yjdo_p^u\\bdp?wpD\\k5jdo|}l\\jiP\\{|{_zDk \\{_c5v\n{[i\n0bjck 6I(+6\n\n1⁄2\n!b~p\n%;&)(+*-,n.-0HJ6pKp\n{[i\n{|vSiP{_wp\nk\nyj~oNp'ur\\bdp\nwp5k5j~ol<jiP\\{[{Nz5k \\{Nc5vμ{|vdz$o jCwp'i7\\bdp\nyj~oNpyvdk tup\nk/vdw\\bdp\nzAjdy$yDp5v2Ai\\jdhc5y$AipD\n-\n\n('d-1&Fp\no\nl\\j1iP{|{_zDk/{_c5v\neb2{_z$by{ikuiHtr¥±c5otup k vSib~k (r)\\bdp&\\yjd\\bd\nAhk o jCp\nc5\nþ~|E|¬ ¡\nwc p'iv~c5wp5hp5vdwucDvAb~k FcDk vHyc5b~p5yWyDp w^{_zDk \\{_c5v5oe¿puik$\n\\b~k\nþd|h||¬ ¡\nb~ki:k\ns|o!_5\n\n§E«$KøP|h||¬ ¡\nu¿{|vEi\\jSz$bkzDkhip^vdp?y${tA{N\n\\{ Ahpzl\\j1iP{|{_zDk/{_c5vg{i?iPEp z${_k ooKy\\yDp k Ppwu¥^y\\bdpasx\nE\naAyDc$A{Nwp\ne{|bAfhc'iPbEjSku\n\nApril 2003\nBasic Joshua Dictionary\nv~k tup5oK\n0j1k\"6I(+6\n\n0bjck 6I(6\nl\\jiP\\{|{_zDk \\{_cDvui7e{o|ovdp Ahp5yR¥±pyyDp5tuc Ahp w¥/¢\\bdp\nsx\nE\na?e{|\\bdc jdqN/jCp5yP{v,}?\\bdp·jip5y \\bdp5y(r)y${tA{\\{ Ahprl\\jiP\\{[{Nz5k \\{Nc5vuiuk yDpyDp k P\np wkimki$i\\jdtAH\\{_cDvui\\bdk/zDk vR¥2pGyDp5tuc Ahp w&¥/\nb~psx\nE\naR{|vdp zDp'i$ik yPPcGyDp\nic5o AhpmkFz5cDv,\\yDk^w^{_z$\\{_c5vS\n-\n\nI(+H&<DU&<,GkDIK6p7(\"\nxnbdp'ip¢k yDpg{_wpDv,\\{Nz5k o&Pcgb~p¢k y$}j~tup5v2iaPcg\\bdp\nfEc^iPb±jCkyDc5Pcz5c5o_j~vdz {_c5v\n%'&)(+*-,/.10\n%s,/(+HsIBDd\nuþvdk/tup5o\n¤k\no¡,o¬ ¡~|\nu\n|§±;=|«A§ H 1¬^\nu\nø\\E1⁄4 «'=«$§$ 1¬/\nk v~w\n§E¡, H¡,¬\n¡)=|«A§ H 1¬^\nrxsb~p'ipa{_p5oNw±i7k yDpujip w>Nc5yaw^{[izDk yDwp w8A\n¥^Gebdk Pp Ahp5yx\nE\na&{[i£yDp'ip5v2\nxsbdpwk Pk5¥2kipm{v,Pc·eb2{_z$b\nþ~|E|¬ ¡\n{ir'jdrwp5hp5vdw±iAc5v7\\bdpwk Pktuc wp5ooc5Z{|i\nHyDp w'{Nz5k Pp^sxsb~pmwpD\\k5jdo|Y{[ib~pmw'{iz y${tA{v~k \\{Nc5v?vdp5\nEsE\nk tAHo_p'i\n\n\\a O^OO\nßDU NnDa'O UHU$cHU OWæHU I NOHU I a\n\\a O^OO\nß' IaRßDU NnDa'O UHU$cHU OZ_ O^O^U#O a\n\\a O^OO\nßDU NnDU'O O UI a OHU nIm`HUU ODU'OWæHU I N OHU I a\n\\a O^OO\nßDU Nn N OHUa^O a n I m_ O^O/U# OWæHU I NOHU I a\n×'O N a'U\"^U c OaHU I×HU ODahU N O\n\\a O^OO\nßDU Nn^U U ODU'n I`HU U ODU'O_O^O^U# O a×^O N aHU\"/U c O aHU$I×[ON N ODaaHU I\n\nODO a OHUWU O aHU Oc a ODUG\n\\a O^OO$ßDU$N n O EUDO5ODU'n/U IDa7æ'U I N O'U IU^UDU'nO EU5O5On c I OaHUÞRæHU I NOHU I5a\n£c5Pp\n\nq1bdk v~zDp'ik yDp\\bdk/ZEc j\nip5oNwc5t\ne¿k v,rPcGwHp5{|vdpGkGtup5\\bdc wW\\bdk/rPk5¶2p'i!c Ahp5ym\\bdp\npDv,\\{yDp_j~vdz {_c5vdk o|{|N7c5\n%'&)(+*-,n.-0HJ6pKp\n1⁄2\n+vKiAtuc5yDpo|{¶2p5o\n¤\\bdk ZEc jRe¿c j~oNwWe¿k v,Pc\nwHp5{|vdp\nk\ntup5\\bdc w\nc5y°c5vdp\nc5¢\\bdp\"}2p5vdp5y${Nz\n_jdv~z$\\{_cDvuiU{Uz5k oo[i$uui\\jCz$b\nki\n%;&)(+*1,/.-0IiLG(+6k\"H\nu\n%'&)(+*-,/.10\n%s,/(+HsIBDd1\nc5y\n%;&)(+*1,/.-0O.<j5gh&<)6kg2DJ&Fk+e.Fk7-gBk,5pi6<gBHJk\"Ii¡C¡)6k(\n\nl\np5oNk/<p wFyujdv~z$\\{_cDvui\n\n%'&)(+*-,/.10b,GLcHJ6pKp\n%'&)(+*-,/.104pi68.uk\n%'&)(+*-,/.102.C('¢\n%'&)(+*-,/.10\n%s,/(+HsIBDd\na2p p\\bdpip z$\\{_c5v\n\"\nE\nv,PpDy${|v2}\nk vdw\n\n{[iPHo_k${|v2}C÷syDp w'{Nz5k \\{Nc5vSia{v\n\\bdp\n\nk/<k¥±kip \"\nu\nhk }2p\nE\nv,<p5y${|v2}2|k vdw\n\n{iPo_k${v,}2÷syDp w'{Nz5k \\{Nc5vSi {|vd b~p\n\nk/<k¥±kip |a\nE\nqsx\n1⁄2\n£A\na2p p\nb~pJip z {_c5v\n\"\nxsb~p\nfhc'iPb±jCk\n\nk Pk5¥2kip\n÷syDc5<c z5cDo \"\n{v\n~\n¬ « ~§E\n\nø\\$¡,\nFH¡~§EE1⁄4\n\na2p p(r)\\bdp:ip z$\\{Nc5v\n\"\nquj1iP<c5t{¤${|v2}&\\bdp\n\nk Pk\n1⁄2\nv~wHp\nE \"\n{v~\n¬ « ~§E\n\n\\ø\\$P¡2YF¡d§EE1⁄4\n\na2p p(r)\\bdp:ip z$\\{Nc5v\n\"\nxnyjd\\b\nE\nk {|v2Pp5vdk/vdzDp·yþk'z${|o{|\\{Np'i \"\n{|v~\n¬ « d§±\n\n\\ø\\A¡,FH¡~§EE1⁄4\n\n%'&)(+*-,/.102¥HJk+,G68¥\n¦\nE|»^1⁄4\no\nvdk tup w7zDc5vuiP<k/v2rj1ipw&¥/¤fhc'iPb±jCkW<cWwHp5vdc5PpkW\\yjd\\bAhk o jCpc5r\\yjCp'Gac jyzDk v\nzDc5tEk yDp(r)\\yjd\\b&Ahk/ojSp^ijiP{|v2}\n68ECp\n\nl\np5oNk/<p wGx3c5H{_z i\n\nBasic Joshua Dictionary\nApril 2003\n§' )(c)+a-«/¬12(r)3 ;¬F°(c)+±8(r)\n§' )(c)+a-«/¬12(r)3«52-352 < f25(r)\n§' )(c)+a-«/¬12(r)μ F2c¶J·¬) C1Kμ¶J F·+oc(r)\n§' )(c)+a-«/¬1¶s·+«5¶JaG»1⁄4¬u°B«5±\n§' )(c)+a-«/¬1b1⁄2c·\"±8 C1iμ8¬u¶J1K F25»B¶s·+«5¶JaG»1⁄4¬u°B«5±\n3⁄4)¿¿AA¿{A;¿A+AAA\"Æ\n\"\nCEE'E\nAAE}II\nE\n¿A \"\nIGI\nI Ð)¿\nCnE'E\nAANEI I\nE\n¿A;NK3⁄4FOO\nCOO×OqØ\n§' )(c)+a-«/¬1b«G25 C± J1i2c±<»1⁄2c· ±< )1Kμ8¬u¶J±\nUQU<U3UsY\nÞ\nU<ßqa\n\"\na\nÆa<A¿A \"\nI\nI<E\n¿aAA IAJ¿a8¿\"aTAKÆ)AKAAA\"Æ\nØranE\n¿aAA I AaAA\"ÆcAmæ\nE\nAiIKAmc£AiAAAA)AAa8¿\"aTAKÆ)AKAAA\"Æ\nE\n¿N\ne\nIAKÆAKÆAA¿zceA\nE\nIa\nI\næ\nE\nAqIÆeIAAJ¿\ne\nI\nAeAAQa<AiI I\ne\nAAJAqIÆ<i8AACAiÆCÐAAzAA¿\ne\nE\n¿A\nE\nIKA'AqAiÆ\nIÆ¿\nE+E\nA\nEØ\nOniiI\ne\nI\nI¿<ð\nnTooo ooo÷øuo oFouuuoo uy8ouYnu÷ou+y8ouþþ\nnyo oooooo÷ø8uo oiouuuoYyJouyouþ\nA\nE\nA\"IÆ\nI\n¿\nE\naA\nE\ne\nAA¿A;I\ne\n¿iA\nI\n¿\nE\nIAAA Æa\nE\nA\ne\nAA¿\ne\nIA A\n¿aAKAJA\nEØ/a\nIIA\"¿\niFA\nEE\nA\nEE\nN\nA;A\nE\nA Æ\nAA¿\nI<E\n¿aAA IAJ¿Ya<¿\"aTAKÆ)AKAaAA\"Æ\nAJAæ)¿\nE\n¿\ne\nAF¿a\nIÆ-a\nE\nA;¿UAA¿YA A\neqe\nIÆa\n\nAiIKIe¿\"aTAKÆ)AKAAA\"Æ\nØC\nA¿VATiCAJAJ¿\ne\nI<A-AaA\nE\nA A\"Æ)aA\nE\ne\nI AaAA\"Æ\nAiÆ\nAA¿\ne\nAKÆ)Ahæ\nE\naTa¿\nE\nAA¿\"ÆAKA\nA aaa¿\nE\nA\niFA\nE\nAA-¿VA\nI\nAAA\"ÆAzA\"a\nE\n¿\ne\nA8AKÆ)Ð\nAA¿Va<¿\"aTAKÆ)AKAAA\"ÆYa\nE\nA\ne\nAA¿V¿aAiAJA\nE\næ\nE\naTa¿\nE\nAiAJN\nA;¿ IKa\nI\nI ÆaA aeAKÆcA;¿\nE\nAAiÆCÐAaA-¿\n§; )(c)+a1«/¬-«525 C± J1K2c±8»21⁄21·\"±8 C1iμ<¬F¶J±\nA A\neqe\nIÆ-aZAKÆ)AJAQAA¿¿aAN\nAA\nE\næ\nE\naTa¿\nEØ\nOniiI\ne\nI\nI¿<ð\n1. Interaction During m-X Kill Definition\n2. Zmacs Buffer After Completion of m-X Kill Definition\n\nApril 2003\nBasic Joshua Dictionary\n\n¿\"II A¿a\nE\nÆ-A+AAA ÆA ð\n§' )(c)+a-«/¬12 C± J1K2c±8»21⁄2c· ±8 C1Kμ8¬F¶J±\n\"\n\ne\nIAAqOnA\neqe\nIÆ-a)ðAKIiIe¿\"aTAKÆ)AKAaAA\"Æ \"\n§' )(c)+a-«/¬1b«G25 C± F«G±8(c)+¶J1K F2\n\nÞ\nUKY\nÞ\nÞ\nU<ßqa\n\n¿\ne\nAi¿A\nI\nE\n¿AJAAA\"Æa<¿\"aTAKÆ)AKAaAA\"Æa\nE\nA\ne\nAA¿QATiCAJAJ¿\ne\nØ\nÞ\nU<ßqa\nC\nA-¿Æ-I\ne\n¿OA\"a}AA¿!\nE\n¿AJAaAA\"Æ\nnTooo ooo÷øuo oFouuuoo#\"$\"n%&\"#'ou$(oo$)*%&\"#'ou$(oo$)÷o,+-%oþþ\nnTooo/.yo$%uo\"o0.yo$%u8o\"o1n,243uu$56u8u'o<þ87+o-\"$\"91;:#<=þ\nnu&%$5>7+o#\"$\"?10@$=AGyaø8uoou÷#.yo8uBC2oD\"÷#.yo$%u8o\"o$%Zuþ\nE\n%o+uu8uyou$(uu8FD7HG&I$I?10@$=\nF:\n7Jooo uy+\"uKJ$\"$=L2NMo$%\n7HG$I$I91;@$=\nnyo ooo.yo$%u8o\"oyO.yo$%u8o\"o1þ\nP$Q$R$S&TUE\nI$J1\nnu&%$5>7+o#\"$\"?10@$=AGyaø8uoou÷#.yo8uBC2oD\"÷#.yo$%u8o\"o$%Zuþ\nC\nAVFAiIKIzIW\nE\n¿AJAAA\"Æ\na8¿\"aTAKÆ)AKAAA\"Æ\na\nE\nA\ne\nIX\ne\nIA Amæ\nE\naTa¿\nEI\nE\nA;¿\nAA¿A A\neqe\nIÆaY\n\nAiIKI\n¿ aAiÆCAiAAA\"Æ\nØ\nnA\nE\nIMA;I\ne\nI\nI¿{AKÆ)AJ¿\nE\nIAAaAA\"Æ\nc£AKAaAUAaA-¿mA\"A\ne\ne\nIÆaCð\n3⁄4)¿¿AaA-¿\ne\nIA\nE\nA\n§; )(c)+a1«/¬-«525 C± J1K2c±8»21⁄21·\"±8 C1iμ<¬F¶J±\nI5I\nI Ð)¿[Z;AAJA\nE\nIFð\nE\nÆa<¿ aAiÆ-¿N\nI<E\n¿aAA IAJ¿N\\\narO\nO\nCOO×OqØ\n\n¿\"II A¿a\nE\nÆ-A+AAA ÆA ð\n§' )(c)+a-«/¬12 C± u«5±8(c)¶J1K F2\n\"\n\ne\nIAAqOnA\neqe\nIÆ-a)ðAKIiIe¿\"aTAKÆ)AKAaAA\"Æ \"\n3⁄4)¿¿\nAaA-¿\nA;¿AAaAA\"Æ\n\"\n]\nAFAiÆCÐ\nAaA-¿\na\nA;¿\nE\n^E\n¿AJAAA ÆA \"\nI\nI\nIÐ)¿\n]\nAFAiÆCÐ)NBAA-¿N\na\nA;¿\nE\nN\n^E\n¿AJAAA\"ÆcA;NK3⁄4FO\nO\nC\nOO£O\nØ\n§' )(c)+a-«/¬1b«G25 C± J·+«5°K±\n\nÞ\nUKY\nÞ\nU`_BaHa\nÞ\nU8ß\na\n\n¿\ne\nAi¿A\nI\nE'E\nI¿za8¿\"aTAKÆ)AKAAA\"ÆA;A\nAaA-IAfAA-¿\nE'E\nI¿OA\"IÆ)Æ-A\"A¿ii¿A\nE\nA¿\nØ\nA\nE\nA I Æ[IIA;A\nE\n¿\ne\nAi¿MI\nE'E\nI¿Va\nE\nA\ne\nIb\ne\nIAA\næ\nE\naaa¿\nE\nc£AKAaAY\ncAiIKId\n¿ aAiÆCAiAAA\"Æ\nØ\n/A\nE\nI\nA;I\ne\nI\nI¿\nAKÆ)AJ¿\nE\nIA+AAA Æ\nc£AiAA\nAA¿\nA A\neqe\nIÆaCð\n3⁄4)¿¿\nAaA-¿\ne\nIA\nE\nA\n§; )(c)+a1«/¬-«525 C± J1K2c±8»21⁄21·\"±8 C1iμ<¬F¶J±\nI5I\nI Ð)¿[Z;AAJA\nE\nIFð\nE\nÆa<¿ aAiÆ-¿N\nI<E\n¿aAA IAJ¿N\\\narO\nO\nCOO×OqØ\nU`_BaHa\nÞ\nU8ß\na\nC\nA¿\nÆI\ne\n¿OA\"a}AA¿\nE'E\nI¿\nAJAæ)¿\nE\n¿\ne\nAi¿a\nØ\nOniiI\ne\nI\nI¿A ð\nnTooo uy+\"oZøu8uu$(o on2ao-\"8uH6uu'o<þ\no\"o87'u$\"ooFou8o\"o÷$\"oø+\"uou÷$%$\"8o-+ioFuHBD=\nu$(oo>7'ooo oD%Zø+\"uou÷$%$\"8o-+e6uuou=þ\nnyo ooouy+ oyøuuu$(o o8þ\n\nBasic Joshua Dictionary\nApril 2003\nf\n) C±°i1K2Lg*hf F¶J±u\n§; )(c)+a1«/¬-«525 C± J·+«G°i±\nA\"IIKITA\nA\"Æ¿\nA\"a\nAaA-¿\nÐ)¿ Æ-¿\nE\nAA\na\nE\nÆ-A+AAA ÆA\n§; )(c)a-«/¬12 C±°K±¶J±8»\nF· ¬F· »h·+«G°i±8»h¶J·\"1ig`g)±·\nA\nE\n§' )(c)+a-«/¬12 C±°K±¶J±<»kj5¬Fμ 3c ¬F· »h·+«G°i±8»h¶J·\"1ig`g)±·\nc£A)AA+A\nE\n¿N\ne\nAi¿AAA¿\nE'E\nI¿lAVA\nE\nAiÐFÐ)¿\nE\na\nE\nA\ne\nAKA'AaAJAJA\nE\nIÐ)¿\nI\nIIA ¿\nI\nA;A\nAAI AmAiAZATAVÆA\nIA\"Æ)Ð)¿\nE\naaA\nE\nÆ-azæ imAA¿A\nE\nAKÐFÐ)¿\nE\nIAA IAAKÆ)ÐIÆaQA\nE\nAKÐFÐ)¿\nE\ne\nI\nI8I\nAiÆCÐZa\nE\nÆ-A+AAA\"ÆA\nØ\n3⁄4)¿¿\nAA-¿\nA;¿AAaAA\"Æ\n\"\nC\nA-¿\nO/A\"ÆCA\nE\nIA+A\nA\"aYAA¿\nCnE\nAKÐFÐ)¿\nE\ne¿\"I¿\"AAiÆCÐm\nE\nÆAAaAA\"ÆcA \"\nAKÆ\nn\nY$opqFUeratsa+UJa\nÞ\nU'afUQU\nÞ\nuUu_\nØ\n\n¿\"II A¿a\nE\nÆ-A+AAA ÆA ð\n§' )(c)+a-«/¬12 C± J·«5°i±\n§' )(c)+a-«/¬1μ°i±8¬u·\n\"\nOGI¿I\nEwv\nAAJA\nE\nI!eIAJI\"æ)I<A;¿OOnA\neqe\nIÆa \"\n\"\n\ne\nIAAqOnA\neqe\nIÆ-a)ðAKIiIe¿\"aTAKÆ)AKAaAA\"Æ \"\n3⁄4)¿¿AA¿{A;¿A+AAA\"Æ\n\"\n\nE\nI¿AqIÆ-a\nO\nÆ)aa¿\nE\n¿\"ÆA\"¿ \"\nIGI\nI Ð)¿x\nE\nI¿A;NKIÆa<N\nO\nÆCaa¿\nE\n¿\"ÆA\"¿NK3⁄4FOO\nCOO×OqØ\n§' )(c)+a-«/¬1b«G2c1B o\n\nÞ\nUKY\nÞ\nY$yiza;U\\{\nY$yiza;U}|\nO\na\nY$y\\za'U~{\nIÆ-a\nY$yiza'U/}|\nE\nÆCAiaKi\nI\na<A¿AQA;A\nI\nc£ACAiI¿MAJAa<¿Ni¿\"aTa¿A+AAiÆCÐUIÆ8iaIA\"ÐFAAeiI\nE\nAI\"æiI¿A\naaA\nE\nAA-¿Oa\nEE\nIAAA ÆA\"a}AA¿\nE\nÆCAiaAA\"IAAA\"Æ\nØ\nY&yiza'U/\\{\n]\nI\nIAAJ¿\nE\nÆ\nAiÆ\nv\nAAJA\nE\nI\nI\nAAI AVAA\nI\nI\nI8E\n¿aAA\"IAAA\"Æ\nA\"A ÆCAJIAiÆCAiÆCÐ\nA\"AA¿\nE\nI8E\n¿aAA\"IAAA\"ÆcA\nI\nIKATAJA'A\nI\nATi\ne\næ)A\"ITA\nI\nÆ\nE\ne\næ)¿\nE\nA\nI\nA\nE\nIA\"ÐFAA\niI\nE\nAI\"æFI¿A\nØ\nY&yiza'U/}|\n]\nÆ-A\"AaA-¿\nE\nI\nIAAJ¿\nE\nÆ\nØ\na\nIAA¿\nE\nÆ\ne\nI AAA)AKÆ)Ð\nE\nÆa<¿\nE\nIiA¿AAA¿?AiÆCaa¿\nE\n¿\"ÆA+AKÆ)Ð\nI<E\nAA\"¿A+A\nØO\nÆ\naA\nE\nceI\nE\naA+A-IAKÆ)AKÆ)Ð\nI\nv\nAAJA\nE\nI\ne\nIAJA+A-¿A\nE;E\nI¿eA\nE\nAKÐFÐ)¿\nEMI\nIAAJ¿\nE\nÆcAmc£AKAAa<IAJI\"æ)I<A;¿\nI8E\n¿aAA\"IAAA\"ÆcA\nØrO\nÆæ)IA/uN\nceI\nE\na?AAIAKÆ)AKÆ)Ð\nI\nAiA\ne\nIAJA+A-¿AmÐ)AIIAmc×AiAA\na<IAJI\"æuIiA;¿\nI<E\n¿aAA IAAA ÆAVIÆaYc×AiAA\nE'E\nI¿\nIÆa0\nE\n¿AJAAA ÆA\nE\nAKÐFÐ)¿\nE\nI\nIAAJ¿\nE\nÆA\nØ\nC\nceA\nI\nIAAJ¿\nE\nÆcAMA A\"Æ)AJIAKÆ)AKÆ)Ð\nÆAUIA\"ÐFAA8iI\nE\nAI\"æiI¿A\nß\nUuhUp\nAKa{AA¿'i\nI\nE\n¿[AJA\nE'E\nA+A\nE-E\nIIiIi\n¿&\nE\nA\\iII¿\"Æ)AiAKa}AaA-¿'i\n\"\nIAAZAA-¿QA;I\ne\n¿ \"\nØ\nC\nceA\nI\nI AaAJ¿\nE\nÆcAiA A\"ÆCAI AiÆCAiÆCÐ\nIA\"ÐFAAFI\nE\nAIæiI¿A\n\nÞ\nksi\nc£A¿\"Æ?A\"Æ¿A IÆ\nA\nE\næAJAAKA\nE\nAJ¿0iI IN\nE\n¿AzaA\nE\nAA¿KiI\nE\nAI\"æFI¿AZA;AVAAIAæ)A\"AA\nI\nIAAJ¿\nE\nÆcA\næ)¿A A\ne\n¿eAJA\nE'E\nAA\nEE\nIIKIiY¿&\nE\nA\\iII¿\"Æ)A\nØ\nC\nA¿\nI8E\nAA\"¿A+AqA\"afa8A\"AKÆ)ÐaA;AAA\nA\"IIKI¿a\n\nÞ\nksKU'UuKY\nÞ\nØ\n§; )(c)+a1«/¬-«52c1h o\nATA\nE\nA;¿\"a\nE\nIaaA\nE\nI<A+AJAKÐFÆ)AKÆ)ÐiII\nE\n¿AAA\nIA\"ÐFAAbiI\nE\nAI\"æiI¿AZc×AiAA)AKÆGATA\nI\nA Aa8¿AiÆ\nE'E\nI¿iæuAaA¿A\nØO\na\nAaA-¿m¿i\nI8E\n¿A+AJAA\"ÆcAI\nE\n¿\nE\nÆ)AKaTAI\"æFI¿\nI\nAA¿mI\nI8I<E\nA\nI8E\nAIAJ¿VA\nE\næ-AJAAN\nA\nE\nAAA\"ÆcAqI\nE\n¿\ne\nIa<¿OIÆ-a\nE'E\nI¿O¿ii¿A\nE\nAAA\"ÆA A\"ÆCAaAKÆ\nE\n¿A\nØ\nO\naeAA¿¿i\nI<E\n¿A+AJAA\"ÆcAI\nE\n¿QÆA\"A\nE\nÆCAiaAIæiI¿\nIE'E\nI¿¿+iF¿A\nE\nAAA ÆaaI AiIA\nØ \"\n/I AiIA \"\ne\n¿IÆcAAaA-IA\nAiAVAA\nE\nA\"c}AMAJAAA¿YÆ¿I\nE\n¿AJAVa\"i8Æ-I\ne\nAA IIKIi\n\nA A\"Æ)AJIAKÆ)AKÆ)Ð\n§; )(c)a-«/¬1b f1K¶Ja5»2«52c1h J1iμ8¬u¶J1K F2\nA+II\nE\nA;¿\nØ\n]\nIKceI+iCAac\nE\nI\nI\nAA¿\ne\nIA\nE\nA\n§' )(c)+a-«n¬- f1i¶JaG»«521B J1Kμ8¬F¶J1K F2\nI\nE\nA\nE\nÆ-a\n§; )(c)+a1«/¬-«52c1h o\nA\nE\nA IIKITA[AJA\na\nE\nÆ-A+AAA ÆA[AaA-IA?A\"IIKI\n§; )(c)a-«/¬1b«521B o\n\nAA\n¿AJAJI\"æiIKAAJA\nAaA-¿@AsA\"A\nI\n¿\nc£AKAaACAiÆ\nc£A)AA+AAA¿{A\nE\næ-AJAAiA\nE\nAAA\"ÆcA\nE\n¿\ne\nIAiÆAKÆ¿\"aTa¿AA\nØ\n\nApril 2003\nBasic Joshua Dictionary\nC\nA¿\nv\nAAJA\nE\nI\nE\nÆCAiaA¿\nE\na<A¿A\nc£AIAqATAA IIKI¿aVIÆ\nYU;U)U\nUHp)a'U\nI\nAAIA\nAA\nIEI<E\n¿F¿ ÆCA'A\nAA¿\naaA\nE\ne\nIAAA ÆeA\"aA ¿\nE\nAJIAiÆeAA\nE\nA\nE\nII\nE\nAJA\nE'E\nAA\nE-E\n¿Aæi\nE\n¿ a\nE\nAJAKÆ)ÐAA\nE\nÆ)AKaiiVIQIA\"ÐFAAiI\nE\nAI\"æiI¿\nc£AiAA\nIAJA\nE'E\nAA\nE-E\n¿AKÆ[c£A)AA+A[AKAiAA A\nEE\nA\nØ\n/A\nE\n¿+iFI\ne\nI\nI¿\nI\nAKaqiFA\nE\nA\nE\nA¿aAJA\nE\nÆCAiaKi\n:#<\nc£AiAA\noc:#<D=\nI\niiA\nE\nceA\nE\nIaÐ)¿ AVAsA\ne\n¿\"AA)AKÆ)Ðc£AAA;¿\nI<E\nAiÆCA¿a\nE\n¿\nI8E\n¿A;¿\"Æ)AJIAAA\"Æ\nceA\nE\nIa\nIAA8\nI\nI\nE\nAAIIiIi\n\nIiA\\)¿AA)AA ð\n7+oc73oc7+o87+oc7+o87+oW&$\nC\nA)AAAA¿+iFIA+AIiAA-¿A;I\ne\n¿{AaACAiÆCÐaAaA-IA\nAI\nI<I\n¿ ÆAc£A¿\"ÆMiiA\nE\ne\nI-u¿mA\"¿\nE\nAJIAKÆUA\"A\"ÆcA;¿A\nI\nA\"AKÆ)AI AfAA¿\ne\nA;¿\"I\\i¿A\n\niFA\nE\nÐ)¿\"AeA+A\nE\nA\nE\nII\nE\nIiAAJA'A\nØ\nC\nAQA;¿¿\nAA\"cAaACATA\ne\nAKÐFA)ArAI\nI<I\n¿\"Æ\nI\nA A\"ÆAJAa<¿\nE\n¿iiI\ne\nI\nI¿zæ)¿\"IA\"c\nØ\nOniiI\ne\nI\nI¿A ð\nR\n<u#'ø+\"o?12\nnTooo ooo÷øuo oFouuuo0Bou8u-+B÷$%u+\"uuHBno'ø+-\"#Boo*%u,+\"u8uHB<þþ\nnTooo ooo÷øuo oFouuuo*3u+\"uouo÷ oyoYnøo8u%$\"o*3u+\"uouoþþ\nnTooo ooo÷øuo oFouuuoooo#B÷uuo oFouYnøo8u%$\"oþþ\nnTooo uy+\"oZuo$%u÷,1n2o#\"8uH6u8u;o<þ\no\"o87'uo o7H3u+ uouo÷oyo*:uøø+o+uuouK:$3u+\"uouo$=\n7Bouu-+B÷$%u+\"u8uHB?:uøø,+ouuou*:$%u,+\"u8uHBD=\nnyo8o oBb:uu$%$(÷o&+-\"#6na÷*:$%u,+\"u8uHB?:$3u+\"uouoþþ\nn ≤\n:uu$%$(÷o$+-\"#6?:$3u+ uouoþ#=\nu$(oo*7;uo o7ooo#B÷u8uo oFo+u*:uøø+ouuou$=\nnJo#\"8uH'uuZu8FH&\nS\n\"8uuHBq\nS\nBD\"y8u{uu&%$(÷o$+#\"#6b\"oe\nS\no%oo$%yooouooouLF\n:uøø,+ouuou*:uu&%$(÷o$+#\"#6<þ-=þ\nnTooo youo&%u÷8ouYnJþ\nnu,+\"ou8u\"þ\nnuo+$+c7Bou8u-+/B÷$%u+ u8uHBbGuo ob@&$$$$= þ\nnuo+$+c73u+\"uouo÷ oyo*G8uooc1-$&$$=þ\nnuo+$+c7Bou8u-+/B÷$%u+ u8uHBbo$\"8u)oK@$$$&$$=þ\nnuo+$+c73u+\"uouo÷ oyo*o$\"u)o?1#$$$$= þ\nyToD\"oo÷uo$%uoo$)þ\nT$R$S$T\n÷\nEHT\nnuo$%u÷8ouþ\nS\n\"8uuBqG$\nR$\nB\"y8u{uu$%$(o&+-\"#6b\" o;$$&o%Moo$%yooou8ooouL\n\nI$J\nR\n÷\nT$R$S$TuE\nJ$\n\nBasic Joshua Dictionary\nApril 2003\nS\n(&\"#6*D\"&%$(yu\n\nuuu$3u$%o\nT\nuyoZu$(8oo&)$%\n7HD#DJ$\nR\n÷\n$Q$R\nG$\nR$\n1-$$&$=\n7M\nR\nD$#M÷\nS\nD##MbG$\nR$\n@$&$$$=\n7M\nR\nD$#M÷\nS\nD##Mb\nR\nI$$\nR\n@$$$$&$=\n7HD#DJ$\nR\n÷\n$Q$R\n\nR\nI$&\nR\n1-&$$$=\n&R\nJ#M÷$&\nR$UEHT\nG$\nR$\n=\n\nE\noo o8uoouou ooo oMu$\"{ouuu&3u$%o\nGu+-%ou$(8o+o$)$%\nJ$\"oo\nR\n<u#'ø+\"o*@2\nnO6Fou&(÷yo$3&\"yo o÷,+-\"$)8ou÷# u8uo+u$3+\"o$%YnO<<þ\nn+ ounnaø1¡73o-\"$\"t<D=þ\nnaø$@>7+o#\"$\"?1-= þþ\nnO6Fou&(÷yo8o oouuuo\"o\nnyo8o\"oBø1mø$@ þ\n\nE\noø1muooMø$@{oD\"o-yuZyo8o\"o/Bq\nu$(ooo#<u\n\no<ø8uo$%&%8o\"oMo%o$\"uo#<ouyuo o\nnJo#\"8uH'uuZu8FH\n¢\nT\n(o£ u+\"yoK\"o<eo%0%LF!<8þþþþ\nT\n(o£ u+\"yoK\"o<eo%?1\nJ\nE\n\nOniiI\ne\nI\nI¿bAJA-A\"c}AQIaA IiA;¿Vc£A¿\nE\n¿VAaA-¿MAA\"A\nE-E\nNiAA¿AHaa¿IA\nE-E\n¿\ne\nI-u¿AzAA¿\nE\nÆ)AKaTAA IN\nAaAA\"ÆaaIAKI\nØ\nR\n<u#'ø+\"o*¤2\nnTooo ooo÷øuo oFouuuooUnu8u) þþ\nnTooo ooo÷øuo oFouuuo*)Ynu8u),1mu8u)&@þþ\nnTooo youo&%u÷$\"uuy8u\nnþ\nnO6iou$(÷yo$3$\"yoo÷+-\"$)ou÷# uuou$3+ o$%nO<KB<þ\nnO6Fou$(÷yo8o\"o ouuu8o\"o\nnyoo\"oB¡/7H)<X<D=X¡7H)tB7+oVBD=$=þ\n$io\"oBD\"y*)ouK(o8uo¥\nø8uo+ou0Muo ou+ouy8uo\nnJo-\"uH'uuZu8FH¢/MD\"y*3,+\"o#6o+uL¦Meo%o&\"#6Mu8ouuy+\"uu`2d\nS\nF!B<þ\nn;uouy8uo÷ ou\"#'uo$%u÷&\"uuy8u2+-\"$%o8u\"þþ\n$Qo\"oeBD\"yK)$\"u*(o8uo§u$(oyo8o\"oouuu8o\"oVo\"u8o-+ o o\n24\"uuyu÷u$(ou$5÷o-\"u38o'oD% þþ\nnuo$%u÷$\"uuy8u\"þ\n24I$$\nQ\n÷$$\nR\n$(c)÷$G&I$$\nEH&S\nC\nA)AAza\nE\nÆ-A+AAA\"ÆIAAJ¿\ne\nI\nA'AzAJA\nE\nÆ)AKaii\n)b:<>:<D=\nc£AKAAa\n)b:#B\n\no9:#BD=$=\nØ\nO\naAKA\nE\nÆCAiaA¿A\nI\nAaA-¿ea\nE\nÆAAAA\"Æ\nI8E\nAKÆ)A'AVIÆ\nI\"æ\nE\nAJA\\i¿\ne\n¿A+A;IÐ)¿UIÆa\nE\n¿\"A\nEE\nÆAmAA¿ATi\ne\næuA\"I{ð\n+-\"$%o8u\nØO\na\nAaA-¿\nE\nÆ)AKaTAA IAAA ÆaIAKITA\nI\nAiA\nE\n¿ A\nE-E\nÆcAeAaA-¿QATi\ne\næ)A\"Ifð\n\"uuy8u\nN\nu&(ou$5÷ o-\"8u38o;oD%\nØ\n/¿\"AlAeaaA\"IiIA\"cAaA-¿\nE\nÆ)AKaTAA IAAA ÆI ÆaA;¿¿c×AIArAI\nI<I\n¿\"ÆA ð\n\nApril 2003\nBasic Joshua Dictionary\n-\nC\nA¿\nI8E\n¿aAA\"IAJ¿A\nAiÆMæ)A\"AaA\nI\nIIA ¿A\nI\nE\n¿\n)\nI\nA;AzAA¿\nE\nÆ)AKaTA¿\nE\nÐ)A¿A\nA\"ÆaAJAzAiÆA\nI\n¿AAeAA¿\nI\nE\nÐ\nE\ne\n¿\"Æ)A'A\nØ\n-\nC\nA¿zaTA\nE\nAJAqI\nE\nÐ\nE\ne\n¿\"ÆCA\nA\"ÆAA¿zI¿ aAeATA\n:#<\nI ÆaAA-¿OaA\nE\nAJAqA\"ÆAA¿\nE\nAiÐFACAAA\n:#B\nØC\nA-¿\nE\nÆ)AKaTA¿\nEqE\nÆ)AKaTA¿A\n:#B\nIÆ-a\n:#<\nI\nc£ACAAAce¿OA\"IÆc\nE\nAKA¿zI<AeAaA-¿O¿$\nE\nIAAA Æ\n:<b«:#B\nØ\n-\nC\nA¿QÆ-¿i8A\nI\nE\nÐ\nE\ne\n¿ ÆCA\nA\"ÆeAA¿QI¿\"aTAqAA\n:#<\nIÆ-aZAA-¿QÆ¿i8A\nA\"ÆAaA-¿\nE\nAiÐFACAqATA\no:#BD=\nØ\nC\nA\nE\nAAA¿\nE\nÆCAiaA¿\nE\nIAA¿\ne\nI\nA'AAJAz¿ ÆCaaA\nE\nA ¿\nAA¿O¿$\nE\nIAAA\"Æ\n:<b«\n\nox:#BD=\nØ\n¬V¿AA\nE\nAAI-i¿AA¿AceAZ¿$\nE\nIAAA\"ÆcA\n:#<«K:#B\nIÆa\n:#<«\nBa\n:#B=\nØ\nOnA\ne\næFAiÆCAiÆCÐeAA¿\ne\nI\nce¿{AI&i¿{AA¿VAJAKÆ)ÐFI¿m¿$\nE\nIAAA\"Æ\n:#B«\n\no£:BD=\nI\nc×AAA;¿mA\"Æ)Ii\nA;A I\nE\nAAA\"Æ\nATAAJA\nE\nÆ)AKaii\n:#B\nAAaIAJA\nE'E\nA+A\nEE\n¿aA A\"ÆCAI AiÆCAiÆCÐAiA'A;¿\"Iia\nI\nAaA-IAzAA\nI\nI\nI<E\n¿aAA I AaAA\"Æ[AAI AAJA\nE'E\nA+A\nEE\nIIKIi\nE\n¿N\nA;¿\ne\næiI¿AzIAA\nE\nA\nE\nII\nE\nIiAAJA+ð\no\n\no\n\no(r)73oa$$\nØ×C\nA-¿\nE\nÆCAiaA¿\nE\naaA\nE\næFAauA\nAA)AAOI ÆaMaIAiIA\nØ\n¬ZA¿\"Æ\nAA¿\nE\nÆ)AKaTA¿\nE\naaIAKIA\nI\nAiAMAaA\nE\nA\"c}AAJAAA¿?Æ¿I\nE\n¿AJAA A\"ÆCAI AiÆCAiÆCÐ\n§; )(c)a-«/¬1b f1K¶Ja5»\n«52c1h 1Kμ8¬u¶J1i F2\nØ/C\nA\nE\nAeAA¿a\nE\nÆ-A+AAA\"ÆI\"æ)Ai¿\nE\n¿\"A\nEE\nÆAð\n\"uuy8u\nN\nu$(ou&5÷o-\"8u38o'oD%\nØ\nnuo$%u÷$\"uuy8u\"þm÷ C24\"uuy8u÷u&(ou$5÷ o-\"8u38o;oD%\n¬ZA8i\nAJA-A\nE\nIa\nv\nAAJA\nE\nI\nI AaAJ¿\ne\nI\nA[AA@I-iA\"Aa\nA\nE\n¿IAAKÆ)Ð\nA\nE\nA+A\nA+A\nE\nA\nE\nII\nE\nAJA\nE'E\nA+A\nEE\n¿A\nI\nAaA-A\nE\nÐFA§°>\nC\nA¿UAA¿AH\na<A¿AAI-i¿UIA AAJAAiÆ\nI\n¿\nE\naA\nE\ne\nIÆA\"¿\nI\nc£A)AA+AATAc£A8i\ne\nAAJA\ni¿\nE\nAJAA\"ÆcAMA a\nanE\nA\"IA\"Ð\nceA\"Æ±l\nAa8A\nAKA\nØ2{C\nA-¿IÆcAJce¿\nE\nAAAAIAmAKaQAKAmce¿\nE\n¿\nI\n¿\nE\ne\nAKAAJ¿a\nI\nA ¿\nE\nAJIAiÆUAKÆA\"A\nE+E\n¿AA\nAiÆCaa¿\nE\n¿\"ÆA ¿A\nA\"A\nE\nIaæu¿\ne\nIa8¿\nØ 3\n¿\nE\n¿lAOIÆ¿iiI\ne\nI\nI¿\nØ\n3⁄4\nE-I8I\nAA;¿ce¿\nAI-i¿zI\nI8E\n¿aAA\"IAJ¿\no%\nN\nøu8uoou÷$\"o\nI\nc£A)AA+AAJI-)¿AAceA\nI\n¿A\nI\nI¿zI<A\nI\nE\nÐ\nE\ne\n¿\"Æ)A'A ð\nnTooo ooo÷øuo oFouuuo*(u$%÷øuuoouYn58o'oøu8uoouþþ\nC\nA)AA\ne\n¿IÆcAOAaA-IA\nøu8uoou\nATAiI\nI\nI\nE\n¿\"Æ)AOA a\n58o'o\nØ\n¬V¿VA\"IÆYAA¿\"Æ\ne\nI-)¿ZAA¿c\nE\nÆA\nEE\nN\nI8E\nAAJAiÆCÐ\n\nAJAJIAJ¿\ne\n¿ ÆCAfAAI A¿i¿\nE\ni\nI\n¿\nE\nA;A ÆA-I<AqI\nI\nI\nE\n¿\"Æ)A+ð\n∀\n<\n∃\nBC2w(u$%÷øu8uoounO<qB8þ\nA\nEI\nAiÆ8\nE\nI Æ)AAiaA¿\nE\nNha\nE\n¿¿IIÆCÐ\nE\nIÐ)¿\nI\n7H(u$%÷øu8uoou*:#<[nø*:<<þ-=\nc£A¿\nE\n¿\nø\nAAAA-¿\n3⁄4)A\"I¿\ne\na\nE\nÆ-A+AAA\"Æ@aaA\nE\nAaA-¿\n¿i8AAJA¿\"ÆCAaAII£iI\nE\nAI\"æFI¿\nB\nØ\nμA\nE\nA IÆ\nAaACAiÆ¥VA\"a}AiAeI<AqIOÆ-A\"AI AaAA\"ÆaaA\nE\naTAKÆaAiÆCÐZAA¿\nI\nI\nE\n¿ ÆCAA\"a}AKA;AqI\nE\nÐ\nE\ne\n¿\"Æ)A\nØ¶\nO\nA\"c\nA\nE\niYAJA\nE\nÆCAiaKiYAA¿eI\"æ)Ai¿UAJAJIAJ¿\ne\n¿ ÆCAic£AKAaA·\n(u$%\nN\nøu8uoou>:& V:$ $=\nØ\nO\nÆAA¿eIæuN\nA;¿ Æ-A ¿zA a}AA-¿OAA A\nEE\nA+A¿A/\nI\nce¿Ð)¿\"AfAA-¿O¿$\nE\nIAAA\"ÆA ð\n:$ *«K:#<\nuo o\n:$ *«Ynø*:<<þ\n\nC\nACATAceA\nE\nIaM¿\"Æa\nEI\nc£AiAA\n:<«\n\nø;:#<<þb«\n\nø\n\nø\n\nø\n\nø$$þ\nØ\nO\nA cA\nE\næAJAAKA\nE\nAJ¿{aaA\nE\nAaA-¿OI\nE\nÐ\nE\ne\n¿\"Æ)A'AeAiÆ\nø:$ :$ $=\nE\nAJAiÆCÐZAAAA;¿z¿&\nE\nI AaAA\"ÆcA1\nAJAÐ)¿\"A+ð\n7H(u$%÷øu8uoounøK:#<<þ0:#<D=\nc£A)AA+AATAoZ\nE\nAJAzAA-¿aA\nE\nAKÐFAKÆII\nAJAJIAJ¿\ne\n¿\"Æ)Azc£AKAA[AA¿aI\nE\nÐ\nE\ne\n¿\"Æ)A'A\nE\n¿i¿\nE\nA;¿a\nØ[»\npo*o\n\nÞ\no'Y\nÞ`1⁄4\nØ\nO\nA\nATAÆA\"AZ\nE\nAJAAiaAIæiI¿{AJA{AKÆ)a¿\nE\nAAIA\n(u&%÷øu8u+oou\nAA\nIMATi\neqe\n¿\"A\nE\nAA\nI8E\n¿aAN\nA IAJ¿\nØ\n\nO\nÆa<¿¿a\nI\nAiA\nATAÆ-A A\nI\nAJAKÆA ¿{ÆAmA\"Æ¿{ATAACATAA\"c£Æ\nI\nI\nE\n¿\"Æ)AH1⁄2\neC\nA\nE\nA\nI\nAJAiæu¿VA;A\nE\nÆa\nI\nv\nAAJA\nE\nI\ne\nE\nAJAfaA\nE\næFAaAA A\nE-E\nNiAA¿AH)NhAi\nI\n¿\ne\nIAAA¿A\nØ\n\nBasic Joshua Dictionary\nApril 2003\n\n¿\"II A¿a\nE\nÆ-A+AAA ÆA ð\n§' )(c)+a-«/¬1b f1K¶Ja5»2«52c1h J1iμ<¬F¶J1K F2\n§' )(c)+a-«/¬12(c)3«5μμ±±8\n3⁄4)¿¿AA¿\nA;¿A+AAA Æ\n\"\na\nIAAJ¿\nE\nÆa3⁄4{IAJAA)AKÆ)Ð\nAiÆ\nv\nAAJA\nE\nIFð\na\nÆ)AiaAA\"IAAA\"Æ \"\nIeI\nIÐ)¿\na\nIAAJ¿\nE\nÆN\n3⁄4{IAJA+ACAiÆCÐ)NBAKÆN\nv\nAAJA\nE\nIFðbN\na\nÆCAiaAA\"IAAA\"ÆNK3⁄4FOO\nCOO×OqØ\n§' )(c)+a-«/¬1b«G2F§J«/(c)¶J1h ao\n¿\na\nÞ\na3UHKUN\nÞ\nUKY\nÞ\n1⁄4\nUuhUyUo'aa\nA/Usa\n1⁄4\nKU'UuKY\nÞVA\nA\nI\nAAA\"Æ-II\nzUoksKU;UUiKY\nÞ\n\n¿\ne\nAi¿AOIZ\nE\nAJAAKaTAA IAAA Æa\nE\nA\ne\nI\nI8E\n¿aAA\"IAAA\"ÆUAKÆUAA¿a8I AIæuI<A;¿\nØ\n/A\nE\n¿iiI\ne\nI\nI¿\nI\nAia\niiA\nE\n§' )(c)+a-«/¬1¶s±°i°AA/Usa\n1⁄4\nKU;UUKY\nÞ\nI ÆaAA¿\"Æ[IIAJ¿\nE\nA+A-IÆ)Ð)¿miFA\nE-E\ne\nAiÆ-aUI\"æuA\nE\nAOAKA\nI\niFA\nE\nA IÆ\nE\nA;¿\n§' )(c)+a-«/¬1b«G2F§J«/(c)¶J1h ao\nAJA\nE\n¿\ne\nAi¿\nzUoksKU;UUiKY\nÞ\na\nE\nA\ne\nAA-¿\nI\nAA+AJAhæiI¿mA\nEI<I\nA\nE\nA'A\nØ\nC\nA)AA{a8A¿AiÆA\"AiI\nE\nAJA\ne\nIAAA IIKIi\nE\n¿\ne\nAi¿IIiIA\nEI<I\nA\nE\nAOaaA\nE\n1⁄4\nUuhUyUo'aa\nA/Usa\n1⁄4\nKU'UuKY\nÞ\nI\nI<A\nAaA-¿\nE\n¿\ne\nAKÐFA)A\næu¿zA AA-¿\nE\nZ\nE\nAJAaAKaTAA I AaAA\"ÆcAeaaA\nE\nAiAeI<Aece¿ IKI\nØ\n1⁄4\nUUBUyU\no'aa\nAnUJa\n1⁄4\nKU'UuKY\nÞ\n]\nI<E\n¿aAA I AaAA\"Æ\nAæ/Z'¿AAAaA-IAATAAKÆ\nAA¿[a<IAIæuI<A;¿\nØ\n3⁄4\nE\nAJAZæ)¿\nAA¿zIA+A\nE\nI Iea8I AIæuI<A;¿zAæ/Z;¿AA\nI\nIÆa{ÆA\"AIQA A\nI\niZA\"a}AKA\nØ\nzUoiksKU'UuKY\nÞ\n3⁄4\nI\n¿A+AKaTA¿AOAA¿Z\nE\nAJAaAKaTAA I AaAA\"ÆYAJAmæ)¿\nE\n¿\ne\nAF¿a\nØeO\na\nz¥o/ksKU;UUKY\nÞ\nAA\nÆA\"A\nA\nE-I8I\nIiA¿a\nI\nA\ne\nI\nI¿\ne\n¿ ÆCAJIAAA\"ÆcA\nA a\n§' )(c)+a-«/¬1b«G2F§J«/(c)¶J1h ao\nAJAA\nE\nIa\na<¿ aI\nE\nIKA\nAKA\nAA@AaA-¿AZ\nE\nAJAAKaTAA IAAA Æ\nA\nE-E+E\n¿\"Æ)AIi\næ)¿\"AiÆCÐ\nE\nA;¿aQAJA{A\nEI<I\nA\nE\nA\n1⁄4\nUuhUyUo'aa\nA/Usa\n1⁄4\nKU'UuKY\nÞ\nØ\nO\nÆÐ)¿\"Æ¿\nE\nII\nI\n§; )(c)+a1«/¬-«52F§s«/(c)+¶J1h o\nAA\nE\nA;¿\"a\nE\nIOA ÆCIi[AKa\n1⁄4\nUuhUyUo'aa\nA/Usa\n1⁄4\nKU'UuKY\nÞ\nAAæ\nE\nAiIKA\nA ÆA;A\ne\n¿\ne\nAa8¿\"I£AA-IAqA\nE-I8I\nA\nE\nA;AeAA¿\nC\n3⁄4{3⁄4\nI<E\nA\"AJAA\"A\"I\nØ\nO\nÆ\nAA¿\na8¿\"aaI\nE\nIiAYiÆA\"Æ-N\nC\n3⁄4{3⁄4\nVv\nAAJA\nE\nI\ne\nAa<¿\"I\nI\n§' )(c)+a-«n¬-«52F§J«n(c)+¶J1h o\nZ\nE\nAJA\nA;¿\"A'A[AA¿\nA\nE'E\nAANAiII\nE\n¿zA a}AKA'A\nI\nE\nÐ\nE\ne\n¿\"Æ)ArAA\n§; )(c)a-«/¬-B(r)'«G2-352c < f25(r)\nØ\nOniiI\ne\nI\nI¿A ð\n¬ZA¿\"Æ\nanE\nAA\nI\n¿\nE\nAVAA\nE\n¿A A\"ÆAAiI¿aeAJAA)AA{A A\nE\nÆ)A\nE\ni\ne\n¿\"Æ\nI\nA-¿Vc×AiIKI\nA\"I<AJAOAaA-¿VaA\"IiIA\"c£AiÆCÐ\nA\nI\n¿\"IKIað\nnA'uø÷$\" o8u÷ ouuu$3u&%o÷ø8u+o oFouuu8o\"o$%V7 o%÷o#<Fo-+\"oo÷ou\"'bÆ8u\"&%øo8u\"K:$=A5yyo#Cy&%u8o\"oB8þ\nnA'uø÷$\" o8u÷ ouuu$3u&%o÷ø8u+o oFouuu8o\"o$%V7 o%÷o#<Fo-+\"oo÷ou\"'bE8ou+uo ouK:$=AGyayo#Cy$%u8o\"oB<þ\nnA'uø÷$\" o8u÷ ouuu$3u&%o÷ø8u+o oFouuu8o\"o$%V7 o%÷ ouoooo÷$\"o0E8ouuoou*u,+o3uo&=AGyyo#Cy$%uo\"oB<þ\n§; )(c)+a1«/¬-«52F§s«/(c)+¶J1h o\nIÆ-a\n§; )(c)a-«/¬-«52c¶s±°i°\nceA\nE\nUAKÆ\nAJA\ne\nAKII\nE\naaI<AJACAA\"Æ\nI\næ\nE\nAc×AiAAi¿\nE\ni\naAKaTa¿\nE\n¿\"ÆCA\nE\n¿A\nE\nIKA;A\nØ\n3⁄4)¿¿OAA¿OÐ)¿\"Æ¿\nE\nAAa\nE\nÆ-A+AAA Æ\n§' )(c)+a-«/¬1b«G2c¶J±°K°\nInI\nIÐ)¿EZ'AAJA\nE\nIFð\nE\nÆ)AJ¿\"IKIN\n\narO\nO\nCOO×OqØ\n§; )(c)a-«/¬1b«52u§J«/(c)¶J1B o\nu¿¿\nI\nAAA¿\nE\nÆ-Z\nE\nAJAAKaTA¿aaaIA+A\nAiÆ\nAaA-¿ma8IAJI\"æ)I<A;¿\nØO\na\nAaA-¿MaaIA+AzAAQIIAJ¿\nE\nÐFA\\i¿\"Æ\nIÐ)IAKÆAA\n§' )(c)+a-«n¬-¶J±°K°\nI\nAiAzAAQÆ-A A{A A\"ÆcAJAa<¿\nE\n¿aI<AmIaÆ-¿\"c\nI8E\n¿aAA\"IAAA\"Æ\nI\næ\nE\nA\nE\nIAA¿\nE\nI<AUIiI\nE\nAI Æ)AA aaIÆ\n¿i8AAJAaAKÆ)Ð\nA\"Æ¿\nI\nIÆa\nÆAaaA\nE\nceI\nE\na\nE'E\nI¿AqI\nE\n¿\nE'E\nÆ\nØ\n§; )(c)+a1«/¬-«52c¶J±°i°\nI\nA\"Æ\nAA¿\nA\"AA¿\nE\nAIÆ-a\nI\nIA+A\nE\nIIKIi\nE\n¿\ne\nAi¿A\nAA¿aaIAA\na\nE\nA\ne\nAA¿\na8IAJI\"æ)I<A;¿\nI\na\nE\n¿¿\"AiÆCÐ\nE-I\nAJAJA\nE\nI Ð)¿\nI\nIÆ-a\nA I\nE\nAJAiÆCÐ@AaA-¿a<IAJI\"æ)I<A;¿\nAJA\nIAA;¿\nI<E\n¿8AA\nE\nA\niÆ-A c×I¿aÐ)¿mA\"aqAiA\n\nAKa\nAA¿aaIAA\nATAIIAJ¿\nE\nÐFA\\i¿\"Æ\nAJA\n§; )(c)a-«/¬-¶J±°K°\nIÐ)IAiÆ\nI\nAiA\nATA\nA\"A\"ÆcAJAa8N\n¿\nE\n¿aIiA\nIzÆ¿\"caaIA+A\nI\nIÆ-aQaaA\nE\nceI\nE\na\nE'E\nI¿A\nI\nE\n¿\nE\n¿\nE'E\nÆ\nØ\n\n¿\"II A¿a\nE\nÆ-A+AAA ÆA ð\n\nApril 2003\nBasic Joshua Dictionary\n§' )(c)+a-«/¬1b«G2c¶J±°K°\n§' )(c)+a-«/¬1b«G2c1i2G(c)+±·\"¶\n3⁄4)¿¿AA¿aA;¿A+AAA\"Æ\n\"\n\n¿8AAJAKÆ)Ð\nanE\nA\"Ð\nE\nI\neEE\n¿ IKA¿ asA \"\nI£I\nI Ð)¿*\n¿8AAJAiÆCÐ)N\nanE\nA\"Ð\nE\nI\ne\nN\nE\n¿\"IiA¿\"aJA;N\n3⁄4FO\nO\nC\nOO£O\nØ\n3⁄4)¿¿eAA¿A;¿A+AAA\"Æ\n\"\n\n¿\"A\nE\nIAAaAKÆ)Ð\nanE\n¿aAA IAAA\"ÆcAZc£AiAA\n§; )(c)a-«/¬1b«52u§J«/(c)¶J1B o \"\nI\nI\nI Ð)¿V\n¿N\nA\nE\nIA+AAiÆCÐ)N\nanE\n¿aAA\"IAAA\"ÆA;NBc£AKAAN\nviO\n3⁄4\n3faI]\nð\narO[v8a\n3⁄4\nC\nO\nqNK3⁄4FOO\nCOO£O\nØ\n§' )(c)+a-«/¬12(r)3«52-352 < f25(r)\nIUFUKUy_Ba\n]\nÆI\ne\n¿a\nA\"A ÆAJAJIÆ)A\nE\nA;¿a\næ i\nv\nAAJA\nE\nI\nAJA\na8¿\"Æ-A AJ¿\nI\nA\nE'E\nAA\niII\nE\n¿\nA a\n§; )(c)+a1«/¬-B(r)'«521352c < f25(r)\nØ\nA\nE\nA I ÆA A\ne\nI\nI\nE\n¿A\nE'E\nAA*iI I\nE\n¿A\nE\nAJAKÆ)Ð\n±\nC°\nØ\n]\nI8E\n¿aAA\"IAAA\"ÆAA\n§; )(c)a-«/¬12(r)3«52-352c < f2G(r)\nc£A¿\"ÆAA¿\nE\n¿OAA\nÆ-AxiIIKAa\nE\n¿I<A;A\"ÆMAA-IA\nA\nE-I\nN\nI\nA\nE\nA'AAKA\nØeC\nA¿\nI<E\n¿aAA IAAA Æ\ne\nI+i\nA\nE\ne\nI+iÆ-A\"A\nE\n¿\ne\nI AiÆ\nAiÆ\nAA¿a<IAJI\"æuIiA;¿\nI\næ\nE\nAmAA\nA A\"ÆA\"¿\nI\nA\nE\nIIKIi\n\"\nÆA\"AA;¿¿\"Æ \"\nE\nÆCAAiIOAiA'AA\nE'E\nAaAiII\nE\n¿AAIÆCÐ)¿AAJA\n§' )(c)+a-«n¬-B(r)+¶J·«5±8(r)\nA\nE\n§; )(c)+a1«/¬-B(r)' ;¬F°(c)+±<(r)\nØ\n\n¿\"II A¿a\nC\nA\nI\nAAA ð\n§' )(c)+a-«/¬12(r)¶J·+«G±8(r)\n§' )(c)+a-«/¬12(r)3 ;¬F°(c)+±8(r)\n§' )(c)+a-«/¬12(r)μ F2c¶J·¬) C1Kμ¶J F·+oc(r)\n§' )(c)+a-«/¬1¶s·+«5¶JaG»1⁄4¬u°B«5±\n§' )(c)+a-«/¬1b1⁄2c·\"±8 C1iμ8¬u¶J1K F25»B¶s·+«5¶JaG»1⁄4¬u°B«5±\n3⁄4)¿¿AA¿{A;¿A+AAA\"Æ\n\"\nCEE'E\nAAE}II\nE\n¿A \"\nIGI\nI Ð)¿\nCnE'E\nAANEI I\nE\n¿A;NK3⁄4FOO\nCOO×OqØ\n§' )(c)+a-«/¬1b«G2c¶J±°K°\n¿\na\nÞ\na3UHKUN\nÞ\nUKY\nÞ\n1⁄4\nUUhU\nyUo;aHa\nAnUsa\n1⁄4\nKU;UUiKY\nÞ\n\n¿\ne\nAi¿AOIaAJAiÆCÐFI¿\nI8E\n¿aAA\"IAAA\"ÆUa\nE\nA\ne\nAA-¿Za<IAJI\"æ)I<A;¿\nI\nAI¿I\nE\nAKÆ)Ð\nEI\nAJAA\nE\nIÐ)¿MA\nI\nIA ¿\nØ\n\nC\nACATAaa\nE\nÆAAAA\"Æ\nAAI\na\nE\nIIA\"a\n§; )(c)a-«/¬1¶J±°i°\nI\nc×A)AA+A\nU\n1⁄4§1⁄4\no\nI\nI<E\n¿aAA\"IAAA\"Æ\nAJA?AA¿\na8IAJI\"æ)I<A;¿\nØ¶\n1⁄4\nUuhUyUo'aa\nA/Usa\n1⁄4\nKU'UuKY\nÞ\n]\nI<E\n¿aAA IAAA\"Æ\nØ\n3⁄4\nE\nAJAiæ)¿AA¿UIA+A\nE\nII\nI<E\n¿aAA I AaAA\"Æ\nAæZ;¿A+A\nAAIArATAeAiÆAA-¿Oa<IAJI\"æuIiA;¿\nI\nÆA\"AIQA\"A\nI\niZA\"a}AKA\nØ\n§; )(c)+a1«/¬-«52c¶J±°i°\naTA\nE\nAJAA IIKIA\n§; )(c)+a1«/¬-«52F§s«/(c)+¶J1h o\nAJA\ne\nI-)¿\nAA¿\naaIA+AmÆA\nIA\"Æ)Ð)¿\nE\næu¿N\nIiA¿i¿a\n\n§' )(c)+a-«n¬-B(r)'«52-3G2c < f25(r)\nI\nAI¿I\nE\nA\nA;A\ne\n¿\nAiÆCA¿\nE\nÆ-II\nA\"IA+A-¿A\nI\nAA¿\"Æ\nA I IiIA\n§; )(c)+a1«/¬-«52c1K25(c)+±· ¶\nAJA\nE\n¿\ne\nAi¿zAaA-¿zaaIA+Aea\nE\nA\ne\nAaA-¿Qa8IAJI\"æ)I<A;¿\nØC\nA¿mA\nE-E\nÐFAA\"II\nI<E\nA\nI\n¿\nE\nN\nAaA¿AA\"a\n§; )(c)+a1«/¬-«52c¶J±°i°\nAKÆIA+A\nE\nIIKIi\nE\n¿\ne\nA<AiÆCÐMAA¿\nI<E\n¿aAA IAAA\"ÆI<AA\nI<I\nAA;¿aZAJA{A\"ÆN\nIi\nE\n¿\ne\nA<AiÆCÐZAKA'A Z\nE\nAJAAiaAA\"IAAA\"ÆAI&i¿AceAz¿ aaa¿A+A'A ð\nI\nØ\n3⁄4CA\ne\n¿AJAJA\nE\nIÐ)¿\ne\nI+iaæ)¿A\"A\ne\n¿Ð)I\nE\næuI Ð)¿NKA A\"IKI¿AAaAhæFI¿\nØeC\nA)AAiA I ÆYIA\"ce¿\nE\nAA¿;8A\nE\nN\nA\nE\nI IN\ne\n¿\ne\nA\nE\ni\nE\n¿$\nE\nA\nE\n¿\ne\n¿ ÆCA'A{A\"aqiFA\nEEZI<E\nA\"Ð\nE\nI\ne\nØ}O\naOA\"A\nE-E\nA;¿\nI\niFA\nE\nI\nI+iaaA\nE\nAKA\næiZa<A\"AiÆCÐZAA¿z¿i8A\nE\nIOc\nA\nE\nA a\n§' )(c)+a-«n¬-«52c1K25(c)+±·\"¶\nØ\nI\nØ\nC\nA¿\nI<E\n¿aAA I AaAA\"Æ?ATAiÆAVIA\"Æ)Ð)¿\nE\nAKÆ?AA¿Ma<IAJI\"æ)I<A;¿\nØ\nC\nACATA\ne\n¿IÆcAiAAIA\nAKa\niFA\nE\nE\n¿N\n§; )(c)+a1«/¬-¶J±°K°\nAKA\nI\n§' )(c)+a-«/¬1¶s±°i°\nE\n¿\"A\nE-E\nÆcAIA;¿A A\"ÆaViII\nE\n¿aA\"axÐ\nI\na<¿\"ÆA\"AAiÆCÐYAKA\nA-I<AqÆ¿i¿\nE\nA;¿¿\"ÆAA)AA\nI8E\n¿aAA\"IAAA\"Ææ)¿ aA\nE\n¿\n\nAKÆeA\"A ÆA;¿&\nE\n¿\"Æ-A ¿\nI\n§' )(c)+a-«n¬-¶J±°K°\nc£AKIiI\nIIA;A\nE'E\nÆaaA\nE\nceI\nE\na\nE'E\nI¿A\nØ\nIÐ)IAKÆ\nØ\n\nO\na\nI\nA\"Æ\nAaA-¿\nA\"AaA-¿\nE\nAIÆ-a\nI\niFA\nE\ne\n¿\nE\n¿\"Ii\n§; )(c)a-«/¬-«52F§s«/(c)+¶s1B o\nAaA-¿\nI8E\n¿aAA\"IAAA\"Æ\nI\nAA-¿ Æ\n\nBasic Joshua Dictionary\nApril 2003\nNO§OOO×OqØkUUUUoUiY!Þ-ßa-a?a,a§a$UißaaæNO§OOO×OqØkUUUUoca-Y4ecßaeaea$a#Þ-ße8eua,i~eLa?Þ-iiiLðiU4aIe\na-ßqÞ#Yn\nUiß`a*Ytoqao\nc#a$eDUoa-a$YUoÞ-ß8a,iic#a$ae-o*aoUOeYa$e£UißbYtoqaea$Ya-÷§aeaø`NO§OOqO×OØμUUDUiUIe\nÞ$aDedßÞ-YucHeß\nitÞ-cuua$c#eKcHeiuaeuyoqa-ß>a$ß>ao\nU4eYUiß`a?oc#a$eUua#a$YUuÞ-ßcUOec#a-YÞ-ioe¥þ¶yNÞ-uuaeua-c$aæUiidabU4e\no\nc#aDea-ß§YHa\nYoqaa#Þ-ßaea ,ea-ßqa#aDeoÞ-i[cHeqß§ß§Uß§a*YoÞDeaxcHeqioaDeduyUiii\n÷§a÷Uc#ÞeaUo`Y[÷§aa\nKUßLþ\n\nouao\niuaDe\n!\"$# !%& '(')*+ !\",$ '(-')-..\n+\"( (0/!1/#! %& '(-' !\"32) 4\n/#! %& '(-'$!\"35(-! 644.\n# '8$9' %#,!3:!\"!5 !%\n;\n,3\"#) 2%\n/<=\n>?>@AB AC$@=\n;$D\nC> >E4\n/<=\n>?>@AB AC$C=\n;$F\nB=@G4\nH\n!(-% $\"#)I2%\nE'\nJJ\n, \"((K!$)I ! \")'35&L ( 6) 2M(-\"$'L\"N3\"#!\"!5 !%KO%(-!&\n+, \"((QPSRUTWVYX[Z]\\^Z_X`badceadfg`hTUikjlfWZlZnmUo.\nEpB\n# '8$9' %#,!3:!\"!5 !%qsr!\" #2$ !\"\")It/u-!,(-\"=v((-4.w=v((\n;\n,3\"#) 2%\n/<=\n>?>@AB AC$C=\n;$F\nB=@G4\nH\n!(-% $\"#)I2%\nE'\nJJ\n, \"((K,%) 2$\"#3)O !\")I'$'5x \"L\",)IL! %$\"#y,)z&L%, ')\"\n+! %6t/# !%& '(')$! \"$5(-! 64\n{}|\nu(!r5!\n+5! 68!)z%, ')\".\n+,\"((1+! %6! \"!5!% ) !\"'$5 ! 68!%, ')\"...\n~\n' 5! 68!))I,(-%3)-(.\n#'8$9'%#,!3:!\"! 5!%r!\" #)23!\"\"t/u-!,(\"K=v((4.w=v( (\n;\n,3\"#) 2%\nE'\nH\n!(-% $\"#)I2%\nE '\n\nÞ-YaxYoa$YuUiß?YoqaxiuaeYNaouao\niuaa-÷§ÞeuawoUÞe8oc#Þ÷§a-÷UiμobeoÞeiueoqa-euae±ea$e\nr! ')I!\"! 5!% )I !\")' %t/# !%& '(')$! \"$5(-! 64\n{Y|\n,\"((.\n\nÞoua$c#a\nYtoqa\nitÞ-iioÞ-uyUß§a\naouawo\niuaDe\nYÞ\nea$a\nYoa\neDUii4ita-c#a-ßa#a\n÷§a-Yuua$a#ß\nNO§OOO×OqØ}O\niLUUDUiUua,ßeNHO§OOqO×OØ¶O±iUNO×OUð±þ\ns ) !\" N% , (- '1, (-3) ') #8v.1u(\"r%\n~\n(\"r% !\"r'(. .\ns ) !\" N% #8'+# 8L, (-.u(-\"r%\n~\n(-\"r% )O !\" r'(..\n\nApril 2003\nBasic Joshua Dictionary\ns,(-$' \") , (- %q\n~\n')8!)zv.\n-0/%, (-', (-$ #84\n\"#/!ku-')zr!\"$\"Lvvp'\"3\"#!\"=tI%$\"#3, ($'=}uw, ($ #8v.\n/% #8'K# 8L, (-4..\n\nUc$eY\nuuav\niiANHO§OOqO×OØμU\nUUiUa$ß\na-eeßqaHeqioa$c¦iaaYHa8NHO§OOqO×OØ¶O±iLUUUU\nUiYHaAa$ße\nYoqa#ß\nc#a&n2NO§OOqO×OØμUUDUiUuUiYHþnyiOYa-cYoa;iOUic$eYuNHO¥OOqO×OØμUUDUiUuYtoqa0iaaYiOUc#aDexYtoqa0iÞ#cuIa$c#e?cHeqioaDþ\nyiOYa-cYoabea$a#Þ-ße£NO§OOqO×OØμUUDUiUuYoa;itÞ-cuua$c#ebcHeiua;iOUc#aDea$a§a$UßLaIeUißqa#aNO§OOqO×OØμUUDUiU\nea&aDedYoaxoc#a$eUua#a,YtUuÞ-ß8aeIþ\n+%\"yL ! ') !(, (-! \"q+\"((0/I%, (-'9,! #$! !%%# 4..\np' \"$\"# !\"K9 :=<NI%$\"#3, ($'K=E=\n7 7\n><h\n/p\nE@B> A\nH\n9:=<3=E=\n7 7\n><4\n;\n#'839'%# ,!$:! \"!5!%\n;\n,3\"#) 2%\n/p\nE@ B>A\nH\n9:=<$=E=\n>< 4\n/p\nE> <>A\nH\n=E=\n><9:=<4\nH\n!(-% $\"#)I2%\nE'\n+,\" (( !')I !( , (-! \".\n#'839'%# ,!$:! \"!5!%\n;\n,3\"#) 2%\nE'\nH\n!(-% $\"#)I2%\nE'\n+\"( (0/% , ('9,!#3!! %%#4.\nJ\n\" #)%M%3\"#NI,(-$! 2!)h\np' \"$\"# !\"K9 :=<NI%$\"#3, ($'K=E=\n7 7\n><h\n/p\nE@B> A\nH\n9:=<3=E=\n7 7\n><4\n;\n\nÞ-uuuav\niiiAe\neaaeua,cUoa$YUuÞ-ß8Þ#i[Yo`UOewaouawoioaDþ\n\naWeYa$cY0uyUYoYtoqa>itaDaY0uuawe\neYKa-ß§Ya-c#a$eWUißYoae\na$Ya-÷§aeaa&÷¥Þeuaa$ßqeWuyo§Uuao\niOUc#a&e\nYtoqa\nitÞ-cuua$c#e\ncHeqioaDþ\n\nÞ#u\nuua\nNHO§OOqOOqØ}O\niUNOOUð+\nYoqa\nitaaY\na$ße\nYoqa#ß\nNO§OOO×OqØkUUUUyUYNa$a§a$UßLþ\nyiOYa-c\nYoa\nNO§OOqO×OqØ}O\niUN\nO×OU\nð[+±aYoa\nitaDaY\naoa,ß§a§aDe\nUiYHe\nYcHeYo\neUa$i~eLa\ni4c#Þ-\nNO§OOO×OqØ[UuO\nU)YÞ\nNO§OOqO×OqØ[HO±i¡\niLOv¢EiY,a£¤¦¥ §a(c)z«¬(r)° ¦±2(r)° *¥3¦(c)μ ¦¬¥[¬v£¬)±(c)$þ\n\noa-ßVuua\nNO§OOO×OqØkUUUU\nYoa\nitaaY\nÞ-ßa#a\na$a§a$UßLa\nUYHe\nYcHeYo\neua$i\\ea\naoqa$ß§a§aDe\ni4c#Þ-\nNO§OOO×OqØ[HO\ni¶\niLOv¢EiYVYÞ9NHO§OOqOOqØ[UuO\nU)$a÷eYNO§OOqO×OØμUUDUiU!a$ic#a&aDe#o·\nUßÞ-u[e?a-÷§ÞeY\nYtoqaitaaYHaæa$ße0ßqÞitÞ-cuua$c#e0cHeiuaDeoiOUc#aDþ\n\nÞ-YaDa×oÞ-uuaeua-c$a×Yoa$YNYoqa}*÷UcUiß`aqeoYoa\nI% #8'\ne\na$e$eLaYUuÞ#ßc÷§aa\n8Uißaþ\n\na0a#a,ßVYa-iii[UY\ne\nÞ$aDeeÞuyUYtoqÞeYwc#a$niaoua$a/eYUiß`a\nYtoqacHeiuaa eUßa-aYoqa£eUuea&na-iOia&aY1 iYoaoO»OUU\naDeea$a§a$y\nUßbYoacHeiua$nk÷§Þ$e#o9eDUoe0ßÞ-Y\nc#a&a/ec$þ\n\nBasic Joshua Dictionary\nApril 2003\n#'839'%# ,!$:! \"!5!%\n;\n, $\"#)I2%\n/p\nE@B> A\nH\n9:=<3=E=\n7 7\n><4\n/p\nE><>A\nH\n=E=\n7 7\n><K9:=<4\nH\n!(%$\"#2%\nE'\n+, x,%\"-I&1⁄4P1⁄2V}Xu3⁄4}mμ`nc}Z_Xal¿1Al3⁄4nA_T_RgA1Tdm TWV}VhZlRUo.\nEpB\n#'839'%# ,!$:! \"!5!%\n;\n, $\"#)I2%\nE'\nH\n!(%$\"#2%\nE'\n+\"( (0/% , ('9,!#3!! %%#4.\nJ\n\" ((6 '8%3\"#)%A-! \"L%$'(A¡A2!t\"'%\n|\n\"N,$\" #M-'8!),(-\n/p\nE@B> A\nH\n9:=<3=E=\n7 7\n><4\nEpB\n#'839'%# ,!$:! \"!5!%\n;\n, $\"#)I2%\n/p\nE@B> A\nH\n9:=<3=E=\n7 7\n><4\n/p\nE><>A\nH\n=E=\n7 7\n><K9:=<4\nH\n!(%$\"#2%\nE'\nÆ\nßeeCxaNHO§OOqO×OØ¶O±iUNO×OUða$ßqeiNO§OOqO×OØ¶O\niaUUUUIeÞ0eUEwUiua$ciYo§Uß§aqea\n÷\neqYNuyUiYoeUia§n\nß§UiOUua#a$ß`YoeDUiOita-c#a-ßa-aDeþ\nÆ\niIouÞe>uua$ß§YdYÞaoa,ß§a§aoUÞeqcowUße*a-÷¥ÞeqYE÷§a-iiUuae\nUiß`a8aitaDaY\n÷\neqYuc#aDea#cHeUaouÞeqccUiaUo`YuYÞc#a-YOeqcß?YÞYoa,YuitaaYuioa,Ya-c$aqoUÞe8oc#Þ÷¥a&÷uiko;uua$ß`YuYÞie\nea\nNO§OOO×OqØ}O\niUN\nO×OUð+\nþ\nÆ\ni\na×Þ-ß?Yoa!Þ#Yoqa#coa,ße^\n-\nE\nÞee\neYoeDUoeKaKeac#a$YaoVa#a$iuaHeqioa,YtUuÞ-ßca$ßqe£uua$ß`YuYÞiOi\\e\neo8UiYNßÞ-uaYoa$Y\noUÞecoa&eua\nYoqaa$ßaeuua-c$a×Þ-c\n-\nE\nÞe8uIa$ß§YuYtoqaeYÞ-c#a$a§a÷§aaA\naÞ#c\n-\nE\nÞeVeÞ-ßY\nYuUiß`Ya#ßqeYÞa-Þa÷§aa\n9a,ßec#a$U4eaxYoqaxU4eeeaÞ-i[c#a$n\\cHeß§ß`Uiß`aKcHeqioaDeþ\nouÞe8oc#Þ÷¥a-÷Uiko0uua$ß`YEYÞe±eadNHO§OOqO×OØ¶O±iLUUUU4þ\nE\na-ioa,Ya$e\n\neßqaYUuÞ#ßae\nNHO§OOqO×OØμU\nUUiU\nNHO§OOqO×OØ¶O±iUNO×OUð\n\"\n\niua&a,cEuÞDeo¥eaIua$Ya-÷§aea\n\nÞ-a$ße \"\n§a$a8Yoaea$aYUuÞ-ß\n\"\nE\na-\nÞe\nUß§akIc#a&eDUua#a$YUuÞ#ßae\n\nc#Þ\nYoaNIua$Ya-÷§aea \"\na\noUa$a§a\nE\na-\nÞeun\nUiß`a§n[Ic#a$eDUoa-a$YUoÞ-ßLen\n\nc#Þn~Yoa$nIua$Ya-÷§aea$nE\ne\n\nÆIW\nþ\n\nApril 2003\nBasic Joshua Dictionary\n§a$a\nYtoqa\nea$aYtUuÞ-ß\n\"\noqaIEuÞDeo¥eaÐIua$Ya-÷§aeaNIc#Þ-YÞ$a-Þ#i \"\nUiß\nA¡O\n±z3¡¤¬\nf\n(c)O+(c)I§a(c)z ^Oz(c)\nA\n¬) ¡¤¬OOþ\n§a$axYoa£ea$aYUoÞ-ß\n\"\n\ne±eYÞ-wU×OUß§a*Yoa2Iua$Ya\nÆ\nßqe\nao \"\nUiß\nA¶O\n±z3¡¤¬\nf\n(c)+O+(c)I§u(c) ¦O(c)\nA\n¬v C¤¬O4þ\nNHO§OOqO×OØUØOU#ðuOUiLU\n¿\n¤ ¦OI¥°(r)\nO\n\nO\n£EU(c)zOI¥U\nO\n£EU(c)zOI¥ÞY\nuuÞco\nc#a$eUua#a,YtUuÞ-ßLe0Ytoqa$Y£eDUii4ita-c\nO\n¡O\nßa(r)° a¥3¦(c)3 ¦¬v«(c)±bÞ-iYoqa8ioÞ-aUUuaKeUa$cUoa&÷uiuaDe£YoaHo\na#Þ-ß§Ya$Uß8a$c#aa,eU\\eua$iua-ß§YHa×a$ßqe0a$c#a£ea$Uoe£YÞi÷¥a2a-¬O§(r)°¬) ¡¥[±xÞ#iEa$aao8Þ-Ytoqa-c$þ\noa\niueßqaYUuÞ#ßaNHO§OOqO×OØUØOU#ðuOUiLUaoqa$a\nqe>uyoqa#Yoa-c(r)YtuIÞCÞ÷Aa$aYea$c#aaa-¬O§(r)°¬v C¥±AÞ#i\na&aDao8Þ-Yoa-c$þ\nÆ\ni[YoaHoKa,c#aa±UiYuc#a-YOeqcßLedUa×Þ-Yoa-cuyU4eaiLðiU4þ\n\noa-ß\nNO§OOO×OqØkUUUU\noae\nYÞEaDe\ne\naEoc#a$eUua#a,YtUuÞ-ß\nYÞ\nYoaEea$Ya-÷§aea\nUY\ne\neaDe\nNO§OOO×OqØÞØO-ðoO¥iLUdYÞ!e\na-Ya-cIwUßaxUi[Yoao\nc#a$eDUoa-a$YUoÞ-ß?U4eoa$ic#a$ae-o0Yoa-c#aDþ\nO\n£EU(c)OA¥U\noc#a&eDUua#a$YUuÞ#ß\nO\n£EU(c)OA¥ÞY\nyßqÞ-Ytoqa-c\noc#a$eUua#a$YUuÞ-ß\n\"\na\na,cUoa$ß`Y \"\n\na&a,ßLeYoa-c#abU4e0a0§u(c) ¦¬v«1(r)° aÞ-ieua,cUoa-÷UiuaeYoqa$Y\na-\n§ae;Þ#ßqa9eua$cUua-÷uiua\nioÞ$Þ\nKiU[\n§axYoa!Þ-Ytoqa-c$þ\n\nÞ#cxaouawoiua)\n!\"M''q+' 5x \"..\n!) !\"/I-''Aæc4/I-''Aæ&4.\n;\nJ\n&',$ !N !r3c\n→\n&}\n!) !\"/I-!\"# )cM&4/I-!\"# )!354.\n;\nNO§OOO×OqØÞØO-ðoO¥iLU;eoÞeqioeVßÞ-Yi÷¥aba-Þ#ß`iue\nea$eVuyUYtoVNO§OOqO×OqØ}O\niLð+\nþeoqa9ioa$YYa-c;YtcUuaDe\nYÞ?ea&a0UiioYuuÞ;Þ÷Ia$aYHexa-a$ßV÷¥aw«¬) ^(c)¥\nO\n£ (c)!Yoa?ea\naDþaNO§OOqO×OØUØOU#ðuOUiLUaoqa&aA\neiUii\nYtoqaHoK¬§u(c)xYoa;ea\naDþ\nÆ\nYwe\nÞ$aDeßY2Yoaeua-c1⁄4±z(c)I¥IioÞ-aUUoaieua$cUua-÷uiuaDea\n÷eY\na-c#a-iμo*iuÞ&Þ\nqewitÞ-ca\nc#a#ßqawUß§aqþ×NO§OOqO×OØUØOU#ðuOUiLUU4ei÷¥aea$eVÞ#ßXYoaKßÞ-YUoÞ-ßYoa,YUYeeoqÞeiuebßqÞ#Yμ\na$YYa-c\nuyoa$Y;Yoaßqa\naDe?Þ#i£ioÞ-aUUuabeua$cUua-÷UioaDe?a$c#aDaeÞioÞ-ß§aaueKYoqaWeYcHeLaY4ec#aDe?a$c#aYoa\nea\naDþæo§U4e?U4e8a·deao\neYtc#Þ-ß`a§a#ca#Þ-ßqeUYUoÞ-ß\nYoa$ßNO§OOqO×OØ¶O\niað[+\nþeo¥e\neawaeua-co\noua$Uc*Yoa,Y0ea,YtU4eiOUuaDeNO§OOqO×OØUØOU#ðuOUiLU0a,iOeÞea$YU4eiOUuaeiNO§OOO×OqØ}O\niLð+\na÷eY!ßÞ-Ye\nUua#a\neua-c$eaþ\n!!\"/I-''Aæc4t/I-' 'Mæ5 !)4.\nEpB\nJ\n\"#%3,)-A&¡A25, \"$!)3'\"!)! \"%\nJ\n!)! 5(-%3 !' \"$5L!r\n!!\"/I-!\" #)cLc4/I-!\" #) !$54.\nEpB\nNO§OOO×OqØÞØO-ðoO¥iLUwa$iOeÞuuÞ-c\newÞ-ß8Þ-Ytoqa-ceYcHeaY4ec#aDe\neeLao8aediUOeYHeþ\n\nouao\niuaDe\n!!\"\n|\n!\n|\n!.\n;\n\nBasic Joshua Dictionary\nApril 2003\n!!\"\n|\nI/I''$5! 4t/I''$5!4.\n|\nI/I-''35!4/I-''35!)4..\n;\n§a$a\nYoa\nea$aYUoÞ-ß\n\"\na\na,cUoa-÷Uiuae\na,ßee§a-Þ#oUß§a\nUßeEuÞDeo¥ea \"\naoua,a§a\na\na,cUoa-÷Uiuaena$ßqe\nn\n§a#Þ-oUiß`a§n~UßniEuÞDeoUeLan°\ne\n\nÆ+Ib\nþ\nNHO§OOqO×OØU¢EðUOYiOUHOUUU»xUDiLUzi°i§UOUuOYiUOY-U)i\nA\n¬vOA§\nO\n¬§×a¡OE(r)°±I¥¡ðn§u(c) C(r)°O¬¥E(r)\nO\nn÷§Þ&e-o\n£\nO\nß\nIc#ÞeUoeaDewaa#a-aeedYÞYoaμ¬§oa¡O°(r)°±I¥uÞ-i}ðn§u(c) C(r)°O¬¥E(r)\nO\n±þ\n\nc#a,o0Yo§U4e\naac#Þ!a$c#Þeqße;a2£\nO\nß\nÞ#ia#Þ$ea9uyUYto`Uiß·\na-YoÞ$e¥e!Uiß(r)uyo`Uoao>oUÞeuua$ß§YYÞ9c#a-ita-c;YÞ9Yoaba$cae¡\na-ß§YHeÞ-ia\no\nc#a$eDUoa-a$YUoÞ-ßYoqa$YKa,c#a>ßqÞ#Y*a$ic#a$ae#oUßUßLeYa$ßa-aceUa$cUoa-÷Uiuaeþe ×o§U4e$\naac#Þ>uuÞ-c\nqe\nÞeqYHeUoeaÞ-iU\na-YoÞ$e¥ea\nYÞ$Þþ¶y\n¬O§×a¡O°(r)°±A¥\noqa;a$cae¡\na-ß§YiUOeYÞ-ioYtoqa9eoua$aUii4Uoa$e1ðn§u(c) C(r)°O¬O¥°(r)\nO\n\nþ_æo§U4exa#a$ß\n÷§aa$ßo\nYo`Uiß`a8eeqUiYa-÷UioaitÞ-coi§UOUuOYiUOY-ðiiooCiioðiYiaþ\nð§a(c)z ¡(r)°Oz¬¥°(r)\nO\n\noEuÞDeoUeLa!o\nc#a$eDUoa-a$YUoÞ-ßLþ\n\nÞ-cxaoUawoioaDa\nUßLeUueaaNO§OOqO×OqØ~O#OON\na-YoÞ$eitÞ-cYoaxoc#a$eUua#a,YtUuÞ-ß$OUOh\ns ) !\" $' ,2#!(! &a+,r5) '%2 %M-''v..\ns ) !\" r\" #'a%!&L ',2# !( !&v.\n÷-'\")I'!(+%\") !rLø% \"!!', \",\"ø..\n8\" #%\"! \"r \"% \"), \" ,)k+#'8r!&M%)I2%M''v.K%(\nu')r!\"3%\") !rt u$?',\n|\nKx,%\"$# !$=3=L'w=}<!\n|\n\"K&' ,$5\" \")y,)\")\n#'8r!&M%)I2%M''v.. .\n%!&1/z',2 #!(I!&Mu$(-! \"\")%3) 6(-2%\"4.\n?',\n|\nx,%\"3#!Mu$B=\n;;\n>C\n'Op@GB> :p\nD 7\n\nH\n>>\n;\ne<!\n|\n\"&',$5 \"\")y,)\"\nEOpB\nE\na-ioa,Ya$e\n\neßqaYUuÞ#ßae\nNHO§OOqO×OØii`UðiLU)iiuh#U)i`ð°i\nOUUU\nNHO§OOqO×OØU¢EðUOYiAO\ni¡oLOO\ni}iCi\\UOo§ð°i)iuØOU#ðuOvoLUU\nO\nA\n¬vOA§\nO\na-¬O§(r)°¬)£O(c)\nX\nO°(r)°±A¥]n÷§Þ$e#o£\nO\nß\no§U4ew\naac#Þ?oc#Þe\nUue\naDe0acuuaoYÞba§a-ßa-c#a$Yacaea#YÞ-ixiuÞ-aUUoaKeua$cUoa&÷uiuaDeitÞ-c;e\neabUiß\na#Þ$e\naDþ\n\naaoq Ey±UOeoUyeua$cUoa&÷uiuauyUYto`Uiß>Yoawa-¬O§(r)°¬v£O(c)\nX\nO°(r)°±A¥[U4ew÷§Þeqße*uyUYo§UßVYoa*ea-Þ#oUa\nÞ#idYoaw\naac#ÞeYÞ0aKeDUOeYUßaYa\nßqÞ#ßqnkeqß§UiOUua$eKiuÞ-aUUoaeua$cUua-÷uiuauyUYto`Uiß>Yoa£\nO\nßÞ#idYoa\n\naac#ÞDþ\nÆ\nß8aDeea-ßa#a!ay±U4eoeua,c/Uua-÷UioaUßMa-¬O§(r)°¬v£O(c)\nX\nO°(r)°±A¥oaueoauedUiYHey\nU4eo£eua$i\\ea!a!ioÞ-a§n\nUoaeua,cUoa-÷Uiuaa±itÞ-cYtoqae,ec#a$YUuÞ-ß8Þ#ie£\nO\nßaþ\na-¬§z(r)°¬v£O[(c)\nX\nO°(r)°±I¥\nÆ\newa!iiU4eYNÞ-iIeua$cUua-÷UioaDe\n£\nO\nß\nÆ\newa$ß\no;iiU4eo0iÞ#cI\n\nouao\niuav\n\nApril 2003\nBasic Joshua Dictionary\noaVoc#a$eUua#a$Ya\n)I%) \")!( !O!\"\nU4e*e\na-iOUßa$eXUißYYtoqaciÞ-iiiuÞ-uyUiß`aCaoUawoioaDþ\noa3aac#ÞKU4eie\nea$e8YÞKYa-woUÞ#c#a,cUiikoXea#Y1¬v ßU£\nO\nßXYÞ0÷¥a9a9iuÞ-aUUoaeua$cUua-÷UioaDþWoqa#ß\nYtuIÞoc#a$eUua#a$YUuÞ-ßLexa$c#a;a#Þ-woUa$c#a$e*YÞ*ea$a£UiidYoqao9eß`Uiio?uUiYoÞ-ßa;a$ßÞ-Yoa-c$þdþEß`Uii4Uon\na#a$YUuÞ#ßWÞ&a-aHec$exUßYto`UOea#auea?eÞ0Yoqa0itÞ-cI\na,YeYa$Yaa#ß`Y\nocUiß`YHeiYoa£eua$i\\ea*Þ#i¬v ß\nX\n£\nO\nßaþ\n!\"$%)\")!(- !!\" q+%'r'. .\n8\" #,5 ',(-'2) !)I!5(-%+!&5'&v.\n8\"# ,)- !\")I'\n+,-I&ayA/)%\"!(- !!\"Au!&5'&4t/z)%)z\")I!(- ! ! \"K=5 4.\nu-'r!\"3\"Nv\n;\n#K!(-,3'!&5'&%K%hu! &5' &v....\n;\n#!(-,3'! &5' &t%=\nF\n>h\nEpB\nNHO§OOqO×OØU¢EðUOYiAO\niLððEiOUUðOUi\nA\n¬vOA§\nO\nn÷¥Þ$e-ow£\nO\nß\n\neYa-÷UiiU4eoaDe\nYtoqa\nea#Þ-oUa\nuyUiYo`Uiß\nuyo`Uoao\nee`÷eYUY4eYUoÞ-ßae\neoUa&aUii4Uoa$e\n÷o\nYoa\nNO§OOO×OqØ}O\niLð+\niueqßaYtUuÞ-ß·Ya-\n§a(r)a-iOia$aYHþ1o§U4e8Ya-woUÞ-c#a$coCeß`Uiio\nUß§a\n\na$aoa$ß`UOeu\nU4e\ne\nea-iueqiouUiYo§Uß·y±U4eoa-Þ&ea?UißAYoa*÷§Þ&e-oXÞ-i1EuÞDeoUeLa8cHeqioaDeaEeUißqa#a?UYiua-YHeeYoa?o\nc#Þ$n\naUc#a\na-cYtco*ÞeYNaeua,cUoa-YuoKÞ-iEeDUii4ita-c#a-ß§Y\na$Yao§Uß§a?Þ-o\nYUuÞ-ßLeþ\n\noa-ßaeua-cieß`Uii4Uoa-a$YUoÞ-ßcita$Ui4eaqNO§OOqO×OqØ}O\niLð+>a§Þ&aDeYÞeYtoqaa-ße*Þ-iuYoae-oßaUoa-a$iiiko\nUiß`ßa-cI\nÞDeYNO§OOO×OqØÞ¢EðiU\nOYikO±iLð[ð°i\nOUU\nðiOUi\na,ßeceqßeÞ&aDe0a$iiYtoqa*÷UUßeDUiß`aqe£aDeYa-÷UiiU4eoa$e\neÞxita,c$þ\noUe±ea§NHO§OOqO×OØU¢EðUOYiAO\niLððEiOUUðOUiaeYa-÷UiUOeoqaeu÷§Þ#Yo8Þ-i[YoaitÞ-iiiuÞ-uyUß§ah\n-\næoa£ea#Þ-oua!Þ-iIeß§UiOUua#a,YtUuÞ-ßLewe\nÞ-ßqaxUß?UiYHeu÷¥Þ$e-o\n-\noiuaa#aYÞi÷¥aYo§c#Þ-uyß?YÞxUiEaeß§UiOUua#a,YtUuÞ-ß?Uiß?UYHeE÷§Þ$e#o;ita$Ui4e\n\nouao\niuaDe\n!\"$ !!\"8')a!8')zv..\n!\"NI% 'r,\")Ix!)2 'q+% 'r8')v..\nA!)ø 'r, \")x!)2' ø\n|\nu''$5!5!y,,c)..\n\nBasic Joshua Dictionary\nApril 2003\n,(-x!)2' )*\n~\n5! 68!)v.\np\nH\n+\"& !%3 !!\" 8')z\n+, 5',(-'2 !!5(\n÷(-''A-')8')tI$ø 'r,\"x!)I2'ø\n') 2q8I\"#,- ! \")'\n+,)-A&L ! ! \"8'$8'v.\n+%, v.. ..\n+' \"#)8O%\nsrr5 ! ! \"8'Lø 'r,\" )x!2'ø...\n;\n< >Et/I% 'r,\")Ix!)2 '\n!z!\"8')4.\n+!%6/% 'r, \")x!)2'3c4\n{}|\n)I\"y, )&v.\n/p\n@A\n;\n>C9 =C\nD\nAE\nH\nAA4\n/p\n@A\n;\n>C9 =C\nD\nAE\nF\n=C4\n/p\n@A\n;\n>C9 =C\nD\nAE\nF\n=\n\n/p\n@A\n;\n>C9 =C\nD\nAE4\nE\na-ioa,Ya$e\n\neßqaYUuÞ#ß}\nNHO§OOqO×OØ¶O±iLð[+\n§a$aYoa\nea$aYUuÞ#ß\n\"\nI\na$YYa-cß\n£a$Yao§Uß§aaUiß\nEUÞeo¥ea\nþuß§Uii4Uoa-a$YUoÞ-ß \"\nadoUa$a§a1I\na$YYa-cßn\n£a$Yao`Uiß`a§n~UßniEuÞDeoUeLa¶nþEß`Uii4Uoa-a$YUoÞ-ßn°\n_\n\nÆ+IW\nþ\n\nApril 2003\nA Figure of the Joshua Protocol of Inference\nAppendix A\nA Figure of the Joshua Protocol of Inference\n\nA Figure of the Joshua Protocol of Inference\nApril 2003\nRULE-INDEXING PROTOCOL\nadd-forward-rule-trigger\ndelete-forward-rule-trigger\nmap-over-forward-rule-triggers\nUSER INTERFACE\npositions-backward-question-matcher-can-skip\nadd-backward-question-trigger\nsay\ndelete-backward-question-trigger\nlocate-backward-question-trigger\nRULE CUSTOMIZATION PROTOCOL\nexpand-forward-rule-trigger\nexpand-backward-rule-trigger\ncompile-forward-rule-action\ncompile-backward-rule-action\npositions-forward-rule-matcher-can-skip\nlocate-forward-rule-trigger\nadd-backward-rule-trigger\ndelete-backward-rule-trigger\nlocate-backward-rule-trigger\nmap-over-backward-rule-triggers\nTMS PROTOCOL\njustify\nunjustify\nsupport\nnotice-truth-value-change\nDATABASE INTERFACE\ninsert\ntell\nclear\nask\nask-data\nask-rules ask-questions\nfetch\nuntell\nuninsert\npositions-backward-rule-matcher-can-skip\nnontrivial-tms-p\ncurrent-justification\nall-justifications\nQUESTION PROTOCOL\nmap-over-backward-question-triggers\n\nApril 2003\nIndex\nIndex\nAbout the Joshua Documentation, 2\nAbout the Joshua Language, 1\nAdding and Removing Joshua Question\nDefinitions, 55\nAdvanced Features of Joshua Rules, 69\nA Figure of the Joshua Protocol of Inference, 167\nAn LTMS Example, 78\nask function, 15\nAsking the User Questions, 55\nask query, 25\nBasic Joshua Dictionary, 91\nBasic Unification Facilities, 65\nChanging truth values without a TMS, 21\nclear function, 18\nClear Joshua Database Command, 106\nClear Joshua Database command, 18\nCompound Justifications, 74\nContinuation Argument, 92\nDatabase Interface, 7\nDatabase objects; see predication objects, 16\ndatabase predication, 16\nDatabase Predications Can Have Multiple\nJustifications, 74\nDefault Joshua Questions, 56\ndefine-predicate macro, 12\ndefine-predicate-method function, 35\nDefining Joshua Rules, 42\nDefinitions for the LTMS Example, 82\nDictionary Notes: Basic Joshua Dictionary, 87\nDifference between joshua:untell and\njoshua:unjustify, 159\ndifferent-objects function, 39, 67\nDisable Joshua Tracing Command, 122\nDisable Joshua Tracing command, 39\nDiscrimination net default database\nimplementation, 17\nDisplaying the database contents, 144\nEnable Joshua Tracing Command, 122\nEnable Joshua Tracing command, 39\nEntering and Displaying Predications in the\nDatabase, 15\n\nIndex\nApril 2003\nExamples of Using joshua:ask, 96\nExplaining Backward Chaining Support, 48\nExplaining Program Beliefs, 75\nExplain Predication Command, 123\nExtracting Parts of the Continuation with Accessor\nFunctions, 94\nFormatting Predications: the SAY Method, 35\nFree-floating predications, 16\nGetting Started with Joshua, 5\ngraph-query-results function, 25\ngraph-tms-support function, 76\nHow Backward Rules Work , 46\nHow Forward Rules Work, 43\nInstantiated logic variables, 34\nInstantiated query pattern, 25\nIntroduction, 1\nji:*data-discrimination-net* variable, 17\njoshua:*contradictory* variable, 107\njoshua:*false* variable, 125\njoshua:*true* variable, 151\njoshua:*unknown* variable, 159\njoshua::and, 32\njoshua:ask function, 91\njoshua:ask-database-predication function, 100\njoshua:ask-derivation function, 101\njoshua:ask-query function, 104\njoshua:ask-query-truth-value function, 104\njoshua:clear function, 105\njoshua:copy-object-if-necessary function, 107\njoshua:define-predicate macro, 109\njoshua:defquestion macro, 110\njoshua:defrule function, 115\njoshua:different-objects function, 121\njoshua:explain function, 123\njoshua:graph-query-results function, 126\njoshua:graph-tms-support function, 128\njoshua:known joshua predicate, 130\njoshua:make-predication function, 132\njoshua:map-over-database-predications macro,\njoshua::not, 32\njoshua::or, 32\njoshua:predication flavor, 136\njoshua:predicationp function, 136\nJoshua Predications, 11\njoshua:print-query function, 137\njoshua:print-query-results function, 137\njoshua:provable joshua predicate, 139\n\nApril 2003\nIndex\nJoshua Rule Basics At a Glance, 54\nJoshua Rules and Inference\n, 41\njoshua:say function, 142\njoshua:say-query function, 143\njoshua:succeed function, 148\njoshua:support function, 149\njoshua:tell function, 150\njoshua:undefine-predicate macro, 152\njoshua:undefquestion function, 153\njoshua:undefrule function, 153\njoshua:unify function, 154\njoshua:unjustify generic function, 158\njoshua:untell generic function, 159\njoshua:variant function, 163\njoshua:with-statement-destructured macro, 164\njoshua:with-unbound-logic-variables macro, 164\njoshua:with-unification macro, 165\nJustification, 72\nJustification and Truth Maintenance, 71\nJustifications,\nAssumptions, 73\nDeduction, 74\n:one-of, 74\nPremises, 73\nknown joshua predicate, 23\nlexical scope, 29\nList of Basic Joshua Symbols, 9\nList of Entries in the Basic Joshua Dictionary, 88\nLogic variables,\nlogic variables, 26\ninstantiated, 34\nuninstantiated, 34\nmake-predication function, 39, 67\nMiscellaneous Predication Facilities, 39\nmodeling in Joshua, 7\nModeling predicates, 14\noccur-check done by unifier, 154\nOverview of Joshua, 7\nPattern Matching in Joshua: Unification, 61\nPredicate definitions,\nand predications, 13\nPredicates, 12\npredication flavor, 39, 67\npredication objects, 16\npredicationp function, 39, 67\nPredications,\nand predicate definitions, 13\n\nIndex\nApril 2003\nPredications and Logical Connectives, 31\nPredications and Logic Variables, 26\nPredications and Predicates, 11\nPredications, free-floating, 16\nPredications, Truth Values, and the Database, 14\nPrimitive Justifications, 72\nprint-query function, 25\nprint-query-results function, 25\nPropositional-Logic-Based TMS (LTMS), 71\nprovable joshua predicate, 23\nQuerying the Database, 23\nquery pattern, 27\nRemoving a Database Predication with Untell, 18\nRemoving Joshua Rule Definitions, 50\nRemoving Predications From the Database, 17\nReset Joshua Tracing Command, 141\nRetracting Predications with joshua:unjustify, 84\nRevising Program Beliefs, 77\nRule Customization Protocol, 7\nRule Indexing Protocol, 7\nsay protocol function, 35\nsay-query function, 25, 36\nSetting up the Joshua Context and File Attributes,\nShow Joshua Database Command, 144\nShow Joshua Database command, 16\nmatching a specified pattern with, 31\nShow Joshua Predicates Command, 11, 145\nShow Joshua Rules Command, 146\nShow Joshua Tracing Command, 146\nShow Rule Definition Command, 147\nSome Basic Joshua Protocol Functions, 7\nSome Examples of Joshua Unification , 63\nStreamlining Typical Continuation Requests with\nConvenience Functions, 95\nsucceed function, 65\nsupport function, 75\ntell function, 15\nThe Joshua Reference Manual, 3\nThe User's Guide to Basic Joshua, 2\nThree-valued logic, 20\nTracing predications, 39\nTracing Predications, 37\nTracing Rules, 50\nTruth Maintenance System (TMS), 71\nTruth Maintenance System (TMS) Protocol, 7\nTruth tables, 23\nTruth Values, 20\n\nApril 2003\nIndex\nundefine-predicate function, 13\nUnification, 25\nUnification Rules, 61\nunify Function, 65\nUninstantiated logic variables, 34\nunjustify function, 84\nunjustify generic function, 18\nuntell generic function, 18\nUser Interface Protocol, 7\nUsing Joshua Within Lisp Code, 67\nVariables and Scoping in Joshua, 62\nvariant function, 66\nvirtual database concept, 15\nweeding out self-referential behavior, 121\nwith-statement-destructured macro, 39, 67\nused in say method, 36\nwith-unification macro, 65\nWriting Custom Questions, 58\n~\\\\SAY\\\\ format directive, 36"
    },
    {
      "category": "Resource",
      "title": "ps1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/1844b6c6f67a8beb9da88171b194e64a_ps1.pdf",
      "content": "6.871 Assignment 1: Minesweeper\nFebruary 28, 2005\nDUE: March 10, 2005, 9:35AM\nThe Problem\nThis is a knowledge engineering task, i.e., a task involving writing down the\nknowledge needed to be good at something. In this case the something is the\nMinesweeper game from Windows.\nYour job is to create the best set of rules to play minesweeper that you can.\nWe will run all the rule sets against a challenging set of examples and see if we\ncan crown one player the class champion.\nIn doing this assignment you should be sensitive to what it means to specify\nthe knowledge needed to be good at the game. That is,\n- be aware of how writing rules differs from writing a traditional program,\nwhat we referred to in the lectures as \"telling it what to know, not what\nto do.\"\n- be aware of what goes through your mind as you figure out the rules to\nbegin with, i.e., what the thought processes are in figuring out what you\nneed to know and in stating it explicitly. (Simply put, try to tune in to\nthe process of knowledge engineering.)\nWe have created SmartSweeper, an MSPDE - MineSweeper Player Devel\noper Environment. It will enable you to write, test, and debug a set of rules\nfor the game, using a syntax we call S4. You can see how well you do, and can\nimprove your rules until you're happy with them.\nTo Begin\nPlay several games of minesweeper.\nEven if you're played it before, play it\nagain, but try to be very aware of the patterns you are reacting to and the\nreasoning you are doing. If you've never played it before, you may actually have\nan advantage, as it's easier to be conscious of how you're thinking about the\ngame when it's still unfamiliar.\n\nS4: The SmartSweeper Specification Syntax\nAn S4 file contains a series of rules. A rule has a name (for your convenience),\na left hand side (or condition), and a right hand side (the action to take if the\nleft hand side is satisfied).\n{name\nLHS\n=>\nRHS\n}\nThe placement of the curly brackets with respect to line breaks and the use\nof the \"arrow\" (the two character sequence =>) are both crucial - the parser\nreading this file is not robust.\nA file of rules is simply one rule after another in the format shown above.\n3.1\nThe LeftHand Side\nA left hand side in turn consists of a pattern followed by zero or more conditions.\nLHS ::=\npattern\ncondition*\nA pattern is an nbyn array of characters describing a subsection of the\nboard. Legal characters are:\nM\nA labeled mine\nAny number\n\nAny square known not to be a mine\n?\nA square whose contents are unknown\n*\nWildcard, matches anything\naz\nA variable, matches any number.\n|\nA spot over the edge of the board (see below for example\nand further explanation).\nFor example, in the figure below, the top left square is unknown, the three\nsquares adjacent to it contain numbers, while the remaining five squares are\nknown to be clear. Note that all squares except the one at top left would match\na hyphen, as they are known not to be mines.\nNow consider pattern1:\n\n?\nThis pattern matches whenever we find a 3x3 group of tiles in which the\nmiddle tile is a 1, and there's only 1 unknown tile, to the upper left. It will for\nexample match the segment of the board shown previously:\nIt will also match this pattern anywhere on the board:\nAny number of variables can be used, and they can be referred to in the\nconditions. A condition is any (Boolean) scheme expression that must hold for\nthe LHS to match.\nIn addition to the variables you used in the LHS pattern, there are several\nvariables whose values are maintained for you by the system:\nmatchedunkns\nThe total number of unknown tiles\nmatched by all wildcards in the pattern\nmatchedmines\nThe total number of marked mines\nmatched by all wildcards in the pattern\ntotalminesremaining\nThe number of unmarked mines remain\ning anywhere on the board\ntotalnonminesremaining\nThe number of unmarked nonmine\nsquares remaining on the board\nJust so it's clear: at any moment, the total number of unknown squares on\nthe board = totalminesremaining + totalnonminesremaining.\nHere is an example of a more complex LHS, an example that includes a\npattern and two conditions:\n***\n*n*\n***\n(= matchedunkns n)\n(= matchedmines 0)\nThis pattern matches any time there is a numbered tile, bordering a set of\nwildcards that do not match any mines (because we specified matchedmines=0),\n\nand surrounded by a set of unknown squares equal to the number in the central\ntile. This applies to the example we saw before, and many others:\nThe | symbol matches tiles that are over the edge of the board. For example,\nconsider LHS 3.\n|||\n|n*\n|**\n(= matchedunkns n)\n(= matchedmines 0)\nThis pattern will match any time there is a number in the far upperleft\ncorner of the board that matches the number of adjacent unknowns. Note that\nwildcards can also be used to match tiles over the edge of the board.\n3.2\nThe RightHand Side\nOn the righthandside (RHS), you specify what action to take if the LHS\nmatches. This can be expressed in the form of another pattern, and/or a pre\ndefined action:\nRHS\n::=\nPATTERN\n| 'noactionpattern'\nDEFAULTACTION | 'nodefaultaction'\nDEFAULTACTION ::=\n'markunknowns' | 'clickunknowns'\nFor example, consider the LHS that we saw before:\n?\nA reasonable decision would be to mark the unknown tile as a mine, as\nexpressed in this pattern.\nM\nThis marks the square as a mine. The outcome is shown here:\n\nPutting together the LHS and the RHS, we have Rule 1:\n{Rule1\n?\n=>\nM\nnodefaultaction\n}\nThe final line specifies that no default action will be undertaken. The default\nactions refer to all tiles matched by a wildcard character * and offer a simple\nway to say that you want to mark all such tiles as mines, or click on them all.\nTo illustrate a rule with default actions, consider our Rule 2:\n{Rule2\n***\n*n*\n***\n(= matchedunkns n)\n(= matchedmines 0)\n=>\nnoactionpattern\nmarkunknowns\n}\nThe rule indicates that if a number n is surrounded by n unknown squares\nand no mines, then all of the unknowns must be mines.\nThis rule has no action pattern, but executes the default action mark un\nknowns, which labels all of the unknown squares as mines.\nMake sure you\nunderstand why this rule works (keep in mind the definition of an \"unknown\"\nsquare.)\nIf you have a different situation in which you believe all unknowns are clear,\nyou can use clickunknowns to click on all of them.\nSometimes you will want to click on one or more specific squares because\nyou believe them to be clear; to do this place Xs in the RHS pattern where you\nwant to click.\n\n3.3\nRules With Ineffective RHSs\nIf your rule action does not change the board in some way, the program will\nenter an infinite loop: It will see that the left side matches, then try to apply\nthe action. When it scans the board again, it will once again see that the left\nside matches, since nothing has changed. You can use the debug flags described\nbelow to identify and correct infinite loops.\nThe SmartSweeper Rule Interpreter\nSmartSweeper iterates through your list of rules and tries to match each rule\neverywhere on board (starting at the upperleft, but that's not particularly im\nportant). If the LHS ever matches, it applies the RHS, then returns to the top of\nthe list of rules and the upperleft corner of the board. If none of the rules match,\nSmartSweeper will \"guess\" a square that we guarantee is not a mine. When all\nnonmine squares have been clicked on, the game is over. SmartSweeper always\ntraverses the board top to bottom, then left to right.\nWe give you a free pass on guesses in order that your system can just keep\ntrying. Note that as a result even if you write no rules at all, SmartSweeper\nwill eventually guess all the nonmine tiles and you will win. As long as you\ndon't write any rules that could click on a mine, there is no way to lose the\ngame by hitting a mine. However, you will be scored on how few guesses your\nsystem uses (after all, the whole idea of a knowledgebased system is to know,\nnot guess.)\n4.1\nScoring\nYour system's score for a given board is computed as follows:\n- If you successfully complete the board in the time allotted:\nC\n=\nNumber of nonmine squares clicked\n(1)\nG\n=\nNumber of guesses\n(2)\nT\n=\nFraction of time allotted that remains after you finish (3)\nscore\n=\nC - G + T\n(4)\n- If click on a mine, or do not successfully complete the board in the time\nallotted:\nR\n=\nNumber of nonmine squares remaining\n(5)\nG\n=\nNumber of guesses\n(6)\nscore\n=\n-R - G\n(7)\n\nSince T is a fraction guaranteed to be less than one, the time complexity\nof two rulesets will only come into play when the rulesets use exactly the same\nnumber of guesses. However, you may still want to think about how to make\nyour rulesets faster. The allotted time for each board will be thirty seconds,\nwhich should be more than enough for any reasonable ruleset on the boards\nthat we will be using.\nHere is an example of the output of the PatternEval program:\n639.9612 pts, 300; Avg Guesses:\n12.666666 Avg Time:\n388.0\nThis says that a total score of 639.96 was awarded; 300 means that all three\nboards were completed successfully, with zero losses and zero timeouts. The\naverage number of guesses per board is also indicated, as is the average time\ntaken.\nRunning SmartSweeper\nYou will need a machine with a working Java Virtual Machine to run SmartSweeper.\nThe JVM is available at java.sun.com. Then you should get smartsweeper.jar\nand jscheme.jar (from the assignment web page) and put them in your classpath:\n- If you are on a Windows machine:\nOpen a DOS window and go to the directory where you put the two files\nnamed above. Set the classpath with this command:\nset classpath=%classpath%;smartsweeper.jar;jscheme.jar\nThis command will add the two new files to your existing classpath. Note\nthat you have to type the command above exactly as given. You can check\nto be sure the classpath has been set correctly using this command:\necho %classpath%\nThe result should be a line containing the string\nsmartsweeper.jar;jscheme.jar.\n- If you are on the server:\nsetenv CLASSPATH ''smartsweeper.jar:jscheme.jar:$CLASSPATH''\n\nOn either machine, a quick way to check that all is well is to run this com\nmand, which should print out a 15x15 board with 10% of the tiles marked as\nmines:\njava edu.mit.smartsweeper.Board 15 15 .1\nIf you get a Java error message saying something like\nException in thread main java.lang.NoClassDefFoundError:\nedu/mit/smartsweeper/Board\nit's likely your classpath has not been set correctly. Feel free to check with the\nTA.\n5.1\nEvaluating Your Rules\nUse this command to run your rule set:\njava edu.mit.smartsweeper.PatternEval [RULES] [DEBUGLEVEL] [BOARD]\nRULES specifies the file containing your rules.\nDEBUGLEVEL is an integer from 0 to 6 showing the level of debugging\nhelp you want.\n- 0 Simply prints your final score\n1 Prints the score on each board\n-\n- 2 Prints the rule usage statistics. Find out which rules are firing.\n- 3 Prints the board every time none of your rules apply. You can use this\nto increase the coverage of your rules.\n- 4 Prints each rule that fires. This will help you identify rules that cause\ninfinite loops.\n- 5 Shows the board every time a rule fires.\n- 6 Shows each rule it tries, including why the rule fails to match.\nBOARD is optional. It specifies a file containing a single board, or a directory\ncontaining a set of boards. If this argument is unspecified, it applies the rules\nto a single, randomly generated board of dimensions 30x30, with a 25% chance\nthat each tile is a mine.\n5.2\nPrinting Boards\nYou can print your own boards to evaluate your rules. PatternEval will evaluate\nyour rules using a randomly generated board, but you can compare the values\nof different rulesets more accurately by using a set of standard boards. In fact,\nthis is how the contest will work. To print a board, run the following:\n\njava edu.mit.smartsweeper.Board [HEIGHT] [WIDTH] [MINE_PCT]\nThe arguments should be obvious. You can send the output to a file, and\nthen use that file as an argument to PatternEval:\njava edu.mit.smartsweeper.Board 15 15 .1 > testboard1.txt\njava edu.mit.smartsweeper.PatternEval myruleset.txt 3 testboard1.txt\nNote that boards larger than 60x60 may take too long for many rulesets.\nPatternEval times out after 30 seconds, to avoid infinite loops. You will not be\nevaluated on any boards larger than 30x30.\nWhat To Turn In\nA) Your rules: When you think you've got the best set of rules you can cre\nate, email the TA the file containing your rules. We will crown the best ruleset\nas champion, with appropriate fanfare and a prize for the author.\nB) One page analysis. One of the points we made in an earlier lecture was that\nhaving the right language is one key to capturing knowledge. What is your\nevaluation of the language we gave you for writing Minesweeper rules? That is,\nwhat concepts in the language seemed powerful and useful. What if anything\ndid you think the language (and corresponding rule interpreter) was missing,\nthat would have made it easier to write rules?"
    },
    {
      "category": "Resource",
      "title": "written1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/b207620634bf420599811e655728f192_written1.pdf",
      "content": "6.871 SPRING 2005\nReading Summary: Lecture 5\nDue Thursday, February 15\nLecture 5: Case Study Class Discussion\nSviokla J, Smartwave: The Wave-Soldering Expert System, Harvard\nBusiness School Cases 187-062 and 187-063\nThis is a real problem, hence there is a lot of information in these descriptions; some of it\nis irrelevant to your needs; some of what you need may be missing. Your job is to find\nwhat you need, to ask about what you need but don't have, and to do the best analysis you\ncan.\nYou should concentrate on the first case, Smartwave (A), trying to determine to what\nextent it meets the criteria outlined in the lecture. Then look briefly at Smartwave (B), to\nsee what sorts of problems they faced in the next step of development.\nPrepare a brief written report on the case analysis to use in the class discussion. Your\nwrite-up should concentrate on Smartwave A and explain what aspects of the task made it\na good candidate and what aspects made it a poor candidate.\nYour write-up, one page at the most, should also provide a list and description of the\nproblems Smartwave encountered at the next stage (case B). What problems did they\nface and why?"
    },
    {
      "category": "Resource",
      "title": "ps2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/4ddc74a5d8415b6f17b5c292e510fda0_ps2.pdf",
      "content": "6.871 Problem Set 2\n\nHanded\n\nOut:\n\nThur\n\nMarch\n\n3 ,\n\nDue:\n\nThur\n\nApril\n\nJOSHUA and Rule-based Systems Exercises\nI. Introduction\nThis is an exercise designed to do two things: it will allow you to explore the behavior of a rule-based\nsystem in many ways and it will get you familiar with Joshua, a tool that many people found useful last\nterm for building their term project.\nThe Knowledge Base\nIn this exercise we'll be using a simple system that can help you to decide among six of the most common\ncategories of mutual funds. The system assumes that you have $2000 to invest and can help select among the\nfollowing possibilities:\n-\na money-market fund\n-\nan income fund (e.g., bonds)\n-\nan aggressive growth fund\n-\na mixed growth and income fund (abbreviated \"G&I\")\n-\na conservative growth fund\n-\na tax-free fund\n-\nnone (i.e., don't invest)\nThe complete set of rules in English is found at the end of this handout. To help you read them, we have used\nsome formatting conventions to help make their structure clear. Consider rule 12, for instance:\n12]\nif\nInvestment Goal = RETIREMENT and\nNumber Of Years To Retirement < 10\nthen\nCategory Of Fund = CONSERVATIVE GROWTH .8\nEach rule is expressed in terms of an if part (the premise) and a then part (the conclusion). In rule 12 there are\ntwo clauses in the premise and (as in all of our rules) one in the conclusion.\nEach clause in a rule is expressed in terms of an attribute, object, and its value. As a formatting convention,\nattributes are written as phrases with their first letters capitalized (e.g., Investment Goal, Number Of Years To\nRetirement, Category Of Fund); values are written in all capitals (RETIREMENT, 10, CONSERVATIVE\nGROWTH). The first clause thus asks whether the attribute Invest Goal has the value RETIREMENT, or, in\nsmoother English, \"the goal for this investment is to fund your retirement.\" For ease of reading the object is\noften left implicit, e.g., in this case investment goal of user is retirement.\nPutting the whole rule in somewhat better English, it says:\nif the goal for this investment is to fund your retirement, and\nthe number of years until you retire is less than 10,\nthen the category of fund to select is the conservative growth funds.\nIn Joshua the rule looks somewhat different; we'll come to that below. Note in particular that the rule numbers\nin the handout at the end are for convenience. Joshua names rules rather than numbers them.\n- 1 -\n\n6.871 Problem Set 2\nII. Getting Started\nYou will be using the Allegro Common Lisp interpreter on the server and the Joshua knowledge base found\non the assignments page. We'll start by familiarizing you with Allegro Common Lisp on the server and Joshua.\n1. Log onto the server.\n2. server% add acl_v6.2-alisp 6.871\nThis will attach the Allegro Common Lisp locker for the version we will be using, and the course\nlocker.\n3. Download from the assignments page the knowledge base file invest-josh-kb.custom.lisp.\nPut this in your local directory. This will make you a local copy of the example knowledge base.\n4. server% chmod 700 ~/invest-josh-kb.custom.lisp\nThis will just make sure that the file is readable.\n5. server% joshua8 &\nDepending on server load, this may take awhile. An XEmacs will start and it will start up a lisp\ninferior with all the Joshua code in it. Eventually, you'll see a CL-USER(1): prompt in the XEmacs\nwindow (the one with the *common-lisp* label).\n6.\nCL-USER(1): (clim-env:start-clim-environment)\nA small window called Navigator will pop up.\n7. In the Navigator window, select Lisp Listener from the Tools menu.\nA Lisp Listener window will be raised, and you will see a ⇒ prompt. (Yes, windows all over the\nplace.)\n8. ⇒:joshua syntax yes\nThis command is necessary to enable the square bracket predication syntax. If you ever in the future\nforget to do this before compiling your project code, you will get an error message concerning a\ncomma not being inside a backquote.\n9.\n⇒:edit file ~/invest-josh-kb.custom.lisp\nThis will open the code in a buffer in your XEmacs window.\n10. Select buffer from the Compile other submenu of the ACLFile menu in XEmacs\n11. Watch the status bar at the bottom of XEmacs for the message Compiling... done.. At this point,\nreturn to your Lisp Listener window.\n12. Now you can try asking what category of fund someone should invest in. Just type the following\ncommand:\n⇒ (ask [category-of-fund ben-bitdiddle ?x] #'print-answer-with-certainty)\nYou are of course free to inquire about people other than Ben Bitdiddle, our canonical test subject.\nSee notes at the end of the handout for how to handle errors and the debugger.\n- 2 -\n\n6.871 Problem Set 2\nIII. Using Joshua: Predicates and Predications\nEvery fact in Joshua's database is called a predication. A predication a list enclosed by square brackets.\nFor example:\n[FATHER-OF JOHN MARY]\nmight mean that JOHN is the father of MARY. We define predicates (what we have called \"attributes\" in\nclass) using the define-predicate macro. To define a simple predicate, all we have to do is this (as you'll\nsee below, the prompt character for Joshua is a right-arrow):\n⇒ (define-predicate father-of (father child))\nThe first argument to the macro is the name of the predicate, and the second is an argument list. There\nis an optional third argument to the macro, which is a list of types for the predicate to inherit from. This is\nan advanced feature you don't have to know about right now, but if you are interested, you can see by\nexamining the code that accompanies this problem set how predicates that have certainty factors are\ndefined, inheriting from a base class that provides certainty factor support.\nTo undefine a predicate, simply execute this command:\n⇒ (undefine-predicate 'father-of)\nIV. Using Joshua: TELL-ing things\nThe first and most simple thing you can do with Joshua is to tell it facts. Take, for example the following\ncode:\n⇒(tell [HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES])\nWe can also tell things that are justified by certainty factors, like so:\n⇒(tell [HAS-LIFE-INSURANCE BEN-BITDIDDLE YES] :justification '((user-input 0.8)))\nNote that we can replace the 0.8 with any certainty factor we choose, and that the symbol USER-\nINPUT is just a notation to let us to know where the justification comes from; you can write anything\nthere.\nUNTELL-ing things is also possible, for example:\n⇒ (untell [HAS-LIFE-INSURANCE BEN-BITDIDDLE YES])\n(Some people have reported that UNTELL can get stuck in an infinite loop; we're trying to track\ndown that bug.)\nV. Using Joshua: Seeing what it knows\n⇒:show joshua database\nTrue things\n[HAS-LIFE-INSURANCE BEN-BITDIDDLE YES]\n- 3 -\n\n6.871 Problem Set 2\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\nFalse things\n\"None\"\nSo we see that Joshua knows three facts right now. In the Lisp Listener, you can middle click on any one of\nthem to get an explanation, along the lines of the HOW command in MYCIN, of how Joshua inferred that fact.\nYou can also access this explanation by issuing the following command:\n⇒ :explain predication [HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\nYou'll get output that looks like this:\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES] is true It is a PREMISE\nThis is a rather simple explanation, because we TELL-ed (told) this fact to Joshua at top level in the Lisp\nListener. Explanations of the results of the investment advisor code will be more interesting.\nVI. Using Joshua: ASK-ing things\nThe most simple form of ASK is illustrated below:\n⇒ (ask [HAS-HEALTH-INSURANCE ?x ?y] #'print-query)\nThis command simply runs through the database and executes the function print-query on every\npredication it finds that matches the pattern. Note that ?x and ?y are logic variables that match anything and\nthat are not necessarily equal. The output of the command in this example is:\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\nIf I were to have told Joshua additionally that ALYSSA-P-HACKER doesn't have health insurance, we'd\nhave seen the following output:\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\n[HAS-HEALTH-INSURANCE ALYSSA-P-HACKER NO]\nInterestingly enough, we can have ASK call any function that we want on database predications that match\nthe pattern. What if we were to issue the following command:\n⇒ (ask [HAS-HEALTH-INSURANCE ?who ?value]\n#'(lambda (backward-support)\n(if (eq ?value 'yes) (format t \" ~A has health insurance.\" ?who)\n(format t \" ~A does not have health insurance.\" ?who))))\nWe get the following response from the system:\nALYSSA-P-HACKER does not have health insurance.\nBEN-BITDIDDLE has health insurance.\nOne more fun thing to do is to try this:\n⇒ (ask [HAS-HEALTH-INSURANCE ?x ?y]#'print-answer-with-certainty)\nNow we can see the certainty factors:\n[HAS-HEALTH-INSURANCE ALYSSA-P-HACKER NO] 1\n- 4 -\n\n6.871 Problem Set 2\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES] 0.8\nVII. Using Joshua: Defining rules\nLook at the following rule definition from the example code:\n(defrule full-insurance-coverage (:backward :certainty 1.0 importance 97)\nif [and [HAS-LIFE-INSURANCE ? who YES]\n[HAS-HEALTH-INSURANCE ? who YES]]\nthen [ADEQUACY-OF-INSURANCE-COVERAGE ?who ADEQUATE])\ndefrule is a defining form that makes rules. Its first argument is the name of the rule and its second\nis a list of keywords. Possible keywords include :backward, for backward chaining rules, and :forward\nfor forward chaining rules. You can't use both at the same time. The :certainty keyword specifies that\nthe next element of the list is the rule's certainty factor. The :importance keyword specifies that the\nnext element of the list is the rule's importance, which is used to artificially control which rules are\ntried first. A higher importance value means that the rule is tried before rules that have lower\nimportance values. In general you can ignore the importance keyword and number; it's simply\nevidence that Joshua has more mechanism than needed for this problem set.\nThe remainder of the form is the body of the rule. if and then are fixed tokens that precede the if\nand then rule clauses, respectively.\nLogic variables are bound for the duration of the rule, so ?who in the if clause must be the same as\n?who in the then clause.\nThis is a backward chaining rule and so it triggers when we ASK things of Joshua. If we were to:\n⇒ (ask [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE\n#'print-answer-with-certainty)\nSince we know [HAS-LIFE-INSURANCE BEN-BITDIDDLE YES] and [HAS-HEALTH-\nINSURANCE BEN-BITDIDDLE YES], we can conclude the following:\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE] 0.8\nNote that there would be no output if we could not conclude the fact we are asking for from what is in\nthe database. Why is the certainty factor 0.8? Let's see what Joshua knows:\n⇒:show joshua database\nJoshua now knows 3 facts:\nTrue things\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n[HAS-LIFE-INSURANCE BEN-BITDIDDLE YES]\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\nFalse things\n\"None\"\nLet's have Joshua explain how it concluded that Ben's coverage was adequate:\n⇒ :explain predication [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n- 5 -\n\n6.871 Problem Set 2\nRecall that middle clicking on [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\nin the Lisp Listener will yield the same output:\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE] is true\nIt was derived from rule FULL-INSURANCE-COVERAGE\n[HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES] is true\nIt is an USER-INPUT\n[HAS-LIFE-INSURANCE BEN-BITDIDDLE YES] is true\nIt is a PREMISE\nThe certainty factor of 0.8 arises because 0.8 was the minimum certainty factor in the AND clause in the\nrule's premise. The certainty factor of the rule itself was 1.0, so the conclusion's certainty is 0.8.\nVIII. Seeing what Joshua is doing\nYou can enable tracing in Joshua by doing the following command:\n⇒ :enable joshua tracing all\nWatch what happens when we ask the same question as before. Assume we have UNTELL-ed the\nconclusion; if we hadn't, the rule would not have been triggered at all.\n⇒ (ask [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n'print-answer-with-certainty)\n> Asking predication [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n> Trying backward rule HEALTH-INSURANCE-COVERAGE (Goal... )\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE VALUE]\n> Asking predication [HAS-HEALTH-INSURANCE BEN-BITDIDDLE NO]\n> Exiting backward rule HEALTH-INSURANCE-COVERAGE\n> Trying backward rule LIFE-INSURANCE-COVERAGE (Goal... )\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE VALUE]\n> Asking predication [HAS-LIFE-INSURANCE BEN-BITDIDDLE NO]\n> Exiting backward rule LIFE-INSURANCE-COVERAGE\n> Trying backward rule FULL-INSURANCE-COVERAGE (Goal... )\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE VALUE]\n> Asking predication [HAS-LIFE-INSURANCE BEN-BITDIDDLE YES]\n> Succeed in Asking Predication [HAS-LIFE-INSURANCE BEN-BITDIDDLE YES]\n> Asking predication [HAS-HEALTH-INSURANCE BENDITDIDDLE YES]\n> Succeed in Asking Predication [HAS-HEALTH-INSURANCE BEN-BITDIDDLE YES]\n> Succeeding backward rule FULL-INSURANCE-COVERAGE\n> Justifying: [ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n<--Rule: FULL-INSURANCE-COVERAGE\n> Looking for more backward rule matches FULL-INSURANCE-COVERAGE\n(Goal... )[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n> Exiting backward rule FULL-INSURANCE-COVERAGE\n> Succeed in Asking Predication\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE]\n[ADEQUACY-OF-INSURANCE-COVERAGE BEN-BITDIDDLE ADEQUATE] 1.0\nTo turn off this feature, use:\n- 6 -\n\n6.871 Problem Set 2\n⇒ :disable joshua tracing all\nIX. Things to note while running the example code\nIn response to any question, you are allowed to type the following characters. Typing Control+Shift+R prints\nwhat rule is running. Typing Control+Shift+W is like asking WHY in MYCIN; it explains what the system is\ntrying to accomplish by asking the current question and running the current rule. Typing Control+Shift+H\nprints a help message that reminds you of what these keys do.\nEach of these key combinations will also print out a message containing the legal answers (or a description\nlike \"a number\"). Any possible answer it prints out is mouse sensitive, so try just clicking on the answer you\nwant. The question prompt also provides completions, so try just typing enough characters for your response\nso be unambiguous, and then hitting the space bar.\nTry executing the following command to see a graph of rule calling relationships:\n⇒ :graph rules category-of-fund\nIf you want to write this graph to a file, try the following:\n⇒ :graph rules category-of-fund :to file foo.ps\nX. Using Joshua: Further Reading\nFor more information about Joshua, see the Joshua Users Guide and the Joshua Reference Manual, both of\nwhich are posted on the assignments page.\nXI. Exercise 0: Make sure you can run Joshua\nThe first part of the assignment is to make sure you can run Joshua using the instructions we have given you.\nDo it today! See the course staff immediately if there is any problem whatsoever; we will do our best to assist\nyou. Please do not wait to try Joshua on the server. As the due date for this assignment draws near, our ability to\nhelp you will be lessened.\nXII. Exercise 1: Run the following examples using the knowledge base you loaded above.\nTry the following example. The user, CLYDE:\nis 42 years old.\nhas health and life insurance.\nhas a current savings balance of $20,000.\nearns a monthly salary of $3,000.\nis not covered by a pension plan, but does have an IRA.\nhas one child, age 12, who does not have a scholarship or a trust fund,\nis not eligible for school loans, and would like to attend a school with\nexpensive tuition.\ndoes not currently own a house, but would like to.\nRecall that you begin the consultation by executing the following command at the top level of the Lisp\nListener:\n⇒ (ask [CATEGORY-OF-FUND CLYDE ?X] #'print-answer-with-certainty)\nPrepare a transcript of the dialog, and list the answer(s). For each answer, use Joshua's Explain Predication\nfeature to find out HOW the answer was derived. Save this transcript and turn it in. The easiest way to do\n- 7 -\n\n6.871 Problem Set 2\nthis is with the command :Copy Output History <filename> which will copy everything that has\nappeared in the buffer so far to <filename>. You need only do this once, at the end of the problem set, then edit\nthe file so it contains only the material you are to turn in. If you want to be cautious, however, do it\nperiodically with different file names so you can be sure not to lose any work.\nAlso try the following example. The user, DUDLEY:\nis 70 years old.\ndoes not have health insurance.\ndoes have life insurance.\nhas a current savings balance of $20,000.\nearns a monthly salary of $3,000.\nis covered by a pension plan.\nhas no children.\ncurrently owns a home.\nFor DUDLEY as well, prepare a transcript of the dialog, and list the answer(s). For each answer, use\nJoshua's Explain Predication feature to find out HOW the answer was derived. Print these things out and\nturn them in.\nXIII. Exercise 2: Practice in Knowledge Engineering\nTry the following example. The user, ETHYL:\nhas health and life insurance.\nhas a current savings balance of $20,000.\nearns a monthly salary of $3,000.\nis covered by a pension plan.\nhas one child, age 23.\nis age 68.\nowns a home.\nIf you examine the dialog carefully, you'll see that the system asks about College Tuition. But with the\nonly (and hence youngest) child aged 23, rule 46 would indicate that there are no children headed for college.\nSo why does it ask about tuition?\nSee if you can determine why. Use Joshua's tracing mechanism to help you determine how the system is\nreasoning at that point. Try drawing a diagram that shows the tree structure produced by the backward\nchaining; this may help you see the logic being used and see the problem.\nThen see if you can fix the problem. One good approach is to modify the rule that causes the problem.\nAnother is to try introducing a new rule. Specify a solution along both routes. Comment on both solutions. Is\none better than the another, in the sense of following the \"spirit\" of knowledge engineering and rule-writing?\nYou may want to try implementing your solutions by augmenting the program's knowledge base. You can\ntest whether they work and test their sensitivity and robustness to various inputs. Turn in your explanation\nand answers to the questions, and your solution to the problem we are seeing. If you drew a diagram or\nwrote some Joshua code, show that as well.\nXV. Exercise 3: Looking at Rules\nTake a look at the rule goal-invest-spare-cash. What strikes you about it? How does the rule\ncompare to the other rules in the knowledge base? Why is this rule a good or bad example of knowledge\nengineering? Support your answer with information from the lectures and the readings. What is the rule trying\nto conclude? Can you think of a better way to do it? Turn in your answers to the questions. Please be concise.\n- 8 -\n\n6.871 Problem Set 2\nWhat To When Something Breaks\nFor example, suppose you find the system responding to you like this:\nWhen you find the Lisp listener window reacting like this, use your mouse to select the first ABORT (the one\nthat says Return to Lisp Listener). This will put you back to the top level of the listener and you can start again.\nKeep in mind that Joshua keeps its database, so that questions about an individual answered in the run\ninterrupted above will still be there. As a result the system does not re-ask those questions; it continues from\nwhatever the next question is.\nSome times you get thrown back into the Xernacs window, with a list of choices that looks something like:\nWhen this happens you reply using :continue (that is, colon-continue) and one of the numeric choices. Usually\nthe correct choice is the one that says Restart CLIM Lisp listener. In the example above, it's #8 so you would\ntype :continue 8. Then you can go back to the Lisp listener window and continue working.\n- 9 -\n\n6.871 Problem Set 2\nTHE KNOWLEDGE BASE\nRULES ABOUT: adequacy of Basic Insurance Coverage\n1]\nif\nHave Health Insurance = NO\nthen\nBasic Insurance Coverage = INADEQUATE 1.0\n2]\nif\nHave Life Insurance = NO and\nShould Have Life Insurance = YES\nthen\nBasic Insurance Coverage = INADEQUATE 1.0\n3]\nif\nHave Health Insurance = YES and\nHave Life Insurance = YES\nthen\nBasic Insurance Coverage = ADEQUATE 1.0\nRULES ABOUT: whether you Should Have Life Insurance\n4]\nif\nMarried = YES or\nHave Children = YES\nthen\nShould Have Life Insurance = YES 1.0\nRULES ABOUT: which Category Of Fund to choose\n10]\nif\nBasic Insurance Coverage = INADEQUATE\nthen\nCategory Of Fund = NONE 1.0\n11]\nif\nCurrent Savings < 6 * Monthly Salary\nthen\nCategory Of Fund = MONEY MARKET 1.0\n12]\nif\nInvestment Goal = RETIREMENT and\nNumber Of Years To Retirement < 10\nthen\nCategory Of Fund = CONSERVATIVE GROWTH .8\n13]\nif\nInvestment Goal = RETIREMENT and\nNumber Of Years To Retirement > 10 and\nNumber Of Years To Retirement < 20\nthen\nCategory Of Fund = G&I .8\n14]\nif\nInvestment Goal = RETIREMENT and\nNumber Of Years To Retirement > 20\nthen\nCategory Of Fund = AGGRESSIVE .8\n15]\nif\nInvestment Goal = CHILDREN'S EDUCATION and\nAge Of Oldest Child < 7\nthen\nCategory Of Fund = G&I .8\n- 10 -\n\n6.871 Problem Set 2\n16]\nif\nInvestment Goal = CHILDREN'S EDUCATION and\nAge Of Oldest Child > 7\nthen\nCategory Of Fund = CONSERVATIVE GROWTH .8\n17]\nif\nInvestment Goal = HOME OWNERSHIP\nthen\nCategory Of Fund = G&I .9\n18]\nif\nInvestment Goal = CURRENT INCOME\nthen\nCategory Of Fund = INCOME .9\n19]\nif\nInvestment Goal = INVEST SPARE CASH and\nRisk Tolerance = LOW\nthen\nCategory Of Fund = CONSERVATIVE GROWTH .9\n20]\nif\nInvestment Goal = INVEST SPARE CASH and\nRisk Tolerance = MEDIUM\nthen\nCategory Of Fund = G&I .8\n21]\nif\nInvestment Goal = INVEST SPARE CASH and\nRisk Tolerance = HIGH\nthen\nCategory Of Fund = AGGRESSIVE .8\n22]\nif\nInvestment Goal = INVEST SPARE CASH and\nRisk Tolerance = MEDIUM and\nTax Bracket = HIGH\nthen\nCategory Of Fund = TAX-FREE .9\nRULES ABOUT: what your Life Stage is\n23]\nif\nYour Age > 65\nthen\nLife Stage = RETIRED .8\n24]\nif\nYour Age <= 65\nthen\nLife Stage = NOT-RETIRED .8\nRULES ABOUT: what Investment Goal to select\n31]\nif\nPension = NO and\nIndividual Retirement Account = NO\nthen\nInvestment Goal = RETIREMENT 1.0\n32]\nif\nHave Children = YES and\nChildren Headed For College = YES and\nChildren's Education Already Funded = NO\nthen\nInvestment Goal = CHILDREN'S EDUCATION .8\n33]\nif\nOwn Home = NO and\nWant Home = YES\nthen\nInvestment Goal = HOME OWNERSHIP .8\n- 11 -\n\n6.871 Problem Set 2\n34]\nif\nLife Stage = RETIRED\nthen\nInvestment Goal = CURRENT INCOME .9\n35]\nif\nHave Pension = YES\nthen\nHas Retirement Vehicle = YES 1.0\n36]\nif\nHas IRA = YES\nthen\nHas Retirement Vehicle = YES 1.0\n37]\nif\nOwn Home = YES or Want Home = NO, and\nPension = YES or Individual Retirement Account = YES, and\nHave Children = NO or Children's Education Already Funded = YES, and\nLife Stage = NOT-RETIRED\nthen\nInvestment Goal = INVEST SPARE CASH .8\nRULES ABOUT: what your Risk Tolerance is\n41]\nif\nthen\nEnjoy Gambling = YES\nRisk Tolerance = HIGH .8\n42]\nif\nthen\nBudgeting Very Important = YES\nRisk Tolerance = LOW .8\n43]\nif\nthen\nWorry About Money At Night = YES\nRisk Tolerance = LOW .8\n44]\nif\nthen\nBudget But Splurge Sometimes = YES\nRisk Tolerance = MEDIUM .8\nRULES ABOUT: whether you have Children Headed For College\n45]\nif\nHave Children = YES and\nAge Of Youngest Child < 16\nthen\nChildren Headed For College = YES 1.0\n46]\nif\nHave Children = YES and\nAge Of Youngest Child >= 16\nthen\nChildren Headed For College = NO 1.0\n47]\nif\nHave Children = NO\nthen\nChildren Headed For College = NO. 1.0\nRULES ABOUT: whether Children's Education Already Funded\n- 12 -\n\n6.871 Problem Set 2\n51]\nif\nHave Children = YES\nCollege Tuition Level = CHEAP\nthen\nChildren's Education Already Funded = YES 1.0\n52]\nif\nHave Children = YES\nChildren Have Scholarship = YES\nthen\nChildren's Education Already Funded = YES 1.0\n53]\nif\nHave Children = YES\nChildren Eligible For Loans = YES\nthen\nChildren's Education Already Funded = YES 1.0\n54]\nif\nHave Children = YES\nChildren Have Trust Fund = YES\nthen\nChildren's Education Already Funded = YES 1.0\n55]\nif\nHave Children = YES\nChildren Have Scholarship = NO and\nChildren Eligible For Loans = NO and\nChildren Have Trust Fund = NO\nthen\nChildren's Education Already Funded = NO. 1.0\n- 13 -"
    },
    {
      "category": "Resource",
      "title": "written2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/5b7e27ea49b2147b41808007e8115dc0_written2.pdf",
      "content": "6.871 SPRING 2005\nReading Summary: Lecture 6\nDue Thursday, February 17\nPlease answer the following questions in at most one page.\nLecture 6: Rule-Based Systems\nR. Davis paper:\n1) MYCIN's task:\na) What was the task?\nb) Why was that particular domain chosen?\nc) What made it suitable for a knowledge-based system?\nd) What made it suitable for a rule-based system?\n2) What are the basic strengths and weaknesses of rule-based systems, as reported in this\npaper?"
    },
    {
      "category": "Resource",
      "title": "written3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/4ff47b473a16d896790cd890be034d85_written3.pdf",
      "content": "6.871\nReading Summary: Lecture 7\nDue Thursday, February 24, 9:35am\nPlease answer the following questions in at most half a page.\nLecture 7: Semantic Nets\nQuillian thought of his system as an electronic dictionary. Other semantic networks\nare also described as containing definitions.\n1. How does Quillian's notion of \"a definition\" differ from that of the later systems?\n2. What are the strengths and weaknesses of each?"
    },
    {
      "category": "Lecture Notes",
      "title": "lect01_intro.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/2dfcfa88dc81856d86d21e0d67017e94_lect01_intro.pdf",
      "content": "Course Organization\nSpirit of the Undertaking\n6.871: Knowledge-Based Systems\nSpring 2005\nRandall Davis\n\nLogistics\n- Info sheet, syllabus\n- Personnel:\n- Lecturers: Davis (and friends)\n- Course notes:\n- 1st installment ready now\n- You are responsible for what happens in lecture.\n- No open laptops.\n6.871 - Lecture 1\n\nCourse Character\n- Learning how to do it\n- Largely engineering examples\n- The need to see beneath the surface\n- Background\n- 6.034 (or equivalent)\n- Considerable high level language experience\n6.871 - Lecture 1\n\nCourse Character\n- Course continually being improved\n- Feedback of all sorts is enormously helpful\n- Question, suggestions encouraged\n6.871 - Lecture 1\n\nCourse Organization\n- Lectures: slide copies (typically)\n- Extensive reading assignments: read them\n(really)\n- Ask questions\n- Homework\n6.871 - Lecture 1\n\nCourse Organization\n- Term project: alone or in pairs (not triples)\n- Tools: Joshua, KAPPA-PC, M4, GRASS\n- The nth International Workshop on KBS\n- Oral report and individual term paper\n- Clear, concise, 20-30 pp.\n- What did you learn?\n- Course grade based on term project,\nhomework, lecture participation\n6.871 - Lecture 1\n\nCourse Outline\n- Intro & Background\n- The Spirit and Pragmatics of KBS\n- Knowledge Representations and\nReasoning\n- Problem Solving Paradigms\n- Research Issues\n- Project Presentations\n6.871 - Lecture 1\n\n(Why) is this interesting?\n- Knowledge-Based Systems work\n- DENDRAL, MYCIN, INTERNIST-I: comparable to\nhuman experts\n- PROSPECTOR: $100m worth of molybdenum\n- R1/XCON: from 85% to 97.5% performance\n- American Express: 20% operational savings,\n$10M's in added revenue\n- DuPont\n- Manufacturer's Hanover: Inspector\n- The clever (?) paper clip\n6.871 - Lecture 1\n\nIn 1995, in Singapore...\nCrime Case Closed Infamous Crimes\nNick Leeson and Barings Bank\nThe week before Nick Leeson disappeared he had kept\nthrowing up at work.\nColleagues did not know why but were soon to find out.\nThe ego of a 28-year-old trader on the Singapore Monetary\nExchange and the greed and stupidity of a 233-years-old bank\nhad combined to distroy an investment empire and in the\nprocess stunned the world.\n6.871 - Lecture 1\n\nTrader Is Said to Have Defrauded Irish Bank of $750 Million\nDublin, Feb. 6 - A trader for the Baltimore - based treasury arm of Allfirst,\nan American retail subsidiary of Allied Irish Banks P.L.C. (news/quote),\ndefrauded Ireland's largest financial institution of $750 million over the last\nyear through bogus foreign exchange trading, and he has since\ndisappeared, the bank said today.\nThe 40 - year - old trader, John Rusnak, failed to show up for work on\nMonday morning and has not been seen since he was interviewed about the\nmatter at Allfirst offices on Friday. The Federal Bureau of Investigation\ninterviewed his wife over the weekend, and the bank believes he is still in\nthe Baltimore area.\nThe suspected theft would be the largest international fraud case since\n1995, when Nick Leeson gambled $1.17 billion on foreign exchange trades\nin Singapore and set off the collapse of England's historic Barings Bank.\nAllied Irish is unlikely to suffer the same fate; instead the bank will see\nprofits after taxes for 2001 shrink to 401 million euros from 997 million euros\nin the previous year.\n6.871 - Lecture 1\n\n(Why) is this interesting?\n- Applied AI leads to advances in basic\nscience\n- Rule-based systems\n- Causal reasoning\n- Reasoning at multiple levels: Reasoning\nunder uncertainty\n- Case-based reasoning\n6.871 - Lecture 1\n\n(Why) is this interesting?\n- Applied AI leads to advances in basic\nscience\n- Knowledge acquisition/learning\n- Explanation\n- Knowledge sharing\n6.871 - Lecture 1\n\nCharacter of the problems\nattacked\n- Balancing your checkbook vs.\nGetting out of the supermarket\n- Telling it what to do vs.\nTelling it what to know\n- Write down some relevant knowledge\n- Advice, not a procedure\n6.871 - Lecture 1\n\nCharacter of the problems\nattacked\n- Balancing your checkbook vs.\nGetting out of the supermarket\n- Telling it what to do vs.\nTelling it what to know\n- Write down some relevant knowledge\n- Advice, not a procedure\nKnowledge leads to action,\nBut knowledge is more fundamental\n-The barge story\n6.871 - Lecture 1\n\nWhat are knowledge-based\nsystems\n- Knowledge based vs.?\n- Wherein arises intelligence?\n- GPS and the lessons of the 60's\n- Improvements more often involve bringing to\nbear specific knowledge on selected\nsubproblems of an application than\ndeveloping a new complete theory for it.\n6.871 - Lecture 1\n\nWhat are knowledge-based\nsystems\n- Wherein arises expertise?\n- KEY IDEA:\n| | EXPERT - AVERAGE PERSON | | = KNOWLEDGE\n- KEY IDEA:\nexplicit representation of that knowledge\n- (The barge story again)\n6.871 - Lecture 1\n\nIntellectual Origins\n- What makes for expertise?\n- Can human thought be formalized?\n- (How) Can we get a machine to be smart?\n- And what is AI, anyway?\n6.871 - Lecture 1\n\nIntellectual Origins\n- AI is a great intellectual adventure\n- Cf cosmology, physics, biology\n- AI is the exploration of the design space of\nintelligences\n- AI is making machines that solve problems\nrequiring intelligence\n- AI is applied epistemology\n6.871 - Lecture 1\n\nIntellectual Origins\n- 2000 years ago\n- Aristotle and the art of rhetoric\n- The syllogisms\n- 17th century: Leibniz and the \"algebra of\nthought\"\n6.871 - Lecture 1\n\nIntellectual Origins\n- 19th century: Boole's logic and The Laws\nof Thought\nTo see this image, please visit:\nhttp://images.google.com/images?q=cgboole.gif\n6.871 - Lecture 1\n\nIntellectual Origins\n- 19th century: Babbage and the Analytical Engine.\nLady Lovelace conjectured that it \"would weave\nalgebraic patterns the way the Jacquard loom weaved\npatterns in textiles.\"\nPortrait of Charles Babbage\nTo see this image please visit:\nhttp://images.google.com/images?q=charles_babbage.full.jpg\n6.871 - Lecture 1\nPortrait of Lady Lovelace\nhttp://images.google.com/images?q=ladyada-big.gif\nTo see this image please visit:\n\nImage removed due to copyright considerations.\n6.871 - Lecture 1\n\nImage removed due to copyright considerations.\n6.871 - Lecture 1\n\nIntellectual Origins\n- 2000 years ago\n- Aristotle and the art of rhetoric\n- The syllogisms\n- 17th century: Leibniz and the \"algebra of thought\"\n- 19th century: Boole's logic and The Laws of Thought\n- 19th century: Babbage and the Analytical Engine\n- 20th century: Shannon's insight about switching circuits\n- 20th century: Turing's ideas about thought and computation\n6.871 - Lecture 1\n\nIntellectual Origins\n- What is it we seek to embody in the\nmachine?\n- Mind?\n- Thought?\n- Intelligence?\n- Rationality?\n- Neuroanatomy?\n6.871 - Lecture 1\n\nIntellectual Origins\n- And how do we know whether we got\nthere?\n- Can a machine think?\n- Can the person next to you think?\n6.871 - Lecture 1\n\nWhat is\n- Thought?\n- Intelligence?\n- Rationality?\n- Knowledge?\n6.871 - Lecture 1\n\nThe Physical Symbol System\nHypothesis\n- A physical symbol system has the necessary and\nsufficient means for general intelligent action\nPhysical Symbol System consists of:\n- A set of symbols\n- A set of expressions (symbol structures)\n- A set of procedures that operate on expressions to\nproduce other expressions: Create, Modify, Reproduce\nand Destroy\n6.871 - Lecture 1\n\nThe Physical Symbol System\nHypothesis\nThe Knowledge Level Hypothesis: There exists a distinct\ncomputer systems level which is characterized by\nknowledge as the medium and the principle of rationality\nas the law of behavior.\nPrinciple of rationality: if an agent has knowledge that one\nof its actions will lead to one of its goals, then the agent\nwill select that action.\n(Roughly: content independent of form)\n6.871 - Lecture 1\n\nThe Knowledge Level\nHypothesis\nKnowledge: Whatever can be ascribed to\nan agent, such that its behavior can be\ncomputed according to the principle of\nrationality.\n- Knowledge is closely linked to rationality.\n- Knowledge is competence-like notion.\n6.871 - Lecture 1\n\nCharacter of Knowledge\n- Most of what we know knowledge is non-\nnumeric.\n- Most of what we know is heuristic.\n- What's certain?\n- What's the alternative?\n6.871 - Lecture 1\n\nCharacter of Knowledge\n- Empirical, experiential knowledge: rules of\nthumb, heuristics\n- Design knowledge: theory, model, causal\nunderstanding\n- Common-sense knowledge\n6.871 - Lecture 1\n\nCurrent State\nKBS = | | Expert Knowledge - Common\nSense | |\n6.871 - Lecture 1"
    },
    {
      "category": "Lecture Notes",
      "title": "lect01_intro1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/45d32f86dec5685e9c9fcbf8b61d804b_lect01_intro1.pdf",
      "content": "Course Organization\nSpirit of the Undertaking\n6.871: Knowledge-Based Systems\nSpring 2005\nRandall Davis\n\nLogistics\n- Info sheet, syllabus\n- Personnel:\n- Lecturers: Davis (and friends)\n- Course notes:\n- 1st installment ready now\n- You are responsible for what happens in lecture.\n- No open laptops.\n\nCourse Character\n- Learning how to do it\n- Largely engineering examples\n- The need to see beneath the surface\n- Background\n- 6.034 (or equivalent)\n- Considerable high level language experience\n\nCourse Character\n- Course continually being improved\n- Feedback of all sorts is enormously helpful\n- Question, suggestions encouraged\n\nCourse Organization\n- Lectures: slide copies (typically)\n- Extensive reading assignments: read them\n(really)\n- Ask questions\n- Homework\n\nCourse Organization\n- Term project: alone or in pairs (not triples)\n- Tools: Joshua, KAPPA-PC, M4, GRASS\n- The nth International Workshop on KBS\n- Oral report and individual term paper\n- Clear, concise, 20-30 pp.\n- What did you learn?\n- Course grade based on term project,\nhomework, lecture participation\n\nCourse Outline\n- Intro & Background\n- The Spirit and Pragmatics of KBS\n- Knowledge Representations and\nReasoning\n- Problem Solving Paradigms\n- Research Issues\n- Project Presentations\n\n(Why) is this interesting?\n- Knowledge-Based Systems work\n- DENDRAL, MYCIN, INTERNIST-I:\ncomparable to human experts\n- PROSPECTOR: $100m worth of molybdenum\n- R1/XCON: from 85% to 97.5% performance\n- American Express: 20% operational savings,\n$10M's in added revenue\n- DuPont\n- Manufacturer's Hanover: Inspector\n- The clever (?) paper clip\n\nIn 1995, in Singapore...\nCrime Case Closed Infamous Crimes\nNick Leeson and Barings Bank\nThe week before Nick Leeson disappeared he had kept\nthrowing up at work.\nColleagues did not know why but were soon to find out.\nThe ego of a 28-year-old trader on the Singapore Monetary\nExchange and the greed and stupidity of a 233-years-old bank\nhad combined to distroy an investment empire and in the\nprocess stunned the world.\n\nTrader Is Said to Have Defrauded Irish Bank of $750 Million\nDublin, Feb. 6 - A trader for the Baltimore - based treasury arm of Allfirst,\nan American retail subsidiary of Allied Irish Banks P.L.C. (news/quote),\ndefrauded Ireland's largest financial institution of $750 million over the last\nyear through bogus foreign exchange trading, and he has since\ndisappeared, the bank said today.\nThe 40 - year - old trader, John Rusnak, failed to show up for work on\nMonday morning and has not been seen since he was interviewed about the\nmatter at Allfirst offices on Friday. The Federal Bureau of Investigation\ninterviewed his wife over the weekend, and the bank believes he is still in\nthe Baltimore area.\nThe suspected theft would be the largest international fraud case since\n1995, when Nick Leeson gambled $1.17 billion on foreign exchange trades\nin Singapore and set off the collapse of England's historic Barings Bank.\nAllied Irish is unlikely to suffer the same fate; instead the bank will see\nprofits after taxes for 2001 shrink to 401 million euros from 997 million euros\nin the previous year.\n\n(Why) is this interesting?\n- Applied AI leads to advances in basic\nscience\n- Rule-based systems\n- Causal reasoning\n- Reasoning at multiple levels: Reasoning\nunder uncertainty\n- Case-based reasoning\n\n(Why) is this interesting?\n- Applied AI leads to advances in basic\nscience\n- Knowledge acquisition/learning\n- Explanation\n- Knowledge sharing\n\nCharacter of the problems\nattacked\n- Balancing your checkbook vs.\nGetting out of the supermarket\n- Telling it what to do vs.\nTelling it what to know\n- Write down some relevant knowledge\n- Advice, not a procedure\n\nCharacter of the problems\nattacked\n- Balancing your checkbook vs.\nGetting out of the supermarket\n- Telling it what to do vs.\nTelling it what to know\n- Write down some relevant knowledge\n- Advice, not a procedure\nKnowledge leads to action,\nBut knowledge is more fundamental\n-The barge story\n\nWhat are knowledge-based\nsystems\n- Knowledge based vs.?\n- Wherein arises intelligence?\n- GPS and the lessons of the 60's\n- Improvements more often involve bringing to\nbear specific knowledge on selected\nsubproblems of an application than\ndeveloping a new complete theory for it.\n\nWhat are knowledge-based\nsystems\n- Wherein arises expertise?\n- KEY IDEA:\n| | EXPERT - AVERAGE PERSON | | =\nKNOWLEDGE\n- KEY IDEA:\nexplicit representation of that knowledge\n- (The barge story again)\n\nIntellectual Origins\n- What makes for expertise?\n- Can human thought be formalized?\n- (How) Can we get a machine to be smart?\n- And what is AI, anyway?\n\nIntellectual Origins\n- AI is a great intellectual adventure\n- Cf cosmology, physics, biology\n- AI is the exploration of the design space of\nintelligences\n- AI is making machines that solve problems\nrequiring intelligence\n- AI is applied epistemology\n\nIntellectual Origins\n- 2000 years ago\n- Aristotle and the art of rhetoric\n- The syllogisms\n- 17th century: Leibniz and the \"algebra of\nthought\"\n\nIntellectual Origins\n- 19th century: Boole's logic and The Laws\nof Thought\nTo see this image, please visit:\nhttp://images.google.com/images?q=cgboole.gif\n\nIntellectual Origins\n- 19th century: Babbage and the Analytical Engine.\nLady Lovelace conjectured that it \"would weave\nalgebraic patterns the way the Jacquard loom weaved\npatterns in textiles.\"\nPortrait of Charles Babbage\nTo see this image please visit:\nhttp://images.google.com/images?q=charles_babbage.full.jpg\n\nImage removed due to copyright considerations.\n\nImage removed due to copyright considerations.\n\nIntellectual Origins\n- 2000 years ago\n- Aristotle and the art of rhetoric\n- The syllogisms\n- 17th century: Leibniz and the \"algebra of\nthought\"\n- 19th century: Boole's logic and The Laws of\nThought\n- 19th century: Babbage and the Analytical Engine\n- 20th century: Shannon's insight about switching\ncircuits\n- 20th century: Turing's ideas about thought and\n\nIntellectual Origins\n- What is it we seek to embody in the\nmachine?\n- Mind?\n- Thought?\n- Intelligence?\n- Rationality?\n- Neuroanatomy?\n\nIntellectual Origins\n- And how do we know whether we got\nthere?\n- Can a machine think?\n- Can the person next to you think?\n\nWhat is\n- Thought?\n- Intelligence?\n- Rationality?\n- Knowledge?\n\nThe Physical Symbol System\nHypothesis\n- A physical symbol system has the\nnecessary and sufficient means for\ngeneral intelligent action\nPhysical Symbol System consists of:\n- A set of symbols\n- A set of expressions (symbol structures)\n- A set of procedures that operate on\nexpressions to produce other expressions:\nCreate, Modify, Reproduce and Destroy\n\nThe Physical Symbol System\nHypothesis\nThe Knowledge Level Hypothesis: There exists a\ndistinct computer systems level which is\ncharacterized by knowledge as the medium and\nthe principle of rationality as the law of behavior.\nPrinciple of rationality: if an agent has knowledge\nthat one of its actions will lead to one of its\ngoals, then the agent will select that action.\n(Roughly: content independent of form)\n\nThe Knowledge Level\nHypothesis\nKnowledge: Whatever can be ascribed to\nan agent, such that its behavior can be\ncomputed according to the principle of\nrationality.\n- Knowledge is closely linked to rationality.\n- Knowledge is competence-like notion.\n\nCharacter of Knowledge\n- Most of what we know knowledge is non-\nnumeric.\n- Most of what we know is heuristic.\n- What's certain?\n- What's the alternative?\n\nCharacter of Knowledge\n- Empirical, experiential knowledge: rules of\nthumb, heuristics\n- Design knowledge: theory, model, causal\nunderstanding\n- Common-sense knowledge\n\nCurrent State\nKBS = | | Expert Knowledge - Common\nSense | |"
    },
    {
      "category": "Lecture Notes",
      "title": "lect02_know_2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/b27bad92cad0ec9d99f306031d608ab8_lect02_know_2.pdf",
      "content": "6.871 - Lecture 2\nSearch Basics\nLecture 2, Part 2.\n\n6.871 - Lecture 2\nThe Fundamental Problem:\nSearch in a Problem Space\nB = branching factor\nD = depth\nNode\nOperator\nB\nD\nSize = Bd\n\n6.871 - Lecture 2\nSearch Spaces Grow\nExponentially\nThe marginal cost of slight improvement is prohibitive\n\nTrivial\nImpossible\nComplexity of Problem\nCost of Solution\n\nFigure by MIT OCW.\n\n6.871 - Lecture 2\nThe Shape of The Space\nHow densely distributed are the answers?\nHow uniformly distributed are the answers?\nHow do answer quality and distance relate?\nNode\nOperator\nB\nD\nSize = Bd\n\n6.871 - Lecture 2\nDepth First Search\nGo down before you go across\nMaintains focus\nMinimizes storage requirements\nFinds answer faster sometimes\n\nd\nA Node\nAn Operator\nKEY\nb\nFigure by MIT OCW.\n\n6.871 - Lecture 2\nBreadth First Search\nNever gets lost on deep or infinite path\nAlways finds answer if it's there\nRequires lots of storage\nA node\nAn operator\nd\nb\n\n6.871 - Lecture 2\nBest First Search\nRequires quality metric\nIf metric is informed it's very quick\nSpace requirements are intermediate\n\nFigure by MIT OCW.\nd\nA Node\nAn Operator\nKEY\nb\n\n6.871 - Lecture 2\nPruning\nThrow away unpromising nodes\nSome risk that the answer is still there\nGreat savings in time and space\nBreadth limited search, beam search\n\nFigure by MIT OCW.\nd\nA Node\nAn Operator\nKEY\nb\n-5\n\n6.871 - Lecture 2\nOptimum Often isn't Optimum\nIn the real world things go wrong\nRobust near-optimum is usually better on average\n\nOptimum\nRobust\nSub-Optimum\nRobust\nSub-Optimum\nPosition in Search Space\nQuality of Solution\n\nFigure by MIT OCW.\n\n6.871 - Lecture 2\nPlanning Islands:\nThe Power of Recognition\nd (rows)\nProblem complexity = b\nd\n\n6.871 - Lecture 2\nRecognizing the Form of the Problem\nE.g. b = 2, d = 10, n = 5\nWithout Islands: 1024\nWith Islands: 5 * 4 = 20\nYou can guess wrong 50\ntimes and still be ahead of\nthe game!\nd (rows)\nProblem complexity = b\nd\nN subproblems\nEach of depth D/N\nEach of size bD/N\nTotal size = N * bD/N\nN planning islands\n\n6.871 - Lecture 2\nSummary\nAll problem solving problems involve search spaces\nSearch space grow intractably\nMany common algorithms for search are known\nIn the Knowledge Lies the Power\n- Knowledge of a heuristic metric\n- Knowledge of planning islands\n- Knowledge of relevant abstractions\nBuild representations that capture these sources of\npower\n\n6.871 - Lecture 2\nVersion 2\nINTEGER DEGREE, COEFF, EXPON\nREAL ARRAY PROBLEM, ANSWER [1:2, 1:1000]\nEXPON = 1\nCOEFF = 2\nThis version reads in a line of pairs of integers,\ncoefficients and exponents, putting the coefficients\nin the COEFF row of P and the exponents in the EXPON\nrow of P. Example:\nresults in EXPON row: 3 2 1 0\nCOEFF row: 3 4 5 7\nx\nx\nx\n+\n+\n+\n\n6.871 - Lecture 2\nVersion 2\nPROCEDURE POLY-DIFF (REAL ARRAY PROBLEM)\nFOR I = DEGREE TO 1 STEP -1 DO\nBEGIN\nANSWER [COEFF, I] = PROBLEM [EXPON, I] *\nPROBLEM [COEFF, I]\nANSWER [EXPON, I] = PROBLEM [EXPON, I] - 1\nEND\n\n6.871 - Lecture 2\nBut What About:\nsin(x)\ncos(x)\nsin(x) + cos(x)\nsin(x) * cos(x)\n\n6.871 - Lecture 2\nThe Checkbook Example\nCleared\nCleared\nUncleared\nUncleared\nDeposits\nChecks\nDeposits\nChecks\nBank Balance\n$1234.56\n$100.00\n$213.40\n$250.00\n$12.34\n$250.00\n$874.30\n$95.00\n$19.99\nTotal uncleared\n$75.00\n$19.00\n$180.00\n$25.00\ndeposits\n$725.00\n$90.00\n$22.00\n$200.00\n$72.54\nTotal uncleared\n$15.00\n$105.00\nchecks\n$248.87\n$14.00\n$24.00\nNew Balance $1,710.69"
    },
    {
      "category": "Lecture Notes",
      "title": "lect02_know.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/6dccb18e39e0eb7b43ec990caa3fc294_lect02_know.pdf",
      "content": "Tell It What to Know\n6.871 - Lecture 2\n\nA Reminder\n- Checkbook balancing vs.\ngetting out of the supermarket\n- Character of task\n- Character of solution\n- Go past image to technical ideas and concepts\n6.871 - Lecture 2\n\nPurposes of This Lecture\n- Explain the mindset of knowledge engineering\n- Change your mind about what a program is\n- From a buncha bits to ...\n- From code to ...\n- Change your mind about how to create them\n- Don't tell it what to do\n- Build it incrementally\n- Change your mind about what to use a computer for\n- Many things...\n6.871 - Lecture 2\n\nPunchlines\n- The issue is style and pragmatics, not theory\n- A program can be much more than just code.\nIt can be a repository of knowledge,\nan environment for the development of knowledge\n- Embody the reasoning, not (just) the calculation\n- Don't tell it what to do, tell it what to know, and how to\nuse what it knows (often many different ways)\n- Task changes from writing a program to specifying\nthe knowledge.\n- Task becomes debugging knowledge, not code.\n6.871 - Lecture 2\n\nPunchlines\n- One payoff: multiple uses of the same knowledge.\n- Performance is only the beginning\nSolving the problem is only (a small) part of the job\n- Explanation\n- Learning\n- Tutoring\n- Suppressing detail helps\n- Build a custom language\n6.871 - Lecture 2\n\nPunchlines\n- Nothing is ever right the first time\n- Nature of the task\n- Nature of the knowledge\n- Evolutionary development\n- Build a little\n- Test a little\n- Redesign a little\n6.871 - Lecture 2\n\nWhat's a Good Representation?\n- Consider: 1996 vs. MCMXCVI\n- Which would you rather use in\narithmetic? Why?\n- Makes important things obvious\n- Syntax and semantics are simple,\nconsistent\n- Algorithms for use are simple\n6.871 - Lecture 2\n\nWhat's a Good Representation?\n- Consider: 1996 vs. 11111001100\n- Which would the computer rather use in\narithmetic? Why?\n- Algorithms for use are simple\n- And simplicity is in the eye of the\ninterpreter\n6.871 - Lecture 2\n\nThe Power of A Good Representation\n6.871 - Lecture 2\n\nThe proportional ownership of the first party shall be equal to a ratio, the\nnumerator of which is: a ratio, the numerator of which is the holding period of\nthe first party multiplied by the capital contributed by the first party, and the\ndenominator of which is a sum, the first term of which is the holding period of\nthe first party and the second term of which is the holding period of the second\nparty; and a denominator which is the sum of two terms; the first term of which\nis a ratio, the numerator of which is the holding period of the first party\nmultiplied by the capital contributed by the first party, and the denominator of\nwhich is a sum, the first term of which is the holding period of the first party, the\nsecond term of which is the holding period of the second party; and the second\nterm of which is a ratio, the numerator of which is the holding period of the\nsecond party multiplied by the capital contributed by the second party, and the\ndenominator of which is a sum, the first term of which is the holding period of\nthe first party and the second term of which is the holding period of the second\nparty.\n6.871 - Lecture 2\n\nThe proportional ownership of the first party shall be equal to a ratio, the\nnumerator of which is: a ratio, the numerator of which is the holding period of\nthe first party multiplied by the capital contributed by the first party, and the\ndenominator of which is a sum, the first term of which is the holding period of\nthe first party and the second term of which is the holding period of the second\nparty; and a denominator which is the sum of two terms; the first term of which\nis a ratio, the numerator of which is the holding period of the first party\nmultiplied by the capital contributed by the first party, and the denominator of\nwhich is a sum, the first term of which is the holding period of the first party, the\nsecond term of which is the holding period of the second party; and the second\nterm of which is a ratio, the numerator of which is the holding period of the\nsecond party multiplied by the capital contributed by the second party, and the\ndenominator of which is a sum, the first term of which is the holding period of\nthe first party and the second term of which is the holding period of the second\nparty.\nt\nm1\n1*\nt\nt\n\n+\nt\nm1 t\nm\n\n1*\n2*\n+\nt + t\nt + t\n6.871 - Lecture 2\n\nWhat's a Program?\nThe Minimal Number of Bits View\nDO 14 I = 1,N\nDO 14 J = 1,N\n14 V(I,J) = (I/J)*(J/I)\n6.871 - Lecture 2\n\nWhat's a Program?\nThe Minimal Number of Bits View\nDO 14 I = 1,N\nDO 14 J = 1,N\n14 V(I,J) = (I/J)*(J/I)\n#include <stdio.h>\nmain ( )\n{int v[5][5];\nint i,j;\nfor (i=1; i<5; i++)\nfor (j=1; j<5; j++)\nv[i][j]=(i/j)*(j/i)}\n6.871 - Lecture 2\n\nTask: Symbolic Mathematics\nHow can we take a derivative of\n3x 3 + 4 x + 5x + 7\nto get\n9x2 + 8x + 5\n6.871 - Lecture 2\n\nVersion 1\nPROCEDURE READPROBLEM (REAL ARRAY P)\nRead in one line of integers, the\ncoefficients of a polynomial, into array P.\nAlso sets DEGREE to degree of polynomial.\nExample:\n3x 3 + 4 x + 5x + 7\nis entered by typing\n3 4 5 7\nPROCEDURE POLY-DIFF (REAL ARRAY PROBLEM)\nFOR I = DEGREE TO 1 STEP -1 DO\nANSWER [I-1] = I * PROBLEM [I]\n6.871 - Lecture 2\n\nVersion 2\nPROCEDURE POLY-DIFF (REAL ARRAY PROBLEM)\nFOR I = DEGREE TO 1 STEP -1 DO\nANSWER [COEFF, I] = PROBLEM [EXPON, I] *\nPROBLEM [COEFF, I]\nANSWER [EXPON, I] = PROBLEM [EXPON, I] - 1\n6.871 - Lecture 2\n\nBut What About:\nsin(x)\ncos(x)\nsin(x) + cos(x)\nsin(x) * cos(x)\nx2 cos( x) + sin( x)\n3x + 1\n6.871 - Lecture 2\n\nVersion 3\nPROCEDURE DIFF (TREE)\nCASE TREE [SYMBOL] OF\nBEGIN\n[\"^\"] ANS = DIFF-EXPONL (TREE)\n[\"+\"] ANS = DIFF-SUM (TREE)\n[\"*\"] ANS = DIFF-PROD (TREE)\n[\"SIN\" \"COS\" \"TAN\"] = ANS = DIFF-TRIG (TREE)\nEND\nPROCEDURE DIFF-SUM (TREE)\nMAKE-TREE (\"+\",DIFF(TREE[LEFTB]),DIFF(TREE[RIGHTB]))\n6.871 - Lecture 2\n\nVersion 3\nPROCEDURE DIFF-PROD(TREE)\nMAKE-TREE(\"+\",\nMAKE-TREE(\"*\", DIFF(TREE[LEFTB]),\nTREE[RIGHTB])\nMAKE-TREE(\"*\", DIFF(TREE[RIGHTB]),\nTREE[LEFTB]))\n6.871 - Lecture 2\n\nThe New Approach ...\n3x3 + 5x + 7\n6.871 - Lecture 2\n\nThe New Approach ...\n3x3 + 5x + 7\nMultiply coefficient times exponent and subtract one\nfrom exponent ...?\n6.871 - Lecture 2\n\nObservations about the knowledge\n- It's organized around the operators.\n- It's organized around nested sub-expressions\n- Top-down tree descent is the natural approach\n- The representation should reflect that.\n- The representation should facilitate that.\n6.871 - Lecture 2\n\nUse a Natural Representation\n- Conventional mathematical notation?\n( +\nx\ny\n3 +\na\nz\nxy\n)\n(* (* 2 y) sqrt(+ (^ x 3) (* x y (+ z a))))\n- Use the pattern appropriate for the leading operator\n6.871 - Lecture 2\n\nAn Implementation Approach:\nOOP\n- Diff is a \"Generic Function\"\n- Methods for different types of expressions\n- (defmethod diff ((n number)) 0)\n- (demethod diff ((x (eql 'x))) 1)\n- (defmethod diff ((y symbol)) 0)\n- Method for expressions does a subdispatch\n(defmethod diff ((exp list))\n(diff-op (first exp) (rest exp)))\n- Methods for specific operators recursively call Diff\n6.871 - Lecture 2\n\nA Small Language\n- In effect we've built a language with the right\nabstractions:\n- Expression tree\n- Dispatching on leading operator\n- Recursive descent through the expression tree\n- Operators are independent, modular chunks of\n\"mathematical knowledge\"\n- Operators can be added incrementally\n- There is an indexing mechanism for finding relevant\noperators given the structure of the current\nrepresentational focus\n6.871 - Lecture 2\n\nNo, really, tell it what to know\nxn ⇔ n * xn-1\nThe mathematical knowledge is bidirectional\nCould be used for integration as well\nEven if we don't use it for that at the moment, perhaps we should preserve the opportunity to do so\nMore powerful pattern language for capturing the structure\nMore powerful matchers for enabling dispatches\n6.871 - Lecture 2\n\nCatchphrases and Punchlines\n- The issue is style and pragmatics, not theory\n- A program can be much more that just code.\nIt can be a repository for knowledge, an environment\nfor the development of knowledge\n- Embody the reasoning, not (just) the calculation.\n- Don't tell it what to do, tell it what to know.\n- Task changes from writing a program to specifying\nthe knowledge.\n- Task becomes debugging knowledge, not code.\n6.871 - Lecture 2\n\nCatchphrases and Punchlines\n- One payoff: multiple uses of the same knowledge.\n- Performance is only the beginning\nSolving the problem is only (a small) part of the job\n- Explanation\n- Learning\n- Tutoring\n6.871 - Lecture 2\n\nTask: Balancing Your Checkbook\nRead StatementBalance\nAdjBalance = StatementBalance\nuntil done do {read OutstandingCheck\nAdjBalance=- OutstandingCheck}\nuntil done do {read OutstandingDeposits\nAdjBalance=+ OutstandingDeposits}\nuntil done do {read Fee\nAdjBalance=- Fee}\nuntil done do {read Interest\nAdjBalance=+ Interest}\nif AdjBalance = CheckBookBalance\n{print (\"It balances!\"); return}\nelse if AdjBalance > CheckbookBalance\n{print \"Hey, good news.\"; return}\nelse {print \"We're scrod.\"; return}\n6.871 - Lecture 2\n\nA Spreadsheet is Almost Right\n- The right mindset: focus on the knowledge\n6.871 - Lecture 2\n\nThe Checkbook Example\nCleared\nCleared\nUncleared\nUncleared\nDeposits\nChecks\nDeposits\nChecks\nBank Balance $1234.56\nTotal uncleared\ndeposits\n725.00\nTotal uncleared checks\n$248.87\nNew Balance\n$1,710.69\n$100.00\n$250.00\n$75.00\n$90.00\n$213.40\n$874.30\n$19.00\n$22.00\n$250.00\n$95.00\n$180.00\n$200.00\n$15.00\n$12.34\n$19.99\n$25.00\n$72.54\n$105.00\n$14.00\n$24.00\n6.871 - Lecture 2\n\nA Spreadsheet is Almost Right\n- The right mindset: focus on the\nknowledge\nBut:\n- They are numeric and we want more\n- They have only one inference engine\n- KBS as \"conceptual spreadsheets\"\n6.871 - Lecture 2\n\nSearch Basics\n- Lecture 2, Part 2.\n6.871 - Lecture 2\n\nThe Fundamental Problem:\nSearch in a Problem Space\nSize = Bd\nNode\nB\nOperator\nD\n- B = branching factor\n- D = depth\n6.871 - Lecture 2\n\nSearch Spaces Grow Exponentially\nTrivial\nImpossible\nComplexity of Problem\nCost of Solution\nThe marginal cost of slight improvement is prohibitive\n6.871 - Lecture 2\nFigure by MIT OCW.\n\nThe Shape of The Space\n- How densely distributed are the answers?\n- How uniformly distributed are the answers?\n- How do answer quality and distance relate?\nSize = Bd\nNode\nB\nOperator\nD\n6.871 - Lecture 2\n\nDepth First Search\n- Go down before you go across\n- Maintains focus\n- Minimizes storage requirements\n- Finds answer faster sometimes\nd\nb\nA Node\nAn Operator\nKEY\n6.871 - Lecture 2\nFigure by MIT OCW.\n\nBreadth First Search\n- Never gets lost on deep or infinite path\n- Always finds answer if it's there\n- Requires lots of storage\nd\n6.871 - Lecture 2\nA node\nb\nAn operator\n\nBest First Search\n-\nRequires quality metric\n-\nIf metric is informed it's very quick\n-\nSpace requirements are intermediate\nd\nb\nA Node\nAn Operator\nKEY\n6.871 - Lecture 2\nFigure by MIT OCW.\n\nPruning\n-\nThrow away unpromising nodes\n-\nSome risk that the answer is still there\n-\nGreat savings in time and space\n-\nBreadth limited search, beam search\nd\nb\nA Node\nAn Operator\nKEY\n-5\n6.871 - Lecture 2\nFigure by MIT OCW.\n\nOptimum Often isn't Optimum\n-\nIn the real world things go wrong\n-\nRobust near-optimum is usually better on average\nOptimum\nRobust\nSub-Optimum\nRobust\nSub-Optimum\nPosition in Search Space\nQuality of Solution\n6.871 - Lecture 2\nFigure by MIT OCW.\n\nPlanning Islands:\nThe Power of Recognition\nd (rows)\n6.871 - Lecture 2\nProblem complexity = b\nd\n\nRecognizing the Form of the Problem\nN subproblems\nEach of depth D/N\nE.g. b = 2, d = 10, n = 5\nWithout Islands: 1024\nWith Islands: 5 * 4 = 20\nYou can guess wrong\n50 times and still be\nahead of the game!\nd (rows)\nd\nEach of size bD/N\nD/N\nN planning islands\n6.871 - Lecture 2\nProblem complexity = b\nTotal size = N * b\n\nSummary\n- All problem solving problems involve search spaces\n- Search space grow intractably\n- Many common algorithms for search are known\n- In the Knowledge Lies the Power\n- Knowledge of a heuristic metric\n- Knowledge of planning islands\n- Knowledge of relevant abstractions\n- Build representations that capture these sources of\npower\n6.871 - Lecture 2\n\nVersion 2\nINTEGER DEGREE, COEFF, EXPON\nREAL ARRAY PROBLEM, ANSWER [1:2, 1:1000]\nEXPON = 1\nCOEFF = 2\ncoefficients and exponents, putting the coefficients\nin the COEFF row of P and the exponents in the EXPON\nrow of P. Example:\nThis version reads in a line of pairs of integers,\n3x 3 + 4 x + 5x + 7\nresults in EXPON row: 3 2 1 0\nCOEFF row: 3 4 5 7\n6.871 - Lecture 2\n\nVersion 2\nPROCEDURE POLY-DIFF (REAL ARRAY PROBLEM)\nFOR I = DEGREE TO 1 STEP -1 DO\nBEGIN\nANSWER [COEFF, I] = PROBLEM [EXPON, I] *\nPROBLEM [COEFF, I]\nANSWER [EXPON, I] = PROBLEM [EXPON, I] - 1\nEND\n6.871 - Lecture 2\n\nBut What About:\nsin(x)\ncos(x)\nsin(x) + cos(x)\nsin(x) * cos(x)\n6.871 - Lecture 2\n\nThe Checkbook Example\nCleared\nCleared Uncleared Uncleared\nDeposits\nChecks Deposits\nChecks\nBank Balance $1234.56\n$100.00\n$213.40\n$250.00\n$12.34\n$250.00\n$874.30\n$95.00\n$19.99\nTotal uncleared\n$75.00\n$19.00\n$180.00\n$25.00\ndeposits\n$725.00\n$90.00\n$22.00\n$200.00\n$72.54\nTotal uncleared\n$15.00\n$105.00\nchecks\n$248.87\n$14.00\n$24.00\nNew Balance\n$1,710.69\n6.871 - Lecture 2"
    },
    {
      "category": "Lecture Notes",
      "title": "lect03_dendral.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/b57c52efa139253d8cd127ccb7853001_lect03_dendral.pdf",
      "content": "The Spirit Of The Undertaking:\nOrigins In Macsyma And\nDendral\n6.871-- Lecture 3\n\nMACSYMA: Symbolic Mathematics\n- Goals of the Project\n- System Description\n- Lessons\n6.871 - Lecture 3\n\nGoals of Project\nTo help applied mathematicians in solving\nproblems\n∫\nx\nx\n= arcsin( x) - tan(arcsin( x)) + tan (arcsin( ))\n(1 - x )\n6.871 - Lecture 3\n\nSymbolic Mathematics: AI\nApproaches\n- Slagle: SAINT\n- Moses: SIN\n- Moses and Martin: MACSYMA\n- Reduce-II\n- Mathematica\n6.871 - Lecture 3\n\nSAINT: Symbolic Automatic\nIntegrator\n∫\nx\ndx\n(1 - x )2\nTry y = arcsin x, yielding:\n∫\nsin 4 y dy\ncos y\n6.871 - Lecture 3\n\n∫\nsin 4 y dy\ncos\ny\nthree possible ways to deal with this:\n6.871 - Lecture 3\n\nsin 4 y dy\ny\n∫\ncos\n4z\nthree possible ways to deal with this:\n∫ tan4 ydy\n∫ cot-4 ydy\n∫ 32 (1 + z )(1 - z )\ndz\n(from z = tan(y/z))\n6.871 - Lecture 3\n\nSAINT\n- Steps\n- 26 standard forms (1-step solutions, tables)\n- 8 Algorithmic transforms (eg. sum of integrals)\n- 10 Heuristic transforms, of which derivative\ndivides is \"the most successful\"\n- Goals evaluated on depth of integrand\n- Ex., xex is of depth 3\n6.871 - Lecture 3\n\nSAINT\n- Worked like the average engineer, i.e., lots of search\nand backtracking\n- Conceived of in terms of search, worked because of that.\nThe power comes from:\n- Problem decomposition\n- Methodical exploration of alternatives\n- Looking far, wide, and deep\n- Speedy tree construction, search, backtracking\n- Success is just a matter of trying enough alternatives\n6.871 - Lecture 3\n\nSAINT\nSome interesting statistics:\nSaint's Average Performance\nUnused\nHeuristic\nSubgoals Subgoals Level\nLevel\n32 Author problem\n6.4\n2.0\n3.5\n1.0\n52 MIT Problems\n4.7\n0.8\n2.9\n.8\n84 Problems\n5.3\n1.25\n3.0\n.9\n6.871 - Lecture 3\n\nThe Mindset Shift\nSAINT will frequently [need to] explore several paths to a solution ...\nbecause it lacks the powerful machinery that SIN possesses.\nOne of the striking features of these programs is how little knowledge\nthey require in order to obtain a solution. Persson in his recent thesis\ndealing with \"sequence prediction\" seems to feel that placing a great deal\nof context dependent information in a program would be \"cheating.\" This\nemphasis seems to be useful when one desires to study certain problem\nsolving mechanisms in as pure a manner as possible.\nWe, on the other hand, intended no such study of specific problem\nsolving mechanisms, but mainly desired a powerful integration program\nwhich behaved closely to our conception of expert human integrators.\nSIN, we hope, signals a return to an examination of complex problem\ndomains.\n-- Moses, 1963.\n[emphasis added]\nNote: almost always needed one (otherwise avg would be lower)\nalmost always needed exactly one (otherwise avg higher)\nCan't prove that search was irrelevant, since we don't know whether earlier use of heuristics would have helped, but we should certainly be suspicious.\nAlso don't know whether it was the same one heuristic each time. (Even if it was a different one, it's still interesting that every problem needs one and only one heuristic.\nGreat example of seeing what you want to see, being mechanism driven,\n6.871 - Lecture 3\n\nSin\n- Steps\n1. Derivative divides\n2. 11 specific methods\n- Substantial effort in deciding which to apply\n- Largely organized around recognizing the form of the\nproblem\n3. General purpose methods (e.g., search)\n- Note the sequence.\n- \"We feel that too few AI programs employ the fact that in\nmany problem domains there exist methods which solve\na large number of problems quickly.\"\n6.871 - Lecture 3\n\nMacsyma Lessons\n- Character of the problem changes as knowledge\nevolves\n- SAINT\n- Worked as people appeared to: extensive search and\nbacktracking\n- SIN\n- Almost always correct on the first guess:\nfound the sources of power in the domain\n- RISCH: Algorithmic Integration\n- Guaranteed to succeed if the expression is integrable\n- Uses very special representation\n- Computationally complex and expensive\n6.871 - Lecture 3\n- Process not understandable to users but provably correct. 13\n\nMacsyma Lessons\n- Keep the system modular and loosely\ncoupled\n- It is sometimes cheaper to translate one\nrepresentation to another in order to solve the\nproblem more efficiently\n- Use of a common language for\ncommunication makes this approach tractable\n(eg, dense and sparse polynomials)\n- Do not duplicate knowledge\n- leads to unmanageable system\n6.871 - Lecture 3\n\nDendral: Structure Elucidation\n- Given:\n- Empirical Formula: C9H18O (total MW = 142)\n- Known Structure Constraints\nAbun.\n-\nRel.\nMass Spectrum\n6.871 - Lecture 3\nMass\n\nResult\nO\n| |\nC - C - C - C - C - C - C - C - C\n6.871 - Lecture 3\n\nHow to Proceed?\n- Given:\n- Empirical Formula: C9H18O (total MW = 142)\n- Known Structure Constraints\n- Mass Spectrum\nRel.\nAbun.\n- Catalog?\nMass\n6.871 - Lecture 3\n\nGenerate and Test\n|\n-- C --\nH --\n-- O --\n|\nFor C9 H18 O two possible structures are\nO\nO\n||\n||\nC - C - C - C - C - C - C - C - C\nC - C - C - C - C - C - C - C - C\n6.871 - Lecture 3\n\nDifficulties in Generate & Test\n212 - 422 - 9130 !!\n6.871 - Lecture 3\n\nHow Can the Program Plan Its\nAttack?\nWhat should the program know?\nRules: spectrum features ⇒ molecule class\nIF\nThere are peaks at M1 and M2 such that\nM1 + M2 = MW + 28 and\nM1 is high and M2 is high\nTHEN\nThe structure is one of the ketones\nIF\nThere is a high peak at 44 and\nthere is a high peak at M1 - 44\nTHEN\nThe structure is one of the aldehydes\n6.871 - Lecture 3\n\nKnowledge Representation\n- Efficiency vs. Comprehensibility\nAdditivity\nModifiability\n- Level of representation\n6.871 - Lecture 3\n\nEfficiency and ...\nIf\nhigh peak at 57 and high peak at 113\nThen\nketone\nIf\nhigh peak at 57 and high peak at 98\nThen\nether\nIf\nhigh peak at 57\nThen\nif high peak at 113 then ketone\nElse\nif high peak at 98 then ether\n6.871 - Lecture 3\n\nLevel of Representation\nIF\nThere are peaks at M1 and M2 such that\nM1 + M2 = MW + 28 and\nM1 is high and M2 is high\nTHEN\nThe structure is one of the ketones\n6.871 - Lecture 3\n\nRepresentation Punchline\nLesson:\nUse the\nHighest level\nMost Transparent\nEasily modified\nrepresentation you can find\nO\nO\n||\n⇒\n||\nX - C - C - C - Y\nX - C - C C - Y\nO\nO\n||\n||\n⇒\nX - C - C - C - Y\nX - C C - C - Y\n6.871 - Lecture 3\n\nIn the Knowledge Lies the\nPower\n- Lesson:\nKnowledge can obviate the need for search.\n(If you know where to look you don't have to search)\n- Lesson\nKnowledge migrated from the tester to the generator.\n(It's often better to have a smart generator)\n6.871 - Lecture 3\n\nBuilding the Program Advances The\nField\n- The SAINT, SIN, MACSYMA, Risch\nprogression\n- Dendral's accumulation, rationalization\nand development of chemistry knowledge.\n6.871 - Lecture 3"
    },
    {
      "category": "Lecture Notes",
      "title": "lect04_case.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/e069987249ccfe724e2fe948fc63fe5e_lect04_case.pdf",
      "content": "Application Case Study:\nIntroduction\n6.871-- Lecture 4\n\nQuestions About ...\n- The Task\n- Is this the right problem to solve?\n- Is it important?\n- Is it valuable?\n- Can it be done?\n- How can progress be measured?\n- How will you know if it succeeds?\n- If you build a system, will anyone use it?\n- Who, and why?\n6.871 - Lecture 4\n\nQuestions About ...\n- The Task\n- If you build it, who will maintain it?\n- If you build it\n- Who will benefit from it?\n- Who will be threatened by it?\n- The Technology\n- What can it do?\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Replicate knowledge and expertise\n- If only we had 5 more of Sally...\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Preserve knowledge and expertise\nCorporate Memory\n- Joe's getting ready to retire.\n- Embed knowledge and expertise\n- Is it #*1 or ##2 to call-forward?!!\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Make knowledge accessible\n- Oh, HERE it is, on page 412 of volume 6.\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Apply knowledge consistently over time\nProvide an environment for knowledge\nstandardization and growth\n- Why can't they do it in Chicago the way they\ndo it in Seattle?\n- Why does every plant have to keep re-\nlearning this?\n- E.g.American Express Authorizer's Assistant\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Leverage the expert\nWhy can't we use Phil's time more\nproductively?\n- Improve practice; support the average\nWe can never find and train enough skilled\npeople.\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Help avoid disaster.\nHow did that slip through?\n- Help manage change?\nFifty new products this year! A technical\nsuccess, and a marketing disaster.\n6.871 - Lecture 4\n\nKnowledge Based Systems Can\n- Distribute corporate policy\nWhy don't the salesman read any of the\n100 memos we sent this quarter?\n- Solve a variety of \"part assembly\" tasks.\nI can't keep track of all the combinations.\n6.871 - Lecture 4\n\nAnalysis: What Is It?\n- What is the task?\n- Specify in terms of input and output.\n- When is it done and why?\n- How often?\n- How fast must it be done?\n- How much does one \"run\" cost?\n- What value is produced by a run?\n6.871 - Lecture 4\n\nAnalysis: How Is It Done?\n- Who does it?\n- What do they do?\n- How do they get trained?\n- How available are they?\n- How is the task organized?\n- How accurately should it be done?\n- What goes well about it now?\n- What goes badly?\n6.871 - Lecture 4\n\nAnalysis: Mistakes\n- What is the nature and origin of a\nmistake?\n- What kinds of things go wrong?\n- Why?\n- too much detail\n- too much change\n- too much info to absorb\n- insufficiently trained people\n- too simple\n- too routine\n6.871 - Lecture 4\n\nAnalysis: Mistakes\n- What are the consequences of a mistake?\n- time: how much?\n- money: how much\n- image\n- If something goes wrong now?\n- who spots it\n- who fixes it\n- who gets blamed\n6.871 - Lecture 4\n\nThe Technical Case\n- Character of the problem\n- Narrow domain of application\n- Knowledge overload\n- Many different outcomes\n- Few outcomes but a lot to know\n- Task involves symbolic reasoning\n- Task uses symbolic information\n- No adequate algorithmic solution\n- Takes 20 minutes to a few days\n- Incremental progress is possible\n- Repetitive\n6.871 - Lecture 4\n\nThe Technical Case\n- Character of the knowledge\n- Substantial specialized knowledge/expertise required\n⇒ accumulating relevant knowledge takes time\n- Knowledge is relatively stable\n- There are recognized experts\n- ... but too few of them\n- ... or they have other tasks that are more rewarding\n(for several senses of reward)\n6.871 - Lecture 4\n\nThe Technical Case\n- Character of the knowledge\n- Experts are provably better than the amateur\n- Measure the difference\n- What dimension: speed, accuracy?\n- What is the right answer?\n- The experts can communicate the relevant\nknowledge\n- They can communicate it to you\n- You can become at least a talented amateur\n- One expert is enough (or, one chief expert)\n6.871 - Lecture 4\n\nThe Technical Case\n- Character of the solution:\n- useful accuracy is reachable\n- The skill is routinely taught\n- Data and cases studies are readily available\n- Dead center cases\n- Extreme cases\n- Informative canonical cases\n6.871 - Lecture 4\n\nThe Business Case\n- Define the character of the payoff\n- revenue\n- improved competitive position\n- quality\n- speed\n- uniformity\n- cost reduction\n- new, different product\n- staff retention\n- staff reduction\n6.871 - Lecture 4\n\nThe Business Case\n- Calibrate the size of the payoff\n- What is half the distance to the expert worth?\n- Determine the chance for leverage\n6.871 - Lecture 4\n\nThe Organizational Case\n- An enthusiastic, committed expert is\navailable\n- Who will use it?\n- End-users are identified/identifiable\n- End-users are enthusiastic\n- Do they agree that\n- the problem exists?\n- the problem is important?\n- the program solves their problem?\n6.871 - Lecture 4\n\nThe Organizational Case\n- The organizational culture will support its\nuse\n- The answer is worth the difficulties\n- learning to use it, using it\n6.871 - Lecture 4\n\nIf It's The First Problem\n- Select one where knowledge is fairly clear\n- Needs formalization, not discovery\neg. Procedures, manuals, etc.\n- Select one that's too small\n- Select one that matters\n- Set up a skunkworks\n6.871 - Lecture 4\n\nProject Design\nExpert-level performance is difficult, so...\n- Adopt an evolutionary approach\nIt gets you started\nUseful wherever you stop\n6.871 - Lecture 4\n\nProject Design\n- Build an assistant\nInherently low profile\nLeverages the operator\nKeeps lines of accountability clear\n- Manage expectations\n- Provide a smooth adoption path\n- Provide follow-on and support\n6.871 - Lecture 4\n\nProject Construction\n- You don't know what you're trying to build\nRecall checkbook vs. supermarket\n- Not formally definable\n- Can't anticipate all contingencies\n- Can't specify procedure\n- Human performance is the metric\n- The task will change out from under you\n6.871 - Lecture 4\n\nProject Construction\n- Nature of the solution changes\n- Nature of the construction process\nchanges\n6.871 - Lecture 4\n\nRapid Prototyping\n- Construction process involves\n- Intertwining of specification and implementation\n- Experimentation\n- Three-month prototype\n- prevents optimization\n- encourages experimentation\n- early feedback on technology and conception\nPROTOTYPE\n⇔\nENHANCE ⇒\nSPECIFY\n⇒\nCODE\n6.871 - Lecture 4\n\nRapid Prototyping: Advantages\n- Handle ill-defined tasks.\n- Check problem conception.\n- Secure user buy-in.\n- Refine user requirements.\n- Refine production and integration requirements.\n- Something works all the time.\n- Get management support.\n- It happens anyway.\n6.871 - Lecture 4\n\nField Test and After\n- Where to field test\n- Who wants it and is knowledgeable enough to\nevaluate it?\n- KB development is never done\n- Determine who can take over\n- What will happen to the expert?\n- attrition?\n- work on harder problems?\n- extend the knowledge base?\n6.871 - Lecture 4\n\nDesign for Evolution\n- If it's a success, how long will they use it for?\n- If they use it, what else will they want?\n- What do you suspect will happen to the\nhardware and software infrastructure that the\napplication will rely on?\n- How closely coupled to the underlying\ninfrastructure will you need to be?\n- Will they let you do that?\n- Are there standard ways to do it?\n- How pervasive will these be in the end application?\n6.871 - Lecture 4"
    },
    {
      "category": "Lecture Notes",
      "title": "lect06_rules.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/bd082307d538352f0acbd018cc5e8c6e_lect06_rules.pdf",
      "content": "Rule-Based Systems\n6.871-- Lecture 6\n\nOutline\n-\nMYCIN\n\n- Introduction\n- Task\n- Sample Interaction\n- Reasons for Success\n- How It Worked\n- Knowledge Representation\n- Architecture and Control Structure\n- Inexact Inference\n- Explanation\n- Interaction Help\n- Reasons for Success Revisited\n- Contributions\n-\nProspector\n\n- \"Rules Glasses\"\n6.871 - Lecture 6\n\nMYCIN\n- What was the task?\n- Medical diagnosis and therapy selection for\nbacterial infections of the blood\n- Why this domain?\n- Overuse of antibiotics\n6.871 - Lecture 6\n\nWhy This Domain\n- Overuse of antibiotics\n- Irrational use of antibiotics\n- Maldistribution of expertise\n- Domain is \"small\" and \"isolated\"\n6.871 - Lecture 6\n\nSample Interaction: Clinical\nData\n---------PATIENT-248----------\n1) Patient's name: (first-last)\n** CR\n2) Sex:\n** MALE\n3) Age:\n** 52\n4) Have you been able to obtain positive microbiological information\nabout a possible infection of C.R.?\n** YES\n----------INFECTION--------------\n5) What is the infection?\n** ENDARTERITIS\n6.871 - Lecture 6\n\nSample Interaction (cont'd)\nThe first significant organism from this blood culture (CULTURE-1)\nwill be referred to as:\n--------------ORGANISM-1-----------------\n6) Enter the identity of ORGANISM-1\n** UNKNOWN\n7) Is ORGANISM-1 a rod or coccus (etc.):\n** ROD\n8) The gram stain of ORGANISM-1\n** GRAMNEG\n9) HAVE THERE BEEN positive cultures yielding organisms\nabout which you will NOT be seeking advice?\n** YES\n6.871 - Lecture 6\n\nSample Interaction (cont'd)\n9) Enter the identity of ORGANISM-2:\n** SALMONELLA (.4) E.COLI (.3)\n6.871 - Lecture 6\n\nSample Interaction: Explanation\nIs the patient's illness with ORGANISM-1 a hospital-acquired infection?\n** WHY\n[i.e. WHY is it important to determine whether or not the infection with\nORGANISM-1 was acquired while the patient was hospitalized]\n[2.0] This will aid in determining the identity of ORGANISM-1.\nIt has already been established that\n[2.1] the morphology of ORGANISM-1 is rod\n[2.2] the gram stain of ORGANISM-1 is gramneg\n[2.3] the aerobicity of ORGANISM-1 is facul\nTherefore, if\n[2.4] the infection with ORGANISM-1 was acquired while\nthe patient was hospitalized\nthen\nthere is weakly suggestive evidence (.2) that the identity\nof ORGANISM-1 is pseudomonas [RULE050]\n6.871 - Lecture 6\n\nSample Interaction: Diagnosis\nINFECTION-1 is ENDARTERITIS with BACTEREMIA\n<Item 1>\nE. COLI\n<Item 2>\nSALMONELLA (species unknown)\n<Item 3>\nKLEBSIELLA-PNEUMONIAE\n<Item 4>\nPSEUDOMONAS-AERUGINOSA\n<Item 5>\nENTEROBACTER\n<Item 6>\nPROTEUS-NON-MIRABILUS\n6.871 - Lecture 6\n\nSample Interaction: Therapy\n[REC 1] My preferred therapy recommendation is as follows:\nIn order to cover for Items <1 3 4 5 6 >:\nGive: GENTAMICIN\nDose:128 mg (1.7. Mg/kg) q8h IV (or IM) for 10 days\nComments: Modify dose in renal failure\nIn order to cover for Item <2>:\nGive: CHLORAMPHENICOL\nDose:563 mg (7.5 mg.kg) q6h for 14 days\nComments: Monitor patient's white count\nDo you wish to see the next choice therapy?\n**\nNO\n6.871 - Lecture 6\n\nSuccessful?\n- Appropriate task: Narrow domain, heuristic knowledge,\narticulate experts, etc.\n- The match of knowledge and representation:\n- Knowledge about of how the body works, vs.\n- Knowledge about how to diagnose it\n- Answer was a ranked list, not a single result\n- Perhaps most important:\nHaving the right abstractions, the right language\n6.871 - Lecture 6\n\nHow It Worked: Representation\nRule 27\nIf:\n1)the gram stain of the organism is gram\nnegative, and\n2)the morphology of the organism is rod, and\n3)the aerobicity of the organism is\nanaerobic,\nThen:\nThere is suggestive evidence (.7) that the\nidentity of the organism is Bacteriodes.\n6.871 - Lecture 6\n\nHow It Worked: Representation\nRule 27\nIf:\n1)the gram stain of the organism is gram\nnegative, and\n2)the morphology of the organism is rod, and\n3)the aerobicity of the organism is\nanaerobic,\nThen:\nThere is suggestive evidence (.7) that the\nidentity of the organism is Bacteriodes.\n6.871 - Lecture 6\n\nHow It Worked: Representation\nRule 27\nIf:\n1)the gram stain of the organism is gram\nnegative, and\n2)the morphology of the organism is rod, and\n3)the aerobicity of the organism is\nanaerobic,\nThen:\nThere is suggestive evidence (.7) that the\nidentity of the organism is Bacteriodes.\n¿ Predicates on object, attribute, value triples.\n6.871 - Lecture 6\n\nArchitecture\nINFERENCE\nENGINE\nKNOWLEDGE\nBASE\n6.871 - Lecture 6\n\nControl Structure\nIDENTITY\nRule 27\n...\nGRAM\nMORPHOLOGY\nAEROBICITY\n6.871 - Lecture 6\n\nControl Structure\n- What kind of search?\n- Backward-chaining, depth-first\n- With what variations?\n- Generalized subgoals\nE.g. \"determine identity\", not \"is identity =\nE.coli\"\n- Every rule relevant to goal is explored\n- Inexact inference\n6.871 - Lecture 6\n\nInexact Inference\nR1: A and B\nX (.4)\nR2: C and D\nX (.3)\nA and B and C and D\n?\nDesiderata:\n- Commutative\n- Asymptotic\n- Balances positive and negative\nevidence\n6.871 - Lecture 6\n\nInexact Inference\nR1: A and B\nX (.4)\nR2: C and D\nX (.3)\nA and B and C and D\n?\nA and B\nX (.4)\nC and D:\n\"increase certainty .3 more from current value\"\nX(.4 + .3(1 - .4)) = X(.58)\ncurrent value\nnew value\nremaining uncertainty\n6.871 - Lecture 6\n\nInexact Inference\nR1: A (.5) and B (.6)\nX (.4)\nR2: C (.4) and D (.7)\nX (.3)\nA and B and C and D\n?\nAND: min (A and B) = .5\nmin (C and D) = .4\nR1: .5 * .4 = .2\nR2: .4 * .3 = .12\nCombining: .2 + .12( 1 - .2) = .30\ncurrent value\nnew value\nremaining uncertainty\n6.871 - Lecture 6\n\nExplanation\n** HOW DID YOU DECIDE THAT ORGANISM-1\nWAS AN E.COLI?\nI used rule084 to conclude that the identity of\nORGANISM-1 is e.coli. This gave a cumulative c.f.\nof (.51).\nI used rule003 to conclude that the identity of\nORGANISM-1 is e.coli. This gave a cumulative c.f.\nof (.43).\n6.871 - Lecture 6\n\nExplanation\n**\nWHY DIDN'T YOU THINK THAT ORGANISM-1\nWAS NEISSERIA?\nThe following rules could have been used to determine\nthat the identity of ORGANISM-1 is neisseria: 9.\nHowever, none of these succeeded in the context\nof ORGANISM-1. If you would like an explanation for why\nany of these rules failed, please enter their numbers:\n** 9\nClause 2 of rule009 [\"the morphology of the organism is\ncoccus\"] was already known to be false for ORGANISM-\n1, so the rule was never tried.\n6.871 - Lecture 6\n\nRevisited\n- Perhaps most important:\nHaving the right abstractions, the\nright language\n6.871 - Lecture 6\nReasons for Success,\n\nThe Right Abstraction\nIf ...\nthe organism is gram-negative, and\nthe portal of entry is skin-wound,\nThen the organism is likely to be ...\n- It's an abstraction\n- It's the right abstraction for this task\n- Where did it come from?\n6.871 - Lecture 6\n\nWhat ought a rule to be?\nAnswer:\nAn independent\nsingle-step\ninferential\nempirical association.\n6.871 - Lecture 6\n\nWhat ought a rule to be?\n- Independent\n- Does it make sense in isolation?\n- Single step: mental hygiene\n- Inferential: focus on the knowledge level\n- Empirical association\n- Association: symptom & disease\n- Empirical: noticed but not understood\n- Logic-like, but:\n- Inexact\n- Not truth-preserving\n6.871 - Lecture 6\n\nWhat Ought a Rule to Be?\nIF\nThere is pressure on project leader,\nRespondent is R&D manager,\nNo increase in growth stage of life cycle,\nIncreased probability of commercial success,\nProject champion did not appear at end,\nProduct not in infancy stage of life cycle,\nTop management support,\nAssociation between commercial and technological aspects,\nR&D perceives project mgmt commitment as high,\nThere is a project champion,\nDon't know about newly enacted favorable international regulations,\nProject champion appeared in the middle,\nRespondent is not the VP,\nProject Champion didn't appear at beginning,\nRespondent is not marketing manager,\nTHEN\nthe Project is likely to succeed.\nFrom Gallant and Balachandra, Using automated techniques to generate an expert\nsystem for R&D project monitoring, First IFAC Intl Symposium on Economics and AI,\nSept. 1986.\n6.871 - Lecture 6\n\nWhat Ought a Rule to Be?\nIF\nthe stock-price is determined, and\nthe stock-earnings is determined,\nTHEN\nthe price-earnings-ratio is stock-price/stock-earnings.\nIF\nthe patient is between 16 and 21, and\nthe chief complaint is fatigue, and the\npatient has a mild fever\nTHEN the disease is likely (.8) to be mono.\n6.871 - Lecture 6\n\nContributions\n- Existence proof of adequacy of rule-based\nsystems\n- Knowledge can be captured as a set of\nmostly independent rules\n- Knowledge can obviate search: looking\nthrough the right space\n- Experts can be debriefed\n6.871 - Lecture 6\n\nContributions\n- The adequacy of a simple model of\nuncertainty.\n- Explanation as a core property of KBS\n- Preview of multiple uses of knowledge\n- Meta-rules and meta-knowledge\n6.871 - Lecture 6\n\nProspector\n- Like Mycin:\n- System creation as a forcing function for making\nknowledge explicit (hence accessible, testable,\ncommunicable, etc.)\n- Unlike Mycin:\n- Network view of a knowledge base (Lecture 7)\n- An alternate model for inexact reasoning:\nBayesian probability theory (Lecture 10)\n6.871 - Lecture 6\n\nWhat are the \"Rules Glasses?\"\n- An individual inference rule is the appropriate unit of\nmodularity.\n- Information can be captured as single independent\nstatements, single independent inferences.\n- Expertise is the accumulation of good guesses derived\nfrom experience.\n- Expertise is can be captured as a set of informal,\nheuristic inferences, each of which is a simple if/then\nrule.\n6.871 - Lecture 6\n\nWhat are the \"Rules Glasses?\"\n- Capture the expertise by dissecting it into\nindividual inferences.\n- Impose your ontology by choosing your\npredicates carefully.\n- The choice of language is an important\nsource of power: the right choice of\nlanguage vastly reduces search.\n6.871 - Lecture 6"
    },
    {
      "category": "Lecture Notes",
      "title": "lect07_semcnets.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/a137af074cd61990a432162903d33a4a_lect07_semcnets.pdf",
      "content": "Representations for KBS:\nSemantic Networks\n6.871 Lecture 7\n\nOutline\n- Quillian's foundations: associations\n- Implicit meanings for uniform links\n- Knowledge-related primitives [eg. CDs]\n- Concern for semantics of the language\n- Structured inheritance networks [eg. KL-\nONE]\n- Where the field is today\n6.871 - Lecture 7\n\nPreview\n- Semantic networks have evolved:\n- Shift in motivation from modeling cognitive\nprocesses to addressing computational issues.\n- Shift in representation goals from \"all human\nmemory\" to certain types of knowledge [eg.\ndefinitions vs. assertions, classes vs. instances]\n- Semantics of links have become less intuitive\nand more formally defined.\n- Shift in reasoning mechanisms suited to more\ncareful definitions of primitives.\n6.871 - Lecture 7\n\nWhat is a Semantic Net?\n- What's a net?\n- What a semantic net?\n- Where do the semantics come from?\n6.871 - Lecture 7\n\nQuestions for Semantic Nets\n- Regarding the original motivation\n- How should we view the world?\n- What are the recommended inferences?\n- Regarding the representation formalism:\n- (What) are the(re) primitives?\n- The primitives of a KR technology are those things \"the\ninterpreter is programmed in advance to understand\"\n[Brachman]\n- What knowledge can we express?\n- What does a concept mean?\n- May be what the machine infers\n- May be a formal answer\n- Regarding the reasoning mechanism:\n- What are the easy/automatic inferences?\n- How efficient can we make these?\n6.871 - Lecture 7\n\nSemantic Memory [Quillian, 1966]\n- Motivations\n- Understand the structure of human memory, and its\nuse in language understanding\n- What sort of representational format can permit the\n\"meanings\" of words to be stored, so that humanlike\nuse of these meanings is possible?\n- Psychological evidence that memory uses associative\nlinks in understanding words\n6.871 - Lecture 7\n\nSemantic Memory [Quillian, 1966]\n- Motivations:\n- Claim that people use same memory structure\nfor a variety of tasks\n- Wish to encode dictionary definition of words.\n- And then:\n- Comparing and contrasting meanings of two words\n- Generating quasi-English sentences to describe the\ncomparison\n6.871 - Lecture 7\n\nSemantic Memory Formalism\n- Plane: A network of nodes and links for representing the definition of\na word \"concept\"\n- Nodes:\n- Type nodes: Direct representation of word [one per plane]\n- Token nodes: Denote a type node in some other plane\n- Link types\n- Type node A is a subclass of B\n- A,B, and C disjunctive [conjunctive]\n- A relates B and C\n- A is a token associated with type node A\n- A modifies B [an \"escape hatch\"]\n6.871 - Lecture 7\n\n(\n)\nj\nS\nPlant 1\nPLANT\nLive\nAnimal 10C1\nor\nor\nand\nand\nand\nLeaf 12N1\nPeople 12N1\nProcess\nIn\nIndustry\nor\nGet 3\nFrom 3\nFood\nAir\nEarth\nor\nPlant\nor\nor\nPlant 2\nUse\nFor 5\nIN 9\n= B D\nSeed\nEarth\nGrow\nPlant 3\nPut\nFor 4\n= B\nPlant 2\nPlant 3\n1. Living structure which is not an animal, frequently with leaves, getting its food from air, water, earth.\n2. Apparatus used for any process in industry.\n3. Put seed, plant, etc. in earth for growth.\n= A Structure\nWith 3 17C1\n= A\n= A\nWater\nOb ect 12C1\n= A Apparatus 13C1\nPerson T8C1\n6.871 - Lecture 7\nFigure by MIT OCW.\n\nFood\nFOOD\nForm\nor\nMeal\n= B\nLive\n= B Being 2\n= B\nand\nor\nDrink\nKeep\nGrow\n= B\nInto\n1. That which living being has to take in to keep it living and for growth. Things forming meals, especially other than drink.\n= A Thing\nHas-To\nTo 7\n= A\nTake 11\n= A\nOther-Than\n6.871 - Lecture 7\nFigure by MIT OCW.\n\nSemantic Memory Formalism\n- Expressiveness: Any word with a dictionary\ndefinition\n- Meaning of a concept: two answers\n- dictionary definition in its plane.\n- \"full concept\": transitive closure of all links\n- Size ??\n- Focus is on nodes: in use links are merely\nconnections\n6.871 - Lecture 7\n\nSemantic Memory Reasoning\n- Comparing meanings of two words: via\n\"spreading activation\"\n- Intersections in unguided breadth-first search\n- General purpose\n- Is this \"closest path\" the shared meaning?\n- Describing the comparison:\n- Trace the links leading to the intersections.\n6.871 - Lecture 7\n\nSpreading Activation\n(A)\n(B)\n(C)\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nP\nROBIN\nRobin is activated\nRobin primes its associates\nRobin\nRed Breast\nis a\nis a\nis a\nBlue Eggs\nBird\nCanary\nSings\nFly\nFeathers\nAnimal\nSkin\nBreathe\nROBIN\nis a\nis a\nis a\nBlue Eggs\nBird\nCanary\nSings\nFly\nFeathers\nAnimal\nSkin\nBreathe\nROBIN\nis a\nis a\nis a\nBlue Eggs\nBird\nCanary\nSings\nFly\nFeathers\nAnimal\nSkin\nBreathe\nContinued priming from\nYellow\nRed Breast\nYellow\nRed Breast\nYellow\n6.871 - Lecture 7\nFigure by MIT OCW.\n\nPrimitives?\n- What's primitive in Quillian?\n- Why primitives?\n- Approaches to primitives:\n- Language independent: Conceptual\ndependencies\n- Language [English] dependent: OWL\n6.871 - Lecture 7\n\nConceptual Dependency\n- A strongly reductionist approach\n- Five primitive categories of knowledge\n- Actions [Eg. Propel, Ingest, Ptrans, Mtrans]\n- Tenses [Eg. Present, Fast, Future]\n- Objects [any noun]\n- Modifiers of actions: case frames [eg. object, subject,\nrecipient]\n- Modifiers of objects\n- Combining primitives yields standard scenarios\n- building blocks world knowledge.\n6.871 - Lecture 7\n\nExample CDs\nBasic dependency\nJohn\nPTRANS\nCombining 2 dependencies\nJohn\nPROPEL\ncart\nMore Complex:\nJohn\np\nI\nJohn\nINGEST\ndo\no\no\nice cream\n6.871 - Lecture 7\nspoon\n\nConceptual Dependency\n- Motivation: Provide a canonical form for\nworld knowledge expressible in any natural\nlanguage.\n- Why a canonical form is valuable\n- Deciding whether two expressions have the\nsame meaning.\n- If not, how close are they?\n- Understanding complex text [eg. stories]\n6.871 - Lecture 7\n\nConceptual Dependencies\n- Expressiveness: All world knowledge?\n- Not an intuitive means of communication, for\nus.\n6.871 - Lecture 7\n\nLinks: What Do They Mean?\n-\nIS-A\n\n- Clyde is-a elephant\n- Elephant is-a mammal\n- The World Wide (Non-Semantic) Web\n- What does a hyperlink mean?\n- What does that mean?\n- Eg: books on the web\n- Need to think about the semantics of the network notation, to\nminimize the \"intuitive\" meanings of links\n- Similarity to semantics in logic sense\n- Meaning arises from:\n- what the interpreter does (procedural semantics)\n- formal definitions\n6.871 - Lecture 7\n\nLinks: What Do They Mean?\nM43\nR1\nE16\nR16\nC19\nR47\nC19\nR47\nR47\nL21 T73 T22\nR47\nL21\nT16\nC19\nR47 R47\nT73 T22\nR47\nT16\nR47\n6.871 - Lecture 7\n\nSI-Nets: Epistemologically Explicit\n- Representational primitives with formal, logical\nmeanings.\n- Strict definitions of concepts: necessary and sufficient\nconditions, giving the essence of the concept's\nintension.\n- Some representations are concerned with the\ndefinition of terms - the \"T-box\"\n- Other representations use terminology to say what's\ntrue in the world at the moment - the \"A-box\"\n- A-box reasoning can use T-box reasoning as a fast\nsubroutine for certain queries.\n6.871 - Lecture 7\n\nSI-Nets: Epistemologically Explicit\n- Importance of subsumption: one concept as more\ngeneral than a second concept.\n- Eg. Animal subsumes Dog.\n- Allows inheritance of definitional properties\n- Allows recognizing new concepts and instances as\nmembers of concepts.\n- Subsumption is the recommended inference.\n- (In logical inference, the most general unifier is the key\ncomputation, here it's the most specific subsumer).\n6.871 - Lecture 7\n\nKL-ONE\n- Logic-like notation:\n- Concepts: One place logical predicates: C(x).\n- Eg. Animal(x).\n- Subsumption links: C1 subsumes C2 if and\nonly if for all X, C2(x) --> C1(x)\n- Eg. Dog(x) --> Animal(x).\n- Subsumption links create a taxonomy.\n6.871 - Lecture 7\n\nKL-ONE\n- Distinction between individuals and generics\n- Roles: Two place relations R(x,y).\n- E.g. Color(x,y)\n- Defined by domain and range; have their own\ntaxonomy\n- Role restrictions: consist of\n- Value Restrictions - the class of the role fillers for\nthat concept\n- Number Restrictions - min. and max. number of\ninstances filling the role.\n6.871 - Lecture 7\n\nMeaning in KL-One\n- The meaning of a concept is either\n- A strict definition of necessary and sufficient\nconditions based on superclass[es], and role\nrestrictions.\n- Or, a primitive: only necessary conditions.\n- Typically natural kinds [E.g. animal, water]\n6.871 - Lecture 7\n\nKL-ONE Network\nPOLYGON\nTRIANGLE\n*\nGEOMETRIC-\nENTITY *\nSEGMENT *\nSide\n(1, NIL)\nRestr.\nTriangle(x) II\nPolygon(x) AND\nExists exactly 3 y s.t.\nSide(x, y) and\nSegment(y).\nSide\n(3,3)\n6.871 - Lecture 7\n\nClassification\nPlace a new concept underneath the most specific\ngeneralizer.\nTriangle(x) II\nPolygon(x) and\nExists exactly 3 y s.t.\nSide(x, y) and Segment(y).\nEquiTri II\nPolygon and\nExists exactly 3 y st\nSide (x, y) and Segment(y)\nand Forall y1, y2 st Segment(y1) and\nSegment(y2):\n*\nENTITY *\nSide\n(1, NIL)\nPOLYGON\nTRIANGLE\nGEOMETRIC-\nSEGMENT *\nRestr.\nSide\n(3,3)\nLength(y1) = Length(y2)\n6.871 - Lecture 7\n\nExpressiveness in SI Nets\n- Very few cases of people actually using SI net\nlanguages like KL-One to encode large knowledge\nbases.\n- In general, there are problems from limited\nexpressiveness:\n- Cannot clearly define many important concepts in a\ndomain.\n- Consider defining a right triangle, or isosceles\ntriangle.\n- Consider defining a chair or a dog.\n- Issues of different \"boxes\" to put knowledge in:\n- TBox - Definitions, usually about classes.\n- ABox - \"Assertions\" - non-definitional properties of\nconcepts and instances.\n6.871 - Lecture 7\n\nKL-One Descendants\n- NIKL, KL-TWO, KRYPTON, KANDOR\n- All Structured Inheritance Networks; same basic\nontological commitment.\n- Decisions made about:\n- Whether roles may also be in a definition hierarchy.\n- What expressions are allowed in TBox? In ABox?\n- Trading off the expressiveness of the language with\nefficiency of the classifier.\n6.871 - Lecture 7\n\nWhere Field Is Today\n- Still much focus on structured inheritance\nnetworks\n- Much focus on computational details of well-\nknown network formalisms.\n- Claim: Need to return to basic investigations\nof real world knowledge for new ideas\n6.871 - Lecture 7\n\nLinguistically Motivated Networks\n- The START NLP system (and some other earlier systems)\nuse a triples representation\n- The link points to a relationship name and to the subject\nand object nodes.\n- Links may function as nodes\n- Relationship names and objects participate in inheritance\nrelationships\n- More complex relationships are decomposed into triples\n6.871 - Lecture 7\n\nExample\n- John kissed Mary in the car\nJohn\nMary\nKiss\nThe Car\nIn\nSaw\nBob\nBob saw John Kiss Mary\n6.871 - Lecture 7\n\nThe Semantic Web\n- Treat WWW Identifiers (URI's) as nodes\n- Create a repository of triples describing these nodes\nsemantically.\n- Traditional Meta-Data such as author, creation-\ndate\n- Non traditional meta-data such as summary or\npeer review\n- Use this network to retrieve Web resources based on\ntheir semantics\n- W3C standards are being evolved for this purpose:\n- RDF (resource description format), XML syntax\n6.871 - Lecture 7\n\nSummary\n- Semantic networks have evolved\n- Shift in motivation from modeling cognitive\nprocesses to addressing computational issues.\n- Shift in representation goals from \"all human\nmemory\" to certain types of knowledge separately\n[eg. definitions vs. assertions, classes vs.\ninstances]\n- Semantics of links have become less intuitive and\nmore formally defined.\n- Shift in reasoning mechanisms suited to more\ncareful definitions of primitives.\n- Possible impact on WWW.\n6.871 - Lecture 7"
    },
    {
      "category": "Lecture Notes",
      "title": "lect08_logic.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/233e2e8021787d40f9c4e73e1f06283d_lect08_logic.pdf",
      "content": "Logic : Page 1\nRepresentations for KBS:\nLogic: When Sound Deduction is Required\nSpring 2005\n6.871 Knowledge Based Systems\nHoward Shrobe and Kimberle Koile\nSyntax\nProofs\nSemantics\nSound Inference and Complete Inference\nWhat Properties hold?\nThe Language as a Representation\nComprehensiveness\nAmbiguity\nLack of Commitment\nCompromises between generality and tractability\nSome Applications in the logic spirit\nWrap-up, What pair of glasses is this?\nLogic : Page 1\n\nLogic : Page 2\nWhat is Logic?\nA \"Universal\" Language\"\nA formal Inference system that \"preserves truth\"\nNot a guarantee of correct answers.\nGeneral spirit is to \"pour in the axioms\" and grind out the theorems.\nE.g. to do inference, start with axioms and grind out consequences.\nTo plan, put in the planning axioms and grind out the plans.\nTo do diagnosis, put in the description of the device and grind out the\ndiagnosis.\nA means for formally relating syntax to semantics (or denotation) or,\nput another way: The study of the relationship between inference and\nentailment.\nLogic : Page 2\n\nLogic : Page 3\nWhy A Universal Language?\n- What can you say in Mycin-like rule languages?\n- There are \"Contexts\" meaning, roughly, objects\n- Rules refer to one of them\n- You can talk about the Values of Attributes of Objects\n- You can compare Object Attributes Values to Numeric Quantities\n- What can't you express?\n- Relationships between the values of attributes of one object and the values\nof attributes of another object.\n- The location of the infectious agent is within the bloodstream of the host.\n- Infectious agent-1 infected host-1 is 2 days earlier than infectious agent-2\ninfected host-2.\n- Quantified things:\n- Every infections agent in host-1 is a coccus\n- There is an infectious agent in host-1 that is a coccus\nLogic : Page 3\n\nLogic : Page 4\nPredicate Logic Syntax Solves These Problems\n- The unit of representation is the Statement which is the application\nof a predicate to a set of arguments: John Loves Mary\n- Building blocks:\nConstant Symbols, Variable Symbols, Function Symbols, Predicate Symbols\n- A Term is:\nA Constant symbol: John\nA variable symbol: ?x\nThe Application of a function symbol to set of terms: (Brother (Cousin John)))\n- A basic Statement is:\nThe application of a predicate symbol to a set of terms.\n- Compound statements are formed by connecting Basic Statements\nusing:\nBoolean Connectives: And, Or, Not, Implies\nQuantifiers: Forall, Thereis\nLogic : Page 4\n\nLogic : Page 5\nSyntax Examples\n(Loves Bob Mary)\nBob Loves Mary\n(Loves (Father Bob) (Mother Judy))\nThe Father of Bob\nLoves the mother of Judy\n(Implies (exercises Bob) (Healthy Bob))\nIf Bob exercises Bob is Healthy\n(Forall (?y) (Thereis (?x) (Loves ?x ?y)))\nEverybody has somebody who\nloves them\n(Thereis (?y) (Forall (?x) (Loves ?x ?y))\nThere is somebody whom\neverybody loves\n(Forall (?block ?robot ?t-1)\n(implies (and (cleartop ?block ?t-1)\n(handempty ?robot ?t-1))\n(and (possible-successor ?t-2 ?t-1)\n(results-from ?t-2 (pickup ?robot ?block ?t-1))\n(holding ?robot ?block ?t-2))))\nat any time that the robot's hand is empty and there is nothing on top of the block, the robot\ncan pick up the block and it will be holding the block in the resulting situation.\nLogic : Page 5\n\nLogic : Page 6\nAn Inference System\n- A precise notion of \"Follows From\"\n- Deduction Rules\n- 2 for each connective: An introduction rule and an elimination rule\n- And Elimination: From (And A B) you can deduce A\n- Modus Ponens:\n- From (IMPLIES P Q) and P you can deduce Q\n- Universal Instantiation:\n- (FORALL (X) (P X)) you can deduce (P A) for any A\n- Axioms: Statements that are given as a priori true\n- A Proof is:\nA Sequence of statements, such that each element is either:\nAn Axiom\nAn Assumption warranted by a proof rule\nOr the results of applying a deduction rule to previous statements\n- Theorem: Any conclusion of a proof.\n- Theorems are statements we're forced to believe if we believe the axioms\nLogic : Page 6\n\nLogic : Page 7\nNatural Deduction Rules\nPropositional Rules\nAnd Introduction\ni\nA\nj\nB\nk (And A B)\n(AI i j)\nAnd Elimination\ni\n(And A B)\nj\nA\n(AE\n\ni)\nConditional Proof\ni (Show (Implies P Q))\ni+1 | P\n(assumption i)\nj\n| Q\nk (Implies P Q)\n(CP (j) (i+1))\nModus Ponens\ni\n(Implies A B)\nj\nA\nk B\n(MP i j)\nA statement can be copied from outside a box to inside the box, but not from the\ninside to the outside. Exactly like the lexical scoping rules of a programming\nlanguage.\nLogic : Page 7\n\nLogic : Page 8\ni\nNatural Deduction Rules (2)\nOr Introduction\nOr Elimination\ni\nA\n\ni\n(Or A B)\n\nj (Or A B) (OI i)\nj\n(Show C)\nk | A\n(assumption j)\nl\n| C\nm | B\n(assumption j)\nn | C\no C\n(OE (i l n) (k m))\nDouble Negation Elimination\nNegation Introduction\n(not (not A))\ni Show (Not A)\nj\nA\n(DNE i)\ni+1 | A\n(assumption)\nk\n| B\nl\n| (not B)\nm (not A)\n(NI (k l) (i+1))\nLogic : Page 8\n\nLogic : Page 9\nQuantifier Rules\nA Substitution of a for x in the statement (P x) is written [a/x](P x).\nIt means that every free occurrence of x is replaced by a in the statement (P x).\nThe substitution is only valid if no occurrence of a is \"captured\" (i.e. whenever a replaces a free\noccurrence of x, a should also be free in that context).\nFor Example:\n[a/x](Forall (y)(P x y)) = (Forall (y) (P a y))\nbut [y/x](Forall (y)(P x y)) is not a valid substitution\nBecause this would give (Forall (y) (P y y)) \"capturing\" the substituted in y\nUniversal Instantiation\ni (Forall (x) (P ... ))\nj [a/x](P ... )\n(UI i)\nUniversal Generalization\ni (P ... x ... )\nj (Forall (x) (P ... x ...))\n(UG i)\nwhere a is any term at all\nas long as [a/x] is a valid substitution.\nvariable\nwhere the sentence in line i contains no free variables\nintroduced by existential instantiation and the\nx does not occur free in assumption within whose\nscope line i lies.\nLogic : Page 9\n\nLogic : Page 10\nQuantifier Rules (2)\nExistential Instantiation\nExistential Generalization\ni (Thereis (x) (P ... ))\ni (P ... )\nj [z/x](P ... )\n(EI i)\nj (Thereis (x)[x/a](P ... )) (EG i)\nwhere z is a brand new variable\nwhere a is any term at all\nAlphabetic Variance\ni (Q (x)(P ... ))\nj (Q (z)[z/x](P ... ))\n(AV i)\nwhere Q is either quantifier and [z/x] is a valid substitution.\nLogic : Page 10\n\nLogic : Page 11\nDerived Rules\nIndirect Proof\nGIGO\ni (Show A)\ni (not A)\ni+1 | (not A)\nj A\nJ\n| B\nk C\n(GIGO i j)\nk\n| (not B)\nl A\n(IP (j k) (i+1))\nCut\ni (Or A B)\nj (not A)\nk B\n(Cut i j)\nModus Tolens\ni (Implies A B)\nj (not B)\nk (not A)\n(MT i j)\nDeMorgan's Rules\nQuantifier Negations\n(not (or A B)) = (and (not A) (not B)) (not (For-all (x) P)) = (There-is (x) (not P))\n(not (And A B)) = (or (not A) (not B)\n(not (There-is (x) P)) = (For-all (x) (not P))\nLogic : Page 11\n\nLogic : Page 12\nAn Example Proof\n1. Show (Implies (And P (Or Q R))\n(Or (And P Q) (And P R)))\n2. | (And P (Or Q R))\nAssumption motivated by 1\n3. | P\nAnd Elimination 2\n4. | (Or Q R)\nAnd Elimination 2\n5. | Show (Implies Q\ntrying for Or Elimination from 4\n(Or (And P Q) (And P R)))\n6. | | Q\nAssumption motivated by 5\n7. | | (And P Q)\nAnd Introduction 3,6\n8. | | (Or (And P Q) (And P R))\nOr Introduction 7\n9. | (Implies Q\nConditional Proof 8 (6)\n(Or (And P Q) (And P R)))\n10. | Show (Implies R\ntrying for Or Elimination from 4\n(Or (And P Q) (And P R)))\n11. | | R\nAssumption motivated by 10\n12. | | (And P R)\nAnd Introduction 3,11\n13. | (Implies R\nConditional Proof 13 (11)\n(Or (And P Q) (And P R)))\n14. | (Or (And P Q) (And P R))\nOr Elimination 4,9,13\n15. (Implies (And P (Or Q R))\nConditional Proof 14 (2)\n(Or (And P Q) (And P R)))\nLogic : Page 12\n\nLogic : Page 13\nAnother Proof\n1. Show (Implies (Thereis (?y) (Forall (?x) ( P ?x ?y)))\n(Forall (?x)\n(Thereis (?y) ( P ?x ?y))))\n2. | (Thereis (?y) (Forall (?x) ( P ?x ?y)))\nAssumption motivated by 1\n3. | (Forall (?x) (P ?x a))\nExistential Instantiation 2\n4. | (P b a)\nUniversal Instantiation 3\n5. | (Thereis (?w) (P b ?w))\nExistential Generalization 4\n6. | (Thereis (?y) (P b ?y))\nAlphabetic Variation 5\n7. | (Forall (?z) (Thereis (?y) (P?z ?y)))\nUniversal Generalization 6\n8. | (Forall (?x) (Thereis (?y) (P ?x ?y)))\nAlphabetic Variation 7\n9. | (Implies (Thereis (?y) (Forall (?x) ( P ?x ?y)))\n(Forall (?x) (Thereis (?y) ( P ?x ?y))))\nConditional Proof 8 (2)\nLogic : Page 13\n\nLogic : Page 14\nBogus Proof\n1.\nShow (Implies (Forall (?x) (Thereis (?y) ( P ?x ?y)))\n(Thereis (?y) (Forall (?x) ( P ?x ?y))))\n2. | (Forall (?x) (Thereis (?y) (P ?x ?y)))\nAssumption motivated by 1\n3. | (Thereis (?y) (P b ?y))\nUniversal Instantiation 2\n4. | (P b a)\nExistential Instantiation 3\n5. | (Forall (?w) (P ?w a))\nUniversal Generalization 4\n6. | (Forall (?x) (P ?x a))\n7. | (Thereis (?z) (Forall (?x) (P ?x ?z)))\n8. | (Thereis (?y) (Forall (?x) ( P ?x ?y)))\n9.\n(Implies (Forall (?x) (Thereis (?y) ( P ?x ?y)))\n(Thereis (\nWhere is the bogon?\nAlphabetic Variation 5\nConditional Proof 8 (2)\nExistential Generalization 6\nAlphabetic Variation 7\n?y) (Forall (?x) ( P ?x ?y))))\nLogic : Page 14\n\nLogic : Page 15\nNormal Form\nNotation:\n(Q (x) ...) means either (For-all (x) ...) or (There-is (x) ...)\n(F .. x ..) or (H .. x ..) is some expression including a free occurence of x\nG is some expression containing no free occurence of the variables of interest.\nQuantifier Rules\n(1) (Or (Q (x) (F .. x ..)) G) = (Q (x) (Or (F .. x ..) G))\n(2) (And (Q (x) (F .. x ..)) G) = (Q (x) (And (F .. x ..) G))\n(3) (And (For-all (x) (F .. x ..)) (For-all (x) (H .. x ..))) = (For-all (x) (And (F .. x ..) (H .. x ..)))\n(4) (Or (There-is (x) (F .. x ..)) (There-is (x) (H .. x ..))) = (There-is (x) (Or (F .. x ..) (H .. x ..)))\n(5) (Or (Q1 (x) (F .. x ..)) (Q2 (x) (H .. x ..))) = (Q1 (x) (Q2 (z) (Or (F .. x ..) (H .. z ..))))\n(6) (And (Q1 (x) (F .. x ..)) (Q2 (x) (H .. x ..))) = (Q1 (x) (Q2 (z) (And (F .. x ..) (H .. z ..))))\nNegation Rules\n(1) (Not (Not A)) = A\n(2) (Not (There-is (x) (F .. x ..))) = (For-all (x) (Not (F .. x ..)))\n(3) (Not (For-all (x) (F .. x ..))) = (There-is (x) (Not (F .. x ..)))\nDeMorgan's Laws\n(1) (Not (And A B)) = (Or (Not A) (Not B))\n(2) (Not (Or A B)) = (And (Not A) (Not B))\nDistribution Laws\n(1) (Or (And A B) (And C D)) = (And (Or A C) (Or A D) (Or B C) (Or B D))\n(2) (And (Or A B) (Or C D)) = (Or (And A C) (And A D) (And B C) (And B D))\nImplication\n(Implies A B) = (Or (Not A) B)\nLogic : Page 15\n\nLogic : Page 16\nNormal Form (2)\nOrder of Use of Identities:\n1. Implication\n2. Negations and deMorgan\n3. Quantifers\n4. Distribution\nThe end result is (Q (x) (Q (y) ... (And (0r S1 S2 S2) (Or (S3 S4 .... )))\nThe S's are either positive or negative simple statements\nThe outermost Q's are all Forall and the inner Q's are Thereis.\nDrop all the Thereis Q's replacing their variables by functions of the universally\nquantified variables.\nDrop all the Forall Q's leaving the variables free.\nGet a set of quantifier free disjunctions.\nLogic : Page 16\n\nLogic : Page 17\nResolution Rule\n(Or P\nG)\n(OR (Not Q) H)\nIf P and Q can be unified (with unifying substitution S)\nthen it is legal to infer\n(OR G' H')\nwhere G' and H' are the results of Substitution S into G and H (respectively).\nUnifying two statements means finding a substitution for the variables in the two\nstatements such that the two statements are identical after the substitution is\nperformed in each statement.\n(P ?x ?x)\n(P ?x a)\n(P ?x a ?x)\n(P ?x a ?x)\n(P a b)\n(P b ?y)\n(P b ?y ?y)\n(P ?y ?y a)\nNot unifiable\n(?x => b)\nNot unifiable\n(?x => a)\n(?y => a)\n(?y => a)\nLogic : Page 17\n\nLogic : Page 18\nHorn Clauses: A Restriction to Rule-like Form\nSuppose that after normalization all clauses have at most 1 positive\nstatement\n(Or p (not q) (not r) (not s) (not t))\nwhere any of p q r s t may contain with free variables\nThen by implication identity this is the same as:\n(implies (and q r s t) p)\nOr rewriting as a logical rule:\nIf\nand q, r, s, t\nThen p\nLogic : Page 18\n\nLogic : Page 19\nMechanizing Logical Rules\n- Two natural chaining methods:\n- Forward, data driven, antecedent.\n- Backward, goal driven, consequent.\n- Examples:\nIf\n(and (Parent ?x ?y) (Parent ?y ?z))\nThen (Grandparent ?x ?z)\nIf\n(and (Grandparent ?x ?y) (Gender ?x male))\nThen (Grandfather ?x ?y)\nLogic : Page 19\n\nLogic : Page 20\nExamples\n- Forward Chaining:\nAssert (Parent Abe Ike)\nAssert (Gender Abe male)\nAssert (Parent Ike Jake)\nDeduce (Grandparent Abe Jake)\nDeduce (Grandfather Abe Jake)\n- Backward Chaining:\nSame Facts, plus (Father Abe Ishmael).\nGoal (Grandfather Abe Jake)\nGoal (Grandparent Abe Jake)\nGoal (Parent Abe ?y) matches Ishmael, Ike\nGoal (Parent Ishmael ?y) no matches, fail backup\nGoal (Parent Ike ?y) matches Jake, rule succeeds\nGoal (Gender Abe Male) succeeds, rule succeeds.\nLogic : Page 20\n\nLogic : Page 21\nBasics of Semantics\n- A means for formally assignment \"meaning\" to syntax.\n- More precisely: Semantics is a way of specifying which\ninferences are sanctioned, i.e. \"entailment\".\n- A Model\n- Domain (a mathematical set)\n- Interpretation, a function that maps:\n- Constant symbols of the syntax to elements of the domain.\n- Function symbols of the syntax to functions over the domain.\n- Predicate symbols of the syntax to predicates over the domain (note that this\nis a mapping from a set of arguments to true or false).\n- Through the obvious compositions, a statement is mapped to true or false.\n- A Model of a set of axioms is a model that maps all the axioms to True.\nLogic : Page 21\n\nLogic : Page 22\nValidity and Provability\n- Consider all models of a set of Axioms\n- Consider those statements that are mapped into true in all these models\n- These are called the Valid Statements.\n- Consider the set of all statements provable by your inference\nsystem.\n- These are called the Theorems.\n- Two different notions!\n- We would like these to be the same sets of statements.\n- If every valid statement is a theorem\n- The system is called complete\n- You can deduce what's true\n- If every theorem is a valid statement\n- The system is called consistent.\n- You can make only sound deductions.\n- A logicians day is made when a proof of soundness and\ncompleteness is obtained.\nLogic : Page 22\n\nLogic : Page 23\nWhat Formal Properties Hold?\nDecidability\n- Is there an algorithm for deciding whether or not something is a\ntheorem?\n- The British Museum algorithm:\n- A conceptual way to show that something is a theorem.\n- Generate all possible proofs in order of increasing length.\n- Stop when you get a proof with the intended theorem as its last line.\n- What paradigm is this? How good is it?\n- However:\n- This doesn't solve the problem of decidability.\n- Church, Turing and others showed that the language is rich enough to\nencode the workings of a Turing machine.\n- Does this seem contradictory?\nLogic : Page 23\n\nLogic : Page 24\nWhat Formal Properties Hold?\nCompleteness and Consistency\n- Is the system consistent?\n-\nYes (Hilbert and Ackerman).\n- Is the system complete?\n-\nYes (Godel).\n- What happens if you add some interesting axioms? For example,\nthose for arithmetic (or those for List structure: cons, car, cdr).\n- Godels' incompleteness theorem\n-\nYou can't be both consistent and complete.\n-\nThe language is rich enough to form a statement which says \"I have no\nproof\".\nLogic : Page 24\n\nLogic : Page 25\nThe Expressiveness of Logic\n- Logic is intended to be a universal and therefore neutral formalism\n- You pick the constants, functions and predicates to represent your ontology.\n- Logic doesn't prevent you from doing what you want.\n- Logic doesn't guide you about how to do this.\n- Logic is very expressive\n- Quantification\n- Any kinds of statements you want\n- Logic can capture ambiguity and partial information:\n- Existential quantification\n-\n(Thereis\n\n(x) (p x))\n\n- Disjunction\n-\n(Or p q)\n\nLogic : Page 25\n\nLogic : Page 26\nUsing Logic in Practical Applications:\n- Weaker logical systems seem to be strong enough in practice to be\nuseful and yet still controllable.\n- Logical Rule Languages are examples:\n- A1 & A2 & ... & An --> C1 & ...\n- The A's are called antecedents\n- The B's are called consequents\n- Forward Chaining: As facts are asserted, the LHS of all rules are\nchecked for a consistent matching set. If so the RHS is asserted.\n- Backward chaining: If you want to prove the RHS, try to prove the\nantecedents in the LHS.\n- Examples:\n-\nProlog\n-\nKee's rule system\n-\nART\n\n-\nJoshua\nLogic : Page 26\n\nLogic : Page 27\nWhen is Logic the Right Representation?\n- Two Case Studies:\n- American Express Authorizer's Assistant\n- British Nationality Act\n- Goal in both cases is Policy Distribution: The systematic and\nreproducible interpretation of the intended meaning of a set of\nrules or policies.\n- Credit Authorization\n- British Nationality Law\n- Given the same data, the same conclusion should result.\n- Human wisdom, common sense, and emotion are not useful or\ndesirable.\n- The corpus of policies is, in principle, complete and consistent.\n- One can think of the policies as the axioms.\n- Solving the problem involves soundly deducing a consequence of\nthe set of axioms.\nLogic : Page 27\n\nLogic : Page 28\nAmex AA Rationale\n- Human nature works against the credit authorizer:\n- start-up transient to learn all the policies.\n- a conservative mindset\n- The job is high pressure, boring and not particularly well\ncompensated.\n- High turnover\n- Amex goal was to get uniform behavior in accordance with\ncompany policies.\n- The action to take is a logical consequence of the company's authorization\nrules.\n- Reasonably simple, logical rules worked well for this.\n- Prototype was more complicated than needed.\nLogic : Page 28\n\nLogic : Page 29\nWhat are the \"Logic Glasses\" ?\n- The statement is the appropriate unit of modularity.\n- Information is correctly captured in the form of single independent\nstatements and single independent inferences.\n- Think about what's true and what follows from it. Sound inference\nis all. Denotation is king.\n- Capture the logical statements appropriate to the domain,\npreserving their declarative spirit.\n- Impose your ontology through the choice of predicates and\nfunctions.\n- The logical inference system gives the declarative statements a\nprocedural content (namely what inference rules they cause to\nrun).\n- The policies become active interpreters of the data.\n- Control is secondary or to be ignored.\nLogic : Page 29\n\nLogic : Page 30\nHow well does this work in practice?\n- Authorizer's assistant:\n- Often's people's purchasing patterns are idiosyncratic.\n- Holidays, vacations, etc. need to be understood.\n- These were captured fairly well in the ART rule system.\n- Speed of deduction was very important.\n- Control of reasoning was crucial.\n- Getting to the data was a critical success factor.\n- Accessing IBM \"databases\" was the \"make or break\" part.\n- Has worked enormously well in practice.\n- 50% to 75% of Amex credit requests are automatically handled.\n- Good advice given in the rest.\n- British Nationality Act:\n- Received Mindset: logic means correct, error free, \"right the first time\"\n- But: Exploratory logic is a perfectly reasonable mindset.\nLogic : Page 30\n\nLogic : Page 31\nHow Well Does It Work In Practice?\nNationality Act:\n- Negation was very tricky.\n- Counterfactuals and non-monotonicity are problems.\n- Choosing the right predicates (i.e., picking the ontology) was hard\nand experimental in character.\n- Logic provided no guidance for how to do this.\nLogic : Page 31"
    },
    {
      "category": "Lecture Notes",
      "title": "lect09_frames.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/91db250d73afad503aedfea467121929_lect09_frames.pdf",
      "content": "Frame-Based Systems\n6.871 Lecture 9\n\nOutline\n- Minsky's original motivations, observations\n- Details and use\n- In the spirit: PIP and Internist-1\n- Not in the spirit: FRL\n- Frames summary\n- Comparison of KR technologies\n6.871 - Lecture 9\n\nA KR Should Tell You\n- What to attend to:\n\"A Frame ...[represents]\n...\"\n- What inferences are recommended:\nMinsky \"A Framework for Knowledge Representation\"\n6.871 - Lecture 9\n\nMotivations\n- A model of human cognition; the structure of\nknowledge memory; \"common sense\" reasoning\n- Explain why understanding is ...\n- fast\n6.871 - Lecture 9\n\nMotivations\n- A model of human cognition; the structure of\nknowledge memory; \"common sense\" reasoning\n- Explain why understanding is ...\n- fast\n- anticipatory\n6.871 - Lecture 9\n\nMotivations\n- A model of human cognition; the structure of\nknowledge memory; \"common sense\" reasoning\n- Explain why understanding is ...\n- fast\n- anticipatory\n- persistent over changes in perspective\n6.871 - Lecture 9\n\nMotivations\n- A model of human cognition; the structure of\nknowledge memory; \"common sense\" reasoning\n- Explain why understanding is ...\n- fast\n- anticipatory\n- persistent over changes in perspective\n- tenacious: \"Colorless green ideas sleep furiously.\"\nChomsky\n6.871 - Lecture 9\n\nMotivations and Observations\n- A model of human cognition; the structure of knowledge\nmemory; \"common sense\" reasoning\n- Explain why understanding is ...\n- fast\n- anticipatory\n- persistent over changes in perspective\n- tenacious: \"Colorless green ideas sleep furiously.\"\n- Meaning is poorly approximated by dictionary defns.\n- Memory is full of prototypical situations, richly\ninterconnected.\n6.871 - Lecture 9\n\nUse\n- Frames are a useful representation when\nthe task is to ...\n6.871 - Lecture 9\n\nDetails\n- Frames are networks\n- Top levels fixed\n- Lower levels hold specific instances of data\n- Terminals holding data have easily displaced\ndefaults\n- Inferencing is matching of data to prototype\n- Subjective, approximate\n- Optional (in the original conception):\n- Hierarchy of frames, inheritance\n- Daemons: procedures triggered when needed\n6.871 - Lecture 9\n\nExample\nBirthday Party\n6.871 - Lecture 9\nHave students make suggestions about frame system for birthday party; record on the board.\n\nIn The Spirit: PIP\n- Motivated by data on clinical cognition:\n- Quick focus on little data\n- Not easily refocused\n- Ask discriminating questions\n- Answer is an ordered list of matches\n- Wanted expert level performance\n6.871 - Lecture 9\n\nIn The Spirit: PIP\nNephroticSyndrome\nIS-A\nFinding\nFinding\nFinding\nMustNotHave\nSufficient\nClinicalState\nLow Serum Albumin\nHeavy Proteinuria\n...\nProteinuria Absent\nPedal edema and proteinuria > 5gm/day\nMayBeCausedBy Acute Glomerulonephritis\nMayBeCompBy\nHypovolemia\nScoring\nEdema:\nMassive, symmetrical: 1.0\nNot massive, symm.\n0.5\nAsymmetrical\n-0.5\n...\n- 70 Disease frames, 500 findings\n- Variety of interconnections: MustNotHave, ComplicatedBy...\n6.871 - Lecture 9\n\nPIP's Machinery\n- Hypothesis generation via data-driven triggering\n- Frame moves into short term memory\n- \"Nearby\" frames become semi-active\n- Hypothesis testing via calibrating match of data & frame\n- Match of frame and data\n- Sufficiency, exclusionary rules\n- Scoring\n- Ability to explain the findings\n- Additional data gathering to fill terminals\n- Asks questions\n6.871 - Lecture 9\n\nIn the Spirit: Internist-1\n- Doctors move from more general to more specific disorders\n- Need hierarchy of frames\nALCOHOLIC HEPATITIS\nAKO\nHepatitis\nFindings\nAge 16-25\nAge 26-55\nAge >55\nAlcohol History\nCauses Hepatatic Encephalopathy\n-\nHierarchy, rooted on organ systems\n-\nThe numbers: evoking strength and frequency\n-\n500 disease frames, 3500 findings\n6.871 - Lecture 9\n\nInternist-1: Reasoning\n- Begin with lots of data\n- Evoking strength determines active\nhypotheses\n- increased/decreased for present/absent\nfindings\n- Matching controlled by \"undershoot\" and\n\"overshoot\"\n- Reasoning strategies\n- pursue, rule out, discriminate\n6.871 - Lecture 9\n\nNot in the Spirit: FRL\n- Task: a scheduler constraint propagation +\ncommon sense\n- Hierarchical frames; viewed as \"property lists\" (!)\n- Wide variety of explicit slot types, e.g.:\n- Comments (source of value)\n- Defaults\n- Value\n- Constraints on values\n- Attached procedures\n- IfNeeded, IfAdded, IfRemoved\n- Looks like?\n6.871 - Lecture 9\n\nFRL\nMEETING\nAKO\nVALUE\nActivity\nWHO\nREQUIRE\nEXIST x Chairman(x)\nWHEN\nRA-GROUP-MEETING\nAKO\nVALUE\nMEETING\nWHERE\nDEFAULT\nConferenceRoom1\nWHEN\nDEFAULT\nFriday\nPREFER\nWeekday\nACTIVITY\nAKO\nVALUE\nTHING\nWHEN\nIfAdded\nAddToCalendar\n6.871 - Lecture 9\n\nNot in the Spirit: FRL\n- Where is the theory of intelligent reasoning?\n- Where are the \"glasses\"?\n- Instead of knowledge representation we\nhave...?\n- A common mistake: focus on mechanism\ninstead of intent.\n6.871 - Lecture 9\n\nFrames Summary\n- Inspired by human understanding and\nreasoning\n- Prototypes and matching as key concepts\n- Representations evolve: Originally a\nmodel of human memory and cognition,\nnow at times used more mechanistically\n6.871 - Lecture 9\n\nComparing the Technologies\nRepresentation and reasoning using\nLogic:\nbird(x)\ncan-fly(x)\nRules:\nIf class of animal is bird then animal can fly (.9)\nSI-Nets:\nAnimal\nLoco\nFly\nFrames:\nBird\nClass\nAnimal\nLoco\nFly\n6.871 - Lecture 9\n\nComparing the Technologies\nGranularity of unit of meaning\n- Logic\n- Axioms\n- Rules\n- Centered around heuristic association\n- Individual inference step\n- SI-Nets\n- Organized around \"nouns\"\n- Necessary and sufficient conditions\n- Frames\n- Organized around prototypes\n- Meaning spread throughout the network.\n6.871 - Lecture 9\n\nComparing the Technologies\nReasoning\n- Logic\n- Formal deduction\n- Results precisely determined\n- Rules\n- Chains of heuristic associations\n- Uncertainties combined\n- SI-Nets\n- Logic-based subsumption algorithm\n- Formal method and result\n-\nFrames\n\n- Heuristic matching of instances to prototypes\n- Ranked by closeness\n6.871 - Lecture 9"
    },
    {
      "category": "Resource",
      "title": "ashwindeshpa_ilt.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/72fb8081b0eaadc1b85cad722f5685b0_ashwindeshpa_ilt.pdf",
      "content": "Inverse Laplace Transformer\n6.871 Final Project\nAshwin Deshpande\nMay 12th, 2005\nProfessor Davis\n\n- 2 -\n1 Abstract.......................................................................................................... - 4 -\n2 Introduction ................................................................................................... - 4 -\n2.1 Design Parameters ................................................................................... - 4 -\n2.2 Problem and Approach ............................................................................ - 5 -\n3 Program Use................................................................................................... - 6 -\n3.1 Program Formatting ................................................................................ - 6 -\n3.2 Program Demonstration .......................................................................... - 7 -\n4 Rules .............................................................................................................. - 9 -\n4.1 Rules as the Knowledge Representation ................................................ - 10 -\n4.2 Rule Types ............................................................................................. - 10 -\n4.2.1 Always Rules .................................................................................. - 10 -\n4.2.2 Lookup Rule ................................................................................... - 12 -\n4.2.3 Guess Rules .................................................................................... - 13 -\n5 Architecture ................................................................................................. - 14 -\n5.1 Costs...................................................................................................... - 14 -\n5.1.1 Complexity Cost ............................................................................. - 15 -\n5.1.2 Rule Cost ........................................................................................ - 15 -\n5.2 Simplification Propagation .................................................................... - 17 -\n5.3 Inverse Laplace Transform Propagation ................................................ - 18 -\n6 Program Review........................................................................................... - 20 -\n6.1 Positive Aspects..................................................................................... - 20 -\n6.1.1 Successful Knowledge Representation ............................................ - 20 -\n6.1.2 System Generality ........................................................................... - 20 -\n6.1.3 System Scalability ........................................................................... - 21 -\n6.2 Negative Aspects ................................................................................... - 22 -\n6.2.1 Halting Problems ............................................................................ - 22 -\n6.2.2 Resource Problems .......................................................................... - 22 -\n6.3 Future Improvements ............................................................................ - 23 -\n6.3.1 Caching/Case-Based Reasoning ..................................................... - 23 -\n6.3.2 Cost Variations ............................................................................... - 23 -\n7 Lessons Learned ........................................................................................... - 24 -\n7.1 Future Improvements ............................................................................ - 24 -\n7.2 Control Structure Implementation......................................................... - 25 -\n8 Conclusion ................................................................................................... - 25 -\n9 Acknowledgements ...................................................................................... - 26 -\nAppendix A: Complete Rule Listings.............................................................. - 26 -\n7.1 Always Rules ......................................................................................... - 26 -\n7.2 Lookup Rules......................................................................................... - 29 -\n7.3 Guess Rules ........................................................................................... - 30 -\nAppendix B: Complete Program Output ......................................................... - 31 -\nReferences....................................................................................................... - 43 -\n- 2 -\n\n- 3 -\nTABLE OF FIGURES\nFigure 1: Forward Laplace Transform and Inverse Laplace Transform Integrals....................5\nFigure 2: Symbols and their Meanings..........................................................................6\nFigure 3: Format of Solution ..................................................................................... 7\nFigure 4: Always Rule Examples.................................................................................12\nFigure 5: The Lookup Rule........................................................................................ 13\nFigure 6: Guess Rule Examples.................................................................................. 14\nFigure 7: A Sample Expression for Complexity Cost Analysis........................................... 15\nFigure 8: Simplification Architecture........................................................................... 17\nFigure 9: Inverse Laplace Transform Propagation Architecture..........................................18\nFigure 10: Unsolvable Rational Functions.....................................................................21\n- 3 -\n\n- 4 -\n1 Abstract\nThe goal of the project was to design and implement a knowledge-based\napplication system capable of being proficient in its domain. The Inverse Laplace\nTransformer (ILT) meets these specifications as an expert system in the field of symbolic\ninverse Laplace Transforms. The ILT performs this task by employing a customized rule-\nbased system involving weight-based forward-propagation. While the ILT has many\nlimitations, it contains the knowledge to perform elementary inverse Laplace transforms\nand the framework to easily expand into a more powerful system.\n2 Introduction\nThe ILT was designed to act as an aid in performing inverse Laplace transforms.\nIn addition to finding the inverse Laplace transform, the program provides\nmeaningful steps describing the set of transformations it took throughout the process\nof ascertaining the inverse Laplace transform.\n2.1 Design Parameters\nAs most real-life transfer functions are real and can be approximated as a\nrational function, the class of elementary, real, rational transfer functions has been\nchosen as the target input space, as this space is frequently used and does not require\ncomplex mathematics to reason about most inverse Laplace transforms in this space.\nFurthermore, the ILT's knowledge base is restricted to elementary operations that a\ncollege freshman could perform without the aid of calculus. However, while the\nknowledge base is confined, the general framework including expression storage and\ninference mechanisms is robust enough to incorporate additional knowledge and\npossibly extending the size of the program's input space.\nThe input to the program should be a well-formed scheme expression\norganized in a format described in Section 3. The output of the program should be a\nlist of steps required to systematically derive the inverse Laplace transform from the\ngiven input.\n- 4 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 5 -\n2.2 Problem and Approach\nF(s) = ∫\ninf\nf(t)e-st dt\nf(t) = 2πi\ninfi∫\nF(s)est ds\n-infi\n0Forward Laplace Transform\nIntegral\nInverse Laplace Transform\nIntegral\nFigure 1 - Forward Laplace Transform and Inverse Laplace Transform Integrals\nThe Laplace transform is a well-defined formula. Furthermore, the inverse\nLaplace transform can also be written as a closed form integral expression as shown\nin figure 1. However, despite the ability to reduce all inverse Laplace transforms into\nintegral evaluation, most humans rely on table properties to change the expression to\na form that can be looked up in a table.\nThe ILT follows the human approach of using properties to simplify the s-\nSpace expression into a table lookup. Furthermore, to emphasize the point that the\nsystem uses mainly properties, the ILT has been given only one table lookup to\nwhich it must simplify all s-Space expressions in order to transform into t-Space.\nThe ILT uses rules as the knowledge representation and a customized\nforward-chaining mechanism to propagate the rules through the rules. A rule-based\napproach was chosen as the problem-solving paradigm primarily as rules can closely\nmimic the human process of logically transforming one expression into another.\nFurthermore, a rule-based system is simple to both implement and expand upon.\n- 5 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 6 -\n3 Program Use\nThis section will describe the input and output formatting in section 3.1 and\nthe show a demonstration of the program's output in section 3.2.\n3.1 Program Formatting\nThe ILT is capable of receiving various input expressions and output various\noutput expressions. A guide to the symbols used by the ILT is given in figure 2.\nSymbol\nMeaning\nS\nThe main variable in Laplace space\nT\nThe main variable in time space\nE\nThe mathematical symbol e=2.718...\n+\nThe addition operator\n-\nThe subtraction operator\n*\nThe multiplication operator\n/\nThe division operator\nG\nThe gamma function operator (Output Only)\nP\nThe power operator\nA+BI\nA and B describe the real and imaginary components of a complex number\nFigure 2 - Symbols and their meanings\nThe ILT is capable of receiving any expression involving the s, E, +, -, *, /,\nand P symbols and operators as well as any real numbers. The expressions must be\nwell-formed scheme expressions where the operator is adjacent to the opening\nparenthesis to the left of it. Furthermore, after every number, symbol, operator, or\nclose parenthesis, a space must separate the element from the next element.\nThe output of the program is similarly formatted. The final answer will be\nrepresented as a sum of t-Space expressions rather than a single t-Space expression.\nIn addition, the output may also contain the gamma function in addition to the listed\nsymbols and operators.\n- 6 -\n\n_______________________________________________________________________\n________________________________________________________________________\n- 7 -\n3.2 Program Demonstration\nIn this section, the ILT will perform an elementary inverse Laplace transform:\nF(s)= (/ 1 (P (+ s 5 ) 3 ) ). The solution will be annotated to describe the output of the\nprogram.\nThe program first prompts the user for the file containing the input\nexpression. The content of sampleexp3.txt is given in bold typeface.\nEnter File Name: sampleexp3.txt\nsampleexp3.txt: (/ 1 (P (+ s 5 ) 3 ) )\nNext, the program performs many rounds of forward propagation before\nreaching a solution. Only the solution path is displayed. The format of a solution\nentry is given in figure 3.\nJUSTIFICATION\n- Which Rule was Applied\n- A Description of the Rule\n- Which TransformPair the Rule was Applied on\n- The Local Expression Targeted\nS-SPACE\n- The Sum of a Number of Expressions in s-Space\n-For each expression, a list of pending\noperations needed to undo the\ntransforming steps in t-Space\nT-SPACE\n- The Sum of a Number of Transformed\nExpressions in t-Space\nFigure 3 - Format of solution\nThe first step converts the user input into a format that the program can use.\nThus, no rules are applied at this point.\nUSER INPUT.\nS-SPACE\n- 7 -\n\n- 8 -\nSUM {\n(/ 1+0I (P (+ s 5+0I ) 3+0I ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nThe first rule applied on the solution path is an s-Space frequency shifting\nrule. The shift is applied to the previous transform to yield a new transform.\nInformation about the target expression and rule description are also displayed.\nRule 'Frequency Shifting'\nWhich performs: F(s-a) ==> F(s) with pending operation (+ a )\nWas applied on transform pair 0\nOn the expression: (/ 1+0I (P (+ s 5+0I ) 3+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I (P (+ (- s (+ 5+0I ) ) 5+0I ) 3+0I ) )\nwith pending operations: (Shift (+ 5+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nThe next rule applied is a number evaluation rule. A few other rules similar\nin format to these examples are displayed; however, due to space considerations,\nthey have been left out in this example.\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 0\nOn the expression: (+ 5+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I (P (+ (- s 5+0I ) 5+0I ) 3+0I ) )\nwith pending operations: (Shift (+ 5+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\n.........\n- 8 -\n\n- 9 -\nWhen the s-Space expression is reduced to a form that the 'Lookup' rule can\noperate on, the expression is converted from s-Space to t-Space. Furthermore, all\npending operations are applied on the t-Space expression.\nRule 'Lookup'\nWhich performs: (/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nWas applied on transform pair 0\nOn the expression: (/ 1+0I (P s 3+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 5+0I ) ) ) ) (/ (P t (- 3+0I 1+0I )\n) (G 3+0I ) ) )\n}\nPress any key to continue . . .\nFinally, the program simplifies the t-Space expressions into a more compact\nform using rules and outputs the final answer.\nWhich simplifies to:\nS-SPACE\nSUM {\nDONE\n\n}\nT-SPACE\nSUM {\n(/ (* (P E (* t -5+0I ) ) (P t 2+0I ) ) 2+0I )\n}\nA complete output sample highlighting many of the programs strengths can\nbe found in appendix B.\n4 Rules\nThe ILT uses rules as its primary knowledge representation. All the\npredicates in the system are transforms that are simplified or converted by the rules\nin order to make more transforms until a solution is reached. In this section, first the\nadvantages and disadvantages of a rule-based system in this domain will be\ndiscussed. Next, the 3 different rule types will be outlined.\n- 9 -\n\n- 10 -\n4.1 Rules as the Knowledge Representation\nThe ILT uses rules as the knowledge representation. This representation was\nchosen for various reasons.\nRules capture the human method of logically transforming one expression\ninto another. Many humans understand a mathematical process best when\nexpressions are systematically derived in succession from the starting expression to\nthe goal expression. This characteristic of human understanding is best exemplified\nby mathematical proofs, which follow a very rigid logical structure. The transition\nfrom one expression to another can be well captured by rules, which are triggered by\ncharacteristics of the original expression and perform a logical operation to produce a\nnew expression. Furthermore, the method of using rules enables the ILT to easily\noutput its process after solving the inverse Laplace transform.\nRules are also simple to implement. This rule-based system has modularized\nrules, which can be easily added and subtracted without affecting the stability or\nindependence of the inference engine. As this project was done on a tight schedule,\nthe ease of implementing a rule-based system was a major factor in choosing rules as\nthe knowledge representation.\n4.2 Rule Types\nThe ILT uses three different types of rules. The three rule types are named\nalways rules, lookup rules, and guess rules. These different types have varying costs\nand functions. Furthermore, these rules have different priorities, which will be\ndescribed in detail in Section 5. A complete listing of all the rules is located in\nappendix A.\n4.2.1 Always Rules\nAlways rules are the most primitive rules in the ILT. Most always rules\nimplement simple arithmetic properties such as number evaluation, associativity, and\ncommutability used for simplification. These rules generally target sub-expressions\n- 10 -\n\n- 11 -\nrather than the entire transform. Always rules are used heavily to tweak expressions\ninto forms on which the lookup and guess rules can operate. Furthermore,\nexclusively always rules are used in simplification. All always rules are designed to\nbe non-conflicting, so the program will never enter an infinite loop by triggering only\nalways rules. As their name suggests, always rules are always helpful in taking one\ntransform and converting it to another simpler transform. Furthermore, always rules\nhave no branching, as given an input transform, they will only produce at most one\nmodified output transform. Since always rules nearly always simplify expressions\nand have low branching, they are assigned a very low cost.\nSome examples of always rules are depicted in figure 4.\n- 11 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 12 -\nNumber Evaluator: Cost 1.0f\nReduces a numerical expression into a number\nNumerical expression => number\nMultiplication Identity: Cost 1.0f\nRemoves a factor 1 from a multiplication operation\n(* a 1 ... b ) => (* a ... b)\nAddition Simplifier: Cost 1.0f\nMerges nested addition operations\n(+ a (+ b ... c ) d ) => (+ a b ... c d)\nFigure 4 - Always Rule Examples\n4.2.2 Lookup Rule\nThe lookup rule is the only rule that can convert a transform from s-Space to\nt-Space. As described in section 2, the ILT has only one lookup rule to highlight the\nprogram's ability to use properties in finding inverse Laplace transforms. Since the\nlookup rule is the only one rule capable of bridging the conversion from s-Space to t-\nSpace, it is used in every inverse Laplace transform. Furthermore, since the use of\nthe lookup rule signals that at least part of the problem has been solved, the lookup\nrule is given no cost. In contrast, the more instances that transforms use the lookup\nrule, the more they are rewarded by subtracting penalties from their total cost. Thus,\nthe application of the lookup rule is highly encouraged by the system.\nThe lookup rule is shown in figure 5.\n- 12 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 13 -\nLookup: Cost 0.0f\nTransforms an expression from s-Space to t-Space\n(/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nFigure 5 - The Lookup Rule\n4.2.3 Guess Rules\nGuess rules, as their name suggest, guess that a particular complex operation\nis needed to perform the inverse Laplace transform. Some guess rules target the\nentire transform, whereas others only target sub-expressions within the transform.\nFurthermore, some guess rules permanently change the value of the s-Space\nexpression by adding pending operations to the transform. Rules in this class include\ncomplex rules like generalized partial fractions, quadratic factoring, and applying\nlinearity. Most transforms generated by guess rules are not used; however, a small\nsubset of these applications create simplified transforms on which the system can\nthen successfully operate. Since guess rules create many branches, are generally\nmore complex than the other rules, and are not extensively used on the solution path,\nguess rules incur high costs.\nSome examples of guess rules are listed in figure 6.\n- 13 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 14 -\nScaling: Cost 200.0f\nPerforms frequency scaling and adds a\ncorresponding pending operation\nF(as) => F(s) with pending operation (SCALE a)\nQuadratic Factorization: Cost 200.0f\nPerforms quadratic factorization on an unfactored\nsecond degree polynomial\n(as^2 + bs + c) => (s + r1)(s + r2)\nSubtraction Addition Conversion: 350.0f\nConverts a subtraction operation into an addition\noperation\n(- a b ) => (+ a (* -1 b ) )\nFigure 6 - Guess Rule Examples\n5 Architecture\nThis section will describe the architecture of the ILT system. The architecture\nof ILT was inspired by SAINT, and many elements of the architectures have\nsimilarities. The first section will describe the costs associated with transforms for\nforward-propagation. The second section will describe the simplification\narchitecture. Finally, the third section will describe the entire system including the\nforward-propagation mechanism.\n5.1 Costs\nEvery transform in the ILT system has a cost associated with it. Costs can be\ndecomposed into complexity costs and rule costs. The lower the cost, the more\n- 14 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 15 -\nappealing the transform is to the system. The total cost for a transform is a weighted\nsum of the complexity cost and the rule cost.\n5.1.1 Complexity Cost\nThe complexity cost is a rough measure of how difficult an expression is to\ntransform. The complexity cost is calculated in a similar manner as SAINT's\ncomplexity function. The complexity is simply calculated as the summed nesting of\nall sub-expressions within the larger expression.\n(+ (/ 1 s ) 2 )\nFigure 7 - A Sample Expression for Complexity Cost Analysis\nSo, for example, if the given expression is of the form given in figure 7, the\ntotal complexity cost would be 6 as the 1 and s elements are contained within 2 levels\nof nesting and the / and 2 elements are contained within 1 level of nesting.\nThis way of measuring complexity is very inaccurate and could be a possible\nsource of causing unnecessary computation. However, this crude approximation is\nsufficient to assign prohibitively high costs to extremely complex expressions that do\nnot have high chances of yielding a simple transform.\n5.1.2 Rule Cost\nThe rule cost is a measure of high much work has been performed on a given\ntransform. If significant work has gone into a transform, yet the transform has not\nsimplified; then, the rule costs will discourage the system from pursuing this\ntransform as there probably are other transforms that can simplify more easily. The\nrule cost for a transform is calculated as the sum of the costs of all the rules applied to\nthe input transform to reach the current transform.\nThere are exceptions to the calculation of rule costs. Performing quadratic\nfactoring and especially partial fractions can easily lead to very large and complex\nexpressions that have prohibitively high complexity costs, even though the transform\n- 15 -\n\n- 16 -\nmight be useful. To get around this problem the result of the quadratic factoring and\npartial fractions rules are simplified using the simplifier described in section 5.2.\nFurthermore, as the simplification would incur steep rule costs as a result of many\nelementary rules operating on the expressions, the simplified transforms of these two\nrules do not accrue rule costs while simplifying.\nRule costs serve to help simplify the complexity and number of steps of the\nfinal solution.\n- 16 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 17 -\n5.2 Simplification Propagation\nReceive Input Transform\nCan apply an Always Rule\nYes\nNo\nReturn Transform\nApply One Always Rule\nFigure 8 - Simplification Architecture\nThe ILT performs pure simplification steps when performing quadratic\nfactoring, partial fractions, and t-Space simplification at the very end. The ILT\nperforms this step by successively applying a single always rule to derive a simpler\nexpression until no more always rules apply as shown in figure 8. Always rules are\napplied continuously regardless of the cost of the current transform.\n- 17 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 18 -\n5.3 Inverse Laplace Transform Propagation\nParse User Input and Add to Heap\nPick Cheapest Transform\nYes\nYes\nApply One Always Rule\nApply Lookup Rule\nYes\nApply All Guess Rules\nand simpli\nNo\nNo\nNo\nThrow Away Transform\nIs Transform Done?\nUndo Pending Operations,\nSimplify and Return\nYes\nNo\nAdd Transforms to Heap\nCan apply an Always Rule?\nCan apply Lookup Rule?\nCan apply Guess Rule?\nfy if applicable\nFigure 9 - Inverse Laplace Transform Propagation Architecture\nThe ILT uses a custom weight-based forward-chaining propagation\nmechanism as its inference engine as shown in figure 9. The program starts by\n- 18 -\n\n- 19 -\nparsing the user input and adding the input transform to a heap. The rule cost of the\ninitial transform is set to 0 as no rules have yet been applied.\nThen the program enters a cycle of generating new transform predicates by\napplying rules to promising transforms. The most promising transform is the one\nwith the lowest total score as described in section 5.1.\nNext, the chosen transform is checked to see if it is done. If all s-Space\nexpressions have been transformed, then the pending operations are performed on\nthe t-Space expressions. Finally, those expressions are simplified using the\nsimplification steps described in section 5.2, and the resulting transform is returned\nas the solution. If the transform is not finished, then the rules attempt to operate on\nit.\nFirst, the transform is given exclusively to the always rules. If any always rule\nis triggered by the transform, only that rule is applied once. Then the original\ntransform is removed from the heap and the new transform is inserted. The process\nis then restarted.\nIf no always rules are applicable, the lookup rule checks if any parts of the\ntransform can be transformed to t-Space. If the lookup rule is triggered, a similar\nsequence of steps is taken as the original expression is discarded and the new\nexpression is added.\nIf the lookup rule does not apply, then the guess rules are called. Multiple\nguess rules are allowed to trigger and fire on one propagation step, since the most\nappropriate guess rule is not known beforehand. Furthermore, if a single guess rule\ntriggers multiple times, then each instance of the rule triggering will lead to a new\nmodified transform. The original transform is discarded and all the new transforms\nare added to the heap. If no guess rules apply, then the system simply removes the\noriginal transform from the heap.\nThe propagation process keeps repeating until the problem is solved, the heap\nis empty (at which point the system does not know how to find the inverse Laplace\ntransform), or the system runs out of resources. Due to the cyclic nature of the\nforward-propagation mechanism, some transforms may take a long time to return a\nsolution and others may propagate infinitely.\n- 19 -\n\n- 20 -\n6 Program Review\nThis section will provide a review of the program as a whole and of its various\ncomponents. Both positive and negative aspects of the program will be discussed.\nSection 6.3 will describe possible future improvements to the program.\n6.1 Positive Aspects\n6.1.1 Successful Knowledge Representation\nRules as the knowledge representation proved to be a major success as rules\neasily capture the knowledge of logically deriving one transform from another. The\nrule-based system allows for modularity between the rules and the inference engine.\nFurthermore, the program applies rules in a similar format as human thought; so,\ndescribing the process of solving an inverse Laplace transform is easily conveyed to\nthe user via the rules. Using a rule-based approach was a major factor in the success\nof this program.\n6.1.2 System Generality\nOne positive aspect of the ILT system is the generality of input problems and\nthe manner in which the program solves them. The ILT is not limited to a finite set\nof inputs. Rather, the ILT can attempt to solve any regular s-Space expression. This\ngenerality makes the ILT powerful as the system can generate arbitrarily large search\ntrees on many classes of equations and can discover transforms that it was not even\ndesigned to solve. This generality also enables the ILT to never become outdated as\none can never exhaust the full power of the system as there will always be new\nproblems to solve that the ILT can handle.\n- 20 -\n\n________________________________________________________________________\n________________________________________________________________________\n- 21 -\n6.1.3 System Scalability\nAnother positive aspect of the ILT is the framework in which it was designed.\nThe forward-propagation mechanism is a robust system that can easily handle the\naddition of appropriately constructed rules.\nAt this point in time, the ILT cannot successfully transform all rational\nfunctions as its goal states. This is due to the lack of rules to handle certain types\nexpressions, even within the rational function domain.\n(/ 1 (/ 1 (/ 1 s ) ) )\nFails as the program does not know about nested\ndivision.\n(/ 1 (+ (* (+ s 1 ) (- s 1 ) ) 1 ) )\nFails as the program does not know how to expand\nmultiplication.\n(/ 1 (/ 1 (+ (/ 1 s ) (/ 1 (+ s 1 ) ) ) ) )\nFails as the program does not know how to combine\nfractions.\nFigure 10 - Rational Functions for which ILT cannot find the inverse Laplace\nTransform\nFigure 10 details three expressions that the current system cannot handle.\nHowever, the robustness of the inference engine allows the addition of rules to\nhandle these cases. Already, there are class prototypes for these exceptions named\n'DoubleDiv,' 'Expansion,' and 'AddFractions' respectively; however, these rules\nhave not yet been implemented. Regardless, the addition of these rules poses no\nissues as to the stability or complexity of the entire system due to the scalable\npropagation mechanisms.\nFurthermore, the power of the system can also easily be increased by adding\nmore lookup transforms and other rules that enable the system to not have to rely on\nonly first principles. In addition, the system can also support non-rational function\ntransforms by adding the appropriate lookups and property rules. One simple\nexample of extending the system to handle non-rational functions is the addition of a\ntime-shifting rule that corresponds to exponential multiplication in the frequency\n- 21 -\n\n- 22 -\ndomain. Such a rule can easily be engineered using pending operations and the\nflexible propagation framework.\nThus, one of the most appealing elements of the ILT system is its scalability\nand its robust framework.\n6.2 Negative Aspects\n6.2.1 Halting Problems\nOne major limitation of the ILT system is its inability to determine if it can\nsolve a particular transform or not. There exist many transforms, which the ILT will\ncontinuously expand into larger and more complex transforms in the hopes of the\nequation collapsing. However, if the ILT does not have the necessary tools, the\ntransforms may continue to grow infinitely or loop.\nOne solution to this problem is to let the ILT time out after a set period of\ntime when it is very unlikely that the system will find a solution. However, this\napproach has the obvious drawback that limiting the time given to the ILT system\nlimits the range of transforms that the system can successfully operate on.\nThis issue may also be a consequence of the problem domain, as\nmathematicians have discovered integrals and consequently inverse Laplace\ntransforms that cannot be evaluated in a closed form expression. It may also be the\ncase that this problem is not Turing-decidable. Thus, there may be no remedy to\ncompletely solve this issue.\n6.2.2 Resource Problems\nAnother issue of the ILT is the amount of resources that the program requires\nin order to run successfully. On difficult inputs, the ILT can consume over 100MB\nof RAM. While the system was not designed with efficiency and optimization in the\nforeground, the resource use of the system is a major limitation. Memory issues are\nthe main reason the problem can handle 3rd degree denominators but cannot handle\nth degree denominators.\n- 22 -\n\n- 23 -\nOne possible way to improve memory usage is to reduce the branching factor.\nCurrently, the ILT may continue to expand two identical transforms if they have\ndifferent histories. Furthermore, the program may perform the same operations on\nidentical transform pairs across many different transforms. One way to reduce this\nbranching is to propagate transform pairs instead of entire transforms and check for\nredundancy on every propagation.\nHowever, despite these solutions, the nature of the problem itself demands at\nleast some amount of exponential branching in order to reach a solution. Thus,\nwhile memory issues can be suppressed, they cannot be completely eliminated.\n6.3 Future Improvements\n6.3.1 Caching/Case-Based Reasoning\nOne wasteful aspect of the ILT system is its inability to learn from examples.\nA way to improve the performance of the ILT system is to cache all previously\nsuccessfully transformed expressions and always compare if an expression has been\ntransformed previously before attempting to find the inverse Laplace transform\nthrough further forward-propagation. This method will allow the program to reuse\nprevious work and avoid redundant computation.\nAn even greater improvement over caching is using a case-based reasoning\nmechanism in addition to forward propagation. Thus, if the system ever detects that\nit has performed a similar transform in the past; it can reweight the rule functions to\nfavor the path of the successful transform as similar solution strategies will probably\nbe applicable in the case of the new transform. With this capability, the propagation\nmechanism can receive hints about which rules might be more successful. Thus, the\nprogram would have a higher overall successful rule hit rate.\n6.3.2 Cost Variations\nAnother change that can dramatically affect the performance of the ILT is the\ncost function calculations. The current complexity cost calculation is quite arbitrary\n- 23 -\n\n- 24 -\nin some cases. A refined heuristic can probably be developed which can evaluate the\ntransform complexity more accurately. Given such a heuristic, the program would\npick less complex solutions more often, leading to a higher overall successful rate.\nAnother possible area for improvement involving costs is weighting of\ndifferent rules. To arrive at the current weights for the rules, all rules were given\narbitrary costs and were tweaked by hand until the program responded well enough.\nHowever, using a machine learning approach such as neural nets or SVMs, the\nsystem can be given assorted transforms and a more optimal set of weightings can be\ncomputed. At the present, the efficiency improvement from such an effort is\nunknown; however, variations in rule costs have produced radically different\nresponses from the system during testing.\n7 Lessons Learned\nThis section will outline some of the lessons learned from designing and\nimplementing the ILT system. The major lessons learned were regarding\ncompleteness of systems and a comparison of pre-existing versus customized control\nstructures.\n7.1 Completeness Issues\nIn designing the system, I became aware of how difficult it is to create a\ncomplete transformer capable of handling every transform in a certain class, even for\nelementary classes such as the class of rational transforms. The major issue I faced\nwas the enumeration of every necessary rule needed to enable the program to handle\nany transform. The method I used to generate a set of rules was testing the system\non assorted types of transforms and noting the response of the system through\ndebugging. If the system lacked the tools necessary to perform the given transform, I\nwould add a new rule to enable the program to handle that case. However, this\nmethod of testing has the drawback that one cannot decisively conclude if the system\nis complete or not. I feel that a more mathematical approach by encoding axioms\n- 24 -\n\n- 25 -\nand proving a suitable degree of completeness is preferable to the approach that I\ntook.\n7.2 Control Structure Implementation\nOne of the most challenging aspects of this project was the integration of all\nthe elements of the control structure. The control structure turned out to be around\n2000 lines of code. Furthermore, modularizing the various elements of the\npropagation engine proved to be quite difficult; and, thus, some code fragments may\nseem \"hacked\" in order to get the system to behave properly.\nI also learned that pre-packaged rule-based systems like Joshua perform a lot\nof work for the programmer. In addition to the control elements, Joshua also\nstreamlines the task of encoding rules. While much of the coding for the rules in the\nILT system is necessary in order to maintain the generality of the rules, much of the\ncontents of the rules are devoted towards overhead to interface with the forward-\npropagation mechanism. Thus, much effort was put into reinventing an existing\nsystem for small changes.\nI chose not to use Joshua as the implementation language in order to build a\npropagation engine that could understand the weight-driven aspects of the ILT\nsystem. Thus, C++ was chosen due to its speed and my experience in the language.\nHowever, C++ is not oriented towards rule-based systems, and all the support for\npropagation had to be coded in a quite general implementation. So, a lot of time\nspent on the control elements could have been used on improving the rule-systems.\nThus, in retrospect, I feel it may have saved me some work and time by\nexperimenting more with Joshua.\n8 Conclusion\nIn conclusion, the ILT system is a robust generalized expert system that can\nfind the inverse Laplace transform for various classes of inputs and relate a detailed\nreport of the process to the user. Furthermore, the scalability of the general\n- 25 -\n\n- 26 -\narchitecture allows the system to be expanded as needed to find the transform of\nvarious expressions. The generality and scalability of the robust inference engine\nensure that the ILT is a worthwhile knowledge-based system in the field of inverse\nLaplace transforms.\n9 Acknowledgements\nAll the knowledge about arithmetic expressions was derived by me. The\nknowledge regarding various Laplace transform properties was taken from the three\nsources listed in the bibliographic section.\nI would like to thank Jacob Eisenstein and Professor Davis for providing\nprompt comments and suggestions on the project. I would also like to thank my\nbrother Pawan Deshpande for providing me with the formatting for this paper.\nAppendix A: Complete Rule Listings\nA.1 Always Rules\nNumber Evaluator\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: numerical expression => number\nAdded PendingOperations: None\nInformation: Evaluates any operations contains only numbers as operands\nNumber Addition\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ number1 symbol ... number2) => (+ newNumber symbol ...)\nAdded PendingOperations: None\nInformation: Adds two numbers located within the same addition statement\nNumber Multiplication\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* number1 symbol ... number2) => (* newNumber symbol ...)\nAdded PendingOperations: None\nInformation: Multiplies two numbers located within the same multiplication\nstatement\n- 26 -\n\n- 27 -\n0 Multiplication\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* ... 0 ___) => 0\nAdded PendingOperations: None\nInformation: Zeroes any product containing a zero as an operand\nMultiplication Identity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* ... 1 ___) => (* ... ___)\nAdded PendingOperations: None\nInformation: Removes a number 1 located within a multiplication statement\nAddition Identity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ ... 0 ___) => (+ ... ___)\nAdded PendingOperations: None\nInformation: Removes a number 0 located within an addition statement\nDivision Identity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (/ A 1) ==> A\nAdded PendingOperations: None\nInformation: Simplifies a division-by-1 operation\nAdd 0-Terms Identity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ ) => 0\nAdded PendingOperations: None\nInformation: Uses the addition identity to simplify the empty sum\nAdd 0-Terms Identity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* ) => 1\nAdded PendingOperations: None\nInformation: Uses the multiplication identity to simplify the empty sum\nMultiply 1-Term\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* exp ) => exp\nAdded PendingOperations: None\nInformation: Simplifies the product of one number\nAdd 1-Term\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ exp ) => exp\n- 27 -\n\n- 28 -\nAdded PendingOperations: None\nInformation: Simplifies the sum of one number\nAddition Simplifier\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ ... (+ a b ___ c) ...) => (+ ... a b ___ c ...)\nAdded PendingOperations: None\nInformation: Simplifies a nested addition statement\nMultiplication Simplifier\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* ... (* a b ___ c) ...) => (* ... a b ___ c ...)\nAdded PendingOperations: None\nInformation: Simplifies a nested multiplication statement\nExponent Simplifier 1\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* (P a n) ... (P a m)) => (* (P a (+ n m)) ...)\nAdded PendingOperations: None\nInformation: Simplifies the product of two power operations\nExponent Simplifier 2\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* (P a n) ... a) => (* (P a (+ n 1)) ...)\nAdded PendingOperations: None\nInformation: Simplifies the product of a base and a power operation\nExponent Simplifier 3\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* a ... a) => (* (P a 2) ...)\nAdded PendingOperations: None\nInformation: Simplifies the product of a two expressions into a power operation\nPower Simplifier\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (P a 1) => a\nAdded PendingOperations: None\nInformation: Returns the first power of an expression\nPower Simplifier 2\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (P a 0) => 1\nAdded PendingOperations: None\nInformation: Returns the power identity\nPower Reducer\n- 28 -\n\n- 29 -\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (P (P a b ) c ) => (P a (* b c ) )\nAdded PendingOperations: None\nInformation: Applies a nested power simplification\nAdditive Subtractive Associativity\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ (- A B ) C ) ==> (+ A (* -1 B ) C )\nAdded PendingOperations: None\nInformation: Simplifies a subtraction statement nested in an addition statement\nDivision Simplifier\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (/ (* exp ... ) (* exp ___ ) ) => (/ (* ... ) (* ___ ) )\nAdded PendingOperations: None\nInformation: Cancels out expressions in both the numerator and denominator\nAddition Commutability\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: ex. (+ 3 s ) => (+ s 3 )\nAdded PendingOperations: None\nInformation: Swaps the location of elements in a addition statement to make the\nexpressions look more consistent\nAddition Canceller\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (+ (* a X ) (* b X ) ) => (+ (* (+ a b ) X ) )\nAdded PendingOperations: None\nInformation: Factors multiplication statements nested in addition statements\nMultiplication Division Reducer\nType: Always Rule Cost: 1.0f\nTarget: Sub-Expressions\nDescription: (* ... (/ b c ) ) => (/ (* ... b ) c )\nAdded PendingOperations: None\nInformation: Simplifies a division statement nested in a multiplication statement\nA.2 Lookup Rules\nLookup\nType: Lookup Rule Cost: 0.0f\nTarget: Entire Expression\nDescription: (/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nAdded PendingOperations: Lookup\nInformation: Converts an s-Space expression into a t-Space expression\n- 29 -\n\n- 30 -\nA.3 Guess Rules\nSubtraction Flipper\nType: Guess Rule\nCost: 100.0f Target: Sub-Expressions\nDescription: (- a b ) => (* -1 (- b a ) )\nAdded PendingOperations: None\nInformation: Reverses the direction of a subtraction statement\nAddition Breaker\nType: Guess Rule\nCost: 10.0f\nTarget: Entire Expression\nDescription: (+ A B ... C) => SUM(A B ... C)\nAdded PendingOperations: None\nInformation: Uses linearity to break up an addition into a sum of individual\ntransforms\nDivision Breaker\nType: Guess Rule\nCost: 20.0f\nTarget: Entire Expression\nDescription: (/ (+ A B ... C) D) => SUM((/ A D) (/ B D) ... (/ C D))\nAdded PendingOperations: None\nInformation: Uses linearity to break up the addition of fractions into a sum of\nindividual transforms\nQuadratic Factorization\nType: Guess Rule\nCost: 200.0f Target: Sub-Expressions\nDescription: (as^2 + bs + c) => factored\nAdded PendingOperations: None\nInformation: Applies the quadratic formula on a second degree polynomial and\nsimplifies the result\nDivision Factorer\nType: Guess Rule\nCost: 20.0f\nTarget: Entire Expression\nDescription: (/ a B) => (/ 1 B) with pending operation (* a )\nAdded PendingOperations: (Times a)\nInformation: Uses linearity to simplify a constant divided by an expression\nLinearity Factorer\nType: Guess Rule\nCost: 10.0f\nTarget: Entire Expression\nDescription: (* a B ...) ==> (* B ... ) with pending operation (* a )\nAdded PendingOperations: (Times a)\nInformation: Uses linearity to simplify a constant times an expression\nFrequency Shifter\nType: Guess Rule\nCost: 100.0f Target: Entire Expression\nDescription: F(s-a) ==> F(s) with pending operation (Shift (+ a ) )\nAdded PendingOperations: (Shift (+ a) )\nInformation: Uses Laplace frequency shifting property\n- 30 -\n\n________________________________________________________________________\n- 31 -\nSubtraction Addition Conversion\nType: Guess Rule\nCost: 350.0f Target: Sub-Expressions\nDescription: (- a b ) => (+ a (* -1 b ) )\nAdded PendingOperations: None\nInformation: Converts a subtraction into an addition and a multiplication\nScaling\nType: Guess Rule\nCost: 200.0f Target: Entire Expression\nDescription: F(as) => F(s) with pending operation (SCALE a)\nAdded PendingOperations: None\nInformation: Uses Laplace frequency scaling property\nPartial Fractions\nType: Guess Rule\nCost: 200.0f Target: Entire Expression\nDescription: (/ A (* (P (- s b ) c ) ... ) ) => (+ (/ d (- s b ) ) (/ d (P\n(- s b ) 2 ) ) ... )\nAdded PendingOperations: None\nInformation: Applies partial fractions method on a rational function with a factored\ndenominator and simplifies the result\nAppendix B: Complete Program Output\nThis appendix contains a full program output for a rather difficult transform.\nThis section highlights the strengths of ILT including the ability to deal with 3rd\ndegree denominators, quadratic factoring, partial fractions with repeated roots,\nfrequency shifting, linearity, lookups, numeric evaluation and many arithmetic\nproperties. The bold typeface indicates the contents of the file sampleexp2.txt.\nEnter File Name: sampleexp2.txt\nsampleexp2.txt: (/ 1 (* (+ s 1 ) (+ (P s 2 ) (* 6 s ) 9 ) ) )\nUSER INPUT.\nS-SPACE\nSUM {\n(/ 1+0I (* (+ s 1+0I ) (+ (P s 2+0I ) (* 6+0I s ) 9+0I ) ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\n- 31 -\n\n- 32 -\nRule 'Addition Commutability'\nWhich performs: ex. (+ 3 s ) => (+ s 3 )\nWas applied on transform pair 0\nOn the expression: (+ (P s 2+0I ) (* 6+0I s ) 9+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I (* (+ s 1+0I ) (+ (* 6+0I s ) 9+0I (P s 2+0I ) ) ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Addition Commutability'\nWhich performs: ex. (+ 3 s ) => (+ s 3 )\nWas applied on transform pair 0\nOn the expression: (+ (* 6+0I s ) 9+0I (P s 2+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I (* (+ s 1+0I ) (+ 9+0I (* 6+0I s ) (P s 2+0I ) ) ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Quadratic Factorization'\nWhich performs: (as^2 + bs + c) => factored\nWas applied on transform pair 0\nOn the expression: (+ 9+0I (* 6+0I s ) (P s 2+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I (* (+ s 1+0I ) (P (+ s 3+0I ) 2+0I ) ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'PARTIALFRACTIONS'\nWhich performs: (/ A (* (P (- s b ) c ) ... ) ) => (+ (/ d (- s b ) ) (/\nd (P (- s b ) 2 ) ) ... )\nWas applied on transform pair 0\nOn the expression: (/ 1+0I (* (+ s 1+0I ) (P (+ s 3+0I ) 2+0I ) ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n- 32 -\n\n- 33 -\n(+ (/ 0.25+0I (+ s 1+0I ) ) (/ -0.25+0I (+ s 3+0I ) ) (/ -0.5+0I\n(P (+ s 3+0I ) 2+0I ) ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Addition Breaker'\nWhich performs: (+ A B ... C) => SUM(A B ... C)\nWas applied on transform pair 0\nOn the expression: (+ (/ 0.25+0I (+ s 1+0I ) ) (/ -0.25+0I (+ s 3+0I ) )\n(/ -0.5+0I (P (+ s 3+0I ) 2+0I ) ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ s 3+0I ) 2+0I ) )\nwith pending operations:\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Frequency Shifting'\nWhich performs: F(s-a) ==> F(s) with pending operation (+ a )\nWas applied on transform pair 2\nOn the expression: (/ -0.5+0I (P (+ s 3+0I ) 2+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ (- s (+ 3+0I ) ) 3+0I ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 2\nOn the expression: (+ 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n- 33 -\n\n- 34 -\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ (- s 3+0I ) 3+0I ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Additive Subtractive Associativity'\nWhich performs: (+ (- A B ) C ) ==> (+ A (* -1 B ) C )\nWas applied on transform pair 2\nOn the expression: (+ (- s 3+0I ) 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ s (* -1+0I 3+0I ) 3+0I ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 2\nOn the expression: (* -1+0I 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ s -3+0I 3+0I ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Number Addition'\nWhich performs: (+ number1 symbol ... number2) => (+ newNumber symbol\n...)\nWas applied on transform pair 2\nOn the expression: (+ s -3+0I 3+0I )\nTo yield the new transform:\n- 34 -\n\n- 35 -\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ s 0+0I ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Addition Identity'\nWhich performs: (+ ... 0 ___) => (+ ... ___)\nWas applied on transform pair 2\nOn the expression: (+ s 0+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P (+ s ) 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Add 1-Term'\nWhich performs: (+ exp ) => exp\nWas applied on transform pair 2\nOn the expression: (+ s )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ -0.5+0I (P s 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Division Factorer'\nWhich performs: (/ a B) => (/ 1 B) with pending operation (* a )\nWas applied on transform pair 2\n- 35 -\n\n- 36 -\nOn the expression: (/ -0.5+0I (P s 2+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\n(/ 1+0I (P s 2+0I ) )\nwith pending operations: (Shift (+ 3+0I ) ) (Times -0.5+0I\n)\n}\nT-SPACE\nSUM {\n}\nPress any key to continue . . .\nRule 'Lookup'\nWhich performs: (/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nWas applied on transform pair 2\nOn the expression: (/ 1+0I (P s 2+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 1+0I ) )\nwith pending operations:\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Frequency Shifting'\nWhich performs: F(s-a) ==> F(s) with pending operation (+ a )\nWas applied on transform pair 0\nOn the expression: (/ 0.25+0I (+ s 1+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ (- s (+ 1+0I ) ) 1+0I ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\n- 36 -\n\n- 37 -\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 0\nOn the expression: (+ 1+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ (- s 1+0I ) 1+0I ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Additive Subtractive Associativity'\nWhich performs: (+ (- A B ) C ) ==> (+ A (* -1 B ) C )\nWas applied on transform pair 0\nOn the expression: (+ (- s 1+0I ) 1+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s (* -1+0I 1+0I ) 1+0I ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 0\nOn the expression: (* -1+0I 1+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s -1+0I 1+0I ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\n- 37 -\n\n- 38 -\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Number Addition'\nWhich performs: (+ number1 symbol ... number2) => (+ newNumber symbol\n...)\nWas applied on transform pair 0\nOn the expression: (+ s -1+0I 1+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s 0+0I ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Addition Identity'\nWhich performs: (+ ... 0 ___) => (+ ... ___)\nWas applied on transform pair 0\nOn the expression: (+ s 0+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I (+ s ) )\nwith pending operations: (Shift (+ 1+0I ) )\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Add 1-Term'\nWhich performs: (+ exp ) => exp\nWas applied on transform pair 0\nOn the expression: (+ s )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 0.25+0I s )\nwith pending operations: (Shift (+ 1+0I ) )\n- 38 -\n\n- 39 -\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Division Factorer'\nWhich performs: (/ a B) => (/ 1 B) with pending operation (* a )\nWas applied on transform pair 0\nOn the expression: (/ 0.25+0I s )\nTo yield the new transform:\nS-SPACE\nSUM {\n(/ 1+0I s )\nwith pending operations: (Shift (+ 1+0I ) ) (Times 0.25+0I\n)\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Lookup'\nWhich performs: (/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nWas applied on transform pair 0\nOn the expression: (/ 1+0I s )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ s 3+0I ) )\nwith pending operations:\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Frequency Shifting'\nWhich performs: F(s-a) ==> F(s) with pending operation (+ a )\nWas applied on transform pair 1\n- 39 -\n\n- 40 -\nOn the expression: (/ -0.25+0I (+ s 3+0I ) )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ (- s (+ 3+0I ) ) 3+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 1\nOn the expression: (+ 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ (- s 3+0I ) 3+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Additive Subtractive Associativity'\nWhich performs: (+ (- A B ) C ) ==> (+ A (* -1 B ) C )\nWas applied on transform pair 1\nOn the expression: (+ (- s 3+0I ) 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ s (* -1+0I 3+0I ) 3+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n- 40 -\n\n- 41 -\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Number Evaluator'\nWhich performs: numerical expression => number\nWas applied on transform pair 1\nOn the expression: (* -1+0I 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ s -3+0I 3+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Number Addition'\nWhich performs: (+ number1 symbol ... number2) => (+ newNumber symbol\n...)\nWas applied on transform pair 1\nOn the expression: (+ s -3+0I 3+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I (+ s 0+0I ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Addition Identity'\nWhich performs: (+ ... 0 ___) => (+ ... ___)\nWas applied on transform pair 1\nOn the expression: (+ s 0+0I )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n- 41 -\n\n- 42 -\n(/ -0.25+0I (+ s ) )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Add 1-Term'\nWhich performs: (+ exp ) => exp\nWas applied on transform pair 1\nOn the expression: (+ s )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ -0.25+0I s )\nwith pending operations: (Shift (+ 3+0I ) )\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nRule 'Division Factorer'\nWhich performs: (/ a B) => (/ 1 B) with pending operation (* a )\nWas applied on transform pair 1\nOn the expression: (/ -0.25+0I s )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\n(/ 1+0I s )\nwith pending operations: (Shift (+ 3+0I ) ) (Times -0.25+0I\n)\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\n- 42 -\n\n________________________________________________________________________\n- 43 -\nRule 'Lookup'\nWhich performs: (/ 1 (P s n)) --> (/ (P t (- n 1)) (G n))\nWas applied on transform pair 1\nOn the expression: (/ 1+0I s )\nTo yield the new transform:\nS-SPACE\nSUM {\nDONE\n\nDONE\n\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t (* -1+0I (+ 1+0I ) ) ) ) (* 0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.25+0I (/ (P t (- 1+0I\n1+0I ) ) (G 1+0I ) ) ) )\n(* (P E (* t (* -1+0I (+ 3+0I ) ) ) ) (* -0.5+0I (/ (P t (- 2+0I\n1+0I ) ) (G 2+0I ) ) ) )\n}\nPress any key to continue . . .\nWhich simplifies to:\nS-SPACE\nSUM {\nDONE\n\nDONE\n\nDONE\n\n}\nT-SPACE\nSUM {\n(* (P E (* t -1+0I ) ) 0.25+0I )\n(* (P E (* t -3+0I ) ) -0.25+0I )\n(* (P E (* t -3+0I ) ) -0.5+0I t )\n}\nReferences\nEdwards, C., Penney, D. (1999). Elementary Differential Equations with Boundary\nValue Problems (Fourth Edition). USA: Prentice Hall.\nOppenheim, A., Willsky, A. (1997). Signals and Systems (Second Edition). USA:\nPrentice Hall.\nVibration Data Laplace Transform Table, http://www.vibrationdata.com/Laplace.htm.\n- 43 -"
    },
    {
      "category": "Resource",
      "title": "chandrase_tempap.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/8ef2e8517be997a3f3f761ad832cb47c_chandrase_tempap.pdf",
      "content": "6.871\nShruti Chandrasekhar\n6.871 Final Term Paper\nShruti Chandrasekhar\nFinal Project\nThe Constitution Builder\nThis system helps constitution frames decide on and structure certain\naspects of constitutions. More specifically, it helps the constitution designer\ndecide if federalism is the appropriate choice for a given country based on\nthe country's specifics.\nBackground\nConstitutions are not an exact science but are founded in logic and\nreason. Government structure as dictated by a constitution shapes the life of\nthe democracy. It is important to construct this document right in order to\nbuild a great nation. Constitutions specify various aspects of a government\nranging from the right kind of electoral system to powers vested in the head\nof state. All these specifications are founded on idealistic political thought but\nbuilt primarily on knowledge gained by reviewing performance of other\ngovernments over the course of time. This wealth of knowledge helps\nconstitutional engineers learn from the problems governments in similar\ncountries have faced and preempt and prevent them. A field so steeped in\nknowledge is ideal for knowledge engineers to transform and facilitate so as\nto aid development in that subject.\nThe wealth of knowledge that I refer to is better described through the\nfollowing example. Let us assume in this day and age of world\ndemocratization we are faced with a country in the need for a new\ngovernment. Given the ability to set up virtually any kind of government\nwhat would we base our choices on? With the goal of creating an enduring\nstable democracy we would start out from the current situation of the given\ncountry. The country in question is a fairly large country both in area and\npopulation, has a history of oppressive dictatorships, predominantly follows\none religion, has three significant ethnic groups with the largest having a\nsignificantly larger population percentage than the following two and is in\nneed of considerable indigenous development, based on these factors experts\nwould probably suggest a federal parliamentary system with proportional\nrepresentation, double balloting and a controlled economy. These choices are\nlargely based on other countries with analogous backgrounds that have made\nsimilar decisions which have proved successful over the years. This is the\nknowledge based rationale that constitutional design is built upon.\nWith this background in mind, we decided work on this area of political\nscience for our final project. However due to the breadth of this field we\ndecided to focus our attention solely to one aspect of constitutional design\nthat most framers strongly consider while setting up a government - the\nissue of federalism. Federalism, in the words of William H. Riker - one of the\n\nShruti Chandrasekhar\n6.871 Final Term Paper\ngreat minds of modern day political science, is a political organization in\nwhich the activities of government are divided between regional governments\nand a central government in such a way that each kind of government has\nsome activities on which it makes final decisions1.\nFederalism is commonly thought of as the division of power between a\ncentral governing body and geographically distributed local provincial\ngovernments. It is debated that federalism is more akin to sharing power\nthan dividing power between the center and the states2 which is one of the\nmain differences between federalism and majoritarian governments. Another\naspect that distinguishes federal powers is the power distribution is much\nless one-sided than that of a majoritarian government. In a majoritarian\ngovernment, the power is highly biased towards the center with the states\ngetting little, if any, real power. Another reason why federalism seems so\nappealing is because it seems to create a microcosm of the country in its\ngovernment giving people the assurance of fair representation. Division of\ngovernment increases efficiency, brings the government closer to home,\nreduces running costs, encourages, empowers and enables more citizens to\nparticipate in the state's decision making processes, and helps train future\nleaders for the national arena by letting them make their mistakes on a\nsmaller scale. In all, a number of very attractive reasons make federalism\nmuch desired.\nHowever there are many circumstances under which these benefits\nmay actually harm a country and lead to federalism not being the best\noption, or even the worst option. So when do we choose federalism over all\nelse? Federalism is based on the concept of grassroot governments that build\non to create a larger tree. However trying to chalk out sub-sections of\ncountries not big enough to be grass themselves would make federalism a\njoke. Secondly, trying to create geographic divisions when the population and\nresources are unevenly distributed would make sustenance of the federal\nstate an ordeal. Finally the crucial issue when federalism is almost always a\nnecessity is the existence of diversity. A diverse society needs to be handled\ndifferently from a homogenous one. All divisions and minorities need to be\nrecognized and appropriately incorporated into the government to build a\ncohesive stable state. When federalism is incorporated in a country divided\nby religion or ethnicity or any other such societal cleavage, it gives each\ncommunity a sense of self-governance while still maintaining the country as\na unitary whole. This has historically been the primary reason for adopting a\nfederal form of government.\nFederalism has come to be in many ways. Two often occurring forms\nof federal states are coming-together federalism and holding-together\n1 Riker, William H. 1975. \"Federalism,\" in Fred Greenstein and Nelson W. Polsby, eds., Handbook of\nPolitical Science: Governmental Institutions and Processes. Addison-Wesley. For example, Riker's\n(1987:101) definition is often used, despite its ambiguity: \"a political organization in which the activities of\ngovernment are divided between regional governments and a central government in such a way that each\nkind of government has some activities on which it makes final decisions.\"\n2 Arend Lijphart, Patterns of Democracy: Government Forms and Performance in Thirty-Six Countries.\nChapter 10 - Division of power: The Federal-Unitary and Centralized-Decentralized Contrasts. Yale.\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nfederalism3. Some countries are formed by neighboring states coming\ntogether to form a union, as in the case of the United States or Canada, for\nbetter utilization of resources and people and a better life. In such cases\nfederal structures work best. Some countries choose federalism when they\nhave\nsignificant\ndifferences\namongst\ntheir\ngeographically\ndispersed\npopulation but some essential similarities and hence need a glue to hold\nthem together as a nation as was the case in India and Belgium. In all there\nare a number of reasons when federalism should be the obvious or the not-\nso-obvious choice - our project helps identify the situations when federalism\nwould or would not work.\nProblem Solving Paradigm\nDue to the logical flow of knowledge and reasoning in this area of\nstudy we decided to approach the problem using a flow-chart model. By flow-\nchart model I mean an attribute-corollary setup. The system looks at\nspecifics of the country that its knowledge database considers crucial to the\nquestion of federalism. It queries for these specifics using the knowledge\nframework laid out, outlines the thread of logic dictated by the system and\nthen extrapolates whether federalism would work or not. The more we\nthought about such a system, the more appropriate such a characteristic-\ninference choice seemed. Hence rules seemed a very logical follow-up. Due\nto this multi-layered attribute-corollary - attribute clarification - inference\nmodification - like treatment of the problem, rules would be the optimal\nchoice.\nSystem Setup\nExpert systems have a number of major system components and\ninterface with individuals in various roles. These are illustrated in figure\nbelow. A knowledge engineer (in this case us) capture the expertise from a\nDomain Expert and encode it into a knowledge base. The system engineer\n(here, again it is us, using information derived from Prof.Davis, Jacob\nEisenstein and the Joshua reference manual) create a system that acts as an\ninference engine, working storage and a user interface. In detail the major\ncomponents are:\n- Knowledge base - a declarative representation of the expertise, often\nin IF THEN rules;\n- Working storage - the data which is specific to a problem being\nsolved;\n- Inference engine - the code at the core of the system which derives\nrecommendations from the knowledge base and problem-specific data in\nworking storage;\n- User interface - the code that controls the dialog between the user\nand the system.\n3 Stepan, Alfred (1999) \"Towards a New Comparative Analyisis of Democracy and Federalism: Demos\nConstraining and Demos Enabling Federations\" Mimeo, Oxford.\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nTo understand expert system design, it is also necessary to\nunderstand the major roles of individuals who interact with the system.\nThese are the:\n- Domain expert - the individual or individuals who currently are\nexperts solving the problems the system is intended to solve;\n- Knowledge engineer - the individual who encodes the expert's\nknowledge in a declarative form that can be used by the expert system;\n- User - the individual who will be consulting with the system to get\nadvice which would have been provided by the expert.\nKnowledge Base\nThe system is built upon a number of cumulative rules. These rules are\nfairly exhaustive. The\nrules\nin themselves\ncontain\nthe\nfundamental\nknowledge about federalism. The rules establish what the system 'knows'\nfrom what population range best fits a federal state to how appropriate\nspatial distribution of diversity would be towards federalism. The rules\nembody the core of this expert system. The rules are written in LISP in\nJoshua. It is organized as layered memory using backward chaining.\nBackward chaining was adopted here since a backward chaining system\nworks backward from the initial goal of trying to answer a question posed by\nthe user4, which in this case is if federalism would work towards creating a\nstable enduring democracy for the country in question. In answering this\nquestion, the system spawns subgoals to answer further questions posed by\nthe conditions of the rules defined. Such systems do represent their goals\nexplicitly as they have to in order to return up a level. In our system we are\ntrying to pick the best choice from many enumerated possibilities. Since this\nis in-between an identification problem and a diagnostic system and is\npredominantly based on goal driven reasoning we decided to adopt backward\n4 Jocelyn Paine, Lecture notes on rule-based systems, 1996\nhttp://www.j-paine.org/students/lectures/lect3/node1.html\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nchaining5. The rules are included in the appendix. The rules are broadly\nclassified into rules dealing with size, rules assigning type of division, rules\ncalculating possibility, rules about geographical distribution and finally rules\nassessing kind of federalism or none at all.\nFederalism\nNot-viable\nPos-of-fed\nPossibly viable along religion\nPossibly viable racially\nMaybe-viable-but-small-country\nMaybe-viable-in-undivided society\nType-of\nLand area\nPopulation\nGeographic grouping percentages of race,\nlanguage\nEthnic count\nRacial count\nBest option along ethnicity\nBest option along language\nBest option along religion\nBest-option-along-race\nPossibly viable along language\nPossibly viable ethnically\n-division\nFirst, second & third\nreligion, ethnicity and\nLinguistic count\nReligion count\nEach rule is expressed in terms of an if part (the premise) and a then\npart (the conclusion). Each clause in a rule is expressed in terms of an\nattribute, object and its value. For instance, consider rule 4,\nif\npopulation >= 10,000,000 and\nland_area >= 100,000\nthen pos_of_fed = 0.5\nIn English, this says -\nIf the population of the country is larger that ten million and\nIf the land area of the country is larger that 100,000 sq km\nThen the numeric factor measuring possibility of federalism is 0.5\nThe progression of ideas when asked if federalism is appropriate for\ncountry 'A' is - does A have significant societal cleavages? How strong are\nthese cleavages? Are they geographically distinct as well? Is the population\nlarge enough to sustain such a cleavage?. Similarly, the progression of rules\nwhen asked (ask [federalism IRAQ ?x] #'print-answer-with-certainty) follows\nsuit.\n5 Amzi.com - Expert systems in prolog\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nWhat is A's number of races?\nWhat is A's most prevalent race's population percentage (enter 0.3 for\n30%)?\nI if the checks validate the type_of_division is assigned to none.\nThus the rules try to replicate the mind of an expert.\nInference Engine and User Interface\nThe inference engine takes in a number of inputs regarding the\nsituation of the country in question. The questions range from size of the\ncountry's population to the various kinds of diversities located in the country.\nThe output consists of the decision whether federalism is a fit or not, along\nwith how appropriate a fit it might be. It also outputs how the new federal\nstructure to be created (if that be the case) should be laid out - as in should\nthe provincial demarcations be based on race or religion or language as so\nforth. If asked for an explanation, the system would reason with the user as\nto how and why it arrived at the conclusion it did.\nThe inputs and outputs defined in the inference engine are as follows -\nInputs\nVariable\nDescription\nPossible Values\nPopulation\nAll numeric\nvalues\nLand Area (in\nsq.km)\nRacial Count\nNumber of races living in the country\nReligion Count\nNumber of religions practiced by the\npeople\nEthnic Count\nNumber of ethnicities occupying the\ncountry\nLinguistic Count\nNumber of languages spoken in the\ncountry\nfirst_religion_p,\nPopulation Percentages of First,\nDecimal value in\nfirst_racial_p,\nSecond and Third highest in race,\nthe range of 0 to\nsecond_ethnic_p,\nreligion, ethnicity and language\n...\nGeographic\nStates what kind of subgroups occupy\nNone / racial /\ngrouping\nthe different regions of the country\nreligion / ethnic\n/ linguistic\nOutput\nVariable\nDescription\nPossible Values\nType of Division\nThe most prominent\nNone / racial / religion /\nsocietal cleavage\nethnic / linguistic\nPossibility of\nA degree measure of how Numeric value between 0 and\nFederalism\nappropriate a fit\nfederalism would be for\nthe country\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nFederalism\nThe final answer on the\nnot-viable / maybe-viable-in-\ndecision of federalism or\nnot\nundivided-society / maybe-\nviable-but-country-very-small\n/ possibly-viable-racially /\npossibly-viable-along-religion\n/ possibly-viable-ethnically /\npossibly-viable-along-\nlanguage / best-option-\nalong-race / best-option-\nalong-religion / best-option-\nalong-ethnicity / best-option-\nalong-language))\nThe thread of logic starts out from an ask query issued by the user.\nWhen the user asks a question on how suitable federalism is the inference\nengine looks are the two main factors that help resolve this query, namely\nsocietal cleavages (type_of_division) and a numeric factor that encompasses\nall other aspects (pos_of_fed). In order to assess the extent of societal\ncleavages, it steps into to discover data about the given case. It queries\ninformation on the population breakup along lines of race, religion, ethnicity\nand language. On obtaining this information as desired, it analyses and\nconcludes on the most prominent cleavage. It then tries to incorporate this\ninformation into its calculations of the numeric factor. It starts its calculation\non this factor but sizing up the size of the country in order to eliminate very\nsmall country where federalism might be more an expense than an aid. It\nthen progresses using the information on the population percentage breakup\nof the prominent social cleavage to augment this numeric factor. Finally it\ntries to obtain information on how this social divide is located geographically\nas in are people on one side of this divide concentrated in location and\narrives at a conclusive value. During all these calculations it does not\nobliterate the other cleavages, in fact it goes further to calculate the effect of\nfederalism due to those cleavages as well. It finally outputs an answer on the\nappropriateness of federalism for that country ranging from not viable to best\noption available. It also states what the major divide was, if any, and if the\ncountry's provinces should be delineated based on this divide. If more than\none divide exist it suggests federalism on both divides if possible but includes\na factor (certainty) a higher value of which indicates the option that would be\nmore appropriate.\nThe user interface consists of a series of queries as it traces through\nthe rules. It shoots queries out to the user to elicit information about the\ncountry in question. The question backtrack through the rules and usually try\nto establish the type of division and a value for the possibility of federalism in\norder to evaluate the decision on federalism as a fit for the country. The user\ninterface is very basic and error checking techniques are not very robust. But\nif instructions are followed through the interface is a simple sequential\ninterview-like setup.\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nWorking Storage\nThe working storage is the data stored in the variables specified in\nJoshua. This is the information obtained as a result of the queries. For\nexample this would be the actual population of the country in question or the\npercentage of people who follow Christianity or the number of races that live\nin that country and so forth. This information is input by the user while\nrunning the program.\nDomain Expert\nAs a knowledge-based application system for constitutional design,\nthis topic is far removed from the world of computer science and artificial\nintelligence. Due to this aspect a Domain Expert was crucial to the structure\nof this system. We worked with Prof.Cindy Skach. Prof.Skach is a Professor\nof Government at Harvard University. Her field of research is comparative\nconstitutional law, constitutional engineering, and the theory and practice of\ndemocracy. Due to specialization in this field she was invaluable to the\nconstruction of our system. Her time constraints forced us to work\noccasionally with her teaching fellow, Rosalind Dixon. Rosalind is a trained\nconstitutional lawyer, who practiced law for a number of years before\nenrolling at Harvard Law for her S.J.D. Combined with the knowledge of\nthese experienced professionals we also consulted a number of prominent\nbooks in the field ranging from Lipjhart's Patterns of Democracy to Sartori's\nComparative Constitutional Design. A complete list of books has been\nincluded in the Appendix.\nExample Run of the System\nHere is an example run of the program.\nLet us consider the example of Iraq. Iraq a country of approximately\n26 million people, spread over a land mass of 500,000 sq. km has had a\ntumultuous political past. Periodic forced division from Britain's policies of\ndivide and conquer to Saddam Hussein's Kurdish-Sunni infusions to current\nShiite power, societal divisions have shaped Iraq's past. A complete federal\nstructure would prevent the minority Kurds and Sunni from being active\nparticipants in the developing government. Given information about Iraq\nexperts would suggest a semi-federal structure as this would give the Sunnis,\nShiites and Kurds significant power at the provincial levels and still create a\ncohesive state.\nOur system suggests the following -\n(ask [federalism IRAQ ?x] #'print-answer-with-certainty)\nWhat is IRAQ's number of races: 1\nWhat is IRAQ's most prevalent races population percentage\n(enter 0.3 for 30%): 1\nWhat is IRAQ's number of religions practiced: 1\nWhat is IRAQ's most followed religions population percentage\n(enter 0.3 for 30%): 1\nWhat is IRAQ's number of living ethnicities: 3\nWhat is IRAQ's most populous ethnicitys population percentage\n(enter 0.3 for 30%): 0.65\nWhat is IRAQ's number of spoken languages: 1\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nWhat is IRAQ's most spoken languages population percentage\n(enter 0.3 for 30%): 1\nWhat is IRAQ's population: 25,000,000\nWhat is IRAQ's land area: 500,000\nWhat is IRAQ's second most populous ethnicity's population\npercentage (enter 0.3 for 30%): 0.21\nWhat is IRAQ's geographical grouping along the lines of\ncommunity (none/ethnic/religion/race/linguistic): ethnic\n[FEDERALISM IRAQ BEST-OPTION-ALONG-ETHNICITY] 0.5547459\n[FEDERALISM IRAQ POSSIBLY-VIABLE-ETHNICALLY] 0.45\n[FEDERALISM IRAQ MAYBE-VIABLE-IN-UNDIVIDED-SOCIETY] 0.00001\nSystem Extent\nThe original intent was to setup up a constitution builder - a system\nthat would take in characteristic of a country starting with population and\nland area all the way through to past dictators, military regimes, minority\npercentages and so forth and churn the information through the system and\nproduce a bullet point skeleton of the main aspects of the optimal\ngovernment such as electoral systems, executive (parliamentary or\npresidential), courts, legislature, etc. However as such a mammoth task\nwould better suit a master's thesis than a final term project, following\nProf.Davis' advice we decided to focus on one issue, namely federalism.\nThis system can handle all sorts of countries in terms of population,\ndiversity, geographics, land area etc. Any possible combination of these\nattributes is well handled by the system. For instance, if we had an island\ncountry that had no diversity with a fairly small homogeneous population, the\nsystem would advice against federalism as would an expert. Or if we had a\nlarge country, where different corners of the country spoke different\nlanguages the system would suggest federalism along linguistics as would an\nexpert. If we had more complex cases for example, a country with three\nstrong ethnic groups that follow two religions where the people are\ngeographically concentrated on ethnicities, the system would suggest\nfederalism along ethnic lines. Hence under most cases the system does\nreplicate the expert.\nHowever there are cases where the system's recommendations are not\nalways perfect. For instance in most small countries federalism isn't a viable\noption, however there do exist some anomalies such as Micronesia and\nSt.Kitts - both small island states that are federal. If the exact information of\nthese states were input into the system, federalism may not have been\nsuggested. But history tells us that it worked. So the system is not always a\nhundred percent accurate. Or lets changes the third example cited above\nslightly, the country has three strong ethnic groups that follow two religions\nbut is geographically concentrated on religion. Our system stipulates a\nminimum of three prominent subgroups in a social group to suggest\nfederalism on those lines. In this case an expert might have suggested\nfederalism along religion but our system would have still suggested\nfederalism along ethnicity as it deems only two prominent religions as\ninsufficient for a federal setup. Hence there are specific cases where a\n\nShruti Chandrasekhar\n6.871 Final Term Paper\npotentially federal state could fall through the system so as to cause the\nsystem to suggest a non-federal government.\nA possible way of handling such problems would be use examples as\nreferences in the system. If the system feels that federalism would work it\nshould be able to pull out an example from its repository to support its\nsuggestion. Such an extended example-case system would be possible using\nframes. Trying to rework the system around frames and rules would produce\nthe known best suggestion for anomalies as well.\nSystem Performance\nThe system captured the train of thought of the expert perfectly as\nrules are a logical, fairly sequential stream of thought. Backward chaining\nworked well with the goal-oriented nature of the problem. The if-then style of\nknowledge encapsulation serves the reasoning nature of constitutional\nframing substantially well. However Joshua did prove redundant on occasion.\nIn our rules, the diversity rules are nearly identical for the different\ndiversities however Joshua does not permit a generic rule that would serve\nas an abstraction for all the other rules. In Joshua we had to write each rule\nover again for each diversity. Secondly Joshua also limited our ability to\naugment the numeric federalism factor as a part of our rule consequence.\nThis forced us to write six rules where one would have served the purpose in\nother languages. For instance rules 20-43 are basically 2 rules repeated 3\ndifferent ways for 4 different diversities. This could be made more efficient if\nJoshua handled a more generic rule form.\nLessons learnt, tasks done and knowledge gained - The conclusion\nThe most important lesson I learned from this is even a small aspect\nof a given field can be significantly complicated. When we set out to capture\nfederalism I thought it would be a fairly simple task, but I was wrong. Not\nonly can be it be intricately complex but also thoroughly fascinating. It was a\nneat experience to see how my professor's knowledge could be encapsulated\nto some extent. I did notice how frames would have made this project that\nmuch more effective and efficient since examples would help infer a better\nmore accurate result along with producing a more compelling argument for\nor against a suggestion. If I were to work on this task further I would try to\nincorporate examples in either using frames or some other framework. I\nwould also try to make it more specific in its analysis and try to extend it to\ndifferent aspects of a constitution. In all, I hope this system helps\nconstitutional framers make the right choices on federalism.\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nAppendix\nRules\nRules dealing with country size\n1]\nif\npopulation < 10,000,000\n\nland_area < 100,000\nthen possibility_of_federalism = 0.2\n2]\nif\npopulation < 10,000,000\n\nland_area >= 100,000\nthen possibility_of_federalism = 0.35\n3]\nif\npopulation >= 10,000,000\n\nland_area < 100,000\nthen possibility_of_federalism = 0.35\n4]\nif\npopulation >= 10,000,000\n\nland_area >= 100,000\nthen possibility_of_federalism = 0.5\nRules assigning type of division.\nRules about racial diversity\n5]\nif\nracial_count > 2 and\n\nFirst_racial_percentage < 0.9\nthen type_of_division = racial\n6]\nif\nracial_count <= 2 and\nthen type_of_division = none\nRules about religious diversity\n7]\nif\nreligion_count > 2 and\nfirst_religion_percentage < 0.9\nthen type_of_division = religion\n8]\nif\nreligion_count > 2 and\nfirst_religion_percentage < 0.9 and\n\ntype_of_religion = racial\n\nfirst_religion_division < first_racial_division\nthen type_of_division = religion\nRules about ethnic/identity diversity\n9]\nif\nethnic_count > 2 and\n\nfirst_ethnic_percentage < 0.9 and\nthen type_of_division = ethnic\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n10]\nif\nethnic_count > 2 and\n\nfirst_ethnic_percentage < 0.9 and\ntype_of_division = racial and\n\nfirst_ethnic_division < first_racial_division\nthen type_of_division = ethnic\n11]\nif\nethnic_count > 2 and\n\nfirst_ethnic_percentage < 0.9 and\ntype_of_division = religion and\n\nfirst_ethnic_division < first_religion_division\nthen type_of_division = ethnic\nRules about linguistic diversity\n12]\nif\nling_count > 2 and\n\nfirst_ling_percentage < 0.9 and\nthen type_of_division = linguistic\n13]\nif\nling_count > 2 and\n\nfirst_ling_percentage < 0.9 and\ntype_of_division = racial and\n\nfirst_ling_division < first_racial_division\nthen type_of_division = linguistic\n14]\nif\nling_count > 2 and\n\nfirst_ling_percentage < 0.9 and\ntype_of_division = religion and\n\nfirst_ling_division < first_religion_division\nthen type_of_division = linguistic\n15]\nif\nling_count > 2 and\n\nfirst_ling_percentage < 0.9 and\ntype_of_division = ethnic and\n\nfirst_ling_division < first_ethnic_division\nthen type_of_division = linguistic\n16]\nif\n(ling_count < 2 and\n\nReligion_count < 2 and\n\nRacial_count < 2 and\n\nEthnic_count < 2) or\n(first_ling_percentage > 0.9 and\nFirst_religion_percentage > 0.9 and\n\nFirst_racial_percentage > 0.9 and\n\nFirst_ethnic_percentage > 0.9)\nThen type_of_division = none\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nRules calculating possibility\n17]\nif\nthen\ntype-of-division = none\nfirst-p = 1\n18]\nif\nthen\ntype-of-division = none\nsecond-p = 0\n19]\nif\nthen\ntype-of-division = none\nthird-p = 0\n20]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p <= 0.5 and\n\nsecond-racial-p >= 0.3 and\n\npos-of-fed = 0.5\npos-of-fed = 0.8\n21]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p <= 0.5 and\n\nsecond-racial-p >= 0.3 and\n\npos-of-fed = 0.35\npos-of-fed = 0.65\n22]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p <= 0.5 and\n\nsecond-racial-p >= 0.3 and\n\npos-of-fed = 0.2\npos-of-fed = 0.5\n23]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p <= 0.5 and\n\nsecond-religion-p >= 0.3 and\n\npos-of-fed = 0.5\npos-of-fed = 0.8\n24]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p <= 0.5 and\n\nsecond-religion-p >= 0.3 and\n\npos-of-fed = 0.35\npos-of-fed = 0.65\n25]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p <= 0.5 and\n\nsecond-religion-p >= 0.3 and\n\npos-of-fed = 0.2\npos-of-fed = 0.5\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n26]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p <= 0.5 and\n\nsecond-ethnic-p >= 0.3 and\n\npos-of-fed = 0.5\npos-of-fed = 0.8\n27]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p <= 0.5 and\n\nsecond-ethnic-p >= 0.3 and\n\npos-of-fed = 0.35\npos-of-fed = 0.65\n28]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p <= 0.5 and\n\nsecond-ethnic-p >= 0.3 and\n\npos-of-fed = 0.2\npos-of-fed = 0.5\n29]\nif\nthen\ntype-of-division = linguistic and\nfirst-linguistic-p <= 0.5 and\nsecond-linguistic-p >= 0.3 and\n\npos-of-fed = 0.5\npos-of-fed = 0.8\n30]\nif\nthen\ntype-of-division = linguistic and\nfirst-linguistic-p <= 0.5 and\nsecond-linguistic-p >= 0.3 and\n\npos-of-fed = 0.35\npos-of-fed = 0.65\n31]\nif\nthen\ntype-of-division = linguistic and\nfirst-linguistic-p <= 0.5 and\nsecond-linguistic-p >= 0.3 and\n\npos-of-fed = 0.2\npos-of-fed = 0.5\n32]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p >= 0.6 and\n\nsecond-racial-p >= 0.2 and\n\npos-of-fed = 0.5\npos-of-fed = 0.7\n33]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p >= 0.6 and\n\nsecond-racial-p >= 0.2 and\n\npos-of-fed = 0.35\npos-of-fed = 0.55\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n34]\nif\nthen\ntype-of-division = racial and\nfirst-racial-p >= 0.6 and\n\nsecond-racial-p >= 0.2 and\n\npos-of-fed = 0.2\npos-of-fed = 0.4\n35]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p >= 0.6 and\n\nsecond-religion-p >= 0.2 and\n\npos-of-fed = 0.5\npos-of-fed = 0.7\n36]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p >= 0.6 and\n\nsecond-religion-p >= 0.2 and\n\npos-of-fed = 0.35\npos-of-fed = 0.55\n37]\nif\nthen\ntype-of-division = religion and\nfirst-religion-p >= 0.6 and\n\nsecond-religion-p >= 0.2 and\n\npos-of-fed = 0.2\npos-of-fed = 0.4\n38]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p >= 0.6 and\n\nsecond-ethnic-p >= 0.2 and\n\npos-of-fed = 0.5\npos-of-fed = 0.7\n39]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p >= 0.6 and\n\nsecond-ethnic-p >= 0.2 and\n\npos-of-fed = 0.35\npos-of-fed = 0.55\n40]\nif\nthen\ntype-of-division = ethnic and\nfirst-ethnic-p >= 0.6 and\n\nsecond-ethnic-p >= 0.2 and\n\npos-of-fed = 0.2\npos-of-fed = 0.4\n41]\nif\nthen\ntype-of-division = linguistic and\nfirst-linguistic-p >= 0.6 and\nsecond-linguistic-p >= 0.2 and\n\npos-of-fed = 0.5\npos-of-fed = 0.7\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n42]\nif\ntype-of-division = linguistic and\nfirst-linguistic-p >= 0.6 and\nsecond-linguistic-p >= 0.2 and\n\npos-of-fed = 0.35\nthen pos-of-fed = 0.55\n43]\nif\ntype-of-division = linguistic and\nfirst-linguistic-p >= 0.6 and\nsecond-linguistic-p >= 0.2 and\n\npos-of-fed = 0.2\nthen pos-of-fed = 0.4\nRules about geographical distribution\n44]\nif\ngeographic-grouping <> none and\npos-of-fed < 0.2\nthen pos-of-fed = 0.25\n45]\nif\ngeographic-grouping <> none and\npos-of-fed > 0.2\npos-of-fed <= 0.5\nthen pos-of-fed = 0.55\n46]\nif\ngeographic-grouping <> none and\npos-of-fed > 0.5\nthen pos-of-fed = 0.85\n47]\nif\ngeographic-grouping = racial and\ntype_of_division = racial and\npos-of-fed < 0.2\nthen pos-of-fed = 0.3\n48]\nif\ngeographic-grouping = racial and\ntype_of_division = racial and\npos-of-fed > 0.2\npos-of-fed <= 0.5\nthen pos-of-fed = 0.6\n49]\nif\ngeographic-grouping = racial and\ntype_of_division = racial and\npos-of-fed > 0.5\nthen pos-of-fed = 0.9\n50]\nif\ngeographic-grouping = religion and\ntype_of_division = religion and\npos-of-fed < 0.2\nthen pos-of-fed = 0.3\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n51]\nif\nthen\ngeographic-grouping = religion and\ntype_of_division = religion and\npos-of-fed > 0.2\npos-of-fed <= 0.5\npos-of-fed = 0.6\n52]\nif\nthen\ngeographic-grouping = religion and\ntype_of_division = religion and\npos-of-fed > 0.5\npos-of-fed = 0.9\n53]\nif\nthen\ngeographic-grouping = ethnic and\ntype_of_division = ethnic and\npos-of-fed < 0.2\npos-of-fed = 0.3\n54]\nif\nthen\ngeographic-grouping = ethnic and\ntype_of_division = ethnic and\npos-of-fed > 0.2\npos-of-fed <= 0.5\npos-of-fed = 0.6\n55]\nif\nthen\ngeographic-grouping = ethnic and\ntype_of_division = ethnic and\npos-of-fed > 0.5\npos-of-fed = 0.9\n56]\nif\nthen\ngeographic-grouping = linguistic and\ntype_of_division = linguistic and\npos-of-fed < 0.2\npos-of-fed = 0.3\n57]\nif\nthen\ngeographic-grouping = linguistic and\ntype_of_division = linguistic and\npos-of-fed > 0.2\npos-of-fed <= 0.5\npos-of-fed = 0.6\n58]\nif\nthen\ngeographic-grouping = linguistic and\ntype_of_division = linguistic and\npos-of-fed > 0.5\npos-of-fed = 0.9\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nRules assessing kind of federalism or none at all\n59]\nif\ntype_of_division = null and\n\npossibility_of_federalism < 0.3\nthen federalism = FEDERALISM NOT VIABLE\n60]\nif\ntype_of_division = null and\n\npossibility_of_federalism > 0.3\nthen federalism = FEDERALISM MAYBE VIABLE BUT NO SIGNIFICANT\nDIVISIONS IN SOCIETY TO SUSTAIN A DIVIDED STATE\n61]\nif\ntype_of_division <> null and\n\npossibility_of_federalism < 0.3\nthen federalism = Federalism MAYBE VIABLE but country is too small\nto bear costs of federalism\n62]\nif\ntype_of_division = racial and\n\npossibility_of_federalism > 0.3 and\n\npossibility_of_federalism < 0.6\nthen federalism = Federalism POSSIBLY VIABLE along RACIAL\nseperations\n63]\nif\ntype_of_division = religion and\n\npossibility_of_federalism > 0.3 and\n\npossibility_of_federalism < 0.6\nthen federalism = Federalism POSSIBLY VIABLE along RELIGION\nseperations\n64]\nif\ntype_of_division = ethnic and\n\npossibility_of_federalism > 0.3 and\n\npossibility_of_federalism < 0.6\nthen federalism = Federalism POSSIBLY VIABLE along ETHNIC\nseperations\n65]\nif\ntype_of_division = linguistic and\n\npossibility_of_federalism > 0.3 and\n\npossibility_of_federalism < 0.6\nthen federalism = Federalism POSSIBLY VIABLE along LINGUISTIC\nseperations\n66]\nif\ntype_of_division = racial and\n\npossibility_of_federalism > 0.6\nthen federalism = Federalism BEST OPTION along RACIAL\nseperations\n67]\nif\ntype_of_division = religion and\n\npossibility_of_federalism > 0.6\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nthen federalism = Federalism BEST OPTION along RELIGION\nseperations\n68]\nif\ntype_of_division = ethnic and\n\npossibility_of_federalism > 0.6\nthen federalism = Federalism BEST OPTION along ETHNIC\nseperations\n69]\nif\ntype_of_division = linguistic and\n\npossibility_of_federalism > 0.6\nthen federalism = Federalism BEST OPTION along LINGUISTIC\nseperations\nCode\n;;; Investment Knowledge Base for Joshua\n;;; for use with Rule-Based Systems Exercises\n;;; 6.871 Spring 2004\n(in-package :ju)\n; (ask [federalism iraq response] #'print-answer-with-certainty)\n(defun print-answer-with-certainty (backward-support &optional (stream *standard-\noutput*))\n(check-type backward-support cons \"backward-support from a query\")\n(let ((predication (ask-database-predication backward-support)))\n(check-type predication predication \"a predication from a query\")\n(terpri stream)\n(ji::truth-value-case (predication-truth-value predication)\n(*true*\n(prin1 predication stream))\n(*false*\n(write-string \"[not \" stream)\n(ji::print-without-truth-value predication stream)\n(write-string \"]\" stream)))\n(format stream \" ~d\" (certainty-factor predication))))\n(defgeneric possesive-suffix (predication))\n(defgeneric first-prompt (predication))\n(defgeneric second-prompt (predication))\n(defgeneric third-prompt (predication))\n(defgeneric possible-values (predication))\n(defgeneric get-an-answer (predication &optional stream))\n(defgeneric appropriate-ptype (predication))\n(defgeneric accept-prompt (predication))\n(defgeneric question-prefix (predication))\n(defgeneric remaining-object-string (predication))\n;;; The base mixin\n(define-predicate-model question-if-unknown-model () () )\n(clim:define-gesture-name :my-rule :keyboard (:r :control :shift))\n(clim:define-gesture-name :my-help :keyboard (:h :control :shift))\n(clim:define-gesture-name :my-why :keyboard (:w :control :shift))\n(defparameter *mycin-help-string*\n\"\nctrl-? - to show the valid answers to this question\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nmeta-r - to show the current rule\nmeta-y - to see why this question is asked\nmeta-h - to see this list\"\n)\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;; explaining why we're asking what we're asking\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defun print-why (trigger rule &optional (stream *standard-output*))\n(format stream \"~%We are trying to determine \")\n(if (predicationp trigger)\n(progn (format stream \"~a \" (question-prefix trigger)) (say trigger stream))\n(princ trigger stream))\n(if (null rule)\n(format stream \"~%This is a top level query\")\n(let* ((debug-info (ji::rule-debug-info rule))\n(sub-goals (let ((ji::*known-lvs* nil))(eval (ji::rule-debug-info-context\ndebug-info)))))\n(format stream \"~%This is being asked for by the rule ~a in order to determine:~%\"\nrule)\n(format stream \"~a \" (question-prefix ji::*goal*)) (say ji::*goal* stream)\n(typecase sub-goals\n(ji::and-internal\n(let ((remaining-preds (rest (predication-statement sub-goals)))\n(good-answers nil)\n(remaining-stuff nil)\n(first-remaining-object-string nil))\n(labels ((do-good-preds ()\n(when remaining-preds\n(let ((first (pop remaining-preds)))\n(cond\n((not (predicationp first))\n(push (copy-object-if-necessary first) good-answers)\n(do-good-preds))\n(t\n(let ((found-it nil))\n(ask first\n#'(lambda (just)\n(push (ask-database-predication just) good-\nanswers)\n(setq found-it t)\n(do-good-preds))\n:do-backward-rules nil\n:do-questions nil)\n(unless found-it\n(with-statement-destructured (who value) first\n(declare (ignore who))\n(with-unification\n(unify trigger first)\n(setq first-remaining-object-string (remaining-\nobject-string first))\n(unify value first-remaining-object-string)\n(setq remaining-stuff\n(loop for pred in remaining-preds\nif (predicationp pred)\ncollect (with-statement-destructured (who\nvalue) pred\n(declare (ignore who))\n(unify value (if\n(joshua:unbound-logic-variable-p value)\n(remaining-\nobject-string pred)\n(joshua:joshua-\nlogic-variable-value value)))\n(copy-object-if-necessary\npred))\nelse collect (copy-object-if-necessary\npred)))))))))))))\n(do-good-preds))\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(loop for pred in (nreverse good-answers)\nfor first-time = t then nil\nif first-time\ndo (format stream \"~%It has already been determined whether: \")\nelse do (format stream \"~%and whether: \")\ndo (say pred stream))\n(format stream \"~%It remains to determine ~a ~a ~a\"\n(question-prefix trigger) first-remaining-object-string (remaining-\nstuff-suffix trigger))\n(loop for pred in remaining-stuff\ndo (format stream \"~%and ~a ~a ~a\" (question-prefix pred) (remaining-\nobject-string pred) (remaining-stuff-suffix pred)))))\n(otherwise ))\n)))\n(defmethod remaining-stuff-suffix ((pred predication)) \"is\")\n(defmethod remaining-stuff-suffix ((expression cons)) \"\")\n(defmethod predication-value-description ((pred predication)) (remaining-object-string\npred))\n;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;; PROTOCOL HACKING\n;;;;;;;;;;;;;;;;;;;;;;;;;\n(defmethod say ((expression cons) &optional (stream *standard-output*))\n(princ expression stream))\n(defmethod remaining-object-string ((expression cons)) (format nil \"~a\" expression))\n(defmethod question-prefix ((expression cons)) \"whether\")\n(defmethod get-an-answer ((predication question-if-unknown-model) &optional (stream\n*standard-output*))\n\"Print the prompt for this parameter (or make one up) and read the reply.\"\n(fresh-line)\n(flet ((mycin-help (stream action string-so-far)\n(declare (ignore string-so-far))\n(when (member action '(:help :my-help :my-rule :my-why))\n(fresh-line stream)\n(case action\n(:my-why\n(print-why predication ji::*running-rule* stream)\n)\n(:my-rule\n(format stream \"You are running the rule ~a\" ji::*running-rule*))\n(:my-help\n(format stream *mycin-help-string*)\n))\n(fresh-line stream)\n(write-string \"You are being asked to enter \" stream)\n(clim:describe-presentation-type (appropriate-ptype predication) stream)\n(write-char #\\. stream)\n)))\n(let ((clim:*help-gestures* (list* :my-help :my-why :my-rule clim:*help-gestures*)))\n(clim:with-accept-help ((:top-level-help #'mycin-help))\n(clim:accept (appropriate-ptype predication)\n:stream stream\n:prompt (accept-prompt predication))))))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;; Our pseudo mycin contains 3 types of predications\n;;;; boolean valued, numeric valued, and those that take one of\n;;;; a set of values\n;;;; For each type we provide say methods\n;;;;\nand a bunch of subordinate methods to make dialog almost English\n;;;;\nand to do CLIM accepts correctly\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;; boolean values\n(define-predicate-model value-is-boolean-mixin () () )\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(define-predicate-method (say value-is-boolean-mixin) (&optional (stream *standard-\noutput*))\n(with-statement-destructured (who yesno) self\n(format stream \"~A~A ~A ~A\"\nwho (possesive-suffix self)\n(if (joshua:joshua-logic-variable-value yesno) (first-prompt self) (second-\nprompt self))\n(third-prompt self))))\n(defmethod remaining-object-string ((predication value-is-boolean-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~A ~A ~a\"\n(joshua:joshua-logic-variable-value who)\n(first-prompt predication) (third-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-boolean-mixin)) '(clim:member yes\nno))\n(defmethod accept-prompt ((predication value-is-boolean-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~%Is it the case that ~a~a ~a ~a\"\nwho (possesive-suffix predication)\n(first-prompt predication)\n(third-prompt predication))))\n(defmethod question-prefix ((predication value-is-boolean-mixin)) \"whether\")\n(defmethod possible-values ((predication value-is-boolean-mixin)) '(\"yes\" \"no\"))\n(defmethod remaining-stuff-suffix ((pred value-is-boolean-mixin)) \"\")\n(defmethod predication-value-description ((pred value-is-boolean-mixin)) \"foobar\")\n;;;; numeric values\n(define-predicate-model value-is-numeric-mixin () () )\n(define-predicate-method (say value-is-numeric-mixin) (&optional (stream *standard-\noutput*))\n(with-statement-destructured (who number) self\n(if (joshua:unbound-logic-variable-p number)\n(format stream \"is ~a~a ~a\"\nwho (possesive-suffix self) (first-prompt self))\n(format stream \"~A~A ~A is ~A ~A\"\nwho (possesive-suffix self)\n(first-prompt self)\n(joshua:joshua-logic-variable-value number)\n(second-prompt self)))))\n(defmethod remaining-object-string ((predication value-is-numeric-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~A~A ~A\"\n(joshua:joshua-logic-variable-value who) (possesive-suffix predication)\n(first-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-numeric-mixin)) 'number)\n(defmethod accept-prompt ((predication value-is-numeric-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~%What is ~a~a ~a\"\nwho (possesive-suffix predication) (first-prompt predication))))\n(defmethod question-prefix ((predication value-is-numeric-mixin)) \"what\")\n;;; variety of possible values\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(define-predicate-model value-is-option-mixin () () )\n(define-predicate-method (say value-is-option-mixin) (&optional (stream *standard-\noutput*))\n(with-statement-destructured (who option) self\n(format stream \"~A~A ~A ~A ~A\"\nwho (possesive-suffix self)\n(first-prompt self)\n(second-prompt self)\n(joshua:joshua-logic-variable-value option))))\n(defmethod remaining-object-string ((predication value-is-option-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~A~A ~A\"\n(joshua:joshua-logic-variable-value who) (possesive-suffix predication)\n(first-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-option-mixin)) `(member ,@(possible-\nvalues predication)))\n(defmethod accept-prompt ((predication value-is-option-mixin))\n(with-statement-destructured (who value) predication\n(declare (ignore value))\n(format nil \"~%What is ~a~a ~a\"\nwho (possesive-suffix predication) (first-prompt predication))))\n(defmethod question-prefix ((predication value-is-option-mixin)) \"whether\")\n;;; Predicate defining macro\n(defmacro define-predicate-with-ancillary-info ((pred-name mixin)\n&key\npossesive-suffix\nprompt1 prompt2 prompt3\npossible-values\nmissing-value-prompt\n)\n`(eval-when (:compile-toplevel :execute :load-toplevel)\n(define-predicate ,pred-name (who value) (,mixin question-if-unknown-model cf-mixin\nltms:ltms-predicate-model))\n(defmethod possesive-suffix ((predication ,pred-name)) () ,possesive-suffix)\n(defmethod first-prompt ((predication ,pred-name)) () ',prompt1)\n(defmethod second-prompt ((predication ,pred-name)) () ',prompt2)\n,(when prompt3 `(defmethod third-prompt ((predication ,pred-name)) () ',prompt3))\n,(when possible-values `(defmethod possible-values ((predication ,pred-name))\n',possible-values))\n,(when missing-value-prompt `(defmethod missing-value-prompt ((predication ,pred-\nname)) ',missing-value-prompt))\n))\n;;; predicates that take numeric values\n(define-predicate-with-ancillary-info (population value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"population\")\n(define-predicate-with-ancillary-info (land-area value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"land area\" :prompt2 \"sq km\")\n(define-predicate-with-ancillary-info (pos-of-fed value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"possibility of federalism\" :prompt2 \"on a scale of 0\nto 1\")\n(define-predicate-with-ancillary-info (racial-count value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"number of races\" :prompt2 \"is\")\n(define-predicate-with-ancillary-info (religion-count value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"number of religions practiced\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (ethnic-count value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"number of living ethnicities\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (linguistic-count value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"number of spoken languages\" :prompt2 \"is\")\n(define-predicate-with-ancillary-info (first-racial-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most prevalent race's population percentage (enter\n0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (second-racial-p value-is-numeric-mixin)\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n:possesive-suffix \"'s\" :prompt1 \"second most prevalent race's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (third-racial-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"third most prevalent race's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (first-religion-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most followed religion's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (second-religion-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"second most followed religion's population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (third-religion-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"third most followed religion's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (first-ethnic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most populous ethnicity's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (second-ethnic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"second most populous ethnicity's population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (third-ethnic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"third most populous ethnicity's population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (first-linguistic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most spoken language's population percentage (enter\n0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (second-linguistic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"second most spoken language's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (third-linguistic-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"third most spoken language's population percentage\n(enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (first-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most important diversity's highest population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (second-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most important diversity's second highest population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n(define-predicate-with-ancillary-info (third-p value-is-numeric-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most important diversity's third highest population\npercentage (enter 0.3 for 30%)\":prompt2 \"is\")\n;;; Predicates that take one of a set of values\n(define-predicate-with-ancillary-info (type-of-division value-is-option-mixin)\n:possesive-suffix \"'s\" :prompt1 \"most prominent type of division\n(none/racial/religion/ethnic/linguistic)\" :prompt2 \"is\"\n:possible-values (none racial religion ethnic linguistic))\n(define-predicate-with-ancillary-info (geographic-grouping value-is-option-mixin)\n:possesive-suffix \"'s\" :prompt1 \"geographical grouping along lines of community\n(none/racial/religion/ethnic/linguistic)\" :prompt2 \"is\"\n:possible-values (none racial religion ethnic linguistic))\n(define-predicate-with-ancillary-info (federalism value-is-option-mixin)\n:possesive-suffix \"'s\" :prompt1 \"option on federalism\" :prompt2 \"is\"\n:possible-values (not-viable maybe-viable-in-undivided-society maybe-viable-but-\ncountry-very-small possibly-viable-racially possibly-viable-along-religion possibly-\nviable-ethnically possibly-viable-along-language best-option-along-race best-option-\nalong-religion best-option-along-ethnicity best-option-along-language))\n;; using this model, the system will ask the user any time\n;; it needs a specific fact to continue backward chaining.\n;;; we should only be asking a question under the following\n;;; circumstances:\n;;;\n;;; the predication being asked contains no logic variables\n;;; eg. [has-health-insurance matt yes], not\n;;; [has-health-insurance matt ?x]\n;;;\n;;; AND\n;;;\n;;; that predication is not already in the database\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n;;;\n;;; AND\n;;;\n;;; any other predication matching the predicate and ?who\n;;; eg. [has-health-insurance matt no] is not already in the\n;;; database.\n;;;\n;;; AND\n;;;\n;;; there is no rule we can use to find out the answer\n;;;\n;;; this can be told by check [known [has-health-insurance matt ?]]\n(define-predicate already-known (predicate object))\n;;; if after doing the normal processing nothing is found\n;;; then finally ask the guy a question if appropriate\n(define-predicate-method (ask question-if-unknown-model) (intended-truth-value\ncontinuation do-backward-rules do-questions)\n(let ((answers nil)\n(predicate (predication-predicate self)))\n(flet ((my-continuation (bs)\n(let* ((answer (ask-query bs))\n(database-answer (insert (copy-object-if-necessary answer))))\n(pushnew database-answer answers))))\n(with-statement-destructured (who value) self\n(declare (ignore value))\n(with-unbound-logic-variables (value)\n(let ((predication `[,predicate ,who ,value]))\n;; first see if there's an answer already in the database\n;; may want to change this to asserting already-know predication, but I'm\ntrying to avoid that\n(ask-data predication intended-truth-value #'my-continuation)\n(unless answers\n;; Now go get stuff from rules.\n(when do-backward-rules\n(ask-rules predication intended-truth-value #'my-continuation do-\nquestions))\n;; now go hack questions\n(unless answers\n(when do-questions\n(ask-questions predication intended-truth-value #'my-continuation))))))\n;; if he's doing a raws database fetch, don't ask\n(when (and (null answers) (or do-backward-rules do-questions))\n(unless (joshua:unbound-logic-variable-p who)\n(let* ((answer (get-an-answer self))\n(database-answer (tell `[,predicate ,who ,answer]\n:justification '((user-input 1.0)))))\n(pushnew database-answer answers))))))\n(loop for answer in answers\nwhen (eql (predication-truth-value answer) intended-truth-value)\ndo (with-stack-list (just self intended-truth-value answer)\n(with-unification\n(unify self answer)\n(funcall continuation just)))))\n;; make it clear that there is no interesting return value\n(values))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.)\n;;;\n;;;\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;RULES ABOUT: population and land-area minimum requirements\n(defrule population-low-cutoff (:backward :certainty 0.5 :importance 90)\nif [and [population ?who ?x]\n[land-area ?who ?y]\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(and(< ?x 10000000)(< ?y 100000))]\nthen [pos-of-fed ?who 0.2])\n(defrule population-medium-cutoff (:backward :certainty 0.5 :importance 89)\nif [and [population ?who ?x]\n[land-area ?who ?y]\n(and (< ?x 10000000)(>= ?y 100000))]\nthen [pos-of-fed ?who 0.35])\n(defrule population-medium-cutoff2 (:backward :certainty 0.5 :importance 88)\nif [and [population ?who ?x]\n[land-area ?who ?y]\n(and (>= ?x 10000000)(< ?y 100000))]\nthen [pos-of-fed ?who 0.35])\n(defrule population-high-cutoff (:backward :certainty 0.5 :importance 87)\nif [and [population ?who ?x]\n[land-area ?who ?y]\n(and(>= ?x 10000000)(>= ?y 100000))]\nthen [pos-of-fed ?who 0.5])\n;;;;RULES ABOUT: Diversity typecasting\n(defrule race-diversity (:backward :certainty 0.8 :importance 85)\nif [and [racial-count ?who ?x]\n[first-racial-p ?who ?y]\n(and (> ?x 2)(< ?y 0.9))]\nthen [type-of-division ?who racial])\n(defrule none-check-1 (:backward :certainty 0.00001 :importance 84)\nif [and [racial-count ?who ?x]\n(<= ?x 2)]\nthen [type-of-division ?who none])\n(defrule religion-none (:backward :certainty 0.8 :importance 83)\nif [and [religion-count ?who ?x]\n[first-religion-p ?who ?y]\n(and(> ?x 2)(< ?y 0.9))]\nthen [type-of-division ?who religion])\n(defrule religion-racial (:backward :certainty 0.9 :importance 82)\nif [and [religion-count ?who ?x]\n[first-religion-p ?who ?y]\n[type-of-division ?who racial]\n[first-racial-p ?who ?w]\n(and(> ?x 2)(< ?y 0.9)(< ?y ?w))]\nthen [type-of-division ?who religion])\n(defrule ethnic-none (:backward :certainty 0.8 :importance 81)\nif [and\n[ethnic-count ?who ?x]\n[first-ethnic-p ?who ?y]\n(and(> ?x 2)\n(< ?y 0.9))]\nthen [type-of-division ?who ethnic])\n(defrule ethnic-racial (:backward :certainty 0.9 :importance 80)\nif [and [ethnic-count ?who ?x]\n[first-ethnic-p ?who ?y]\n[type-of-division ?who racial]\n[first-racial-p ?who ?w]\n(and(> ?x 2)\n(< ?y 0.9)\n(< ?y ?w))]\nthen [type-of-division ?who ethnic])\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(defrule ethnic-religion (:backward :certainty 0.9 :importance 79)\nif [and [ethnic-count ?who ?x]\n[first-ethnic-p ?who ?y]\n[type-of-division ?who religion]\n[first-religion-p ?who ?w]\n(and (> ?x 2)\n(< ?y 0.9)\n(< ?y ?w))]\nthen [type-of-division ?who ethnic])\n(defrule linguistic-none (:backward :certainty 0.8 :importance 78)\nif [and [linguistic-count ?who ?x]\n[first-linguistic-p ?who ?y]\n(and(> ?x 2)\n(< ?y 0.9))]\nthen [type-of-division ?who linguistic])\n(defrule linguistic-racial (:backward :certainty 0.9 :importance 77)\nif [and [linguistic-count ?who ?x]\n[first-linguistic-p ?who ?y]\n[type-of-division ?who racial]\n[first-racial-p ?who ?w]\n(and(> ?x 2)\n(< ?y 0.9)\n(< ?y ?w))]\nthen [type-of-division ?who linguistic])\n(defrule linguistic-religion (:backward :certainty 0.9 :importance 76)\nif [and [linguistic-count ?who ?x]\n[first-linguistic-p ?who ?y]\n[type-of-division ?who religion]\n[first-religion-p ?who ?w]\n(and (> ?x 2)\n(< ?y 0.9)\n(< ?y ?w))]\nthen [type-of-division ?who linguistic])\n(defrule linguistic-ethnic (:backward :certainty 0.9 :importance 75)\nif [and [linguistic-count ?who ?x]\n[first-linguistic-p ?who ?y]\n[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?w]\n(and(> ?x 2)\n(< ?y 0.9)\n(< ?y ?w))]\nthen [type-of-division ?who linguistic])\n(defrule none-final (:backward :certainty 0.7 :importance 74)\nif [or [and [linguistic-count ?who ?w]\n[religion-count ?who ?y]\n[racial-count ?who ?x]\n[ethnic-count ?who ?z]\n(and (< ?x 2)\n(< ?y 2)\n(< ?z 2)\n(< ?w 2))]\n[and [first-linguistic-p ?who ?d]\n[first-racial-p ?who ?a]\n[first-religion-p ?who ?b]\n[first-ethnic-p ?who ?c]\n(and (> ?a .9) (> ?b .9)(> ?c .9)(> ?d .9))]]\nthen [type-of-division ?who none])\n;;;; Rules about percentages\n(defrule none-p-1 (:backward :certainty 1.0 :importance 73)\nif [type-of-division ?who none]\nthen [first-p ?who 1])\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(defrule none-p-2 (:backward :certainty 1.0 :importance 73)\nif [type-of-division ?who none]\nthen [second-p ?who 0])\n(defrule none-p-3 (:backward :certainty 1.0 :importance 73)\nif [type-of-division ?who none]\nthen [third-p ?who 0]])\n(defrule racial-p-h (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.8])\n(defrule racial-p-m (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.65])\n(defrule racial-p-l (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.5])\n(defrule religion-p-h (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.8])\n(defrule religion-p-m (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.65])\n(defrule religion-p-l (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.5])\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(defrule ethnic-p-h (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.8])\n(defrule ethnic-p-m (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.65])\n(defrule ethnic-p-l (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.5])\n(defrule linguistic-p-h (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.8])\n(defrule linguistic-p-m (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.65])\n(defrule linguistic-p-l (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (<= ?x 0.5)\n(>= ?y 0.3)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.5])\n(defrule racial-p-2-h (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.7])\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(defrule racial-p-2-m (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.55])\n(defrule racial-p-2-l (:backward :certainty 0.7 :importance 73)\nif [and[type-of-division ?who racial]\n[first-racial-p ?who ?x]\n[second-racial-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.4])\n(defrule religion-p-2-h (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.7])\n(defrule religion-p-2-m (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.55])\n(defrule religion-p-2-l (:backward :certainty 0.7 :importance 72)\nif [and[type-of-division ?who religion]\n[first-religion-p ?who ?x]\n[second-religion-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.4])\n(defrule ethnic-p-2-h (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.7])\n(defrule ethnic-p-2-m (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.55])\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n(defrule ethnic-p-2-l (:backward :certainty 0.7 :importance 71)\nif [and[type-of-division ?who ethnic]\n[first-ethnic-p ?who ?x]\n[second-ethnic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.4])\n(defrule linguistic-p-2-h (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.5))]\nthen [pos-of-fed ?who 0.7])\n(defrule linguistic-p-2-m (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.35))]\nthen [pos-of-fed ?who 0.55])\n(defrule linguistic-p-2-l (:backward :certainty 0.7 :importance 70)\nif [and[type-of-division ?who linguistic]\n[first-linguistic-p ?who ?x]\n[second-linguistic-p ?who ?y]\n[pos-of-fed ?who ?z]\n(and (>= ?x 0.6)\n(>= ?y 0.2)\n(= ?z 0.2))]\nthen [pos-of-fed ?who 0.4])\n;;;;; Rules about geographic grouping\n(defrule geo-grouping-check-l (:backward :certainty 0.8 :importance 67)\nif [and (not [geographic-grouping ?who none])\n[pos-of-fed ?who ?z]\n(<= ?z 0.2)]\nthen [pos-of-fed ?who 0.25])\n(defrule geo-grouping-check-m (:backward :certainty 0.8 :importance 66)\nif [and (not [geographic-grouping ?who none])\n[pos-of-fed ?who ?z]\n(and (<= ?z 0.5)(> ?z 0.2))]\nthen\n[pos-of-fed ?who 0.55])\n(defrule geo-grouping-check-h (:backward :certainty 0.8 :importance 66)\nif [and (not [geographic-grouping ?who none])\n[pos-of-fed ?who ?z]\n(> ?z 0.5)]\nthen [pos-of-fed ?who 0.85])\n(defrule racial-grouping-l (:backward :certainty 0.9 :importance 66)\nif [and [geographic-grouping ?who racial]\n[type-of-division ?who racial]\n[pos-of-fed ?who ?z]\nthen\n(<= ?z 0.2)]]\n[pos-of-fed ?who 0.3])\n(defrule racial-grouping-m (:backward :certainty 0.9 :importance 66)\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nif [and [geographic-grouping ?who racial]\n[type-of-division ?who racial]\n[pos-of-fed ?who ?z]\n(and (<= ?z 0.5)(> ?z 0.2))]\nthen [pos-of-fed ?who 0.6])\n(defrule racial-grouping-h (:backward :certainty 0.9 :importance 66)\nif [and [geographic-grouping ?who racial]\n[type-of-division ?who racial]\n[pos-of-fed ?who ?z]\nthen\n(> ?z 0.5)]\n[pos-of-fed ?who 0.9])\n(defrule religion-grouping-l (:backward :certainty 0.9 :importance 65)\nif [and [geographic-grouping ?who religion]\n[type-of-division ?who religion]\n[pos-of-fed ?who ?z]\nthen\n(<= ?z 0.2)]\n[pos-of-fed ?who 0.3])\n(defrule religion-grouping-m (:backward :certainty 0.9 :importance 65)\nif [and [geographic-grouping ?who religion]\n[type-of-division ?who religion]\n[pos-of-fed ?who ?z]\n(and (<= ?z 0.5)(> ?z 0.2))]\nthen\n[pos-of-fed ?who 0.6])\n(defrule religion-grouping-h (:backward :certainty 0.9 :importance 65)\nif [and [geographic-grouping ?who religion]\n[type-of-division ?who religion]\n[pos-of-fed ?who ?z]\nthen\n(> ?z 0.5)]\n[pos-of-fed ?who 0.9])\n(defrule ethnic-grouping-l (:backward :certainty 0.9 :importance 64)\nif [and [geographic-grouping ?who ethnic]\n[type-of-division ?who ethnic]\n[pos-of-fed ?who ?z]\nthen\n(<= ?z 0.2)]\n[pos-of-fed ?who 0.3])\n(defrule ethnic-grouping-m (:backward :certainty 0.9 :importance 64)\nif [and [geographic-grouping ?who ethnic]\n[type-of-division ?who ethnic]\n[pos-of-fed ?who ?z]\n(and\n(<= ?z 0.5)\n(> ?z 0.2))]\nthen [pos-of-fed ?who 0.6])\n(defrule ethnic-grouping-h (:backward :certainty 0.9 :importance 64)\nif [and [geographic-grouping ?who ethnic]\n[type-of-division ?who ethnic]\n[pos-of-fed ?who ?z]\n(> ?z 0.5)]\nthen [pos-of-fed ?who 0.9])\n(defrule linguistic-grouping-l (:backward :certainty 0.9 :importance 63)\nif [and [geographic-grouping ?who linguistic]\n[type-of-division ?who linguistic]\n[pos-of-fed ?who ?z]\n(<= ?z 0.2)]\nthen [pos-of-fed ?who 0.3])\n(defrule linguistic-grouping-m (:backward :certainty 0.9 :importance 63)\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nif [and [geographic-grouping ?who linguistic]\n[type-of-division ?who linguistic]\n[pos-of-fed ?who ?z]\n(and (<= ?z 0.5)(> ?z 0.2))]\nthen [pos-of-fed ?who 0.6])\n(defrule linguistic-grouping-h (:backward :certainty 0.9 :importance 63)\nif [and [geographic-grouping ?who linguistic]\n[type-of-division ?who linguistic]\n[pos-of-fed ?who ?z]\n(> ?z 0.5)]\nthen [pos-of-fed ?who 0.9])\n;;;; Rules about final decision based on pre-calculated factors\n(defrule not-viable (:backward :certainty 1.0 :importance 62)\nif [and [type-of-division ?who none]\n[pos-of-fed ?who ?y]\n(< ?y 0.3)]\nthen [federalism ?who not-viable])\n(defrule maybe-viable-1 (:backward :certainty 1.0 :importance 61)\nif [and [type-of-division ?who none]\n[pos-of-fed ?who ?y]\n(and (> ?y 0.3)(< ?y 0.6))]\nthen [federalism ?who maybe-viable-in-undivided-society])\n(defrule maybe-viable-2 (:backward :certainty 1.0 :importance 59)\nif [and (not[type-of-division ?who none])\n[pos-of-fed ?who ?y]\n(> ?y 0.3)]\nthen [federalism ?who maybe-viable-but-country-very-small])\n(defrule possibly-viable-racially (:backward :certainty 0.9 :importance 58)\nif [and [type-of-division ?who racial]\n[pos-of-fed ?who ?y]\n(and (> ?y 0.3)(< ?y 0.6))]\nthen [federalism ?who possibly-viable-racially])\n(defrule possibly-viable-along-religion (:backward :certainty 0.9 :importance 57)\nif [and [type-of-division ?who religion]\n[pos-of-fed ?who ?y]\n(and (> ?y 0.3)(< ?y 0.6))]\nthen [federalism ?who possibly-viable-along-religion])\n(defrule possibly-viable-ethnically (:backward :certainty 0.9 :importance 56)\nif [and [type-of-division ?who ethnic]\n[pos-of-fed ?who ?y]\n(and (> ?y 0.3)(< ?y 0.6))]\nthen [federalism ?who possibly-viable-ethnically])\n(defrule possibly-viable-along-language (:backward :certainty 0.9 :importance 55)\nif [and [type-of-division ?who linguistic]\n[pos-of-fed ?who ?y]\n(and (> ?y 0.3)(< ?y 0.6))]\nthen [federalism ?who possibly-viable-along-language])\n(defrule best-option-along-race (:backward :certainty 1.0 :importance 54)\nif [and [type-of-division ?who racial]\n[pos-of-fed ?who ?y]\n(> ?y 0.6)]\nthen [federalism ?who best-option-along-race])\n(defrule best-option-along-religion (:backward :certainty 1.0 :importance 53)\n\nShruti Chandrasekhar\n6.871 Final Term Paper\nif [and [type-of-division ?who religion]\n[pos-of-fed ?who ?y]\n(> ?y 0.6)]\nthen [federalism ?who best-option-along-religion])\n(defrule best-option-along-ethnicity (:backward :certainty 1.0 :importance 52)\nif [and [type-of-division ?who ethnic]\n[pos-of-fed ?who ?y]\n(> ?y 0.6)]\nthen [federalism ?who best-option-along-ethnicity])\n(defrule best-option-along-language (:backward :certainty 1.0 :importance 51)\nif [and [type-of-division ?who linguistic]\n[pos-of-fed ?who ?y]\n(> ?y 0.6)]\nthen [federalism ?who best-option-along-language])\n;;;;;;;;;;;;;;;;;--------------------------\n(defun rules-concluding-predicate (pred)\n(let ((answers nil))\n(map-over-backward-rule-triggers `[,pred ? ?]\n#'(lambda (trigger) (pushnew (ji::backward-trigger-\nrule trigger) answers)))\nanswers))\n(defun predicates-rule-relies-on (rule)\n(let ((answers nil))\n(labels ((do-one-level (stuff)\n(let ((connective (when (predication-maker-p stuff) (predication-maker-\npredicate stuff))))\n(case connective\n((and or)\n(with-predication-maker-destructured (&rest more-stuff) stuff\n(loop for thing in more-stuff\ndo (do-one-level thing))))\n((nil))\n(otherwise\n(pushnew connective answers))\n))))\n(do-one-level (ji::rule-debug-info-context (ji::rule-debug-info rule))))\nanswers))\n(defun graph-rule-tree (predicates &key (orientation :vertical) (size :small) (stream\n*standard-output*))\n(terpri stream)\n(clim:with-text-size (stream size)\n(clim:format-graph-from-roots\n(loop for pred in predicates\ncollect (list 'predicate pred))\n#'(lambda (thing stream)\n(destructuring-bind (type name) thing\n(case type\n(predicate\n(clim:surrounding-output-with-border (stream)\n(princ name stream)))\n(rule\n(clim:surrounding-output-with-border (stream :shape :oval)\n(princ name stream))))))\n#'(lambda (thing)\n(destructuring-bind (type name) thing\n(case type\n(predicate (loop for r in (rules-concluding-predicate name)\ncollect (list 'rule r)))\n(rule (loop for p in (predicates-rule-relies-on name)\ncollect (list 'predicate p))))))\n:stream stream\n:orientation orientation\n\nShruti Chandrasekhar\n6.871 Final Term Paper\n:merge-duplicates t\n:duplicate-test #'equal)))\n(clim-env::define-lisp-listener-command (com-graph-rules :name t)\n((predicates `(clim:sequence (member ,@(loop for pred being the hash-keys of\nji::*all-predicates* collect pred)))\n:prompt \"A sequence of predicates\")\n&key\n(orientation `(clim:member :vertical :horizontal) :default :vertical)\n(size `(clim:member :tiny :very-small :small :normal :large :very-large :huge)\n:default :small)\n(to-file 'clim:pathname :default nil)\n(page-orientation '(clim:member :portrait :landscape)\n:default :portrait\n:prompt \"If to file, print in portrait or landscape format\")\n(multi-page 'clim:boolean :default nil :prompt \"If to file, segment into multiple\npages\")\n(scale-to-fit 'clim:boolean :default nil :prompt \"If to file, scale to fit one\npage\"))\n(if to-file\n(with-open-file (file to-file :direction :output :if-exists :supersede :if-does-\nnot-exist :create)\n(clim:with-output-to-postscript-stream (stream file\n:multi-page multi-page\n:scale-to-fit scale-to-fit\n:orientation page-orientation)\n(graph-rule-tree predicates :orientation orientation :size size :stream stream)))\n(graph-rule-tree predicates :orientation orientation :size size)))\nBibliography\nPatterns of Democracy : Government Forms and Performance in Thirty-Six\nCountries by Arend Lijphart\nComparative constitutional Engineering by Giovanni Sartori\nComparative Politics Today: A World View, Eighth Edition by Gabriel A.\nAlmond, et al\nThe value patterns of democracy: A case study in comparative analysis\n(Reprint / Institute of Industrial Relations and Institute of International\nStudies) by Seymour Martin Lipset\nPolitics in Western European democracies: patterns and problems by Gary C\nByrne"
    },
    {
      "category": "Resource",
      "title": "drink_fin_pap.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/113e010a4e938c185d360e0598a73e83_drink_fin_pap.pdf",
      "content": "6.871 Spring 2005\nFinal Project Paper\n5/12/2005\nHow to Score Free Drinks From Guys\n1. Motivation and Task\nWe were motivated by the people's behaviors and social interactions at bars.\nSpecifically, we noticed that certain women always have free drinks lined up, certain\nwomen always end up meeting and conversing with new people, certain men always\ncomment on how short someone's skirt is, different men respond differently to various\nflirting styles, and that behaviors and dress can vary depending on the location. Intrigued\nby these patterned observations and reasoning behind human interactions at bars, we\ndecided to capture that knowledge in our final project.\nWe propose to build an advisor expert system that will help women get free drinks at\nbars. When the user, a woman, walks into a night scene, she will target a prospective\nman from whom she wishes to receive a drink. She will use our system by inquiring it\nfor recommended course of actions. The system will, in response, pose a series of\ncustomized questions to the woman to collect information about the woman's physical\nattributes and profession, the prospective man's behaviors and state, and the venue.\nBased on the inputs, the system will make several levels of inferences to make some\nconclusions about the woman's attractiveness, personality traits, the man's traits, and the\nsetting characteristics. Using these intermediate inferences, the system will eventually\nresult in a recommend course of action for the woman in her specific scenario.\nAn example of user-system dialogue might look like this:\n(ask [action ann ?x] #'suggest)\nWhat is ANN's age: 40\nWhat is ANN's height: 61\nWhat is ANN's weight: 150\nIs it the case that ANN wears glasses: Yes\nIs it the case that ANN has braces: No\nIs it the case that ANN has blue eyes: Yes\nIs it the case that ANN has blonde hair: Yes\nWhat is ANN's hair length: Long\nWhat is ANN's shoe type: Heels\nWhat is ANN's clothing fit: Loose\nIs it the case that ANN is wearing a skirt: No\nWhat is ANN's profession: Education\nWhat is ANN's location(venue type): Club\nIs it the case that ANN's target man is wearing a suit: Yes\nIs it the case that ANN's target man is alone: Yes\nIs it the case that ANN's target man is speaking loudly: Yes\nIs it the case that ANN's target man is making large gestures: Yes\n[ACTION ANN ASK-THE-BARTENDER-FOR-A-MENU-AND-KNOCK-OVER-YOUR-DRINK-\nWHEN-YOU-REACH-FOR-IT] 1.0\n\n[ACTION ANN PLACE-YOUR-GLASS-ON-THE-EDGE-OF-THE-BAR-NEXT-TO-HIS-ELBOW-\nAND-WAIT-UNTIL-YOUR-DRINK-GOES-FLYING-OFF] 0.64000005\nIn this example, the user, Ann, is not at an optimal age or weight for her height.\nHowever, she does have working for her the blue eyes, blond hair, and heels. So overall\nshe is considered average in terms of attractiveness. Her profession in education\nindicates that she is experienced in working with people and is likely to be extroverted.\nAdditionally, as an educator who wears loose clothing to go out at night, she is probably\nalso reserved and not really creative. The man she is targeting is well dressed so he is\nprobably respectable and wealthy. From the observation that he is talking loudly and\ngesturing wildly, one might infer that he is drunk as well. Given these intermediate\nconclusions, an attractive or daring woman would be able to easily take advantage of the\nprospective man's lack of company and his qualities. However, since Ann is reserved\nand only averagely attractive, she does not have as many options, and the approaches that\nwill give her the greatest chance of success would take advantage of the conscience of the\nbartender or the man by tricking one into thinking he has spilled her drink.\nThis example characterizes the type of problems the free drinks advisor system can\nhandle. Our system is capable of taking objective information that the user should know\nor be able to observe and through the process of elimination and inferences, find\nsuccessful paths to viable solutions. One key point to make is that the scope of our\nproblem is recommending plausible approaches to receiving a free drink, given the\nrelevant input information about the woman, man, and venue. The recommendations are\nuseful given that the user has inputted correct information without fabricating any\nanswers, such as her weight, and that it is her first time meeting the relevant parties\ninvolved in the scenario. The problems of trying to get several drinks from one man or\nfrom a man she already knows are both out of scope for the functionalities of our system.\nAn obvious example is that if a woman succeeds the first time by stealing a man's drink,\nreasonably if he noticed, the second time he would not allow that to happen again. This\ntype of problem only differs from the problem in scope slightly, but due to the volatile\nnature of human thoughts on which the success of our advisor system depends, it\nbecomes out of scope.\n2. Knowledge Representation\nWe have chosen a rule-based knowledge representation since it seems to best match the\nscope of the problem we aimed to solve. In particular, rules provide the advantages of an\neasily extensible knowledge base, modularity of chunks of knowledge, and the ease of\ncategorization of associations.\nOur knowledge base includes both factual knowledge and heuristic knowledge. An\nexample rule of factual knowledge is the calculation of the Body Mass Index from the\nuser's height and weight, and an example rule of heuristic knowledge is the judgmental\nassumption that a woman working in the design industry is extroverted. Given the scope\nof our problem, which involves an immense amount of variables and perceptions, it is no\nsurprise that an overwhelming majority of the knowledge is heuristic. This in turn means\n\nthat the knowledge base has much potential to be expanded in order to account for more\nof the variables and to capture more precise knowledge. Thus, it is important that our\nknowledge representation permits easy ways of expanding and modifying the knowledge\nbase. As we learned in class, rule's independent nature provides this flexibility.\nNext, as briefly discussed in the task description, the knowledge of the system captures\ntwo main types of knowledge: (1) association between observable attributes and\nintermediate qualities such as attractiveness; and (2) association between intermediate\nqualities and recommendations. An example rule that represent type (1) dictates that if\nthe woman wears tight clothing or if her profession is administrative, marketing,\neducation, design, or business, then she is an extrovert (see Rule 1). An example rule that\nrepresent type (2) knowledge indicates that if the woman is attractive, extroverted, and\ncreative, the venue is loud, and the man is respectable, wealthy, and alone, she can try to\nget a free drink by making up a sob story to the man (see Rule 2). These two knowledge\ntypes form the main tiers between inputs and the result. Furthermore, there are four fairly\nindependent main categories to which an association can belong: (1) woman's\nattractiveness; (2) woman's personality traits; (3) man's behavior and state; (4) venue\ncharacteristics . One way to visualize such a knowledge base is as a hierarchical tree\nstructure (see figure 1 in the next section), in which the basic attributes are the leaves and\neach association captured by a rule provides the link from a node of a lower level in the\ntree to a node in the next level. At the root of the tree is the desired outcome, which is\nthe recommended course of action. Each branch from the root is a category. This visual\nrepresentation of the knowledge base will be discussed in more details in the next two\nsections. Meanwhile, keeping this hierarchical and categorical structure in mind, since\nthe purpose of rules is to specify necessary and sufficient conditions for something to be\npart of a certain category, we decided that rules provides precisely the type of\nrepresentation we need for effective encapsulation of stereotypical associations of\nqualities about the woman, man, setting, and course of action.\nRule 1\n(defrule woman-extrovert (:backward :certainty 1.0)\nif [or [fit ?who tight]\n[or [job ?who administrative]\n[job ?who marketing]\n[job ?who education]\n[job ?who design]\n[job ?who business]]]\nthen [woman-trait1 ?who extrovert])\nRule 2\n(defrule tell-a-sob-story (:backward :certainty 1.0 :importance 99)\nif [and [attractiveness ?who attractive]\n[woman-trait1 ?who extrovert]\n[woman-trait2 ?who creative]\n[venue-loud ?who no]\n[man-respectable ?who yes]\n[man-wealthy ?who yes]\n[man-alone ?who yes]]\nthen [action ?who tell-a-sob-story-thank-the-guy-for-being-a-good-\nlistener-then-gracefully-accepts-a-drink])\n\n4. Knowledge Tree\nThis tree diagram on the next page represents the general structure and the important\ncontent of the knowledge in our free drinks advisor system. The tree branches from the\nroot show the four major categories of intermediate qualities. In each box, the bold title\nat the top represent the category of the attributes in the same box. The normal phrases or\nwords on each row in the box represent the different values a quality or in Joshua's term,\na \"class\" or \"predicate,\" might take on. The italicized attributes are observable\ninformation the system might ask the user.\ni\ning-off\ny\ny\nAverage\nCreative / Straightforward\nMan's Traits\nWealthy?\nVenue\nClub\nFit of Clothing\nSpeech\nAttributes\nAge\nBraces?\nHair color\nShoe Type\nBMI\nFit of Clothing\nRecommended Course of Action\ntell-a-sob-story-thank-the-guy-for-being-a-good-listener-then-gracefully-accepts-a-drink\nsilly-me-i-have-been-busy-unpacking-i-have-forgotten-to-change-my-francs\nplace-your-glass-on-the-edge-of-the-bar-next-to-h s-elbow-and-wait-until-your-drink-goes-fly\nslowly-walk-by-him-and-let-him-spill-your-drink-then-accept-his-apology-with-a-new-drink\ngrab-a-long-straw-and-use-it-to-steal-peoples-drinks\nask-the-bartender-for-a-menu-and-knock-over- our-drink-when- ou-reach-for-it\nWoman's\nAttractiveness\nAttractive\nUnattractive\nWoman's Traits\nExtrovert / Introvert\nBold / Reserved\nDrunk?\nRespectable?\nCharacteristics\nCrowded?\nLoud?\nDark?\nVenue Type\nSports Bar\nPosh Bar\nHappy Hour\nProfession\nClothing\nDesigner\nCompany\nGesture\nEmpty Glasses\nLooking around?\nObservable\nGlasses?\nEye Color\nHair Length\nFit Index\nHeight\nWeight\n\nThe node on a higher level can be concluded from the attributes outlined in the boxes to\nwhich it has a link on the lower level. Thus chains of reasoning are formed from the goal\nnode to leaf nodes. When no more inferences and back chaining can be performed, the\nsystem outputs each action goal with complete chains of reasoning for all its\npreconditions as a plausible approach for getting a free drink.\n3. Problem Solving Paradigm\nWe intend to use backward chaining with our rule-based knowledge base as our problem-\nsolving paradigm. Backward chaining was a natural choice since we want the user to\ninquire the system for an end result and the system in response should back chain from\nthe goal, ask for relevant information, and eventually find successful paths to the goal.\nThe inference engine follows a strategy:\nUpon reception of an inquiry, the system tries out each possible backward rule in the\nknowledge base that has as a consequent a recommended course of action in the order of\nrated importance. It looks at the preconditions of the action in the IF clause of the rule\nand asks each predication. If the asked predication is the consequent of other rules, this\nbackward chaining and predicate asking continues to perpetrate until the predication is\nnot a consequent of any rule, at which point the system asks the user to answer the\nquestion. The same perpetration of backward reasoning occurs through each relevant\nbranch as identified by the preconditions until all required preconditions have been either\ndetermined to be failed or successful. Our system is designed such that it offers all the\nplausible recommendations to the user. Therefore, even if one backward rule with action\nas its consequent succeeds, the system continues to perform the same backward chaining\nfor all the possible actions. The actions that succeed will in essence have established a\nsuccessful line of reasoning from the root of the knowledge tree down to all the leaves\nthat determine the intermediate predications. When the system quits the last action\nbackward rule, it will output all of the action predicates that were found to be successful.\nThe predications will be listed depending on the degree of stringency of required qualities\nfor their success. This strategy shall become clear in the annotated example of user-\nsystem dialogue.\nThe order of outputted recommendations is determined by the intuition that attractiveness\nis the main factor influencing the options of the woman in getting a free drink. An\nattractive woman, of course, has more options than her less attractive counterparts and\ncan probably get men fighting to buy her drinks without any effort. The three remaining\ncategories, woman's personality, man's traits, and setting, are then used to determine\nwhich of the remaining course of actions are appropriate and in what order of\nappropriateness. For example, if the venue is dark and crowded, it would be more likely\nfor a woman to succeed in stealing people's drinks. Finally, if no course of action\nsucceeds, we have included in our system a fallback plan that any woman can try and\nshould be able to pull off.\n\n4. Implementation Logistics\nSince we will be using a rule-based representation, Joshua seems to be the best tool for\nour program. Through the last problem set we have gained experience in running and\nwriting rules with Joshua. Although the interface is somewhat primitive, the\nimplementation of rules is straightforward and it is also the preferred tool for projects as\nindicated on the course website.\nAs for the actual implementation, since our knowledge is primarily organized into\ncategories that are fairly independent of one another, we decided to take advantage of the\nmodularity of the categorical inferences and divide up the implementation of rules by\ncategory.\n5. Annotated Example\nAt the beginning of this example, I will annotate with more technical details in order to\nfully illustrate the back chaining and inference reasoning of the system. Later on I will\nprovide more descriptive explanations for the actions of the system.\n(ask [action tina ?x] #'suggest)\n> System tries matching predication [ACTION TINA ?X], which is\nnot in the database, so it asks the predication. The first found\nmatching rule with its conclusion matching [ACTION TINA VALUE] is rule\nTELL-A-SOB-STORY. First precondition is [ATTRACTIVENESS TINA\nATTRACTIVE], so the system needs to determine whether TINA is\nATTRACTIVE. This predication is the conclusion of rule WOMAN-\nATTRACTIVE, so system continues back chaining. First precondition is\n[AGE-INDEX TINA ?A], which means the first factor required to determine\nATTRACTIVENESS is AGE. The first rule found with that as conclusion is\nAGE-INDEX-3. The precondition of this rule matches [AGE TINA ?X],\nwhich is not a conclusion of any rule and database has no knowledge on\nTINA's AGE, so the system asks the user for information.\n>> This is a fully detailed description of the back chaining inference\nengine at work to figure out that it needs to ask for TINA's age. For\nthe next sequence of questions, the system is trying to determine\nwhether TINA is ATTRACTIVE. Each criterion is assigned an index score,\nwith 3 being the most attractive, 2 being average, and 1 being the\nleast attractive quality of that certain attribute.\nWhat is TINA's age: 23\n> [AGE TINA 23] is inserted into the database and systems checks\nrules AGE-INDEX-2 and AGE-INDEX-1 since they both satisfy [AGE-INDEX\nTINA ?A] from WOMAN-ATTRACTIVE. The preconditions of these rules\nmatches [AGE TINA 23] so no more questions are asked. Only AGE-INDEX-3\nis satisfied, so [AGE-INDEX TINA 3] enters database. Next precondition\nthat determine WOMAN-ATTRACTIVE is [BMI-INDEX TINA ?B], meaning BMI-\nINDEX is also required for determining ATTRACTIVENESS. Thus system\ntries first found rule, BMI-INDEX-3, which requires [BODY-TYPE TINA\nIDEAL]. Database has no predication with class BODY-TYPE, so it tries\nthe backward rule BODY-TYPE-ANOREXIC, which depends on [HEIGHT TINA ?X]\n\nand [WEIGHT TINA ?Y]. The back chain stops here, so the system asks\nthe user.\nWhat is TINA's height: 66\nWhat is TINA's weight: 125\n> Predication [HEIGHT TINA 66] and [WEIGHT TINA 125] are inserted\ninto database. System checks all the BODY-TYPE rules and backward rule\nBODY-TYPE-IDEAL succeeds, thus [BODY-TYPE TINA IDEAL] enters database.\nGoing 1 step back up the tree, BMI-INDEX rules are checked to see which\none can be satisfied by this BODY-TYPE. [BMI-INDEX TINA 3] succeeds\nand enters database. The third precondition in WOMAN-ATTRACTIVE is\n[GLASSES-INDEX TINA ?C], so system tries GLASS-INDEX rules. They\nrequire knowledge on [WEARS-GLASSES TINA NO], so the system asks the\nuser.\nIs it the case that TINA wears glasses: No\n> System enters [WEARS-GLASSES TINA NO] and [GLASSES-INDEX TINA\n3] following similar logic as how system entered [BODY-TYPE TINA\nIDEAL] and [BMI-INDEX TINA 3]. The rest of the preconditions for\nWOMAN-ATTRACTIVE involve BRACES, EYE-COLOR, HAIR-LENGTH, SHOE-TYPE,\nFIT-OF-CLOTHING, and SKIRT-LENGTH so the system back chains in similar\nmanner through associated rules for each one and asks the user\nquestions.\nIs it the case that TINA has braces: No\n> Enter [HAS-BRACES TINA NO] and [BRACES-INDEX TINA 3]\nIs it the case that TINA has blue eyes: Yes\n> Enter [EYE-COLOR-BLUE TINA YES] and [EYE-COLOR-INDEX\nTINA 3]\nIs it the case that TINA has blonde hair: No\n> Enter [HAIR-COLOR-BLONDE TINA NO] and [HAIR-COLOR-INDEX\nTINA 2]\nWhat is TINA's hair length: Medium\n> Enter [HAIR-LENGTH TINA MEDIUM] and [HAIR-LENGTH-INDEX\nTINA 2]\nWhat is TINA's shoe type: Heels\n> Enter [SHOE-TYPE TINA HEELS] and [SHOE-TYPE-INDEX TINA 3]\nWhat is TINA's clothing fit: Tight\n> Enter [FIT TINA TIGHT] and [FIT-OF-CLOTHING-INDEX TINA\n3]. The FIT-OF-CLOTHING-INDEX requires one further level of back\nchaining than the above few questions since it depends on both BMI-\nINDEX and FIT.\nIs it the case that TINA is wearing a skirt: Yes\n> Enter [WEARS-SKIRT TINA YES]. The system design gives\nbonus attractiveness points to women that wear skirts, and the shorter\nthe higher the SKIRT-INDEX she will receive. So it first determines\nwhether she's wearing a skirt. An index score of 0 is assigned to a\nwoman who is not wearing a skirt. If she is, then the system inquires\nabout the length.\n\nWhat is TINA's skirt length: Medium\n> Enter [SKIRT-LENGTH TINA MEDIUM]\n> At the end of this series of question, the system has back\nchained WOMAN-ATTRACTIVE to all the user-input attributes and collected\nall required information to determine that TINA is ATTRACTIVE and\nenters in the predication [ATTRACTIVENESS TINA ATTRACTIVE]\n> Now the system is still within the trying of the backward rule TELL-\nA-SOB-STORY, and since ATTRACTIVENESS has been determined, now it tries\nthe rest of the preconditions. The next series of questions are asked\nin order to determine whether TELL-A-SOB-STORY is a plausible approach.\nThe next required precondition, which is [WOMAN-TRAIT1 TINA EXTROVERT].\nEXTROVERT depends on FIT and JOB, so system asks about profession.\nWhat is TINA's profession: Marketing\n> Enter [JOB TINA MARKETING] and [WOMAN-TRAIT1 TINA EXTROVERT]\nsince the preconditions for being an EXTROVERT was satisfied.\n> All tried precondition for TELL-A-SOB-STORY is satisfied so\nfar, so system tries the next one, [WOMAN-TRAIT2 TINA CREATIVE], which\nonly depends on profession. Thus no additional question was asked to\nthe user.\n> The next precondition is [VENUE-LOUD TINA NO], so that TINA can\nhave a conversation with the man and tell a story that will spark\nsympathy. System back chains down the tree and checks rule VENUE-LOUD\nto see if TINA's at a LOUD place. Database has no information on\nVENUE, so system asks user.\nWhat is TINA's location(venue type): Happy-Hour\n> Enter [VENUE TINA HAPPY-HOUR] and [VENUE-LOUD TINA NO] since\nHAPPY-HOUR is classified as a venue not so loud that a conversation\ncannot take place. TELL-A-SOB-STORY also requires the MAN to be\nRESPECTABLE, which depends on whether he is well dressed. System asks\nthe user for that observed information.\nIs it the case that TINA's target man is wearing a suit: Yes\n> Enter [MAN-SUIT TINA YES] and [MAN-RESPECTABLE TINA YES]\n> Next, a WEALTHY MAN is also required, so system tries backward rule\nto ask [MAN-WEALTHY TINA YES]. Since WEALTHY trait can be inferred\nfrom being RESPECTABLE, system needs no further questions to determine\nthat MAN is WEALTHY and add [MAN-WEALTHY TINA YES] to database.\n> So far al preconditions for SOB-STORY are satisfied, the last\none to check is whether MAN is ALONE. There is no backward rule to\ntry, so it is a direct question.\nIs it the case that TINA's target man is alone: Yes\n> Enter [MAN-ALONE TINA YES] and now TELL-A-SOB-STORY has\ncompleted its chain of reasoning and [ACTION TINA TELL-A-SOB-STORY-\nTHANK-THE-GUY-FOR\n-BEING-A-GOOD-LISTENER-THEN-GRACEFULLY-ACCEPTS-A-DRINK] is entered into\nthe database.\n>> Now that SOB-STORY is successful, the system exits the rule and is\nback to trying to find more matches in the conclusion of rules for the\noriginal inquiry, [ACTION TINA VALUE]. It tries all the rules\ninferring the recommended actions and the next two in order, SILLY-ME\nand KLUTZ-1, are satisfied by all the predications already justified in\nthe database without having to ask more questions to the user. Thus\n[ACTION TINA SILLY-ME-I-HAVE-BEEN-BUSY-UNPACKING-I-HAVE-FORGOTTEN-TO-\n\nCHANGE-MY-FRANCS] and [ACTION TINA PLACE-YOUR-GLASS-ON-THE-EDGE-OF-THE-\nBAR-NEXT-TO-HIS-ELBOW-AND-WAIT-UNTIL-YOUR-DRINK-GOES-FLYING-OFF] are\nentered as well.\n>> However, when the system tries the backward rule I-AM-SUCH-A-KLUTZ-\n2, it does not know whether the MAN is DRUNK, thus it back chains to\nask the predication [MAN-DRUNK TINA YES]. The precondition to being\nDRUNK is either if the NUMBER-EMPTY-GLASSES is greater than 4 or if MAN\nis SPEAKING-LOUDLY and MAKING-LARGE-GESTURES. System first tries to\nfind out about NUMBER-EMPTY-GLASSES.\nWhat is TINA's target man's number of empty glasses in front him: 5\n> [NUMBER-EMPTY-GLASSES TINA 5] is entered and that by itself\nsatisfies [MAN-DRUNK TINA YES] without finding out about SPEAKING-\nLOUDLY and MAKING-GESTURES. Now all the preconditions for I-AM-SUCH-A-\nKLUTZ-2 have been satisfied as well, so system adds [ACTION TINA\nSLOWLY-WALK-BY-HIM-AND-LET-HIM-SPILL-YOUR-DRINK-THEN-ACCEPT-HIS-\nAPOLOGY-WITH-A-NEW-DRINK] to database.\n>> Now system continues trying the other ACTIONS. SECRET-AGENT-STEALTH-\nSIPPER is not plausible because it requires VENUE to be DARK, but back\nchaining to VENUE-DARK rule confirms that HAPPY-HOUR is NOT-DARK.\n>> Finally, the last and the default fall back ACTION, I-AM-SUCH-A-\nKLUTZ-3, is satisfied and added to the database. This ACTION requires\nthe WOMAN to be ATTRACTIVE, AVERAGE, or UNATTRACTIVE, which applies to\nevery user, thus the program will at least always give one option for\nthe user. Thus [ACTION TINA ASK-THE-BARTENDER-FOR-A-MENU-AND-KNOCK-\nOVER-YO\nUR-DRINK-WHEN-YOU-REACH-FOR-IT] is also added to the database.\n>> Now that no more inferences or chaining can be made, the system\nrespond to the original user ASK for her successful [ACTION TINA ?x],\nand outputs all the matching predications that have been inserted into\nthe database during the process.\n[ACTION TINA ASK-THE-BARTENDER-FOR-A-MENU-AND-KNOCK-OVER-YOUR-DRINK-\nWHEN-YOU-REACH-FOR-IT] 1.0\n[ACTION TINA SLOWLY-WALK-BY-HIM-AND-LET-HIM-SPILL-YOUR-DRINK-THEN-\nACCEPT-HIS-APO\nLOGY-WITH-A-NEW-DRINK] 0.8\n[ACTION TINA PLACE-YOUR-GLASS-ON-THE-EDGE-OF-THE-BAR-NEXT-TO-HIS-ELBOW-\nAND-WAIT-UNTIL-YOUR-DRINK-GOES-FLYING-OFF] 0.64000005\n[ACTION TINA SILLY-ME-I-HAVE-BEEN-BUSY-UNPACKING-I-HAVE-FORGOTTEN-TO-\nCHANGE-MY-FRANCS] 0.8\n[ACTION TINA TELL-A-SOB-STORY-THANK-THE-GUY-FOR-BEING-A-GOOD-LISTENER-\nTHEN-GRACEFULLY-ACCEPTS-A-DRINK] 0.64000005\nBy contrast to the example of use Ann given in the beginning of the paper, Tina has five\noptions! This is because Tina is attractive, bold, and creative, and the man she is\ntargeting is drunk, respective, and wealthy. Therefore she can fully take advantage of her\nown desirable and useful qualities and of the benign and vulnerable state of the target\nman, in addition to having the pretend klutzy options that are available for most women.\n\nThe resulting database from Tina's inquiry:\nTrue things\n[ATTRACTIVENESS TINA ATTRACTIVE]\n[FIT-OF-CLOTHING-INDEX TINA 3]\n[SKIRT-LENGTH-INDEX TINA 2]\n[SHOE-TYPE-INDEX TINA 3]\n[WOMAN-TRAIT3 TINA BOLD]\n[VENUE TINA HAPPY-HOUR]\n[HAIR-LENGTH-INDEX TINA 2]\n[HAIR-COLOR-BLONDE TINA NO]\n[WOMAN-TRAIT1 TINA EXTROVERT]\n[JOB TINA MARKETING]\n[AGE TINA 23]\n[MAN-DRUNK TINA YES]\n[MAN-ALONE TINA YES]\n[VENUE-DARK TINA NO]\n[AGE-INDEX TINA 3]\n[HAS-BRACES TINA NO]\n[EYE-COLOR-INDEX TINA 3]\n[SHOE-TYPE TINA HEELS]\n[VENUE-CROWDED TINA YES]\n[ACTION TINA ASK-THE-BARTENDER-FOR-A-MENU-AND-KNOCK-OVER-YOUR-DRINK-\nWHEN-YOU-REACH-FOR-IT]\n[ACTION TINA SLOWLY-WALK-BY-HIM-AND-LET-HIM-SPILL-YOUR-DRINK-THEN-\nACCEPT-HIS-APOLOGY-WITH-A-NEW-DRINK]\n[ACTION TINA PLACE-YOUR-GLASS-ON-THE-EDGE-OF-THE-BAR-NEXT-TO-HIS-ELBOW-\nAND-WAIT-UNTIL-YOUR-DRINK-GOES-FLYING-OFF]\n[ACTION TINA SILLY-ME-I-HAVE-BEEN-BUSY-UNPACKING-I-HAVE-FORGOTTEN-TO-\nCHANGE-MY-FRANCS]\n[ACTION TINA TELL-A-SOB-STORY-THANK-THE-GUY-FOR-BEING-A-GOOD-LISTENER-\nTHEN-GRACEFULLY-ACCEPTS-A-DRINK]\n[MAN-RESPECTABLE TINA YES]\n[WEARS-SKIRT TINA YES]\n[VENUE-LOUD TINA NO]\n[WEARS-GLASSES TINA NO]\n[WOMAN-TRAIT2 TINA CREATIVE]\n[MAN-WEALTHY TINA YES]\n[HEIGHT TINA 66]\n[EYE-COLOR-BLUE TINA YES]\n[BMI-INDEX TINA 3]\n[MAN-SUIT TINA YES]\n[NUMBER-EMPTY-GLASSES TINA 5]\n[BRACES-INDEX TINA 3]\n[HAIR-COLOR-INDEX TINA 2]\n[HAIR-LENGTH TINA MEDIUM]\n[FIT TINA TIGHT]\n[WEIGHT TINA 125]\n[GLASSES-INDEX TINA 3]\n[SKIRT-LENGTH TINA MEDIUM]\n[BODY-TYPE TINA IDEAL]\nFalse things\n\nOverall, our system encapsulated some basic knowledge about women's attractiveness,\npersonality traits, men's behaviors, and night scene venues and performs fairly well in\nchoosing probable recommendations of getting a free drink depending on the user's\nparticular scenario.\nThe rule-based knowledge representation served our purpose well in several ways. First\nof all, rules provided a simple but effective way of capturing the heuristic knowledge that\nenabled inferences from observable objective information to result in recommendations\nbased on stereotypical assumptions. More specifically, the rule-based backward chaining\npermitted inferences from observable physical attributes to a rating of attractiveness,\nfrom profession and fit of clothing to personality traits, from behaviors and dress to\nqualities and expected actions, and from venue types to setting characteristics. Secondly,\nthe independent nature of rules made it possible to encode each association as a separate\npiece of knowledge such that they could be easily categorized into larger units with other\nrelated rules. This advantage made it easy to divide up the implementation efforts and to\norganize our knowledge into a coherent tree structure composed of categories. Thirdly,\nas we learned in class and experienced during the design and implementation of our\nprogram, rules definitely is a representation that allows easy expansion and modification\nof the knowledge base.\nIn terms of implementation, our chosen tool, Joshua, although primitive, provided\nsufficient functionalities to encode the knowledge and to aid us in debugging. The syntax\nof Joshua code, upon viewing, is easy to understand and resembles seduced. Given the\ntype of associations we wanted to capture, the IF-THEN structure proved to be an\nintuitive way of implementation. The \"tracing all\" and \"show database\" options were\nalso very helpful in deciphering what the inference engine was doing and in ensuring the\ncorrect inferences were being made.\nHowever, as all programs, our system had its limitations. Although our system captured\nof the basic stereotypical assumptions as knowledge to make a plausible suggestion to the\nuser, we realized that that reasoning about human personalities, behaviors, and judgments\nis an extremely difficult problem. Although there are definitely certain rules of thumb\nthat are commonly accepted, such as that women that wear glasses are not as attractive, I\npersonally know men that have an appreciation for the power woman or nerdy librarian\ntype looks. This is just one example to illustrate the endless possibilities that the program\nmay encounter depending on the woman, man, and setting. One way we considered to\nmake the knowledge more precise was to place different weights on different attributes.\nFor example, in most cases, a woman's attractiveness to a man would depend more on her\nbody type than on her eye color. However, it was hard to encode corresponding weights\nto the attributes in a natural way with the rule representation. We solved this problem by\ntaking an alternative approach: for each physical attribute used to infer attractiveness, an\nindex indicating an attractiveness level was assigned, and the final attractiveness\nassignment was made based on a composite score. This approach worked well for our\nproblem, however, it was somewhat awkward and roundabout.\n6. Reflections\n\nAnother issue we faced in both the design and testing phases was the uncertainty of the\naccuracy of the outputted results. Whereas a medical diagnosis program such as\nMYCIN, which if given symptoms of a disease from a textbook, will give a diagnosis\nthat one can determine to be the \"right\" end result given the inputs, our free drinks\nadvisor, face immense uncertainty as two women with the exact same inputs may not\nbecome successful with the same approach. For example, two women might both try to\nsteal other people's drinks with a long straw, but it may happen that one woman succeeds\nand the woman with the shorter arm fails with that approach. Our solution to the problem\nwas to output all of the plausible recommendations in order of difficulty to pull off. This\nway, if a woman knows that she has short arms, she might opt to use an approach other\nthan the stealing drink one.\nWhile working on this project, I am now enlightened as to why the topic knowledge\nbased systems is such an interesting area of study with much room for further exploration\nalthough such substantial work has already been done. I have personally experienced the\ndifficulty of capturing expert knowledge and trying to emulate the associations of real\nworld scenarios.\n\n7. Appendix\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: woman's physical attractiveness ;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: age index\n(defrule age-index-3 (:backward :certainty 1.0)\nif [and [age ?who ?x]\n(<= ?x 30)]\nthen [age-index ?who 3])\n(defrule age-index-2 (:backward :certainty 1.0)\nif [and [age ?who ?x]\n(> ?x 30)\n(<= ?x 40)]\nthen [age-index ?who 2])\n(defrule age-index-1 (:backward :certainty 1.0)\nif [and [age ?who ?x]\n(> ?x 40)]\nthen [age-index ?who 1])\n;;; RULES ABOUT: body type\n(defrule body-type-anorexic (:backward :certainty 1.0)\nif [and [height ?who ?x]\n[weight ?who ?y]\n(< (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 17)]\nthen [body-type ?who anorexic])\n(defrule body-type-underweight (:backward :certainty 1.0)\nif [and [height ?who ?x]\n[weight ?who ?y]\n(>= (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 17)\n(< (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 19)]\nthen [body-type ?who underweight])\n(defrule body-type-ideal (:backward :certainty 1.0)\nif [and [height ?who ?x]\n[weight ?who ?y]\n(>= (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 19)\n(< (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 26)]\nthen [body-type ?who ideal])\n(defrule body-type-overweight (:backward :certainty 1.0)\nif [and [height ?who ?x]\n[weight ?who ?y]\n(>= (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 26)\n(< (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 28)]\nthen [body-type ?who underweight])\n(defrule body-type-obese (:backward :certainty 1.0)\nif [and [height ?who ?x]\n[weight ?who ?y]\n\n(>= (/ (* ?y 0.4536) (* (* ?x 0.0254) (* ?x 0.0254))) 28)]\nthen [body-type ?who obese])\n;;; RULES ABOUT: BMI index\n(defrule bmi-index-3 (:backward :certainty 1.0)\nif [body-type ?who ideal]\nthen [bmi-index ?who 3])\n(defrule bmi-index-2 (:backward :certainty 1.0)\nif [or [body-type ?who underweight]\n[body-type ?who overweight]]\nthen [bmi-index ?who 2])\n(defrule bmi-index-1 (:backward :certainty 1.0)\nif [or [body-type ?who anorexic]\n[body-type ?who obese]]\nthen [bmi-index ?who 1])\n;;; RULES ABOUT: wearing glasses\n(defrule glasses-index-3 (:backward :certainty 1.0)\nif [wears-glasses ?who no]\nthen [glasses-index ?who 3])\n(defrule glasses-index-1 (:backward :certainty 1.0)\nif [wears-glasses ?who yes]\nthen [glasses-index ?who 1])\n;;; RULES ABOUT: has braces\n(defrule braces-index-3 (:backward :certainty 1.0)\nif [has-braces ?who no]\nthen [braces-index ?who 3])\n(defrule braces-index-1 (:backward :certainty 1.0)\nif [has-braces ?who yes]\nthen [braces-index ?who 1])\n;;; RULES ABOUT: eye color\n(defrule eye-color-index-3 (:backward :certainty 1.0)\nif [eye-color-blue ?who yes]\nthen [eye-color-index ?who 3])\n(defrule eye-color-index-2 (:backward :certainty 1.0)\nif [eye-color-blue ?who no]\nthen [eye-color-index ?who 2])\n;;; RULES ABOUT: hair color\n(defrule hair-color-index-3 (:backward :certainty 1.0)\nif [hair-color-blonde ?who yes]\nthen [hair-color-index ?who 3])\n(defrule hair-color-index-2 (:backward :certainty 1.0)\nif [hair-color-blonde ?who no]\n\nthen [hair-color-index ?who 2])\n;;; RULES ABOUT: hair length\n(defrule hair-length-index-3 (:backward :certainty 1.0)\nif [hair-length ?who long]\nthen [hair-length-index ?who 3])\n(defrule hair-length-index-2 (:backward :certainty 1.0)\nif [hair-length ?who medium]\nthen [hair-length-index ?who 2])\n(defrule hair-length-index-1 (:backward :certainty 1.0)\nif [hair-length ?who short]\nthen [hair-length-index ?who 1])\n;;; RULES ABOUT: shoe type\n(defrule shoe-type-index-3 (:backward :certainty 1.0)\nif [shoe-type ?who heels]\nthen [shoe-type-index ?who 3])\n(defrule shoe-type-index-2 (:backward :certainty 1.0)\nif [shoe-type ?who flats]\nthen [shoe-type-index ?who 2])\n(defrule shoe-type-index-1 (:backward :certainty 1.0)\nif [shoe-type ?who sneakers]\nthen [shoe-type-index ?who 1])\n;;; RULES ABOUT: fit of clothing\n(defrule fit-of-clothing-index-3 (:backward :certainty 1.0)\nif [and [bmi-index ?who 3]\n[or [fit ?who tight]\n[fit ?who fitted]]]\nthen [fit-of-clothing-index ?who 3])\n(defrule fit-of-clothing-index-ideal-2 (:backward :certainty 1.0)\nif [and [bmi-index ?who 3]\n[fit ?who loose]]\nthen [fit-of-clothing-index ?who 2])\n(defrule fit-of-clothing-index-2 (:backward :certainty 1.0)\nif [and [bmi-index ?who ?x]\n(< ?x 3)\n[fit ?who fitted]]\nthen [fit-of-clothing-index ?who 2])\n(defrule fit-of-clothing-index-1 (:backward :certainty 1.0)\nif [and [bmi-index ?who ?x]\n(< ?x 3)\n[fit ?who loose]]\nthen [fit-of-clothing-index ?who 1])\n(defrule fit-of-clothing-index-0 (:backward :certainty 1.0)\nif [and [bmi-index ?who ?x]\n\n(< ?x 3)\n[fit ?who tight]]\nthen [fit-of-clothing-index ?who 0])\n;;; RULES ABOUT: skirt length\n(defrule skirt-length-index-0 (:backward :certainty 1.0)\nif [wears-skirt ?who no]\nthen [skirt-length-index ?who 0])\n(defrule skirt-length-index-3 (:backward :certainty 1.0)\nif [and [wears-skirt ?who yes]\n[skirt-length ?who short]]\nthen [skirt-length-index ?who 3])\n(defrule skirt-length-index-2 (:backward :certainty 1.0)\nif [and [wears-skirt ?who yes]\n[skirt-length ?who medium]]\nthen [skirt-length-index ?who 2])\n(defrule skirt-length-index-1 (:backward :certainty 1.0)\nif [and [wears-skirt ?who yes]\n[skirt-length ?who long]]\nthen [skirt-length-index ?who 1])\n;;; RULES ABOUT: woman's physical attractiveness\n(defrule woman-attractive (:backward :certainty 1.0)\nif [and [age-index ?who ?a]\n[bmi-index ?who ?b]\n[glasses-index ?who ?c]\n[braces-index ?who ?d]\n[eye-color-index ?who ?e]\n[hair-color-index ?who ?f]\n[hair-length-index ?who ?g]\n[shoe-type-index ?who ?h]\n[fit-of-clothing-index ?who ?i]\n[skirt-length-index ?who ?j]\n(> (+ ?a ?b ?c ?d ?e ?f ?g ?h ?i ?j) 21)]\nthen [attractiveness ?who attractive])\n(defrule woman-average (:backward :certainty 1.0)\nif [and [age-index ?who ?a]\n[bmi-index ?who ?b]\n[glasses-index ?who ?c]\n[braces-index ?who ?d]\n[eye-color-index ?who ?e]\n[hair-color-index ?who ?f]\n[hair-length-index ?who ?g]\n[shoe-type-index ?who ?h]\n[fit-of-clothing-index ?who ?i]\n[skirt-length-index ?who ?j]\n(<= (+ ?a ?b ?c ?d ?e ?f ?g ?h ?i ?j) 21)\n(> (+ ?a ?b ?c ?d ?e ?f ?g ?h ?i ?j) 15)]\nthen [attractiveness ?who average])\n(defrule woman-unattractive (:backward :certainty 1.0)\n\nif [and [age-index ?who ?a]\n[bmi-index ?who ?b]\n[glasses-index ?who ?c]\n[braces-index ?who ?d]\n[eye-color-index ?who ?e]\n[hair-color-index ?who ?f]\n[hair-length-index ?who ?g]\n[shoe-type-index ?who ?h]\n[fit-of-clothing-index ?who ?i]\n[skirt-length-index ?who ?j]\n(<= (+ ?a ?b ?c ?d ?e ?f ?g ?h ?i ?j) 15)]\nthen [attractiveness ?who unattractive])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: woman's personality traits ;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: extrovert or introvert\n(defrule woman-extrovert (:backward :certainty 1.0 :importance 70)\nif [or [fit ?who tight]\n[job ?who adminstrative]\n[job ?who marketing]\n[job ?who education]\n[job ?who design]\n[job ?who business]]\nthen [woman-trait1 ?who extrovert])\n(defrule woman-introvert (:backward :certainty 0.8 :importance 69)\nif [and [or [fit ?who fitted] [fit ?who loose]]\n[or [job ?who sciences] [job ?who technology]]]\nthen [woman-trait1 ?who introvert])\n;;; RULES ABOUT: creative or straightforward\n(defrule woman-creative (:backward :certainty 0.8 :importance 68)\nif [or [job ?who design]\n[job ?who marketing]]\nthen [woman-trait2 ?who creative])\n(defrule woman-straightforward (:backward :certainty 0.9 :importance\n67)\nif [or [job ?who adminstrative]\n[job ?who sciences]\n[job ?who education]\n[job ?who technology]\n[job ?who business]]\nthen [woman-trait2 ?who straightforward])\n;;; RULES ABOUT: reserved or bold\n(defrule woman-reserved (:backward :certainty 0.8 :importance 66)\nif [or [or [fit ?who fitted] [fit ?who loose]]\n[job ?who administrative]\n[job ?who education]\n[job ?who sciences]\n[job ?who technology]]\n\nthen [woman-trait3 ?who reserved])\n(defrule woman-bold (:backward :certainty 0.9 :importance 65)\nif [or [fit ?who tight]\n[job ?who business]\n[job ?who design]\n[job ?who marketing]]\nthen [woman-trait3 ?who bold])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: venue characteristics ;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: whether venue's crowded\n(defrule venue-crowded (:backward :certainty 0.8)\nif\n[or [venue ?who sports-bar]\n[venue ?who club]\n[venue ?who happy-hour]]\nthen [venue-crowded ?who yes])\n(defrule venue-not-crowded (:backward :certainty 0.8)\nif [venue ?who posh-bar]\nthen [venue-crowded ?who no])\n;;; RULES ABOUT: whether venue's dark\n(defrule venue-dark (:backward :certainty 0.8)\nif\n[or [venue ?who posh-bar]\n[venue ?who sports-bar]\n[venue ?who club]]\nthen [venue-dark ?who yes])\n(defrule venue-not-dark (:backward :certainty 0.8)\nif [venue ?who happy-hour]\nthen [venue-dark ?who no])\n;;; RULES ABOUT: whether venue's loud\n(defrule venue-loud (:backward :certainty 0.8)\nif [venue ?who club]]\nthen [venue-loud ?who yes])\n(defrule venue-not-loud (:backward :certainty 0.8)\nif\n[or [venue ?who posh-bar]\n[venue ?who happy-hour]\n[venue ?who sports-bar]]\nthen [venue-loud ?who no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: man's behaviors and traits ;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: whether man's drunk\n(defrule man-drunk (:backward :certainty 0.8)\nif [or [and [number-empty-glasses ?who ?x]\n\n(> ?x 4)]\n[and [number-empty-glasses ?who ?x]\n(<= ?x 4)\n[speaking-loudly ?who yes]\n[making-large-gestures ?who yes]]]\nthen [man-drunk ?who yes])\n(defrule man-not-drunk (:backward :certainty 0.9)\nif [not [known [man-drunk ?who ?]]]\nthen [man-drunk ?who no])\n;;; RULES ABOUT: whether man's respectable\n(defrule man-respectable (:backward :certainty 0.8 :importance 60)\nif [or [man-suit ?who yes]\n[and [man-suit ?who no] [man-nice-shirt ?who yes]]]\nthen [man-respectable ?who yes])\n(defrule man-not-respectable (:backward :certainty 0.8 :importance 50)\nif [and [man-suit ?who no]\n[man-nice-shirt ?who no]]\nthen [man-respectable ?who no])\n;;; RULES ABOUT: whether man's wealthy\n(defrule man-wealthy (:backward :certainty 0.8)\nif [or [man-respectable ?who yes]\n[and [man-respectable ?who no] [man-in-designer-clothes ?who\nyes]]]\nthen [man-wealthy ?who yes])\n(defrule man-not-wealthy (:backward :certainty 0.8)\nif [and [man-respectable ?who no]\n[man-in-designer-clothes ?who no]]\nthen [man-wealthy ?who no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; RULES ABOUT: suggested course of action ;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule tell-a-sob-story (:backward :certainty 1.0 :importance 99)\nif [and [attractiveness ?who attractive]\n[woman-trait1 ?who extrovert]\n[woman-trait2 ?who creative]\n[venue-loud ?who no]\n[man-respectable ?who yes]\n[man-wealthy ?who yes]\n[man-alone ?who yes]]\nthen [action ?who tell-a-sob-story-thank-the-guy-for-being-a-good-\nlistener-then-gracefully-accepts-a-drink])\n(defrule silly-me (:backward :certainty 1.0 :importance 98)\nif [and [or [attractiveness ?who attractive]\n[attractiveness ?who average]]\n[woman-trait1 ?who extrovert]\n[woman-trait2 ?who creative]\n[venue-loud ?who no]]\n\nthen [action ?who silly-me-i-have-been-busy-unpacking-i-have-\nforgotten-to-change-my-francs])\n(defrule i-am-such-a-klutz-1 (:backward :certainty 1.0 :importance 97)\nif [and [venue-crowded ?who yes]\n[man-respectable ?who yes]\n[man-wealthy ?who yes]\n[man-alone ?who yes]]\nthen [action ?who place-your-glass-on-the-edge-of-the-bar-next-to-\nhis-elbow-and-wait-until-your-drink-goes-flying-off])\n(defrule i-am-such-a-klutz-2 (:backward :certainty 1.0 :importance 96)\nif [and [venue-crowded ?who yes]\n[man-alone ?who yes]\n[man-drunk ?who yes]]\nthen [action ?who slowly-walk-by-him-and-let-him-spill-your-drink-\nthen-accept-his-apology-with-a-new-drink])\n(defrule secret-agent-stealth-sipper (:backward :certainty 1.0\n:importance 95)\nif [and [woman-trait3 ?who bold]\n[venue-dark ?who yes]\n[venue-crowded ?who yes]]\nthen [action ?who grab-a-long-straw-and-use-it-to-steal-peoples-\ndrinks])\n(defrule i-am-such-a-klutz-3 (:backward :certainty 1.0 :importance 94)\nif [or [attractiveness ?who attractive]\n[attractiveness ?who average]\n[attractiveness ?who unattractive]]\nthen [action ?who ask-the-bartender-for-a-menu-and-knock-over-your-\ndrink-when-you-reach-for-it])"
    },
    {
      "category": "Resource",
      "title": "farrokh_fin_proj.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/f9b791b1c6ebac87745b09419e70ad22_farrokh_fin_proj.pdf",
      "content": "Massachusetts Institute of Technology\nPoxpert+, the intelligent poker player\nv0.91\nMeshkat Farrokhzadi\n6.871 Final Project\n12-May-2005\n\nJoker's the name, Poker's the game.\nChris de Burgh - Spanish train\nIntroduction\nAs though it is a sign of our childhoods, all of us still have a tendency toward playing games.\nSome of us however, take another step further and become experts in one or more games. The\nmost fascinating games among all are probably the mind games. Mixed with logic, psychology\nand science many of these games require tremendous dedication, concentration and studying to\nmaster. Chess and bridge are two examples of these kind of games. On the other frontier of\ngames, there's gambling. A huge source of income, a big industry and a luxurious entertainment\nfor many, gambling has been around since the oldest of times.\nOn the borderline of these two categories of games, there's Poker; partly gambling, partly\nmathematics and partly psychology, Poker is about using the brain to guide the luck to the gates\nof fortune. In this paper, I tried to analyze the process of thought of a skillful, professional\npoker player and verbalize and capture the underlying rules in an expert system, the Poxpert.\nPoxpert is an effort to mimic, capture and perhaps improve, if possible at all, the thinking\nprocess of a professional player.\nFirst I will talk about the task and what it is that the program does, then I would briefly talk\nabout how I gathered the \"knowledge\" and how I deducted the rules, and finally I will discuss\nthe underlying structure of the program. There are some examples of how the program works, a\ngraph containing the rules and a discussion about the shortcomings and possible areas for\nfuture work.\nThe task\nPoxpert (short for poker expert) will act in one round of betting of the Texas Hold'em All\nflavor of Poker. Texas Hold'em is the most popular poker game, mainly because a player has to\nhave some set of skills to be successful and good players develop variety of spectacular and\nsometimes astonishing strategies to outplay their opponents.\nThe game is played with a typical 52 card deck. Texas Hold'em all is played with as little as two\nplayers (which is called heads up) and the maximum number of players is usually eleven.\nPoxpert is designed to play in a five player game, but by using the general table characteristics\n(amount to call, etc...) it can play in different setups without specifying number of players. The\nhand rankings are similar to the other poker games. The typical Hold'em game has five different\nstages.\nPre-flop\nEach player is dealt two cards face down. The first betting round begins with the first player to\neither putting in enough money to \"Call\" the blind bet, or putting in more to \"raise\" or folding\nhis hand. The betting goes around the table in order until it reaches the first player. The three\nmain options based on the position are: calling (or checking if the amount to call is zero),\nraising (or betting if there has been no bets before) or folding which is throwing away the cards\nand not participating in that round of play, however the player loses all the bets that she has\nmade in that round (all the bets that are in the \"pot\").\n\nThe dealer which identifies the position is a actually a button that says \"dealer\" and is passed\naround the table after each hand. It signifies where the dealing is done from and which player\nhas to act.\nFlop\nAfter the first round, three cards are dealt and turned face up in the middle of the table. These\nare community cards used by all the players. Then another betting round starts.\nThe Turn\nWhen the betting is completed, the dealer turns a fourth card face up in the middle of the table.\nThe third round of betting takes place. The dealer turns over another card making four\ncommunity cards. This fourth card is called \"the turn\" or sometimes \"fourth street\". Betting\noccurs again.\nThe River\nThe dealer turns over the fifth and last community card. This is called \"the river\" or \"fifth\nstreet\". Betting begins for the last time.\nShowdown\nTo determine the winner, the players may use any combination of their two hole cards and the\nfive cards on the \"Board\" (Table) to form the highest five-card hand. The winning hand is\ndetermined based on the usual rankings for Poker games with straight flush and four of a kind\nbeing the best hands.\nPoxpert will take part in the game and it can play at any different stage of the game. However, it\ncan not play continuously and does not use a playing history for making its decision. Although\nthis is a major limitation of the program, for the purpose of this project, it helped in focusing\non the rules, gaining insight about the representation choices and paying enough attention to\nother important parts like the hand scoring function.\nGathering the knowledge\nI used several sources for acquiring the information. First, there was my own personal\nexperience as an amateur poker player. My experience comes from playing in tournaments,\nreading books and watching professional players in action. When working on this project\nhowever, I tried to refine my previous findings and add to them, so I went back to the books\nand I tried to watch the important events like \"World Series of Poker\" which is held annually in\nVegas with over five million dollars worth of winnings. Interestingly enough, year after year, the\nsame faces appear at the final tables of WSOP, the same professional players keep winning large\nsums of money. Well, could there be any better indication that Poker is in fact a game of skills\nand not only luck?\nI also used the web to search for previous works that people have done. I was unable to access\nanything worthy that could help in building the rules or implementing the hand score function.\nMost of the online resources are not open source, even the University of Alberta that runs a\ngame group had commercialized its poker program. Nevertheless, I was able to find some\n\ndiscussions about the hand rankings, some statistics about the winning hands and some\nprevious statistical work in the field.\nThe basic and significant part of the job was to focus on deducting the rules. There are several\ndifferent factors playing at the same time, and it's not easy to divide the actions between the\nvariable combinational space. Also, rule deduction from the ambiguous book descriptions or\nplayer recommendations is not trivial. Many professional players when faced with the questions\nabout how they decide to act would say that they just act \"intuitively\" and they just know what\nto do at any given time. A common expression is that they have a good \"read\" on others, but\nnobody knows how exactly this works. So one of the challenges was to extract concrete and\nuseful facts out of the stories and legends (every poker player wants to tell the story of his worst\nloss and his best victory).\nAfter writing down the basics, I had to choose the variables and find the connections between\nthem. This task appeared to be one of the most time consuming and challenging issues I faced\nin this project. The main difficulty appeared when I was trying to implement what I had in mine\nin Joshua. Having no prior experience with this programming language I spent so many hours\ntrying to update the value of a variable and changing my representations. At last I learnt that not\nevery tool is suitable for solving every problem. Joshua is most capable of dealing with\nsituations in which facts are established once and no changes happen thereafter. It provides the\nuser with a decent snapshot of any given situation. In poker however, one usually needs to\ncapture different variable states at different points of time. Updating and replacing variables\nproved to be almost impossible in Joshua. This major problem prevented me from\nimplementing some of the functionalities that I had in mind and it also affected the program\ninterface, which may ask redundant questions at times. The challenge was to not let this\nshortcomings affect the intelligence of the program. Although the interface is not as fancy as it\ncould, I'm willing to claim with that the performance is almost as good as other\nimplementations that I had in mind.\nThe program solving paradigm\nI used Joshua and forward/backward chaining rule-based system to implement this program.\nThe advantage of this method is in its power of firing different rules and coming up with\nrelativistic answers. Having a certainty factor helped a lot in defining the problem, so for\nexample in some cases the program can produce different actions and various rules may trigger\nidentical or contrasting actions, but the certainty factor differentiates between the correct and\nincorrect decisions to a great extent.\nThe rule-based system seems somehow like a natural way of solving the problem of modeling\nthe expert's thought process. Poker professional players usually look at different factors to\nmake their decisions, for example if they have a lot of chips and their opponent is short on\nmoney (short-stacked) they will try and push their opponent to make aggressive calls. Although\nthe hand score is the primary criterion for making the decisions, but as just shown, expert\nplayers' actions are not solely based on their hand strength and the possibility of winning the\npot. Good players never rely on good hands as the only source for winning the chips. Bluffing\nis a well established way for winning the pots by scaring the other players and pretending to\nhave a very strong hand.\n\nHowever, there are certain shortcomings in dealing with the more abstract concepts in a rule-\nbased system. There was hardly anyway in which I could model a player and change that model\nlater. The rule based system asks for the truth and false claims. Once the facts are in the\ndatabase, one can hardly alter them. This was a major limitation of this model, because in the\nreal world, assertions change frequently; a player changes her strategy every now and then and\nyour confidence goes up and down; the less confident you become, the less likely it is that you\nbluff. In Joshua, changing a variable in the database affects all the rules and facts that were\ndependent on that fact. This rule-based system lacked the notion of time, something essential to\nthe game of poker, in which a good player puts the facts on top of each other to make a model\nand modifies the constituent assertions when they don't fit into the model anymore.\nOne of the main parts of the knowledge base is the function that calculates player's hand score.\nBasically, this function gives the probability of winning the pot, conditioned on the hole cards\nand the cards on the board. Having so many difficulties in Joshua, I wrote this function is Java\nwhich can be used to calculate the hand's strength which is an input for the main program. I\ncould've probably implemented my own rule-based system in another language with fewer\nlimitations, but I have to admit that struggling with Joshua taught me a lot; especially because I\nhad to think about how to choose my variables and represent the knowledge within the\nlimitations of the environment.\nThe case-based reasoning could also be used as one of the methods for solving this problem.\nHowever, the number of cases that one has to deal with in order to have a decent action in a\ncard game like Poker is almost infinite. In determining the hand's score and for the two pocket\ncards, I used the statistical results from winning bets in over millions of games. Capturing these\nmany cases in a system could be very time consuming and costly in the processing time.\nHowever, the cased-based reasoning could be adequately used for improving the program's\nperformance. The program can use its failure cases for \"learning\" and not repeating its\nmistakes. Also, they could be used as a source of feedback to the programmer for refining the\nrules.\nAnother representation that I considered was the frames. Frames are fancy, they provide as\nclose a model as possible for showing how we think and they are as fuzzy and as vague as every\nhuman decision making process could be. The problem with the frames is not their\nrepresentation power, but it's the fact that there is no practical way of implementing a system\nwith the frames representation. Although interesting; the lack of tools and previous experience\nthat I faced with made frames one of the issues for further study and considerations. One of my\nideas was to use frames for representing the players and strategies, rule based system for\ninference and reasoning and cased-based reasoning for automated testing and refinements.\nWhether this idea is practical or not could be a subject for another discussion.\nWhat does the program know?\nPoxpert knows how good every hand is. It uses the \"handScore\" function to find out the\nprobability of winning based on its hole cards (faced-down) and the board cards. It knows the\nbasics of the games, including the winning hands, the possible actions, the pot size and the\n\nminimum amount to call. Poxpert asks for a variety of information and uses those inputs to\ndeduct new facts.\nThe program tries to adapt a strategy based on its hand score, the amount of bets, the amount\nof money on the table (pot size), its chip count and some other factors. Once it chose a strategy\nit searches through the possible actions with relative certainties and picks the action with yields\nthe highest result. If it chooses to raise, it also decides on the amount of raise. For example if\nthe betting is low and Poxpert has an average or poor hand and a good position on the table\n(being the last person to call), it usually decides to bluff by raising the pot to a considerable\namount (5 times the big blinds). In real world, this strategy usually works, at Pre-flop stage this\nmethod typically leads to a strategy commonly known as \"stealing the blinds\". The other players\nwho have worse positions always have to act before you and so the program uses its position\nedge to intimidate the others.\nPoxpert knows about these little advantages, namely chip advantage, position and hand\nadvantage. It also knows about the betting patterns and their relevance with the table stage, for\ninstance if the betting amounts are relatively high and the dealer has just dealt the river card,\nthere's highly unlikely that anybody would be bluffing and more than likely someone has a really\ngood hand. The program also knows about what is known as \"draws\" and waiting for a draw\nand it uses this piece of knowledge in both the \"handScore\" function and the main body of\ncode. A draw happens when a player has four cards belonging to a suit and is waiting for the\nfifth card to hit and make a \"flush\". A player in this situation would hardly get out of the pot\nunless after the \"turn\" or fourth street.\nHow does it work, what's under the hood\nThere are three possible actions at any given time, folding, raising or calling. Other actions like\nchecking can be included in calling with zero amount of money and betting is raising as the first\nplayer. So at the very top level the Poxpert selects at least one of these actions together with a\ncertainty factor corresponding to that action. Several rules may result in firing the \"fold\" rule\nfor example in which the certainty of \"folding\" goes up.\nThe rules may even result in different actions which actually resembles the challenges that every\npoker player has to face. Sometimes there is no single right or wrong action in the game and the\nplayer has to be random and make a decision. The program in these cases presents the player\nwith different options and their corresponding certainties. Usually there is enough discrepancy\nbetween the certainties to allow the player pick the best choice easily. Therefore, close values (in\nrare cases) are not an indication of program's bad behavior; they in fact reflect the real nature of\nthe game.\nSome rules, for example many folding rules use the hand strength as the main criterion for\ndecision making. Although the final decision is usually made based on a combination of\ndifferent variables, for example let's look at rule action-fold1:\n(defrule action-fold1 (:backward :certainty 0.9 :importance 250)\nif [and [hand-score poxpert ?score]\n(> ?score 0.1) (< ?score 0.3)\n[seat poxpert ?seat] (> ?seat 1) (< ?seat 5)]\nthen [action poxpert fold])\n\nIn English, this rule says that if the hand score is between .1 and .3 (relatively weak hand) and\nthe program's position is 2, 3 or 4 (bad position), then the program is supposed to fold with a\n0.9 certainty. This is a classic situation in which calling would more than likely result in more\nlosses because bad position means that the players after Poxpert may raise the pot and then the\nprogram has to fold which results in losing the original bet.\nLet's explain another rule, action-raise1:\n(defrule action-raise1 (:backward :certainty .90 :importance 225)\nif [and [hand-score poxpert ?score](> ?score .7) (< ?score .9)\n[amount-to-call poxpert ?coc] [big-blind table ?bb]\n(> ?coc (* 2 ?bb))]\nthen [action poxpert raise])\nAgain, this rule says that if the hand score is between .7 and .9 (relatively strong hand) and the\namount to call is more than two times the amount of big blinds then the program should raise.\nThe reason behind this rule is that if the amount to call is more than two big blinds, someone\nhas already raised the pot and therefore the probability of everybody else folding and decreasing\npotential winnings is relatively small (they're more than likely to call if they have raised before).\nSo raising here is a safe action.\nAs the final example let's look at cost-of-calling2:\n(defrule cost-of-calling2 (:backward :certainty 1.0 :importance 170)\nif [and [amount-to-call poxpert ?cost] [pot-size table ?pot]\n[big-blind table ?bb] [chip-count poxpert ?money]\n(>= ?cost (max (* .5 ?pot) (* 5 ?bb) (* .1 ?money))\n(<= ?cost (max (* 2 ?pot) (* 10 ?bb) (* .3 ?money))]\nthen [cost-of-calling poxpert moderate])\nThis rule is used to determine whether the cost of calling is high, average or low for the\nprogram. The cost of calling depends on four different variables, the amount to call, the pot\nsize (total bets already on the table), the program's fortune (chip count) and the amount of big\nblinds (minimum bets). This rule takes the maximum of the last three factors scaled by different\namounts and compares them to find the amount of betting. The variables and scaling factors\nare deducted from rules and experience, for example any bet more than ten percent of\nprogram's total chip count is always considered an expensive call.\nWalking through an example\nTo start the trace one has to use the following command:\n(ask [action poxpert ?x] #'print-answer-with-certainty)\nThe program tries the first rule, action-fold0. It is always wise to check for folding situations\nfirst since it's almost always safer to fold and lose nothing than to take the risks with a bad hand\nand lose a lot. The rule needs the hand score to decide how good the hand is, now suppose we\nare dealt an average hand, King of clubs and Jack of spades. Now we use the handScore\nfunction to find the score. For the hole cards without any cards on the board, I used a statistical\nstudy of the winning hands that is well established among the poker players and is available\n\nonline [1][2]. For the other stages when there are faced up cards on the table, the program\ncalculates the possible hands and the best possibilities for winning the pot based on available\ncombinations of the different hands and produces an output. Here's a snap shot of the program\ninput and outputs.\nFigure 1 - handScore function\nSo the handScore is 0.43, let's get back to the main program.\nWhat is Poxpert's hand score? .43\nWhat is the current number of cards on the flop?\nThis is a moderate hand with probability of winning less than half, the program exits from the\nfirst three folding rules because the hand score is not too low, the fourth folding rule however\nchecks to see if the amount of calling is too expensive and the hand score is not that great then\nthe program wants to fold. Now the program wants to know how much is the calling cost, this\nfact comes from the table positioning and the player actions who are sitting before the program.\nThe program therefore first checks to see if Poxpert is the first player to call, this happens if\nthis a pre-flop table and Poxpert is at position three or if the table is at any other stage and the\nPoxpert is at position two (corresponding rules are \"how-much-to-call1 and how-much-to-\ncall2\"). Let's assume that the program is at position four and we're at pre-flop stage, the big\nblinds are 50 dollars, Poxpert has 2500 dollars, the player before Poxpert has just raised to 250\ndollars and the total pot size is 400 dollars. These facts all come from a hand of Poker and are\nusual inputs to the program and the factors that every player considers in trying to make a call.\nWhat is the current number of cards on the flop? 0\nWhat is Poxpert's position? 4\nWhat is the Poxpert's cost of calling? 250\nWhat is the table's pot size? 400\nWhat is table's big blind? 50\nWhat is Poxpert's chip count? 2500\n\nThe program now realizes that since the cost of calling is relatively cheap (from \"cost-of-\ncalling3\") because the amount of bet is not bigger than five big blinds or ten percent of\nPoxpert's chips. The folding rule therefore does not suit this occasion since the cost of calling is\nnot expensive. The program then checks through the calling rules where it has to pick a strategy\n(obviously, there was no need to pick a strategy if the program was folding) and based on it's\nhand score, table position and calling-cost it picks the \"normal-play\" strategy. This actually\nmakes sense since the Poxpert has an average hand and there are still two more cards to come,\nfolding with an average hand and this pot size is not the right thing to do and raising is just out\nof question since another player might re-raise. The program checks all the other rules and\nsucceeds in firing action-call1. The final result is very reasonable, a snapshot of the tracing can\nbe seen in figure 2.\n[ACTION POXPERT CALL] 0.9525\nFigure 2 - Snapshot of the tracing through the example\n\nThe scope of the program\nPoxpert participates in one round of betting of the Texas Hold'em version of poker. It doesn't\nkeep a history of previous betting and other players' actions. Therefore all the inferences that it\nmakes are based on the current hand only which is a limitation of the current version of the\nprogram.\nBecause of the nature of the rule-based system, the program would reproduce the same results\nfor the same setups. Although some random and concurrent actions may be suggested, in\ngeneral case the program would suggest the same actions (and presumably the user would also\nselect the action with the highest score). A consequence of this is that any smart player or\nanother poker bot that saves the history of the games after a number of rounds (about a\nthousand rounds at least to exhaust all the rules and observe the repetitions and show downs)\nmay be able to identify Poxpert strategies and decision making pattern. That person then could\nadapt her strategies accordingly to beat the program.\nThe program is designed to work best playing against five other opponents but can also be used\nin different settings. The rules have to change slightly if the number of players increases to ten.\nThe program cannot make profiles for its opponents and therefore tries to make an estimate of\nthe table strength by looking at its position, the amount of bets, raises, table stage and other\nfactors which turns out to be just as efficient in this setting.\nWhat went well, what went badly\nThe rule adaptation turned out to be efficient and the performance of the program is\nsatisfactory most of the times. I was very excited to see the interaction of different rules that\ncould result in proposing multiple actions with different certainties since I was struggling to\ninclude the notion of randomness in Poxpert. Figure 3 demonstrates one of the occasions that\nprogram makes multiple suggestions and it correctly points out that folding is the most suitable\naction.\n\nFigure 3 - sample interaction with the program, producing multiple results with different certainties\nThe experience of working with Joshua was both frustrating and rewarding. The language is\nvery limited in its capabilities to reflect problems with a time varying nature, but it's very\neffective and informative in dealing with the typical decision making problems. I had to change\nthe way my rules worked several times, I changed the variables and the way questions were\nposed to the user. First I aimed to have a much more user-friendly system in which user only\nhad to enter the amount of bets and positions and the program would extract all the other\ninformation from this set of data. But working with database variables and using Lisp variables\nin body of Joshua statements without messing the previous statements proved to be a very hard\nif not impossible task. Therefore I had to change the system to ask the questions more directly.\nI also implemented the handScore function in Java due to the aforementioned limitations of\nJoshua.\nIt's always inspiring and rewarding to see the whole system working and producing reasonable\nresults which takes away the memory of sleepless nights wrestling with Joshua and browsing\nthrough manual pages. The challenge taught me that the first step in modeling every abstract\nconcept is probably the most important, and that is selecting the presentation.\nThe rules have comments that describe why they act in a certain way. Tracing option can be\nchosen to walk through an example since the rules are complex and one example requires going\nthrough many pages of explanation.\n\nAcknowledgments\nSpecial thanks to Professor Davis for answering my last minute questions and inspiring me by\ngiving suggestions about the Poxpert and of course this year's Mine Sweeper's contest.\nReferences:\n1- http://www.pokerinspector.com/screen2.php\n2- http://teamfu.freeshell.org/poker_hands.html\n\nAppendix A - Rules Graph\n\nAppendix B- Joshua Rules\n;; List of rules\n;; rules for action are followed by rules that determine strategies\n;; and rules to determine if calling is expensive or not and also\n;; rules that decide about the amount of raises and the position edge\n;; on the table\n;; For starting the program use:\n;; (ask [action poxpert ?x] #'print-answer-with-certainty)\n;; rules for folding\n(defrule action-fold0 (:backward :certainty .95 :importance 251)\nif [and [hand-score poxpert ?score] (< ?score .1)]\nthen [action poxpert fold])\n(defrule action-fold1 (:backward :certainty 0.9 :importance 250)\nif [and [hand-score poxpert ?score] (and (> ?score 0.1) (< ?score 0.3))\n[seat poxpert ?seat] (and (> ?seat 1) (< ?seat 5))]\nthen [action poxpert fold])\n(defrule action-fold2 (:backward :certainty 0.85 :importance 249)\nif [and [hand-score poxpert ?score] (< ?score .40)\n[cost-of-calling poxpert ?coc] (not (eq ?coc 'cheap))]\nthen [action poxpert fold])\n(defrule action-fold3 (:backward :certainty 0.75 :importance 248)\nif [and [hand-score poxpert ?score] (< ?score .50)\n[cost-of-calling poxpert expensive]]\nthen [action poxpert fold])\n(defrule action-fold4 (:backward :certainty .90 :importance 247)\nif [strategy poxpert prevent-loss]\nthen [action poxpert fold])\n;; rules for calling (or checking when amount to call is zero)\n(defrule action-call1 (:backward :certainty 0.90 :importance 239)\nif [and [hand-score poxpert ?score] (and (> ?score .3) (< ?score .7))\n[num-cards-on-the-table table 0]]\nthen [action poxpert call])\n(defrule action-call2 (:backward :certainty .85 :importance 238)\nif [and [hand-score poxpert ?score] (and (> ?score .5) (< ?score .7))\n[position-on-the-table poxpert bad]]\nthen [action poxpert call])\n(defrule action-call3 (:backward :certainty .9 :importance 237)\nif [strategy poxpert slow-playing]\nthen [action poxpert call])\n(defrule action-call4 (:backward :certainty .7 :importance 236)\nif [strategy poxpert normal-play]\nthen [action poxpert call])\n(defrule action-call5 (:backward :certainty .75 :importance 235)\nif [strategy poxpert waiting-for-draws]\nthen [action poxpert call])\n;; rules for raising\n(defrule action-raise1 (:backward :certainty .90 :importance 225)\nif [and [hand-score poxpert ?score](> ?score .7) (< ?score .9)\n[amount-to-call poxpert ?coc] [big-blind table ?bb]\n(> ?coc (* 2 ?bb))]\nthen [action poxpert raise])\n(defrule action-raise2 (:backward :certainty .55 :importance 224)\n\nif [strategy poxpert bluffing]\nthen [action poxpert raise])\n(defrule action-raise3 (:backward :certainty .85 :importance 223)\nif [strategy poxpert pocket-pair]\nthen [action poxpert raise])\n;; rules for determining the strategies based on hand's score\n;; position , table's current stage (pre-flop, flop, turn or river)\n;; slow-playing can be very beneficial before the river and when\n;; the player is almost certain to win the pot (hand score is very high)\n;; in this case player does not raise to scare anyone out of the pot\n;; instead, she would only call, but on the river she would jam the pot.\n(defrule slow-player (:backward :certainty .80 :importance 195)\nif [and [hand-score poxpert ?score] (> ?score .85)\n[num-cards-on-the-table table ?num-cards] (< ?num-cards 5)]\nthen [strategy poxpert slow-playing])\n;; certain hand-scores together with the current table situation\n;; would be good for drawing, in which case player calls the bets.\n(defrule waiting-for-draws (:backward :certainty .75 :importance 193)\nif [and [hand-score poxpert ?score] (> ?score .3) (< ?score .6)\n[num-cards-on-the-table table ?num-cards] (eq ?num-cards '3)]\nthen [strategy poxpert waiting-for-draw])\n;; if the program has a poor to average hand but the cost of calling is low\n;; the program may choose the bluffing strategy\n(defrule bluffer (:backward :certainty .65 :importance 197)\nif [and [hand-score poxpert ?score] (and (> ?score .1) (< ?score .4))\n[cost-of-calling poxpert cheap]]\nthen [strategy poxpert bluffing])\n(defrule normal-hands (:backward :certainty .75 :importance 192)\nif [and [hand-score poxpert ?score] (and (> ?score .2) (< ?score .7))]\nthen [strategy poxpert normal-play])\n(defrule presenting-pocket-pair (:backward :Certainty .85 :importance 191)\nif [and [hand-score poxpert ?score] (> ?score .7)]\nthen [strategy poxpert pocket-pair])\n;; when hand-score is low\n(defrule prevent-losses (:backward :certainty .90 :importance 196)\nif [and [hand-score poxpert ?score] (< ?score .2)]\nthen [strategy poxpert prevent-loss])\n;; these rules determine that how much the program has to call\n;; if it's the first person to call, so after the big blinds on pre-flop\n;; and after the button on the other turns.\n(defrule how-much-to-call1 (:backward :certainty 1.0 :importance 190)\nif [and [num-cards-on-the-table table 0] [seat poxpert 3] [big-blind table ?bb]]\nthen [amount-to-call poxpert ?bb])\n(defrule how-much-to-call2 (:backward :certainty 1.0 :importance 189)\nif [and [num-cards-on-the-table table ?tr] (> ?tr 1) [seat poxpert 2]]\nthen [amount-to-call poxpert 0])\n;; these rules determine if the player has an edge\n;; based on her position on the table\n(defrule position-value1 (:backward :certainty 1.0 :importance 185)\nif [and [seat poxpert ?seat] (> ?seat 1) (< ?seat 4)]\nthen [position-on-the-table poxpert bad])\n(defrule position-value2 (:backward :certainty 1.0 :importance 184)\nif [and [seat poxpert ?seat] (eq ?seat 1) (> ?seat 4)]\nthen [position-on-the-table poxpert good])\n;; these rules determine how much the player should raise if the\n;; selected action was raising, the outcome of this rules can be\n\n;; looked up in the database.\n(defrule amount-of-raising1 (:forward :certainty 1.0 :importance 180)\nif [and [action poxpert raise][strategy poxpert bluffing]]\nthen [amount-of-raise poxpert 5BB])\n(defrule amount-of-raising2 (:forward :certainty 1.0 :importance 179)\nif [and [action poxpert raise][strategy poxpert slow-playing]]\nthen [amount-of-raise poxpert All-in])\n(defrule amount-of-raising3 (:forward :certainty 1.0 :importance 178)\nif [and [action poxpert raise][strategy poxpert normal-play]]\nthen [amount-of-raise poxpert 2BB])\n;; for instance, if the program has chosen a bluffing strategy\n;; it should raise at least 5 times the big blinds to scare the others\n;; away and win the pot\n(defrule amount-of-raising4 (:forward :certainty 1.0 :importance 177)\nif [and [action poxpert raise][strategy poxpert bluffing]]\nthen [amount-of-raise poxpert 5BB])\n(defrule amount-of-raising5 (:forward :certainty 1.0 :importance 176)\nif [and [action poxpert raise] [strategy poxpert pocket-pair]]\nthen [amount-of-raise poxpert 10BB])\n;; these rules determine if the amount of calling is relatively high\n;; or low, there are three important factors, pot size (total amount of bets\n;; on the table), program's chip count and the amount of big blinds (minimum bets)\n(defrule cost-of-calling1 (:backward :certainty 1.0 :importance 170)\nif [and [amount-to-call poxpert ?cost] [pot-size table ?pot] [big-blind table\n?bb]\n[chip-count poxpert ?money] (> ?cost (max (* 2 ?pot) (* 10 ?bb) (* .3\n?money)))]\nthen [cost-of-calling poxpert expensive])\n(defrule cost-of-calling2 (:backward :certainty 1.0 :importance 170)\nif [and [amount-to-call poxpert ?cost] [pot-size table ?pot] [big-blind table\n?bb]\n[chip-count poxpert ?money] (and (>= ?cost (max (* .5 ?pot) (* 5 ?bb) (* .1\n?money)))\n(<= ?cost (max (* 2 ?pot) (* 10 ?bb) (* .3\n?money))))]\nthen [cost-of-calling poxpert moderate])\n(defrule cost-of-calling3 (:backward :certainty 1.0 :importance 170)\nif [and [amount-to-call poxpert ?cost] [pot-size table ?pot] [big-blind table\n?bb]\n[chip-count poxpert ?money] (<= ?cost (max (* .5 ?pot) (* 5 ?bb) (* .1\n?money)))]\nthen [cost-of-calling poxpert cheap])"
    },
    {
      "category": "Resource",
      "title": "grah_fin_prj_rep.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/0e73a3480431caf832788c014d962597_grah_fin_prj_rep.pdf",
      "content": "Rodney Graham\n6.871\n12 May 2005\n\nFinal Project Report: Film Recommendation System\n\nSystem Overview\nThe domain chosen as a focus for implementing a knowledge-based system was\nthat of film recommendation. Online websites such as Netflix and Amazon.com both\nemploy recommendation systems that seek to provide users with recommendation for\nfilms based on their personal preferences. The systems employed by these sites served as\nthe inspiration for the system described here. They function by maintaining large\ndatabases of previously purchased films and/or user-supplied ratings for previously\nviewed films. Given this collection information, the systems are able to recommend\nfilms to a user, which were favorably rated by other people with a similar rating and/or\npurchase history. The goal for this project was to design a system that performs a similar\nfunction, but that is a knowledge-based application system.\nThe original proposed task of the system was to recommend films to a person\nbased on a detailed demographic profile and a wide-range of personality traits. That is,\nthe envisioned system would take a detailed description of an individual and translate that\ninto to film recommendation by way of a model detailing how various characteristics\ninfluence a person's film preferences. Unfortunately, there appears to be no publicly\navailable information concerning such a model of an individual's film preferences. Any\nsuch model information, if available, would seem to be privately held by individual film\nstudios. As for publicly available information, much of it consists of mere speculation or\ncollections of anecdotal testimony without any concrete research.\nThis fact required that the scope of the task for the system be scaled back to match\nthe level of film preference information available. Information relating the demographic\nvariables of race, gender, and age as well as the personality characteristic of personal\nfantasies was found. However, the incompleteness of the information relating race to\nfilm preferences led to the use of only gender, age, and fantasies as the variables defining\nthe profile of a user.\n\n3⁄4 The variable gender describes the gender of an individual; it takes the value of\neither male or female.\n3⁄4 The variable age describes the age of an individual in years; it takes a positive\nnumeric value.\n3⁄4 The variable fantasy describes the personal fantasy reflected in films to which an\nindividual responds most strongly; it takes one of the following values: adventure,\nhero, triumph of the underdog, romance, being loved, and music.\n\nWhile the lack of variables in the user profile does somewhat limit the effectiveness of\nthe system, the nature of the problem of recommending a film, as will be discussed in\nmore detail later, still allows for the development a relatively useful film\nrecommendation system.\n\nThe system is implemented as a rule-based system using the Allegro Common\nLisp interpreter and Joshua. The knowledge base consists of a collection of rules\nencoding knowledge concerning film preference as well as a small database of film\ninformation. The database consists of various properties (e.g. genre, actors) of thirteen\nfilms. It is from this set of films that the system chooses films to recommend. The set of\nfilms was chosen for variety and to thoroughly exercise the system. Despite the small\namount of films, there are enough to demonstrate the functionality of the system. The\nfilms contained the database are listed below.\n\n3⁄4 Database of Films: Forrest Gump, Star Wars, The Godfather, Gigli, Broadcast\nNews, Todo Sobre Mi Madre, Gone with the Wind, The Sound of Music,\nCasablanca, ¡Atame!, Jurassic Park, Pulp Fiction and Speed\n\nExample Interaction\nAn example interaction with the system is presented here. For a user Jane Doe, a\n22-year-old female who responds most strongly to the fantasy of the \"triumph of the\nunderdog\", the system recommends the films Broadcast News, Todo Sobre Mi Madre,\nGone with the Wind, Casablanca and ¡Atame!.\n\n3⁄4 Input: gender=female, age=22, fantasy=triumph of the underdog\n3⁄4 Output: Broadcast News, Todo Sobre Mi Madre, Gone with the Wind,\nCasablanca, ¡Atame!\n\nTo begin interaction with the system, after starting the Lisp Listener and loading\nthe film recommendation knowledge base, the user asks for a film recommendation for\nJane Doe by entering the following command:\n\n- (ask [film-recommendation jane-doe ?x] #'print-answer-with-certainty)\n\nThis prompts the system to find all films recommendable to the individual jane-doe,\nprinting the certainty of the recommendation for each. (The certainty factor for all rules,\nand thus all recommendations, is 1.0 by default as not enough information was available\nto make a more meaningful determination of the certainty of the various rules.\nNevertheless, the vast majority of the rules would probably have a certainty factor close\nto 1.0.) The top-level rule of the knowledge base encodes the criteria necessary for a film\nto be recommended. It is presented below in code, a higher-level representation, and\n\"plain English\" with the understood subject of predicates to be the person for whom the\nsystem is making a film recommendation.\n\nCode\n(defrule film-recommendation (:backward :certainty 1.0 :importance 90)\nif [and [is-film ?film yes]\n\n[or [genre-film-recommendation ?who ?film]\n\n[fantasy-fulfillment-film-recommendation ?who ?film]]\n[gender-film-recommendation ?who ?film]\n[critical-opinion-film-recommendation ?who ?film]]\nthen [film-recommendation ?who ?film])\n\nHigher-level\nif\nFilm [FILM] = YES and\n\n(Genre Film Recommendation = [FILM] or\n\nFantasy Film Recommendation = [FILM]) and\n\nGender Film Recommendation = [FILM] and\n\nCritic Film Recommendation = [FILM]\nthen Film Recommendation = [FILM]\n\nPlain English\nif\n\"film FILM is recommended based on its genre congruence with the\nuser's genre preferences or its fulfillment of the user's fantasy;\nand it is recommended based on its congruence with the user's\ngender orientation preferences; and it is recommended based on its\npositive critic rating\"\nthen \"film FILM is recommended for the user\"\n\nIt should be noted that the \"plain English\" description of the rule actually relies on the\nmeaning that the sub-rules genre-film-recommendation, fantasy-film-\nrecommendation, gender-film-recommendation, and critic-film-\nrecommendation convey on the genre-film-recommendation, fantasy-\nfulfillment-film-recommendation,\ngender-film-recommendation,\nand critical-opinion-film-recommendation predicates, respectively.\nThe system proceeds to try to satisfy the rule film-recommendation for\neach film in the system database (i.e. each subject for which there exists an affirmative\nis-film predication) via backward chaining. A recommendation based on the genre of\na film or the fantasies fulfilled by a film is checked for first. A recommendation of a film\nbased on genre requires that the genre of the film match one of jane-doe's genre\npreferences as specified by the set of genre-preference-### rules.\n\n(defrule genre-preference-3 (:backward :certainty 1.0 :importance 38)\nif [gender ?who female]\nthen [genre-preference ?who romance])\n\nThese rules require knowledge of jane-doe's \"age category\" and gender. An\nindividual falls into one of three age categories (young, middle, older) based on age (in\nyears). This information is encoded in the set of age-category-xxx rules. The\nsystem prompts the user, upon reaching this point, to ascertain jane-doe's (numeric)\nage.\n\n- What is jane-doe's age?\n\nWith the age category of jane-doe determined, the user is then prompted for the\ngender of jane-doe.\n\n- What is jane-doe's gender? Female\n\nAfter addressing genre recommendation, the system attempts to satisfy the rule\nfantasy-film-recommendation concerning recommendation by way of the\nfantasies fulfilled by a film.\n\n(defrule fantasy-film-recommendation (:backward :certainty 1.0\n:importance 87)\nif [and [fantasy ?who ?fantasy]\n[is-film ?film yes]\n\n[fulfills-fantasy ?film ?fantasy]]\nthen [fantasy-fulfillment-film-recommendation ?who ?film])\n\nA recommendation of a film based on fantasy fulfillment requires that the fantasy to\nwhich jane-doe has the strongest response be a fantasy fulfilled by the film. To\ndetermine the strongest fantasy of jane-doe, the user is prompted.\n\n- What is jane-doe's fantasy? Triumph-of-underdog\n\nThe set of fantasy-fulfillment-### rules encode which fantasies a given film\nfulfills based on its genre.\n\n(defrule fantasy-fulfillment-3 (:backward :certainty 1.0 :importance 63)\nif [and [is-film ?film yes]\n[genre ?film drama]]\nthen [fulfills-fantasy ?film triumph-of-underdog])\n\nThe system next determines whether a given film is recommended for jane-\ndoe based on the congruence of the film's gender orientation type with jane-doe's\ngender orientation preference. The gender orientation type of a film may be neutral, male\nor female depending on the degree to which its story reflects \"maleness\"/\"femaleness\" or\nhas characteristics particularly favored by males/females. This is encoded in the set of\nxxx-gender-type rules.\n\n(defrule female-gender-type (:backward :certainty 1.0 :importance 49)\nif [and [is-film ?film yes]\n[or [story-property ?film clear-female-protagonist]\n\n[story-property ?film focus-on-womens-issue]]]\nthen [gender-type ?film female])\n\nSimilarly, the gender orientation preference of jane-doe indicates whether she has a\npreference for male-oriented or female-oriented films. This is encoded in the gender-\npreference rule.\n\n(defrule gender-preference (:backward :certainty 1.0 :importance 47)\nif [gender ?who ?gender]\nthen [gender-preference ?who ?gender])\n\nAccording to the female-gender-type rule, a film is female-oriented if its story has\na \"clear female protagonist\" or \"focuses on women's issues.\"\n\n(defrule female-gender-type (:backward :certainty 1.0 :importance 49)\nif [and [is-film ?film yes]\n[or [story-property ?film clear-female-protagonist]\n\n[story-property ?film focus-on-womens-issue]]]\nthen [gender-type ?film female])\n\nThe set of story-property-### rules relate the \"issues addressed\" by a film as well\nas other film information to these generalized story properties. Unlike the other rules in\n\nthe knowledge base, these rules are forward-chaining as they depend solely on properties\nof films that are fully specified in the film database.\nFinally, the system checks the critic rating of the film; a film is recommended\nonly if it has a \"positive\" review. This is determined by the pair of xxx-critic-\nrating rules: a film is concluded to have a positive review if its rating is at least 60.\n\n(defrule positive-critic-rating (:backward :certainty 1.0 :importance\n94)\nif [and [is-film ?film yes]\n[critical-rating ?film ?rating]\n\n(>= ?rating 60)]\nthen [critical-opinion ?film positive])\n\nIf a film satisfies this as well as the previous recommendation conditions, then it is\nrecommended by the system.\n\nProblem Domain\nThe recommendation system is able to provide a small list of films that a person\nwould enjoy viewing based on a three-variable profile--specifying age, gender and a\npersonal fantasy--of the individual. That is, the system is able solve the problem of\ndetermining some subset of films that an individual is likely to enjoy based on his\npersonal profile. Even with the limited amount of personal information that the system\ncollects, meaningful recommendations can still be made given the fairly large target\nprovided by this particular problem: there is a wide selection of films that a person finds\nenjoyable. In addition, people tend enjoy a variety of different types or classes of films.\nTherefore, the problem of identifying anyone of these classes and touching some small\nportion of this space is a reasonable goal for the system.\nThe system necessarily encodes further knowledge (used to ultimately decide the\nfilms to recommend) that allows it to meaningfully answer some other problems in\naddition to its target problem. The following are some such problems that the system can\nsolve.\n\n- Film Information: answer questions concerning properties of the films in its\ndatabase. This includes returning such basic information as the film's genre, release year,\nMPAA-issued content rating, and actors. More importantly, the system can also provide\nanswers to queries concerning more abstract topics such as the issues addressed by a film;\nthe actor playing the protagonist of a film; whether a film received overall positive\nreview from critics; and various characteristics of the film's story (e.g. focuses on\ncompetition, clear female protagonist).\n- Fantasy Fulfillment: provide a list of films that satisfy a particular fantasy (e.g.\nbeing loved) based on the genre of the film.\n- Male/Female Orientation: indicate which films are particularly male-oriented or\nfemale-oriented.\n- Genre Preferences: determine any significant genre preferences that an individual\nmay have.\n\nThere are some problems very similar to target problem that the system, however,\ncannot handle. For example, while the system can reliably recommend a set of films that\n\nthe user should enjoy, it cannot distinguish among those films that it recommends (or\ndoes not recommend). It cannot determine which of the recommended films might be\nliked more so than the others. To be more specific, it is unable to meaningfully rank\norder films based on preference.\nLacking a richer model of exactly how personal characteristics affect film\npreferences, a hard threshold (i.e. likes or dislikes) is used throughout the implementation\nof the system. For example, as encoded by the system rules, it is assumed that young\nmales uniformly dislike the romance genre. While this rule may hold in most cases, it\nobviously does not hold for every young male or every film in the romance genre. The\nsystem, thus, always removes any film in the romance genre from being considered for\nrecommendation if the user is young and male.\nThis is acceptable since the system only needs to find some film or films to\nrecommend the user. In fact, it is actually advantageous given the limited amount of\ninformation that the system has to weed out potentially bad recommendation choices.\nHowever, this feature also makes the system function poorly at the problem of finding a\ncoverage or approximate coverage of all the films that would make a good\nrecommendation to a person.\nAnother problem on which the system functions poorly is that of determining if\nany given film is a good choice. This differs from the general problem of recommending\na film in that being able to determine if a given film fits an individual's film preferences\nprovides a much smaller target than that of finding any film that fits an individuals film\npreferences. Being able to solve the former problem with some high degree of accuracy\nrequires extremely detailed knowledge of an individual's film preferences; the system\nwould need to be able to account for all of the various \"types\" of films that a person\nenjoys rather being able to identify a single type of film from which to make a\nrecommendation.\n\nKnowledge Base\n\nThe knowledge base of the system was derived from various texts rather than a\nparticular domain expert. The choice to do this was necessitated by the fact that it was\nnot possible to identify an appropriate knowledge expert that could be interviewed. As\nsuch, three papers detailing studies done concerning factors that influence film preference\nserved as the main sources of domain knowledge used to construct the system. The\nInternet websites Internet Movie Database (IMDb) and Rotten Tomatoes provided\nspecific film data such as starring actors and critic ratings.\nThe film recommendation system is implemented as a backward chaining rule-\nbased system. Its knowledge it represented in a collection of rules, which describes how\na profile of a person translates into preferences for certain films, and a collection of\npredications, which describes various properties of the thirteen films from which\nrecommendations are made. As an example, the predications that describe the film Star\nWars are shown here.\n\n[is-film star-wars yes]\n[genre star-wars sci-fi]\n[release-year star-wars 1977]\n[mpaa-rating star-wars pg]\n[critical-rating star-wars 93]\n[story-property star-wars action-filled]\n\n[story-property star-wars general]\n[issue-addressed star-wars general]\n[issue-addressed star-wars father-son-relationship]\n[issue-addressed star-wars good-vs-evil]\n[protagonist-actor star-wars mark-hamill]\n[actor star-wars mark-hamill]\n[actor star-wars harrison-ford]\n[actor star-wars carrie-fisher]\n[actor star-wars alec-guinness]\n[actor star-wars anthony-daniels]\n[actor star-wars james-earl-jones]\n\n[gender mark-hamill male]\n[gender harrison-ford male]\n[gender carrie-fisher female]\n[gender alec-guinness male]\n[gender anthony-daniels male]\n[gender james-earl-jones male]\n\nAs shown above, describing the various properties of a film are the predicates is-\nfilm, genre, release-year, mpaa-rating, critical rating,\nstory-property, issue-addressed, protagonist-actor, and actor.\nAdditionally, for each actor in a film is predication indicating the gender of the actor.\nEach of the predicates is explained in detail below.\n\nis-film\n\nindicates whether the subject is a film\n\nvalues: yes, no\ngenre\n\ngenre of the film\nvalues: drama, comedy, romance, sci-fi, fantasy,\nadventure, musical\nrelease-year\nyear in which the film was released\n\nvalues: numeric\nmpaa-rating\ncontent rating issued by MPAA\n\nvalues: g, pg, pg-13, r, nc-17\ncritical-rating\naggregate rating of film critics as indicated at Rotten Tomatoes\n\nvalues: numeric\nstory-property\ngeneral property of the story of the film\nvalues: general, action-filled, focus-on-competition,\nfocus-on-womens-issus, clear-female-protagonist\nissue-addressed\nnotable issues addressed by film\nvalues: general, motherhood, reproductive-rights,\nwomens-rights, violence-against-women, feminism,\nmother-daughter-relationship,\nfriendship-between-women, good-vs-evil, crime, war,\namerican-history, father-son-relationship, family\nprotagonist-actor actor that plays the protagonist of the film\n\nvalues: actor's name\nactor\n\nactor playing a key character in the film\n\nvalues: actor's name\n\nThe overall goal of the system is to match the predicate pattern\n\n[film-recommendation ?who ?film]\n\nwhere ?who is the name of the person for which a film recommendation is being made.\nThis goal is accomplished by satisfying the if-clause of the main rule film-\n\nrecommendation (shown above). This rule embodies the conditions necessary for the\nsystem to recommend a film. It specifies that a film is a good recommendation only if\n(1a) it can be recommended based on its genre or (1b) it can be recommend based on the\nfantasies that it fulfills; (2) it can be recommended based on its gender-orientation; and\n(3) it can be recommended based on critical opinion. (The genre condition and fantasy\nfulfillment condition are grouped together as they both depend chiefly on the genre of the\nfilm.) In other words, this rule provides the system with the knowledge that a film will\nmake a good recommendation only if it can meet the above criteria.\n\nTop Level Film Recommendation\nis-film\nfilm DB\ngenre-film-recommendation\n....\nfantasy-fulfillment-film-recommendation\n...\ngender-film-recommendation\n...\ncritical-opinion-film-recommendation\n...\nfilm-recommendation\n\nBelow the general film-recommendation rule that guides the system are four\nxxx-film-recommendation rules that describe when a film meets the criteria\nnecessary to be recommended on each of the dimensions outlined above. The rule\ngenre-film-recommendation states that a film can be recommended based on\ngenre if its genre matches a genre for which a person has a particular preference. The\nrule gender-film-recommendation states that a film can be recommended based\non gender-orientation if its gender-orientation (i.e. whether it is male-oriented or female-\noriented) matches the gender-orientation preference of a person. The rule fantasy-\nfilm-recommendation states that a film can be recommended based on fantasy\nfulfillment if it fulfills a fantasy that a person has. Finally, the rule critic-film-\nrecommendation states that a film can be recommended based on critical opinion if it\nhas received a positive review by critics.\n\n(defrule genre-film-recommendation (:backward :certainty 1.0 :importance\n89)\nif [and [genre-preference ?who ?genre]\n[is-film ?film yes]\n\n[genre ?film ?genre]]\nthen [genre-film-recommendation ?who ?film])\n\n(defrule\ngender-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 88)\nif [and [gender-preference ?who ?gender]\n[is-film ?film yes]\n\n[gender-type ?film ?gender]]\nthen [gender-film-recommendation ?who ?film])\n\n(defrule\nfantasy-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 87)\nif [and [fantasy ?who ?fantasy]\n[is-film ?film yes]\n\n[fulfills-fantasy ?film ?fantasy]]\nthen [fantasy-fulfillment-film-recommendation ?who ?film])\n\n(defrule\ncritic-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 86)\nif [and [is-film ?film yes]\n[critical-opinion ?film positive]]\nthen [critical-opinion-film-recommendation ?who ?film])\n\nBelow these rules in the hierarchy are rules concerned with further detailing the\nconcepts of genre preference, fantasy fulfillment, gender-orientation, and critic opinion.\n\nGenre\nThe set of rules genre-preference-### describe what personal\ncharacteristics correspond to particular genre preferences. For example, rule genre-\npreference-1 relates the knowledge that individuals that are young and male have a\npreference for the sci-fi genre. It should be noted that the rules genre-preference-\n9 and genre-preference-10 indicate that, in general, people have a preference for\nthe genres drama and comedy.\n\nRecommendation by Film Genre\nis-film\nfilm DB\nage\nuser-supplied\nage-category\ngender\nuser-supplied\ngenre-preference\ngenre\nfilm DB\ngenre-film-recommendation\n\n(defrule genre-preference-1 (:backward :certainty 1.0 :importance 40)\nif [and [age-category ?who young]\n[gender ?who male]]\nthen [genre-preference ?who sci-fi])\n\n(defrule genre-preference-9 (:backward :certainty 1.0 :importance 32)\nif *true*\nthen [genre-preference ?who drama])\n\n(defrule genre-preference-10 (:backward :certainty 1.0 :importance 31)\nif *true*\nthen [genre-preference ?who comedy])\n\nFantasy Fulfillment\nThe set of rules fantasy-fulfillment-### describe which types of films\nfulfill a particular fantasy. More specifically, the rules specify whether a film fulfills a\nparticular fantasy based on its genre. Therefore, for example, rule fantasy-\nfulfillment-1 states that a film belonging to the genre action-adventure fulfills the\nfantasy of adventure.\n\nRecommendation by Fantasy Fulfillment\nis-film\nfilm DB\nfantasy\nuser-supplied\nis-film\nfilm DB\ngenre\nfilm DB\nfulfills-fantasy\nfantasy-fulfillment-film-recommendation\n\n(defrule fantasy-fulfillment-1 (:backward :certainty 1.0 :importance 65)\nif [and [is-film ?film yes]\n[genre ?film action-adventure]]\nthen [fulfills-fantasy ?film adventure])\n\nGender Orientation\nThe rules male-gender-type and female-gender-type specify the\nproperties that the story of a film must have in order to be male-oriented or female-\noriented, respectively. Furthermore, the rule neutral-gender-type specifies all\nfilms as having a neutral gender orientation. As such, a film is considered to have a\nneutral gender orientation by default and is regarded as male-oriented or female-oriented\nif it is later discovered that its story has the necessary properties.\n\ndefrule neutral-gender-type (:backward :certainty 1.0 :importance 50)\nif [is-film ?film yes]\nthen [gender-type ?film neutral])\n\n(defrule female-gender-type (:backward :certainty 1.0 :importance 49)\nif [and [is-film ?film yes]\n[or [story-property ?film clear-female-protagonist]\n\n[story-property ?film focus-on-womens-issue]]]\nthen [gender-type ?film female])\n\n(defrule male-gender-type (:backward :certainty 1.0 :importance 48)\nif [and [is-film ?film yes]\n[or [story-property ?film action-filled]\n\n[story-property ?film focus-on-competition]]]\nthen [gender-type ?film male])\n\nThe rule gender-preference encodes which gender-orientation preference\nan individual demonstrates. As the rule states, in general, people demonstrate a film\npreference that is congruent with their gender identity. Therefore, males prefer male-\noriented films and females prefer female-oriented films.\n\n(defrule gender-preference (:backward :certainty 1.0 :importance 47)\nif [gender ?who ?gender]\nthen [gender-preference ?who ?gender])\n\nBelow these rules are the story-property-### rules that encode which\nbasic film properties necessitate particular designations regarding a film's story. For\nexample, the rule story-property-1 encodes the knowledge that a film's story has\na clear female protagonist if the actor playing the film's protagonist is female.\n\n(defrule story-property-1 (:forward)\nif [and [is-film ?film yes]\n[protagonist-actor ?film ?actor]\n\n[gender ?actor female]]\nthen [story-property ?film clear-female-protagonist])\n\nRecommendation by Gender Orientation\nis-film\nfilm DB\ngender\nuser-supplied\ngender-preference\nis-film\nfilm DB\nis-film\nfilm DB\nprotagonist-actor\nfilm DB\ngender\nfilm DB\nissue-addressed\nfilm DB\ngenre\nfilm DB\nstory-property\nfilm DB\ngender-type\ngender-film-recommendation\n\nCritic Opinion\nThe positive-critic-rating and negative-critic-rating rules\nspecify what aggregate critic ratings correspond to a positive review and negative review,\nrespectively. Specifically, a film with a critic rating of 60 or better is considered to have\nbeen reviewed positively while those with a critic rating below 60 is considered to have\nbeen reviewed negatively. This threshold reflects the \"fresh\" and \"rotten\" classifications\nused by the Rotten Tomatoes website.\n\nRecommendation by Critical Opinion\nis-film\nfilm DB\nis-film\nfilm DB\ncritical-rating\nfilm DB\ncritic-opinion\ncritic-film-recommendation\n\nThe final set of rules, age-category-young, age-category-middle,\nand age-category-older, in the knowledge base concern the age category into\nwhich an individual is placed based on his age (in years). As the rule age-category-\nyoung specifies, a person age 25 or below is considered young; according to the\nrule age-category-middle, a person older than 25 but younger than 50 is\nconsidered middle-aged; and according to the rule age-category-older, a person\n50 years old or older is considered to be older-aged.\n\n(defrule age-category-young (:backward :certainty 1.0 :importance 99)\nif [and [age ?who ?x]\n(<= ?x 25)]\nthen [age-category ?who young])\n\n(defrule age-category-middle (:backward :certainty 1.0 :importance 98)\nif [and [age ?who ?x]\n(> ?x 25)\n\n(<= ?x 49)]\nthen [age-category ?who middle])\n\n(defrule age-category-older (:backward :certainty 1.0 :importance 97)\nif [and [age ?who ?x]\n(> ?x 49)]\nthen [age-category ?who older])\n\nProblem Solving Approach\nThe system manages to perform the task of providing a film recommendation by\nattempting to generate a film-recommendation predication for each of the films in its\ndatabase. Therefore, for each film in the database, the system tries to satisfy the\npredications of the if-clause of the main rule film-recommendation, which has a\nfilm-recommendation predication as its then-clause, in a backward chaining\nfashion. (The system identifies each film in its database by a separate is-film\npredication.) As the system searches depth-first through the rule hierarchy, for the then-\nclause of each rule encountered, it attempts to satisfy the rule for all films in the database.\nThat is, the system does not consider each film separately.\n\nThe only deviation from this approach occurs with the group of story-\nproperty-### rules. These rules were made forward chaining as they rely simply on\ninformation regarding the films in the database, and in effect, their function is to conclude\nadditional useful information about films using the base data that is explicitly entered.\n\nResults\nThe system in general worked well. The use of a rule-based knowledge\nrepresentation along with Joshua allowed for simple uniform representation of both the\nfilm preference knowledge and basic data concerning films: the film preference\nknowledge was able to be embodied in if-then rules and the film data represented as\nindividual predications. Given that most of the knowledge that was able to mined from\nthe expert sources consisted of independent, simple concepts gleamed from examining\nvarious aspects of quantitative research (e.g. young males tended to strongly dislike films\nof the romance gene), the knowledge was easily captured in a collection of if-then rules.\nDefault knowledge could be easily captured by using generate rules (i.e. rules with a\nsatisfied if-clause).\nWhile the film data could be easily expressed as individual predications, having a\ndatabase filled with hundreds of tell commands to enter each fact about a film into the\nknowledge base of the system is somewhat cumbersome. It would be desirable,\nparticularly for the maintenance of the knowledge base, to use an implementation that\nallows a film to be handled as whole object with associated individual properties.\nRelated to this issue is the problem of having to explicitly add each possible value (of\nhundreds) for film predicates like actor or issue-addressed to their definition\nbefore being able to use them.\nWhile most of the knowledge could be easily expressed, knowledge that required\ntreating predications somewhat as entities themselves was not easily expressed. For\nexample, it was difficult to express a notion such as a film where the majority of the\nactors are female has a female dominated cast. Encoding this knowledge requires not\nsimply being able to match against a particular predication pattern, but being able to\ndetermine how many such predications exist and ascertain specific properties of that set.\nA more developed version of this system would obviously offer, among other\nthings, a more extensive collection of films. However, the current method in which the\nsystem determines film recommendations might not scale well with an increase in the\nnumber of films. The system currently attempts to satisfy each rule against every film\nsimultaneously as it chains through the rule hierarchy. Therefore, even if a film has been\neffectively \"ruled out\" by failing to match against a necessary predicate that has already\nbeen addressed, the system continues to consider the film when attempting to satisfy later\npredicates. It would be advantageous if the system maintained a set of films that are still\n\"viable\" and only considered those films when trying to satisfy clauses.\nAfter building this system, one lesson that will be taken away is the importance of\nselecting a domain for which there are established domain experts or there is otherwise\nestablished expert knowledge. The task of building an expert system should be limited to\nformalizing pre-existing knowledge and automating reasoning with this knowledge.\nAttempting to create expert knowledge where it does not exist should not be part of the\nknowledge engineering task. Moreover, given the lack of knowledge available, it should\nbe considered whether a knowledge-based implementation is the most appropriate for the\n\ntask of film recommendation, particularly if any of the related tasks of \"recommendation\nof a particular given film\" or \"coverage\" is a desirable feature for the system. It may the\ncase that an approach such as that used by the recommendation systems of Amazon.com\nor Netflix is more appropriate.\n\nKnowledge Sources\n\nFischoff, S., Lewis, D. and Antonio, J. (1997). Favorite films and film genres as function\nof race, age, and gender. APA Convention, Chicago, August 1997.\n\nFischoff, S. (1998). Favorite films choices: influences of the beholder and the beheld.\nAPA Convention, Chicago, August 1998.\n\nLitman (1983, Spring). Predicting Success of Theatrical Movies: An Empirical Study.\nJournal of Popular Culture, 159-175.\n\nInternet Movie Database (IMDb). http://www.imdb.com\n\nRotten Tomatoes. http://www.rottentomatoes.com\n\nAppendix\n\nFilm Recommendation\n(defrule film-recommendation (:backward :certainty 1.0 :importance 90)\nif [and [is-film ?film yes]\n\n[or [genre-film-recommendation ?who ?film]\n\n[fantasy-fulfillment-film-recommendation ?who ?film]]\n\n[gender-film-recommendation ?who ?film]\n\n[critical-opinion-film-recommendation ?who ?film]]\nthen [film-recommendation ?who ?film])\n\n(defrule genre-film-recommendation (:backward :certainty 1.0 :importance\n89)\nif [and [genre-preference ?who ?genre]\n[is-film ?film yes]\n\n[genre ?film ?genre]]\nthen [genre-film-recommendation ?who ?film])\n\n(defrule\ngender-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 88)\nif [and [gender-preference ?who ?gender]\n[is-film ?film yes]\n\n[gender-type ?film ?gender]]\nthen [gender-film-recommendation ?who ?film])\n\n(defrule\nfantasy-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 87)\nif [and [fantasy ?who ?fantasy]\n[is-film ?film yes]\n\n[fulfills-fantasy ?film ?fantasy]]\nthen [fantasy-fulfillment-film-recommendation ?who ?film])\n\n(defrule\ncritic-film-recommendation\n(:backward\n:certainty\n1.0\n:importance 86)\nif [and [is-film ?film yes]\n[critical-opinion ?film positive]]\nthen [critical-opinion-film-recommendation ?who ?film])\n\nFantasy Fulfillment\n(defrule fantasy-fulfillment-1 (:backward :certainty 1.0 :importance 65)\nif [and [is-film ?film yes]\n[genre ?film action-adventure]]\nthen [fulfills-fantasy ?film adventure])\n\n(defrule fantasy-fulfillment-2 (:backward :certainty 1.0 :importance 64)\nif [and [is-film ?film yes]\n[genre ?film action-adventure]]\nthen [fulfills-fantasy ?film hero])\n\n(defrule fantasy-fulfillment-3 (:backward :certainty 1.0 :importance 63)\nif [and [is-film ?film yes]\n[genre ?film drama]]\nthen [fulfills-fantasy ?film triumph-of-underdog])\n\n(defrule fantasy-fulfillment-4 (:backward :certainty 1.0 :importance 62)\nif [and [is-film ?film yes]\n[genre ?film comedy]]\nthen [fulfills-fantasy ?film triumph-of-underdog])\n\n(defrule fantasy-fulfillment-5 (:backward :certainty 1.0 :importance 61)\nif [and [is-film ?film yes]\n[genre ?film romance]]\n\nthen [fulfills-fantasy ?film romance])\n\n(defrule fantasy-fulfillment-6 (:backward :certainty 1.0 :importance 60)\nif [and [is-film ?film yes]\n[genre ?film romance]]\nthen [fulfills-fantasy ?film being-loved])\n\n(defrule fantasy-fulfillment-7 (:backward :certainty 1.0 :importance 59)\nif [and [is-film ?film yes]\n[genre ?film musical]]\nthen [fulfills-fantasy ?film musical])\n\n(defrule fantasy-fulfillment-8 (:backward :certainty 1.0 :importance 58)\nif [and [is-film ?film yes]\n[genre ?film sci-fi]]\nthen [fulfills-fantasy ?film adventure])\n\n(defrule fantasy-fulfillment-9 (:backward :certainty 1.0 :importance 57)\nif [and [is-film ?film yes]\n[genre ?film sci-fi]]\nthen [fulfills-fantasy ?film triumph-of-underdog])\n\n(defrule fantasy-fulfillment-10 (:backward :certainty 1.0 :importance\n56)\nif [and [is-film ?film yes]\n[genre ?film fantasy]]\nthen [fulfills-fantasy ?film adventure])\n\n(defrule fantasy-fulfillment-11 (:backward :certainty 1.0 :importance\n55)\nif [and [is-film ?film yes]\n[genre ?film fantasy]]\nthen [fulfills-fantasy ?film triumph-of-underdog])\n\nGender Orientation\n(defrule neutral-gender-type (:backward :certainty 1.0 :importance 50)\nif [is-film ?film yes]\nthen [gender-type ?film neutral])\n\n(defrule female-gender-type (:backward :certainty 1.0 :importance 49)\nif [and [is-film ?film yes]\n[or [story-property ?film clear-female-protagonist]\n\n[story-property ?film focus-on-womens-issue]]]\nthen [gender-type ?film female])\n\n(defrule male-gender-type (:backward :certainty 1.0 :importance 48)\nif [and [is-film ?film yes]\n[or [story-property ?film action-filled]\n\n[story-property ?film focus-on-competition]]]\nthen [gender-type ?film male])\n\n(defrule gender-preference (:backward :certainty 1.0 :importance 47)\nif [gender ?who ?gender]\nthen [gender-preference ?who ?gender])\n\nProperties of a Film's Story\n(defrule story-property-1 (:forward)\nif [and [is-film ?film yes]\n[protagonist-actor ?film ?actor]\n\n[gender ?actor female]]\nthen [story-property ?film clear-female-protagonist])\n\n(defrule story-property-2 (:forward)\n\nif [and [is-film ?film yes]\n[or [issue-addressed ?film motherhood]\n\n[issue-addressed ?film reproductive-rights]\n\n[issue-addressed ?film womens-rights]\n\n[issue-addressed ?film violence-against-women]\n\n[issue-addressed ?film feminism]\n\n[issue-addressed ?film mother-daughter-relationship]\n\n[issue-addressed ?film friendship-between-women]]]\nthen [story-property ?film focus-on-womens-issue])\n\n(defrule story-property-3 (:forward)\nif [and [is-film ?film yes]\n[genre ?film action-adventure]]\nthen [story-property ?film action-filled])\n\n(defrule story-property-4 (:forward)\nif [and [is-film ?film yes]\n[or [issue-addressed ?film good-vs-evil]\n\n[issue-addressed ?film crime]\n\n[issue-addressed ?film war]]]\nthen [story-property ?film focus-on-competition])\n\nGenre Preferences\n(defrule genre-preference-1 (:backward :certainty 1.0 :importance 40)\nif [and [age-category ?who young]\n[gender ?who male]]\nthen [genre-preference ?who sci-fi])\n\n(defrule genre-preference-2 (:backward :certainty 1.0 :importance 39)\nif [and [age-category ?who young]\n[gender ?who male]]\nthen [not [genre-preference ?who romance]])\n\n(defrule genre-preference-3 (:backward :certainty 1.0 :importance 38)\nif [gender ?who female]\nthen [genre-preference ?who romance])\n\n(defrule genre-preference-4 (:backward :certainty 1.0 :importance 37)\nif [age-category ?who young]\nthen [genre-preference ?who action-adventure])\n\n(defrule genre-preference-5 (:backward :certainty 1.0 :importance 36)\nif [and [age-category ?who older]\n[gender ?who female]]\nthen [not [genre-preference ?who action-adventure]])\n\n(defrule genre-preference-6 (:backward :certainty 1.0 :importance 35)\nif [age-category ?who young]\nthen [not [genre-preference ?who musical]])\n\n(defrule genre-preference-7 (:backward :certainty 1.0 :importance 34)\nif [age-category ?who older]\nthen [genre-preference ?who drama])\n\n(defrule genre-preference-8 (:backward :certainty 1.0 :importance 33)\nif [age-category ?who older]\nthen [genre-preference ?who romance])\n\n(defrule genre-preference-9 (:backward :certainty 1.0 :importance 32)\nif *true*\nthen [genre-preference ?who drama])\n\n(defrule genre-preference-10 (:backward :certainty 1.0 :importance 31)\nif *true*\n\nthen [genre-preference ?who comedy])\nAge Category\n(defrule age-category-young (:backward :certainty 1.0 :importance 99)\nif [and [age ?who ?x]\n(<= ?x 25)]\nthen [age-category ?who young])\n\n(defrule age-category-middle (:backward :certainty 1.0 :importance 98)\nif [and [age ?who ?x]\n(> ?x 25)\n\n(<= ?x 49)]\nthen [age-category ?who middle])\n\n(defrule age-category-older (:backward :certainty 1.0 :importance 97)\nif [and [age ?who ?x]\n(> ?x 49)]\nthen [age-category ?who older])\n\nRecency of Film Release\n(defrule film-release-recent (:backward :certainty 1.0 :importance 96)\nif [and [current-year sys ?cy]\n[is-film ?film yes]\n[release-year ?film ?ry]\n\n(< (- ?cr ?ry) 20)]\nthen [is-recent-release ?film yes])\n\n(defrule film-release-not-recent (:backward :certainty 1.0 :importance\n95)\nif [and [current-year sys ?cy]\n[is-film ?film yes]\n[release-year ?film ?ry]\n\n(>= (- ?cy ?ry) 20)]\nthen [is-recent-release ?film no])\n\nCritical Opinion\n(defrule positive-critic-rating (:backward :certainty 1.0 :importance\n94)\nif [and [is-film ?film yes]\n[critical-rating ?film ?rating]\n\n(>= ?rating 60)]\nthen [critical-opinion ?film positive])\n\n(defrule negative-critic-rating (:backward :certainty 1.0 :importance\n93)\nif [and [is-film ?film yes]\n[critical-rating ?film ?rating]\n\n(< ?rating 60)]\nthen [critical-opinion ?film negative])"
    },
    {
      "category": "Resource",
      "title": "gulappendices.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/f655ea8bb89942f7319d41a203f1fcee_gulappendices.pdf",
      "content": "Appendix A\nInstallation Instructions\nWe wrote and ran our code on a machine running Microsoft Windows XP. However\nboth Python and PyClips are available for linux. These are the instructions for running\nThought4Food on Windows:\n1. Download and install Python 2.4 from www.python.org\n2. Download and install PyClips 1.0 from:\nhttp://prdownloads.sourceforge.net/pyclips/pyclips-1.0_R1-\nclips_6.23.win32-py2.4.exe?download\n3. Download Thought4Food from\nhttp://web.mit.edu/saads/www/6.871/Thought4Food.zip\n4. Extract Thought4Food.zip into any directory. This should place the following\nfiles in that directory:\n-\nthought4food.py\n-\nruleset.txt\n-\nrecipesDatabase.txt\n5. Using the command prompt, 'cd' to the directory where you extracted the files.\n6. Type the following at the command prompt: python thought4food.py\nNote: To get the \"craving\" functionality described in Section 4.4, you have to open up\nthe python interpreter by typing python at the command prompt and then issue the\nfollowing commands:\n>>> import thought4food\n>>> from thought4food import runThought4Food\n>>> runThought4Food(True)\nThe program should run on linux without problems, however the linux implementation\nof PyClips is only provided for Python 2.3. This should not be a problem since most\nversions of linux (including Athena) have Python 2.3 and not 2.4. However we have not\ntested it on Athena.\n\nAppendix B\nRecipes\nRecipe1:\n\"\nName: All American Roast Beef\nIngredients:\n3 pounds beef eye of round roast\n1/2 teaspoon kosher salt\n1/2 teaspoon garlic powder\n1/4 teaspoon freshly ground black pepper\nMethod:\nPreheat oven to 375 degrees F (190 degrees C). If roast is untied, tie at 3 inch intervals\nwith cotton twine. Place roast in pan, and season with salt, garlic powder, and pepper.\nAdd more or less seasonings to taste.\nRoast in oven for 60 minutes (20 minutes per pound). Remove from oven, cover loosely\nwith foil, and let rest for 15 to 20 minutes.\nNutInfoPerServing:\nCalories: 484\nTotal Fat: 32.4g\nCholesterol: 138mg\nSodium: 268mg\nTotal Carbs: 0.2g\nDietary Fiber: 0g\nProtein: 44.8g\nServSize: 6\nTotalCookTime: 65 mins\n\"\nRecipe2:\n\"\nName: American Shepherd's Pie\nIngredients: 1 pound lean ground beef\n1/2 cup chopped onion\n1/2 cup chopped celery\n\n1 (10.5 ounce) can condensed vegetable soup\n1/2 teaspoon dried thyme\n3 cups mashed cooked potatoes\n1 cup shredded Colby longhorn cheese\nMethod:\nPreheat oven to 350 degrees F (175 degrees C) and lightly grease a 2 quart baking dish.\nIn a large skillet over medium-high heat, stir and cook ground beef, onion and celery\nuntil juices run clear. Drain. Pour mixture into baking dish with vegetable soup and\nthyme; stir well. Spread mashed potatoes on top.\nBake 20 minutes. Sprinkle shredded cheese on top and bake 5 minutes more, or until\ncheese has melted.\nNutInfoPerServing:\nCalories: 336\nTotal Fat: 16.7g\nCholesterol: 70mg\nSodium: 818mg\nTotal Carbs: 25.3g\nDietary Fiber: 2.8g\nProtein: 22g\nServSize: 6\nTotalCookTime: 40 mins\n\"\nRecipe3:\n\"\nName: American Chop Suey\nIngredients:\n1 pound lean ground beef\n1/2 cup chopped celery\n1/2 cup chopped onion\n1 (14.5 ounce) can stewed tomatoes\n2 (15 ounce) cans spaghetti with sauce\nMethod:\n\nIn a large skillet, brown the beef with the celery and onion until the onion is tender. Add\nthe tomatoes and spaghetti and heat, stirring all together. Serve with garlic bread and a\ndinner salad if desired. SO easy!\nNutInfoPerServing:\nCalories: 250\nTotal Fat: 12.5g\nCholesterol: 46mg\nSodium: 565mg\nTotal Carbs: 21g\nDietary Fiber: 4.1g\nProtein: 13g\nServSize: 8\nTotalCookTime: 20 mins\n\"\nRecipe4:\n\"Name: American Lasagne\nIngredients:\n1 1/2 pounds lean ground beef\n1 onion, chopped\n2 cloves garlic, minced\n1 tablespoon chopped fresh basil\n1 teaspoon dried oregano\n2 tablespoons brown sugar\n1 1/2 teaspoons salt\n1 (29 ounce) can diced tomatoes\n2 (6 ounce) cans tomato paste\n12 dry lasagna noodles\n2 eggs, beaten\n1 pint part-skim ricotta cheese\n1/2 cup grated Parmesan cheese\n2 tablespoons dried parsley\n1 teaspoon salt\n1 pound mozzarella cheese, shredded\n2 tablespoons grated Parmesan cheese\nMethod:\n\nIn a skillet over medium heat, brown ground beef, onion and garlic; drain fat. Mix in\nbasil, oregano, brown sugar, 1 1/2 teaspoons salt, diced tomatoes and tomato paste.\nSimmer for 30 to 45 minutes, stirring occasionally.\nPreheat oven to 375 degrees F (190 degrees C). Bring a large pot of lightly salted water to\na boil. Add lasagna noodles, and cook for 5 to 8 minutes, or until al dente; drain. Lay\nnoodles flat on towels, and blot dry.\nIn a medium bowl, mix together eggs, ricotta, Parmesan cheese, parsley and 1 teaspoon\nsalt.\nLayer 1/3 of the lasagna noodles in the bottom of a 9x13 inch baking dish. Cover noodles\nwith 1/2 ricotta mixture, 1/2 of the mozzarella cheese and 1/3 of the sauce. Repeat. Top\nwith remaining noodles and sauce. Sprinkle additional Parmesan cheese over the top.\nBake in the preheated oven 30 minutes. Let stand 10 minutes before serving.\nNutInfoPerServing:\nCalories: 1061\nTotal Fat: 39.8g\nCholesterol: 185mg\nSodium: 1958mg\nTotal Carbs: 112.4g\nDietary Fiber: 6.2g\nProtein: 62.5g\nServSize: 8\nTotalCookTime: 120 mins\n\"\nRecipe5 :\n\"\nName: American-Style Red Beans and Rice\nIngredients:\n1 tablespoon olive oil\n1 (15 ounce) can kidney beans\n1 1/2 cups tomato sauce\n4 1/2 cups water, divided\n1/2 teaspoon dried oregano\n1/2 teaspoon dried basil\n1 pinch dried thyme\nsalt and pepper to taste\n5 teaspoons adobo seasoning, divided\n2 cups uncooked white rice\n\nMethod:\nIn a large saucepan combine olive oil, kidney beans, tomato sauce, 1/2 cup water,\noregano, basil, thyme, salt, pepper and 2 teaspoons adobo. Simmer on low heat.\nMeanwhile, bring 4 cups water to a boil. Add rice and stir. Reduce heat, cover and\nsimmer for 20 minutes, or until rice is cooked and all liquid is absorbed. Stir in\nremaining 3 teaspoons adobo. Serve beans over the rice.\nNutInfoPerServing:\nCalories: 517\nTotal Fat: 5g\nCholesterol: 0mg\nSodium: 926mg\nTotal Carbs: 103g\nDietary Fiber: 10.2g\nProtein: 14.6g\nServSize: 4\nTotalCookTime: 35 mins\n\"\nRecipe6 :\n\"\nName: Asian Lettuce Wraps\nIngredients:\n4 cups water\n2 cups uncooked white rice\n1 tablespoon vegetable oil\n1 pound ground pork\n1 bunch green onions, thinly sliced\n1/2 teaspoon minced garlic\n1 (14 ounce) package firm tofu, drained and cubed\n2 carrots, shredded\n3 tablespoons hoisin sauce\n2 tablespoons soy sauce\n1 teaspoon sesame oil\n1/4 teaspoon hot chile paste\n1 head iceberg lettuce leaves, separated\n\nMethod:\nIn a saucepan combine the water and rice. Bring to a boil, cover, and reduce heat to a\nsimmer. Simmer for 20 minutes, until water is absorbed. Set aside and keep warm.\nHeat oil in a wok over medium-high heat. Cook the pork, green onions, and garlic for 5\nto 7 minutes, or until lightly brown. Add the tofu, carrot, Hoisin, and soy sauce, stirring\nfrequently until heated through. Remove from heat, and stir in the sesame oil and chile\npaste.\nTo serve: spoon a small amount of rice into each lettuce leaf, top with the stir-fry\nmixture, and drizzle with additional soy sauce or hoisin, if desired. Wrap the lettuce leaf\nto enclose the filling.\nNutInfoPerServing:\nCalories: 837\nTotal Fat: 31g\nCholesterol: 74mg\nSodium: 781mg\nTotal Carbs: 95.2g\nDietary Fiber: 8.4g\nProtein: 46g\nServSize: 4\nTotalCookTime: 47 mins\n\"\nRecipe7:\n\"\nName: Asian Style Meatloaf\nIngredients:\n1 1/2 pounds ground beef\n1/2 pound ground pork\n3 slices bread, broken up into small pieces\n2 eggs, lightly beaten\n1 small onion, finely chopped\n2 stalks celery, finely chopped\n3 tablespoons soy sauce\n1 tablespoon minced fresh ginger\n2 tablespoons hoisin sauce\n1/2 cup hoisin sauce\n2 tablespoons ketchup\n\nMethod:\nPreheat oven to 350 degrees F (175 degrees C).\nIn a large bowl, mix together the beef, pork, bread crumbs, eggs, onion, and celery.\nSeason with 3 tablespoons soy sauce, ginger, and 2 tablespoons hoisin sauce. Pat mixture\ninto a shallow 2 quart baking pan.\nBake in preheated oven for 40 minutes.\nDrain grease from pan. In a small bowl, mix 1/2 cup hoisin with 2 tablespoons ketchup.\nSpread over top of meatloaf. Continue baking for 20 minutes or so. Remove from oven,\nand let rest for 5 minutes.\nNutInfoPerServing:\nCalories: 438\nTotal Fat: 30.9g\nCholesterol: 147mg\nSodium: 857mg\nTotal Carbs: 16.3g\nDietary Fiber: 1.2g\nProtein: 22.5g\nServSize: 8\nTotalCookTime: 82 mins\n\"\nRecipe8:\n\"\nName: Asian Style Zucchini\nIngredients:\n1 teaspoon butter\n1 large zucchini, halved lengthwise and cut into 1 inch slices\n2 tablespoons soy sauce, divided\n1/2 cup sesame seeds\ngarlic powder to taste\nground black pepper to taste\nMethod:\nMelt the butter in a skillet over medium heat. Stir in the zucchini, and cook until lightly\nbrowned. Sprinkle with soy sauce and sesame seeds. Season with garlic powder and\npepper, and continue cooking until zucchini is well coated and tender.\n\nNutInfoPerServing:\nCalories: 129\nTotal Fat: 10.1g\nCholesterol: 3mg\nSodium: 472mg\nTotal Carbs: 7.6g\nDietary Fiber: 3.2g\nProtein: 4.6g\nServSize: 4\nTotalCookTime: 20 mins\n\"\nRecipe9:\n\"\nName: Asian Turkey BBQ\nIngredients:\n1/3 cup hoisin sauce\n1/4 cup barbeque sauce\n1 tablespoon minced fresh ginger root\n2 tablespoons sesame oil, divided\n3 cups cooked, chopped turkey meat\nsalt and pepper to taste\n1/2 cup diced green onions, divided\n4 English muffins, split\nMethod:\nPreheat the broiler.\nIn a large saucepan over medium heat, whisk together hoisin sauce, barbeque sauce,\nginger and 1 tablespoon sesame oil. Mix in turkey, salt, pepper and green onions, gently\ntossing until all ingredients are well blended. Cook approximately 10 minutes.\nIn a small bowl, mix the remaining sesame oil and remaining green onions. Brush the\ncut sides of the English muffins lightly with the mixture. Place the muffin halves face up\non a medium baking sheet.\nBroil English muffins 2 minutes, or until lightly toasted. Remove from heat and top with\nturkey mixture. Serve warm.\nNutInfoPerServing:\n\nCalories: 431\nTotal Fat: 13.9g\nCholesterol: 80mg\nSodium: 751mg\nTotal Carbs: 38g\nDietary Fiber: 1.1g\nProtein: 36.9g\nServSize: 4\nTotalCookTime: 25 mins\n\"\nRecipe10:\n\"\nName: Baked Asian Style Honey Chicken\nIngredients:\n1 (3 pound) whole chicken, cut into pieces\n3 tablespoons chopped onion\n2 tablespoons soy sauce\n1 tablespoon minced fresh ginger root\n1 teaspoon minced garlic\n2 tablespoons honey\n1/4 cup chopped green onions\nMethod:\nTo Marinate: Arrange chicken pieces in a 9x3 inch baking dish. In a small bowl combine\nthe onion, soy sauce, ginger, garlic and honey; mix together and spoon mixture over\nchicken. Cover dish and refrigerate to marinate for 1 hour, turning pieces once.\nPreheat oven to 425 degrees F (220 degrees C).\nBake chicken at 425 degrees F (220 degrees C) for 30 minutes. Turn pieces over and top\nwith green onion, then continue baking for about 10 to 15 minutes, or until chicken is\ntender and cooked through and juices run clear. Serve immediately.\nNutInfoPerServing:\nCalories: 620\nTotal Fat: 41.1g\nCholesterol: 204mg\nSodium: 558mg\n\nTotal Carbs: 8.7g\nDietary Fiber: 0.3g\nProtein: 51.2g\nServSize: 5\nTotalCookTime: 105 mins\n\"\nRecipe11:\n\"\nName: Asian Chicken Noodle Bowl\nIngredients:\n3/4 teaspoon Asian five-spice powder\n1/4 teaspoon pepper\n1/8 teaspoon salt\n1 pound Tyson Fresh Boneless, Skinless Chicken Thighs\n2 teaspoons vegetable oil\n2 large cloves garlic, finely chopped\n3 (14.5 ounce) cans low-sodium chicken broth\n1 tablespoon soy sauce\n1 (9 ounce) package fresh angel hair pasta\n1 (6 ounce) bag baby spinach\nMethod:\nCombine five-spice powder, pepper and salt in cup. Wash hands. Cut chicken into 1-\ninch pieces. Rub spices onto chicken. Wash hands.\nHeat oil in 2-quart stockpot over medium-high. Add chicken and cook about 5 minutes\nor until browned on all sides. Add garlic and cook about 1 minute or until fragrant. Add\nchicken broth and soy sauce; cover and bring to a boil. Uncover, reduce heat to simmer\nand cook 3 minutes. Add pasta; simmer 1 minute or until tender. Add spinach; stir just\nuntil wilted.\nSERVING SUGGESTION: Ladle individual servings into deep bowls and top with thinly\nsliced green onions. Refrigerate leftovers.\nTIP:\nTo substitute Tyson Individually Fresh Frozen Boneless, Skinless Chicken Thighs, rinse\noff ice glaze before cutting and increase cooking time by about one-third.\nNutInfoPerServing:\n\nCalories: 406\nTotal Fat: 10.9g\nCholesterol: 147mg\nSodium: 624mg\nTotal Carbs: 40.6g\nDietary Fiber: 3.8g\nProtein: 36.1g\nServSize: 4\nTotalCookTime: 30 mins\n\"\nRecipe12:\n\"\nName: Beef Samosas\nIngredients:\n2 large potatoes, peeled\n1 cup frozen peas, thawed\n2 tablespoons vegetable oil\n1/2 teaspoon cumin seeds\n1 bay leaf, crushed\n2 large onions, finely chopped\n1 pound ground beef\n4 cloves garlic, crushed\n1 tablespoon minced fresh ginger root\n1/2 teaspoon ground black pepper\n1 1/2 teaspoons salt\n1 teaspoon ground cumin\n1 teaspoon ground coriander\n1 teaspoon ground turmeric\n1 teaspoon chili powder\n1/2 teaspoon ground cinnamon\n1/2 teaspoon ground cardamom\n2 tablespoons chopped fresh cilantro\n2 tablespoons chopped green chile peppers\n1 quart oil for deep frying\n1 (16 ounce) package phyllo dough\n\nMethod:\nBring a medium saucepan of lightly salted water to a boil. Stir in potatoes and peas.\nCook until potatoes are tender but still firm, about 15 minutes. Drain, mash together and\nset aside.\nIn a large saucepan over medium high heat, heat the oil. Brown cumin seeds and bay\nleaf. Mix in onions and ground beef. Cook until beef is evenly brown and onions are\nsoft, about 5 minutes. Mix in garlic, fresh ginger root. Season with black pepper, salt,\ncumin, coriander, turmeric, chili powder, cinnamon and cardamom. Stir in the mashed\npotato mixture. Remove from heat and chill in the refrigerator for 1 hour, or until cool.\nHeat oil in a large, heavy saucepan over high heat.\nMix cilantro and green chile peppers into the potato and beef mixture. Place\napproximately 1 tablespoon of the mixture onto each phyllo sheet. Fold sheets into\ntriangles, pressing edges together with moistened fingers.\nIn small batches, fry until golden brown, about 3 minutes. Drain on paper towels and\nserve warm.\nNutInfoPerServing:\nCalories: 242\nTotal Fat: 14.8g\nCholesterol: 21mg\nSodium: 345mg\nTotal Carbs: 20.2g\nDietary Fiber: 1.9g\nProtein: 7.2g\nServSize: 18\nTotalCookTime: 40 mins\nRecipe13:\n\"\nName: Chicken Biryani\nIngredients:\n4 tablespoons vegetable oil\n4 small potatoes, peeled and halved\n2 large onions, finely chopped\n2 cloves garlic, minced\n1 tablespoon minced fresh ginger root\n1/2 teaspoon chili powder\n\n1/2 teaspoon ground black pepper\n1/2 teaspoon ground turmeric\n1 teaspoon ground cumin\n1 teaspoon salt\n2 medium tomatoes, peeled and chopped\n2 tablespoons plain yogurt\n2 tablespoons chopped fresh mint leaves\n1/2 teaspoon ground cardamom\n1 (2 inch) piece cinnamon stick\n3 pounds boneless, skinless chicken pieces cut into chunks\n2 1/2 tablespoons vegetable oil\n1 large onion, diced\n1 pinch powdered saffron\n5 pods cardamom\n3 whole cloves\n1 (1 inch) piece cinnamon stick\n1/2 teaspoon ground ginger\n1 pound basmati rice\n4 cups chicken stock\n1 1/2 teaspoons salt\nMethod:\nIn a large skillet, in 2 tablespoons vegetable oil (or ghee) fry potatoes until brown, drain\nand reserve the potatoes. Add remaining 2 tablespoons oil to the skillet and fry onion,\ngarlic and ginger until onion is soft and golden. Add chili, pepper, turmeric, cumin, salt\nand the tomatoes. Fry, stirring constantly for 5 minutes. Add yogurt, mint, cardamom\nand cinnamon stick. Cover and cook over low heat, stirring occasionally until the\ntomatoes are cooked to a pulp. It may be necessary to add a little hot water if the\nmixture becomes too dry and starts to stick to the pan.\nWhen the mixture is thick and smooth, add the chicken pieces and stir well to coat them\nwith the spice mixture. Cover and cook over very low heat until the chicken is tender,\napproximately 35 to 45 minutes. There should only be a little very thick gravy left when\nchicken is finished cooking. If necessary cook uncovered for a few minutes to reduce the\ngravy.\nWash rice well and drain in colander for at least 30 minutes.\nIn a large skillet, heat vegetable oil (or ghee) and fry the onions until they are golden.\nAdd saffron, cardamom, cloves, cinnamon stick, ginger and rice. Stir continuously until\nthe rice is coated with the spices.\nIn a medium-size pot, heat the chicken stock and salt. When the mixture is hot pour it\nover the rice and stir well. Add the chicken mixture and the potatoes; gently mix them\ninto the rice. Bring to boil. Cover the saucepan tightly, turn heat to very low and steam\n\nfor 20 minutes. Do not lift lid or stir while cooking. Spoon biryani onto a warm serving\ndish.\nNutInfoPerServing:\nCalories: 821\nTotal Fat: 36g\nCholesterol: 131mg\nSodium: 1544mg\nTotal Carbs: 70.8g\nDietary Fiber: 4.9g\nProtein: 47.3g\nServSize: 7\nTotalCookTime:\n120 mins\n\"\nRecipe14:\n\"\nName: Chicken Fry\nIngredients:\n2 tablespoons vegetable oil\n1 pound skinless, boneless chicken breast halves\n1 onion, sliced\n1 teaspoon ginger garlic paste\n2 green chile peppers, chopped\n3 teaspoons ground coriander seed\n1 teaspoon garam masala\n1/2 teaspoon ground turmeric\n1 teaspoon chili powder\n1 pinch ground nutmeg\n1 tablespoon fresh chopped cilantro, for garnish\nsalt to taste\nMethod:\nHeat oil in a pan. Add onions, green chilies, garam masala powder, ginger-garlic paste\nand fry until onions turn golden brown. Add chicken pieces, turmeric, nutmeg, pepper\nand chili powders and let cook for 5 to 6 minutes. Add salt and additional coriander\npowder to taste and cook until done. Garnish with cilantro if desired, and serve.\n\nNutInfoPerServing:\nCalories: 176\nTotal Fat: 7.1g\nCholesterol: 53mg\nSodium: 102mg\nTotal Carbs: 5.1g\nDietary Fiber: 1.7g\nProtein: 21.9g\nServSize: 5\nTotalCookTime: 15 mins\n\"\nRecipe15:\n\"\nName: Chicken Makhni\nIngredients:\n1 tablespoon peanut oil\n1 shallot, finely chopped\n1/4 white onion, chopped\n2 tablespoons butter\n2 teaspoons lemon juice\n1 tablespoon ginger garlic paste\n1 teaspoon garam masala\n1 teaspoon chili powder\n1 teaspoon ground cumin\n1 bay leaf\n1/4 cup plain yogurt\n1 cup half-and-half\n1 cup tomato puree\n1/4 teaspoon cayenne pepper, or to taste\n1 pinch salt\n1 pinch black pepper\n1 tablespoon peanut oil\n1 pound boneless, skinless chicken thighs, cut into bite-size pieces\n1 teaspoon garam masala\n\n1 pinch cayenne pepper\n1 tablespoon cornstarch\n1/4 cup water\nMethod:\nHeat 1 tablespoon oil in a large saucepan over medium high heat. Saute shallot and\nonion until soft and translucent. Stir in butter, lemon juice, ginger-garlic paste, 1\nteaspoon garam masala, chili powder, cumin and bay leaf. Cook, stirring, for 1 minute.\nAdd tomato sauce, and cook for 2 minutes, stirring frequently. Stir in half-and-half and\nyogurt. Reduce heat to low, and simmer for 10 minutes, stirring frequently. Season with\nsalt pepper. Remove from heat and set aside.\nHeat 1 tablespoon oil in a large heavy skillet over medium heat. Cook chicken until\nlightly browned, about 10 minutes. Reduce heat, and season with 1 teaspoon garam\nmasala and cayenne. Stir in a few spoonfuls of sauce, and simmer until liquid has\nreduced, and chicken is no longer pink. Stir cooked chicken into sauce.\nMix together cornstarch and water, then stir into the sauce. Cook for 5 to 10 minutes, or\nuntil thickened.\nNote:\nGaram masala may be purchased in Indian markets and in the gourmet section of some\nsupermarkets.\nNutInfoPerServing:\nCalories: 409\nTotal Fat: 27.8g\nCholesterol: 107mg\nSodium: 638mg\nTotal Carbs: 15.9g\nDietary Fiber: 2.3g\nProtein: 23.4g\nServSize: 4\nTotalCookTime: 25 mins\n\"\nRecipe16:\n\"\nName: Curried Chicken and Potatoes\n\nIngredients:\n2 tablespoons olive oil\n1 teaspoon cumin seed\n1/2 teaspoon garam masala\n1/4 teaspoon ground cardamom\n1/4 teaspoon cayenne pepper\n1/2 teaspoon black mustard seed\n1/2 teaspoon salt\n2 cloves garlic, minced\n2 (4 ounce) chicken thighs, cut into bite size pieces\n2 medium potatoes, diced\n2 roma (plum) tomatoes, diced\n1/2 bunch Swiss chard, chopped\n1 (8 ounce) container plain yogurt\nMethod:\nIn a large skillet, heat oil over medium heat. In hot oil, cook cumin seeds, garam masala,\ncardamom, cayenne pepper, mustard seeds, salt, and garlic. When seeds start to pop, stir\nin chicken and potatoes. Cook for 15 minutes, or until chicken is nearly done.\nStir in tomatoes, chard, and yogurt. Cover, and cook 15 minutes more, or until potatoes\nare tender and chicken is cooked through.\nNutInfoPerServing:\nCalories: 251\nTotal Fat: 13.7g\nCholesterol: 35mg\nSodium: 427mg\nTotal Carbs: 18.6g\nDietary Fiber: 2.6g\nProtein: 14.2g\nServSize: 4\nTotalCookTime: 50 mins\n\"\nRecipe17:\n\"\nName: Indian Cauliflower\nIngredients:\n\n1 large head cauliflower\n4 tablespoons vegetable oil\n1/2 teaspoon ground turmeric\n1 small onion, minced\n2 tomatoes, pureed\n1 teaspoon garlic powder\n3 teaspoons garam masala (optional)\nsalt to taste\n1/2 head lettuce\nMethod:\nPreheat the oven to 350 degrees F (175 degrees C). Cut off most of the cauliflower's stem\nand place the whole head in a baking dish.\nHeat two tablespoons of oil and turmeric together in a small frying pan. Brush the\ncauliflower head with the oil and turmeric mixture.\nBake the cauliflower for 30 minutes.\nWhile the cauliflower is cooking heat two tablespoons of oil in a frying pan, mix in the\nminced onions and saute until the are a medium brown color. Add the pureed tomatoes,\ngarlic powder, garam masala and salt. Let this mixture simmer for 10 minutes.\nArrange lettuce leaves on a serving plate. Place the cauliflower on top of the lettuce.\nPour the tomato curry over the cauliflower. Serve hot.\nNutInfoPerServing:\nCalories: 168\nTotal Fat: 11.9g\nCholesterol: 0mg\nSodium: 63mg\nTotal Carbs: 14.7g\nDietary Fiber: 6.3g\nProtein: 4.6g\nServSize: 5\nTotalCookTime: 50 mins\n\"\nRecipe18:\n\"\nName: Indian Shrimp\n\nIngredients:\n1 tablespoon tomato paste\n1/2 teaspoon salt\n1 teaspoon white sugar\n1 teaspoon garam masala\n1/2 teaspoon ground cumin\n1/8 teaspoon ground red pepper\n3 tablespoons finely chopped fresh cilantro\n1 fresh jalapeno pepper, chopped\n1 tablespoon fresh lemon juice\n1 cup coconut milk\n3 tablespoons vegetable oil\n1 teaspoon black mustard seed\n3 cloves garlic, minced\n1 1/4 pounds medium shrimp - peeled and deveined\n1 tablespoon cornstarch\n1 tablespoon cold water\nMethod:\nIn a medium bowl, stir together tomato paste, salt, sugar, garam masala, ground cumin\nseed, ground red pepper, cilantro, jalapeno pepper, lemon juice, and coconut milk. Set\ncoconut sauce aside.\nHeat oil in a wok or frying pan over medium-high heat. When oil is hot, add the\nmustard seeds, and cook until they begin to pop. Immediately stir in garlic, and cook\nuntil garlic begins to brown. Add shrimp, and cook until shrimp is opaque; this should\ntake only a minute or two. Pour the coconut sauce over the shrimp; cook until the sauce\nbegins to simmer. In a small bowl, mix together cornstarch and water; stir into the sauce,\nand continue cooking until thick.\nNutInfoPerServing:\nCalories: 338\nTotal Fat: 23.9g\nCholesterol: 216mg\nSodium: 582mg\nTotal Carbs: 7.3g\nDietary Fiber: 1.5g\nProtein: 25g\nServSize: 4\n\nTotalCookTime: 30 mins\n\"\nRecipe19:\n\"\nName: Indian Chicken Curry\nIngredients:\n8 bone-in chicken breast halves, skinless\nsalt and pepper to taste\n1 tablespoon olive oil\n2 onions, peeled and quartered\n1 teaspoon finely chopped fresh ginger root\n1 teaspoon crushed garlic\n1 tablespoon hot (Madras) curry powder\n1 (15 ounce) can tomato sauce\n1 (10 ounce) can coconut milk\n4 whole cloves\n4 pods cardamom\n1 cinnamon stick\nsalt to taste\nMethod:\nRinse chicken and pat dry; season with salt and pepper to taste. Heat oil in a large skillet\nover medium high heat, then saute chicken until browned. Remove chicken from skillet\nand set aside.\nSaute onions in skillet until translucent; add ginger and garlic and saute until fragrant,\nthen stir in curry powder.\nReturn chicken to skillet and add tomato sauce, coconut milk, cloves, cardamom and\ncinnamon stick. Season with salt to taste and stir all together.\nReduce heat to low and simmer until chicken is tender and cooked through (no longer\npink inside), about 20 to 25 minutes.\nNutInfoPerServing:\nCalories: 309\nTotal Fat: 15.3g\nCholesterol: 81mg\nSodium: 499mg\nTotal Carbs: 11.1g\nDietary Fiber: 2.8g\nProtein: 33g\n\nServSize: 6\nTotalCookTime: 45 mins\n\"\nRecipe20:\n\"\nName: Indian Daal With Spinach\nIngredients:\n1 1/2 cups red lentils\n3 1/2 cups water\n1/2 teaspoon salt\n1/2 teaspoon ground turmeric\n1/2 teaspoon chili powder\n1 pound spinach, rinsed and chopped\n2 tablespoons butter\n1 onion, chopped\n1 teaspoon ground cumin\n1 teaspoon mustard seed\n1 teaspoon garam masala\n1/2 cup coconut milk\nMethod:\nRinse lentils and soak for 20 minutes.\nIn a large saucepan, bring water to a boil and stir in salt, lentils, turmeric and chili\npowder. Cover and return to a boil, then reduce heat to low and simmer for 15 minutes.\nStir in the spinach and cook 5 minutes, or until lentils are soft. Add more water if\nnecessary.\nIn a small saucepan over medium heat, melt butter and saute onions with cumin and\nmustard seeds, stirring often. Cook until onions are transparent, and then combine with\nlentils. Stir in garam masala and coconut milk and cook until heated through\nNutInfoPerServing:\nCalories: 362\nTotal Fat: 13.4g\nCholesterol: 16mg\nSodium: 717mg\n\nTotal Carbs: 44.9g\nDietary Fiber: 18.3g\nProtein: 21g\nServSize: 4\nTotalCookTime: 40 mins\n\"\nRecipe21:\n\"\nName: Indian Tomato Chicken\nIngredients:\n1 large onion, chopped\n4 cloves garlic, chopped\n1 slice fresh ginger root\n1 tablespoon olive oil\n2 teaspoons ground cumin\n1 teaspoon ground turmeric\n1 teaspoon salt\n1 teaspoon ground black pepper\n1/2 teaspoon ground cardamom\n1 (1 inch) piece cinnamon stick, chopped\n1/4 teaspoon ground cloves\n2 bay leaves\n1/4 teaspoon ground nutmeg\n6 skinless chicken thighs\n1 (14.5 ounce) can whole peeled tomatoes, crushed\nMethod:\nPlace onion, garlic and ginger in a food processor and process into a paste. Heat oil in a\nlarge skillet over medium heat, add onion paste and saute, stirring continuously, for\nabout 10 minutes.\nStir in the cumin, turmeric, salt, pepper, cardamom, cinnamon, cloves, bay leaves and\nnutmeg. Saute, stirring, for 1 to 2 minutes. Place chicken pieces in skillet and stir them\naround with the spice mixture until they are well coated.\nSaute for another 4 minutes, then pour in the tomatoes with liquid and stir. Reduce heat\nto low and simmer for 1 to 2 hours, or until the oil has separated from the liquid. Stir\n\noccasionally. (Note: If you simmer uncovered, the sauce will thicken; add water, or keep\ncovered while simmering.)\nNutInfoPerServing:\nCalories: 134\nTotal Fat: 5.4g\nCholesterol: 57mg\nSodium: 550mg\nTotal Carbs: 7g\nDietary Fiber: 1.6g\nProtein: 14.8g\nServSize: 6\nTotalCookTime: 135 mins\n\"\nRecipe22:\n\"\nName: Matar Paneer\nIngredients:\n1 gallon whole milk\n1 lemon, juiced\n2 teaspoons olive oil\n1 tablespoon cumin seeds\n1 onion, finely chopped\n1 red bell pepper, finely chopped\n1/2 cup canned whole kernel corn\n1/2 cup frozen peas\n1/2 teaspoon garam masala\n1/2 teaspoon ground turmeric\n1/2 teaspoon chili powder\n1/4 cup chopped fresh cilantro\nMethod:\nIn a large saucepan, bring the milk to a boil. Stir in the lemon juice. Continue cooking 15\nminutes, stirring constantly, until curds have formed. Using a cheese cloth, separate the\ncheese from remaining liquid, and set aside.\n\nHeat the olive oil in a skillet over medium heat. Stirring constantly, cook the cumin\nseeds and onion in the skillet until golden brown. Mix in the bell pepper, corn, and\npeas. Season with garam masala, turmeric, and chili powder. Continue to cook and stir\n10 minutes, until vegetables are tender.\nMix the cheese into the skillet. Reduce heat to low, cover, and continue cooking 10\nminutes. Sprinkle with cilantro to serve.\nNutInfoPerServing:\nCalories: 681\nTotal Fat: 35.9g\nCholesterol: 137mg\nSodium: 554mg\nTotal Carbs: 60.4g\nDietary Fiber: 4.2g\nProtein: 35g\nServSize: 4\nTotalCookTime: 65 mins\n\"\nRecipe23:\n\"\nName: Palak Paneer\nIngredients:\n6 tablespoons olive oil\n2 cloves garlic, chopped\n1 tablespoon grated fresh ginger root\n2 dried red chile peppers\n1/2 cup finely chopped onion\n2 teaspoons ground cumin\n1 teaspoon ground coriander\n1 teaspoon ground turmeric\n3/4 cup sour cream\n3 pounds fresh spinach, torn\n1 large tomato, quartered\n4 sprigs fresh cilantro leaves\n8 ounces ricotta cheese\ncoarse sea salt to taste\n\nMethod:\nIn a large saucepan heat 3 tablespoons of olive oil and saute garlic, 1/2 tablespoon of\nginger, red chilies (optional ingredient) and onion until brown. Mix in the cumin,\ncoriander, turmeric and sour cream (add more or less to achieve desired creaminess).\nAdd the spinach, handfuls at a time until it is cooked down, about 15 minutes total.\nRemove from heat and allow to cool slightly.\nPour spinach mixture into a blender or food processor and add the tomato, the\nremaining 1/2 tablespoon of ginger, and cilantro (add more or less according to taste).\nBlend for 15 to 30 seconds, or until the spinach is finely chopped. Pour back into the\nsaucepan and keep warm over low heat.\nIn a medium frying pan heat 3 tablespoons of olive oil over medium heat, and fry cheese\nuntil browned; drain and add to spinach. Cook for 10 minutes on low heat. Season with\nsalt to taste.\nNutInfoPerServing:\nCalories: 483\nTotal Fat: 36.3g\nCholesterol: 37mg\nSodium: 544mg\nTotal Carbs: 27.2g\nDietary Fiber: 9.9g\nProtein: 19.5g\nServSize: 4\nTotalCookTime: 45 mins\n\"\nRecipe24:\n\"\nName: Eggplant Indian Style\nIngredients:\n2 1/2 pounds eggplant\n2/3 cup clarified butter\n1 cup chopped onions\n4 large ripe tomatoes, chopped\n4 teaspoons crushed coriander seed\nMethod:\n\nPreheat oven to 325 degrees F (165 degrees C).\nHalf eggplant(s) and bake for 20 minutes, or until tender. Using a potato masher or\npastry blender, crush eggplant.\nHeat clarified butter in a medium skillet over medium heat; saute onions until\ntranslucent. Stir in tomatoes and eggplant; cook, stirring, until liquid evaporated.\nRemove from heat and sprinkle with coriander.\nNutInfoPerServing:\nCalories: 533\nTotal Fat: 39.7g\nCholesterol: 87mg\nSodium: 839mg\nTotal Carbs: 44.5g\nDietary Fiber: 11.2g\nProtein: 7.1g\nServSize: 4\nTotalCookTime: 40 mins\n\"\nRecipe25:\n\"\nName: Baked Ziti\nIngredients:\n1 (16 ounce) package ziti pasta\n24 ounces ricotta cheese\n1 pound shredded mozzarella cheese\n1 egg, beaten\n1 (32 ounce) jar spaghetti sauce\n1/4 cup grated Parmesan cheese\nMethod:\nBring a large pot of lightly salted water to a boil. Add ziti and cook for 8 to 10 minutes or\nuntil al dente; drain and rinse.\nIn a medium bowl, mix ziti, ricotta cheese, mozzarella cheese, egg and 1 1/2 cups\nspaghetti sauce.\nPreheat oven to 375 degrees F (190 degrees C).\n\nLightly grease a 9x13 inch baking dish and spoon in ziti mixture. Top with remaining\nspaghetti sauce, followed by Parmesan cheese.\nBake in preheated oven for 30 minutes; let stand for 15 minutes before serving.\nNutInfoPerServing:\nCalories: 657\nTotal Fat: 27.1g\nCholesterol: 114mg\nSodium: 971mg\nTotal Carbs: 65.6g\nDietary Fiber: 3.6g\nProtein: 36.1g\nServSize: 7\nTotalCookTime: 60 mins\n\"\nRecipe26:\n\"\nName: Basil Pesto Sandwich\nIngredients:\n1 slice focaccia bread, cut in half horizontally\n1 tablespoon mayonnaise\n2 teaspoons basil pesto\n2 tablespoons sun-dried tomato pesto\n1/4 cup roasted red peppers\n1/2 cup crumbled feta cheese\n1/2 cup fresh basil leaves\nMethod:\nIn a small bowl, mix together mayonnaise and basil pesto; spread onto one half of bread.\nSpread other half with sun-dried tomato pesto. Arrange roasted red peppers on bottom\npiece. Cover with feta cheese, then fresh basil. Top with remaining slice of bread.\nNutInfoPerServing:\nCalories: 721\nTotal Fat: 50.2g\n\nCholesterol: 124mg\nSodium: 2127mg\nTotal Carbs: 40.9g\nDietary Fiber: 3.5g\nProtein: 26.9g\nServSize: 1\nTotalCookTime: 10 mins\n\"\nRecipe27:\n\"\nName: Brick Oven Pizza\nIngredients:\n1 teaspoon active dry yeast\n1/4 cup warm water\n1 cup cold water\n1 teaspoon salt\n3 cups bread flour6 ounces low moisture mozzarella cheese, thinly sliced\n1/2 cup no salt added canned crushed tomatoes\n1/4 teaspoon freshly ground black pepper\n1/2 teaspoon dried oregano\n3 tablespoons extra-virgin olive oil\n6 leaves fresh basil, torn\nMethod:\nSprinkle yeast over warm water in a large bowl. Let stand for 5 minutes to proof. Stir in\nsalt and cold water, then stir in the flour about 1 cup at a time. When the dough is\ntogether enough to remove from the bowl, knead on a floured surface until smooth,\nabout 10 minutes. Divide into two pieces, and form each one into a tight ball. Coat the\ndough balls with olive oil, and refrigerate in a sealed container for at least 16 hours. Be\nsure to use a big enough container to allow the dough to rise. Remove the dough from\nthe refrigerator one hour prior to using.\nPreheat the oven, with a pizza stone on the lowest rack, to 550 degrees F. Lightly dust a\npizza peel with flour.\nUsing one ball of dough at a time, lightly dust the dough with flour, and stretch\ngradually until it is about 14 inches in diameter, or about as big around as the pizza\nstone. Place on the floured peel. Place thin slices of mozzarella over the crust, then grind\n\na liberal amount of black pepper over it. Sprinkle with dried oregano. Randomly arrange\ncrushed tomatoes, leaving some empty areas. Drizzle olive oil over the top.\nWith a quick back and forth jerk, make sure the dough will release from the peel easily.\nPlace the tip of the peel at the back of the preheated pizza stone, and remove peel so that\nthe pizza is left on the stone.\nBake for 4 to 6 minutes in the preheated oven, or until the crust begins to brown.\nRemove from the oven by sliding the peel beneath the pizza. Sprinkle a few basil leaves\nrandomly over the pizza. Cut into wedges and serve.\nNutInfoPerServing:\nCalories: 146\nTotal Fat: 4.8g\nCholesterol: 6mg\nSodium: 197mg\nTotal Carbs: 19.4g\nDietary Fiber: 0.8g\nProtein: 5.8g\nServSize: 16\nTotalCookTime: 2071 mins\n\"\nRecipe28:\n\"\nName: Cavatini\nIngredients:\n1/4 cup butter\n1 onion, chopped\n1 green bell pepper, chopped\n2 (4.5 ounce) cans sliced mushrooms, drained\n2 pounds lean ground beef\n1 (15 ounce) can tomato sauce\n1 (32 ounce) jar spaghetti sauce\n4 ounces chopped ham\n1/2 cup cooked and cubed chicken\n3 ounces sliced pepperoni sausage\n1/4 teaspoon crushed red pepper flakes\n\nsalt to taste\nground black pepper to taste\n3/4 cup seashell pasta\n6 ounces rotini pasta\n2 pounds mozzarella cheese, shredded\n2 tablespoons grated Parmesan cheese\nMethod:\nIn a small skillet, saute onions, green peppers, and mushrooms in butter or margarine.\nSet aside.\nBrown hamburger in a large skillet over medium heat. Drain. Mix in tomato sauce, pasta\nsauce, chopped ham, chopped chicken or turkey, pepperoni, salt, and red and black\npepper. Add vegetable saute to hamburger mixture.\nCook pasta according to package directions. Drain.\nSpread a little sauce over the bottom of two 9 x 13 inch pans. In each pan, place a layer of\npasta, a layer of mozarella cheese, a hamburger sauce layer, a sprinkling of Parmesan\ncheese, and another layer of mozarella cheese. Repeat layers. Cover pans.\nBake at 350 degrees F (175 degrees C) for 30 to 45 minutes.\nNutInfoPerServing:\nCalories: 480\nTotal Fat: 29.6g\nCholesterol: 95mg\nSodium: 1010mg\nTotal Carbs: 21.6g\nDietary Fiber: 2.4g\nProtein: 31.3g\nServSize: 16\nTotalCookTime: 75 mins\n\"\nRecipe29:\n\"\nName: Chicago-Style Pan Pizza\nIngredients:\n1 (1 pound) loaf frozen bread dough, thawed\n1 pound bulk Italian sausage\n2 cups shredded mozzarella cheese\n\n8 ounces sliced fresh mushrooms\n1 small onion, chopped\n2 teaspoons olive oil\n1 (28 ounce) can diced tomatoes, drained\n3/4 teaspoon dried oregano\n1/2 teaspoon salt\n1/4 teaspoon fennel seed\n1/4 teaspoon garlic powder\n1/2 cup freshly grated Parmesan cheese\nMethod:\nPreheat the oven to 350 degrees F (175 degrees C). Press the dough into the bottom and\nup the sides of a greased 9x13 inch baking dish.\nCrumble the sausage into a large skillet over medium-high heat. Cook and stir until\nevenly browned. Remove the sausage with a slotted spoon, and sprinkle over the dough\ncrust. Sprinkle mozzarella cheese evenly over the sausage.\nAdd mushrooms and onion to the skillet; cook and stir until the onion is tender. Stir in\nthe tomatoes, oregano, salt, fennel seed and garlic powder. Spoon over the mozzarella\ncheese. Sprinkle Parmesan cheese over the top.\nBake for 25 to 35 minutes in the preheated oven, or until crust is golden brown.\nNutInfoPerServing:\nCalories: 568\nTotal Fat: 27.2g\nCholesterol: 69mg\nSodium: 1634mg\nTotal Carbs: 48.3g\nDietary Fiber: 4.2g\nProtein: 33.3g\nServSize: 6\nTotalCookTime: 65 mins\n\"\nRecipe30:\n\"\nName: Chicken Mushroom Linguini\n\nIngredients:\n6 ounces sliced fresh mushrooms\n1 onion, chopped\n1/4 cup butter\n2 pounds boneless skinless chicken breasts, cut into 1 inch pieces\n1/4 cup all-purpose flour\n1 teaspoon salt\n2 cups chicken broth\n1 cup sour cream\n1 (12 ounce) package dried linguine pasta\n1/2 teaspoon minced garlic\nground black pepper to taste\nMethod:\nBring a large pot of lightly salted water to a boil. Add linguine pasta, and cook until\ntender, about 8 minutes. Drain.\nMeanwhile, melt butter in a large skillet over medium heat. Add onion and mushrooms,\nand cook until tender. Remove the onions and mushrooms from the skillet with a slotted\nspoon; set aside.\nAdd chicken pieces to the pan, and sprinkle with garlic. Cook and stir until evenly\nbrowned, and cooked through.\nWhisk the flour and salt into the pan drippings until smooth. Gradually whisk in the\nchicken broth, and simmer over low heat until slightly thickened. Return the\nmushrooms and garlic to the pan, and stir in sour cream. Cook until heated through, but\ndo not boil. Serve over linguine pasta.\nNutInfoPerServing:\nCalories: 561\nTotal Fat: 19.7g\nCholesterol: 125mg\nSodium: 923mg\nTotal Carbs: 49.6g\nDietary Fiber: 2.8g\nProtein: 46g\nServSize: 6\nTotalCookTime: 30 mins\n\"\n\nRecipe31:\n\"\nName: Chicken Alfredo with Fettucini Noodles\nIngredients:\n1 pound fettuccini pasta\n1 1/2 cups butter, divided\n1 pound skinless, boneless chicken breast halves - cut into cubes\n2 (16 ounce) containers whole milk ricotta cheese\n1 pint heavy cream\n1 teaspoon salt\n1 cup grated Parmesan cheese\nMethod:\nBring a large pot of lightly salted water to a boil. Add fettuccini and cook for 8 to 10\nminutes or until al dente; drain.\nMelt 2 tablespoons butter in a large skillet over medium heat. Saute chicken until no\nlonger pink and juices run clear.\nIn a large saucepan combine ricotta cheese, cream, salt, Parmesan cheese and remaining\nbutter. Cook over medium heat until well combined, about 10 minutes. Stir in cooked\nfettuccini and chicken; cook until heated through.\nNutInfoPerServing:\nCalories: 1028\nTotal Fat: 76.8g\nCholesterol: 275mg\nSodium: 1031mg\nTotal Carbs: 46.9g\nDietary Fiber: 1.9g\nProtein: 40.1g\nServSize: 8\nTotalCookTime: 35 mins\n\"\nRecipe32:\n\"\n\nName: Chicken and Asparagus Fettuccine\nIngredients:\n12 ounces dry fettuccini pasta\n2 cups 1 inch pieces fresh asparagus\n1/2 cup butter\n2 cups half-and-half cream\n1/4 teaspoon garlic powder\n1/4 teaspoon ground black pepper\n1 pinch cayenne pepper\n3/4 cup grated Parmesan cheese\n1/2 pound cooked chicken breasts - cut into bite size pieces\nMethod:\nBring a large pot of lightly salted water to a boil. Add pasta, and cook for 8 to 10\nminutes, or until al dente. Add the asparagus during the last 3 to 5 minutes of cooking.\nDrain, and transfer to a large bowl.\nIn a large saucepan over medium heat, combine butter and half-and-half. Cook until\nthick and bubbly. Season with garlic powder, black pepper, and cayenne pepper. Stir in\nParmesan cheese and chicken, and heat through.\nPour sauce over pasta and asparagus, and toss to coat.\nNutInfoPerServing:\nCalories: 572\nTotal Fat: 31.1g\nCholesterol: 113mg\nSodium: 454mg\nTotal Carbs: 46.9g\nDietary Fiber: 2.9g\nProtein: 28g\nServSize: 6\nTotalCookTime: 40 mins\n\"\nRecipe33:\n\"\nName: Italian Tacos\nIngredients:\n1/2 pound Italian sausage\n\n1 pound ground beef\n1 (16 ounce) jar tomato pasta sauce\n1 teaspoon sugar\n16 taco shells, heated\n3 cups shredded mozzarella cheese\n1 tablespoon dried Italian seasoning\nMethod:\nCombine the ground beef and Italian sausage in a large heavy skillet. Cook over\nmedium heat until evenly browned. Drain off excess grease, and season meat with\nItalian seasoning.\nHeat the pasta sauce in a saucepan over medium heat until heated through. When the\nsauce is warm, stir in the sugar.\nFill taco shells with the meat mixture, spoon pasta sauce over, and top with mozzarella\ncheese.\nNutInfoPerServing:\nCalories: 252\nTotal Fat: 14.6g\nCholesterol: 37mg\nSodium: 398mg\nTotal Carbs: 16.6g\nDietary Fiber: 2.1g\nProtein: 13.8g\nServSize: 16\nTotalCookTime: 25 mins\n\"\nRecipe34:\n\"\nName: Lamb Casserole\nIngredients:\n2 sprigs fresh parsley\n2 sprigs fresh thyme\n2 bay leaves\n2 pounds lamb shank, cooked and diced\n1 pound cubed ham steak\n10 small onions\n\n5 tomatoes - blanched, peeled and chopped\n2 cloves garlic, chopped\n4 cups chicken stock\n2 (15 ounce) cans cannellini beans, drained and rinsed\n6 links pork sausage links, halved\nMethod:\nTie the sprigs of parsley and thyme together with the bay leaves or place them in a\ncheesecloth and tie closed, because you will want to easily remove the herbs later. Place\nthe herb bundle, lamb, ham, onion, tomato, garlic and stock in a large saucepan over\nmedium-high heat.\nBring to a boil, reduce heat to low and simmer for about 1 hour. Stir in the beans and\nsausage and continue to simmer for about 15 minutes, or more if you want a thicker\nconsistency.\nNutInfoPerServing:\nCalories: 741\nTotal Fat: 41.1g\nCholesterol: 160mg\nSodium: 2240mg\nTotal Carbs: 35.9g\nDietary Fiber: 9g\nProtein: 54.5g\nServSize: 6\nTotalCookTime: 110 mins\n\"\nRecipe35:\n\"\nName: Muffuletta Sandwich\nIngredients:\n1 (1 pound) loaf fresh Italian bread\n1/3 cup olive oil\n1/3 cup grated Parmesan cheese\n1 tablespoon dried basil\n1 tablespoon dried oregano\n8 oil-cured black olives, pitted and chopped\n\n8 pitted green olives, chopped\n1/4 pound thinly sliced salami\n1/4 pound thinly sliced ham\n1/2 pound provolone cheese, sliced\n1/4 pound mozzarella cheese, sliced\nMethod:\nSlice bread in half lengthwise. Drizzle olive oil on both sides. Sprinkle both sides with\nparmesan cheese, basil and oregano.\nOn the bottom half, layer chopped black olives and chopped green olives, then the\nsalami, ham, provolone, and mozzarella. Cover with top layer, and cut into 4 servings.\nNutInfoPerServing:\nCalories: 1002\nTotal Fat: 61.5g\nCholesterol: 111mg\nSodium: 2410mg\nTotal Carbs: 60.9g\nDietary Fiber: 3.9g\nProtein: 49.4g\nServSize: 4\nTotalCookTime: 15 mins\n\"\nRecipe36:\n\"\nName: Spinach Alfredo Pizza\nIngredients:\n1 (10 ounce) package frozen chopped spinach, thawed and drained\n1 (10 ounce) container Alfredo Sauce\n1 (6 ounce) can sliced mushrooms, drained\n1 (10 ounce) can artichoke hearts, drained and quartered\n1/2 cup grated Parmesan cheese\n4 cups shredded mozzarella cheese\n2 unbaked pizza crusts\n2 tablespoons olive oil\n1 (2.25 ounce) can sliced black olives (optional)\n\nMethod:\nPreheat the oven to 350 degrees F (175 degrees C). Spread pizza crusts out onto baking\nsheets or pizza pans.\nPlace the spinach and Alfredo sauce in a saucepan, and warm over medium heat. Stir\noccasionally. Spread 1tablespoon of olive oil onto each pizza crust. Spoon half of the\nAlfredo and spinach onto each crust, then arrange artichoke hearts over the sauce layer.\nTop each pizza with half of the mozzarella cheese and Parmesan cheese. Sprinkle\nmushrooms and black olives on top.\nBake pizzas one at a time for 20 minutes in the preheated oven, or until the bottom is\nnicely browned.\nNutInfoPerServing:\nCalories: 266\nTotal Fat: 14g\nCholesterol: 26mg\nSodium: 797mg\nTotal Carbs: 22g\nDietary Fiber: 2g\nProtein: 13.5g\nServSize: 16\nTotalCookTime: 50 mins\n\"\nRecipe37:\n\"\nName: Quick Spinach-Ricotta Calzones\nIngredients:\n1 (11.3 ounce) can refrigerated dinner rolls, at room temperature\nCornmeal for rolling\n2 tablespoons olive oil\n1 medium onion, finely chopped\n2 (10 ounce) packages frozen chopped spinach, thawed and squeezed dry\n2 large garlic cloves, minced\n1/4 teaspoon ground nutmeg\nSalt and pepper, to taste\n1 cup ricotta cheese\n1 cup grated mozzarella cheese\n1/4 cup Parmesan cheese\nOlive oil, for brushing\n\nYour favorite marinara-style pasta sauce\nMethod:\nSeparate rolls onto a cornmeal-sprinkled work surface. Cover with plastic wrap and let\nrest while preparing filling.\nHeat oil in 12-inch skillet over medium-high heat. Add onion; saute until tender and\ngolden, 2 to 3 minutes. Add spinach, garlic and nutmeg; saute, breaking up large clumps\nwith a wooden spoon, until heated through, 2 to 3 minutes. Add salt and pepper.\nTransfer to a medium bowl; stir in ricotta. Let cool; stir in remaining cheeses.\nAdjust oven rack to center position and heat oven to 450 degrees.\nSprinkling with cornmeal as necessary, roll out each roll into a 7-inch circle. Spoon a\nscant 1/2 cup of filling just below the center line, leaving a 1-inch border along the\nbottom half of the dough circle. Spoon filling just below the center line of the circle of\ndough, leaving a border along the bottom half of the circle. With wet fingertips, moisten\nthe bottom border. Fold dough over filling and press edges together. Thoroughly seal by\nusing fingertips to crimp and flute the edges or by pressing with the tines of a fork. Place\non a large cookie sheet lined with parchment paper. (At this point, can be frozen up to 2\nweeks.)\nBrush tops with oil. Bake until golden brown, about 16 minutes (longer if frozen). Let\ncool slightly and serve with warm marinara sauce.\nNutInfoPerServing:\nCalories: 276\nTotal Fat: 11.7g\nCholesterol: 20mg\nSodium: 618mg\nTotal Carbs: 29.2g\nDietary Fiber: 4.1g\nProtein: 15.6g\nServSize: 8\nTotalCookTime: 30 mins\n\"\nRecipe38:\n\"\nName: Stuffed Banana Peppers\nIngredients:\n\n8 banana peppers\n2 tablespoons butter\n1/2 cup chopped onion\n1/2 cup chopped celery\n1 (28 ounce) can crushed tomatoes\n1 (8 ounce) can tomato sauce\n2 cloves garlic, minced\n1 teaspoon dried basil\n1 teaspoon dried oregano\n2 1/2 teaspoons salt, divided\n1/2 teaspoon ground black pepper, divided\n1 egg\n1 teaspoon Worcestershire sauce\n1/2 cup grated Parmesan cheese\n1 pound hot Italian sausage\n1 pound mild Italian sausage\n1 1/2 cups bread crumbs\nMethod:\nCut off tops of peppers, and remove ribs and seeds. Chop edible portions of tops; set\naside. Bring a large pot of salted water to a boil. Add peppers, reduce heat, and simmer\nuntil tender but still firm, about 5 minutes. Drain and set aside.\nHeat butter in a medium skillet. Saute reserved chopped pepper, onion and celery until\ntender, 3 to 5 minutes. Stir in crushed tomatoes, tomato sauce and garlic. Season with\nbasil, oregano, 1 1/2 teaspoons salt and 1/4 teaspoon pepper. Simmer uncovered for 10\nminutes. Preheat oven to 350 degrees F (175 degrees C).\nMeanwhile, in a large mixing bowl, combine egg, 1 teaspoon salt, 1/4 teaspoon pepper,\nWorcestershire sauce and Parmesan. Mix in hot sausage, mild sausage, bread crumbs\nand 1 cup of the tomato sauce mixture.\nUsing a piping bag or sausage stuffer, fill each pepper with the meat mixture. Place in a\n3 quart casserole dish, and pour remaining tomato sauce mixture over peppers.\nBake uncovered in preheated oven for 1 hour.\nNutInfoPerServing:\nCalories: 596\nTotal Fat: 42.6g\nCholesterol: 126mg\nSodium: 2203mg\nTotal Carbs: 29.1g\nDietary Fiber: 4.8g\nProtein: 25.1g\n\nServSize: 8\nTotalCookTime: 120 mins\n\"\nRecipe39:\n\"\nName: Vietnamese Fresh Spring Rolls\nIngredients:\n2 ounces rice vermicelli\n8 rice wrappers (8.5 inch diameter)\n8 large cooked shrimp - peeled, deveined and cut in half\n1 1/3 tablespoons chopped fresh Thai basil\n3 tablespoons chopped fresh mint leaves\n3 tablespoons chopped fresh cilantro\n2 leaves lettuce, chopped\n4 teaspoons fish sauce\n1/4 cup water\n2 tablespoons fresh lime juice\n1 clove garlic, minced\n2 tablespoons white sugar\n1/2 teaspoon garlic chili sauce\n3 tablespoons hoisin sauce\n1 teaspoon finely chopped peanuts\nMethod:\nBring a medium saucepan of water to boil. Boil rice vermicelli 3 to 5 minutes, or until al\ndente, and drain.\nFill a large bowl with warm water. Dip one wrapper into the hot water for 1 second to\nsoften. Lay wrapper flat. In a row across the center, place 2 shrimp halves, a handful of\nvermicelli, basil, mint, cilantro and lettuce, leaving about 2 inches uncovered on each\nside. Fold uncovered sides inward, then tightly roll the wrapper, beginning at the end\nwith the lettuce. Repeat with remaining ingredients.\nIn a small bowl, mix the fish sauce, water, lime juice, garlic, sugar and chili sauce.\nIn another small bowl, mix the hoisin sauce and peanuts.\nServe rolled spring rolls with the fish sauce and hoisin sauce mixtures.\n\nNutInfoPerServing:\nCalories: 84\nTotal Fat: 0.7g\nCholesterol: 11mg\nSodium: 306mg\nTotal Carbs: 16.1g\nDietary Fiber: 0.5g\nProtein: 3.4g\nServSize: 8\nTotalCookTime: 50 mins\n\"\nRecipe40:\n\"\nName: Fried Squid With Pineapple\nIngredients:\n2 tablespoons vegetable oil\n3 cloves garlic, minced\n1 onion, cut into wedges\n2 pounds squid, cleaned and cut into 1/2 inch rings\n1/2 fresh pineapple - peeled, cored and chopped\n4 stalks celery, cut into 2 inch pieces\n4 tablespoons fish sauce\n1 teaspoon white sugar\n1 teaspoon ground black pepper\nMethod:\nIn a large skillet over medium high heat, heat the and the garlic. Fry until garlic is\ngolden brown.\nAdd onion and stir-fry for 1 minute. Add squid and cook until they just turn white (do\nnot overcook). Add the pineapple, celery, fish sauce, sugar and pepper. Stir fry for 2\nminutes.\nNutInfoPerServing:\nCalories: 329\nTotal Fat: 10.3g\nCholesterol: 529mg\n\nSodium: 1231mg\nTotal Carbs: 20.8g\nDietary Fiber: 2.1g\nProtein: 37.1g\nServSize: 4\nTotalCookTime: 20 mins\n\"\nRecipe41:\n\"\nName: Szechuan Spicy Eggplant\nIngredients:\n1 large eggplant, diced\n4 tablespoons soy sauce\n1/4 cup chicken stock\n1 teaspoon chili sauce\n1 teaspoon white sugar\n1/2 teaspoon ground black pepper\n2 tablespoons oyster sauce\n1 tablespoon cornstarch\n4 tablespoons water\n2 cloves garlic, minced\n4 large green onions, finely chopped\n1 tablespoon chopped fresh ginger root\n1/2 pound medium shrimp - peeled and deveined\n1 pound lean ground beef\n1 tablespoon vegetable or sesame oil\nMethod:\nRemove the eggplant stem and cut into 1-inch cubes. In a medium bowl, combine the\nsoy sauce, chicken stock, chili sauce, sugar, ground black pepper and oyster sauce. Stir\ntogether well and set aside. In a separate small bowl, combine the cornstarch and water,\nand set aside.\nCoat a large, deep pan with cooking spray over high heat and allow a few minutes for it\nto get very hot. Saute the garlic, half of the green onions, ginger and shrimp for 3 to 5\nminutes, stirring constantly, until they begin to brown. Stir in the ground beef and cook\nfor 3 more minutes, again stirring constantly, until browned.\n\nPour the eggplant into the pan and stir all together. Pour the reserved soy sauce mixture\nover all, cover the pan, reduce heat to medium low and let simmer for 15 minutes,\nstirring occasionally. Stir in the reserved cornstarch mixture and let heat until thickened.\nFinally, stir in the rest of the green onions and the sesame oil.\nNutInfoPerServing:\nCalories: 457\nTotal Fat: 28.2g\nCholesterol: 171mg\nSodium: 1183mg\nTotal Carbs: 15.6g\nDietary Fiber: 4.2g\nProtein: 34.5g\nServSize: 4\nTotalCookTime: 30 mins\n\"\nRecipe42:\n\"\nName: Fast and Easy Tofu Lo-Mein\nIngredients:\n1 (16 ounce) package extra firm tofu\n2 tablespoons olive oil\n2 (3 ounce) packages Oriental flavored ramen noodles\n1 (16 ounce) package frozen stir-fry vegetables\n1 1/2 cups water\n1 tablespoon soy sauce, or to taste\nMethod:\nPress tofu between paper towels to remove some of the water; cut in to bite size cubes.\nHeat olive oil in large skillet over medium-high heat. Add tofu, and fry until golden\nbrown, about 15 minutes. Stir occasionally to prevent burning.\nMeanwhile bring water to a boil in a medium saucepan. Add noodles from ramen\npackages, reserving the seasoning envelopes. Boil for about 2 minutes, just until the\nnoodles break apart. Drain.\n\nAdd the stir-fry vegetables to the pan with the tofu, and season with the ramen noodle\nseasoning packet. Cook, stirring occasionally until vegetables are tender, but not mushy.\nAdd noodles, and stir to blend. Season with soy sauce to taste and serve.\nNutInfoPerServing:\nCalories: 388\nTotal Fat: 20.3g\nCholesterol: 1mg\nSodium: 1341mg\nTotal Carbs: 38.6g\nDietary Fiber: 3.9g\nProtein: 17.6g\nServSize: 4\nTotalCookTime: 30 mins\n\"\nRecipe43:\n\"\nName: Warm Goat Cheese Sandwiches\nIngredients:\n1 (5 ounce) goat cheese, softened\n1/2 cup basil pesto\n3/4 cup sun-dried tomatoes, softened and chopped\n2 pita breads, cut in half\nMethod:\nPreheat the oven to 350 degrees F (175 degrees C).\nOpen the pita bread halves up into pockets. Spread goat cheese onto one side of the\ninside of each pita pocket. Spread a layer of pesto over the goat cheese. Sprinkle with\nsun-dried tomatoes. Place pita halves onto a baking sheet.\nBake for 3 to 5 minutes in the preheated oven, just until the filling is warm, and the\nbread is lightly toasted.\nNutInfoPerServing:\nCalories: 393\nTotal Fat: 25.5g\nCholesterol: 38mg\n\nSodium: 794mg\nTotal Carbs: 25.3g\nDietary Fiber: 2.8g\nProtein: 17.4g\nServSize: 4\nTotalCookTime: 25 mins\n\"\nRecipe44:\n\"\nName: Mediterranean Pasta\nIngredients:\n1/2 (8 ounce) package uncooked spaghettini\n1/2 cup sun-dried tomatoes, packed without oil\n1 tablespoon olive oil\n1/2 cup chopped red onion\n3 cloves garlic, sliced\n1/2 cup sliced fresh mushrooms\n1/4 cup sliced green olives\n1/4 cup Italian seasoned bread crumbs\nfreshly ground black pepper to taste\nMethod:\nBring a medium pot of lightly salted water to a boil. Add pasta and cook for 8 to 10\nminutes or until al dente; drain. Place sun-dried tomatoes into a small pot, and add\nwater to cover. Bring to a boil over medium-high heat, and cook for about 5 minutes, or\nuntil tender. Drain, chop, and set aside.\nHeat olive oil in a large skillet over medium-low heat. Fry onion and garlic in the oil\nuntil onions are transparent, about 5 minutes. Add the mushrooms and sun-dried\ntomatoes; cook over low heat for about 5 minutes. Throw in the spaghettini, and toss to\ncoat. Mix in the green olives. Serve hot with bread crumbs and lots of black pepper on\ntop.\nNutInfoPerServing:\nCalories: 218\nTotal Fat: 10.9g\n\nCholesterol: 0mg\nSodium: 1034mg\nTotal Carbs: 26.7g\nDietary Fiber: 3.4g\nProtein: 6.4g\nServSize: 2\nTotalCookTime: 25 mins\n\"\nRecipe45:\n\"\nName: Mexican Vegetable Rice\nIngredients:\n2 tablespoons canola oil\n1 cup diced onion\n2 teaspoons minced garlic\n1 1/2 cups white rice\n1 1/2 teaspoons salt\n3/4 teaspoon cayenne pepper\n3 cups vegetable stock\n1 (10 ounce) package frozen mixed peas and carrots, thawed\n1 1/2 cups tomatoes, deseeded and diced\n2 tablespoons chopped fresh parsley\n2 green onions, chopped (optional)\nMethod:\nIn a large saute pan, saute onion, garlic, and rice in canola oil until onion is soft and rice\nis opaque. Add salt, cayenne pepper, and vegetable stock to the pan. Bring the liquid to\na boil. Cover the pan and reduce heat to low, simmer for 20 minutes or until all of the\nliquid is absorbed.\nAdd vegetables and tomatoes. Cover pan and allow to sit for 5 minutes. Turn off heat.\nSprinkle top of rice with parsley and green onions.\nNutInfoPerServing:\nCalories: 227\n\nTotal Fat: 4.9g\nCholesterol: 0mg\nSodium: 655mg\nTotal Carbs: 41.3g\nDietary Fiber: 3g\nProtein: 5.1g\nServSize: 7\nTotalCookTime: 15 mins\n\"\nRecipe46:\n\"\nName: Nut Burgers\nIngredients:\n1/2 cup finely chopped walnuts\n1/2 cup unsalted sunflower seeds\n1 cup canned chickpeas, drained\n1/4 cup diced red onion\n1 beaten egg\n1 tablespoon chopped fresh parsley\n1/4 teaspoon fresh ground black pepper\n1 tablespoon salt-free herb seasoning blend\n2 tablespoons olive oil\n2 slices mild Cheddar cheese\n1 pita bread round\n1/4 cup prepared Ranch salad dressing\n2 leaves romaine lettuce\n1 medium tomato, thinly sliced\n1/2 avocado - peeled, pitted and sliced\nMethod:\nPlace walnuts and sunflower seeds in a dry skillet over medium heat. Cook, stirring\noccasionally until lightly toasted and fragrant, about 5 minutes.\nIn a medium bowl, mash garbanzo beans with a fork, or chop in a food processor. Stir in\nthe onion, egg, parsley, and toasted nuts. Season with pepper and seasoning blend, and\nmix well.\n\nHeat olive oil in a skillet over medium heat. Divide the bean mixture into 2 patties, and\nfry in the hot oil for about 3 minutes on each side, or until well browned and heated\nthrough. Place a slice of cheese over each patty, and remove from heat.\nPlace the pita round in the same dry skillet the nuts were in, and heat for about 1 minute\non each side. Cut the round in half, spread ranch dressing inside of each, and line the\npockets with romaine leaves. Place a cheesy patty into each one, and top with sliced\ntomato and avocado. Serve with tortilla or potato chips.\nNutInfoPerServing:\nCalories: 1148\nTotal Fat: 88.1g\nCholesterol: 144mg\nSodium: 1029mg\nTotal Carbs: 65.1g\nDietary Fiber: 15.6g\nProtein: 34g\nServSize: 2\nTotalCookTime: 25 mins\n\"\nRecipe47:\n\"\nName: Portabello Mushroom Stroganoff\nIngredients:\n3 tablespoons butter\n1 large onion, chopped\n3/4 pound portobello mushrooms, sliced\n1 1/2 cups vegetable broth\n1 1/2 cups sour cream\n3 tablespoons all-purpose flour\n1/4 cup chopped fresh parsley\n8 ounces dried egg noodles\nMethod:\nBring a large pot of lightly salted water to a boil. Add egg noodles, and cook until al\ndente, about 7 minutes. Remove from heat, drain, and set aside.\nAt the same time, melt butter in a large heavy skillet over medium heat. Add onion, and\ncook, stirring until softened. Turn the heat up to medium-high, and add sliced\n\nmushrooms. Cook until the mushrooms are limp and browned. Remove to a bowl, and\nset aside.\nIn the same skillet, stir in vegetable broth, being sure to stir in any browned bits off the\nbottom of the pan. Bring to a boil, and cook until the mixture has reduced by 1/3. Reduce\nheat to low, and return the mushrooms and onion to the skillet.\nRemove the pan from the heat, stir together the sour cream and flour; then blend into\nthe mushrooms. Return the skillet to the burner, and continue cooking over low heat,\njust until the sauce thickens. Stir in the parsley, and season to taste with salt and pepper.\nServe over cooked egg noodles.\nNutInfoPerServing:\nCalories: 514\nTotal Fat: 29.5g\nCholesterol: 107mg\nSodium: 527mg\nTotal Carbs: 51.9g\nDietary Fiber: 3.8g\nProtein: 13.5g\nServSize: 4\nTotalCookTime: 30 mins\n\"\nRecipe48:\n\"\nName: Vegetarian Chilli\nIngredients:\n1 (28 ounce) can diced tomatoes with juice\n1 small onion, diced\n1 (15 ounce) can white beans, drained\n1 (15 ounce) can chili beans, with liquid\n1 (1.25 ounce) package reduced sodium taco seasoning mix\n1 (1 ounce) package ranch dressing mix\n1 (12 ounce) package vegetarian burger crumbles\n1 (8 ounce) package shredded Cheddar cheese (optional)\nMethod:\nMix the tomatoes, onion, white beans, chili beans, taco seasoning mix, and ranch\ndressing mix in a large pot over medium heat. Bring to a boil. Reduce heat to low, mix in\n\nthe burger crumbles, and continue cooking until heated through. Top with cheese to\nserve\nNutInfoPerServing:\nCalories: 435\nTotal Fat: 15.7g\nCholesterol: 39mg\nSodium: 1691mg\nTotal Carbs: 45g\nDietary Fiber: 10g\nProtein: 29.6g\nServSize: 6\nTotalCookTime: 15 mins\n\"\nRecipe49:\n\"\nName: Zucchini Crab Cakes\nIngredients:\n2 1/2 cups grated zucchini\n1 egg, beaten\n2 tablespoons butter, melted\n1 cup bread crumbs\n1/4 cup minced onion\n1 teaspoon Old Bay Seasoning TM\n1/4 cup all-purpose flour\n1/2 cup vegetable oil for frying\nMethod:\nIn a large bowl, combine zucchini, egg, and butter or margarine. Stir in seasoned\ncrumbs, minced onion, and seasoning. Mix well.\nShape mixture into patties. Dredge in flour.\nIn a medium skillet, heat oil over medium high heat until hot. Fry patties in oil until\ngolden brown on both sides.\nNutInfoPerServing:\nCalories: 195\n\nTotal Fat: 9.2g\nCholesterol: 55mg\nSodium: 357mg\nTotal Carbs: 23g\nDietary Fiber: 1.6g\nProtein: 5.4g\nServSize: 5\nTotalCookTime: 30 mins\n\"\nRecipe50:\n\"\nName: Cabbage Fat-Burning Soup\nIngredients:\n5 carrots, chopped\n3 onions, chopped\n2 (16 ounce) cans whole peeled tomatoes, with liquid\n1 large head cabbage, chopped\n1 (1 ounce) envelope dry onion soup mix\n1 (15 ounce) can cut green beans, drained\n2 quarts tomato juice\n2 green bell peppers, diced\n10 stalks celery, chopped\n1 (14 ounce) can beef broth\nMethod:\nPlace carrots, onions, tomatoes, cabbage, green beans, peppers, and celery in a large pot.\nAdd onion soup mix, tomato juice, beef broth, and enough water to cover vegetables.\nSimmer until vegetables are tender. May be stored in the refrigerator for several days.\nNutInfoPerServing:\nCalories: 93\nTotal Fat: 0.6g\nCholesterol: 0mg\nSodium: 479mg\nTotal Carbs: 21g\n\nDietary Fiber: 6g\nProtein: 4.2g\nServSize: 15\nTotalCookTime: 45 mins\n\"\nRecipe51:\n\"\nName: Healthier Chicken a la King\nIngredients:\n3 tablespoons chopped onion\n2 tablespoons all-purpose flour\n1 teaspoon salt\n1 cup milk\n1/2 pound cooked, cubed chicken meat\n1 hard-boiled egg, sliced\n1 1/3 cups cooked spinach\n3 tablespoons chopped onions\nMethod:\nPlace onion in a medium saucepan over low heat and sprinkle with flour and salt. Stir\ntogether and add milk. Bring to a boil and cook until thickened.\nMix in chicken, egg and spinach. Heat through and serve.\nNutInfoPerServing:\nCalories: 354\nTotal Fat: 9.5g\nCholesterol: 212mg\nSodium: 1424mg\nTotal Carbs: 19.2g\nDietary Fiber: 3.6g\nProtein: 47.1g\nServSize: 2\nTotalCookTime: 20 mins\n\n\"\nRecipe52:\n\"\nName: Spicy Potatoes and Scrambled Eggs\nIngredients:\n2 potatoes, scrubbed\n4 tablespoons vegetable oil, divided\n3 eggs\nsalt and pepper to taste\n1/2 teaspoon ground cumin\n1/2 teaspoon ground coriander\n1/2 teaspoon turmeric powder\n1/2 teaspoon chili powder\n1/2 teaspoon salt\nMethod:\nPoke potatoes with a fork so that their skins are pierced. Microwave potatoes on high\nuntil cooked inside. When potatoes are fully cooked, peel potatoes and cut potatoes to\n1/8 size or to your liking. Set potatoes aside.\nAdd 2 tablespoons oil to skillet and scramble 3 eggs. Add salt and pepper to taste. Keep\nwarm until potatoes are ready.\nIn another skillet, heat 2 tablespoons oil until hot. Then add salt, cumin, coriander and\nturmeric powder. Put in chili powder if you want it really spicy. Add potatoes and cook\nuntil potatoes are crispy and brown. Spicy potatoes and scrambled eggs are now ready\nto serve!\nNutInfoPerServing:\nCalories: 198\nTotal Fat: 17.6g\nCholesterol: 159mg\nSodium: 344mg\nTotal Carbs: 5.3g\nDietary Fiber: 1g\nProtein: 5.2g\nServSize: 4\n\nTotalCookTime: 25 mins\n\"\nRecipe53:\n\"\nName: Spicy Garlic and Pepper Shrimp\nIngredients:\n2 1/2 tablespoons vegetable oil\n1/4 cup water\n1 cup shredded cabbage\n1 tablespoon minced garlic\n8 large fresh shrimp, peeled and deveined\n2 teaspoons crushed red pepper flakes\n2 tablespoons sliced onion\n1 tablespoon chopped fresh cilantro\n1 tablespoon soy sauce\nMethod:\nHeat 1 tablespoon oil in a skillet over high heat. Add cabbage and 1 tablespoon water\nstir-fry for 30 seconds. Remove cabbage from skillet and place on a serving platter.\nHeat the remaining 1 1/2 tablespoons oil in the skillet over high heat. Place the garlic and\nshrimp in the skillet and stir until garlic is lightly browned and shrimp turns pink. Add\npepper, onion, cilantro, soy sauce and remaining water to the skillet. Stir-fry for 10\nseconds. Pour the hot mixture onto the cabbage.\nNutInfoPerServing:\nCalories: 405\nTotal Fat: 35.8g\nCholesterol: 85mg\nSodium: 1031mg\nTotal Carbs: 11.8g\nDietary Fiber: 3.3g\nProtein: 12.2g\nServSize: 1\nTotalCookTime: 35 mins\n\n\"\nRecipe54:\n\"\nName: Cherry Chicken Lettuce Wraps\nIngredients:\n2 tablespoons canola oil\n1 tablespoon minced fresh ginger root\n1 1/4 pounds skinless, boneless chicken breast halves, cut into bite size pieces\n2 tablespoons rice vinegar\n2 tablespoons teriyaki sauce\n1 tablespoon honey\n1 pound dark sweet cherries, pitted and halved\n1 1/2 cups shredded carrots\n1/2 cup chopped green onion\n1/3 cup toasted and sliced almonds\n12 leaves of lettuce\nMethod:\nHeat 1 tablespoon oil in a large skillet over medium high heat. Add ginger and chicken\nand saute until cooked through, about 7 to 10 minutes. Set aside.\nIn a large bowl, whisk together remaining 1 tablespoon oil, vinegar, teriyaki sauce and\nhoney until mixed together. Add chicken mixture, cherries, carrot, green onion and\nalmonds; toss together.\nTo Serve: Spoon 1/12 of the chicken/cherry mixture onto the center of each lettuce leaf;\nroll up leaf around filling and serve.\nNutInfoPerServing:\nCalories: 283\nTotal Fat: 10.9g\nCholesterol: 55mg\nSodium: 129mg\nTotal Carbs: 22.4g\nDietary Fiber: 4.2g\nProtein: 25.1g\nServSize: 6\nTotalCookTime: 25 mins\n\n\"\nRecipe55:\n\"\nName: Montreal Salsa Chicken\nIngredients:\n1 pound boneless, skinless chicken breasts\n1 1/2 teaspoons McCormick Grill Mates Montreal Chicken Seasoning\n1/2 cup mild salsa\n1/3 cup apricot preserves\n1 tablespoon lemon juice\n1 teaspoon McCormick Chili Powder\nMethod:\nSprinkle chicken with Montreal Chicken Seasoning. In a small bowl, stir together salsa,\npreserves, lemon juice, and chili powder.\nGrill chicken over medium coals 6-7 minutes per side or until done. Brush with salsa\nmixture during the last 3 minutes of grilling.\nNutInfoPerServing:\nCalories: 204\nTotal Fat: 1.6g\nCholesterol: 66mg\nSodium: 306mg\nTotal Carbs: 20.4g\nDietary Fiber: 1.2g\nProtein: 27g\nServSize: 4\nTotalCookTime: 20 mins\n\"\nRecipe56:\n\"\nName: Low Fat Chicken Tostadas\nIngredients:\n1 1/2 pounds skinless, boneless chicken breast halves - cooked\n3 cups shredded romaine lettuce\n\n1/2 cup chopped green bell pepper\n1/2 cup chopped tomatoes\n6 (6 inch) flour tortillas\n6 tablespoons fat free sour cream\n6 cups salsa\n6 tablespoons shredded Cheddar cheese\nMethod:\nIn a large bowl combine the chicken, lettuce, green bell pepper, tomatoes and onions.\nMix together and set aside.\nHeat tortillas by placing them in a large dry skillet over medium high heat and turning\nonce until golden and puffy.\nTo Assemble Tostadas: Place a tortilla on a plate, top with some of the chicken mixture\nand garnish with sour cream, salsa and cheese. Repeat with all tortillas.\nNutInfoPerServing:\nCalories: 409\nTotal Fat: 9.2g\nCholesterol: 99mg\nSodium: 1416mg\nTotal Carbs: 39.2g\nDietary Fiber: 6.1g\nProtein: 42.7g\nServSize: 6\nTotalCookTime: 30 mins\n\"\nRecipe57:\n\"\nName: Vegetarian Chickpea Sandwich\nIngredients:\n1 (19 ounce) can garbanzo beans, drained and rinsed\n1 stalk celery, chopped\n1/2 onion, chopped\n1 tablespoon mayonnaise\n1 tablespoon lemon juice\n1 teaspoon dried dill weed\nsalt and pepper to taste\nbread as desired\n\nMethod:\nDrain and rinse chickpeas. Pour chickpeas into a medium size mixing bowl and mash\nwith a fork. Mix in celery, onion, mayonnaise (to taste), lemon juice, dill, salt and pepper\nto taste. Put on bread as desired.\nNutInfoPerServing:\nCalories: 258\nTotal Fat: 5.8g\nCholesterol: 3mg\nSodium: 577mg\nTotal Carbs: 43.5g\nDietary Fiber: 8.5g\nProtein: 9.4g\nServSize: 3\nTotalCookTime: 20 mins\n\"\nRecipe58:\n\"\nName: Barbecue Tofu Sandwiches\nIngredients:\n1 (12 ounce) package extra firm tofu\n3 tablespoons vegetable oil\n1 onion, thinly sliced\n1 1/2 cups barbecue sauce\n6 hamburger buns\nMethod:\nDrain the tofu between paper towels until most of the water has been squeezed out.\nSlice tofu into 1/4 inch thick slices.\nHeat vegetable oil in a large skillet, fry tofu strips until golden brown on both sides. Add\nonion and cook for a few minutes, until onion is at your desired consistency.\nPour in barbeque sauce (use more or less, according to your taste). Cook the mixture for\nten minutes on low and serve on buns.\nNutInfoPerServing:\nCalories: 291\n\nTotal Fat: 13.7g\nCholesterol: 0mg\nSodium: 756mg\nTotal Carbs: 32.3g\nDietary Fiber: 2.5g\nProtein: 10.8g\nServSize: 6\nTotalCookTime: 15 mins\n\"\nRecipe59:\n\"\nName: Chicken a la Creme\nIngredients:\n1/4 cup butter\n1 1/2 pounds chicken breast tenderloins or strips\nsalt and pepper to taste\n1 pint heavy cream\nMethod:\nMelt half of the butter in a large skillet over medium-high heat. Season chicken tenders\nwith salt and pepper, and saute them in butter until golden on all sides, about 10\nminutes. Add the remaining butter, reduce heat to medium, and cook for 5 more\nminutes.\nPour the heavy cream into the skillet, and simmer gently for 5 minutes, stirring\noccasionally, until the sauce has thickened and chicken is cooked through. Best when\nserved with fresh French bread for dipping.\nNutInfoPerServing:\nCalories: 466\nTotal Fat: 38.4g\nCholesterol: 195mg\nSodium: 246mg\nTotal Carbs: 2.2g\nDietary Fiber: 0g\nProtein: 27.9g\nServSize: 6\n\nTotalCookTime: 22 mins\n\"\nRecipe60:\n\"\nName: Grilled Delmonico Steaks\nIngredients:\n1/2 cup olive oil\n1/4 cup Worcestershire sauce\n6 tablespoons soy sauce\n1/4 cup minced garlic\n1/2 medium onion, chopped\n2 tablespoons salt\n1 tablespoon pepper\n1 tablespoon crushed dried rosemary\n3 tablespoons steak seasoning\n3 tablespoons steak sauce (e.g. A-1)\n4 (10 ounce) Delmonico (rib-eye) steaks\nMethod:\nCombine the olive oil, Worcestershire sauce, soy sauce, garlic, onion, salt, pepper,\nrosemary, steak seasoning, and steak sauce in the container of a food processor or\nblender. Process until well blended.\nPrick steaks on both sides with a fork, and place in a shallow container with a lid. Pour\nmarinade over steaks, cover, and refrigerate at least 3 hours, or overnight.\nPreheat an outdoor grill for medium heat, or light charcoal, and wait until coals are\ncompletely white. Soaked wood chips may be added to the coals when ready for a\nsmoky flavor, if you like.\nRemove steaks from marinade, and discard the marinade. Lightly oil the grilling surface,\nand place steaks on the grill. Cover, and grill steaks for about 10 minutes on each side, or\nto your desired degree of doneness.\nNutInfoPerServing:\nCalories: 723\nTotal Fat: 59.7g\nCholesterol: 104mg\nSodium: 7339mg\nTotal Carbs: 14.6g\nDietary Fiber: 1.6g\nProtein: 31.9g\n\nServSize: 4\nTotalCookTime: 210 mins\n\"\n\nAppendix C:\nLactose intolerance: foods to avoid\nBread\nMargarine\nMilk\nCream\nButter\nYogurt whole milk\nCheese\nWhey\nOrange sherbet\nDiabetes: foods to avoid\nBrown sugar\nCorn sweetener\nCorn sugar\nFruit juice concentrate\nHoney\nMolasses\nSugar syrup\nHigh cholesterol: foods to avoid\nEggs\nred meat\nCheese\nButter\nBacon\nBeef\nWhole milk\nCoconut oil\nPalm oil\nSesame oil\nPrawn\nOyster\nCream\nPregnancy: foods to avoid\n\nSushi\nRare beef\nRaw eggs\nMayonnaise\nBlue cheese\nFeta cheese\nShark\nSwordfish\nKing mackerel\nTilefish\nBluefish\nStriped bass\nSalmon\nPike\nTrout\nAnimal liver\nRaw sprout\nHeartburn: foods to avoid\nOrange juice\nLemon\nLemonade\nGrapefruit juice\nCranberry juice\nTomato\nMashed potatoes\nFrench fries\nRaw onion\nGround beef\nMarbled sirloin\nChicken nuggets\nBuffalo wings\nSour cream\nCottage cheese\nMacaroni and cheese\nSpaghetti with sauce\nHigh Blood pressure:\nCheese\nCanned vegetable\nPotato chips\nTortilla chips\nCorn chips\n\nHot dogs\nBacon\nSausage\nSmoked meats\nProcessed meats\nGarlic salt\nOnion salt\nKetchup\nMustard\nPickles\nAppendix D\nRules\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;\n;;;;;;;\n;;;;;;; These are the rules for the recipes ;;;;;;;\n;;;;;;;\n;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule rule1\n(meat yes)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 65))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe1)))\n(defrule rule2\n(meat yes)\n(highCarb yes)\n(meatDairy yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 40))\n(or (cuisine american)\n(cuisine any))\n\n=>\n(assert (recipe Recipe2)))\n(defrule rule3\n(meat yes)\n(cholWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 20))\n(or (cuisine american)\n=>\n(cuisine any))\n(assert (recipe Recipe3)))\n(defrule rule4\n(meat yes)\n(meatDairy yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 120))\n(or (cuisine american)\n=>\n(cuisine any))\n(assert (recipe Recipe4)))\n(defrule rule5\n(highCarb yes)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 35))\n(or (cuisine american)\n=>\n(cuisine any))\n(assert (recipe Recipe5)))\n(defrule rule6\n(meat yes)\n(highCarb yes)\n(pork yes)\n(bpWatch no)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 34))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe6)))\n(defrule rule7\n(meat yes)\n\n(pork yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 82))\n(or (cuisine asian)\n(cuisine any))\n=>\n(assert (recipe Recipe7)))\n(defrule rule8\n(meat yes)\n(dairy yes)\n(maxTime ?x)\n(test (>= ?x 20))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe8)))\n(defrule rule9\n(meat yes)\n(spicy yes)\n(cholWatch no)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 25))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe9)))\n(defrule rule10\n(meat yes)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 105))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe10)))\n(defrule rule11\n(meat yes)\n(highCarb yes)\n(cholWatch no)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe11)))\n(defrule rule12\n(meat yes)\n\n(spicy yes)\n(peanuts yes)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 40))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe12)))\n(defrule rule13\n(meat yes)\n(spicy yes)\n(highCarb yes)\n(cholWatch no)\n(bpWatch no)\n(meatDairy yes)\n(dairy yes)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 120))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe13)))\n(defrule rule14\n(meat yes)\n(spicy yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 15))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe14)))\n(defrule rule15\n(meat yes)\n(spicy yes)\n(meatDairy yes)\n(cholWatch no)\n(dairy yes)\n(peanuts yes)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 25))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe15)))\n\n(defrule rule16\n(meat yes)\n(spicy yes)\n(dairy yes)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 50))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe16)))\n(defrule rule17\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 50))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe17)))\n(defrule rule18\n(spicy yes)\n(seafood yes)\n(cholWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine indian)\n(cuisine any))\n=>\n(assert (recipe Recipe18)))\n(defrule rule19\n(meat yes)\n(spicy yes)\n(dairy yes)\n(hbWatch no)\n(cholWatch no)\n(maxTime ?x)\n(test (>= ?x 45))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe19)))\n(defrule rule20\n(spicy yes)\n(highCarb yes)\n(maxTime ?x)\n(bpWatch no)\n(test (>= ?x 40))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe20)))\n(defrule rule21\n\n(meat yes)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 135))\n(or (cuisine indian)\n(cuisine any))\n=>\n(assert (recipe Recipe21)))\n(defrule rule22\n(spicy yes)\n(highCarb yes)\n(dairy yes)\n(peanuts yes)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 65))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe22)))\n(defrule rule23\n(meat yes)\n(dairy yes)\n(cholWatch no)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 45))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe23)))\n(defrule rule24\n(highCarb yes)\n(dairy yes)\n(cholWatch no)\n(bpWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 40))\n(or (cuisine indian) (cuisine any))\n=>\n(assert (recipe Recipe24)))\n(defrule rule25\n(highCarb yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 60))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe25)))\n(defrule rule26\n(highCarb yes)\n(dairy yes)\n(cholWatch no)\n(hbWatch no)\n(bpWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 10))\n(pregWatch no)\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe26)))\n(defrule rule27\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 2071))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe27)))\n(defrule rule28\n(meat yes)\n(meatDairy yes)\n(pork yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 75))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe28)))\n(defrule rule29\n(meat yes)\n(meatDairy yes)\n(pork yes)\n\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 65))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe29)))\n(defrule rule30\n(meat yes)\n(highCarb yes)\n(meatDairy yes)\n(dairy yes)\n(cholWatch no)\n(bpWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe30)))\n(defrule rule31\n(meat yes)\n(highCarb yes)\n(meatDairy yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 35))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe31)))\n(defrule rule32\n(meat yes)\n(highCarb yes)\n(meatDairy yes)\n(dairy yes)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 40))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe32)))\n\n(defrule rule33\n(meat yes)\n(meatDairy yes)\n(pork yes)\n(dairy yes)\n(cholWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 25))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe33)))\n(defrule rule34\n(meat yes)\n(highCarb yes)\n(pork yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 110))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe34)))\n(defrule rule35\n(meat yes)\n(highCarb yes)\n(meatDairy yes)\n(pork yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 15))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe35)))\n(defrule rule36\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(maxTime ?x)\n(test (>= ?x 50))\n(or (cuisine italian) (cuisine any))\n=>\n\n(assert (recipe Recipe36)))\n(defrule rule37\n(meat yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe37)))\n(defrule rule38\n(meat yes)\n(pork yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 120))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe38)))\n(defrule rule39\n(seafood yes)\n(peanuts yes)\n(maxTime ?x)\n(test (>= ?x 50))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe39)))\n(defrule rule40\n(seafood yes)\n(maxTime ?x)\n(cholWatch no)\n(bpWatch no)\n(test (>= ?x 20))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe40)))\n(defrule rule41\n(spicy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(seafood yes)\n(highFat yes)\n\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine asian)\n(cuisine any))\n=>\n(assert (recipe Recipe41)))\n(defrule rule42\n(highFat yes)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 50))\n(or (cuisine asian)\n(cuisine any))\n=>\n(assert (recipe Recipe42)))\n(defrule rule43\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 25))\n(or (cuisine american)\n=>\n(cuisine any))\n(assert (recipe Recipe43)))\n(defrule rule44\n(hbWatch no)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 25))\n(or (cuisine mediterranean)\n=>\n(cuisine any))\n(assert (recipe Recipe44)))\n(defrule rule45\n(highCarb yes)\n(bpWatch no)\n(peanuts yes)\n(maxTime ?x)\n(test (>= ?x 15))\n(or (cuisine mexican)\n(cuisine any))\n=>\n(assert (recipe Recipe45)))\n(defrule rule46\n(highCarb yes)\n(dairy yes)\n(peanuts yes)\n\n(bpWatch no)\n(cholWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 25))\n(cuisine any)\n=>\n(assert (recipe Recipe46)))\n(defrule rule47\n(highCarb yes)\n(dairy yes)\n(cholWatch no)\n(hbWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine italian) (cuisine any))\n=>\n(assert (recipe Recipe47)))\n(defrule rule48\n(highCarb yes)\n(bpWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 15))\n(or (cuisine mexican)\n(cuisine any))\n=>\n(assert (recipe Recipe48)))\n(defrule rule49\n(dairy yes)\n(cholWatch no)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine american)\n(cuisine any))\n=>\n(assert (recipe Recipe49)))\n(defrule rule50\n(meat yes)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 45))\n(or (cuisine american)\n(cuisine any))\n=>\n(assert (recipe Recipe50)))\n\n(defrule rule51\n(meat yes)\n(meatDairy yes)\n(dairy yes)\n(cholWatch no)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 20))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe51)))\n(defrule rule52\n(spicy yes)\n(dairy yes)\n(cholWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 25))\n(cuisine any)\n=>\n(assert (recipe Recipe52)))\n(defrule rule53\n(spicy yes)\n(seafood yes)\n(highFat yes)\n(cholWatch no)\n(bpWatch no)\n(maxTime ?x)\n(test (>= ?x 35))\n(cuisine any)\n=>\n(assert (recipe Recipe53)))\n(defrule rule54\n(meat yes)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 25))\n(cuisine any)\n=>\n(assert (recipe Recipe54)))\n(defrule rule55\n(meat yes)\n(spicy yes)\n(hbWatch no)\n(maxTime ?x)\n\n(test (>= ?x 34))\n(cuisine any)\n=>\n(assert (recipe Recipe55)))\n(defrule rule56\n(meat yes)\n(meatDairy yes)\n(dairy yes)\n(bpWatch no)\n(cholWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 30))\n(or (cuisine mexican)\n(cuisine any))\n=>\n(assert (recipe Recipe56)))\n(defrule rule57\n(highCarb yes)\n(dairy yes)\n(peanuts yes)\n(pregWatch no)\n(hbWatch no)\n(maxTime ?x)\n(test (>= ?x 20))\n(cuisine any)\n=>\n(assert (recipe Recipe57)))\n(defrule rule58\n(maxTime ?x)\n(bpWatch no)\n(test (>= ?x 15))\n(or (cuisine asian) (cuisine any))\n=>\n(assert (recipe Recipe58)))\n(defrule rule59\n(meat yes)\n(meatDairy yes)\n(dairy yes)\n(cholWatch no)\n(hbWatch no)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 22))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe59)))\n(defrule rule60\n\n(meat yes)\n(cholWatch no)\n(bpWatch no)\n(highCal yes)\n(highFat yes)\n(maxTime ?x)\n(test (>= ?x 210))\n(or (cuisine american) (cuisine any))\n=>\n(assert (recipe Recipe60)))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;\n;;;;;;;\n;;;;;;; These are the intermediary rules\n;;;;;;;\n;;;;;;;\n;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule rule201\n(diabetes no)\n=>\n(assert (highCarb yes)))\n(defrule rule202\n(vegetarian no)\n=>\n(assert (meat yes)))\n(defrule rule203\n(lactoseIntolerant no)\n=>\n(assert (dairy yes)))\n(defrule rule204\n(bloodPressure no)\n=>\n(assert (bpWatch no)))\n(defrule rule205\n(heartburn no)\n=>\n(assert (hbWatch no)))\n(defrule rule206\n(cholesterol no)\n=>\n(assert (cholWatch no)))\n(defrule rule207\n(weightWatch no)\n=>\n(assert (highCal yes)\n(highFat yes)))\n(defrule rule208\n(pregnant no)\n=>\n(assert (pregWatch no)))\n\n(defrule rule209\n(healthConstraints no)\n=>\n(assert (cholWatch no)\n(hbWatch no)\n(bpWatch no)\n(pregWatch no)\n(diabetes no)\n(lactoseIntolerant no)))\n(defrule rule210\n(religiousConstraints no)\n=>\n(assert (alcohol yes)\n(meatDairy yes)\n(pork yes)))\n(defrule rule211\n(allergies no)\n=>\n(assert (seafood yes)\n(peanuts yes)))\n(defrule rule212\n(religion none)\n=>\n(assert (religiousConstraints no)))\n\nAppendix E\nSource Code\n#@author Saad Shakhshir and Saba Gul\n#file: thought4food.py\nimport clips\nyesNoList = [\"yes\", \"y\", \"no\", \"n\"]\nyesList = yesNoList[0:2]\nnoList = yesNoList[2:]\ndef formatNormal(string, response):\n\"\"\"Formats the string by just inserting the response\"\"\"\nif response.lower() in yesList:\nreturn string % 'yes'\nelif response.lower() in noList:\nreturn string % 'no'\nelse: return string % response\ndef formatInverted(string, response):\n\"\"\"Formats the string by inserting an inversion of the response.\nSo if the reponse was\nno, then the input in the string would be yes, and vice-versa\"\"\"\nif response.lower() in yesList:\nreturn string % 'no'\nelse: return string % 'yes'\ndef formatReligion(string, response):\n\"\"\"Formats the string by inserting the appropriate religion based\non the response.\nJewish[J], Muslim[M], or None[N]\"\"\"\nif response.lower() == \"j\":\nreturn string % \"jewish\"\nelif response.lower() == \"m\":\nreturn string % \"muslim\"\nelse: return string % \"none\"\ndef formatCuisine(string, response):\n\"\"\"Formats the string by inserting the appropriate cuisine type\nbased on the response.\nAmerican[A],\nAsian[AS],\nIndian[I],\nItalian[IT],\nMexican[M],\nMediterranean[ME], or Any[AN]?\"\"\"\nif response.lower() == \"a\":\nreturn string % \"american\"\nelif response.lower() == \"as\":\nreturn string % \"asian\"\nelif response.lower() == \"i\":\nreturn string % \"indian\"\nelif response.lower() == \"it\":\nreturn string % \"italian\"\nelif response.lower() == \"m\":\n\nreturn string % \"mexican\"\nelif response.lower() == \"me\":\nreturn string % \"mediterranean\"\nelse: return string % \"any\"\nclass Question:\n\"\"\"Stores a question\"\"\"\ndef\n__init__(self,\nquestion,\nlegalAnswer,\nassertionFormat,\nassertionFunction):\n\"\"\"question is a string, legalAnswers is a function that takes\nin one argument\nand returns True if the argument is a legal answer to the\nquestion\nassertionFormat is a formatted string that represents the\nassertion to be entered\ninto the clips database after asking this question\nassertionFunction is a function that takes in 2 arguments, the\nassertionFormat and the\nresponse to the question and returns the assertion string\"\"\"\nself.question = question\nself.legalAnswer = legalAnswer\nself.assertionFormat = assertionFormat\nself.assertionFunction = assertionFunction\ndef generateAssertion(self, response):\n\"\"\" Generates and returns the clips assertion for this question\nbased on response\"\"\"\nreturn\nself.assertionFunction(self.assertionFormat[:],\nresponse)\nclass YesNoNormalQuestion(Question):\n\"\"\" Creates a question that requires a yes/no answer.\nThe\nassertion will take\nthe answer as it is\"\"\"\ndef __init__(self, question, assertionFormat):\nQuestion.__init__(self,\nquestion,\nlambda\nx:\nx.lower()\nin\nyesNoList, assertionFormat, formatNormal)\nclass YesNoInvertedQuestion(Question):\n\"\"\" Creates a question that requires a yes/no answer.\nThe\nassertion will take\nthe response and invert it yes->no and no->yes\"\"\"\ndef __init__(self, question, assertionFormat):\nQuestion.__init__(self,\nquestion,\nlambda\nx:\nx.lower()\nin\nyesNoList, assertionFormat, formatInverted)\ndef superdoc(module):\n\"\"\"Prints the documentation for each attribute in the module\"\"\"\nfor i in dir(module):\nprint \"/\" * 60\nprint \"/\"*((60 - len(i))//2) + i + \"/\"*((60 - len(i))//2)\nprint \"/\" * 60\nprint getattr(module, i).__doc__\nprint \"\\n\\n\"\n\nclass Recipe:\n\"\"\" A class to hold recipes \"\"\"\ndef\n__init__(self,\nidentifier,\nname,\ningredients,\nmethod,\nnutrition, servings, time):\nself.identifier = identifier\nself.name = name\nself.ingredients = ingredients\nself.method = method\nself.nutrition = nutrition\nself.servings = servings\nself.time = time\ndef __repr__(self):\nreturn\n\"Name:\n\"\n+\nself.name\n+\n\"\\n\\nIngredients:\\n\"\n+\nself.ingredients + \"\\n\\nMethod:\\n\" + self.method + \"\\n\\nNutritional\nInformation per Serving:\\n\" + self.nutrition + \"\\n\\nServing Size: \" +\nself.servings + \"\\n\\nTotal Cooking Time: \" + self.time\ndef readRecipesFromFile(filename):\n\"\"\" Reads the recipes from filename and returns a dictionary of\nRecipe objects indexed by identifier\"\"\"\nrecipes = {}\nrecipeFile = open(filename, 'r')\nidentifier, name, ingredients, method, nutrition, servings, time =\n\"\",\"\",\"\",\"\",\"\",\"\",\"\"\nfor i in recipeFile:\nif i.startswith(\"Recipe\"):\nidentifier = i.strip()\nidentifier = identifier.strip(\": \")\nelif i.startswith(\"Name:\"):\nname = i[len(\"Name:\"):].strip()\nelif i.startswith(\"Ingredients:\"):\nline = recipeFile.next()\nwhile(line.strip() != \"\"):\ningredients += line\nline = recipeFile.next()\ningredients = ingredients.strip()\nelif i.startswith(\"Method:\"):\nline = recipeFile.next()\nwhile(line.strip() != \"\"):\nmethod += line\nline = recipeFile.next()\nmethod = method.strip()\nelif i.startswith(\"NutInfoPerServing:\"):\nline = recipeFile.next()\nwhile(line.strip() != \"\"):\nnutrition += line\nline = recipeFile.next()\nnutrition = nutrition.strip()\nelif i.startswith(\"ServSize:\"):\nservings = i[len(\"ServSize:\"):].strip()\nelif i.startswith(\"TotalCookTime:\"):\ntime = i[len(\"TotalCookTime:\"):].strip()\nrecipe = Recipe(identifier, name, ingredients, method,\nnutrition, servings, time)\nrecipes[recipe.identifier] = recipe\n\nidentifier, name, ingredients, method, nutrition, servings,\ntime = \"\",\"\",\"\",\"\",\"\",\"\",\"\"\nrecipeFile.close()\nreturn recipes\ndef askAndAssert(question):\n\"\"\"Ask the user a question use the response to create an assertion\nin the clips database\"\"\"\nresponse = raw_input(question.question+\"\\n\")\nif question.legalAnswer(response):\nclips.Assert(question.generateAssertion(response))\nelse:\nprint \"\"\"I'm sorry.\nI was unable to understand your answer.\nPlease try again.\"\"\"\naskAndAssert(question)\ndef isInteger(string):\n\"\"\"Tests if the string is an integer and returns True if it is.\"\"\"\ntry:\nint(string)\nexcept ValueError:\nreturn False\nreturn True\nassertion_diabetes = \"(diabetes %s)\"\nassertion_vegetarian = \"(vegetarian %s)\"\nassertion_spicy = \"(spicy %s)\"\nassertion_time = \"(maxTime %s)\"\nassertion_meatAndDairy = \"(meatDairy %s)\"\nassertion_alcohol = \"(alcohol %s)\"\nassertion_pork = \"(pork %s)\"\nassertion_lactoseIntolerant = \"(lactoseIntolerant %s)\"\nassertion_bloodPressure = \"(bloodPressure %s)\"\nassertion_heartburn = \"(heartburn %s)\"\nassertion_cholesterol = \"(cholesterol %s)\"\nassertion_weightWatch = \"(weightWatch %s)\"\nassertion_peanuts = \"(peanuts %s)\"\nassertion_cuisine = \"(cuisine %s)\"\nassertion_getIngredients = \"(getIngredients %s)\"\nassertion_religion = \"(religion %s)\"\nassertion_seafood = \"(seafood %s)\"\nassertion_pregnant = \"(pregnant %s)\"\nassertion_religiousConstraints = \"(religiousConstraints %s)\"\nassertion_healthConstraints = \"(healthConstraints %s)\"\nassertion_allergies = \"(allergies %s)\"\nassertion_cravings = \"(cravings %s)\"\nquestion_diabetes\n=\nYesNoNormalQuestion(\"Do\nyou\nhave\nDiabetes?\",\nassertion_diabetes)\nquestion_vegetarian = YesNoNormalQuestion(\"Are you a vegetarian?\",\nassertion_vegetarian)\nquestion_spicy = YesNoInvertedQuestion(\"Do you mind spicy food?\",\nassertion_spicy)\n\nquestion_time = Question(\"What is the maximum amount of time you would\nlike to spend cooking (in minutes)?\", isInteger, assertion_time,\nformatNormal)\nquestion_meatAndDairy = YesNoInvertedQuestion( \"Do you mind if there\nare\nboth\nmeat\nand\ndairy\nproducts\nin\nyour\ndish?\",\nassertion_meatAndDairy)\nquestion_alcohol = YesNoInvertedQuestion(\"Do you mind if there is\nalcohol in your dish?\", assertion_alcohol)\nquestion_pork = YesNoInvertedQuestion(\"Do you mind if there is pork in\nyour dish?\", assertion_pork)\nquestion_lactoseIntolerant\n=\nYesNoNormalQuestion(\"Are\nyou\nlactose\n\nintolerant?\", assertion_lactoseIntolerant)\nquestion_bloodPressure = YesNoNormalQuestion(\"Do you have high blood\npressure?\", assertion_bloodPressure)\nquestion_heartburn\n=\nYesNoNormalQuestion(\"Do\nyou\nsuffer\nfrom\n\nheartburn?\", assertion_heartburn)\nquestion_cholesterol\n=\nYesNoNormalQuestion(\"Do\nyou\nhave\nhigh\ncholesterol?\", assertion_cholesterol)\nquestion_weightWatch = YesNoNormalQuestion(\"Are you currently trying to\nlose weight?\", assertion_weightWatch)\nquestion_cuisine = Question(\"What type of cuisine would you like?\nAmerican[A],\nAsian[AS],\nIndian[I],\nItalian[IT],\nMexican[M],\nMediterranean[ME], or Any[AN]?\", lambda x: x.lower() in [\"a\", \"as\",\n\"i\", \"it\", \"m\", \"me\", \"an\"], assertion_cuisine, formatCuisine)\n#question_getIngredients = YesNoNormalQuestion(\"Would you like to go\nout for ingredients\", assertion_getIngredients)\nquestion_religion = Question(\"\"\"Are you a follower of any of the\nfollowing faiths?\nPlease select Jewish[J], Muslim[M], or Neither[N].\"\"\", lambda x:\nx.lower() in [\"j\", \"m\", \"n\"], assertion_religion, formatReligion)\nquestion_seafood\n=\nYesNoInvertedQuestion(\"Are\nyou\nallergic\nto\n\nseafood?\", assertion_seafood)\nquestion_peanuts\n=\nYesNoInvertedQuestion(\"Are\nyou\nallergic\nto\n\npeanuts?\", assertion_peanuts)\nquestion_pregnant\n=\nYesNoNormalQuestion(\"Are\nyou\npregnant?\",\nassertion_pregnant)\nquestion_religiousConstraints = YesNoNormalQuestion(\"Do you have any\nreligious dietary constraints?\", assertion_religiousConstraints)\nquestion_healthConstraints\n=\nYesNoNormalQuestion(\"Do\nyou\nhave\nany\nhealth-related dietary constraints?\", assertion_healthConstraints)\nquestion_allergies = YesNoNormalQuestion(\"Do you have any allergies to\nspecific foods?\", assertion_allergies)\nquestion_cravings = Question(\"\"\"If you have any specific cravings,\nplease enter them now. For example,\nif you would like chicken and oregano then type: chicken oregano\nIf you have no cravings then please type: no\"\"\", lambda x: True,\nassertion_cravings, formatNormal)\nquestions\n=\n(question_cuisine,\nquestion_spicy,\nquestion_time,\nquestion_vegetarian,\nquestion_weightWatch,\nquestion_religiousConstraints,\nquestion_healthConstraints,\nquestion_allergies)\nquestionlist = []\nquestions_muslim = (question_alcohol, question_pork)\nquestions_jewish = (question_pork, question_meatAndDairy)\n\nquestions_healthConstraints\n=\n(question_diabetes,\nquestion_lactoseIntolerant, question_heartburn, question_bloodPressure,\nquestion_cholesterol, question_pregnant)\nquestions_allergies = (question_seafood, question_peanuts)\nrecipes = readRecipesFromFile(\"recipesDatabase.txt\")\ndef getFact(fact):\n\"\"\"Returns the clips fact object corresponding to the fact string\npassed in\"\"\"\nfactList = clips.FactList()\nindex = [i.CleanPPForm() for i in factList].index(fact)\nreturn factList.index(index)\ndef getFacts(identifier):\n\"\"\"Returns a list of facts that start with identifier\"\"\"\nreturn\nfilter(lambda\nx:\nx.CleanPPForm().startswith(\"(\"\n+\nidentifier), clips.FactList())\ndef getAssertion(fact):\n\"\"\" Returns the second part of the fact.\nFact = (<tag>\n<assertion>), e.g if fact1=(diabetes no), then\ngetAssertion(fact1) = no\"\"\"\nindex = fact.CleanPPForm().index(\" \")\nassertion = fact.CleanPPForm()[index:].strip()\nreturn assertion.strip(\") \")\ndef checkCravings(cravings, recipe):\n\"\"\"Returns True if all the cravings are in the recipe. Otherwise\nreturns false\"\"\"\nfor i in cravings:\nif not i.lower() in recipe.ingredients.lower():\nreturn False\nreturn True\ndef printAllRecipes(cravings):\nresults = getFacts(\"recipe\")\ntoPrint = []\nfor i in results:\ntoPrint.append(recipes[getAssertion(i)])\nif len(toPrint) != 0:\nif cravings:\naskAndAssert(question_cravings)\ncravings = getFacts(\"cravings\")\nif len(cravings) != 0:\ncravings = getAssertion(cravings[0])\nif cravings not in noList:\ncravings = cravings.split()\ntoPrint = filter(lambda x: checkCravings(cravings,\nx), toPrint)\nif len(toPrint) != 0:\nprint\n\"Congratulations,\nwe\nhave\nfound\nthe\nfollowing\nrecipe(s):\\n\\n\"\nfor i in toPrint:\nprint i\nprint \"\\n\" + \"*\"*60 + \"\\n\\n\"\nelse:\n\nprint \"I'm sorry, we were unable to find a recipe that meets\nyour specific requirements\"\ndef adjustQuestionList(question, li):\n\"\"\" Adjusts the question list based on the answer to the previous\nquestion\"\"\"\nindex = li.index(question)\nif question is question_religiousConstraints:\nresults = getFacts(\"religiousConstraints\")\nif len(results) == 0:\nreturn\nassertion = getAssertion(results[0])\nif assertion.lower() in yesList:\nli.insert(index+1, question_religion)\nresults[0].Retract()\nelif question is question_religion:\nresults = getFacts(\"religion\")\nif len(results) == 0:\nreturn\nassertion = getAssertion(results[0])\nif assertion.lower() == \"muslim\":\nfor i in questions_muslim:\nli.insert(index+1, i)\nelif assertion.lower() == \"jewish\":\nfor i in questions_jewish:\nli.insert(index+1, i)\nresults[0].Retract()\nelif question is question_healthConstraints:\nresults = getFacts(\"healthConstraints\")\nif len(results) == 0:\nreturn\nassertion = getAssertion(results[0])\nif assertion.lower() in yesList:\nfor i in questions_healthConstraints:\nli.insert(index+1, i)\nresults[0].Retract()\nelif question is question_allergies:\nresults = getFacts(\"allergies\")\nif len(results) == 0:\nreturn\nassertion = getAssertion(results[0])\nif assertion.lower() in yesList:\nfor i in questions_allergies:\nli.insert(index+1, i)\nresults[0].Retract()\ndef runThought4Food(cravings=False):\nclips.Clear()\nclips.BatchStar(\"ruleset.txt\")\n#clips.BatchStar(\"intermediaries.txt\")\nquestionList = list(questions)\nfor i in questionList:\naskAndAssert(i)\nclips.Run()\nadjustQuestionList(i, questionList)\nprintAllRecipes(cravings)\n\nif __name__ == '__main__':\nrunThought4Food()"
    },
    {
      "category": "Resource",
      "title": "haldarfin_report.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/0306dff5cc7320ff7f44e016e5cb067f_haldarfin_report.pdf",
      "content": "Abhra Haldar\n6.871 Final Project - Paper\nsEElect:\nAn Expert System for Recommending Course VI Classes\nIntroduction\nThis paper describes sEElect, a rule-based expert system for recommending classes\nwithin MIT's course VI, the department of Electrical Engineering and Computer Science\n(EECS).\nOverview of Problem\nMany students come to MIT knowing its reputation for EECS, and are thus eager to\nmajor in this field. Yet EECS has over 100 classes and five very separate acknowledged\nsubdivisions; mapping out a path blindly among these classes is an overwhelming task\nfor beginning students.\nThe primary reason for this difficulty is that freshmen usually have neither a clear idea of\nwhat an EECS major entails in the long run, or of their own individual interests within\nthe field. The goal of sEElect is to guide incoming freshmen that have committed to an\nEECS major to the classes that are most appropriate for the student, given his talents and\ngoals.\nThe Role of sEElect\nsEElect is a rule-based system built on the Joshua Lisp framework, and probes the\nstudent with questions directed at revealing the student's preferred learning style and\npotentially interesting EECS concentrations. These questions require a fair amount of\nexpertise in two areas: 1) student learning habits, and 2) EECS subdisciplines. The\nquestions were constructed specifically with this expertise. Therefore, because of this\nknowledge, sEElect is capable of inferring things about the student that would not be\neasily expressed or extracted in a direct question-answer setting.\nA sample run of sEElect would involve the student answering a varied set of questions\nand receiving an ordered list of classes that the system deems 'suitable' for the student.\nThis term is highly subjective, of course, so now we look in further detail at how sEElect\nmakes it choices.\nProblem-solving Paradigm\nMost Suitable Classes\nThere are a variety of metrics we can use to measure suitability of a class for a student.\nFor instance, if the student is concerned only with getting good marks, then the primary\n\nreasoning would be what classes the student usually performs well in. On the other hand,\nif the student is interested only in learning about his preferred field, the metric would\ndetermine what that preferred field might is.\nIn this problem, sEElect recommends classes that potentially have the most positive\nlearning experience for the student. This involves two separate metrics used in tandem:\n- What classroom setting is most effective learning environment for the student?\n- What EECS field is most interesting to the student?\nThe following two sections explore these concepts in detail.\nClassroom settings/Learning styles\nDifferent students undoubtedly have different environments in which they learn the most\neffectively. One might find reading the assigned textbook to be the best way to learn,\nwhereas another might not understand the material unless presented with an opportunity\nto apply the theory (in a lab setting for instance). Similarly, classes can be broken down\nby how much they emphasize each of these different styles.\nThere is myriad number of learning styles possible, and a brief overview of the ones\nconsidered by sEElect is presented below:\n- Book-based : student learns best by reading the assigned material in the textbook\n- Hands-on : student learns best when forced to apply the material to a real-world\nproblem\n- Lecture-based : student learns best during lectures\n- Discussion-based : student learns best in classes where the format is teacher-\ndirected group discussion\n- Independent : student learns best when given an open-ended problem, w/ limited\ninstructor supervision\nThe key realization for this problem is that none of these qualities are absolute; rather,\nthey exist in varying degrees in different students. A student might learn best w/ a\ncombination of these strategies. Therefore, there is no easy notion of a set of rules that\nwill deterministically tell us which of these groups a student belongs to. The job of\nsEElect is to reason which one among these is the most effective for a given student, and\nto pick out the classes that cater to this learning style. In this reasoning process, it assigns\ncertainty values to each style, reflecting the strength of the belief that the student learns\nbest with that style.\nFor an informal example (a formal one is given later), assume that sEElect reasons\nthrough its questions that a student is a book-based learner. It would then filter out\neverything but the classes that, for instance, have excellent textbooks.\nNote one drawback of the system as it currently stands. We just concluded that all of\nthese styles contribute to the student's optimal learning environment. Yet sEElect is only\n\ncapable of inferring the one style that features most prominently in the student. Although\nsorting by style would appear to be a simple solution, the problem lies in combining\nstyles w/ the EECS disciplines (next section). Currently, sEElect simply chooses the\nclasses corresponding to both the highest ranked learning style and discipline. Sorting\nwith two such factors becomes a non-trivial problem with no apparent solution.\nAnother, classes typically offer complex amalgams of all these styles. Ideally, sEElect\nwould be able to analyze the breakdown of these styles for the student and return the\nclasses whose breakdowns are most similar. For instance, if the student were equally\ncomfortable in the book-based and hands-on learning environments, a more capable\nprogram would match courses that have textbooks and labs of \"comparable educational\nvalue\". The ambiguity of this language indicates one of the main problems with this\nproposed idea. Perhaps with more expertise and trial, these class breakdowns could be\naccurately sketched.\nMatching EECS Subdisciplines\nA course could match a student's learning style perfectly, but if the material does not\nengage the student, the class of limited value. Thus another crucial task for sEElect is the\nidentification of the most interesting subdiscipline of EECS for our student. Once this\ndetermination is made, sEElect considers only those classes in this category.\nAccording to MIT's own 'Area' breakdowns there are five acknowledged subcategories of\nEECS. However, these are too broad to be useful for this program.\nThe breakdown sEElect uses is presented in Figure 1:\nEE\nCS\nElectronics\nTheory\nArtificial\nIntelligence\nDistributed\nSystems\nDevice\nPhysics\nSignal\nProcessing\nFigure 1: EECS Subcategory Breakdown\nMuch like with learning styles, students prefer the different subcategories in degrees.\nsEElect, in reasoning about his most preferred subcategory, ranks each with a certainty\nvalue. The same problem arises as in learning styles as well. Although preferences for the\ndifferent subcategories are in degrees, sEElect makes an absolute choice for the most\n\npreferred. This is due mainly to the difficulty of sorting the combination of the two sets\nof ranked factors.\nTradeoffs\nOne potentially interesting issue not explored by sEElect is the interaction between these\ntwo factors: optimal learning style and preferred subdisciplines. As mentioned, the\nprogram currently takes the intersection of the sets of classes corresponding to the\nmaximum certainty element in each case. A smarter version of the program would\nattempt to infer the tradeoffs a student is willing to make between the two factors.\nFor instance, if a student is so interested in device physics that he is willing to take\nclasses that might not cater to his optimal learning style, this program would adjust its\noutput accordingly (in this case by returning all classes in device physics).\nBasic Problem-Solving Strategy\nWith the conceptual goal of the system now established, we can look at how exactly\nsEElect chooses classes.\nEach of the elements in the two sets of factors has its own boolean-valued predicate in\nJoshua. One example, of hands-on learning style, is illustrated below:\n(define-predicate-with-ancillary-info (hands-on value-is-boolean-mixin)\n:possessive-suffix \"\" :prompt 1 \"SHOULDN'T SEE THIS\"\n:prompt2 \"\" :prompt3 \"\")\nThese predicates all take the boolean value true, since they all exist in some degree in\neach student. Note immediately the awkwardness of representing these factors as\npredicates (essentially variables), but that all have the same value. This indicates the\nawkwardness of this representation, and is explored later in the paper. The next step is\ngenerate a set of rules that allow us to determine this degree approximately. The natural\napproach here is backward-chaining, because we have our desired conclusion ([hands-on\n?user YES]), and want to check whether any other predicates imply this conclusion.\nHere is a sample rule for this hands-on predication:\n(defrule hands-on-sub1 (:backward :certainty .3 :importance 100)\nif [and [tinkers ?user YES]\n(> (get-certainty [tinkers ?user YES]) .2)]\nthen [hands-on ?user YES])\nThis rule illustrates the key strategies used in sEElect. First and foremost, each of the\npredicates in both factors is divided into a set of subgoals. These represent predicates\nthat, if true with some reasonable certainty, lead to a higher certainty for our factor\npredicate. The subgoals are then further subdivided into more predicates.\nIn this example, [tinkers ?user YES] is the subgoal that, if true, supports the\nconclusion [hands-on ?user YES]. As will be shown in the next section, [tinkers\n\n?user YES] is broken down into more subgoals. By backward-chaining, we try to show\n[tinkers ?user YES] to conclude [hands-on ?user YES]. Likewise, we try to show\nthe subgoals of [tinkers ?user YES] to assert that it is a valid conclusion. Ultimately,\nwe reach a base set of predicates with no subgoals. These will then be posed as questions\nto the user. This chain of reasoning is demonstrated in Figure 2.\n[hands-on ?user YES]\n[tinkers ?user YES]\n[take-things-apart\n?user YES]\n[entered-design\ncomp ?user YES]\nBackward\nChaining\nPose as questions to user\nFigure 2: Backward chaining until you reach predicates with no subgoals\nOne of the preliminary goals of select is to weigh the two sets of factors by certainty.\nFortunately, this is accomplished easily through the :certainty keyword in Joshua\nrules. To illustrate, assume that [hands-on ?user YES] has three separate backward\nchaining rules (or equivalently, three separate subgoals). If each of these carry a certainty\nof .3 for instance, then using the algebra of certainty, here are the possible resulting\ncertainties for this predication:\nSubgoals satisfied\nResulting Certainty\n.51 + .3(1-.51) = .657\n.3 + .3(1-.3) = .51\n.3\nNote that if none of the goals are satisfied, the predication is not entered into the Joshua\ndatabase. Therefore, each of the predications that have subgoals have a special\ninitialization rule that sets up the predication with some negligible certainty after the\nother rules have failed to fire. Also notice that a failed subgoal carries no negative\ncertainty, primarily for convenience, since the certainties are highly subjective and\ninexact in any case.\n\nOne final point regarding certainties: in the sample rule provided, note the conditional in\nthe second line of the if statement. This type of check allows us to establish certainties for\nsubgoals and only to fire a rule if we find the certainty high enough. This is equivalent to\ntesting how strongly we believe a subgoal is met. Of course, predications with no\nsubgoals have certainty 1, since they are directly answered by the user.\nThese are the main Joshua mechanisms used in sEElect. Once certainty values are\nachieved for every single predicate in each factor, we rank each set and choose the\npredications that have the highest certainty (one learning style and one subdiscipline). We\nthen return the intersection of the set of classes corresponding to these two as the\nrecommended classes for the student.\nIn summary, here are the steps used in created sEElect's rules database:\n1. Set up boolean predicates for each learning style and subdiscipline.\n2. Identify conditions (subgoals )that could be used to support any of these\npredicates. Instantiate them as predicates as well and write an appropriate\nbackward-chaining rule having the subgoal as the antecedent and our boolean\npredicate as the consequent. If possible, further divide subgoals into more\nsubgoals and write additional backward-chaining rules.\n3. Try out different certainties corresponding to different numbers of subgoals\nsatisfied. This is a completely subjective process and there is no exact way to do\nthis. Since all the boolean predicates will be compared on the same scale, we try\nto maintain some consistency in choosing certainty values.\nDomain Knowledge\nThe two primary forms of domain knowledge in this application come from the two\nseparate factors: learning style and preferred discipline. For the first, the knowledge is\n\"what determines a student's optimal learning environment?.\"\nThe second required some outside sources. The HKN Underground Guide to Course VI\nhad comprehensive listings about classes, and I used this resource to classify courses into\na particular discipline category. I also used the guide to classify courses into different\nlearning style categories.\nRules Database\nThe following section contains a comprehensive breakdown of all the rules used in the\nsystem and the reasoning behind them. For each predicate in either factor, I begin by\nshowing the subgoals and informally explaining the reasoning behind them. Next, I give\na screenshot of program execution containing only the questions that establish that\nparticular predicate.\n\nLearning Style Rules\nAs mentioned in the previous section, each predicate was broken down into subgoals, and\nfurther if possible. The subgoals for hands-on learning are the following:\n- Tinkering: When a person enjoys building things or modifying things in some\nway, that supports the conclusion that they are hands-on learners.\n<broken down further into>\no Taken things apart - If the student has taken something apart and\nreassembled it to get a better understanding of how it works, that is\nevidence that he enjoys tinkering with things.\no Enjoys playing w/ Legos and or robotics kits - Once again, shows that he\nenjoys building things\no Entered design competition w/ something mechanical or electrical -\nEnjoys building things\no Enjoys writing software - another form of tinkering, although not with\nanything tangible or physical; still a predilection for hands-on tasks\no Science fair entry an experiment rather than a literature survey or topic\noverview: shows he would rather do something concrete rather than just\nread about it\nQuestions from actual execution (from subgoals listed above):\n- Interest in hands-on tasks: An enthusiastic hands-on learner would acquaint\nhimself with tasks that require hands-on skills and know how\no <broken down further into>\no Knows how household electricity works - Shows interest in a hands-on\nfield\no Upgraded computer himself - Shows willingness to engage in hands-on\ntask\no Upgraded some part of automobile - Ditto\no Liked high school labs more than classes - Labs obviously provide more\nemphasis on hands-on skills than do typical classes\no Explored how common everyday appliances work - Only those who have\nan interest in hands-on tasks would bother to find out the workings of\neveryday appliances\no Popular Mechanics vs. Scientific American - The former has a greater\nemphasis on applications and doing (hands-on skills) while the latter is\nmore theory-oriented\n\n- Thought processes like a hands-on learner: Hands-on learners have particular\nways of thinking about things that are different from those who rely on book\nknowledge\no Considers HS Math useless - Those who would think this probably do not\nsee a need for theory that they might not put into practice in the real\nworld. They concern themselves more with things that have concrete\napplications.\no Reads examples before finishing chapter - Standard example of learning\nby doing\no Design breakdown - Hands-on learners would try to break things down\ninto smaller pieces and evaluate how they fit together\no Try something before consulting another person or the manual - Hands-\non learners would normally try building something without checking the\nmanual, only doing so when running into problems\nThe subgoals for book-based learning are now presented with their subgoals below:\n- Classroom behavior conducive to book learning\no Cramming or procrastinating - Those who procrastinate on homework\nand exam preparation have little else but the textbook to rely on\no Low lecture attendance - Similarly, the textbook is the only resource for\nthose who miss many lectures\no Use old textbooks in current classes - Indicates that student is reliant on\ntextbook knowledge as his primary resource\no Lack of focus during lectures - Similar to low lecture attendance, if\nstudents \"zone out\" during class, they must rely on the textbook to catch\nup on the material\n\n- Thought processes like a book learner\no High school math useful - This indicates that the student values\nknowledge from textbooks that might not necessarily be used in daily life\n(opposite of a hands-on learner)\no Reads chapter material before looking at example problems - Similarly\nindicates that student feels compelled to know all the book material\nbefore simply applying it\no Reads manual before trying to do something - <Same reason as last>\no Enjoys reading books - self-explanatory\nThe subgoals for lecturer-based learning are now presented:\n- Takes notes and consults them during exam prep: This would indicate that the\nquality of the lecturer in terms of, say, blackboard technique, is important to the\nstudent.\n- Considers classmates' experiences with their lecturers in choosing classes: This\nindicates that the student finds the lecturer to be an important part of the learning\nexperience, since his class choices may hinge on his friends' opinion of the\nlecturers.\n- Sits near the front of the class: Indicates that the student finds it important to\nconcentrate on exactly what the lecturer is saying\nThe subgoals for independent learning are now shown:\n- Self-motivated - Can push himself to learn the material without constant attention\nor supervision from teaching staff\no Can keep up in a class without many assignments: Shows that he does not\nneed to be forced to keep up with the material through periodic problem\nsets\no Reads and researches interesting material on his own, independent of\nclass: Once again, demonstrates his ability to motivate himself without\nbeing forced\n\no Learns more than strictly necessary in classes that interest him: One test\nof this is to ask: when the teacher prefaces a section of material with \"You\nwill not be tested on this\", does the student immediately stop paying\nattention? The sign of a self-motivated student is one who would continue\nto focus if the material engaged him.\nThe subgoals for discussion-based learning are now presented:\n- Functions well in a team-\na. Enjoys working in a team - Self explanatory\nb. Normally works in study groups for problem sets or exam preparation:\nAlso indicates that the student works well in a team environment\nc. Understands better by explaining to others - If this is the case, then the\nteam environment is beneficial for the student\n- Lecture attendance is good - if the student does not attend classes regularly, then\na class centered on discussion will not be of much use to him\nThe process of establishing most-preferred discipline is slightly different. First off, there\nare two predicate values representing EE and CS. A series of questions determines which\nof the two are more suitable for the student (i.e. produce a higher certainty).\nOnce that is established, we concentrate within the three subdisciplines in that most\nsuitable field. A set of 2 (EE) or 3 (CS) multiple choice questions are used to determine\nthe most preferred discipline by highest certainty.\nAfter both discipline and learning style are established, all that it remains is to take the\nintersection of the class lists corresponding to each predicate. Instructions on how exactly\nto run the application on Joshua are given at the end of the paper.\n\nReflections\nWhat went well\nThe problem domain was well-suited to modular breakup, as in the two separate factors.\nFor the most part, I could treat the learning style and preferred discipline as completely\napart from one another, using separate rules with little or no interaction to establish each\nfactor independently. Moreover, each of the individual predicates within each factor lent\nitself to subdivision into subgoals and often deeper, so this facilitated reasoning. It also\nmade the rule-based representation with backward chaining particular appropriate.\nAlso, the fact that Joshua had the concept of certainties built in made it very easy to have\na set of predicates and gradually modify the certainties with each rule triggered.\nWhat went badly/Potential Improvements\nPerhaps the biggest drawback of the system is its \"all or nothing\" reasoning process. It\nchooses only a single predicate from each of the two factors and combines the result of\nthese into the set of recommended classes. As mentioned previously, however, students\nprefer the disciplines in varying degrees, and similarly exhibit different amounts of each\nlearning style. An improved system would take these into account and somehow rank\npairs of predicates from the factors. A related problem is that by taking the direct\nintersection, one immediately runs the risk of returning no results if there were a small\nnumber of classes for any predicate (as there were in this problem).\nOne significant improvement would be to have rules inferring the student's tradeoff\nbetween learning style and discipline. These might also help resolve the problems\nmentioned in the previous paragraph.\nThe concept of weights was somewhat troublesome in this application. Certainties were\nbuilt into Joshua and this was definitely appreciated, but given that the sole determination\nof recommended classes was done based on certainties, I would have preferred more fine-\ngrained control over the weights, instead of having to reason indirectly about the net\ncertainty from a given number of 'yes' responses.\nAnother gripe with my representation was the use of multiple choice questions to refine\npredicate weights. Multiple choice questions are inevitably limiting in scope, and thus\nmight have skewed the overall accuracy of the reasoning. Yet it soon made me realize\nthat in an automated system such as this, it really is not possible to permit open-ended\nresponses. The only workaround is to have a human expert present, ready to interpret the\nstudent's open-ended responses into the system.\nOne realization I had was that perhaps frames would be a conceptually more solid\nframework to reason about this domain. My code was littered with esoteric initialization\nprocedures to ensure that every predicate had a value of TRUE. Since these predicates\ndifferent only in their certainties (i.e. degree), I later imagined having a student frame\nwith slots for each of the learning styles and disciplines. At any time, each slot would\n\ncontain the quantitative strength of our belief that the student prefers that style or\ndiscipline.\nWhat I learned\nThe most important lesson I learned was about the suitability of rule-based systems for\nhandling a problem with distinct subgoals. Here, even though the final solution was not\nderived directly from any rules (it took into account the certainties of the factor\npredicates), the rule-based framework fit perfectly well for each of the individual\npredicates (i.e. hands-on learning). This made me come to the conclusion that whenever a\nproblem involves some combination of different factors, and these factors can be further\nsubdivided, the rule-based approach with backward chaining is excellent.\nMy initial fear in this problem was optimization. I had initially envisioned return classes\nthat satisfied all degree requirements and prerequisites. Yet as I worked on the project, I\nrealized that that task was certainly a complex system, but with less specialized expertise.\nThe real benefit of this expert system is not in returning a foolproof, guaranteed result,\nbut in capturing expert reasoning to suggest possible courses of action. This freed me to\nthink of more and more creative ways of proving a claim, knowing that the student would\nstill examine my system's results carefully and critically.\nRunning the program\nThe relevant rules and predicates for the system are located in the Appendix\nOnce this file is compiled and Joshua is run, type (find-classes) at the Joshua prompt and\nanswer the questions. Once the system prints out your optimal learning style and most\npreferred subdiscipline, you must enter (intersection <optimal-learning-style>-class-list\n<discipline>-class-list) at the prompt to get the list of classes.\nFor example, if the optimal learning style is [hands-on you yes] and the preferred\ndiscipline is [electronics you yes], you would enter (intersection hands-on-class-list\nelectronics-class-list) to see the recommended classes."
    },
    {
      "category": "Resource",
      "title": "haldarrulesdb.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/73b564890d7daaa1dce99c7752799017_haldarrulesdb.pdf",
      "content": "Rules Database\nA.\nLEARNING SCENARIO RULES\nI.\nEstablishing whether a student is a hands-on learner\nOverview: A Hands-on learner is one who finds it easiest to\nunderstand a subject by actually being given the opportunity\nto apply any of the material covered in the class. This is\nmost different from book learning, whose proponents are most\nsuited by studying the textbook material carefully without\ntrying to apply that knowledge.\nRELEVANT SUBGOALS: Tinkers?, Enjoys?, Skilled at hands-on tasks?,\nThinks like a hands-on person?\nSubgoal # 1: Tinkers?\n1.\n\nif\nstudent tinkers\n\nthen student is a hands-on learner\n2.\n\nif\nstudent has enjoyed playing with a lego/robotics set\nin the past\nthen student tinkers\n3.\n\nif\nstudent has ever taken something apart to figure out\nhow it works\nthen student tinkers\n4.\n\nif\nstudent enjoys writing software programs ****** REUSE\nthen student tinkers\n5.\n\nif\nstudent has ever entered a design competition for\nsomething\nthen student tinkers\n6.\nif\nstudent entered actual experiments rather than\nsubject overviews for science fair projects\nthen student tinkers\nSubgoal # 2: Has a genuine interest in hands-on tasks?\n1.\n\nif\nstudent has interest in hands-on things\nthen student is a hands-on learner\n2.\n\nif\nstudent knows how household electricity or plumbing\nworks\nthen student has interest in hands-on things\n3.\n\nif\nstudent has voluntarily upgraded his desktop computer\nin the past\nthen student has interest in hands-on things\n4.\n\nif\nautomobile before\nstudent has modified or upgraded some part of his\nthen student has interest in hands-on things\n\n5.\n\nif\nstudent enjoyed high school labs more than lectures\nthen student has interest in hands-on things\n6.\n\nif\nstudent has tried to find out how common appliances\nlike computers, TVs, and refrigerators work\nthen student has interest in hands-on things\n7.\nif\nstudent enjoys \"Popular Mechanics\" more than\n\"Scientific American\" ****** REUSE\nthen student has interest in hands-on things\nSubgoal # 3: Thinks like a hands-on person\n1.\n\nif\nstudent thinks math class in HS was useless\n(excluding calculus)\nthen student thinks like a hands-on person\n2.\nif\nstudent reads ahead to examples before completing a\nchapter in a textbook\nthen student thinks like a hands-on person\n3.\n\nif\nstudent has ever contemplated the design breakdown of\na complex piece of machinery or software\nthen student thinks like a hands-on person\n4.\nif\nstudent would rather try things out by trial and\nerror before looking at a manual or asking for help\nthen student thinks like a hands-on person\nII.\nEstablish whether the student is a book-based learner\nOverview: A book-based learned learner learns best by\ninternalizing the covered textbook/notes material as deeply as\npossible. Typically these type of learners are not as reliant\non lectures or on seeing applications of the knowledge to\nlearn.\nSubgoal # 1: Classroom behaviors\n1. if\nstudent crams for exams\nthen\nstudent has book-based learner-like classroom\nbehavior\n2. if\nstudent spaces out during lecture and is lost for the\nrest of the time\nthen\nstudent has book-based learner-like classroom\nbehavior\n3. if\nstudent uses textbook from past classes in current\nassignments\nthen\nstudent has book-based learner-like classroom\nbehavior\n4. if\nstudent skips many lectures\nthen\nstudent has book-based learner-like classroom\nbehavior\nSubgoal # 2: Thinks like a book learner\n\n1. if\nstudent does not think high school math is useless\nthen\nstudent thinks like a book-based learner\n2.\n\nif\nstudent reads textbook chapter before consulting\nexample problems\nthen\nstudent thinks like a book-based learner\nMiscellaneous for book-based learning\n1.\n\nif\nstudent enjoys reading books in spare time\nthen\nstudent is a book-based learner\n2.\n\nif\nstudent reads manual before attempting to do\nsomething\nthen\nstudent is a book-based learner\nIII. Establish whether the student is a lecturer-based learner\nMiscellaneous:\n1.\n\nif\nstudent takes notes and consults them during exam\npreparation or doing homework\nthen\nstudent is a lecturer-based learner\n2. if\nstudent considers classmates' opinions about\nlecturers in making course selections\nthen\nstudent is a lecturer-based learner\n3. if\nstudent usually asks questions or or interacts with\nlecturer outside of class\nthen\nstudent is a lecturer-based learner\n4. if\nstudent usually sits near the front of the class\nduring lecture\nthen\nstudent is a lecturer-based learner\nIII.\nEstablish whether student is an independent learner\nOverview: This type of student is able to motivate himself to\nlearn about topics of interest, without a lot of hand-holding\nor supervision from the instructors. Typically, this type of\nperson tries to go beyond the depth covered in class on his\nown, if the material appeals to him.\nSubgoal # 1: Student is self-motivated\n1.\n\nif\nstudent can keep up with a class which has few if any\nproblem sets or assignments\nthen\nstudent is self-motivated\n2. if\nstudent tries to read about interesting class\nmaterial outside of class, on his own\nthen\nstudent is self-motivated\n3.\n\nif\nstudent would not stop paying attention if a lecturer\nindicated material is not tested\nthen\nstudent is self-motivated\n\nIV.\nEstablish whether the student is a discussion-based learner\nOverview: A discussion-based learner is one who understands\nthe material best after being given the opportunity to talk\nabout it in a group, most often moderated by an instructor.\nThis type of person is adept at teamwork and typically gets a\nbetter grasp on material after explaining things to others.\nSubgoal # 1: Student works well in a team\n1. if\nstudent prefers team projects over solo projects\nthen\nstudent is a team player\n2. if\nstudent typically works in study groups to get things\ndone\nthen\nstudent is a team player\n3. if\nstudent learns best by explaining material to others\nthen\nstudent is a team player\nMiscellaneous\n1. if\nstudent usually attends lectures\nthen\nstudent is a discussion-based learner\n2. if\nstudent asks questions of or interacts with lecturer\noutside of class\nthen\nstudent is a discussion-based learner\nB. Preferred Discipline Rules\nOverview: As mentioned in the paper, the approach used here is to\nestablish first whether the student leans more towards EE or CS, and\nthen to establish his preference in a subdiscipline of the one among\nthose two that he ostensibly prefers.\nI.\nEstablishing preference for EE (roughly 6-1 and some parts of\n6-2)\nOverview: An \"EE\" person is one who is comfortable handling\nand building physical things. Typically, he would have an\ninterest in electronic circuitry and try to understand how the\npervasive electronic systems in their lives work.\nSubgoal # 1: Establishing experience in EE\nif\nstudent has taken things apart to find out how they work\nthen student has experience in EE\nif\nstudent has enjoyed lego or robotics sets in the past\nthen student has experience in EE\nSubgoal # 2: Establishing interest in EE\nif\nstudent knows how household electricity works\nthen student has interest in EE\nif\nstudent has ever tried to find out how common household\nappliances like TV or fridge work\n\nthen student has interest in EE\nMiscellaneous:\n\nif\nstudent enjoyed E&M unit of high school physics\nthen student prefers EE\nII.\nEstablishing preference of CS (roughly 6-3 and some parts of\n6-2)\nOverview: CS people typically have a very high degree of\ncomfort with computers, much beyond the standard tasks most\nlay people engage in.\nSubgoal # 1: Establishing interest in CS\nif\nstudent enjoys trying out new computer programs\noccasionally\nthen student has interest in CS\nif\nstudent periodically reads computer magazines like PC World\nthen student has interest in CS\nif\nstudent has ever tried to understand how the internet works\nthen student has interest in CS\nSubgoal # 2: Establishing comfort level with computers\nif\nstudent has built his own website in the past\nthen student is comfortable with computers\nif\nstudent writes software for his own use or enjoyment\nthen student is comfortable with computers\nif\nstudent uses computer more things besides Web or e-mail\nthen student is comfortable with computers\nMiscellaneous:\nif\nstudent found HS math useful/enjoyable\nthen student prefers CS\nOverview: These sections ask multiple choice questions of students,\npresenting them with representative choices picked from each of the\nthree subdisciplines of EE or CS.\nIII. Establishing preference among CS subdisciplines (only asked if CS\ncertainty is higher than EE certainty)\nThree Multiple choice questions, with each choice having a rule\naugmenting the certainty of the predicate specified\nQ1. Which of these is the most urgent problem?\nA) Securing online transactions => prefers CS Theory\nB) Making windows more crash-proof => Prefers Distributed\nSystems\nC) Getting computers to understand natural language =>\n\nPrefers Artificial Intelligence\nQ2. Which of these projects sounds most interesting?\nA) Finding computational problems that cannot be solved\nefficiently using modern computers => prefers Theory\nB) Solving tough computer problems by leveraging idle CPUs\nof remote computers => prefers distributed systems\nC) Creating a system to recognize and respond to facial\nexpressions => prefers artificial intelligence\nQ3. Which of these breakthroughs would you like to contribute to\nsociety?\nA) An unbreakable computer security system => prefers cs\ntheory\nB) A way to substantially speed up current Internet traffic\n=> prefers distributed systems\nC) A robotic vacuum that adapts itself to every room, so as\nto cover every inch of space => prefers AI\nIV. Establishing preference among EE subdisciplines (only asked if EE\ncertainty is higher than CS certainty)\nTwo Multiple Choice Questions\nQ1.\nWhich of these sounds like the most interesting project?\nA) Understanding the processing engine used in the original\nNintendo Video Gaming System?\n\n=> prefers Electronics\nB) Finding a better compression scheme for video to allow\nw/o loss of quality (allowing faster download)\n\n=> prefers Signals\nC) Creating flexible, paper-thin LCD displays\n\n=> prefers Device physics\nQ2.\nWhich of these would you consider the most significant\nand/or amazing invention?\nA) Desktop PC w/ 30 parallel processors\n\n=> prefers Electronics\nB) Perfect computer voice recognition and comprehension by\nyour desktop PC\n\n=> prefers Signals\nC) Creating computer chips out of completely organic\nmaterials\n\n=> prefers Device physics"
    },
    {
      "category": "Resource",
      "title": "javanmardian_pap.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/ec48b59a27c52ba860ea1e2c74a38e08_javanmardian_pap.pdf",
      "content": "A Wine Pairing Recommendation System\nKia Javanmardian\n6.871\nMay 12, 2005\n\nTable of Contents\nIntroduction....................................................................................3\nDetailed Example..............................................................................5\nAppendix (Source Code).....................................................................17\nInitial Thoughts/Overview....................................................................3\nKnowledge Base/Problem Solving Paradigm Overview..................................5\nBackward Chaining...........................................................................10\nWeights......................................................................................... 10\nDomain Specific Questions.................................................................. 11\nSystem Responses to \"I don't Know\"..............................................................11\nJOSHUA Difficulties......................................................................... 13\nPermutation Problem......................................................................... 14\nWhat Went Well/What Didn't Go Well.................................................... 15\nConclusions....................................................................................16\n\nIntroduction:\nDifferent wines go well with different kinds of food. Many times, however, an\nindividual may be going to a restaurant and not know the ingredients in his meal.\nFurthermore, he may not know enough about wine to know what to look for when he\ngoes out to eat. This scenario provides an ideal situation for a knowledge based system.\nThe system presented in this paper pairs wine with a meal. It encapsulates\nknowledge about food and wine pairings, and it uses additional kinds of knowledge to\nnarrow down food options and make an educated wine recommendation. Overall, the\nsystem considers 7 wine possibilities: Merlot, Pinot Noir, Chardonnay, Sauvignon Blanc,\nRiesling, Cabernet, and Zinfandel. The system also has knowledge pertinent to eight\ndifferent ethnicities: American, French, Italian, Caribbean, Indian, Middle Eastern,\nMexican, and Chinese.\nThe following subsections will delve into the overall design of our system. They\nwill highlight initial thoughts regarding the overall design of the system and delve into\nthe knowledge encapsulated by the system. Included will be an example of the system in\naction. The finals sections will focus on what was learned, as well as difficulties\nuncovered through designing and implementing the system.\nInitial Thoughts/Overview:\nInitially, a wine pairing system seemed like an ideal domain for a rule based\nsystem. When considering a wine, a user takes into account four main factors: kind of\nmeat, kind of sauce, herbs/spices, and a user's personal preferences (dry, sweet). A very\nsimple system could ask the values for each of these categories and match it with an\nappropriate wine. While such a system would encapsulate knowledge about food and\nwine pairings, the system would be relatively unknowledgeable. Matching a set\ningredients and preferences with different wines uses a shallow and fairly uninteresting\nset of inferences.\nOur system does not ask the ingredients of a person's meal. Instead, it infers the\ningredients of a meal through a set of fairly straightforward questions. The inputs to the\nsystem are:\n\no Ethnicity of the restaurant\no Current Season\no User Traits (i.e. health conscious, lactose intolerant)\no User Preference(i.e likes spicy foods, likes savory foods)\nThe system uses these inputs to infer meal ingredients, and it uses the ingredients to make\na wine recommendation. The wine recommendation is a type of wine, but it does not\ninclude a year or place of origin.\nFigure 1 gives a concrete example of a potential system trace. The trace may not\nbe the exact order in which the final system asks questions, but it should give a fairly\naccurate example of the system's overall operation.\ni\nici\ni\nNo.\nl\ni\nNo.\n>>System:What k nd of meail will you be eating.\n<<User:\nDinner\n>>System: What ethn\nty of Restaurant will you be go ng\nto?\n<<User:\nItalian\n>>System: Are you health conscious?\n<<User:\n>>System: Are you lactose into erant?\n<<User:\nYes.\n>>System: Do you l ke savory foods?\n<<User:\nYes.\n>>System: Are you going on a date?\n<<User:\n>>System: Do you prefer sweetened iced tea over unsweetended iced\ntea?\n<<User:\nYes.\n>>System: Be on the lookout for a good Merlot.\nFigure 1: An example trace of the system.\n\nKnowledge Base/Problem Solving Paradigm Overview\nOur system implements a rule based system, and it utilizes JOSHUA. As\nmentioned before, the initial wine and food pairing problem lends itself well to a rule\nbased system. On a simple level, simple rules regarding meat, sauce type, herbs/spices,\nand user preferences are fairly straightforward to construct. Our system uses these four\ncategories of rules, but also incorporates another layer of rules that infer the meat, sauce\ntype, and herbs/spices.\nIdeally, the system would have incorporated rules and frames. The rule part of\nthe system would use user input to infer ingredients of the meal. The frame portion\nwould then take the ingredients and match it to a number of predetermined frames. Each\nwine would have one or more frame representations with different slot values\nrepresenting different ingredients. Frames would be ideal for matching, because,\nconceptually frames do a better job of capturing ingredient to wine relationships. Rules\ncan be written to perform this task, but the many permutations for ingredient to wine\nmatches become an issue. This is discussed in further detail in the problems section.\nThe main rules of the system are split up into 5 categories:\no Rules inferring the kind of meat\no Rules inferring the kind of sauce\no Rules inferring the herbs used\no Rules inferring user preferences\no Rules matching ingredients with a particular wine\nDetailed Example\nThe trace given in the previous section asks the ethnicity of the restaurant. After getting\nthe ethnicity of the meal, the system asks whether the user will be having dessert. If the\nuser is having dessert, the system defaults to the only dessert wine, Riesling. If the user\nis not having a dessert the system assumes he is having a main meal. When inferring the\nkind of meat, the ethnicity gives the initial set of possible meats. For example, Indian\n\nfood does not allow for beef, while Italian food, in our system, ignores pork, because beef\nis the predominant meat. (A very sweeping generalization, a discussion of assumptions is\ndiscussed later) After the initial set of meats is inferred from the ethnicity, a number of\nother questions help to narrow the set of possibilities down to one meat. The system\naccomplishes this by asking a number of user specific questions.\nThere are a number of questions the system uses to narrow down the list of\npossible meats. If we assume the ethnicity is Italian (consistent with figure 1), the\npossible meat options are seafood/poultry and beef. If a user is health conscious, he will\nprobably prefer a lean meat, poultry/seafood, over beef. To pick between poultry and\nseafood, the system will ask the user whether he lives near the coast. If he does, the\nsystem assumes that seafood is fresh and that the user will choose seafood over poultry.\nIf he does not live on the coast, the system assumes that the user will choose poultry. In\nFigure 1, the user said he was not health conscious. Therefore, the user assumes that he\nwill be eating beef. Figure 2 illustrates the thought process that goes into inferring the\nmeat.\nItalian\nEthnicity?\nHealth\nConscious?\nPoultry/\nSeafood\nBeef\nOn coast?\nSeafood\nPoultry\nFigure 2: In the context of Italian, the rule linkage diagram for inferring the correct\nmeat.\nInferring the sauce base is similar to inferring the meat. Ethnicity establishes the\ninitial sauce possibilities. For example, Italian food incorporates both tomato and cream\n\nbased sauces. American food can use BBQ sauce, and Indian food can incorporate a\nyogurt/cream sauce. User characteristic and other questions narrow down the sauce\npossibilities. Italian food will be used once again to illustrate the sauce inference process.\nThe system assumes that Italian food uses either a cream or tomato based sauce.\nTo narrow it down to one sauce base, the system asks whether the user is lactose\nintolerant. If the user is lactose intolerant, the system will assume that he is having a\ntomato based sauce. If he is not lactose intolerant, the system will ask whether it is\nsummer. If it is summer, the system assumed a tomato based sauce, since tomatoes will\nbe in season. If it isn't summer the system assumes a cream based sauce. The user input\nin Figure 1 indicates a lactose intolerant individual. As a result, the system will assume a\ntomato based sauce. Figure 3 illustrates the reasoning used to infer the sauce base.\nLactose\nIntolerant?\nTomato\nCream/Tomato\nSummer?\nCream\nTomato\nFigure 3: The rule linkage diagram for selecting the sauce base (in Italian context).\nEthnicity also plays a role in inferring herbs and spices. Ethnicity gives the most\nprominent herbs and spices used in a particular ethnicity of cooking. For example, the\nsystem assumes the prominent herbs in Italian cooking are basil and oregano. For\nMexican food, the system assumes chili, and for Indian food the system assumes curry.\nThe system includes spices and herbs based on a user's taste preferences. It does not\ndistinguish between herbs in a specific ethnic group. It merely infers whether the\nethnically derived herbs will play a prominent role in the user's meal. Italian food will\nillustrate this concept.\nThe system assumes that Italian cooking using predominantly uses basil and\noregano. To decide whether or not the user's meal will contain these herbs, the system\n\nasks whether the user enjoys savory foods. If the user enjoys savory foods, the system\nwill assume the inclusion of basil and oregano. If the user does not enjoy savory foods,\nthe system does not include basil and oregano in the ingredients of the meal. The system\nwill also ask the user whether he is going on a date. If he is, the system will assume the\nuse of garlic, since Italian food uses a lot of garlic. If he isn't going on a date, garlic will\nnot be included. The user input in Figure 1 indicates the user enjoys savory foods and is\nnot going on a date. The system uses this input to infer basil, oregano, and garlic will\nlikely be used in the user's meal. Figure 4 demonstrates the inference problem involved\nin determining herbs and spices.\nSavory?\nOregano\nBasil\nNo Herbs\nNo\nDate?\nGarlic\nGarlic\nFigure 4 In the Italian domain, the process by which herbs and spices are determined.\nA user's personal tastes also play a role in the wine pairing process. The system\nfocuses on whether the user would most likely enjoy a sweet or dry wine. While there\nare a number of characteristics that describe a given wine, the system focused on sweet\nvs. dry. Focusing on more characteristics would have greatly increased the overall\ncomplexity of the rules.\nIn order to determine whether the user would prefer a sweet or dry wine, the\nsystem asks the user whether he prefers sweetened or unsweetened iced tea. Sweetened\niced tea indicates a preference for sweeter wine, while a response of unsweetened iced tea\nindicates a preference for a dryer wine. In our example, the user has a preference fo\nsweeter wine. Figure 5 illustrates the process by which the system picks between a\nsweeter or dryer preference.\n\nSweetened/\nUnsweetened\nIced Tea\nDry\nSweet\nFigure 5: The system chooses between preferences for dry or sweet wine.\nItalian\nEthnicity?\nSavory?\nOregano\nNo Herbs\nHealth\nBasil\nConscious?\nPoultry\nBeef\nSeafood\nOn coast?\nGarlic\nDate?\nNo\nGarlic\nSweetened/\nSeafood\nPoultry\nLactose\nUnsweetened\nIntolerant?\nIced Tea\nTomato\nSweet\nDry\nCream/Tomato\nSummer?\nTomato\nCream\nFigure 6: The overall knowledge base for the Italian restaurant example.\nIn our example, the inferred meat was beef. The inferred sauce was tomato based.\nThe herbs and spices used were oregano, basil, and garlic. The system also inferred that\nthe user had a preference for a sweeter kind of wine. Matching these ingredients and\npreferences to a particular wine is the next step. The ingredients and preferences inferred\nin this example match well with a merlot. To make this match, the system has a rule\nmatching beef, tomatoes, basil, oregano, garlic, and sweet wine with a merlot.\n\nBackward Chaining\nThe previous section outlined the main knowledge base of the system. Overall,\nthere were 5 main groups of knowledge. The example that was presented, however, left\nout some important characteristics of our system. Most importantly, the example does\nnot illustrate the manner in which the system uses backward chaining rules. While the\nsystem does use some forward chaining rules, the overall design and implementation\nrelied upon backward chaining.\nThe system starts with the rules relating food ingredients to a particular wine.\nThe ingredient-to-wine rules have most priority, and will fire before any of the other\nrules. The system tries to match the antecedents of these rules by firing different rules\ngoverning the meat, sauce, herbs, etc. Almost every ingredient to wine rule has some\nreference to a particular meat. Therefore, rules governing meat inference will almost\nalways be fired.\nBackward chaining also makes the system more flexible. When constructing the\nsystem, the biggest challenge was inferring the ingredients of a user's meal. We tried to\nextract as much information as possible by asking a number of different questions. Some\ninferred ingredients, however, were not present in any of the ingredient to wine pairing\nrules. We decided to keep these irrelevant rules, because a more thorough ingredient to\nwine knowledge base may incorporate some of the extraneously inferred ingredients.\nGarlic for example, was initially not even considered in ingredient to wine rules. It was\nlater added to some of these rules as we increased our ingredient to wine knowledge base.\nSince irrelevant rules are not fired in a backward chaining system, irrelevant rules that\nmay become relevant can be captured without any penalty to the system's overall\nfunctionality.\nWeights\nWeights are not incorporated into level of the backward chaining process. All\nrules assume a certainty of one, unless they are ingredient to wine pairing rules. This\nmakes a very sweeping assumption. However, the mechanism by which JOSHUA used\ncertainty factors made it difficult to correctly assign weights to each rule. Instead, the\n\nwine pairing rules are given a weight based on the criteria that made the rule fire. For\nexample, there are a number of rules that result in a Merlot recommendation. Some of\nthese rules have more conditions than other, and therefore, receive a higher certainty\nfactor in our system. This situation is further discussed in the JOSHUA Difficulties\nsection and is illustrated by Figures 8 and 9 of this document.\nDomain Specific Questions\nThe system asks domain specific questions. The example did not illustrate this\npoint, but it is an important aspect of the system. Once an ethnicity is selected, the\nsystem knows what questions are relevant. For example, if the ethnicity is Italian, the\nsystem will not ask the user whether he likes spicy food. Similarly, if the ethnicity is\nChinese, the system will not ask the user if he is lactose intolerant. The system's rules\nare constructed in a manner that avoids irrelevant questions.\nOnce the ethnicity is selected rules unrelated to that ethnicity will not be fired by\nthe system. Many of the rules specific to a particular ethnicity are written in an ethnicity\nspecific manner. A rule governing Indian food illustrates this idea. If the ethnicity is\nIndian and the user likes spicy food, the system infers the use of curry. If the ethnicity is\nItalian, this rule will not be fired, because it requires the ethnicity be Indian. By\nspecifying the preconditions necessary for the rule to be relevant, the system avoids\nasking irrelevant questions.\nAvoiding irrelevant questions is also the result of backward chaining. If, for\nexample, the only wine that considers garlic has already been ruled out, the system will\nnot fire rules inferring garlic use. This is a direct result of backward chaining. Since none\nof the wines being considered contain a reference to garlic, no rules will be fired that\nmake conclusions regarding garlic use. A forward chaining rule would automatically fire\nall the rules whenever the antecedents were satisfied--whether or not the rule was\nrelevant. (Assuming ethnicity was the first question being asked)\nSystem Responses to \"I don't Know\"\nThe system deals with scenarios in which the user does not know the answer to a\nparticular question. To cope with this challenge, the system incorporates another layer of\n\nknowledge. For example, a user may not know whether he likes savory food. The\nsystem tries to solve this problem by asking a series of questions. From these questions\nthe system will try to infer whether or not the user enjoys savory foods. For the example\nof savory foods, the system will ask the questions shown in Figure 7.\n>>System:\n>>System:\nNo.\n>>System:\nNo.\n>>System:\nNo.\nDo you like savory foods?\n<<User:\nI don't know\nDo you have an herb garden?\n<<User:\nDo you have over 10 spices in your spice cabinet?\n<<User:\nDo you like steak sauce?\n<<User:\nFigure 7 The system asks the user a number of questions to infer whether or not he likes\nsavory foods.\nSince the user does not have an herb garden, ten spices in his spice cabinet, and does not\nlike steak sauce, the system concludes that the user does not like savory foods. Dealing\nwith \"I don't know\" requires additional knowledge. Under a specific ethnicity, the\nsystem knows the ingredients implicated by savory food, and it also knows criteria that\nimply a user's affinity for savory flavors. Rules determining a user's like or dislike of\nsavory foods enables the system to perform and additional layer of inference.\nAdditional rules are in place for determining if a user is on the coast, health\nconscious, has exotic tastes, is lactose intolerance, or if a restaurant is expensive. To\ndetermine if a user is on the coast, the system may ask whether or not he frequently goes\nboating or to the beach. To determine whether the user is health conscious, the system\nmay ask whether the user has been dieting or exercises regularly. For exotic tastes, the\nsystem may ask a user whether he goes hunting or eats lots of ethnic foods. A complete\nlisting of the different \"I don't know\" rules can be found in the appendix of this\ndocument.\n\nJOSHUA Difficulties\nA number of difficulties arose during the construction of this system. Many of\nthe difficulties were JOSHUA specific, although some were a result of the overall scope\nand design of the system.\nJOSHUA had a tendency to misfire rules. One reason came from a bug in the\nJOSHUA system. JOSHUA incorrectly evaluates all the predicates of an \"or\" statement\neven if a predicate is already found to be true. Another source of this problem involved\nforward chaining rules. Some of our system's rules were forward chaining and triggered\nwhenever the antecedents of the rule were satisfied. This was done mainly for efficiency\nsake. For example, when the user specifies the ethnicity of his meal, the system\nautomatically fires a number of rules that narrow down the possible meats, spices, sauces,\netc. However, if a rule was currently being fired and backward chaining, any forward\nchaining rules that were fired during this process did not register its conclusions with the\nsystem. The system only became aware of the results once the rule that had initiated the\nbackward chaining process had exited.\nOne of the pinot noir rules illustrates this point nicely. In this particular rule the\nsystem tries to find out if chicken is part of the meal. In doing so the system asks the user\nif he is health conscious, and the user says no. The system then realizes that the\npredominant meat in the dish is beef. The meat being beef fires a forward chaining rule\nthat says the current meat is not chicken. However, the system does not recognize that\nthis rule fired until after the pinot noir rule is done executing. Therefore, even though the\nsystem determines the meat is beef, it ends up asking whether the user is eating chicken.\nTo combat this problem, we implemented a number of backward chaining rules that\nwould rule out different meats, once one had been selected. Doing this, however, exposed\nanother problem with JOSHUA.\nJOSHUA did not allow backward chaining rules to make more than one\nconclusion at a time. Therefore, a rule with more than one conclusion had to be written\nas a set of multiple rules, each having only one conclusion. This wasn't a major problem,\nbut it was fairly cumbersome.\n\nPermutation Problem\nAnother major difficulty involved the different permutations of the ingredient to\nwine rules. A Merlot, for example, could be well suited to a particular combination of\nmeat, sauce, and spices. However, not having a particular match with the sauce or spices\ndoes not mean that a Merlot would not go well with the meal. The system had to account\nfor this scenario by implementing looser rules that would also recommend a Merlot. It\nhad to know that a Merlot would go well with beef but with less certainty than a meal\ncontaining beef, oregano, and tomatoes. This idea was touched upon earlier. Figure 8\npartially illustrates this idea.\n(defrule riesling-1 (:backward :certainty 1.0 :importance 92)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n\n[sauce-type ?user light]\n\n[or\n[uses-dill ?user yes]\n\n[uses-sage ?user sage]\n\n[uses-clove ?user clove]\n\n[uses-ginger ?user ginger]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\nFigure 8: An ingredient to wine pairing rule that returns Riesling.\nThe rule above requires the meal to have poultry or shellfish, cheese, dill or sage or clove\nor ginger. The user must also prefer a sweeter wine over a dry wine. Another rule for\nRiesling is shown if Figure 9.\n(defrule riesling-1 (:backward :certainty .8 :importance 92)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n\n[sauce-type ?user light]\n\n[or\n[uses-dill ?user yes]\n\n[uses-sage ?user sage]\n\n[uses-clove ?user clove]\n\n[uses-ginger ?user ginger]]]\nthen [wine-to-drink ?user riesling])\nFigure 9: A less stringent rule that pairs Riesling with meal ingredients\nThis rule is a less stringent version of the rule in Figure 8. The system accounts for this\ndifference by assigning less of a certainty factor to the rule, but a problem clearly\n\nemerges. Different permutations of a single rule have to be implemented to properly\nrepresent wine pairing possibilities. A more complex the knowledge base between\ningredients and wines, leads to more possible permutations. This was one of the reasons\nwhy herbs were clumped together in a single or statement. Differentiating between them\nwould have required many more permutations of a single rule. If a rule has n\npreconditions, for example, the permutations of the different preconditions are 2n. This\nwas one of the major challenges that we faced during implementation. Furthermore, this\nled us to believe that a frame based system would better capture the relationships between\ndifferent ingredients-to-wine pairings. This idea is further discussed in the Conclusions\nsection.\nWhat Went Well/What didn't go well\nOverall, the system was able to come up with an educated suggestion for wine,\nbased on a users input. While our approach was fairly simple, we met our objectives\nwithin the scope of our project. Namely, we were able to make a wine recommendation\nwithout having the user tell us about the ingredients found in his meal. On the flipside,\nour recommendations were based on a number of sweeping generalizations. As a result,\nour system is not able to give very exact recommendations. It is possible that the\nsuggested wine will not match a user's meal. That is ok, however, and is further\naddressed in the Conclusions section.\nIf the user answered yes to questions that inferred new ingredients, the system did\na fairly good job of coming up with a wine recommendation. If the user answered no to\nsuch questions, the system had a hard time coming up with a good recommendation,\nbecause it was unable to infer more ingredients. For example, answering no to spicy food\ntells the system that curry or chili (depending on domain) is not used, but it does give any\nidea of what is used.\nThe nature of our system also made very big assumptions, and it didn't allow for\nmuch variety. For example, it doesn't allow for savory Indian food. By limiting the\nscope of the kinds of foods within an ethnic domain, the system was able to use the\nethnicity to make inferences. If the system were actually true to the variety of foods in an\nethnic group, it would be unable to use ethnicity as a way of differentiating between\n\ndifferent food types. Mexican food, within the context of our system, illustrates this idea.\nMexican food is known for being spicy, having cheese, etc. However, many Mexican\ndishes are savory and use seafood. Had the system accounted for this, the ethnicity,\nMexican, would have told us very little about a meal in relation to other ethnicities. Our\nsystem is built upon the stereotype of Mexican food being spicy, using pork or beef, and\nusing a cheese. Although inaccurate, without making this assumption the system would\nbe at a loss when it comes to inferring meal properties from an ethnicity.\nConclusions\nWhile our system can not always deliver very exact recommendations, the system\nwas good at making a recommendation based on the information it is given. Further, this\nbrings up an important point regarding knowledge based systems, in general. The\nrecommendation of a knowledge based system is only as good as the information that it is\ngiven. Since the system tries to infer ingredients from external user input, the\nrecommendations it gives are not as good as those given by a system which asks the\nactual ingredients. If the main goal had been providing an accurate wine\nrecommendation, a database matching ingredients to wines may have done a better job.\nHowever, a database would not have nearly as much \"knowledge\" as our system, and it\nwould infer almost nothing.\nWe also learned about the role of scope in designing a knowledge based system.\nWhenever a system infers something from user inputs, it is generally required to make\nassumptions. In the case of our system, these assumptions dealt with generalizations\nregarding ethnicities. These assumptions included Mexican food being predominantly\nspicy rather than savory. This also included the assumption that savory Italian food\nimplies the user of oregano and basil. While these assumptions are not accurate\nrepresentations of the world, they are necessary for our system to make inferences from\nanswers to very general question.\nWe also came to the conclusion that a frame based system would have worked\nbetter for the portion of the system that matched ingredients with a wine. While rules did\na good job of coming up with the ingredients, rules had a hard time dealing with the\n\ndifferent permutations of ingredients to a specific wine. A frame system designed for\ningredient to wine matches may be better suited for the task.\nIf a frame system could differentiate between different ingredients by assigning\nweights to them, a match to a particular wine could be reached by adding the weights of\nthe different matching factors. In this way, more matching factors would give a higher\nscore. JOSHUA's certainty procedure did not really allow us to assign different weights\nto different factors. Our system mimicked the process of adding different weights, by\nassigning a higher certainty to a rule that had more conditions. For example, the rule in\nFigure 8 had a higher certainty than the one in Figure 9. The more conditions a rule had,\nthe greater the match to a wine, and therefore, the rule got a higher score.\nOverall, designing this system was a very useful exercise and brought to light\nmany of the concepts discussed in class. It demonstrated how a knowledge based system\ncan actually encapsulate knowledge and make inferences. It also showed the limitations\nof knowledge based systems and the assumptions that must be made when designing\nthem."
    },
    {
      "category": "Resource",
      "title": "jvanmardian_apd.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-871-knowledge-based-applications-systems-spring-2005/d2c885da5dfcb26781fb95417723de8d_jvanmardian_apd.pdf",
      "content": "Appendix\n;;; Food & Wine Pairing Knowledge Base for Joshua\n;;; for use with Rule-Based Systems Exercises\n;;; 6.871 Spring 2005\n;;; Code pertaining to setup of system\n;;; Code mostly reused from pset 2\n(in-package :ju)\n; (ask [wine-to-drink john ?x] #'print-answer-with-certainty)\n(defun print-answer-with-certainty (backward-support &optional (stream\n*standard-output*))\n(check-type backward-support cons \"backward-support from a query\")\n(let ((predication (ask-database-predication backward-support)))\n(check-type predication predication \"a predication from a query\")\n(terpri stream)\n(ji::truth-value-case (predication-truth-value predication)\n(*true*\n(prin1 predication stream))\n(*false*\n(write-string \"[not \" stream)\n(ji::print-without-truth-value predication stream)\n(write-string \"]\" stream)))\n(format stream \" ~d\" (certainty-factor predication))))\n(defgeneric possesive-suffix (predication))\n(defgeneric first-prompt (predication))\n(defgeneric second-prompt (predication))\n(defgeneric third-prompt (predication))\n(defgeneric possible-values (predication))\n(defgeneric get-an-answer (predication &optional stream))\n(defgeneric appropriate-ptype (predication))\n(defgeneric accept-prompt (predication))\n(defgeneric question-prefix (predication))\n(defgeneric remaining-object-string (predication))\n;;; The base mixin\n(define-predicate-model question-if-unknown-model () () )\n(clim:define-gesture-name :my-rule :keyboard (:r :control :shift))\n(clim:define-gesture-name :my-help :keyboard (:h :control :shift))\n(clim:define-gesture-name :my-why :keyboard (:w :control :shift))\n(defparameter *mycin-help-string*\n\"\nctrl-? - to show the valid answers to this question\nmeta-r - to show the current rule\nmeta-y - to see why this question is asked\nmeta-h - to see this list\"\n)\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;;\n;;;\n;;; explaining why we're asking what we're asking\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defun print-why (trigger rule &optional (stream *standard-output*))\n(format stream \"~%We are trying to determine \")\n(if (predicationp trigger)\n(progn (format stream \"~a \" (question-prefix trigger)) (say trigger\nstream))\n(princ trigger stream))\n(if (null rule)\n(format stream \"~%This is a top level query\")\n(let* ((debug-info (ji::rule-debug-info rule))\n(sub-goals (let ((ji::*known-lvs* nil))(eval (ji::rule-\ndebug-info-context debug-info)))))\n(format stream \"~%This is being asked for by the rule ~a in order\nto determine:~%\"\nrule)\n(format stream \"~a \" (question-prefix ji::*goal*)) (say\nji::*goal* stream)\n(typecase sub-goals\n(ji::and-internal\n(let ((remaining-preds (rest (predication-statement sub-\ngoals)))\n(good-answers nil)\n(remaining-stuff nil)\n(first-remaining-object-string nil))\n(labels ((do-good-preds ()\n(when remaining-preds\n(let ((first (pop remaining-preds)))\n(cond\n((not (predicationp first))\n(push (copy-object-if-necessary first)\ngood-answers)\n(do-good-preds))\n(t\n(let ((found-it nil))\n(ask first\n#'(lambda (just)\n(push (ask-database-predication\njust) good-answers)\n(setq found-it t)\n(do-good-preds))\n:do-backward-rules nil\n:do-questions nil)\n(unless found-it\n(with-statement-destructured (who\nvalue) first\n(declare (ignore who))\n(with-unification\n(unify trigger first)\n(setq first-remaining-object-string\n(remaining-object-string first))\n\n(unify value first-remaining-\nobject-string)\n(setq remaining-stuff\n(loop for pred in remaining-\npreds\nif (predicationp pred)\ncollect (with-\nstatement-destructured (who value) pred\n(declare\n(ignore who))\n(unify value\n(if (joshua:unbound-logic-variable-p value)\n(remaining-object-string pred)\n(joshua:joshua-logic-variable-value value)))\n(copy-object-\nif-necessary pred))\nelse collect (copy-\nobject-if-necessary pred)))))))))))))\n(do-good-preds))\n(loop for pred in (nreverse good-answers)\nfor first-time = t then nil\nif first-time\ndo (format stream \"~%It has already been determined\nwhether: \")\nelse do (format stream \"~%and whether: \")\ndo (say pred stream))\n(format stream \"~%It remains to determine ~a ~a ~a\"\n(question-prefix trigger) first-remaining-object-\nstring (remaining-stuff-suffix trigger))\n(loop for pred in remaining-stuff\ndo (format stream \"~%and ~a ~a ~a\" (question-prefix\npred) (remaining-object-string pred) (remaining-stuff-suffix pred)))))\n(otherwise ))\n)))\n(defmethod remaining-stuff-suffix ((pred predication)) \"is\")\n(defmethod remaining-stuff-suffix ((expression cons)) \"\")\n(defmethod predication-value-description ((pred predication))\n(remaining-object-string pred))\n;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;; PROTOCOL HACKING\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;\n(defmethod say ((expression cons) &optional (stream *standard-output*))\n(princ expression stream))\n(defmethod remaining-object-string ((expression cons)) (format nil \"~a\"\nexpression))\n(defmethod question-prefix ((expression cons)) \"whether\")\n\n(defmethod get-an-answer ((predication question-if-unknown-model)\n&optional (stream *standard-output*))\n\"Print the prompt for this parameter (or make one up) and read the\nreply.\"\n(fresh-line)\n(flet ((mycin-help (stream action string-so-far)\n(declare (ignore string-so-far))\n(when (member action '(:help :my-help :my-rule :my-why))\n(fresh-line stream)\n(case action\n(:my-why\n(print-why predication ji::*running-rule* stream)\n)\n(:my-rule\n(format stream \"You are running the rule ~a\"\nji::*running-rule*))\n(:my-help\n(format stream *mycin-help-string*)\n))\n(fresh-line stream)\n(write-string \"You are being asked to enter \" stream)\n(clim:describe-presentation-type (appropriate-ptype\npredication) stream)\n(write-char #\\. stream)\n)))\n(let ((clim:*help-gestures* (list* :my-help :my-why :my-rule\nclim:*help-gestures*)))\n(clim:with-accept-help ((:top-level-help #'mycin-help))\n(clim:accept (appropriate-ptype predication)\n:stream stream\n:prompt (accept-prompt predication))))))\n(defun rules-concluding-predicate (pred)\n(let ((answers nil))\n(map-over-backward-rule-triggers `[,pred ? ?]\n#'(lambda (trigger) (pushnew\n(ji::backward-trigger-rule trigger) answers)))\nanswers))\n(defun predicates-rule-relies-on (rule)\n(let ((answers nil))\n(labels ((do-one-level (stuff)\n(let ((connective (when (predication-maker-p stuff)\n(predication-maker-predicate stuff))))\n(case connective\n((and or)\n(with-predication-maker-destructured (&rest more-\nstuff) stuff\n(loop for thing in more-stuff\ndo (do-one-level thing))))\n((nil))\n(otherwise\n(pushnew connective answers))\n))))\n(do-one-level (ji::rule-debug-info-context (ji::rule-debug-info\nrule))))\n\nanswers))\n(defun graph-rule-tree (predicates &key (orientation :vertical) (size\n:small) (stream *standard-output*))\n(terpri stream)\n(clim:with-text-size (stream size)\n(clim:format-graph-from-roots\n(loop for pred in predicates\ncollect (list 'predicate pred))\n#'(lambda (thing stream)\n(destructuring-bind (type name) thing\n(case type\n(predicate\n(clim:surrounding-output-with-border (stream)\n(princ name stream)))\n(rule\n(clim:surrounding-output-with-border (stream :shape\n:oval)\n(princ name stream))))))\n#'(lambda (thing)\n(destructuring-bind (type name) thing\n(case type\n(predicate (loop for r in (rules-concluding-predicate\nname)\ncollect (list 'rule r)))\n(rule (loop for p in (predicates-rule-relies-on name)\ncollect (list 'predicate p))))))\n:stream stream\n:orientation orientation\n:merge-duplicates t\n:duplicate-test #'equal)))\n(clim-env::define-lisp-listener-command (com-graph-rules :name t)\n((predicates `(clim:sequence\n(member ,@(loop for pred being the hash-keys of ji::*all-predicates*\ncollect pred)))\n:prompt \"A\nsequence of predicates\")\n&key\n(orientation `(clim:member\n:vertical :horizontal) :default :vertical)\n(size `(clim:member :tiny\n:very-small :small :normal :large :very-large :huge)\n:default :small)\n(to-file 'clim:pathname\n:default nil)\n(page-orientation\n'(clim:member :portrait :landscape)\n:default\n:portrait\n:prompt \"If\nto file, print in portrait or landscape format\")\n(multi-page 'clim:boolean\n:default nil :prompt \"If to file, segment into multiple pages\")\n(scale-to-fit 'clim:boolean\n:default nil :prompt \"If to file, scale to fit one page\"))\n\n(if to-file\n(with-open-file (file to-file :direction :output :if-exists\n:supersede :if-does-not-exist :create)\n(clim:with-output-to-postscript-stream (stream file\n:multi-page\nmulti-page\n:scale-to-fit\nscale-to-fit\n:orientation\npage-orientation)\n(graph-rule-tree predicates :orientation orientation :size\nsize :stream stream)))\n(graph-rule-tree predicates :orientation orientation :size size)))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;\n;;;; Our pseudo mycin contains 3 types of predications\n;;;\n;;;; boolean valued, numeric valued, and those that take one of\n;;;\n;;;; a set of values\n;;;\n;;;; For each type we provide say methods\n;;;\n;;;;\nand a bunch of subordinate methods to make dialog almost English\n;;;\n;;;;\nand to do CLIM accepts correctly\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;\n;;;;; boolean values\n(define-predicate-model value-is-boolean-mixin () () )\n(define-predicate-method (say value-is-boolean-mixin) (&optional\n(stream *standard-output*))\n(with-statement-destructured (user yesno) self\n(format stream \"~A~A ~A ~A\"\nuser (possesive-suffix self)\n(if (joshua:joshua-logic-variable-value yesno) (first-\nprompt self) (second-prompt self))\n(third-prompt self))))\n(defmethod remaining-object-string ((predication value-is-boolean-\nmixin))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~A ~A ~a\"\n(joshua:joshua-logic-variable-value user)\n(first-prompt predication) (third-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-boolean-mixin))\n'(clim:member yes no))\n(defmethod accept-prompt ((predication value-is-boolean-mixin))\n(with-statement-destructured (user value) predication\n\n(declare (ignore value))\n(format nil \"~%Does ~a~a ~a ~a\"\nuser (possesive-suffix predication)\n(first-prompt predication)\n(third-prompt predication))))\n(defmethod question-prefix ((predication value-is-boolean-mixin))\n\"whether\")\n(defmethod possible-values ((predication value-is-boolean-mixin))\n'(\"yes\" \"no\"))\n(defmethod remaining-stuff-suffix ((pred value-is-boolean-mixin)) \"\")\n(defmethod predication-value-description ((pred value-is-boolean-\nmixin)) \"foobar\")\n;;; Other form of boolean questioning\n(define-predicate-model value-is-boolean-mixin2 () () )\n(define-predicate-method (say value-is-boolean-mixin2) (&optional\n(stream *standard-output*))\n(with-statement-destructured (user yesno) self\n(format stream \"~A~A ~A ~A\"\nuser (possesive-suffix self)\n(if (joshua:joshua-logic-variable-value yesno) (first-\nprompt self) (second-prompt self))\n(third-prompt self))))\n(defmethod remaining-object-string ((predication value-is-boolean-\nmixin2))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~A ~A ~a\"\n(joshua:joshua-logic-variable-value user)\n(first-prompt predication) (third-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-boolean-mixin2))\n'(clim:member yes no))\n(defmethod accept-prompt ((predication value-is-boolean-mixin2))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~%Is ~a~a ~a ~a\"\nuser (possesive-suffix predication)\n(first-prompt predication)\n(third-prompt predication))))\n(defmethod question-prefix ((predication value-is-boolean-mixin2))\n\"whether\")\n(defmethod possible-values ((predication value-is-boolean-mixin2))\n'(\"yes\" \"no\"))\n(defmethod remaining-stuff-suffix ((pred value-is-boolean-mixin2)) \"\")\n(defmethod predication-value-description ((pred value-is-boolean-\nmixin2)) \"foobar\")\n\n(define-predicate-model value-is-boolean-mixin3 () () )\n(define-predicate-method (say value-is-boolean-mixin3) (&optional\n(stream *standard-output*))\n(with-statement-destructured (user yesno) self\n(format stream \"~A~A ~A ~A\"\nuser (possesive-suffix self)\n(if (joshua:joshua-logic-variable-value yesno) (first-\nprompt self) (second-prompt self))\n(third-prompt self))))\n(defmethod remaining-object-string ((predication value-is-boolean-\nmixin3))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~A ~A ~a\"\n(joshua:joshua-logic-variable-value user)\n(first-prompt predication) (third-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-boolean-mixin3))\n'(clim:member yes no))\n(defmethod accept-prompt ((predication value-is-boolean-mixin3))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~%Can ~a~a ~a ~a\"\nuser (possesive-suffix predication)\n(first-prompt predication)\n(third-prompt predication))))\n(defmethod question-prefix ((predication value-is-boolean-mixin3))\n\"whether\")\n(defmethod possible-values ((predication value-is-boolean-mixin3))\n'(\"yes\" \"no\"))\n(defmethod remaining-stuff-suffix ((pred value-is-boolean-mixin3)) \"\")\n(defmethod predication-value-description ((pred value-is-boolean-\nmixin3)) \"foobar\")\n(define-predicate-model value-is-boolean-mixin4 () () )\n(define-predicate-method (say value-is-boolean-mixin4) (&optional\n(stream *standard-output*))\n(with-statement-destructured (user yesno) self\n(format stream \"~A~A ~A ~A\"\nuser (possesive-suffix self)\n(if (joshua:joshua-logic-variable-value yesno) (first-\nprompt self) (second-prompt self))\n(third-prompt self))))\n(defmethod remaining-object-string ((predication value-is-boolean-\nmixin4))\n(with-statement-destructured (user value) predication\n\n(declare (ignore value))\n(format nil \"~A ~A ~a\"\n(joshua:joshua-logic-variable-value user)\n(first-prompt predication) (third-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-boolean-mixin4))\n'(clim:member yes no))\n(defmethod accept-prompt ((predication value-is-boolean-mixin4))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~%Does the ~a~a ~a ~a\"\n(possesive-suffix predication)\nuser\n(first-prompt predication)\n(third-prompt predication))))\n(defmethod question-prefix ((predication value-is-boolean-mixin4))\n\"whether\")\n(defmethod possible-values ((predication value-is-boolean-mixin4))\n'(\"yes\" \"no\"))\n(defmethod remaining-stuff-suffix ((pred value-is-boolean-mixin4)) \"\")\n(defmethod predication-value-description ((pred value-is-boolean-\nmixin4)) \"foobar\")\n;;;; numeric values\n(define-predicate-model value-is-numeric-mixin () () )\n(define-predicate-method (say value-is-numeric-mixin) (&optional\n(stream *standard-output*))\n(with-statement-destructured (user number) self\n(if (joshua:unbound-logic-variable-p number)\n(format stream \"is ~a~a ~a\"\nuser (possesive-suffix self) (first-prompt self))\n(format stream \"~A~A ~A is ~A ~A\"\nuser (possesive-suffix self)\n(first-prompt self)\n(joshua:joshua-logic-variable-value number)\n(second-prompt self)))))\n(defmethod remaining-object-string ((predication value-is-numeric-\nmixin))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~A~A ~A\"\n(joshua:joshua-logic-variable-value user) (possesive-suffix\npredication)\n(first-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-numeric-mixin))\n'number)\n(defmethod accept-prompt ((predication value-is-numeric-mixin))\n\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~%What is ~a~a ~a\"\nuser (possesive-suffix predication) (first-prompt\npredication))))\n(defmethod question-prefix ((predication value-is-numeric-mixin))\n\"what\")\n;;; variety of possible values\n(define-predicate-model value-is-option-mixin () () )\n(define-predicate-method (say value-is-option-mixin) (&optional (stream\n*standard-output*))\n(with-statement-destructured (user option) self\n(format stream \"~A~A ~A ~A ~A\"\nuser (possesive-suffix self)\n(first-prompt self)\n(second-prompt self)\n(joshua:joshua-logic-variable-value option))))\n(defmethod remaining-object-string ((predication value-is-option-\nmixin))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~A~A ~A\"\n(joshua:joshua-logic-variable-value user) (possesive-suffix\npredication)\n(first-prompt predication))))\n(defmethod appropriate-ptype ((predication value-is-option-mixin))\n`(member ,@(possible-values predication)))\n(defmethod accept-prompt ((predication value-is-option-mixin))\n(with-statement-destructured (user value) predication\n(declare (ignore value))\n(format nil \"~%What is ~a~a ~a\"\nuser (possesive-suffix predication) (first-prompt\npredication))))\n(defmethod question-prefix ((predication value-is-option-mixin))\n\"whether\")\n;;; Predicate defining macro\n(defmacro define-predicate-with-ancillary-info ((pred-name mixin)\n&key\npossesive-suffix\nprompt1 prompt2 prompt3\npossible-values\nmissing-value-prompt\n)\n`(eval-when (:compile-toplevel :execute :load-toplevel)\n\n(define-predicate ,pred-name (user value) (,mixin question-if-\nunknown-model cf-mixin ltms:ltms-predicate-model))\n(defmethod possesive-suffix ((predication ,pred-name)) ()\n,possesive-suffix)\n(defmethod first-prompt ((predication ,pred-name)) () ',prompt1)\n(defmethod second-prompt ((predication ,pred-name)) () ',prompt2)\n,(when prompt3 `(defmethod third-prompt ((predication ,pred-name))\n() ',prompt3))\n,(when possible-values `(defmethod possible-values ((predication\n,pred-name)) ',possible-values))\n,(when missing-value-prompt `(defmethod missing-value-prompt\n((predication ,pred-name)) ',missing-value-prompt))\n))\n;; using this model, the system will ask the user any time\n;; it needs a specific fact to continue backward chaining.\n;;; we should only be asking a question under the following\n;;; circumstances:\n;;;\n;;; the predication being asked contains no logic variables\n;;; eg. [has-health-insurance matt yes], not\n;;; [has-health-insurance matt ?x]\n;;;\n;;; AND\n;;;\n;;; that predication is not already in the database\n;;;\n;;; AND\n;;;\n;;; any other predication matching the predicate and ?user\n;;; eg. [has-health-insurance matt no] is not already in the\n;;; database.\n;;;\n;;; AND\n;;;\n;;; there is no rule we can use to find out the answer\n;;;\n;;; this can be told by check [known [has-health-insurance matt ?]]\n(define-predicate already-known (predicate object))\n;;; if after doing the normal processing nothing is found\n;;; then finally ask the guy a question if appropriate\n(define-predicate-method (ask question-if-unknown-model) (intended-\ntruth-value continuation do-backward-rules do-questions)\n(let ((answers nil)\n(predicate (predication-predicate self)))\n(flet ((my-continuation (bs)\n(let* ((answer (ask-query bs))\n(database-answer (insert (copy-object-if-necessary\nanswer))))\n(pushnew database-answer answers))))\n(with-statement-destructured (user value) self\n(declare (ignore value))\n(with-unbound-logic-variables (value)\n\n(let ((predication `[,predicate ,user ,value]))\n;; first see if there's an answer already in the database\n;; may want to change this to asserting already-know\npredication, but I'm trying to avoid that\n(ask-data predication intended-truth-value #'my-\ncontinuation)\n(unless answers\n;; Now go get stuff from rules.\n(when do-backward-rules\n(ask-rules predication intended-truth-value #'my-\ncontinuation do-questions))\n;; now go hack questions\n(unless answers\n(when do-questions\n(ask-questions predication intended-truth-value #'my-\ncontinuation))))))\n;; if he's doing a raws database fetch, don't ask\n(when (and (null answers) (or do-backward-rules do-questions))\n(unless (joshua:unbound-logic-variable-p user)\n(let* ((answer (get-an-answer self))\n(database-answer (tell `[,predicate ,user ,answer]\n:justification '((user-input\n1.0)))))\n(pushnew database-answer answers))))))\n(loop for answer in answers\nwhen (eql (predication-truth-value answer) intended-truth-\nvalue)\ndo (with-stack-list (just self intended-truth-value answer)\n(with-unification\n(unify self answer)\n(funcall continuation just)))))\n;; make it clear that there is no interesting return value\n(values))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;; Code pertaining to the food and wine pairing system\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; General predicates that take numeric values\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (minimum-temp value-is-numeric-\nmixin)\n:possesive-suffix \"'s\" :prompt1 \"location doesn't go lower than\"\n:prompt2 \"degrees\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;;\n;;;\n;;; General predicates that take one of a set of values\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (meal value-is-option-mixin)\n:possesive-suffix \"'s\" :prompt1 \"meal type: lunch, dinner or desser\"\n:prompt2 \"is of type\"\n:possible-values (lunch dinner dessert))\n(define-predicate-with-ancillary-info (food-ethnicity value-is-option-\nmixin)\n:possesive-suffix \"'s\" :prompt1 \"meal ethnicity\" :prompt2 \"is\"\n:possible-values (AMERICAN ITALIAN FRENCH CARIBBEAN MEXICAN MIDDLE-\nEASTERN INDIAN CHINESE))\n(define-predicate-with-ancillary-info (wine-to-drink value-is-option-\nmixin)\n:possesive-suffix \"'s\" :prompt1 \"recommended wine\" :prompt2 \"is\"\n:possible-values (PINOT-NOIR CABERNET-SAUVIGNON MERLOT ZINFANDEL\nSAUVIGNON-BLANC CHARDONNAY RIESLING))\n(define-predicate-with-ancillary-info (meat-round1 value-is-option-\nmixin)\n:possesive-suffix \"\" :prompt1 \"might eat\" :prompt2 \"\"\n:possible-values (pork/beef poultry/seafood))\n(define-predicate-with-ancillary-info (final-meat value-is-option-\nmixin)\n:possesive-suffix \"\" :prompt1 \"is most likely\" :prompt2 \"eating\"\n:possible-values (BBQ beef seafood poultry pork lamb gamebird\nshellfish none))\n(define-predicate-with-ancillary-info (sauce-type value-is-option-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is most likely based on this\nsauce\" :prompt2 \"\"\n:possible-values (BBQ TOMATOES CREAM LIGHT CURRY)\n:prompt3 \"sauce\")\n(define-predicate-with-ancillary-info (month value-is-option-mixin)\n:possesive-suffix \"\" :prompt1 \"month\" :prompt2 \"is\"\n:possible-values (JANUARY FEBRUARY MARCH APRIL MAY JUNE JULY AUGUST\nSEPTEMBER OCTOBER NOVEMBER DECEMBER))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Boolean valued predicates relating to herbs/spices\n;;;\n;;;\n;;;\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (use-mint value-is-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"mint in it\")\n(define-predicate-with-ancillary-info (use-sage value-is-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"sage in it\")\n(define-predicate-with-ancillary-info (use-cinnamon value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"cinnamon in it\")\n(define-predicate-with-ancillary-info (use-black-pepper value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"black pepper in it\")\n(define-predicate-with-ancillary-info (use-bay-leaf value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"bay leaf in it\")\n(define-predicate-with-ancillary-info (use-parsley value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"parsley in it\")\n(define-predicate-with-ancillary-info (use-nutmeg value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"nutmeg in it\")\n(define-predicate-with-ancillary-info (use-chili value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"chili in it\")\n(define-predicate-with-ancillary-info (use-curry value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"curry in it\")\n(define-predicate-with-ancillary-info (use-oregano value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"oregano in it\")\n(define-predicate-with-ancillary-info (use-basil value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"basil in it\")\n(define-predicate-with-ancillary-info (use-tarragon value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"tarragon in it\")\n(define-predicate-with-ancillary-info (use-thyme value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"thyme in it\")\n(define-predicate-with-ancillary-info (use-clove value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"clove in it\")\n\n(define-predicate-with-ancillary-info (use-garlic value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"garlic in it\")\n(define-predicate-with-ancillary-info (use-pepper value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"pepper in it\")\n(define-predicate-with-ancillary-info (use-mustard value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"mustard in it\")\n(define-predicate-with-ancillary-info (use-ginger value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"ginger in it\")\n(define-predicate-with-ancillary-info (use-caribbean value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"caribbean spices in it\")\n(define-predicate-with-ancillary-info (use-dill value-is-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"dill in it\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Boolean valued predicates relating to sauces\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (use-bbq-sauce value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"BBQ sauce in it\")\n(define-predicate-with-ancillary-info (has-tomatoes value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"has\" :prompt2 \"doesn't have\"\n:prompt3 \"tomatoes\")\n(define-predicate-with-ancillary-info (use-cream-sauce value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"a cream based sauce in it\")\n(define-predicate-with-ancillary-info (use-light-sauce value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"light sauce in it\")\n(define-predicate-with-ancillary-info (use-curry-sauce value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"shouldn't have\"\n:prompt3 \"curry sauce in it\")\n(define-predicate-with-ancillary-info (use-bbq-sauce-r1 value-is-\noption-mixin)\n\n:possesive-suffix \"'s meal\" :prompt1 \"most likely has\" :prompt2\n\"shouldn't have\"\n:possible-values (Yes No maybe))\n(define-predicate-with-ancillary-info (has-tomatoes-r1 value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"most likely has\" :prompt2\n\"shouldn't have\"\n:possible-values (Yes No maybe))\n(define-predicate-with-ancillary-info (use-cream-sauce-r1 value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"most likely has\" :prompt2\n\"shouldn't have\"\n:possible-values (Yes No maybe))\n(define-predicate-with-ancillary-info (use-curry-sauce-r1 value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"most likely has\" :prompt2\n\"shouldn't have\"\n:possible-values (Yes No maybe))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; General boolean valued predicates\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (having-lunch value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"not\" :prompt3 \"having\nlunch\")\n(define-predicate-with-ancillary-info (having-dinner value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"not\" :prompt3 \"having\ndinner\")\n(define-predicate-with-ancillary-info (having-dessert value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"not\" :prompt3 \"having\ndessert\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to meats\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (bbq value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a BBQ meal\")\n(define-predicate-with-ancillary-info (beef value-is-boolean-mixin2)\n\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a beef meal\")\n(define-predicate-with-ancillary-info (seafood value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a seafood meal\")\n(define-predicate-with-ancillary-info (poultry value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a chicken meal\")\n(define-predicate-with-ancillary-info (pork value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a pork meal\")\n(define-predicate-with-ancillary-info (lamb value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a lamb meal\")\n(define-predicate-with-ancillary-info (gamebird value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a gamebird meal\")\n(define-predicate-with-ancillary-info (shellfish value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"having\" :prompt2 \"is not having\"\n:prompt3 \"a shellfish meal\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to location\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (is-near-coast value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"located\" :prompt2 \"is not located\"\n:prompt3 \"near the coast\")\n(define-predicate-with-ancillary-info (is-south value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"located\" :prompt2 \"is not located\"\n:prompt3 \"in the south\")\n(define-predicate-with-ancillary-info (is-midwest value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"located\" :prompt2 \"is not located\"\n:prompt3 \"in the midwest\")\n(define-predicate-with-ancillary-info (is-north value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"located\" :prompt2 \"is not located\"\n:prompt3 \"in the north\")\n(define-predicate-with-ancillary-info (is-east value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"located\" :prompt2 \"is not located\"\n:prompt3 \"in the east\")\n(define-predicate-with-ancillary-info (has-boat value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"has\" :prompt2 \"doesn't have\" :prompt3\n\"a boat\")\n\n(define-predicate-with-ancillary-info (goes-to-the-beach value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"go often\" :prompt2 \"is not\" :prompt3\n\"to the beach\")\n(define-predicate-with-ancillary-info (likes-country value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"like\" :prompt2 \"doesn't like\" :prompt3\n\"country music\")\n(define-predicate-with-ancillary-info (says-pop value-is-boolean-mixin)\n:possesive-suffix \"\" :prompt1 \"say\" :prompt2 \"doesn't say\" :prompt3\n\"pop when talking about coke/pepsi\")\n(define-predicate-with-ancillary-info (is-near-coast-r1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"is located\" :prompt2 \"is not located\"\n:possible-values (yes no idk))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to seasons\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (is-spring value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"the current season\" :prompt2 \"is not\ncurrently in\" :prompt3 \"spring\")\n(define-predicate-with-ancillary-info (is-summer value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"the current season\" :prompt2 \"is not\ncurrently in\" :prompt3 \"summer\")\n(define-predicate-with-ancillary-info (is-fall value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"the current season\" :prompt2 \"is not\ncurrently in\" :prompt3 \"fall\")\n(define-predicate-with-ancillary-info (is-winter value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"the current season\" :prompt2 \"is not\ncurrently in\" :prompt3 \"winter\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to wine characteristics\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(define-predicate-with-ancillary-info (prefers-sweet-wines value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"prefer\" :prompt2 \"does not like\"\n:prompt3 \"sweet wines\")\n(define-predicate-with-ancillary-info (prefers-dry-wines value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"prefer\" :prompt2 \"does not like\"\n:prompt3 \"dry wines\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Random Meal Stuff\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (has-cheese value-is-boolean-\nmixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"doesn't have\"\n:prompt3 \"cheese in it\")\n(define-predicate-with-ancillary-info (is-pasta value-is-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"have\" :prompt2 \"doesn't have\"\n:prompt3 \"pasta in it\")\n(define-predicate-with-ancillary-info (is-vegetarian value-is-boolean-\nmixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"is not\" :prompt3\n\"vegetarian\")\n(define-predicate-with-ancillary-info (is-spicy value-is-boolean-\nmixin2)\n:possesive-suffix \"'s meal\" :prompt1 \"\" :prompt2 \"is not\" :prompt3\n\"spicy\")\n(define-predicate-with-ancillary-info (like-indian value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"also enjoy\" :prompt2 \"doesn't really\nlike\" :prompt3 \"indian food\")\n(define-predicate-with-ancillary-info (likes-savory value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"enjoy\" :prompt2 \"doesn't really like\"\n:prompt3 \"savory foods\")\n(define-predicate-with-ancillary-info (on-date value-is-boolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"is not\" :prompt3 \"on a\ndate\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to health consciousness\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(define-predicate-with-ancillary-info (health-conscious-r1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"is health conscious? Yes No idk\"\n:prompt2 \"is not\"\n:possible-values (yes no idk))\n(define-predicate-with-ancillary-info (health-conscious value-is-\nboolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"is not\" :prompt3 \"health\nconscious\")\n(define-predicate-with-ancillary-info (has-dieted-in-past-year value-\nis-boolean-mixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"doesn't\" :prompt3 \"diet or\nhas followed some sort of diet during the past year\")\n(define-predicate-with-ancillary-info (exercises value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"doesn't\" :prompt3\n\"exercise more than twice a week\")\n(define-predicate-with-ancillary-info (follows-the-pyramid value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"pay\" :prompt2 \"doesn't pay\" :prompt3\n\"attention to what he/she eats\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to savory foods\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (like-savory value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"like\" :prompt2 \"doesn't like\" :prompt3\n\"savory foods\")\n(define-predicate-with-ancillary-info (has-herb-garden value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"have\" :prompt2 \"doesn't have\" :prompt3\n\"a herb garden\")\n(define-predicate-with-ancillary-info (has-several-spices value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"have\" :prompt2 \"doesn't have\" :prompt3\n\"more than 5 herbs and spices in his/her spice cabinet\")\n(define-predicate-with-ancillary-info (enjoy-steak-sauce value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"like\" :prompt2 \"doesn't like\" :prompt3\n\"steak sauce\")\n(define-predicate-with-ancillary-info (like-savory-r1 value-is-option-\nmixin)\n\n:possesive-suffix \"\" :prompt1 \"likes savory foods? Yes No idk\"\n:prompt2 \"doesn't\"\n:possible-values (yes no idk))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to drink preference\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (prefers-fruit-punch value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"prefer\" :prompt2 \"does not prefer\"\n:prompt3 \"fruit punch over iced tea\")\n(define-predicate-with-ancillary-info (prefers-iced-tea value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"prefer\" :prompt2 \"does not prefer\"\n:prompt3 \"iced tea over fruit punch\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to lactose/allergies\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (eat-cheese value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"cannot\" :prompt3 \"eat\ncheese\")\n(define-predicate-with-ancillary-info (eat-ice-cream value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"cannot\" :prompt3 \"eat ice\ncream\")\n(define-predicate-with-ancillary-info (drink-milk value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"cannot\" :prompt3 \"drink-\nmilk\")\n(define-predicate-with-ancillary-info (lactose-tolerant value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"\" :prompt2 \"cannot\" :prompt3 \"tolerate\nlactose\")\n(define-predicate-with-ancillary-info (lactose-tolerant-r1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"can tolerate lactose? Yes No idk\"\n:prompt2 \"can't tolerate\"\n\n:possible-values (yes no idk))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to exotic taste\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (tries-new-dishes value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"like \" :prompt2 \"doesn't like\"\n:prompt3 \"to try new dishes\")\n(define-predicate-with-ancillary-info (tries-dishes-w-weird-names\nvalue-is-boolean-mixin)\n:possesive-suffix \"\" :prompt1 \"like \" :prompt2 \"doesn't like\"\n:prompt3 \"to try dishes with weird names\")\n(define-predicate-with-ancillary-info (likes-to-travel value-is-\nboolean-mixin)\n:possesive-suffix \"\" :prompt1 \"like \" :prompt2 \"doesn't like\"\n:prompt3 \"to travel\")\n(define-predicate-with-ancillary-info (hunts value-is-boolean-mixin)\n:possesive-suffix \"\" :prompt1 \"like \" :prompt2 \"doesn't like\"\n:prompt3 \"hunt\")\n(define-predicate-with-ancillary-info (exotic-taste value-is-boolean-\nmixin)\n:possesive-suffix \"\" :prompt1 \"have\" :prompt2 \"doesn't have\" :prompt3\n\"exotic tastes\")\n(define-predicate-with-ancillary-info (exotic-taste-r1 value-is-option-\nmixin)\n:possesive-suffix \"\" :prompt1 \"has exotic taste? Yes No idk\"\n:prompt2 \"doesn't\"\n:possible-values (yes no idk))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to restaurant expense\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(define-predicate-with-ancillary-info (has-valet value-is-boolean-\nmixin)\n:possesive-suffix \"restaurant\" :prompt1 \"is in has \" :prompt2\n\"doesn't have\" :prompt3 \"valet parking\")\n(define-predicate-with-ancillary-info (has-value-menu value-is-boolean-\nmixin)\n\n:possesive-suffix \"restaurant\" :prompt1 \"is in has \" :prompt2\n\"doesn't have\" :prompt3 \"a value meal menu\")\n(define-predicate-with-ancillary-info (has-dress-code value-is-boolean-\nmixin)\n:possesive-suffix \"restaurant\" :prompt1 \"is in requires \" :prompt2\n\"doesn't require\" :prompt3 \"a dress code\")\n(define-predicate-with-ancillary-info (has-host value-is-boolean-mixin)\n:possesive-suffix \"restaurant\" :prompt1 \"is in have \" :prompt2\n\"doesn't have\" :prompt3 \"a host or hostess\")\n(define-predicate-with-ancillary-info (is-expensive value-is-boolean-\nmixin)\n:possesive-suffix \"restaurant\" :prompt1 \"is going\" :prompt2 \"is not\"\n:prompt3 \"expensive\")\n(define-predicate-with-ancillary-info (is-expensive-r1 value-is-option-\nmixin)\n:possesive-suffix \"\" :prompt1 \"is at an expensive restaurant? Yes No\nidk\" :prompt2 \"is not \"\n:possible-values (yes no idk))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to American ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-american value-is-\nboolean-mixin2)\n:possesive-suffix \"\" :prompt1 \"eating a f\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-american value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-american-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Caribbean ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n\n(define-predicate-with-ancillary-info (full-meal-caribbean value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-caribbean value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-caribbean-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Chinese ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-chinese value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-chinese value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-chinese-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Italian ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-italian value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-italian value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n\n(define-predicate-with-ancillary-info (cheese-meal-italian value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"based only on cheese\")\n(define-predicate-with-ancillary-info (meat-italian-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n(define-predicate-with-ancillary-info (seafood/poultry-italian value-\nis-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"seafood/poultry\")\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Mexican ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-mexican value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-mexican value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-mexican-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to French ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-french value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-french value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n\n(define-predicate-with-ancillary-info (meat-french-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Indian ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-indian value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-indian value-is-\nboolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-indian-round1 value-is-\noption-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Predicates relating to Middle Eastern ethnicity\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Predicates relating to meal type\n(define-predicate-with-ancillary-info (full-meal-middle-eastern value-\nis-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"full\")\n(define-predicate-with-ancillary-info (dessert-meal-middle-eastern\nvalue-is-boolean-mixin)\n:possesive-suffix \"'s meal\" :prompt1 \"is\" :prompt2 \"is not\" :prompt3\n\"dessert\")\n(define-predicate-with-ancillary-info (meat-middle-eastern-round1\nvalue-is-option-mixin)\n:possesive-suffix \"\" :prompt1 \"might\" :prompt2 \"eat\"\n:possible-values (pork/beef poultry/seafood))\n;;; The following sections are for questions for the specific\nethnicities\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: American Food\nSpecific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-american (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user american]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-american ?user yes])\n(defrule dessert-meal-american (:backward :certainty 1.0 :importance\n91)\nif [and\n[food-ethnicity ?user american]\n[meal ?user dessert]]\nthen\n[dessert-meal-american ?user yes])\n(defrule full-meal-american-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-american ?user yes]\nthen [and [dessert-meal-american ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-american-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user american]\n[meal ?user dessert]]\nthen [full-meal-american ?user no])\n;;; Figure out meat\n;;; General selection\n(defrule meat-type-healthy-american (:backward :certainty 1.0\n:importance 96)\nif [and\n[food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[health-conscious ?user yes]]\nthen [meat-american-round1 ?user poultry/seafood])\n(defrule meat-type-not-healthy-american (:backward :certainty 1.0\n:importance 95)\nif [and\n[food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[health-conscious ?user no]]\nthen [meat-american-round1 ?user pork/beef])\n;;; final selection\n(defrule bbq-american (:backward :certainty 1.0 :importance 94)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user pork/beef]\n\n[is-south ?user yes]\n[is-summer ?user yes]\n[use-bbq-sauce ?user yes]]\nthen\n[final-meat ?user BBQ])\n(defrule beef-american (:backward :certainty 1.0 :importance 93)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user pork/beef]\n[is-midwest ?user yes]]\nthen [beef ?user yes])\n(defrule beef-american-no (:backward :certainty 1.0 :importance 93)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user pork/beef]\n[is-midwest ?user no]]\nthen [beef ?user no])\n(defrule seafood-american (:backward :certainty 1.0 :importance 92)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user poultry/seafood]\n[is-near-coast ?user yes]]\nthen [seafood ?user yes])\n(defrule seafood-american-no (:backward :certainty 1.0 :importance\n92)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user poultry/seafood]\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule poultry-american (:backward :certainty 1.0 :importance 91)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user poultry/seafood]\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule poultry-american-no (:backward :certainty 1.0 :importance\n91)\nif [and [food-ethnicity ?user american]\n[full-meal-american ?user yes]\n[meat-american-round1 ?user poultry/seafood]\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Caribbean Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;; Meal Type\n(defrule full-meal-caribbean (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user caribbean]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-caribbean ?user yes])\n(defrule dessert-meal-caribbean (:backward :certainty 1.0 :importance\n91)\nif [and\n[food-ethnicity ?user caribbean]\n[meal ?user dessert]]\nthen\n[dessert-meal-caribbean ?user yes])\n(defrule full-meal-caribbean-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-caribbean ?user yes]\nthen [and [dessert-meal-caribbean ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-caribbean-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user caribbean]\n[meal ?user dessert]]\nthen [full-meal-caribbean ?user no])\n;;; Figure out meat\n\n;;; General selection\n(defrule meat-type-healthy-caribbean (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user caribbean]\n[full-meal-caribbean ?user yes]\n[health-conscious ?user yes]]\nthen [meat-caribbean-round1 ?user poultry/seafood])\n(defrule meat-type-not-healthy-caribbean (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user caribbean]\n[full-meal-caribbean ?user yes]\n[health-conscious ?user no]]\nthen [meat-caribbean-round1 ?user pork/beef])\n;;; final selection\n(defrule pork-caribbean (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]\n[is-expensive ?user yes]]\nthen [pork ?user yes])\n(defrule pork-caribbean-no (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]\n[is-expensive ?user no]]\nthen [pork ?user no])\n\n(defrule pork-caribbean-no2 (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]]\nthen [pork ?user yes])\n(defrule beef-caribbean (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]\n[is-expensive ?user no]]\nthen [beef ?user yes])\n(defrule beef-caribbean-no (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]\n[is-expensive ?user yes]]\nthen [beef ?user no])\n(defrule beef-caribbean-no2 (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]]\nthen [beef ?user no])\n(defrule seafood-caribbean (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]\n[is-near-coast ?user yes]]\nthen [seafood ?user yes])\n(defrule seafood-caribbean-no (:backward :certainty 1.0 :importance\n10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule seafood-caribbean-no2 (:backward :certainty 1.0 :importance\n10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]]\nthen [seafood ?user no])\n(defrule poultry-caribbean (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule poultry-caribbean-no (:backward :certainty 1.0 :importance\n10)\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user poultry/seafood]\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n(defrule poultry-caribbean-no2 (:backward :certainty 1.0 :importance\n10)\n\nif [and [food-ethnicity ?user caribbean]\n[meat-caribbean-round1 ?user pork/beef]]\nthen [poultry ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Italian Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-italian (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user italian]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-italian ?user yes])\n(defrule dessert-meal-italian (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user italian]\n[meal ?user dessert]]\nthen\n[dessert-meal-italian ?user yes])\n(defrule full-meal-italian-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-italian ?user yes]\nthen [and [dessert-meal-italian ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-italian-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user italian]\n[meal ?user dessert]]\nthen [full-meal-italian ?user no])\n(defrule vegetarian (:backward :certainty 1.0 :importance 10)\nif [is-vegetarian ?user yes]\nthen [cheese-meal-italian ?user yes])\n;;; Figure out meat\n\n;;; General selection\n(defrule meat-type-healthy-italian (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[health-conscious ?user yes]]\nthen [seafood/poultry-italian ?user yes])\n(defrule meat-type-healthy-italian-no1 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[health-conscious ?user no]]\n\nthen [seafood/poultry-italian ?user no])\n;;; final selection\n(defrule meat-type-not-healthy-italian (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[health-conscious ?user no]]\nthen [beef ?user yes])\n(defrule meat-type-not-healthy-italian-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[health-conscious ?user yes]]\nthen [beef ?user no])\n(defrule seafood-italian (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user italian]\n[seafood/poultry-italian ?user yes]\n[is-near-coast ?user yes]]\nthen [seafood ?user yes])\n(defrule seafood-italian-no (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user italian]\n[seafood/poultry-italian ?user yes]\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule poultry-italian (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user italian]\n[seafood/poultry-italian ?user yes]\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule poultry-italian-no (:backward :certainty 1.0 :importance 10)\nif [and [food-ethnicity ?user italian]\n[seafood/poultry-italian ?user yes]\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n;;; ethnicity specific\n(defrule cheese-italian (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[lactose-tolerant ?user yes]]\nthen [has-cheese ?user yes])\n(defrule cheese-italian-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user italian]\n[full-meal-italian ?user yes]\n[lactose-tolerant ?user no]]\nthen [has-cheese ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Mexican Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-mexican (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user mexican]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-mexican ?user yes])\n(defrule dessert-meal-mexican (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user mexican]\n[meal ?user dessert]]\nthen\n[dessert-meal-mexican ?user yes])\n(defrule full-meal-mexican-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-mexican ?user yes]\nthen [and [dessert-meal-mexican ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-mexican-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user mexican]\n[meal ?user dessert]]\nthen [full-meal-mexican ?user no])\n;;; Figure out meat\n;;; General selection\n(defrule meat-type-healthy-mexican (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[health-conscious ?user yes]]\nthen [poultry ?user yes])\n(defrule meat-type-healthy-mexican-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[health-conscious ?user no]]\nthen [poultry ?user no])\n(defrule meat-not-type-healthy-mexican (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[health-conscious ?user no]]\nthen [meat-mexican-round1 ?user pork/beef])\n\n;;; final selection\n(defrule meat-not-type-healthy-mexican-beef (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[meat-mexican-round1 ?user pork/beef]\n\n[is-expensive ?user yes]]\nthen [beef ?user yes])\n(defrule meat-not-type-healthy-mexican-beef-no (:backward :certainty\n1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[meat-mexican-round1 ?user pork/beef]\n\n[is-expensive ?user no]]\n\nthen [beef ?user no])\n(defrule meat-not-type-healthy-mexican-pork (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[meat-mexican-round1 ?user pork/beef]\n\n[is-expensive ?user no]]\nthen [pork ?user yes])\n(defrule meat-not-type-healthy-mexican-pork-no (:backward :certainty\n1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[meat-mexican-round1 ?user pork/beef]\n\n[is-expensive ?user no]]\n\nthen [pork ?user no])\n;;; ethnicity specific\n(defrule spicy-mexican (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[is-spicy ?user yes]]\nthen [use-chili ?user yes])\n(defrule spicy-mexican-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[is-spicy ?user no]]\nthen [use-chili ?user no])\n(defrule cheese-mexican (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n[lactose-tolerant ?user yes]]\nthen [has-cheese ?user yes])\n(defrule cheese-mexican-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user mexican]\n[full-meal-mexican ?user yes]\n\n[lactose-tolerant ?user no]]\nthen [has-cheese ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Chinese Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-chinese (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user chinese]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-chinese ?user yes])\n(defrule dessert-meal-chinese (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user chinese]\n[meal ?user dessert]]\nthen\n[dessert-meal-chinese ?user yes])\n(defrule full-meal-chinese-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-chinese ?user yes]\nthen [and [dessert-meal-chinese ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-chinese-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user chinese]\n[meal ?user dessert]]\nthen [full-meal-chinese ?user no])\n;;; Figure out meat\n;;; General selection\n(defrule meat-type-healthy-chinese (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[health-conscious ?user yes]]\nthen [meat-chinese-round1 ?user poultry/seafood])\n(defrule meat-type-unhealthy-chinese (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[health-conscious ?user no]]\nthen [meat-chinese-round1 ?user pork/beef])\n;;; final selection\n(defrule meat-seafood-chinese (:backward :certainty 1.0 :importance 10)\n\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\n\nthen [seafood ?user yes])\n(defrule meat-seafood-chinese-no (:backward :certainty 1.0 :importance\n11)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]]\nthen [seafood ?user no])\n(defrule meat-seafood-chinese-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule meat-poultry-chinese (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule meat-poultry-chinese-no (:backward :certainty 1.0 :importance\n11)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]]\nthen [poultry ?user no])\n(defrule meat-poultry-chinese-no2 (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n(defrule meat-beef-chinese (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]\n\n[is-expensive ?user yes]]\nthen [beef ?user yes])\n(defrule meat-beef-chinese-no (:backward :certainty 1.0 :importance 11)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]]\nthen [beef ?user no])\n\n(defrule meat-beef-chinese-no2 (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]\n\n[is-expensive ?user no]]\nthen [beef ?user no])\n(defrule meat-pork-chinese (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]\n\n[is-expensive ?user no]]\nthen [pork ?user yes])\n(defrule meat-pork-chinese-no (:backward :certainty 1.0 :importance 11)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user poultry/seafood]]\nthen [pork ?user no])\n(defrule meat-pork-chinese-no2 (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[meat-chinese-round1 ?user pork/beef]\n\n[is-expensive ?user yes]]\nthen [pork ?user no])\n;;; ethnicity specific\n(defrule spicy-chinese1 (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[is-spicy ?user yes]]\nthen [use-ginger ?user yes])\n(defrule spicy-chinese1-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[is-spicy ?user no]]\nthen [use-ginger ?user no])\n(defrule spicy-chinese2 (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[is-spicy ?user yes]]\nthen [use-chili ?user yes])\n(defrule spicy-chinese2-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user chinese]\n[full-meal-chinese ?user yes]\n[is-spicy ?user no]]\nthen [use-chili ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Middle Eastern Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-middle-eastern (:backward :certainty 1.0 :importance\n91)\nif [and\n[food-ethnicity ?user middle-eastern]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-middle-eastern ?user yes])\n(defrule dessert-meal-middle-eastern (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user middle-eastern]\n[meal ?user dessert]]\nthen\n[dessert-meal-middle-eastern ?user yes])\n(defrule full-meal-middle-eastern-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-middle-eastern ?user yes]\nthen [and [dessert-meal-middle-eastern ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-middle-eastern-exclusion (:backward :certainty\n1.0 :importance 91)\nif [and\n[food-ethnicity ?user middle-eastern]\n[meal ?user dessert]]\nthen [full-meal-middle-eastern ?user no])\n;;; Figure out meat\n;;; General selection\n(defrule meat-type-healthy-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[health-conscious ?user yes]]\nthen [meat-middle-eastern-round1 ?user poultry/seafood])\n(defrule meat-type-not-healthy-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[health-conscious ?user no]]\nthen [meat-middle-eastern-round1 ?user beef/lamb])\n;;; final selection\n(defrule meat-type-poultry-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule meat-type-poultry-middle-eastern-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n(defrule meat-type-poultry-middle-eastern-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]]\nthen [poultry ?user no])\n(defrule meat-type-seafood-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\nthen [seafood ?user yes])\n(defrule meat-type-seafood-middle-eastern-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule meat-type-seafood-middle-eastern-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]]\nthen [seafood ?user no])\n(defrule meat-type-lamb-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]\n\n[like-indian ?user yes]]\n\nthen [lamb ?user yes])\n(defrule meat-type-lamb-middle-eastern-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]\n\n[like-indian ?user no]]\n\nthen [lamb ?user no])\n(defrule meat-type-lamb-middle-eastern-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]]\nthen [lamb ?user no])\n(defrule meat-type-beef-middle-eastern (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]\n\n[like-indian ?user no]]\n\nthen [beef ?user yes])\n(defrule meat-type-beef-middle-eastern-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user beef/lamb]\n\n[like-indian ?user yes]]\n\nthen [beef ?user no])\n(defrule meat-type-beef-middle-eastern-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[meat-middle-eastern-round1 ?user poultry/seafood]]\nthen [beef ?user no])\n;;; ethnicity specific\n(defrule tarragon-middle-eastern (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[likes-savory ?user yes]]\nthen [use-tarragon ?user yes])\n(defrule tarragon-middle-eastern-no (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[likes-savory ?user no]]\nthen [use-tarragon ?user no])\n(defrule dill-middle-eastern (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user middle-eastern]\n[full-meal-middle-eastern ?user yes]\n[likes-savory ?user yes]]\nthen [use-dill ?user yes])\n(defrule dill-middle-eastern-no (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user middle-eastern]\n\n[full-meal-middle-eastern ?user yes]\n[likes-savory ?user no]]\nthen [use-dill ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Indian Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-indian (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user indian]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-indian ?user yes])\n(defrule dessert-meal-indian (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user indian]\n[meal ?user dessert]]\nthen\n[dessert-meal-indian ?user yes])\n(defrule full-meal-indian-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-indian ?user yes]\nthen [and [dessert-meal-indian ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-indian-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user indian]\n[meal ?user dessert]]\nthen [full-meal-indian ?user no])\n;;; Figure out meat\n(defrule meat-type-poultry-indian(:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n[health-conscious ?user yes]]\nthen [poultry ?user yes])\n(defrule meat-type-poultry-indian-no(:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n[health-conscious ?user no]]\nthen [poultry ?user no])\n(defrule meat-type-lamb-indian(:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n\n[health-conscious ?user no]]\nthen [lamb ?user yes])\n(defrule meat-type-lamb-indian-no(:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n[health-conscious ?user yes]]\nthen [lamb ?user no])\n;;; ethnicity specific\n(defrule spicy-indian (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n[is-spicy ?user yes]]\nthen [use-curry ?user yes])\n(defrule spicy-indian-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user indian]\n[full-meal-indian ?user yes]\n[is-spicy ?user no]]\nthen [use-curry ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.)\n;;;\n;;; Domain: French Food Specific\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Meal Type\n(defrule full-meal-french (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user french]\n[or [meal ?user lunch]\n[meal ?user dinner]]]\nthen [full-meal-french ?user yes])\n(defrule dessert-meal-french (:backward :certainty 1.0 :importance 91)\nif [and\n[food-ethnicity ?user french]\n[meal ?user dessert]]\nthen\n[dessert-meal-french ?user yes])\n(defrule full-meal-french-exclusion (:forward :certainty 1.0\n:importance 90)\nif [full-meal-french ?user yes]\nthen [and [dessert-meal-french ?user no]\n[having-dessert ?user no]])\n(defrule dessert-meal-french-exclusion (:backward :certainty 1.0\n:importance 91)\nif [and\n[food-ethnicity ?user french]\n[meal ?user dessert]]\nthen [full-meal-french ?user no])\n\n;;; Figure out meat\n;;; General selection\n(defrule meat-type-healthy-french (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french]\n[full-meal-french ?user yes]\n[health-conscious ?user yes]]\nthen [meat-french-round1 ?user poultry/seafood])\n(defrule meat-type-unhealthy-french (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[health-conscious ?user no]]\nthen [meat-french-round1 ?user pork/gamebird])\n;;; final selection\n(defrule meat-seafood-french (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\nthen [seafood ?user yes])\n(defrule meat-seafood-french-no (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [seafood ?user no])\n(defrule meat-seafood-french-no2 (:backward :certainty 1.0\n:importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user pork/gamebird]]\nthen [seafood ?user no])\n(defrule meat-poultry-french (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user poultry/seafood]\n\n[is-near-coast ?user no]]\nthen [poultry ?user yes])\n(defrule meat-poultry-french-no (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user poultry/seafood]\n\n[is-near-coast ?user yes]]\nthen [poultry ?user no])\n\n(defrule meat-poultry-french-no2 (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes]\n[meat-french-round1 ?user pork/gamebird]]\nthen [poultry ?user no])\n(defrule meat-gamebird-french (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user pork/gamebird]\n\n[exotic-taste ?user yes]]\nthen [gamebird ?user yes])\n(defrule meat-gamebird-french-no (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user pork/gamebird]\n\n[exotic-taste ?user no]]\nthen [gamebird ?user no])\n(defrule meat-gamebird-french-no2 (:backward :certainty 1.0 :importance\n10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user poultry/seafood]]\nthen [gamebird ?user no])\n(defrule meat-pork-french (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user pork/gamebird]\n\n[exotic-taste ?user no]]\nthen [pork ?user yes])\n(defrule meat-pork-french-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user pork/gamebird]\n\n[exotic-taste ?user yes]]\nthen [pork ?user no])\n(defrule meat-pork-french-no2 (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[meat-french-round1 ?user poultry/seafood]]\nthen [pork ?user no])\n;;; ethnicity specific\n(defrule garlic-french (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[on-date ?user no]]\nthen [use-garlic ?user yes])\n\n(defrule garlic-french-no (:backward :certainty 1.0 :importance 10)\nif [and\n[food-ethnicity ?user french ]\n[full-meal-french ?user yes ]\n[on-date ?user yes]]\nthen [use-garlic ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: General Rules Based on Ethnicities\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule no-meat (:forward :certainty 1.0 :importance 90)\nif [meal ?user dessert]\nthen [final-meat ?user none])\n(defrule no-meat2 (:forward :certainty 1.0 :importance 90)\nif [final-meat ?user none]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n(defrule BBQ (:forward :certainty 1.0 :importance 90)\nif [final-meat ?user bbq]\nthen [and\n[beef ?user yes]\n\n[seafood ?user no]\n\n[poultry ?user yes]\n\n[pork ?user yes]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n(defrule beef (:forward :certainty 1.0 :importance 91)\nif [beef ?user yes]\nthen [and\n[seafood ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n(defrule seafood (:forward :certainty 1.0 :importance 90)\nif [seafood ?user yes]\nthen [and\n[beef ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user yes]])\n(defrule poultry (:forward :certainty 1.0 :importance 90)\n\nif [poultry ?user yes]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n\n(defrule pork (:forward :certainty 1.0 :importance 90)\nif [pork ?user yes]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[poultry ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n(defrule lamb (:forward :certainty 1.0 :importance 90)\nif [lamb ?user yes]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[gamebird ?user no]\n\n[shellfish ?user no]])\n(defrule gamebird (:forward :certainty 1.0 :importance 90)\nif [gamebird ?user yes]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[shellfish ?user no]])\n(defrule shellfish (:forward :certainty 1.0 :importance 90)\nif [shellfish ?user yes]\nthen [and\n[beef ?user no]\n\n[seafood ?user no]\n\n[poultry ?user no]\n\n[pork ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]])\n(defrule no-pasta (:forward :certainty 1.0 :importance 99)\nif\n[or\n[food-ethnicity ?user american]\n\n[food-ethnicity ?user french]\n\n[food-ethnicity ?user caribbean]\n\n[food-ethnicity ?user mexican]\n\n[food-ethnicity ?user indian]\n\n[food-ethnicity ?user middle-eastern]\n\n[food-ethnicity ?user chinese]]\nthen [is-pasta ?user no])\n(defrule no-cheese (:forward :certainty 1.0 :importance 99)\nif\n[or [lactose-tolerant ?user no]\n[or\n[food-ethnicity ?user american]\n\n[food-ethnicity ?user french]\n\n[food-ethnicity ?user caribbean]\n\n[food-ethnicity ?user indian]\n\n[food-ethnicity ?user middle-eastern]\n\n[food-ethnicity ?user chinese]]]\nthen [has-cheese ?user no])\n;;; the sauces yes or no rules\n(defrule BBQ-sauce-yes (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-bbq-sauce-r1 ?user yes]\n\n[and [use-bbq-sauce-r1 ?user maybe]\n\n[and [is-south ?user yes]\n[is-summer ?user yes]]]]\nthen [use-bbq-sauce ?user yes])\n(defrule BBQ-sauce-no (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-bbq-sauce-r1 ?user no]\n\n[and [use-bbq-sauce-r1 ?user maybe]\n[or\n\n[is-south ?user no]\n[is-summer ?user no]]]]\nthen [use-bbq-sauce ?user no])\n(defrule tomato-sauce-yes (:backward :certainty 1.0 :importance 99)\nif\n[or\n[has-tomatoes-r1 ?user yes]\n\n[and [has-tomatoes-r1 ?user maybe]\n[or\n[and [lactose-tolerant ?user no]\n\n[is-summer ?user yes]]\n\n[and [lactose-tolerant ?user yes]\n\n[is-summer ?user\nyes]]]]]\nthen [has-tomatoes ?user yes])\n(defrule tomato-sauce-no (:backward :certainty 1.0 :importance 99)\nif\n[or\n[has-tomatoes-r1 ?user no]\n\n[and [has-tomatoes-r1 ?user maybe]\n[or\n[and [lactose-tolerant ?user no]\n\n[is-summer ?user no]]\n\n[and [lactose-tolerant ?user yes]\n\n[is-summer ?user\nno]]]]]\nthen [has-tomatoes ?user no])\n(defrule cream-sauce-yes (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-cream-sauce-r1 ?user yes]\n[and [use-cream-sauce-r1 ?user maybe]\n\n[lactose-tolerant ?user yes]]]\nthen [use-cream-sauce ?user yes])\n(defrule cream-sauce-no (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-cream-sauce-r1 ?user no]\n[and [use-cream-sauce-r1 ?user maybe]\n\n[lactose-tolerant ?user no]]]\nthen [use-cream-sauce ?user no])\n(defrule curry-sauce-yes (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-curry-sauce-r1 ?user yes]\n\n[and [use-curry-sauce-r1 ?user maybe]\n\n[use-curry ?user yes]]]\n\nthen [use-curry-sauce ?user yes])\n(defrule curry-sauce-no (:backward :certainty 1.0 :importance 99)\nif\n[or\n[use-curry-sauce-r1 ?user no]\n[and [use-curry-sauce-r1 ?user maybe]\n\n[use-curry ?user no]]]\nthen [use-curry-sauce ?user no])\n;;; the herbs/sauces\n;;; This is a real cheap way to do this, there has to be a simpler way\n(defrule american-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user american]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user no]\n\n[use-bbq-sauce-r1 ?user maybe]\n\n[use-light-sauce ?user no]\n\n[has-tomatoes-r1 ?user no]\n\n[use-cream-sauce-r1 ?user no]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]])\n(defrule caribbean-herbs-sauces (:forward :certainty 1.0 :importance\n99)\nif\n[food-ethnicity ?user caribbean]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user no]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user yes]\n\n[has-tomatoes-r1 ?user maybe]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?who no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n])\n\n(defrule italian-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user italian]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user no]\n\n[has-tomatoes-r1 ?user maybe]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?who yes]\n\n[lamb ?user no]\n\n[gamebird ?user no]])\n\n(defrule mexican-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user mexican]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user yes]\n\n[has-tomatoes-r1 ?user maybe]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[lamb ?user no]\n\n[gamebird ?user no]\n\n[seafood ?user no]\n\n[shellfish ?user no]])\n\n(defrule chinese-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user chinese]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user yes]\n\n[has-tomatoes-r1 ?user no]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?who no]\n\n[lamb ?user no]\n\n[gamebird ?user no]])\n\n(defrule middle-eastern-herbs-sauces (:forward :certainty 1.0\n:importance 99)\nif\n[food-ethnicity ?user middle-eastern]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user yes]\n\n[has-tomatoes-r1 ?user no]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?who no]\n\n[pork ?user no]\n\n[gamebird ?user no]\n\n])\n\n(defrule indian-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user indian]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user no]\n\n[has-tomatoes-r1 ?user no]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user maybe]\n\n[is-pasta ?who no]\n\n[beef ?user no]\n\n[pork ?user no]\n\n[gamebird ?user no]\n\n[seafood ?user no]\n\n[shellfish ?user no]\n\n])\n\n(defrule french-herbs-sauces (:forward :certainty 1.0 :importance 99)\nif\n[food-ethnicity ?user french]\nthen [and\n[use-mint ?user no]\n\n[use-sage ?user yes]\n\n[use-cinnamon ?user yes]\n\n[use-black-pepper ?user yes]\n\n[use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user no]\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user no]\n\n[use-clove ?user no]\n\n[use-pepper ?user no]\n\n[use-mustard ?user yes]\n\n[use-ginger ?user yes]\n\n[use-dill ?user no]\n\n[use-caribbean ?user yes]\n\n[use-bbq-sauce-r1 ?user no]\n\n[use-light-sauce ?user yes]\n\n[has-tomatoes-r1 ?user maybe]\n\n[use-cream-sauce-r1 ?user maybe]\n\n[use-curry-sauce-r1 ?user no]\n\n[is-pasta ?who no]\n\n[lamb ?user no]\n\n[beef ?user no]])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Drink Type Preference\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule sweet-drinks (:backward :certainty 1.0 :importance 60)\nif [prefers-fruit-punch ?user yes]\nthen [prefers-sweet-wines ?user yes])\n(defrule sweet-drinks2 (:backward :certainty 1.0 :importance 60)\nif [prefers-fruit-punch ?user no]\n\nthen [prefers-sweet-wines ?user no])\n(defrule dry-drinks (:backward :certainty 1.0 :importance 59)\nif [prefers-iced-tea ?user yes]\nthen [prefers-dry-wines ?user yes])\n(defrule dry-drinks2 (:backward :certainty 1.0 :importance 59)\nif [prefers-iced-tea ?user no]\nthen [prefers-dry-wines ?user no])\n(defrule wine-exclusion1 (:forward :certainty 1.0 :importance 69)\nif [prefers-sweet-wines ?user yes]\nthen [prefers-dry-wines ?user no])\n(defrule wine-exclusion2 (:forward :certainty 1.0 :importance 69)\nif [prefers-dry-wines ?user yes]\nthen [prefers-sweet-wines ?user no])\n;;; The following rules are used as a second layer of knowledge. It\n;;; helps to determine some facts that the user does not know\n;;; To implement it as a \"backup\" or \"secondary\" layer, i need to\n;;; change the values for these domain from simple booleans to a list\nof values\n;;; and then have the check for a \"I don't know\" response in the\nantecedent\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Location\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule near-coastl (:backward :certainty 1.0 :importance 10)\nif [or\n[is-near-coast-r1 ?user yes]\n[and [is-near-coast-r1 ?user idk]\n[or\n[goes-to-the-beach ?user yes]\n\n[has-boat ?user yes]]]]\nthen [is-near-coast ?user yes])\n(defrule near-coast-no (:backward :certainty 1.0 :importance 10)\nif [or\n[is-near-coast-r1 ?user no]\n[and [is-near-coast-r1 ?user idk]\n[or\n[goes-to-the-beach ?user no]\n\n[has-boat ?user no]]]]\nthen [is-near-coast ?user no])\n(defrule warm-state (:backward :certainty 1.0 :importance 58)\nif [and\n[minimum-temp ?user ?x]\n(> ?x 0)]\nthen [is-south ?user yes])\n(defrule warm-state-no (:backward :certainty 1.0 :importance 58)\n\nif [and\n[minimum-temp ?user ?x]\n(< ?x 0)]\nthen [is-south ?user no])\n(defrule cold-n-country (:backward :certainty 1.0 :importance 58)\nif [or\n[and [minimum-temp ?user ?x]\n\n(< ?x 0)\n[likes-country ?user yes]]\n[says-pop ?user yes]]\nthen [is-midwest ?user yes])\n(defrule midwest-no (:backward :certainty 1.0 :importance 58)\nif [and [minimum-temp ?user ?x]\n\n(< ?x 0)\n[likes-country ?user no]\n[says-pop ?user no]]\nthen [is-midwest ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Health Conscious\n\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule health-conscious-yes (:backward :certainty 1.0 :importance 90)\nif [or\n[health-conscious-r1 ?user yes]\n[and [health-conscious-r1 ?user idk]\n[or\n[has-dieted-in-past-year\n?user yes]\n\n[exercises ?user yes]\n\n[follows-the-pyramid ?user\nyes]\n\n[is-vegetarian ?user yes]]]]\nthen [health-conscious ?user yes])\n(defrule health-conscious-no (:backward :certainty 1.0 :importance 90)\nif [or\n[health-conscious-r1 ?user no]\n[and [health-conscious-r1 ?user idk]\n\n[has-dieted-in-past-year ?user no]\n\n[exercises ?user no]\n\n[follows-the-pyramid ?user no]\n\n[is-vegetarian ?user no]]]\nthen [health-conscious ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Savory Food\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule likes-savory (:backward :certainty 1.0 :importance 58)\n\nif [or\n[like-savory-r1 ?user yes]\n[and [like-savory-r1 ?user idk]\n[or\n\n[has-herb-garden ?user yes]\n\n[has-several-spices ?user\nyes]\n\n[enjoy-steak-sauce ?user\nyes]]]]\nthen [likes-savory ?user yes])\n(defrule likes-savory-no (:backward :certainty 1.0 :importance 58)\nif [or\n[like-savory-r1 ?user no]\n[and [like-savory-r1 ?user idk]\n\n[has-herb-garden ?user no]\n\n[has-several-spices ?user no]\n\n[enjoy-steak-sauce ?user no]]]\nthen [likes-savory ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Restaurant Expense\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule expensive-restaurant (:backward :certainty 1.0 :importance 58)\nif [or\n[is-expensive-r1 ?user yes]\n[and [is-expensive-r1 ?user idk]\n[or\n\n[has-valet ?user yes]\n\n[has-dress-code ?user yes]\n\n[has-host ?user yes]]]]\nthen [is-expensive ?user yes])\n(defrule cheap-restaurant-1 (:backward :certainty 1.0 :importance 58)\nif [or\n[is-expensive-r1 ?user no]\n[or\n[and [is-expensive-r1 ?user idk]\n\n[has-valet ?user no]\n\n[has-dress-code ?user no]\n\n[has-host ?user no]]\n[and [is-expensive-r1 ?user idk]\n\n[has-value-menu ?user yes]]]]\n\nthen [is-expensive ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Exotic taste\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule exotic-taste (:backward :certainty 1.0 :importance 82)\nif\n[or\n[exotic-taste-r1 ?user yes]\n\n[exotic-taste-r1 ?user idk]\n[or\n\n[tries-new-dishes ?user yes]\n[tries-dishes-w-weird-names\n?user yes]\n\n[likes-to-travel ?user yes]\n\n[hunts ?user yes]]]\nthen [exotic-taste ?user yes])\n(defrule no-exotic-taste (:backward :certainty 1.0 :importance 82)\nif [or\n[exotic-taste-r1 ?user no]\n\n[and [exotic-taste-r1 ?user idk]\n\n[tries-new-dishes ?user no]\n\n[tries-dishes-w-weird-names ?user no]\n\n[likes-to-travel ?user no]\n\n[hunts ?user no]]]\nthen [exotic-taste ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Season Questions\n\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;; Spring is March 20 through June 19\n;;; Summer is June 20 through September 21\n;;; Fall is September 22 through December 20\n;;; Winter is December 21 through March 19\n(defrule spring-time (:backward :certainty 1.0 :importance 82)\nif [or\n[month ?user march]\n\n[month ?user april]\n\n[month ?user may]]\n\nthen [is-spring ?user yes])\n(defrule spring-time-2 (:forward :certainty 1.0 :importance 82)\nif\n\n[is-spring ?user yes]\nthen [and\n[is-summer ?user no]\n\n[is-fall ?user no]\n\n[is-winter ?user no]])\n(defrule summer-time (:backward :certainty 1.0 :importance 82)\nif [or\n[month ?user june]\n\n[month ?user july]\n\n[month ?user august]]\n\nthen [is-summer ?user yes])\n(defrule summer-time-2 (:forward :certainty 1.0 :importance 82)\nif\n\n[is-summer ?user yes]\nthen [and\n[is-spring ?user no]\n\n[is-fall ?user no]\n\n[is-winter ?user no]])\n(defrule fall-time (:backward :certainty 1.0 :importance 82)\nif [or\n[month ?user september]\n\n[month ?user october]\n\n[month ?user november]]\n\nthen [is-fall ?user yes])\n(defrule fall-time-2 (:forward :certainty 1.0 :importance 82)\n\nif\n\n[is-fall ?user yes]\nthen [and\n[is-summer ?user no]\n\n[is-spring ?user no]\n\n[is-winter ?user no]])\n\n(defrule winter-time (:backward :certainty 1.0 :importance 82)\nif [or\n[month ?user december]\n\n[month ?user january]\n\n[month ?user february]]\n\nthen [is-winter ?user yes])\n(defrule winter-time-2 (:forward :certainty 1.0 :importance 82)\nif\n\n[is-winter ?user yes]\nthen [and\n[is-summer ?user no]\n\n[is-fall ?user no]\n\n[is-spring ?user no]])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Lactose/allergy Questions\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule lactose-tolerant (:backward :certainty 1.0 :importance 82)\nif [or [lactose-tolerant-r1 ?user yes]\n\n[and [lactose-tolerant-r1 ?user idk]\n\n[or [eat-cheese ?user yes]\n\n[drink-milk ?user yes]\n\n[eat-ice-cream ?user yes]]]]\nthen [lactose-tolerant ?user yes])\n(defrule lactose-intolerant (:backward :certainty 1.0 :importance 81)\nif [or\n[lactose-tolerant-r1 ?user no]\n\n[and [lactose-tolerant-r1 ?user idk]\n\n[eat-cheese ?user no]\n\n[drink-milk ?user no]\n\n[eat-ice-cream ?user no]]]\nthen [lactose-tolerant ?user no])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n;;; Inference Rules (For importance, higher values go first.) ;;;\n;;; Domain: Wine Choices\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Pinot Noir\n;;;\n;;;\n;;;\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule pinot-noir-1 (:backward :certainty 1.0 :importance 98)\nif [and\n[or [poultry ?user yes]\n[pork ?user yes]\n[lamb ?user yes]]\n[or [use-mint ?user yes]\n[use-sage ?user yes]\n[use-cinnamon ?user yes]]\n[has-cheese ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n(defrule pinot-noir-2 (:backward :certainty 1.0 :importance 87)\nif [and\n[or [poultry ?user yes]\n[pork ?user yes]\n[lamb ?user yes]]\n[has-cheese ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n(defrule pinot-noir-3 (:backward :certainty 1.0 :importance 86)\nif [and\n[or [poultry ?user yes]\n[pork ?user yes]\n[lamb ?user yes]]\n[or [use-mint ?user yes]\n[use-sage ?user yes]\n[use-cinnamon ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n(defrule pinot-noir-4 (:backward :certainty 1.0 :importance 85)\nif [and\n[or [poultry ?user yes]\n[pork ?user yes]\n[lamb ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n(defrule pinot-noir-5 (:backward :certainty 1.0 :importance 84)\nif [and\n[or [use-mint ?user yes]\n[use-sage ?user yes]\n[use-cinnamon ?user yes]]\n[has-cheese ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n(defrule pinot-noir-6 (:backward :certainty 1.0 :importance 83)\nif [and\n[has-cheese ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user pinot-noir])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Cabernet Sauvignon\n;;;\n\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule cabernet-sauvignon-1 (:backward :certainty 1.0 :importance 97)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-2 (:backward :certainty 1.0 :importance 83)\nif [and [is-pasta ?user yes]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-3 (:backward :certainty 1.0 :importance 83)\nif [and\n[has-cheese ?user yes]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-4 (:backward :certainty 1.0 :importance 83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-5 (:backward :certainty 1.0 :importance 83)\nif [and\n[is-pasta ?user yes]\n[or [use-bay-leaf ?user yes]\n\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-6 (:backward :certainty 1.0 :importance 83)\nif [and\n[has-cheese ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-7 (:backward :certainty 1.0 :importance 83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[has-tomatoes ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-8 (:backward :certainty 1.0 :importance 83)\nif [and\n[is-pasta ?user yes]\n[has-tomatoes ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-9 (:backward :certainty 1.0 :importance 83)\nif [and\n[has-cheese ?user yes]\n[has-tomatoes ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-10 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-11 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[is-pasta ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-12 (:backward :certainty 1.0 :importance\n83)\n\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[has-cheese ?user yes]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-13 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-14 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-15 (:backward :certainty 1.0 :importance\n83)\nif [and [is-pasta ?user yes]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-16 (:backward :certainty 1.0 :importance\n83)\nif [and\n[has-cheese ?user yes]\n[has-tomatoes ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-17 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-18 (:backward :certainty 1.0 :importance\n83)\nif [and\n[is-pasta ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-19 (:backward :certainty 1.0 :importance\n83)\nif [and\n[has-cheese ?user yes]\n[or [use-bay-leaf ?user yes]\n[use-parsley ?user yes]\n[use-nutmeg ?user yes]\n[use-chili ?user yes]\n[use-curry ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-20 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]\n[has-tomatoes ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-21 (:backward :certainty 1.0 :importance\n83)\nif [and\n[is-pasta ?user yes]\n[has-tomatoes ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-22 (:backward :certainty 1.0 :importance\n83)\nif [and\n[has-cheese ?user yes]\n[has-tomatoes ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-23 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[or\n[has-cheese ?user yes]\n[is-pasta ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-24 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n\n[lamb ?user yes]]\n[is-pasta ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-25 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]\n[has-cheese ?user yes]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n(defrule cabernet-sauvignon-26 (:backward :certainty 1.0 :importance\n83)\nif [and\n[or [beef ?user yes]\n[lamb ?user yes]]]\nthen [wine-to-drink ?user cabernet-sauvignon])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Merlot\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule merlot-1 (:backward :certainty 1.0 :importance 96)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\n\nthen [wine-to-drink ?user merlot])\n(defrule merlot-2 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\n[or\n\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-3 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-4 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-5 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-6 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-7 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\n\nthen [wine-to-drink ?user merlot])\n(defrule merlot-8 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-9 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-10 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n\n[use-oregano ?user yes]\n\n[use-basil ?user yes]\n\n[use-nutmeg ?user yes]\n\n[use-chili ?user yes]\n\n[use-curry ?user yes]\n\n[use-garlic ?user yes]]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-11 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-12 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]]\nthen [wine-to-drink ?user merlot])\n(defrule merlot-13 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]]\n\nthen [wine-to-drink ?user merlot])\n(defrule merlot-14 (:backward :certainty 1.0 :importance 83)\nif\n[or [beef ?user yes]\n\n[gamebird ?user yess]\n\n[lamb ?user yes]\n\n[seafood ?user yes]]\n\nthen [wine-to-drink ?user merlot])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Zinfandel\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule zinfandel-1 (:backward :certainty 1.0 :importance 95)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\n\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-2 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-3 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-4 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-5 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-6 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-7 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\n\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-8 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-9 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-10 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-11 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-12 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n\n[use-tarragon ?user yes]\n\n[use-thyme ?user yes]\n\n[use-clove ?user yes]\n\n[use-garlic ?user yes]\n\n[use-pepper ?user yes]]]\n\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-13 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-tomatoes ?user yes]\n\n[use-bbq-sauce ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n(defrule zinfandel-14 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [pork ?user yes]\n\n[gamebird ?user yess]]\n[or\n[has-cheese ?user yes]\n\n[is-pasta ?user yes]]]\nthen [wine-to-drink ?user zinfandel])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Sauvignon Blanc\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule sauvignon-blanc-1 (:backward :certainty 1.0 :importance 94)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n\n[is-pasta ?user yes]\n[or\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-2 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n[or\n\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]\n\n[prefers-dry-wines ?user yes]]\n\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-3 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n\n[is-pasta ?user yes]\n[or\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-4 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n\n[prefers-dry-wines ?user yes]]\n\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-5 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n\n[is-pasta ?user yes]\n[or\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]]\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-6 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n[or\n\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]]\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-7 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[seafood ?user yes]]\n\n[is-pasta ?user yes]\n[or\n[use-garlic ?user yes]\n\n[use-oregano ?user yes]\n\n[use-black-pepper ?user yes]]]\nthen [wine-to-drink ?user sauvignon-blanc])\n(defrule sauvignon-blanc-8 (:backward :certainty 1.0 :importance 83)\nif\n[or [poultry ?user yes]\n\n[seafood ?user yes]]\nthen [wine-to-drink ?user sauvignon-blanc])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Chardonnay\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule chardonnay-1 (:backward :certainty 1.0 :importance 93)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-2 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-3 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-4 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-5 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n\n(defrule chardonnay-6 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-7 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n\n[prefers-dry-wines ?user yes]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-8 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-9 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-10 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-11 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-12 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n\n[use-mustard ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]\n\n[use-caribbean ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-13 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n[or\n[use-light-sauce ?user yes]\n\n[use-cream-sauce ?user yes]]]\nthen [wine-to-drink ?user chardonnay])\n(defrule chardonnay-14 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[pork ?user yes]\n\n[seafood ?user yes]]\n\n[has-tomatoes ?user no]\n\n[has-cheese ?user yes]]\n\nthen [wine-to-drink ?user chardonnay])\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;;;\n;;;\n\n;;; Riesling\n\n;;;\n;;;\n;;;\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defrule riesling-desert (:backward :certainty 0.9 :importance 90)\nif\n[meal ?user dessert]\nthen [wine-to-drink ?user riesling])\n\n(defrule riesling-desert-2 (:backward :certainty 1.0 :importance 91)\nif\n[and [meal ?user dessert]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-1 (:backward :certainty 1.0 :importance 92)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n\n[use-light-sauce ?user yes]\n[or\n[use-dill ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-2 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[use-light-sauce ?user yes]\n[or\n[use-dill ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-3 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n[or\n[use-dill ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-4 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n\n[use-light-sauce ?user yes]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-5 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n[or\n[use-dill ?user yes]\n\n[use-sage ?user yes]\n\n[use-clove ?user yes]\n\n[use-ginger ?user yes]]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n\n(defrule riesling-6 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[use-light-sauce ?user yes]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n(defrule riesling-7 (:backward :certainty 1.0 :importance 83)\nif\n[and [or [poultry ?user yes]\n\n[shellfish ?user yes]]\n\n[has-cheese ?user yes]\n\n[prefers-sweet-wines ?user yes]]\nthen [wine-to-drink ?user riesling])\n;;;;;;;;;;;;;;;;;;;;;\nEnd of File\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    }
  ]
}