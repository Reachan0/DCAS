{
  "course_name": "Information Technology Essentials",
  "course_description": "This class offers a broad coverage of technology concepts and trends underlying current and future developments in information technology, and fundamental principles for the effective use of computer-based information systems. There will be a special emphasis on networks and distributed computing, including the World Wide Web. Other topics include: hardware and operating systems, software development tools and processes, relational databases, security and cryptography, enterprise applications, and electronic commerce. Hands-on exposure to Web, database, and graphical user interface (GUI) tools.\nThis course is intended for students with little or no background in computer technology. Students with extensive education or work experience in computer technology should consider taking a more advanced course.",
  "topics": [
    "Business",
    "Information Technology",
    "Engineering",
    "Computer Science",
    "Computer Networks",
    "Data Mining",
    "Business",
    "Information Technology",
    "Engineering",
    "Computer Science",
    "Computer Networks",
    "Data Mining"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 3 sessions / week, 1.5 hours / session\n\nCourse Description\n\nThis class includes broad coverage of technology concepts and trends underlying current and future developments in information technology, and fundamental principles for the effective use of computer-based information systems. There will be a special emphasis on networks and distributed computing, including the World Wide Web. Other topics include: hardware and operating systems, software development tools and processes, relational databases, security and cryptography, enterprise applications, and electronic commerce. Hands-on exposure to Web, database, and graphical user interface (GUI) tools.\n\nThis course is intended for students with little or no background in computer technology. Students with extensive education or work experience in computer technology should consider taking a more advanced course.\n\nReadings\n\nThe course material includes all the required readings (articles) to be covered in class. It also includes non-Web optional readings, which offer supplementary material on the topics discussed, except for optional readings that are available via the Web. There are also some optional textbooks (that are not included in the course reader) and recommended Web material- see below for details.\n\nGrading\n\nACTIVITIES\n\nPERCENTAGES\n\nClass Participation\n\n20%\n\nThree Problem Sets\n\n40%\n\nFinal Exam\n\n40%\n\nWe view this course as a cooperative learning experience and expect students to engage the topics provided as an opportunity to gain hands-on experience with some of the tools and technologies covered. They include (a) creating a personal home page, (b) working with a Microsoft(r) Access database and (c) constructing a web-based survey form that collects in a database information provided by people who fill out the survey on-line.\nAll assignments are to be received by the TA before class on the due date\n.\n\nRequired Software\n\nMicrosoft(r) Frontpage(r) is required for completing Assignment 3 (and optional for Assignment 1).\n\nMicrosoft(r) Access is required for completing Assignment 2. Microsoft(r) Access is included as part of Microsoft(r) Office Professional.\n\nRecommended Web Materials\n\nThe PC\nWebopedia\nis a Web site that serves as an encyclopedia of Information Technology terms. It provides excellent explanations of many Information Technology terms, together with links to additional web pages related to them. For many of the lectures, the course Web page contains pointers to the relevant category of the PC Webopedia. We\nstrongly encourage\nyou to use this valuable resource to clarify unanswered questions and to go beyond the material covered in class, according to your own personal interests.\n\nOptional Textbooks\n\nThere are three optional textbooks.\n\nWhite, Ron, et. al.\nHow Computers Work\n. 7th ed. Indianapolis, IN: Que Publishing. ISBN: 0789730332.\n\nGralla, Preston, et. al.\nHow the Internet Works\n. 7th ed. Indianapolis, IN: Que Publishing. ISBN: 0789729733.\n\nGood introductory texts on the internals of computer hardware, system software and the Internet. Recommended if you don't have a background in science or engineering.\n\nViescas, John L.\nRunning Microsoft(r) Access 2000\n. Redmond, WA: Microsoft(r) Press, 1999. ISBN: 1572319348.\n\nOne of the best and most detailed \"bibles\" on Microsoft(r) Access. The coverage is way beyond what will be covered in this course. This is an excellent reference book for students who are interested in becoming Microsoft(r) Access experts.",
  "files": [
    {
      "category": "Resource",
      "title": "db_open_inst.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/731afdd4a802f547e6f1f8e17dd1f7c3_db_open_inst.pdf",
      "content": "Instructions to Open North Wind Database for Assignment #2\n1. Download North Wind database file name nwind-ps2.mdb\n2. Open nwind-ps2.zip in WinZip or Windows Explorer - You should see a file called\nnwind-ps2.mdb\n3. Copy nwind-ps2.mdb to a folder where you will edit it\n4. Open nwind-ps2.mdb by double-clicking - you will see a security warning which says\nunsafe expressions are not blocked\n5. Click Yes to the security warning\n6. You will see a new securty warning pop-up which says Opening \"..nwind-ps2.mdb\"\n7. Click open to the security warning\n8. You should now see the northwind database"
    },
    {
      "category": "Resource",
      "title": "solutions.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/d8679a3c2e3ddf4c196e074e170429b4_solutions.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 IT Essentials\nSpring 2005\nAssignment #2 Solutions: Relational Databases\nTask 1: Write a query that displays an alphabetical list of all Northwind Traders\nSales Representatives.\nTask 2: Write a query that displays the names of all Northwind Traders customers\nwho are based in Brazil.\n\nTask 3: Write a query that displays the names of all customers who placed orders in\n1995 together with the number of orders they placed that year. Order the\noutput by the number of orders placed (customers who placed the largest\nnumber of orders should be displayed first). Each customer name should\nappear once.\nHint: Join tables \"Customers\" and \"Orders\" and use Group By and Count. You'll\nalso need to use a Where for the date range and a Sort on the Count.\n\nTask 4: Write a query that ranks all customers who placed orders in 1995 by the total\nvalue of their orders in that year (customers with the highest total order\nvalues should be listed first).\nHint: There is already a query in the database called \"Order Subtotals\" that\ncalculates the total dollar amount of each order. You can base your query on this\nquery together with the two tables \"Customers\" and \"Orders.\" (To include a\npreviously constructed query in your query, you select the previous query from the\n\"Queries\" tab instead of the \"Tables\" tab in the \"Show Table\" dialog box.) You'll\nneed to Group By company, use a Where for the date range, and Sum and Sort on\nSubtotal from \"Order Subtotals\".\nTask 5: Write a query that lists the names of all products in order of their total sales\nfor 1995 together with the corresponding dollar amounts.\nHint: There is already a query in the database called \"Order Details Extended\"\nwhich includes, for each line item sold, the product name and the total dollar value\n(UnitPrice*Quantity*(1-Discount)). You can base your query on this query and the\n\"Orders\" table. To find the total revenue generated by each product, add together\nthe dollar value of line items referring to the same product using \"Group by\"\nProductID and the aggregate function \"Sum\". Make sure that you properly use\nfield \"OrderDate\" in table \"Orders\" to constrain the summation to line items that\nrefer to orders placed in 1995\n\n.\nTask 6: Start with the query you created in Task 5 and create a new query that\nincludes only the sales to customers in Spain.\nHint: First open the query you saved for Task 5, then add the \"Customers\" table to\nthe query. (You can add a new table to an existing query by right-clicking in the\nupper half of the Design View and selecting \"Show Table...\") Use the \"Country\"\nfield in the \"Customers\" table to select only customers in Spain. Don't forget to use\nthe \"Save as...\" command to save this new query with a different name (\"15561\nTask 6\")."
    },
    {
      "category": "Resource",
      "title": "ps01.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/11d3ed9dde667b1d3e371cb5a91892be_ps01.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 Information Systems:\nFrom Information Infrastructure to Networked Corporation\nSpring 2005\nAssignment #1: Web Home Page Construction\nDue: Friday, February 18, 2005\nIn this assignment, you will construct a simple personal web site, consisting of at least two\nconnected web pages: \"Home\" and some other page. Your home page, which can be kept\nsimple, must include, at the minimum:\n-\nA greeting\n-\nA short paragraph explaining its purpose\n-\nSome image/picture/graphic (e.g. your photo)\n-\nA list of at least three study or work related links\n-\nAt least one fun or extracurricular related link\n-\nA clearly labeled direct link to your second web page\n-\nA Java applet (see teaching note for details)\nGGGG Your web page will be accessible to the whole world! Therefore you should apply\nappropriate discretion when choosing the content of your page.\nIf you do not wish to publish anything about yourself on the home page, you can also\nchoose an alter ego for this assignment.\nDetailed information on constructing and publishing your home page can be found on a\nteaching note, which is distributed separately (it is also available from the 15.561 MIT Server\nsite). The teaching note will also explain how to insert your photo and include links to the web\nsites. Having created your web site with home and additional pages be sure to publish it on the\nserver (or any other server that you have access to), and access it from a browser to make\nsure it works as you intended.\nThe only thing you need to submit for this assignment is the URL of your home page. Please\nemail it to the TAs by the due date.\nIMPORTANT NOTE: If you already have a home page that you created yourself and that\nsatisfies the above minimum requirements, you may simply submit the URL of your existing\nhome page. Also, feel free to develop your page using whatever tools you are most comfortable\nwith. Finally, you may publish your page on any server you have access to (and not necessarily\non\n).\nMIT\nthe MIT Server"
    },
    {
      "category": "Resource",
      "title": "ps1teachingnote.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/a997070e39accd9763e20809b879fdfb_ps1teachingnote.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 Information Systems:\nFrom Information Infrastructure to Networked Corporation\nSpring 2005\nWeb Home Page Construction\nTeaching Note\nChris Dellarocas, Abraham Bernstein, and Paola Maleh\nOverview ........................................................................................................................................2\nIntroduction................................................................................................................................2\nLogistics/Mechanics .................................................................................................................2\nBackground: What is a Web Site? How should it be designed? .............................................2\nSection I: Setting up your Accounts............................................................................................4\nStep 1: Getting Your Athena Account ....................................................................................4\nStep 2: Accessing Your Sloan Account...................................................................................5\nSection II: Building Web Page Files ............................................................................................5\nMicrosoft FrontPage..................................................................................................................5\nSection III: Publishing your Web Site .......................................................................................12\nPreparing Your Athena Account for Web Site Publishing................................................12\nTransferring Your Web Page Files and GIF Picture Files to Your Athena Account......12\nAccessing Your Published Web Site .....................................................................................13\nAll contents Copyright (c) 2001 MIT Sloan School of Management\n\nOverview\nIntroduction\nThe purpose of this note is to give you first-hand experience with publishing information on\nthe World Wide Web (WWW). You will go through all the steps involved in web site design,\nconstruction, publication, and use, thereby gaining a practical appreciation for the power of this new\nmedium for organizations. The note involves using Microsoft FrontPage, an application specialized\nin editing and publishing information on the WWW.\nLogistics/Mechanics\nThis note involves using Microsoft FrontPage to browse, build, edit, and test your web site.\nFurthermore you will be using a Telnet application (preferably Host Explorer - downloadable from\nMIT, see page 22) to remotely connect to your Athena account (available to you as an MIT student)\nin order to prepare your web site for publication and a file transfer application (SecureFX - also\ndownloadable from MIT, see Section IV)\n* If you are not a Sloan student, you have to immediately contact us in order to get an\naccount at the Sloan Computing Labs\nBackground: What is a Web Site? How should it be designed?\nThe WWW can either be an extremely powerful tool for information retrieval and exchange,\nor a chaotic labyrinth full of dead ends and out-of-context data. The difference lies in how well the\ninformation that is posted on the web has been chosen and designed. Considering what and how to\ndisplay information on the web is what Stephen Wilson calls \"expanded design\" in his \"World\nWide Web Design Guide\" (Hayden Books, 1995). Wilson defines expanded design for the web\nusing four principles:\n- Surrounding Context: Why is the site being created? What is/are its target audience/s? What is the\nsite's definition of significant information? What other web sites cover related material, and how do\nthey do it? Why use the web as a publishing medium at all?\n- Information Structure: How well is the information structured? What categories of choices are\noffered? What conceptual frameworks seem to underlie those categories? How is the information\nstructure made clear to web visitors?\n- Interactivity: How is interaction orchestrated? What links are there? How are navigational options\nmade clear? What would be typical navigational scenarios? What multimedia tools are being used\n(text, hypertext, image, video, sound?) How well are they used? How fast does a page load?\n(studies have shown that users leave slow sites!)\n- Visual Impact: On first view, what will be most noticeable about the site? What will engage\nvisitors? How does the site's presentation work visually? How does its composition influence its\neffectiveness and appeal? What will visitors find new or surprising about the site?\nCopyright (c) 2001, MIT Sloan School of Management\n\nAlthough you may have used the web extensively in the past, you may not have thought\ncritically about the above aspects. Please head out browsing the WWW and look at a couple of web-\nsites thinking about the design principles mentioned above and in the handouts. It will help you to\ndiscover some pitfalls of web-page design and improve the design of your own home-page.\nFurthermore you may find some sites that you would want to link to from your own home-page.\nRATIONALE FOR SELECTION\nWEB SITE NAMES\nELECTRONIC ADDRESSES (URL)\nConsulting firms\nBain and Company\nhttp://www.bain.com\n(explore career opportunities)\nMarakon Associates\nhttp://www.marakon.com\nFinancial firms\nMorgan Stanley\nhttp://www.ms.com\n(explore career opportunities)\nMerrill Lynch\nhttp://www.ml.com\nFirms you buy services from\nNorthwest Airlines\nhttp://www.nwa.com\n(explore services offered)\nAmerican Airlines\nhttp://www.aa.com\nBook stores you can buy from\nAmazon\nhttp://www.amazon.com\n(explore web shopping)\nBarnes and Noble\nhttp://www.barnesandnoble.com\nB-Schools\nStanford\nhttp://www.gsb.stanford.edu\n(explore information provided)\nHarvard\nhttp://www.hbs.edu/\nIf you would like further information on web site design, consult the Style Guide web sites:\nhttp://www.w3.org/Provider/Style/Overview.html (authored by Tim Berners-Lee)\nhttp://www.w3.org/Style/Welcome.html\nhttp://info.med.yale.edu/caim/manual/contents.html\nCopyright (c) 2001, MIT Sloan School of Management\n\n* The instructions in this note apply to the PCs (running the Windows operating system), and\nhave been written for students with no previous experience with these steps. If you have\nsome experience with the web, you may want to skip ahead to further sections, according to\nthis table:\nSection I: Setting up your Accounts\nStep 1: Getting Your Athena/Kerberos Account:\nAthena/Kerberos is a campus-wide networked computer system serving the needs of\nMIT's academic community. All MIT students are entitled to an Athena account with 20\nMegabytes of disk space, 1200 free pages of print, e-mail facilities, software use, consulting, and\ntraining about the system. You will use these resources (particularly the disk space) to publish\nyour web site.\nYou only need an Athena account to publish your web-site, and as it takes approximately\n24 hours to activate an Athena account once you have registered, we recommend you register for\nan Athena account immediately (if you have not already done so).\nCopyright (c) 2001, MIT Sloan School of Management\n\nStep 2: Accessing Your Sloan Account\nThe Sloan School provides its students with additional computing resources in the Sloan\nComputer Labs. If you are a regular Sloan student you will have obtained a Sloan lab account. If\nyou don't have a Sloan user name for some reason (e.g., you are not a Sloan student or you have\nforgotten your previously assigned Sloan user name), please contact your TA.\nOnce you have a Sloan user name, you should log into the Sloan computers to make sure\nyou have access to the appropriate resources.\nSection II: Building Web Page Files\nThere are a variety of tools available to design your web-site from which we have chosen\nto support one. We felt that FrontPage would give you the opportunity to build more complex\nprojects with heavy use of links. Please note, however, that FrontPage is a complex program\nwith a lot of features which we will not expect you to learn for this class. FrontPage is a\ncommercial product (you will need to purchase a copy).\n* A variety of additional products can generate web pages (like Microsoft Word or\nPowerPoint). You are welcome to use one of these other products, but you have to\nunderstand that our ability to support you in case you run into problems is limited to\nMicrosoft FrontPage.\nThe rest of this section explains how to generate a home page with Microsoft FrontPage\nand perform the tasks we asked you to do step by step.\nMicrosoft FrontPage\n* This is by no means a comprehensive introduction into FrontPage. It will only show\nyou how to perform the few steps you need to do in order to build a simple home\npage! We urge you to explore additional features of FrontPage yourself, should you\nchoose it for your web publishing projects.\nMicrosoft FrontPage is an integrated Web-site development environment. Writing and\nediting a small web site with FrontPage is relatively simple. There are appropriate wizards (little\nprograms which support you in accomplishing some tasks) which help you with most\ncomplicated chores. Furthermore FrontPage has an intuitive Graphical User Interface (GUI), and\nyou do not have to deal with Hyper Text Markup Language (HTML), the language used to\ndisplay files on the World Wide Web.\nThe following steps walk you through creating a number of interlinked web pages, which\nwill constitute your personal web site.\nCopyright (c) 2001, MIT Sloan School of Management\n\nCreating your own personal web-site\nFigure 1: Starting a new web with FrontPage\nStart up Microsoft FrontPage. Choose File from the toolbar and select New. The new\nNavigation pane on the right hand side will ask you what kind of web you want to create.\nChoose 'Web Package Solutions' under 'New Web Site', then select the 'General' tab in the\ndialog box that opens up and choose 'Personal Web Site'. Then select the Browse button to\nspecify the location and name of your web page.\nAfter entering the location for your files, click 'OK'. All you will have to do now is to\nchange it to your liking and insert links and applets.\nATTENTION: Make sure your home page is saved as \"index.html\" and not\n\"index.htm\". Any other name than \"index.html\" will prevent your website from being\npublished correctly on the Athena network. Make sure you name your home page\n\"index.html\" before you create any other links to it from other pages.\nCopyright (c) 2001, MIT Sloan School of Management\n\nFigure 2: Overall view of FrontPage Navigation pane\nFigure 2 shows a screen dump of the FrontPage Navigation pane. You choose different\nviews on your site at the bottom. Currently the 'Navigation' view is chosen which shows you a\ngraphical representation of the web, with a home page and sub-pages (interests, photo-gallery\nand favorites). On the left you can see the actual files relating to the pages including their titles\nand some additional information about them. You can change the pages name's by double-\nclicking them in the upper graphical view. If you want to edit one of the pages double-click on\nits respective file which opens the FrontPage Editor displaying the chosen page.\n* FrontPage automatically generates code that will help you to navigate between the\nweb pages you can see in the 'Navigation' View.\nBefore we go on examining and editing a single page we will choose an overall theme for\nour web site. Choose the Format from the toolbar and select Themes. Click on the page that you\nwould like to apply a theme to and in the Theme's Navigation pane on the right, select the\nTheme that you would like to apply to this page. When you are done, close the Theme's\nnavigation pane on the right. Then return to the 'Navigation' by clicking on the button\n'Navigation' at the bottom of the application and make sure you are in the tab that is called\n'index.html*'.\nCopyright (c) 2001, MIT Sloan School of Management\n\nExamining HTML Code\nFigure 3: FrontPage Code\nFrontPage automatically transforms your GUI editing commands into HTML code so that\nany web browser can interpret and thus display your page appropriately. Before you start editing,\ntake a few minutes to examine the HTML code of the template home page to get a sense of what\nit looks like. To do this, click on the 'Code' button at the bottom (see Figure 3). You may\nrecognize some of the text you can see in the template in addition to all types of instructions to\nthe web browser how to display the text. The line \"<p\nalign=\"left\"><font\nsize=\"4\"\nface=\"Arial\">Welcome to my Web site!</font></p>\" for instance instructs the browser to align the\nfollowing paragraph left, then change the font size to 4 and the font type to 'Arial' and then write\nthe paragraph 'Welcome to my Web site'. Once you've viewed some HTML, you can return to\nthe 'Design' Tab by clicking on the Design button at the bottom.\nEditing your Home Page\nTo enter text about yourself into your home page, simply type over the text that is\nprovided by the template. Remember to keep saving your home page as you work on it, to retain\nyour changes (e.g. use 'File' Æ 'Save' or the Save button in the tool bar). You can edit the text\nof your home page as though you were working on a word processor. Text formatting options are\nin the 'Format' menu or in the toolbar. You can choose different font sizes and colors for your\ntext, arrange the text in unordered or ordered lists, or choose different levels of indentation.\nCopyright (c) 2001, MIT Sloan School of Management\n\nNote, however, that due to certain HTML limitations, you will not have as many formatting\noptions as you usually have in a word processor such as MSWord.\n* You can copy and paste some text from a word processor into the FrontPage Editor.\nHowever, you will lose any formatting you might have added to the original text file.\nSo, you will have to do some text formatting in the new web page file within\nFrontPage Editor to ensure the text looks good\nInserting Links into your Home Page\nA hyperlink or link is a clickable reference to another HTML document. This could be\nanother page on your web site or a page on another web server. To insert links in your home\npage, first highlight the text and/or images you want to transform into a link, and then click on\nthe 'Link' button, displayed as a 'globe and chain' link icon (or go to the 'Insert' menu and\nselect 'Hyperlink'). A 'Edit Hyperlink' window appears where you specify the exact URL\n(including the \"http://\" prefix) where you want the browser to take your readers when they click\non that text.\nYou can also make links that go to a place within your own Home page. This is\nparticularly useful when web pages contain a lot of information, and can be indexed. To do this,\nyou must first establish internal Bookmarks, which will be then referenced in normal links.\nChoose a place where you want an indexing link to take you within your home page, place the\ncursor there and choose 'Edit' Æ 'Bookmark...'. It then asks you for a name of this bookmark.\nGive the bookmark a name, and click OK. The next time you insert a link, select the Insert, then\nHyperlink, then select 'Place in this Document' on the left in the dialog and select the bookmark\nyou want the browser to jump to.\nTo create a link on your home page to another local page (e.g. your resume page), select\nthe page at the top of the link dialog using the Browse for File option instead of entering a URL.\nInserting a graphic or your Photo into your Web Page File\nTo embed pictures in web pages, you need to have a file created using one of the\ncommon graphics representations for use with the web: GIF or JPEG (abbreviated JPG in\nWindows machines). GIF generally has better quality, while JPG, being a compressed image\nrepresentation, takes less disk space and loads faster. You can use icons/pictures from the web or\nyou can insert pictures that are already saved on your computer. If you'd like to use icons/images\nfrom the web, a good source is http://www.iconbazaar.com/ for all kinds of icons. Please think\nabout the copyright implications when you use a picture from another web page. Whichever\noption you used, you now have a JPG or GIF file with an image, which you can insert into your\nhome page. Within FrontPage Explorer choose 'Insert' Æ 'Picture' Æ 'From File', then select\nthe picture you want to add. If you are in the 'Navigation' view you will see the newly added\npicture and you can resize and handle it just like all other elements (Additional properties of the\npicture can be edited by clicking on the picture with the right mouse button and choosing the\n'Show pictures toolbar').\nAdding a Java applet\nJava applets can be added to your web page by inserting html \"tags\". In order to run an\napplet inside a web page you need to use three different tags. The first is <APPLET>. This tag\nspecifies the name of the program that will be run, the height and width of the box on the web\npage that the program will occupy. After the APPLET tag, series of <PARAMETER> tags are\nCopyright (c) 2001, MIT Sloan School of Management\n\nused to specify run-time arguments the Java program needs. Finally, the </APPLET> tag is\nused to indicate that the applet is completely defined.\nThe syntax for the <APPLET> tag is:\n<APPLET\nCODEBASE = codebaseURL\nDirectory on web server were the applet is located\nCODE = appletFile\nName of the applet\nWIDTH = pixels HEIGHT = pixels\nSize of the applet\n>\nThe syntax for the <PARAM> tag is:\n<PARAM NAME = {Attribute Name} VALUE = {value}>\nFor a more detailed description of the <APPLET> tag please refer to Sun's java\ndocumentation at http://java.sun.com/products/jdk/1.1/docs/guide/misc/applet.html.\nTo keep the exercise simple, the text of the actual tags that you will need to invoke the\napplet you choose will be provided. The code should be copied into FrontPage. There are two\nways of inserting a Java applet in FrontPage Editor: You either insert it using an interactive form\nor edit the HTML-code directly.\nInserting an Applet in the HTML code - EASIER\nYou can edit the HTML code directly by clicking on the Code Tab at the bottom of the\nFrontPage Editor. Find the appropriate position and enter the Applet Code exactly as it appears\nbelow. Change back to the normal view of the FrontPage Editor by clicking on the 'Design' Tab.\nInserting an Applet using the interactive form\nCopyright (c) 2001, MIT Sloan School of Management\n\nFigure 4: Defining an applet parameter in FrontPage\nTo insert the applet using the interactive form place the cursor in the FrontPage\nEditor at the place where you want to enter the applet. Then choose 'Insert' Æ 'Web\nComponent' Æ 'Component Type' Æ 'Advanced Controls' Æ 'Java Applet' and enter\nthe information about the applet.\nIn both options FrontPage displays an icon with a big 'J' where you insert a Java applet\nto represent it.\nThere is a choice of three applets, which you can select from to incorporate into your\nhome page, a clock, a calculator, or a limited spreadsheet. The code required for each is given\nbelow.\nThe Clock\nTo add the clock insert this code:\n<APPLET codebase=\"http://web.mit.edu/15.561/www/java/Clock\"\ncode=\"Clock2.class\" width=170 height=150>\n<PARAM name=fgcolor1 value=\"ffff00\">\n<PARAM name=fgcolor2 value=\"ff0000\">\n<PARAM name=bgcolor value=\"0000ff\">\n</APPLET>\nThe Calculator\nTo add the calculator button insert this code (to actually start the calculator, click on the\nbutton):\n<APPLET codebase=\"http://web.mit.edu/15.561/www/java/Calculator\"\ncode=\"AppletButton.class\" width=350 height=60>\n<PARAM name=windowClass value=\"Calculator\">\n<PARAM name=windowTitle value=\"Pocket Calculator\">\n<PARAM name=buttonText value=\"Pocket Calculator - Press here to start\ncalculator ...\">\n</APPLET>\nThe Spreadsheet\nTo add the spreadsheet insert this code:\n<APPLET codebase=\"http://web.mit.edu/15.561/www/java/SpreadSheet\"\ncode=\"SpreadSheet.class\" width=320 height=120>\n<PARAM name=rows value=\"3\">\n<PARAM name=columns value=\"3\">\n<PARAM name=b1 value=\"v456\">\n<PARAM name=a1 value=\"v123\">\n<PARAM name=c1 value=\"fA1*B1\">\n<PARAM name=b2 value=\"v100\">\n<PARAM name=a2 value=\"v200\">\n<PARAM name=c2 value=\"fA2+B2\">\n</APPLET>\nOnce you have entered all the tags for the applet, you can see if it is working correctly by\nviewing the document in the browser. You can test the page (and the Java applet) at any time by\nsaving it and choosing 'File' Æ 'Preview in Browser...'. The browser will then display the page\nas other people will see it on the web and also initialize and show you the exact appearance of\nthe Java applet. If the applet is working correctly, a message will be displayed in the status line\nat the bottom of the screen indicating that the applet is running, when the mouse is positioned on\nwithin the applet region of the page. If there are problems, an error message will be displayed.\nCopyright (c) 2001, MIT Sloan School of Management\n\nAfter the Java applet is working correctly, try modifying the parameter values to see how the\napplet changes.\nTesting Your Web Page Files\nYou'll find that things are much easier if you keep adding small things to a \"working\"\nhome page document. So start with something very simple and see how it displays. Then start\nadding stuff. If something goes wrong, you'll know it was the change you just made.\nPeriodically, you can select 'Preview in Browser...' from the 'File' menu of FrontPage Editor.\nSection III: Publishing your Web Site\nPreparing Your Athena Account for Web Site Publishing\nThe final part of publishing a web page consists of installing your web page files onto the\nAthena server, so that your web site becomes accessible to us (and the entire world!). For that to\nhappen, you have to prepare your disk space in the Athena servers for web site publishing.\nSpecifically, you must login to your Athena account and create a world-readable WWW\ndirectory directly under your home directory, where you will then place your web pages (home\nand other pages) and GIF picture files.\n* If you have already installed a 'www' directory in your account and opened its access\nto everybody (e.g. as part of another assignment or as part of the Media and\nTechnology Club's presentation) just skip to 'Transferring Your Web Page Files and\nGIF Picture Files to Your Athena Account' section.\nHaving accessed Athena, a Telnet window will appear where the Athena system prompts\nyou for your Athena/Kerberos user name and password. Type them in. Some introductory\nmessages will then be displayed and finally the prompt athena% appears, indicating that it is\nready to accept user commands. Type the following UNIX commands, each on a separate line\n(i.e., press enter after each line):\nmkdir ~/www\nfs sa ~/www system:anyuser read\nlogout\nThe last command (logout) should terminate your connection with the Athena server, and\nquit the Telnet application. If it doesn't do this, you can do it yourself by closing the Telnet\nwindow.\nTransferring Your Web Page Files and GIF Picture Files to Your Athena Account\nTo publish your web site, you must copy all your web page files (index.html and e.g.\nResume.html) and other related files (such as your JPG or GIF picture file) into the www\ndirectory you just created. Follow these steps:\nCopyright (c) 2001, MIT Sloan School of Management\n\n1. Start SecureFX. A window pops up. Select 'Athena' and press 'Connect'. Provide your\nAthena username and password as requested.\n2. If all goes well, at this point you will have been connected to your Athena folder. SecureFX\nwill display two windows: One showing your local files and another displaying your Athena\nfolders.\n3. Drag and drop your web page and all related files (such as your JPG and GIF picture files)\nfrom your local files window to the www directory of your Athena folder.\n4. You are done!\nAfter you have finished these steps, your web page should be accessible from\nany Web browser.\n* Note: URL's are case-sensitive. Thus Jsmith and jsmith are different URLs.\nAccessing Your Published Web Site\nAfter you installed your home page on the Athena server, check to make sure it works by\ntrying to access it from a browser. Open your web browser and type in what you think is your\nURL. If you can't access your home page, we won't be able to either! Make sure you check all\nthe links you have included in it. Full credit will only be given to a fully functional web site.\nCongratulations!\nCopyright (c) 2001, MIT Sloan School of Management"
    },
    {
      "category": "Resource",
      "title": "ps02.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/48ed911e8bee94702779f12f419797eb_ps02.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 IT Essentials\nSpring 2005\nAssignment #2: Relational Databases (Microsoft Access)\nDue: Monday, February 28, 2005\nWhat to turn in: For this assignment, email a WinZip archive file to your TA\ncontaining database file nwind-ps2.mdb with your queries.\nImportant Notes:\n1. You are encouraged to work in teams of 2 for this assignment. If you do, the same\ngrade will be given to both members. Collaboration will be of \"Type 3\" (as defined\nin the MIT Sloan Academic Standards, January 2005). In this case, that means that\nboth team members must be present when the work is being done, and both must\nunderstand the final answers. If team member A is substantially more\nknowledgeable about the subject matter than B, it is A's responsibility to explain the\nreasoning behind the answers to B, and it is B's responsibility to ask questions until\nB understands the answers.\n2. You may choose to work alone, but you will be expected to do the same amount of\nwork as a two-person team.\n3. Do not leave this assignment for the last minute!\nGENERAL INFORMATION\nIn this assignment, you will be using Microsoft Access to perform queries on the\nNorthwind Traders database that was used in class. Since there are several different\nversions of this database around, to make sure that we grade you correctly, we ask\nthat you use the version, which is available from the MIT Server.To do this assignment,\nyou must download this file and make a private copy in one of your directories.\nIn order to complete this assignment, follow these steps:\n1. Go to the MIT Server and download file nwind-ps2.mdb\n2. Go to the directory where you saved this copy of file nwind-ps2.mdb. It's probably\n\nalso a good idea to make a copy of this file, so you won't have to download again if\nyou need to start over for some reason.\n3. Double-click on file nwind-ps2.mdb to start Microsoft Access and load the\nNorthwind Traders database\n4. Build all queries required for this problem and save each query using names that\nobey the following pattern: \"15561 Task X\", where X is the number of the task\ncorresponding to the query (e.g. \"15561 Task 3\"). Feel free to use any of the queries\nalready existing in the database as intermediate steps in your solutions. It is\nimportant that you adhere to this naming scheme to make sure that your TA can\nlocate and grade your queries.\n5. By saving your queries, you have modified file nwind-ps2.mdb. For this reason it is\nvery important that you work in your own personal copy of the file.\nYou are welcome to use either format Microsoft Access provides to create your queries\n(Design View or SQL View). However, unless you are already an expert on SQL, we\nbelieve you will find it much easier to use the Design View.\nTHE QUERIES\nTask 1: Write a query that displays an alphabetical list of all Northwind Traders\nSales Representatives.\nTask 2: Write a query that displays the names of all Northwind Traders customers\nwho are based in Brazil.\nTask 3: Write a query that displays the names of all customers who placed orders in\n1995 together with the number of orders they placed that year. Order the\noutput by the number of orders placed (customers who placed the largest\nnumber of orders should be displayed first). Each customer name should\nappear once.\nHint: Join tables \"Customers\" and \"Orders\" and use Group By and Count. You'll\nalso need to use a Where for the date range and a Sort on the Count.\n\nTask 4: Write a query that ranks all customers who placed orders in 1995 by the total\nvalue of their orders in that year (customers with the highest total order\nvalues should be listed first).\nHint: There is already a query in the database called \"Order Subtotals\" that\ncalculates the total dollar amount of each order. You can base your query on this\nquery together with the two tables \"Customers\" and \"Orders.\" (To include a\npreviously constructed query in your query, you select the previous query from the\n\"Queries\" tab instead of the \"Tables\" tab in the \"Show Table\" dialog box.) You'll\nneed to Group By company, use a Where for the date range, and Sum and Sort on\nSubtotal from \"Order Subtotals\".\nTask 5: Write a query that lists the names of all products in order of their total sales\nfor 1995 together with the corresponding dollar amounts.\nHint: There is already a query in the database called \"Order Details Extended\"\nwhich includes, for each line item sold, the product name and the total dollar value\n(UnitPrice*Quantity*(1-Discount)). You can base your query on this query and the\n\"Orders\" table. To find the total revenue generated by each product, add together\nthe dollar value of line items referring to the same product using \"Group by\"\nProductID and the aggregate function \"Sum\". Make sure that you properly use\nfield \"OrderDate\" in table \"Orders\" to constrain the summation to line items that\nrefer to orders placed in 1995.\nTask 6: Start with the query you created in Task 5 and create a new query that\nincludes only the sales to customers in Spain.\nHint: First open the query you saved for Task 5, then add the \"Customers\" table to\nthe query. (You can add a new table to an existing query by right-clicking in the\nupper half of the Design View and selecting \"Show Table...\") Use the \"Country\"\nfield in the \"Customers\" table to select only customers in Spain. Don't forget to use\nthe \"Save as...\" command to save this new query with a different name (\"15561\nTask 6\")."
    },
    {
      "category": "Resource",
      "title": "ps3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/c26e5fc3701a9a8b728fc38ec3d18f57_ps3.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 IT Essentials\nSpring 2005\nAssignment #3 - Version 2: Setting up an online survey\nRevised as of 2/26/05.\nThis version replaces the version previously distributed in class\nDue: Wednesday, March 9, 2005\nImportant Notes:\n1. You are encouraged to work in teams of 2 for this assignment. If you do, the\nsame grade will be given to both members. Collaboration will be of \"Type 3\"\n(as defined in the MIT Sloan Academic Standards, January 2005). In this\ncase, that means that both team members must be present when the work is\nbeing done, and both must understand the final answers. If team member A\nis substantially more knowledgeable about the subject matter than B, it is A's\nresponsibility to explain the reasoning behind the answers to B, and it is B's\nresponsibility to ask questions until B understands the answers.\n2. You may choose to work alone, but you will be expected to do the same\namount of work as a two-person team.\n3. Do not leave this assignment for the last minute!\nIn this assignment you will use Microsoft FrontPage to set up a data-gathering tool, in the\nform of a web survey, which takes consumer information from a web interface and saves\nit to either an Access or an Excel database.\nThere are appendices at the end of this problem set that will guide you through some\ncommon methods of designing forms and importing databases that you will need to\nperform in order to complete your web designs.\nWhat to turn in:\nThe web address of your working web surveys.\nPage 1\n\nIn this problem you will be creating a survey using FrontPage 2003 (or XP) to gather data\non any topic of your interest. You can take any ideas from other classes or projects you\nmay be working on which require you to gather some type of data about a product or\nservice. Please feel free to choose any topic of interest to you. Note: Regardless of what\ntopic you choose, you should read the following survey sample. Its purpose is to evaluate\ncustomer satisfaction at the Sloan Snack Bar, and has important information and useful\ntips. You can turn this sample survey in, but be aware that you will receive extra credit\nfor creating your own topic survey. This sample assumes that you will raffle a prize\namong those who respond to your survey.\nSAMPLE SURVEY ON CUSTOMER SATISFACTION AT THE SLOAN\nREFRESHER COURSE:\nPhase 1: Design your survey page\nIn this phase you will create a FORM with questions, options, and text fields for users to\ninput their responses. Furthermore, you will set this form to save the information into\nyour database.\nStep 1: Create a new web in Microsoft FrontPage 2003. This project will hold at least\n3 web pages and the results database (Access). In the file menu, click new. Then, under\nthe New Web site heading, choose One Page Web site...\nStep 2: Create your index.asp page.\nThis page will be saved in .asp format (File ‚ Save As ... ‚ index.asp). That is, this\npage will be an Active Server Pages script, not just a plain .html file. You will be using\nthe Form Page Wizard to create the questions in this script.\nSee Appendix A for a list of suggested questions and Appendix B for instructions on\nusing the Form Page Wizard. Make sure that you include the questions that deal with the\nquality of food, hours of operation, and service. Make the question scale 1 (lowest) to 5\n(highest). It is recommended that you use radio buttons. Make another question for\nsuggestions, with a text box for input. Finally, add questions for demographics: Sex\n(radio buttons for Male or Female), Program (a drop down menu would be nice), Year of\nGraduation (a numeric field will do), and Email (string field).\nMake sure to include an introduction stating the purpose of the survey, expected time to\nfill out the survey, and any incentives for participating (e.g., raffle for movie passes, etc.).\nStep 3: Create a response page.\nYou may want to name this page Thankyou.htm. It will serve as a thank-you note for\nsurvey participants, it can mention how soon they can expect to hear from you if they win\nthe raffle (if you offer one), and links to redirect them to other sites (i.e. your home page)\nso they won't be lead to come back to the survey to fill it out again.\nPage 2\n\nStep 4: Set up the form to save to the database.\nAt this point, FrontPage does not know that you want to save the results of your\nquestionnaire to your database. You need to indicate so.\nRefer to Appendix C to learn how to save a form to a database.\nCheck to see that all fields are being saved, from food quality to demographics.\nPhase 2: Creating an administrative page.\nThe administrative page will be for you to both check on the number of people who have\nresponded so far and to remotely pick up the Results file so you can analyze it.\nStep 1: Create an administrative page.\nYou may want to name it something like admin.asp (File ‚ Save As ... ‚ admin.asp), a\nscript. Only you should know of the existence of this page that gives you access to the\nresults file (email, IP addresses, and other sensitive information).\nThis page will show your response totals so far. To implement that, use Appendix D.\nNext, create a hyperlink to the Results.mdb file itself, so you can remotely download and\nreview this file (without having to physically touch the server for this). Beware that your\ndatabase file may be located inside the fpdb folder. Drag and drop this file out of the\nfpdb folder so that is it next to your other files. You can add this link simply by click-\nand-dragging the database file from the file view (on the left-hand side of the screen)\nonto the admin.asp page. (Taking the database file out of its folder enables you to access\nit via the link once you publish and avoid directory permission issues on the web server).\nAt this point, it is recommended that you save your files and run a test to make sure that\nthe form is working correctly and information is being saved to your database. If this is\nthe first time you are saving it, or if you are developing this web project in a folder\noutside your web server (i.e. PWS), you should use the Publish button (See Phase 4) and\nfollow the instructions. This way, FrontPage saves all the extra files needed for the web\nsite to run.\nPhase 3: Design you own survey. (extra credit: 10%)\nIf you choose your own topic, please do not forget to include some introduction about the\npurpose of your survey in the first page (index.asp).\nPage 3\n\nPhase 4: Publishing your survey\nTo hand in the assignment, you will need to upload your work to a remote server. To do\nthis, follow these directions:\n1) Complete the assignment as outlined. Make sure you use Frontpage (either 2000\nor XP). Make sure you have imported your database (access file) into your web.\n2) Go to the File menu and select Publish Site... .\n3) In the Remote Web site location box, enter the web address.\nBut instead of \"username\", put the username from the first part of your email\naddress that is listed on the MIT Server.\nHit the OK button.\nPage 4\n\n4) It will ask you whether to create a website at the specified location. Hit \" Yes\".\n5) It will then ask you for a username and password. Regardless of who you are,\nenter the username \"xxxx\" and the password \"xxxx\". All teams will enter the\nsame username/password combination.\n6) Now, you are ready to actually publish the website. In the bottom right hand\ncorner of Frontpage, you should see options and a button to publish the website.\nChoose the \"Local to remote\" option. Then, click the \"Publish Web site\" button.\n7) You are done. To check to see if your site works, check the URL.\n8) Save a copy of your web site on your own computer until after the assignment has\nbeen graded. In case any problems occur with the server, you will have a copy of\nyour site.\n9) Email Evan Witt with the name of your team members and\na link to the screens on your site.\nDone. Congratulations!!!\nPage 5\n\nAppendix A: Sample Questions to Include\nHere is a list of data you might collect in your survey (and suggestions for what format to\nuse for each):\n- Food Satisfaction Rating (numerical, expect values between 1 and 5)\n- Hours Satisfaction Rating (numerical, expect values between 1 and 5)\n- Service Satisfaction Rating (numerical, expect values between 1 and 5)\n- Suggested Improvements (text, select Allow Zero length: Yes for all your text fields)\n- Demographic information such as\n- Sex (text, Male or Female)\n- Program (text, MBA, LFM, MOT, etc.)\n- Graduation year (numerical, just the year)\n- Email (for those who want to be part of the raffle).\n- And extra items you can obtain from respondents:\n- BrowserType (text, select Allow Zero length: Yes for all your text fields)\n- Address (text)\n- Timestamp (date)\n- Username (text)\nAppendix B: Using the Form Page Wizard\nThis method can save lots of time when designing a questionnaire to be responded by the\nuse of one-of several answer forms (like radio buttons), any-of-many (like check boxes),\nor direct input (like text fields). Please follow the next steps:\n-\nClick on File, New, Page, More Page Templates... and select Form Page Wizard.\nClick Next.\n-\nClick on Add. A new menu appears with several choices for type of input. Once you\nhave selected a choice, you are returned to the first screen, where you can click Add\nagain. Some of the items that we will be using from this menu are:\n-\nRange. This helps rate users' opinion on a scale. When you click Next, you can\nselect it on a scale of 1 to 5, to use a radio buttons (by leaving the use drop-down\nmenu... unchecked). You should select a meaningful name (such as\nFoodQuality) for this.\n-\nParagraph: Used to input complete sentences, such as suggestions and opinions.\nChange the prompt of this question to fit your form (such as Do you have any\nsuggestions for improvement?) and select a meaningful name for this input field.\n-\nString: Used to enter a short answer, such as email. Once again, choose a prompt\n(i.e. Enter your email if you want to be part of our raffle) and the name for this\nfield.\n-\nNumber: Used to enter information such as year of graduation.\n-\nOne of Several: Used to input data such as sex or program of study. To choose\none of the options, you can use drop-down menus, radio buttons, or a list. Simply\nPage 6\n\ninput your list of options in a different line and choose an appropriate name for\nthe field.\n-\nAny of several: Used to select more than one (or none) option. The only option is\nto create them as a list of check-boxes.\n-\nBoolean: Used to provide a yes/no or true/false answer.\n-\nOnce you are done selecting choices for all your questions, make sure they are\narranged in the order you want them to appear in your web page. Click Next.\n-\nChoose the presentation layout options that best work for you (hint: you will seldom\nneed to create a Table of Contents for a survey). And click Next.\n-\nFor output options, it is recommended that you select use Custom CGI script. The\nother two options will save to an html page or a text file, which we are not using in\nthis problem set (we already have databases in place).\n-\nClick Finish.\nFeel free to move some of the fields to make your page more presentable. Moreover, it is\na good idea to right-click and check on the Form Field Properties of your different\nfields. You can customize them to accept just a certain number or type of values\n(Validate...).\nAppendix C: Saving a form to a database.\n-\nTo start, right-click anywhere inside the form (identified as a dashed square where all\nthe fields are included) and select Form Properties.\n-\nSelect the radio button next to Send to database, and choose a name for this form.\n-\nClick on the Options button.\n-\nSelect Create Database, and FrontPage will automatically create a database for\nyou. If your form has more fields than your database, just click on Update Database\nto let FrontPage modify your Access file by adding the extra fields you need.\n-\nIf you have a confirmation page (such as Thankyou.htm) enter that page name in the\nURL of confirmation page for users to see when they click the Submit button.\n-\nNext, select the Additional Fields tab and see the mapping of the browser-type, etc.\nfields to the proper database column. If you are not planning on keeping this\ninformation, then remove the additional fields from the list (Click the Remove\nbutton).\n-\nClick OK for both windows.\nAppendix D: Posting results from a database into a page\nThis method will help you take information from a database table or query (but not a\nform or a report) and present it to your users in different forms. You can present the data\nfor a static page (html) as a table or a list. For an interactive page (and ASP script) you\ncan present the data as a drop-down menu or text fields, which users can choose and\nmanipulate by the means of a Submit button.\nPage 7\n\n-\nCreate a new blank page.\n-\nFrom the main menu, select Insert, Database, and Results.\n-\nSelect Use an existing database connection, and choose the database you are\nworking with (such as Results, or Northwind). Click Next.\n-\nSelect the table or query you want to use (such as TotalRespondents, Categories, or\nProducts), or create your own query. Your query may not filter anything out of the\ntable. Click Next.\n-\nBy using the Edit List button, you can select what fields to display. When you want\nto ultimately display your results in a drop-down menu, you should select no more\nthan two fields to display (such as the CategoryName and the CategoryID).\n-\nYou can use the More Options button to filter, limit, or sort the displayed results\nfurther. Following are the options you will find:\n-\nCriteria: Useful in setting up a search form that works like the \"where\" statement\nof a query. Click on Add and you will find a list of the different columns you are\ndisplaying. Select one of them to be equal (or not equal, greater than, etc.) to a\ngiven value. One example is for the Northwind database, you can select to display\na product such that CategoryID equals Category, where you have preselected to\ndisplay the Products table, and the Category variable comes from a previous\npage or frame.\n-\nOrdering: So that you can choose which field to \"order by\"\n-\nDefaults: Important if you want the page to display some initial results instead of\nan error message. One example, one displaying all the categories in the\nNorthwind database, the CategoryID can be set to default 1, so that Beverages\nwill be displayed when users first access the page.\n-\nMessage to display...: You may want to change this field so that users know the\nreason why this page is blank (i.e., they need to select a product before the can see\nthe pricing information on it).\n-\nClick Next.\n-\nHere, you can select four different types of output:\n-\nTable (static): gives you a list of the results of your table or query.\n-\nList (static): Also gives you a listing of results in different formats.\n-\nDrop-down list (interactive): In this method users can select one of several\nchoices and submit the option back for processing. One example is choosing a\ncategory from the Northwind database (beverages, condiments, etc.). The\nDisplayed value would be the CategoryName, while the Submitted value\nwould be the CategoryID (1, 2, etc.). This CategoryID would be sent to the next\nframe so that the products that belong to that category can be displayed.\n-\nClick Next.\n-\nThis is the last part of the wizard. For the purpose of this exercise, you should NOT\nselect Add Search Form in any instance. Click Finish.\nPage 8"
    },
    {
      "category": "Resource",
      "title": "practice_quest.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/a4ed11911bc2e0e96692e1ebd5a691a3_practice_quest.pdf",
      "content": "PRACTICE QUESTIONS FOR 15.561 FINAL EXAMINATION\nSpring 2005\nCLARIFICATION: This is not a practice final but a collection of questions similar to those likely to\nbe on the final.\nCOMPUTER FUNDAMENTALS PRACTICE QUESTIONS\nMultiple-choice questions: SELECT THE BEST ANSWER.\nC\n1.\nAll of the following can fit in one byte, EXCEPT:\nA. A letter encoded in ASCII.\nB. One out of 200 different possible machine instructions.\nC. A memory address for a computer which has 64KB RAM.\nD. 4 pixels where each pixel can be either black, white, red, or blue.\nE. One pixel where each pixel can have one of 128 different colors.\nB\n2.\nA modern microprocessor can process information at a rate that is:\nA. slower than a hard disk's capability to store the data.\nB. faster than a hard disk's capability to store the data.\nC. comparable with a hard disk's capability to store the data.\nD. faster than the transfer rate of a hard disk, but slower than that of a CD-ROM.\nE. faster than the transfer rate of a CD-ROM, but slower than that of a hard disk.\nC\n4.\nThe amount of video memory required to store a screen with a resolution of\n1024x1024, where each pixel can have one of 65536 different colors, is:\nA. 500KB\nB. 1MB\nC. 2MB\nD. 3MB\nE. 4MB\n\nD\n5.\nAll of the following influence the storage capacity of a magnetic hard disk, EXCEPT:\nA. The number of tracks per recording surface.\nB. The bit density of the recording technology.\nC. The number of recording surfaces.\nD. The speed of rotation of the recording surface.\nE. The diameter of the recording surfaces.\nD\n6.\nAll of the following statements describe instances of the general technique of\ncaching, EXCEPT:\nA. Pentium processors store copies of the most frequently accessed memory\nlocations internally (on-chip), so that subsequent data accesses can be satisfied\nvery quickly.\nB. Hard disk drivers store copies of the most recently accessed hard disk clusters in\nRAM buffers.\nC. Netscape stores copies of the most recently accessed Web pages in a special\ndirectory of the local hard disk.\nD. Windows 98 allows users to place icons, representing shortcuts to their most\nfrequently accessed applications, on the Windows desktop.\nE. CD-ROM drivers store copies of the most recently accessed CD-ROM blocks on\nhard disk.\n\nCOMPUTER NETWORKS PRACTICE QUESTIONS\nQuestion 1: Digital technologies are rapidly replacing analog technologies in applications ranging from data\ncommunication to telephony, television, audio reproduction etc. List three advantages of digitally encoded data\nrelative to data encoded in analog form.\n1. Digital signals are more resilient to distortion and interference than\nanalog signals. Using digital signals, every data value is transmitted\nusing a discrete signal \"type\". Therefore, even when a signal gets\nsomewhat distorted during transmission, the receiver can usually still\ncorrectly decide which of the allowed signal \"types\" is \"closest\" to each\nreceived pulse and thus reconstruct the correct data.\n2. Digital signals can be multiplexed using time division multiplexing, which\nresults in better bandwidth utilization than frequency division\nmultiplexing (In frequency division multiplexing, multiplexed signals must\nbe separated by unused frequency zones, or \"gaps\". This reduces the total\nbandwidth utilization).\n3. Digital signals can be compressed and packetized to achieve faster\neffective transmission rate.\n4. Digital signals can be encrypted in applications that require high levels\nof security.\n5. Applications using digital data can take advantage of the remarkable\nimprovements in cost/performance described by Moore's Law.\nQuestion 2: Consider the following simple analogy used to describe how the Internet works:\n\"Imagine a complex highway system on which millions of cars are always moving. There are groups of cars that\nbelong to the same travel party heading to the same place. Before getting into the highway, each individual driver\nconsults a map and marks an itinerary from origin to final destination. Each driver is doing this independently.\nTherefore, it is possible that different cars belonging to the same travel party may follow different itineraries.\nEventually, however, a car arrives at its destination. It waits for other members of the same travel party to arrive,\nand then they all do something useful together.\"\nCompared with the way the Internet actually works, the above analogy contains an important inaccuracy. Can you\nexplain what it is?\nThe inaccuracy is that each car (packet) contains a preplanned itinerary\n(route through the network) from origin to destination.\nPacket-switching networks, such as the Internet, do not plan a route for each\npacket in advance. Each packet includes the IP address of its final\ndestination only. Based on this information, each router in the network first\nchecks to see if it has a direct point-to-point connection with the packet's\ndestination. If it has then it sends it there. Otherwise it forwards the\npacket to the \"best\" router it has a direct point-to-point connection with.\nThe \"best\" router is the one, which is \"closest\" to the packet's final\ndestination. The process is repeated until the packet reaches its final\ndestination.\n\nSOFTWARE DEVELOPMENT PRACTICE QUESTIONS\nQuestion 1: There are tradeoffs between programming in a high-level language vs. assembly language.\nCompare these by giving at least one advantage of working at each level.\nUsing a high-level language is more user-friendly. It is conceptually more\nnatural, and usually easier to specify what you want the computer to do. The\nhigher level hides more details of how things work at lower levels; the human\nprogrammer doesn't have to know so much about the computer itself (i.e., its\nlower levels) and can achieve a task (e.g., specify how to do it) with less\nlabor time. A disadvantage of working at the higher level is that more\ncomputation (at execution time) is usually required by the computer.\nProgramming in assembly language gives more control over the details of what\nthe machine actually does - if one has the patience and expertise to properly\nexploit this control. This means that you can often write assembly language\nprograms that require less running time and/or less memory space than the\nequivalent programs written in a higher level language would require.\nWorking in assembly language also facilitates integration with other software\nthat is lower-level.\nQuestion 2: For each of the following approaches to developing software, please list one advantage and\none disadvantage of the approach:\nPrototyping\n-Advantages\n-Especially useful when exact requirements are hard to know in advance\n»user interfaces\n»decision systems\n»electronic commerce?\n-Encourages user involvement\n-Disadvantages\n-Hard to predict and control outcomes reliably\n-If repeated, significant reimplementations are needed, can be very expensive\n-May result in systems that are inefficient, unreliable, or hard to maintain\nPackaged software\n-Advantages\n-By amortizing development and maintenance costs over many organizations, it\nis possible to get superior solutions at much lower cost\n-Disadvantages\n-Customizing software can be very time-consuming and expensive\n-May have to change organization to fit software, rather than vice versa\n\nDATABASE DESIGN PRACTICE QUESTION\nThe Sloan Career Development Office has hired you as a consultant to help design a system using a\nrelational database to maintain placement statistics for graduating MBA students. The database schema\n(tables and fields) has already been designed by someone else (see below). Your job is to define a set of\nqueries for the system.\nAs you specify these queries on the following page, please bear in mind the following:\n1. For each query, please fill in the spaces as you would in the Microsoft Access Query Design\nView.\n2. If your query does not need to use the row labeled \"Total\", please cross out that row.\n3. If your query does need to use the row labeled \"Total\", you need to fill in something in that row\nfor each column you use. The possible values you can use are:\na. Group by\nb. Sum\nc. Avg\nd. Min\ne. Max\nf. Count\ng. StDev\nh. Var\ni.\nFirst\nj.\nLast\nk. Expression\nl.\nWhere\n4. If your query needs something in the row labeled \"Sort\", you can use either of the two following\nvalues:\na. Ascending\nb. Descending\n5. In the row labeled \"Show\", you can either leave the box blank or put a \"E\" in it.\n6. Use the following data schema for all the queries in this section:\n\n1. Create an alphabetical list of students, together with the total number of offers each student\nreceived.\n2. Create an alphabetical list of the students who received offers from the company named\n\"McKinsey\".\n3. Create a table showing all companies that made offers in order of the average salary they offered.\n(Companies that offered the highest average salaries should be listed first.)\n4. Create a table showing all companies whose offers were accepted, in order of the number of\naccepted offers. (Companies with the most accepted offers should be listed first.) You can\nassume that the field \"Accepted?\" has the value \"Yes\" for accepted offers.\n\nAnswer Key for Database Design Question:\n1. Create an alphabetical list of students, together with the total number of offers each student\nreceived.\nNote: The first column in this query (\"StudentID\") is included to account for the (rare) cases where two\nor more students have the same first and last names. Your answer would be counted as correct even if\nyou did not include this column. A similar comment applies to the other queries below.\n2.\nCreate an alphabetical list of the students who received offers from the company named\n\"McKinsey\".\nNote: The \"Total\" row is not shown in this screen image. On your exam sheet, you should cross it out.\n3. Create a table showing all companies that made offers in order of the average salary they offered.\n(Companies that offered the highest average salaries should be listed first.)\n4. Create a table showing all companies whose offers were accepted, in order of the number of\naccepted offers. (Companies with the most accepted offers should be listed first.) You can\nassume that the field \"Accepted?\" has the value \"Yes\" for accepted offers.\n\nINTERNET SECURITY PRACTICE QUESTION\nAn increasing number of retail banks are offering Internet banking services. Using those services, bank\ncustomers are able to access their accounts and perform transactions through a Web browser. Internet\nbanking introduces a whole set of security concerns, most of which are not present in ATM networks.\nMore specifically, the following concerns are present:\n-\nConcern 1: Anybody can connect to the bank's Web site and try to access an account. The bank must\nverify that it is transacting with the legitimate account owners\n-\nConcern 2: Clever impostors can \"impersonate\" a bank's Web server and fool customers into\nsupplying their account numbers and passwords. Before they send any sensitive information, bank\ncustomers need to verify that the Web site they are transacting with actually belongs to the bank\n-\nConcern 3: The Internet is an insecure, public network. All traffic can be intercepted by unauthorized\nthird parties. The bank must make sure that account numbers, passwords, account balances and other\nsensitive information cannot be revealed to third parties, even though network traffic might be\nintercepted.\nSketch a protocol that addresses all three security concerns listed above and allows a bank client and a\nbank server to communicate securely over the Internet. In your solution you can assume that all\nnecessary keys have already been securely transmitted to the parties that need to use them.\nWrite up your answer as follows:\n-\nList each step of your protocol in sequence.\n-\nFor each step of the protocol, list the sender and recipient of the message (use the abbreviations\nB=Bank, U=User) followed by a brief description of the message contents\n-\nIf a message is encrypted or signed, make sure you clearly state that and also list the key that was\nused to encrypt/sign the message.\nFor example:\n1. U->B User sends her account number and deposit amount to the bank\n2. B->U Bank performs operation and sends back the new account balance signed by B's private key.\nHere's one possible solution:\n\n1. U->B\nU sends the following message to B: \"hello bank. I'm U. Here are\nthe details of the transaction I want you to perform\". U's message\nis encrypted by B's public key and signed by U's private key.\n2. B->U\nB verifies U's signature and decrypts the message. It performs the\nrequested transaction and responds to U by sending the following\nmessage: \"This is the bank. These are the results of the\ntransaction you requested\". B's message is encrypted by U's public\nkey and signed by B's private key.\n3. U\nU verifies B's signature and decrypts the message. If all is well,\nit displays the transaction results to the human operator.\nENTERPRISE-LEVEL SYSTEMS PRACTICE QUESTIONS\n(Note: You should expect a question of a third of the scope of the question below.)\nQuestion: A small bank is using a client/server system with a single database server for storing the\ntransaction histories and account balances of all their customers. Users query the server by sending the\naccount number and PIN of a customer, plus the type and parameters of the required transaction (e.g.\ndeposit, withdrawal, transfer). The server performs the transaction and returns the new account balance of\nthe customer. Recently, the bank has been experiencing rapid growth. As a result, the bank server has\nbecome overloaded. The bank has decided to reorganize its system in order to improve its performance by\nadding more servers.\nTo make the transition to the new system as smooth as possible, the bank does not wish to make any\nchanges to the client portion of its software (the part which resides on every ATM and every bank teller's\nworkstation and implements the user interface). However, the current client software has been designed to\ncommunicate with a single server only. The network address of the database server is hard-coded in the\nclient software.\na. Propose a high-level architecture for the new system. Draw a simple diagram of the new system and\nexplain the role of all machines that are present in your diagram. To receive full credit, your design\nmust not require any change to the client portion of the original system (15 points).\n\nCli\nCli\nCli\nent 1\nent 2\nent 3\nQuery Router\n(replaces original\ndatabase server)\nServer 1\nServer 2\nServer 3\nThe basic idea is to convert the original, 2-tier client/server system\ninto a 3-tier system by replacing the original database server with a\n\"query router\" machine. The query router receives queries from all\nclients (who \"think\" that they are still talking directly to the\ndatabase server). The router simply forwards the query to the\nappropriate server (see answer to question c for how the appropriate\nserver is determined). It then receives the response from the server\nand sends it back without any change to the client.\n\nb. Describe what the database of each new server should contain relative to the contents of the original\nserver database (10 points).\nEach database should contain a subset of the original accounts. In\norder to distribute the load evenly among the servers, ideally, all\naccounts should be partitioned evenly among the servers. For example,\nsuppose that the range of account numbers is 1000000-8999999 and that\nthere are two servers. Then, Server 1 should contain accounts 1000000\n4999999 and Server 2 accounts 5000000-8999999\nc. Describe how client queries get distributed to the right server (5 points).\nIf we assume the above partitioning of accounts to servers, the query\nrouter only needs to look at the first digit of the account number\nsupplied by the client in order to decide to which server it should be\nforwarded: All accounts that begin with 1-4 should be forwarded to\nServer 1, while all accounts that begin with 5-8 should be forwarded\nto Server 2.\nd. The above design was derived with the restriction that you could not modify the client part of the\nsoftware. If you were free to modify the client part of the software, would you have designed the new\nsystem in any different way? If yes, then explain how and why. If not, then explain why not. No\ndiagram is necessary, but you may draw one if it helps you explain your points faster (10 points).\nThe problem with the original system was that a centralized server was\nhandling all the queries. The multi-server design proposed in question\na. still has a centralized point, through which all queries must pass\n(query router). The query router does minimal processing on each query\n(see answer to question c) so it is expected to be much less of a\nbottleneck than the original centralized server. However, if the\nvolume of queries increases significantly enough, the centralized\nquery router will eventually become a bottleneck (especially because\nall the query results also pass through it). Finally, if the query\nrouter crashes, the entire system goes down with it.\nOne possibility would be to change the interaction protocol as\nfollows: The client contacts the query router in order to get the\nnetwork address of the appropriate server; the query router, based on\nthe account number provides the network address of the appropriate\nserver; the client then contacts the appropriate server independently.\nThis solution only involves the query router in order to locate the\nright server and is therefore much more scalable. If we were concerned\nwith the possibility of the query router failing, we could improve our\narchitecture even further by maintaining multiple, redundant query\nrouters. Then, if a client failed to receive a response from one\nquery router, it could try the others, one after another, until it got\na response.\n\nENTERPRISE SYSTEMS AND WEB SERVICES PRACTICE QUESTIONS\n1. For the following technologies: (i) explain each briefly (one to two sentences), and (ii) list an advantage\nthat each can provide to organizations.\n-\nERP\n-\nCRM\n-\nSCM\n-\nOntology\n\n-\nSOAP\n-\nUDDI\n-\nWeb services"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/834414dbcc2922c7b0b02735e9d15a2e_lecture1.pdf",
      "content": "15.561\nInformation Technology\nEssentials\nThomas Malone\nAcknowledgments:\nSlides marked \"SM\" are adapted from Stuart Madnick, MIT.\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas, Stuart Madnick\nSlides marked \"CD\" are adapted from Chris Dellarocas, U. Md.\n\nWhy bother?\n- Why should you, as a manager, care about\ninformation technology?\n\nBuzzwords\nBuzzwords\n????????????????????????????\n\nBuzzwords\nBuzzwords\nTechnological reality\n\nMain Course Objectives\n- Become comfortable with the technologies\nthat are shaping business today\n- Acquire tools that will help you assess\ntechnological trends long after you have left\nSloan\nCD\n\nCourse overview\n- Technology\n- Applications of Technology\n\nA Typical Computer\nKeyboard\nMouse\nCentral\nProcessing\nUnit\n(CPU)\nMemory\nMonitor\nCD\nLaser printer\n\nA Simplified Computer\nINPUT/OUTPUT\nINPUT/OUTPUT\nINPUT CONVEYOR\nOUTPUT\nCONVEYOR\n+030\n+400\n+\n-\n...\nBLACKBOARD\nCALCULATOR\nLITTLE\nMAN\nPROCESSOR\n\nMEMORY\nSM\n\nPROCESSOR\n\nMEMORY\nINPUT/OUTPUT\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\n...\nBLACKBOARD\nCALCULATOR\nREGISTER\nSTORE\nLOAD\nMEMORY\n- There are 100 \"locations\" on the blackboard\n- Each location identified by number from 00 to 99\n- Each location has room for one 3-digit number\n- Load moves number from blackboard to register.\nExample: LOAD 01\n- Store moves number from register to blackboard.\nExample: STORE 00\nSM\n\nPROCESSOR\nMEMORY\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\n...\nBLACKBOARD\nCALCULATOR\nPUT\nGET\nREGISTER\nINPUT/OUTPUT\n- Input and Output conveyors hold 3-digit numbers\n- GET moves number from INPUT to REGISTER\n- PUT moves number from REGISTER to OUTPUT\nSM\n\nPROCESSOR\nMEMORY\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\n...\nBLACKBOARD\nCALCULATOR\nREGISTER\nPROCESSOR/CALCULATOR\n- Register has room for one 3-digit number\n- Calculator can add and subtract numbers from memory to\nregister\nExamples: ADD 02\nSM\nSUBTRACT 03\n\nLMC INSTRUCTIONS\nPROCESSOR\n\nMEMORY\n\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\n...\nBLACKBOARD\nCALCULATOR\nINPUT/OUTPUT\nREGISTER\nGET\nPUT\nADD\nSTORE\nSUB\nLOAD\n1.\nGet\n2.\nPut\n3.\nLoad x (Load 01)\n4.\nStore x (Store 05)\n5.\nAdd x (Add 02)\n6.\nSub x (Sub 03)\n7.\nStop\nSM\n\nSYMBOLIC LMC ADDRESSES\nPROCESSOR\n\nMEMORY\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nCALCULATOR\nINPUT/OUTPUT\nREGISTER\nWAGE\nBONUS\nPAY\nLabel\nLoc Contents\nEXAMPLE INSTRUCTION SEQUENCE\nOptional\n2-digit\n3-digit\nnumber\nnumber\nCalculate Pay = Wage + Bonus\n(permanent) (optional)\n1.\nLoad\nWage\n2.\nAdd\nBonus\n3.\nStore\nPay\nSM\n4.\nStop\n\nProgram to:\n1)\nRead WAGE and BONUS amount from INPUT\n2)\nCompute total PAY\n3)\nOutput total PAY\nPROCESSOR\n\nMEMORY\n\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nCALCULATOR\nREGISTER\nWAGE\nBONUS\nPAY\nLabel\nLoc Contents\nINPUT/OUTPUT\nBONUS\nWAGE\n...\nSTEP\nINSTRUCTION\nSTEP\nINSTRUCTION\n1.\n5.\n2.\n6.\n3.\n7.\n4.\n8.\nSM\n\nProgram\n0.\nGet\n1.\nStore 20\n2.\nAdd 19\n3.\nPut\n4.\nStop\nLMC STORED PROGRAM CONCEPTS\nIN\nOUT\n+030\n+400\nPROCESSOR\nINPUT/OUTPUT\n+\n-\nCALCULATOR\n...\nLabel\nLoc Contents\nProgram\n0.\nGet\n1.\nStore 20\n2.\nAdd 19\n3.\nPut\n4.\nStop\nMEMORY\nREGISTER\nISSUES:\n- Where is LMC program stored?\n- How does LMC understand instructions like STOP? It only likes numbers.\n- How does LMC handle symbolic labels like A, B, C?\nANSWERS (Stored Program Concept):\nSM\n-\n\nLMC MACHINE LANGUAGE AND ASSEMBLY LANGUAGE\nPROCESSOR\nMEMORY\nop-\ncode\nsymbolic\nstop\n1xx\nadd\n2xx\nsubtract\n3xx\nstore\n5xx\nload\nget\nput\nSTEP\nINSTRUCTION\nget\nstore w\nget\nstore b\nload w\nstop\nLOC\nINSTRUCTION\n1 ASSEMBLY LANG\n(Source Program)\n(Object Program)\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nBLACKBOARD\nCALCULATOR\n...\nw\nb\nINSTRUCTIONS\nadd b\nput\nMACHINE LANG\nSM\n\nINSTRUCTION SEQUENCING\nPROCESSOR\nMEMORY\nop-\ncode\nsymbolic\nstop\n1xx\nadd\n2xx\nsubtract\n3xx\nstore\n5xx\nload\nget\nput\nSEQUENCING\n1.\nLOOK AT COUNTER\n2.\nGET THAT INSTRUCTION\n3.\n4.\nPULL COUNTER CORD\n)\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nBLACKBOARD\nCALCULATOR\n...\nSTART BUTTON\nNEXT INSTRUCTION\nCOUNTER\n...\nINSTRUCTIONS\nINSTRUCTION\nPERFORM THAT INSTRUCTION\n(REPEAT\nSM\n\nINSTRUCTION SEQUENCING\nMEMORY\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nBLACKBOARD\nCALCULATOR\n...\nSTART BUTTON\nNEXT INSTRUCTION\nCOUNTER\n...\nPROCESSOR\nCONTROL FLOW\n- BRANCH always puts a new address in the instruction counter\n- BRANCH ZERO puts a new address in the instruction counter if the\nREGISTER is 0. Otherwise it increases the instruction counter by 1.\nExamples: BRANCH 02\nBRANCH ZERO 06\nSM\n\nPROCESSOR\nMEMORY\nop-\ncode\nsymbolic\nstop\n1xx\nadd\n2xx\nsubtract\n3xx\nstore\n5xx\nload\n6xx\nbranch\n7xx\nbranch zero\nINPUT/OUTPUT\nIN\nOUT\n+030\n+400\n+\n-\nBLACKBOARD\nCALCULATOR\n...\nSTART BUTTON\nNEXT INSTRUCTION\nCOUNTER\n...\nop-\ncode\nsymbolic\nget\nput\nINSTRUCTIONS\nSo what are:\nMIPS and MHz all about?\nSM\n\nBASIC FACTS TO ASK ABOUT\nANY COMPUTER\nLMC ANSWERS\n1. MEMORY\n(A) BASIC UNIT\n3 DECIMAL DIGIT NUMBER\n(B) MAXIMUM SIZE 100 LOCATIONS\n2. REGISTERS\n(A) HOW MANY\n(B) NUMBERS\n3 DECIMAL DIGIT NUMBER\n3. INSTRUCTIONS\n(A) NUMBER\n7 INSTRUCTIONS\nSM\n\nINTEL PENTIUM 4 ANSWERS\n1. MEMORY\n(A) INDUSTRY\n8 BINARY DIGITS (BITS) = 1 BYTE\nBASIC UNIT\n8 BITS\n0 0 1 0 1 1 0 1\n(B) BASIC UNIT\n32 BITS = 4 BYTES\n(C) TYPICAL SIZE\nMEMORY RAM: 128 MB - 1GB\n2. REGISTERS\n(A) HOW MANY\nABOUT 50 REGISTERS\n(B) NUMBERS\nVARIOUS TYPES\n3. INSTRUCTIONS\n(A) NUMBER\nABOUT 500\nSM\n\nConclusions\n1. There are many detailed facts about computers.\n2. Many of them will change every year of your career.\n3. You will never know them all.\n4. That's okay.\n5. What you need to know is:\n- What kinds of questions to ask\n- How to make sense of the answers.\n6. The basic concepts you have learned today will be\nuseful for a long time."
    },
    {
      "category": "Lecture Notes",
      "title": "lecture2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/1583a48996143e8e6318b15cf470c1c2_lecture2.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 2\nFundamentals of Computing II\nAcknowledgments:.\nCopyright (c) 2003 Thomas Malone, Chris Dellarocas\nAdapted from slides by Chris Dellarocas, U. Md..\n\nOutline:\nFundamentals of Computing\n- Computer architecture\n- Hardware Components\n» CPU, Memory, I/O, Buses\n- Understanding PC specs\n- Operating Systems\n- What is an OS?\n- OS Functions\n» Multitasking, Virtual Memory, File Systems, Window systems\n- Microcomputer operating systems\n\nBl\nLi le\nl\nl\nLi\n...\n...\n...\n...\nThe Little Man Computer\nackboard\ntt\nMan\nInput Conveyor\nCa cu ator\nne\nContents\nOutput Conveyor\nCD\n\nBASIC FACTS TO ASK ABOUT ANY COMPUTER\nLMC ANSWERS\n1. MEMORY\n(A) BASIC UNIT\n3 DECIMAL DIGIT NUMBER\n(B) MAXIMUM SIZE 100 LOCATIONS\n2. REGISTERS\n(A) HOW MANY\n(B) NUMBERS\n3 DECIMAL DIGIT NUMBER\n3. INSTRUCTIONS\n(A) NUMBER\n7 INSTRUCTIONS\nSM\n\ni\ni\nCl\ni\ni\nA \"Real\" Computer\nCPU\nMemory\nReg sters\nInstruct on\nCounter\nock\nKeyboard\nMon tor\nMouse\nLaser pr nter\n\nINTEL PENTIUM 4 ANSWERS\n1. MEMORY\n(A) INDUSTRY\n8 BINARY DIGITS (BITS) = 1 BYTE\nBASIC UNIT\n8 BITS\n0 0 1 0 1 1 0 1\n(B) BASIC UNIT\n32 BITS = 4 BYTES\n(C) TYPICAL SIZE\nMEMORY RAM: 128 MB - 1GB\n2. REGISTERS\n(A) HOW MANY\nABOUT 50 REGISTERS\n(B) NUMBERS\nVARIOUS TYPES\n3. INSTRUCTIONS\n(A) NUMBER\nABOUT 500\nSM\n\nBinary Computers\n- Real computers don't store and calculate with 3-digit decimal\nnumbers\n- A bit (binary digit) distinguishes between two states\n- TRUE and FALSE\n- 1 and 0\n- Bits are easier to implement in machines\n- Light bulb on or off\n- High vs. low voltage (on wires)\n- Magnetized or not (computer hard disks, floppies, tapes)\n- Pit or no pit detected by a laser (compact discs)\n\nInterpretation of a decimal number\n3 7 9\n3x100 + 7x10 + 9x1\n3x102 + 7x101 + 9x100\n\nInterpretation of a binary number\n1 1 0 1 1\n1x24 + 1x23 + 0x22 + 1x21 + 1x20\n1x16 + 1x8 + 0x4 + 1x2 + 1x1\n\nThe CPU\n-\nCPU = Central Processing Unit\n-\nInternal clock ticks very fast (e.g., 1.6 GHz = 1.6 billion ticks per\nsecond)\n- activities are synchronized to start on a clock tick\n- some activities take more than one clock tick\n-\nInstruction execution is automatic\n- (tick) find memory address of next instruction\n- (tick) retrieve instruction from memory\n- (tick) decode the instruction\n- (tick) fetch argument from memory if necessary\n- (tick) execute instruction\n- (tick) store result in memory if necessary\n\nli\ni\nCPU and Memory Interaction\nCPU\nAddress nes\nData L nes\n...\n...\nMEMORY\n\nli\ni\nCPU Issues an Address\nCPU\nAddress nes\nData L nes\n...\n...\nMEMORY\nCPU: I need the contents of memory location 50 !\n\nli\ni\nMemory makes the data available\nCPU\nAddress nes\nData L nes\n...\n...\nMEMORY\nMemory: Location 50 contains the number 127\n\nCPU Characteristics\n- Family: Determines the set of instructions it understands\n» Intel 80386, 80486, Pentium, Pentium II,...\n» Motorola: 68030, 68040\n- Clock Speed\n» Pentium: 500 MHz - 2.2 GHz\n- Data bus width: Size of data that can be manipulated at one time\n» 80486: 32 bits, Pentium: 64 bits\n- Address bus width: Limits the amount of memory that can be\ninstalled in the computer\n» LMC: 3 decimal digits. Locations _______\n» Pentium: 32 bits. Locations ________\n» Itanium: 64 bits. Locations _________\n\nExpressing Memory Capacity\n- Measured in bytes (=groups of 8 bits)\n- Each byte can store a binary number from 00000000 to\n11111111 (255 = 28-1)\n- More generally: n binary digits can store numbers\nfrom 0 to 2n-1\n- Frequently used multiples:\n- Kilobyte (KB) = 1,024 (210) bytes\n- Megabyte (MB) = 1,024 KB = 1,048,576 (220) bytes\n- Gigabyte (GB) = 1,024 MB ~ 1 billion (230) bytes\n\nSemiconductor Memory\n- RAM (Random Access Memory)\n- Can access any location equally fast\n- Loses contents without power\n- Two main types\n» Static (SRAM): Faster, expensive\n» Dynamic (DRAM): Slower, cheaper, consumes less power and\nspace\n- ROM (Read Only Memory)\n- Retains memory even without power\n- Useful to store programs executed upon system start-up (e.g. BIOS)\n\nHard Disks and Floppies\n- Slower than main memory\n- Bits stored as magnetic field of different polarity\n- Magnetized surface of disk rotates under a magnetized head\n(read/write mechanism)\n- Disk divided into tracks, each at different radius from center\n- Tracks are divided into sectors\n\nHard Disk Geometry\n- Head moves back and forth\n- To read/write some data:\n1. Head moves over desired track\n2. System waits until desired\nsector passes under head\n3. Data is read/written\nTRACK\nCYLINDER\nSECTOR\nFigure by MIT OCW.\n\nCD-ROMs\n- Slower than hard disks\n- Data is encoded by burning miniature \"pits\" on a\nphotoreflective surface; read by laser\n- CDs can hold up to 650MB of data.\n- CD-ROM drive maximum transfer speed is expressed\nin multiples of 150KB/sec\n- 4X drive --> 600KB/sec\n- 20X drive --> 3000KB/sec\n\n(\n)\nDVD Digital Video Disk\n- New, improved CD-ROM\n- smaller, denser \"pits\"\n- two layers of \"pits\" recorded on the same disk\n- DVDs can hold up to 17GB of data.\n1.6 μm spacing\n0.83 μm\nminimum\n0.4 μm\nminimum\n0.74 μm minimum\nFigures by MIT OCW.\n\nKeychain drives\n- Hold 16 MB - 2 GB\n- Attach to USB (Universal Serial Bus) port\n- Usually use \"flash memory\"\n- A special kind of ROM that can be rapidly erased and re-recorded\n\nI/O Devices\n- Input\n- Keyboard\n- Mouse\n- Hard Disk\n- Floppy Disk\n- ...\n- Output\n- Printer\n- Screen\n- Speakers\n- ...\n\nComputer Displays\n-\nComputer screen divided into small dots (pixels)\n-\nEach pixel can be displayed in a different color\n-\nScreen resolution: Number of pixels per screen\n- 640x480\n- 1024x768\n-\nColor information for each pixel stored in memory, read and\nconverted to video signal 60 times per second\n- To store information for a 1024x768 screen with 256 possible colors for\neach pixel we need _______ bytes\n\n/\nBuses: Connecting I O to CPU\n- One set of wires connect all devices and CPU\n- Transport of information is shared (public)\n- Hence called a bus (public transportation)\n- Nearly all computers use a bus to connect CPU and\nI/O Devices\n- Buses allow easy addition/replacement of I/O\nDevices\n- Modern PCs come equipped with expansion slots, directly\nconnected to the bus\n- I/O Device controllers implemented as expansion cards\n- Examples: ISA, PCI, PCMCIA, IEEE 1394 (FireWire)\n\nli\ni\nA simple bus architecture\nCPU\nAddress nes\nData L nes\nBUS\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\nMEMORY\nDISK\nVIDEO\n\nCache Memory: Motivation\n- Cheap main memory is slower than CPU\n- Example: Pentium PCs\n» CPU 2ns (500MHZ)\n» Main memory (100MHZ SDRAM) 10ns\n- Instructions that access main memory take many more clock ticks\nthan those that don't\n- Solution:\n- automatically keep copies of most frequently used memory locations\nin fast (but expensive) memory = cache memory\n\n(\n)\nA modern PC architecture\nsimplified\nRAM\nCache\nCPU\nBUS\nVi\nll\nDi\nll\nFl\ni\nDi\ni\nl\nSl\nl\nDi\ndeo\nContro er\nVRAM\nsk Contro er\noppy\nDr ve\nsk\nDr ve\nFaster Channe\nower Channe\nsk\nCache\n\nSummary: A modern PC\n- Processor: Pentium (500 MHz - 3.6 GHz)\n- Main Memory: 64 MB - 4 GB\n- Floppy Drive: 1.44MB (3.5-inch disks)\n- Hard Drive: 10 - 500GB\n- Graphics: 640x480 - 2048x1536, 256 to 16 million colors\n- Video Memory: 32 - 256MB\n\nTypes of software\n- System software\n- Operating systems\n- Programming languages\n- Database systems\n- Application software\n- General office tasks (word processing, etc.)\n- Accounting\n- Design\n- Factory automation\n- ...\n\nOperating systems - Examples\n- DOS\n- Windows (95, 98, NT, 2000, XP)\n- Mac OS X\n- Unix\n- Linux\n- ...\n\nOperating system\n- Allocates and assigns:\n- memory\n» e.g., file system, virtual memory\n- processor time\n» e.g., multitasking, multiprocessing\n- input-output devices\n» e.g., printer, keyboard, etc.\n- May also provide other capabilities useful to many users or\nprograms\n- Graphical User Interface (GUI) capabilities\n- Fonts, network protocols, ...\n- Web browser?\n\nOperating system as magician:\nThe four illusions\n- Many separate computers, one for each process\n- \"Multitasking\"\n- Large memory\n- \"Virtual memory\"\n- Disks and other secondary storage are organized as\ncollections of files\n- \"File systems\"\n- Windows and menus\n- \"Graphical User Interface (GUI)\"\n\nIllusion # 1: Multitasking\n- Reality:\n- One CPU\n- One instruction at a time\n- Illusion:\n- Several application programs executing concurrently\n- Implementation:\n- Operating system divides CPU time among application programs\n(time sharing)\n» each program \"thinks\" it is the only one running\n» OS copies Instruction Pointer and Registers back and forth as\neach program takes its turn\n\nMultitasking issues\n- How is control passed to next task?\n- Cooperative multitasking (Windows, Windows 95)\n» Application explicitly passes control back to OS\n» What if application never passes control back?\n- Preemptive multitasking (Unix, NT, XP)\n» Operating system interrupts application when I/O requested or\nwhen preset time limit has passed\n- Can one task access the memory of another one?\n- Preventing this is called \"memory management\"\n- Done by Unix, NT, XP, Mac OS X (Not by older versions of Mac OS\nand Windows)\n\nIllusion # 2: Virtual Memory\n- Some data is not used for a long time\n- Why keep it all in memory?\n- Copy a unit of data (called a \"page\") to hard disk and\nuse memory for other data\n- Copy pages back from hard disk to main memory as\nthey're needed\n- Process (and its programmer) not aware that main\nmemory is too small (the big memory illusion)\n- It asks for a main memory location (Page # , offset on page)\n- OS has to get that page into main memory if not already there\n\nIllusion # 3: File Systems\n- Reality:\n- Disks are sets of tracks\n- Tracks are sets of sectors\n- Sectors can store fixed-sized byte blocks\n- Illusion:\n- Disks are sets of directories\n- Directories contain other directories or files\n- Files are variable-size byte sequences\n- Directories and files have names\n\nIllusion # 4: Windows and Menus\n- Reality: Screen is an array of pixels\n- Illusion 1: Menus\n- Depending on where you click, different action happens\n- Technique: OS looks up location where mouse was clicked,\nexecutes appropriate action\n- Illusion 2: Overlapping windows\n- A window may cover part or all of another\n- When a window is uncovered, its contents are redisplayed\n- Technique: OS saves bitmap of covered windows\n» Application does not need to know how to redraw the contents\nof its window\n\nMicrocomputer Operating Systems\n-\nDOS\n- text-based interface, no multitasking\n-\nWindows\n- windows, cooperative multitasking\n- filenames restricted to 8 characters\n- bad memory management!\n-\nWindows 98\n- large filenames\n- built-in networking capabilities\n- plug-and-play device configuration\n\n(\n)\nMicrocomputer Operating Systems\ncont'd\n- Windows NT (including Windows 2000, Windows XP)\n- full multitasking\n- full memory management\n- UNIX (including Linux)\n- great memory management, multitasking\n- complex, text-based interface\n- Mac OS X\n- Based on Unix\n- Easy to use\n- can only run on Macintoshes\n\nSelecting an Operating System\n- Is our existing software compatible with the OS?\n- Does the OS have a large base of compatible software?\n- How reliable is the OS? Does it crash frequently?\n- Is the OS available for a wide variety of hardware?\n- How quickly does it run?\n- How easy it is to learn and use?\n- How easy is it to install and configure?\n- How much does it cost?"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/39c11ea0ef34a0e565fe71b1b29d48ae_lecture3.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 3\nNetworks I\nAcknowledgments:\nSlides marked \"SM\" are adapted from Stuart Madnick, MIT.\nSlides marked \"CD\" are adapted from Chris Dellarocas, U. Md..\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas, Stuart Madnick\n\nOutline\n- Point to point connections\n- Representing information\n» Analog vs digital\n» Representing words and pictures\n- Communications media and bandwidth\n- Networks\n- LANs vs WANs\n- Circuit switched vs packet switched\n- Example: The Internet\n\ni\ni\ni\ni\ni\ni\ni\ni\nl\nA simple point-to-point connection\nWorkstat on\nCommun cat ons\nProcessor\nWorkstat on\nCommun cat ons\nProcessor\nCommun cat ons\nChanne\n- processors convert data into signals\n- signals are transported through channels\n- channels utilize one or more connection media\nCD\n\nData: Analog vs. Digital\n- Analog data\n- can take on any value within a continuous range\n- Examples:\n» human voice\n» Boston's temperature\n- Digital data\n- can take on only a finite set of discrete values\n- Examples:\n» data stored in binary computers\n» the US standard sizes of clothes\nCD\n\nRepresenting Numbers\n1 0 1 1\n1x23 + 0x22 + 1x21 + 1x20\n1x8 + 0x4 + 1x2 + 1x1\n...\n...\n4-bit binary\nrepresentation\nNumber\nCD\n\nRepresenting Characters\nCharacter\nASCII*\nrepresentation\nA\n1010 0001\nB\n1010 0010\nC\n1010 0011\n...\n...\n0101 0000\n0101 0001\n...\n* American Standard Code for Information Interchange\n\nFormatted Documents\n-\nIn addition to text, must contain information about how it appears on\npaper\n» bold, italic, underlined text\n» different sizes of type\n» page breaks\n-\n\"Invisible\" formatting characters are embedded in text\n» special \"begin formatting\" character\n» format specification character (i.e. \"bold type\")\n» text string for which formatting applies\n» special \"end formatting\" character\n-\nSame character codes have different meaning when interpreted as\nletters and when as format specifications\n» 65 could mean either 'A' or 'bold' depending on context\nCD\n\n(\n)\nFormatted Documents cont'd\nExample:\n- This is a nicely formatted line.\nCould be stored internally as:\n- <BG PAR> 'T' 'h' 'i' 's' ' ' 'i' 's' ' ' 'a' <BG UNDERLINE> 'n' 'I' 'c' 'e' 'l' 'y' '\n'<EN UNDERLINE> <BG COLOR> 1 'f' 'o' 'r' 'm' 'a' 't' 't' 'e' 'd' <EN\nCOLOR> ' ' 'l' 'i' 'n' 'e' '.' <CR>\nWhere:\n- <BG PAR>, <BG UNDERLINE>, <EN UNDERLINE>, <BG COLOR>, <EN\nCOLOR>, <CR> are special byte sequences that denote the beginning and\nend of various formatting features\n- Different word processors use different byte sequences, that's why\ndocuments require conversion to be used by a different wp\nCD\n\nExample: Web Pages\nCD\n\nCD\n\nBitmapped graphics\n- Numbers, letters, and words are not enough: we want pictures\n- Representing a picture\n- Draw a very fine grid on it\n» grid cells are called pixels or dots\n- See what is in each grid cell\n» bitmap: is cell empty or full?\n» grayscale: how dark is the cell?\n» color: what color is the cell?\n- Represent each cell with a prespecified # of bits (how many?)\n- Store the bits for the cells in a prespecified order\n» e.g., all the cells for the top row, then the next row, etc.\nCD\n\nMovement Towards Digital\nanalog\nBoston\n(MIT)\nBoston\n(MIT)\ndigital\ndigital\nmodem\nmodem\nmodem\nmodem\nAT&T\nPactel\nNYNEX\ndigital\ndigital\ndigital\nBoston\nL.A.\nUCLA\nUCLA\ndigital\nanalog\nSM\n\nDigital Convergence\nseparate\nToday\ndelivery\nmethods\nOver-the-air TV\nRadio (am/fm)\nCable TV\nTelephone\nFAX\nComputer/modem\nWireless telephone\nMeter readings\nResidence\nFuture?\nsingle digital\n\"pipe\" to deliver\nall services\nSM\n\nConnection media - Examples\nMedium\nSpeed\nCost\nTwisted wire\n300 BPS - 10 MBPS\nLow\nMicrowave\n256 KBPS - 100 MBPS\nCoaxial cable\n56 KBPS - 200 MBPS\nOptical fiber\n500 KBPS - 10 GBPS\nHigh\nBPS = bits per second\nFrom Laudon & Laudon, Management Information Systems: Organization and Technology, Prentice Hall, 1998\n\nWhat is bandwidth?\n- Technically:\n- The range of usable frequencies in a communications medium\n- Practically:\n- The amount of information that can be carried by a communications\nmedium per unit of time\n\nMultiplexing: Squeezing many\nchannels into one\nFrequency Division Multiplexing\n(FDM)\n1 2 3 4 1 2 3 4 1 2\nTime Division Multiplexing\n(TDM)\nMultiplexer\nMultiplexer\n\nFull Connectivity doesn't scale!\nWhy build networks?\nEnd User\nB\nA End User\nEnd User\nEnd User D\nll\nivi\nl\nFu Connect\nty doesn't sca e!\nSM\nC\n\nNetworks are about sharing\nNetwork\n- The network allows an entity to switch its attention\namong a large number of others\n- Permits sharing of resources attached to the network,\nincluding the resources of the network itself.\nSM\n\nLocal and Wide Area Networks\n- Local Area Networks (LANs)\n- Short distances\n- Within organizations\n- Typical technology: Ethernet or Token Ring\n- Wide Area Networks (WANs)\n- Long distances\n- Across organizations (typically multiple LANs)\n- Typical technology: Public Switched, Leased Line\nSM\n\nTwo forms of network connection\n-Circuit switching\n- A dedicated end-to-end connection is established for the duration of the\nconnection\n- Used in telephone network\n-Packet switching\n- Messages are divided into small packets\n- Each packet is separately routed to the destination\n- Different packets can take different paths and times\n- Missing or garbled packets are retransmitted, if necessary\n- Packets are reassembled into messages at the destination\n\nPacket switching\nChicago\nmessage\n-\n-\nSan Francisco\nBoston\nnode\nLA\nUCLA\n-\nMIT\n-\nnode\n1/3\nNYC\n1/3\n2/3\nmessage\n-\n-\nDenver\n-\n2/3\n-Dallas\n3/3\n3/3\nDisassembly\n--\nReassembly\nAtlanta\nRouting\nSM\n\nComparison\nCircuit switching\nMinimum delay\nVery inefficient use of\nconnection capacity\nWhen overloaded, unable\nto make connection at all\nBoth ends of connection\nmust use same data rate\nPacket switching\nVariable delay\nMuch more efficient use of\nconnection capacity\nCan almost always connect,\nbut may be long delays\nData-rate conversion is easy\n\nThe Internet\n- What is the Internet?\n- Outgrowth of ARPANET\n- Based on TCP/IP\n- A collection of interconnected networks\n- Provides appearance of widespread connectivity\n- What is it used for?\n- E-mail, file transfer, terminal access, client-server traffic,\ninformation browsing (aka Web), distributed work, electronic\ncommerce, etc.\nSM\n\nHierarchy of networks\nEnd User\nLocal Area Network #1\nLAN #2\n(LAN#1) [MIT]\nHarvard\nEnd User\nLAN #3\nInternet Service Provider #1 (ISP#1)\nMIT\nEnd User\nBackbone Network #2\n[Worldcom, Sprint,\nBackbone Network #1\nGenuity (Level 3), Cable\nMIT\n[ATT]\n& Wireless, ...]\nISP#3\nAOL\nISP#2\ngateway\nLocal Area Network #n\nEnd User\nEnd User\nSM\nUCLA\nFor further info, see: navigators.com/isp.html\n\n(\n)\nInternet Addresses IP addresses\n18.171.0.30\n12.34.23.40\n155.22.11.250\nHost\nHost\nHost\nHost\n9.74.1\n123.05\nCD\n\nUnderstanding Internet Addresses\n- 18.154.0.27\n- uniquely assigned to a specific Internet connection point\n- 32-bit address\n- each number between dots is the decimal representation of 8 bits\nin the address\n- In this case:\n» 18 specifies MIT (MIT owns all addresses 18.xxx.yyy.zzz)\n» 154 specifies the subnet corresponding to building E56\n» 0.27 is host number within the subnet\n- Every internet address can optionally have a descriptive host\nname (e.g.LASAGNA.MIT.EDU)\n\nWho controls the Internet?"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture4.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/896eae8f7451e5652018d17a6c80f44a_lecture4.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 4\nNetworks II\nAcknowledgments:\nSlides marked \"CD\" are adapted from Chris Dellarocas, U. Md.\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas\n\nOutline\n- Network protocols\n- Enterprise networking\n- Example: Looking at a web page\n- Wireless networks\n- Wireless telephony\n- Wireless data communication\n\nWhat does it mean to be on the\nInternet?\n- Run TCP/IP protocol\n- Have an IP address\n- Have ability to send IP packets to other machines on\nthe Internet\nCD\n\nNetwork Protocols\n- Rules of behavior\n- What, when, and how should A send messages to B and vice\nversa?\n- Protocol layers\n- Each layer uses the layers below it and can be used by the layers\nabove it\n- Often, multiple alternatives can be substituted at one layer\nwithout affecting the other layers\n\n/\n(\n)\n(\n)\n(\n)\n(\n)\n(\n)\nExample:\nTCP IP protocol architecture\nApplication layer\nProvides communication between applications on separate machines\ne.g., email, file transfer, web browsing\nTransport layer\nProvides end-to-end reliable data transfer across multiple networks\ne.g., TCP - Transmission Control Protocol\nInternet layer\nRoutes data from source to destination through one or more networks\nIP - Internet Protocol\nNetwork access layer\nManages logical interface between a machine and its local network\ne.g., Ethernet, X.25\nPhysical Layer\nConverts bits to signals and back e.g., wires, radio, etc.\n\nDifferent types of connection protocols\nX.25 -- A packet switching protocol for connecting devices on\na WAN\nFrame relay -- Another packet switching protocol for\nconnecting devices on a WAN (faster but less error\nchecking than X.25. Up to about 45 Mbps)\nAsynchronous Transfer Mode (ATM) -- A \"cell switching\"\nprotocol that establishes \"virtual circuits\" from fixed size\npackets (faster than X.25, e.g., suitable for real-time video.\nUp to about 622 Mbps)\n\nDifferent types of connection\n\"boxes\"\nHub - Connects parts of a network, typically different parts of the same\nLAN (network access level)\nBridge -- Connects two LANs using software (network access level)\nSwitch -- Connects different LANs, typically using hardware only\n(network access level )\nRouter -- Connects two networks that may or may not be similar and\nroutes packets appropriately (Internet level)\nGateway -- Connects networks that use different protocols (transport level\nor above)\n\nExample: The World Wide Web\n- A collection of interlinked documents stored on computer servers\nall over the world and accessible to user clients via the Internet.\n- Documents communicated in HTML (HyperText Markup Language)\n- Rules for requesting and providing documents (and other interactions\nbetween clients and servers) are defined by HTTP (HyperText Transfer\nProtocol)\n- Documents may contain easily \"clickable\" links to other\ndocuments.\n- Documents are identified by \"web addresses\" called URLs (Uniform\nResource Locators)\n- \"Hypertext\" means text documents that contain embedded links\nto other documents.\n\nLooking at a Web page\n- Connect your PC to the Internet\n- Dialup an Internet service provider (via modem)\n- Establish a point-to-point link with the provider's machine\n» Using PPP (Point to Point Protocol)\n» Your PC receives a \"temporary\" IP address\n- Using DHCP (Dynamic Host Configuration Protocol)\n» Your PC receives the address of a Domain Name Server (DNS)\n- Start your browser program (e.g. Internet Explorer)\n- Type in a URL (Uniform Resource Locator)\n\n(\n)\nLooking at a Web page cont.\n- Browser asks DNS for the IP address of the MIT Server\n- DNS replies with 18.170.0.167\n- Browser opens TCP connection to 18.170.0.167\n- Browser sends the command GET/class/syllabus.htm\n- The MIT Server sends file syllabus.htm\n- TCP connection is released\n- Browser displays the contents of syllabus.htm\nAdapted from Erik Brynjolfsson, MIT.\n\nHow a cell phone works\nCD\n\n-\n-\nCellular Phone Networks\nFrequency\nreuse\nHandoff\nCD\n\n-\n-\nCellular Phone Networks\nFrequency\nreuse\nHandoff\nCD\n\n-\n-\nCellular Phone Networks\nFrequency\nreuse\nHandoff\nCD\n\ns\n(\n)\n(\n)\n(\n)\nMultiplexing: Squeezing many\nchannels into one\n1 2 3 4 1 2 3 4 1 2\n1 4 3 1 2 2 3 4 2 1 2\n2 3 1 2 3 4 4 1 3 2 4\n4 1 2 3 4 3 1 2 1 3 3\n3 2 4 4 1 1 2 3 4 4 1\nFrequency Division Multiple Acces\nFDMA\nTime Division Multiple Access\nTDMA\nCode Division Multiple Access\nCDMA\nMultiplexer\nMultiplexer\n\nGenerations of cellular technology\n- First Generation (\"1G\", 1980's and 90's)\n- Analog, primarily used for voice, low bandwidth (eg., 9.6Kbps)\n- Ex: AMPS (USA)\n- Second Generation (\"2G\", 1990's and early 2000's)\n- Digital, cheaper, somewhat higher bandwidth (e.g., 14.4 Kbps),\nmore data services (e.g., short messages, caller ID)\n- Ex: GSM, TDMA, CDMA, PCS\n- Third Generation (\"3G\", started 2002)\n- Digital, much higher bandwidth (e.g., 2Mbps), many more\nservices (e.g., video)\n- Ex: WCDMA, CDMA2000\n\nDifferent cellular standards\nStandard\nAppx.\nFreq.\n(MHz)\nMode\nMulti\nplexing\nmethod\nVoice\nchannels\n/ radio\nchannel\nComments\nAnalog (AMPS)\n800 - 900\nAnalog\nFDMA\nCommon in US, but becoming obsolete\nGSM\n900,\nDigital\nTDMA\nCommon in Europe & Asia, growing in\n1800-2100\nUS.\nCDMA\nDigital\nCDMA\n20-60\nQualcomm holds key patents\n(IS-95)\nTDMA (IS-54 &\n800,\nDigital\nTDMA\n3-6\nMost common \"digital\" cellular in US\nIS-136)\n1800-2000\nPCS\n1800-2100 Digital\n-\n-\nGeneric term for 1800-2100 MHz svcs\nWCDMA\nMany\nDigital\nCDMA\nMany\nMigration path from GSM. Up to 2\nMbps.\nCDMA2000\nAny\nDigital\nCDMA\nMany\nMigration path from CDMA. Common\nin S. Korea. Up to 2 Mbps\nNote: Acronyms defined on next slide\n\nCellular acronyms\n- AMPS - Advanced Mobile Phone System\n- CDMA - Code Division Multiple Access\n- FDMA - Frequency Division Multiple Access\n- GSM - Global System for Mobile Communication\n- IS - Interim Standard\n- PCS - Personal Communications Services\n- TDMA - Time Division Multiple Access\n- WCDMA - Wideband CDMA\n\nWhat is Wireless IP?\n- A wireless connectivity solution employing IP that enables\ndevices to access an Intranet or the Internet\n-PDAs\n-Laptops\n/\nWireless\nDevices\nWired\nDevices\nInternet\nIntranet\n-Cell Phones\n-Workstations\n-Pagers\n-Future Devices?\nCD\nWireless\nDevices\nExisting Wireless\nInfrastructure\nSpare radio capacity\n\n(\n)\nWi-Fi\nWireless Fidelity\n- Protocol for wireless LANs\n- 802.11b format - 11 Mbps\n- 802.11g format - 20+ Mbps\n- Allows you to\n- Connect to Internet in local \"hot spots\"\n- Connect many PC's to the Internet through one access point\n\nBluetooth\n- Wireless device connectivity\n- Named after Scandinavian king who united several unruly\nkingdoms\n- Short range (< 10m)\n- Sample uses\n- Wireless PDAs always connected to desktop via mobile phone\n- Wireless headphones connected to notebook\n- Office/Home device networks that automatically reconfigure by presence\n- ...\n\nHow will networks change business?"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture5.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/bfa1e272a0a74fc4ff156a55e780125e_lecture5.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 5\nProgramming Languages\nAcknowledgments:\nCopyright (c) 2005 Thomas Malone, Stuart Madnick\nSlides marked \"SM\" are adapted from Stuart Madnick, MIT.\n\nOutline\n- Types of software\n- Types of programming languages\n- Examples\n- Java\n- Y2K\n\nTypes of software\n- System software\n- Operating systems\n- Programming languages\n- Database systems\n- Application software\n- General office tasks (word processing, etc.)\n- Accounting\n- Design\n- Factory automation\n- ...\n\nProgramming languages\n- Machine language\n- Assembly language\n- High-level languages\n- Fourth-generation languages\n\nA sample LMC program\n1 ASSEMBLY LANG\nINSTRUCTIONS\nop-\ncode\n1xx\n2xx\n3xx\n5xx\nsymbolic\nstop\nadd\nsubtract\nstore\nload\nget\nput\n(Source Program)\nSTEP\nINSTRUCTION\nget\nstore w\nget\nstore b\nload w\nadd b\nput\nstop\n2 MACHINE LANG.\n(Object Program)\nLOC\nINSTRUCTION\nSource: S. Madnick, MIT\n\nMachine language\n- Binary\n- Machine dependent\n- Stored in the computer when the program is running\n- Example:\n01110110001010010010 ....\n\nAssembly language\n- Mnemonic\n- Symbolic addressing\n- One-to-one correspondence with machine language\n- Example:\nGet X\nAdd Y\nStore Z\n\nAutomatically translating assembly\nlanguage to machine language\nX\nY\nAssembler\nGet\nAdd\nStore Z\n...\n...\nAssembly\nMachine\nlanguage\nlanguage\nprogram\nprogram\n(\"source code\")\n(\"object code\")\n\nHigh-level languages\n- Closer to how people think about their problems\n- No one-to-one correspondence to machine language\n- General purpose\n- Example:\nZ = X + Y\n\nHigh-level languages - Examples\n- Fortran\n- Basic\n- Visual Basic\n- C\n- C++\n- Java\n\n! L Q F L O Q F X L G O F X H O X R V W L R O X R O U D P V H\nK G\nQ F X O X R Q G O V L I\nO Y\nQ O J Q F H O X R O L O V J O Q F X L G O D V W O F X E\nQ F X O X R V W L R O X R O U D P V H O X D O ? ? ? O X V O Q F H Q K X O X R O F H O V J O H X E\nQ F X\nG W I\nZ\nK V W F X O Z\nQ F X O G O F X O O F W I\nP E\nQ F W X O F W I\nP\nH V O Y\nR Q O F W I\nP O ` O ? ? ?\nG W I\nZ G W I\n! F W I\nP\nK V W F X Z K V W F X ! 6\nQ F X O G O F X O X R O F ' X O F W I\nP E\nQ F W X O F W I\nP\nV V\nL Z G W I\n+ K V W F X\nQ F X O X R O L O V J O X R O F W I\nP O Q G E2O L\nF H\nExample 1 - Basic\n\n+ + O L Q F L O Q F X L G O F X H O X R V W L R O X R O U D P V H\n( 5 *$ 9 / , - O ` 5 0 : ) 8 - . <\n,\n<\n. 5 *O 1 O 6\n3O\n8 9 0 . ) O . 9 - 8 . ; - 2\n5 *) */ <\n; - 8 < O $ 0 / *) - 8 O Z O 2O O 5 *) : / <\nO Z O 2\n$ 0 / ) ` ` O X R Q G O V L I\nO Y\nQ O J Q F H O X R O L O V J O Q F X L G O D V W O F X O =*E2\n$ 0 / ) ` ` O X R V W L R O X R O U D P V H O X D O ? ? ? O X V O Q F H Q K X O F H O V J O H X O =*E2\n$ 0 / ) ` ` O G O F X O O F W I\nP E2\n$ 5 *\nO */ <\n; - 8 2\n> , 5 9 - O 1 */ <\n; - 8 O % Z ? ? ? 6\n: / <\nO Z : / <\nO ! O */ <\n; - 8 2\n$ 0 / *) - 8 ! ! 2\n$ 0 / ) ` ` O =* G\nF X O X R O F ' X O F W I\nP E2\n$ 5 *\n*/ <\n; - 8 2\n&\n. 9 - 8 . ; - O Z O : / <\nO + O $ 0 / *) - 8 2\n$ 0 / ) ` ` O =*X R\nL O V J O X R O F W I\nP G O Q G O ` ` O . 9 - 8 . ; - 2\n&\nExample 2 - C++\n\nExample 3 - Java\nimport java.io.*;\nimport java.lang.*;\n/**\n** Prompts user for list of numbers and outputs average\n**/\nclass AverageNumbers {\npublic static void main (String[] args) {\nfloat sum = 0;\nfloat average = 0;\nint counter = 0;\nSystem.out.println(\"THIS PROGRAM WILL FIND THE\nAVERAGE OF THE INTEGERS YOU ENTER\nTHROUGH THE KEYBOARD. TYPE 999 TO\nINDICATE END OF DATA.\");\ntry\n{\nBufferedReader in = new BufferedReader(new\nInputStreamReader(System.in));\nString cin = \"0\";\nSystem.out.println(\"Please enter a number.\");\nwhile (!(cin=in.readLine()).equals(\"999\"))\n{\nsum = sum + Integer.parseInt(cin);\ncounter = counter + 1;\nSystem.out.println(\"Please enter another\nnumber.\");\n}\nin.close();\naverage = sum/counter;\nSystem.out.println(\"The average of the numbers is :\n\"+average);\n}\ncatch (IOException e)\n{\nSystem.out.println(\"Ooops..\");\n}\n}\n}\n\nAutomatically translating high-level\nlanguage to machine language\nCompiler\nZ = X + Y\n...\n...\nHigh-level\nMachine\nlanguage\nlanguage\nprogram\nprogram\n(\"source code\")\n(\"object code\")\n\n\"Interpreting\" high level languages\nInterpreter\nZ = X + Y\n...\nHigh-level\nlanguage\nprogram\n(\"source code\")\n\nInterpreting high level languages\n- Advantages\n- Can give machine independence\n» (e.g., one machine can \"look\" like another)\n- Can be easier to debug and modify\n- Can give more flexibility at \"run time\"\n- Disadvantages\n- Slower\n\n\"Fourth-generation\" languages\n- Even closer to how people think about their problems\n- Special purpose\n- Examples:\n- Scripting languages\n» FIND ALL RECORDS WHERE NAME IS \"SMITH\"\n- Spreadsheet formulas?\n\nj\nOb ect-oriented programming\n- A special kind of high-level language\n- Can increase programming efficiency and software\nre-use\n- Combines procedures and data into \"objects\"\n- Arranges objects in \"class hierarchies\"\n- \"Inherits\" properties of objects in this hierarchy\n\nj\nClass inheritance in\nob ect-oriented programming\nBank account\nOwner\nBalance\n----\nOpen\nDeposit\nWithdrawal\nCredit card account\nOwner\nBalance\nCredit limit\n----\nOpen\nDeposit\nWithdrawal\nAuthorize charge\nChecking account\nOwner\nBalance\nMinimum balance: $100\n----\nOpen\nDeposit\nWithdrawal\nJoe's checking account\nOwner: Joe\nBalance: $400\nMinimum balance: $100\n----\nOpen\nDeposit\nWithdrawal\n\nWhat's good about Java?\n- Highly interactive\n- Traditional Web - application software runs on server\n- Java applets dynamically downloaded and run on client\n(e.g., input data validation)\n- \"Nice\" programming language\n- Simpler than C/C++\n- Object-oriented\n- Secure programming environment\n- \"Sandbox\" approach\n- Portable (\"write once, run anywhere\")\n- Based on Java byte-code interpreter\nSM\n\nS\nJ\nD\n/\nWi\n-\n(S)\n-\n(D)\n-\n(J)\n}\nJava Operation\nInternet\nServers\nSun UNIX\nndows 2000\nStatic pages\nDynamic pages\nJava applets\nHTML\npage\nJava\napplet\nHTML\npage\nJava\napplet\nsame\nMac OS\nWindows XP\n(\n)\n(\n)\nNetscape Win 2000\nWindows 2000 OS\nPC Hardware\nHTML\nInterpreter\nJava\ninterpreter\nHTML\nInterpreter\nJava\ninterpreter\nNetscape Mac OS\nMac OS\nPowerMac Hardware\ndifferent\n}\nSM\nClient environments\n\nJava reality check\n- Highly interactive\nor too slow (interpretive)\n- \"Nice\" programming language\nor too limited\n- Secure environment\nor (1) not secure enough or\n(2) too secure (restrictive)\n- Portable\nonly if consistent Java interpreter availabl\n(Java \"dialects\")\nSM\n\nWhat will happen with Java?\n\nY2K problem\n- Why was this a hard problem?\n- Was money wasted?"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture6.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/f1bd994761eef5e2592bea0832e8a9cf_lecture6.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 6\nRelational Databases\nAcknowledgments:\nAdapted from Chris Dellarocas, U. Md..\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas\n\nOutline\n- What is a database?\n- What is a database management system?\n- An Introduction to Microsoft Access\n- How to create a database\n- How to retrieve data from a database\n- How to build a nice Graphical User Interface on top of a database\n\nWhy are we learning this?\n- Databases are perhaps the single most important class\nof corporate applications\n- Databases are surprisingly powerful data modeling\nand analysis tools in situations where spreadsheets\nfall short\n- Students who plan to work in management consulting will soon\nfind this out\n- MS Access is a great example of how easy it is to\nbuild powerful applications without the need of a\nbackground in technology\n\nWhat is a database\n- Boring answer\n- A structured collection of data\n- Example: A telephone directory\n- Insightful answer\n- A data-centered mirror of an organization's business processes\n- Structure of data reflects organizational processes\n- Content of data reflects organization's history\n\nExample: Northwind Traders\n\nRepresenting the Real World as Data\nWhat Data Are Businesses Interested In?\n- Entity\n- a person, place, thing, or event on which we maintain information\n- Examples: Employees, Customers, Products, Warehouses\n- Attribute\n- characteristic or quality of particular entity\n- Examples: Employee's SSN, Customer's Address, Product's Unit\nPrice\n- Relationships Among Entities\n- Examples:\n» Customer - Orders - Product(s)\n» Order - Serviced by - Employee\n\nFrom Spreadsheets to Databases\n- Spreadsheets are great for keeping track of data for\none type of entities\n- Participants of a conference\n- Students of a class\n- Customers of a company\n- ....\n\nWhat is the basic spreadsheet \"data\nmodel\"?\n- Each row stores data about one entity\n- Each column stores data about an attribute\n- Each cell stores data about an attribute of an entity\n\nSpreadsheet limitations\n- Things get complicated when we want to keep track\nof several inter-related entities\n- For example:\n- Customers\n- Products\n- Orders\n- Let's try it!\n\nSpreadsheets are awkward for storing\nrelationships\n- Main difficulty is that an \"Order\" is essentially a\nrelationship between one Customer and one or more\nProducts\n\nStorage of information is not even half the\nstory\n- The reason we build databases is in order to easily\nretrieve information to answer questions that support\nmanagerial decision-making\n- For example:\nWho are our top 10 customers based on their total\norder value in the year 2002?\n- Can you do this using a spreadsheet?\n\nEnter Relational Databases\n- A relational DB supports storage of data as a set of\ninter-related tables\n- Each table stores data about a set of Entities\n- Each table row is a record about one such Entity\n- Each record column is a field specifying an attribute of this Entity\n- Each record has a field that acts as a unique identifier of an entity\n- Relationships among entities are specified by referring to this\nunique identifier from other tables\n\nCustomer Unique Id\nProduct Unique Id\nReference to a Customer\nOrder Unique Id\n\n(\n)\nRelational Database Management\nSystems DBMS\n- Allows the creation of relational databases\n- Supports specialized languages for easy retrieval of\ndata from a set of inter-related tables\n- Supports easy construction of a Graphical User\nInterface on top of the database\n- Allows very large table sizes\n- Provides security, fault tolerance, multi-user support,\netc.\n\nSQL - Structured Query Language\n- Every statement yields a table of values as output\n- Sometimes there's only one row in the table!\nselect\ncolumns and/or expressions\nfrom\ntables\nwhere\nconditions on the rows\ngroup by\ngroup rows together\norder by\norder the rows\n\nDisplay an Entire Table\nSELECT *\nFROM Employees;\n\nChoose Columns\n- Choosing a subset of columns is sometimes called a \"project\"\noperation\n- Display first and last name of all employees\nSELECT FirstName, LastName\nFROM Employees;\n- Display company name and contact name for all customers\n\nChoose Rows\n- Find US Employees\nSELECT FirstName, LastName\nFROM Employees\nWHERE Country = \"USA\";\n- Find employees hired after Jan. 1, 1993\n\nCompute Columns\n- Find total inventory value of each product\nSELECT ProductName,\nUnitPrice*UnitsInStock AS TotalValue\nFROM Products;\n- Nice names for output columns\n- Name following computed column (e.g., TotalValue) will be used to name output\ncolumn\n- Find total price for each line item in \"Order Details\" table\n\nSorting\n- Can sort output by contents of a column\n- sort in ascending or descending order\n- sort by more than one column (second one breaks ties)\n- Sort products by total inventory value\nSELECT ProductName,\nUnitPrice*UnitsInStock AS TotalValue\nFROM Products\nORDER BY TotalValue DESC;\n- What are our 10 most expensive products?\n\nAggregates\n- Can make calculations on entire columns\n- sum, avg, max, min, count\n- What is the total value of a given customer order\nSELECT OrderID, Sum([UnitPrice]*[Quantity]*(1-[Discount]))\nAS Subtotal\nFROM [Order Details]\nWHERE OrderID=11001;\n- returns a table with just one row!\n- What is average unit price of our products?\n\nGrouping and Aggregates\n- Each different value for the GROUP BY fields defines a new\ngroup\n- One row of output is produced for each group\n- Several rows of input table may belong to same group. They are aggregated using\naggregation operator.\n- Compute total value of all orders\nSELECT OrderID,\nSum([UnitPrice]*[Quantity]*(1-[Discount]))\nAS Subtotal\nFROM [Order Details]\nGROUP BY OrderID;\n- Create a table that shows how many line items are in each order\n\nJoins\n- Combine rows from one table with rows from another\n- Usually join on some common column\n- Don't combine rows unless their value in the common column is the same\n- WHERE clause says the common column must be same in each table\n- Produce a list of all products and their categories\nSELECT Products.ProductName,\nCategories.CategoryName\nFROM Categories, Products\nWHERE\nCategories.CategoryID = Products.CategoryID;\n\nMore Join examples\n- Produce a list of all products and their suppliers\n- Produce a list of all suppliers for Tofu\n\nSQL Summary\nselect\ncolumns and/or expressions\nfrom\ntables\nwhere\nconditions on the rows\ngroup by\ngroup rows together\norder by\norder the rows"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture7.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/e47120c7f8f22a603047f8d018904dbe_lecture7.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nSloan School of Management\n15.561 IT Essentials\nSpring 2005\nAn Introduction to Microsoft Access\n*\nLecture Script\n1. Introduction\nOpen Database: Northwind.mdb\nSelect \"File\" then \"Open Database\"\nNote file extension .mdb\nDiscuss Access UI\nAn Access database consists of one or more tables\nQueries can be defined to retrieve information from the tables\nForms can be specified to provide a nicer, graphical user interface\nfor entering and viewing data stored in tables or generated by\nqueries\nReports can be defined in order to nicely format and print the\ncontents of tables and the output of queries\nMacros and modules containing Visual Basic code can be written\nto provide additional functionality to a database application.\nView Relationships\nSelect \"Tools\" then \"Relationships...\"\nThe Northwind Traders database keeps track of the day-to-day\noperations of a small food distribution company. The company\nstocks products provided by suppliers. Products are grouped into\ncategories. Its employees service customers who place orders.\nEvery order has an order header and one or more order detail\nrecords. Each order detail record contains information about one\nitem ordered. Orders are shipped to customers using one out of a\nset of shippers that the company works with.\n* Adapted from Chris Dellarocas, Univ. of Md.\n\nThe lines in the relationships view represent relationships among tables.\nTypically, they join together a field in one table, which refers to a field in another\ntable. Lines are created manually by clicking the first field and the dragging to the\nsecond field.\n2. Tables\nOpen Table (For example: Employees)\nDouble-clicking a table shows content in table view\nSimilar to Excel or other spreadsheet\nAdd rows at end\nAdd \"employee\" data about Prof. Malone, the TAs, etc. (notice\nthat some field can be specified as \"required fields\" and the\nsystem does not complete record entry unless they have been\nfilled in; example: First Name, Last Name)\nRows = data records, database content\nColumns = fields, part of database design\n\nSwitch to design view\nSelect \"View\" then \"Design View\"\nEvery field has a Name, a Data Type and a Description\nThe lower right part of the screen provides context-\nsensitive help on the element that the cursor is on. More\nhelp can be obtained by pressing F1.\nThere are several different data types that a field can\nhave\nText, Number, Date/Time, Currency, Autonumber...\nProperties of data types\nFormatting (e.g. birth date field)\nValidation rules (e.g. birth date field)\nIndexing:\nUsers can optionally instruct Access to create an index on any field of any table\nPros: faster to find and retrieve data\nCons: slower to enter and save data\nPrimary key:\nEvery table must have a field whose value uniquely identifies\neach record in the table (e.g. the SSN for people, the ISBN for\nbooks, etc.)\nThat field is called the primary key and is marked in the fields\nlist with a key icon\nCreate New Table (Example: A students table)\nUse wizard and select a table template that comes close (e.g.\nEmployees table)\nSelectively add fields from the table template\nId, first, last, e-mail\nShow in table view to add sample record\ne.g. Ben Lee, yoongl@mit.edu\nShow in design view to create from scratch\n(Note: You can also import and export tables to and from Excel.)\n\n3. Queries\nAccess uses SQL as its query language. In addition it supports a\ngraphical front-end that allows easier specification of queries and\nautomatically translates them into SQL\nSimple Queries\nCreate query to list employee names (click \"Queries\" tab in the\nmain Access window, click the \"New\" button, select \"Design view\" -\nthere is also an option to use a wizard for semi-automatically\ngenerating some simple queries)\nExplain sections of design view screen\nUpper half of screen lists all the database tables that participate\nin the query (all the tables you would list in the FROM clause of\nSQL)\nLower half of screen lists all the fields of the above tables that\nare either being displayed or participate in some way in the\nselection, grouping or aggregation of the final query output\nExample: Employees table, first and last fields\nRun\nTo run a query, select \"View\" then \"Datasheet View\"\nSave as query\nIf you attempt to close the query design window then the system\nasks for a name to save the query under\nQuery is saved under the \"Queries\" tab\nQuery views\nDouble-clicking a query runs it and opens it in \"Datasheet View\"\nSelect \"View\", \"Design View\"\nSelect \"View\", \"SQL View\"\nModify query to sort by last name\nClick on the \"Sort\" row of the Design View\nModify query to find USA employees\nDrag and Drop \"Country\" field into lower half of screen\nClick on \"Criteria\" row of \"Country\" field and enter\n\"USA\"\nDeselect the \"Show\" check mark\nRemove criteria\nModify query to find employees hired after 1/1/93\nDrap and Drop \"HireDate\" field into lower half of screen\nClick on \"Criteria\" row of \"HireDate\" field and enter >\n1/1/93\n\nModify query to AND the USA criteria\nAs before, insert the USA criterion\nBy default criteria on different fields are \"ANDed\"\ntogether\nModify query to OR the USA criteria\nMove the USA criterion to the row marked \"or\"\nShow SQL for AND vs. OR\n\nJoins\nCreate query to find all customers who placed an order in a given\ntime frame (e.g. 1/1/95 - 12/31/95)\nGoto to Queries tab/Click New/Select Design View/Add\nCustomers table and Orders table\nAccess does automatic join based on the relationships\nthat have been encoded by the designer (shown as\nconnecting lines on the screen)\nSelect customer, order date, enter \"between 1/1/95 and\n12/31/95\" in \"criteria\" row for order date\nIf a field contains more text than is visible, open a Zoom\nwindow (Shift F2) to read it\nRun, show SQL\nSave query to use in Totals section\nCreate new query to find customers who placed at least one order\nfor a given product\nUse Customers, Orders, Order Details, and Products\ntables. Set product name = \"Tofu\" as a selection\ncriterion\nLook at complex SQL query generated by a query that looks simple\nin the Design view.\nOPTIONAL: Ask students to find all employees who handled an\norder for a specific customer (e.g. \"North/South\")\nTotals (name for queries using aggregate functions)\nSelect \"View\" then \"Totals\". This inserts a row in the lower half of\nthe screen which allows us to define one aggregate function per\nfield selected\nConstruct a query which calculates average unit price over all\nproducts\nselect unit price from products table, select \"Totals\",\nselect \"Avg\" in the Total row\nGenerate unique list of customers who placed an order in a given\ntime frame\n(group by customers, where on order date, and select\ncount as aggregate function on order ID)\nNumber of products supplied by each supplier\n(join products and suppliers, group by suppliers, count\nproducts)\n\nNested queries (queries that use other queries)\nGenerate a list of employees in order of the total of value of all\norders for which they are responsible.\nUse Employees and Orders tables and the query Order\nSubtotals that already exists in the database. (To add\nthe pre-existing query, select it under the \"Queries\" tab\nin the \"Show Table\" dialog box.) Group by Employees'\nLastName and FirstName. Use aggregate function\n\"Sum\" on the field \"Subtotal\" in \"Order Subtotals\" and\nSort (descending) on this field."
    },
    {
      "category": "Lecture Notes",
      "title": "lecture8.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/81dcc1d5a6d38d4f192144a875596e8f_lecture8.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 8\nWeb Technologies\nAcknowledgments:\nAdapted from Chris Dellarocas, U. Md..\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas\n\nWorld-Wide-Web\nor The Triumph of Anarchy\n- Perhaps the most important human technological artifact that\nevolved more or less ad-hoc\n- Limited original vision of the WWW has very little to do with\ntoday's impressive reality\n- Web Users have consistently innovated in figuring out new\nways of leveraging this powerful medium\n- Web architects then try to catch up by extending (read\n\"patching\") the Web infrastructure to support these new uses\n\nHow it all started...\nThe Web as a Static Document Repository\n- Tim Berners-Lee's original vision for the WWW (circa 1989)\n- An easy way to access cross-linked static documents stored\nin a variety of servers around the world\n- Initial specification defined:\n- A language for formatting such documents (HTML)\n- A simple protocol for communicating between browsers and servers (HTTP)\n\nThe turning point\n1993 - Marc Andreesen (student at UIUC) writes Mosaic -\nfirst graphical WWW browser\n(precursor of Netscape)\n\n(\n)\nHow the original Web works\n.\ned/sl\n.\nOpen Location: http://webmit. u oan/www/indexhtml\nI\nx\n,\n,N\n)\nv\nD\nv\nI\nWebclient\nnternet Eplorer\nirefox etscape,etc.\nWebserer\nomain Name Serer\nnternet\n(\nF\n\nAnatomy of a URL\nor\nr\nURL =Unif m Resouce Locator\n.\ned/sl\n.\nhttp://webmit. u oan/www/indexhtml\nName ofprotocol\nforcommunication\nv\nfe\nwith serer\nDomain name ofweb\nPathname ofil\n(\nar\nv\ne page is\nwithin webserer\nhttp is stand dweb\nsererwher\nv 's\notocol\ned\nl\nfe sy\npr\n)\nstor\nocalil\nstem\n\nHow the Web works\n.\ned/sl\n.\nOpen Location: http://webmit. u oan/www/indexhtml\nLookingup host:\nweb.mit.edu...\nWebserver\nDomain Name Server\nWhat is the\nIPaddress of\nweb.mit.edu?\n18.30.0.22\nInternet\nWebclient\nInternet Explorer,\nirefox,Netscape,etc.)\n(\nF\n\nHow the Web works\n.\ned/sl\n.\nOpen Location: http://webmit. u oan/www/indexhtml\nContactinghost:\nweb.mit.edu...\nWebserver\nDomain Name Server\nInternet\nWebclient\nInternet Explorer,\nirefox,Netscape,etc.)\nPlease sendme file\n/sloan/www/index.html\nHere it is\n(\nF\n\nContactinghost:\nweb.mit.edu...\nHow the Web works\n.\ned/sl\n.\nOpen Location: http://webmit. u oan/www/indexhtml\nv\nD\nv\nI\n(I\nx\n,\nF\n,N\n)\nWebserer\nomain Name Serer\nnternet\nWebclient\nnternet Eplorer\nirefox etscape,etc.\n\n/\nWWW is a Client Server System\n- Web Clients\n- Use HTTP protocol to connect to servers\n- Request and display Web pages stored in servers\n- Typical clients: Web browsers\n- Web Servers\n- Listen for incoming connections from clients\n- Use HTTP protocol to converse with clients\n- Store and transmit Web pages to clients\n\nSummary: WWW The Original Concept\n(1989-1995)\n- Human Readers ·\n\n‚\n\nInterconnected Static Documents\n- Main advantage:\n- Universality\n- Main disadvantage\n- Lack of interactivity\n- Yet another mass broadcast medium\n- Main business use\n- Awareness building\n\nEvolution of the WWW\nBusiness Drivers\n- Enable transactions\n- Allow interactivity between browser and server\n- Facilitate personalization\n- Support multiple browsing devices\n- Better organize and retrieve Web content\n- Support Business-to-Business applications\n\nThe Web as a transaction facilitator\n- Business Motivation: Low-cost front-end for allowing\ncustomers to connect to corporate computers\n- Customer registration/Address changes\n- Order tracking/Customer support\n- Online Transactions: eCommerce\n- Problems of original Web concept\n- Static web pages\n- No interactivity\n- Stateless protocol: no support for multi-step transactions\n- Insecure communications\n\nWeb Forms\n- Pages which contain fields to be filled by user\n- Usually contain a \"Submit\" button\n- When user presses \"Submit\", server responds by\nsending a page containing information specific to the\nuser-supplied parameters\n- Examples:\n- Web search tools\n- Order forms in commercial web sites\n\nWeb Forms Under the Hood\n- Server sends original html page containing input fields\n- User types info into fields and presses submit button\n- Client establishes connection with handler script at server\nside (script filename contained in web page)\n- Client collects user input into a long string and sends it\nalong with an HTTP command back to server\n- POST customer=John+Doe&cardno=1234567890&expires=6/98&\nproduct=123&quantity=5\n- Handler script at server reads parameter string and\nprocesses it, usually producing a new page as a result\n\nCGI\n- Common Gateway Interface\n- Set of standards for writing handler scripts\n- How it works\n- All URLs that refer to a special directory (e.g. /cgi) cause the\nexecution of a corresponding script at the server (for example\nhttp://web.mit.edu/cgi/test)\n- Scripts typically translate parameters into SQL statements for a\ndatabase and translate the query results into an HTML page\n\nServer\nsoftware\nExample: FedEx\nCustom\nscript\nTranslate airbill number into query\nas expected by legacy system\nPackage results returned by legacy\nsystem into a Web page\nWebbrowser\nInternet\nWebserver\nDatabase\nLegacy\nsystem\n\n(\n)\nMicrosoft Active Server Pages ASP\n- Competing technology to CGI\n- Scripting Language is similar to Visual Basic\n- MS Access can automatically convert database tables,\nqueries and forms into ASP pages\n- Requires Microsoft web server\n\nEvolution of the WWW\nBusiness Drivers\n- Enable transactions\n- Allow interactivity between browser and server\n- Facilitate personalization\n- Support multiple browsing devices\n- Better organize and retrieve Web content\n- Support Business-to-Business applications\n\nThe Interactive Web\n- Business Motivation:\n- Allow complex interaction between user browser and corporate\nserver\n- Web becomes an extension of the user's PC\n- Browser becomes a window to a variety of corporate applications\n- Problems with Web Forms/CGI/ASP\n- All processing done at server side\n- Rapid user interaction with Web page not possible\n- Need local processing to create highly interactive Web pages\n\nEnter Java Applets\n- Programming language to enable interactive Web\npages\n- Developed by Sun Microsystems\n- originally for programming intelligent microwave ovens!!!\n- Java programs are called applets\n- Applets are platform-independent\n- They can run equally well on Windows, Macs, Unix, etc.\n- Require special browsers that can support Java though\n\nS\nJ\nD\n/\nWi\n-\n(S)\n-\n(D)\n-\n(J)\n}\nJava Operation\nInternet\nServers\nSun UNIX\nndows XP\nStatic pages\nDynamic pages\nJava applets\nHTML\npage\nJava\napplet\nHTML\npage\nJava\napplet\nsame\nMac OS\nMac OS\n(\n)\n(\n)\nNetscape Win XP\nWindows XP\nPC Hardware\nHMTL\nInterpreter\nJava\ninterpreter\nHMTL\nInterpreter\nJava\ninterpreter\nNetscape Mac OS\nMac OS\nPowerMac Hardware\ndifferent\n}\nAdapted from Stuart Madnick, MIT\nClient environments\n\nEvolution of the WWW\nBusiness Drivers\n- Enable transactions\n- Allow interactivity between browser and server\n- Facilitate personalization\n- Support multiple browsing devices\n- Better organize and retrieve Web content\n- Support Business-to-Business applications\n\nPersonalized Interaction\n- Business motivation:\n- Low cost medium for gathering information from customers to\nallow\n» Personalized service\n» Targeted advertising\n- Problems with current model\n- Does not allow easy identification of distinct customers\n\nCookies\n- A method for identifying web users and delivering\ncustomized web sites\n- First time user connects to a web site, s/he is asked to fill in personal\ninformation form\n- Server packages information into a \"cookie\" file and sends cookie\nto browser\n- Browser stores cookie in local file system\n- Each subsequent time browser visits site, it sends cookie back to\nserver\n- Server uses information stored in cookie to identify user and\npossibly customize the supplied web pages\n- Privacy implications?\n\n<HTML>\n\n<BODY>\n\n<P>Jane Doe</P>\n<P><font COLOR=\"#FF0000\">\n\nis just right for you</P>\n<P><font COLOR=\"#FF0000\">\n\nis just right for you</P>\n\n</BODY>\n<?HTML>\nJane Doe\nis just right for you.\nis just right for you.\nProduct\nMKT\n18-24\n25-40\n25-40\n18-24\n41-60\n41-60\nTYPE: text/html\noutput<Name>;\nwhile (get.next.product())\n{\noutput \"<PRODUCT>\nis just right for you\";\n}\nODBC\nUSER=0xx32\nBROWSER/CLIENT\nCLIENT\nNETWORK\n1ab16\n1ab16\n1ab16\n2bc61\n2bc61\n2bc61\nAge = 24\nName1 = Matt\nName1 = Sam\nName1 = Jane\nName2 = Lane\nName2 = Doe\nName2 = Paul\n0xx32\n0xx32\n0xx32\n0xx32\nAge = 35\nAge = 55\nCOOKIE\nCookie applications\nWidget1</font>\nWidget2</font>\nWidget1\nWidget2\nWidget0\nWidget1\nWidget2\nWidget3\nWidget4\nWidget5\nGET: server.com/dynamic.app?\nSERVER\nSERVER\nThe user's browser passes the contents of the cookie to the Web server. The server uses this cookie to look up information\nabout the user (this information may have been gained from a previous registration process). The information (specifically,\nthe user's age) is used to query a database via ODBC to determine which products should be recommended to this user. The\nresulting list of products is inserted into a dynamically created HTML page and sent to the user's browser for display.\nFigure by MIT OCW.\n\nSummary: WWW The Current Concept\n(1995-today)\n- Human Users ·\n‚\nDocuments and Applications\n- Main business use\n- B2C Transactions\n- Customer Support\n\nEvolution of the WWW\nBusiness Drivers\n- Enable transactions\n- Allow interactivity between browser and server\n- Facilitate personalization\n- Support multiple browsing devices\n- Better organize and retrieve Web content\n- Support Business-to-Business applications\n\nMultiple Delivery Devices\n- Business motivation:\n- Allow users to access web content from a variety of devices\n» PC Browsers\n» PDAs (e.g. Palm Pilots)\n» Mobile Phones\n» Telephones (via voice interface)\n» ...\n- Problems of current Web model\n- Each access device has different look-and-feel requirements\n- HTML specifies formatting for PC browsers only\n\nOrganize and Index Web Content\n- Web is useless unless we can easily locate relevant\nresources\n- Current solution: Search Engines\n- Index the Web by automatically \"discovering\" web pages and\norganizing them around keywords found in their text\n\nHow does Google work?\n- Before you ever enter a query:\n- Programs (called \"web crawlers\" or \"spiders\")\nfollow links from one page to another all over the\nweb.\n- The programs construct indexes of which words\nappear on which pages and save the indexes (and\noften copies of the pages) on massive \"server\nfarms\" maintained by Google.\n- Each page is also assigned a \"page rank\" based on\nthe number of other pages that link to it. Links\nfrom pages that, in turn, have lots of other pages\nlinking to them are weighted more heavily.\n\nGoogle's page rank formula\n- PR(A) = (1-d) + d(PR(t1)/C(t1) + ... + PR(tn)/C(tn))\n- Where\n» t1 - tn are pages linking to page A,\n» C is the number of outbound links that a page has\n» d is a damping factor, usually set to 0.85.\n- In words:\n- a page's PageRank = 0.15 + 0.85 * (a \"share\" of the PageRank\nof every page that links to it)\n- \"share\" = the linking page's PageRank divided by the number\nof outbound links on the page.\n\n(\n)\nHow does Google work? cont.\n- After you enter a query:\n- Programs check the indexes to determine which\npages contain the combination of words you\nentered.\n- Google provides a list of these pages in order of\npage rank (order is probably affected by other\nfactors, too)\n\n(\n)\nGoogle numbers\nas of December 2004\n- Over four billion Web pages, each an average of 10KB, all fully indexed.\n- Up to 2,000 PCs in a cluster.\n- Over 30 clusters.\n- One petabyte of data in a cluster -- so much that hard disk error rates of 10-15\nbegin to be a real issue.\n- Sustained transfer rates of 2Gbps in a cluster.\n- An expectation that two machines will fail every day in each of the larger\nclusters.\n- No complete system failure since February 2000.\nSource: ZDNet - UK <http://www.zdnet.com.au/insight/software/0,39023769,39168647,00.htm>\n\nProblems with today's searches...\n- Text keywords are\nmisleading...\n- HTML does not give any\nclues as to the true\nmeaning of the data\n- Example:\n- Desperately seeking\nWendy Cook\n\nEvolution of the WWW\nBusiness Drivers\n- Enable transactions\n- Allow interactivity between browser and server\n- Facilitate personalization\n- Support multiple browsing devices\n- Better organize and retrieve Web content\n- Support Business-to-Business applications\n\nSupport for B2B applications\n- Original Web was conceived as a communication\nmedium between computers and humans\n- Amazing new applications will become possible if\ncomputers can automatically read and understand\nWeb pages\n- Electronic purchasing\n- Intelligence gathering\n- ....\n- Problem:\n- HTML pages are unstructured\n- HTML only provides information about presentation, not meaning\n\nWhat is the underlying issue?\n- When storing documents on the web, specify not only\ntheir appearance, but also their semantics (i.e. their\nmeaning!)\n\nEnter: The Semantic Web\n- The \"Next Generation Web\" with well-established infrastructure for\nexpressing information in a\n-\nPrecise, Human-readable, and Machine-interpretable form.\n- Enable syntactic and semantic interoperability among independently-\ndeveloped Web applications, allowing them to efficiently perform\nsophisticated tasks for humans.\n- Enable Web resources to be accessible by their semantics rather than by\nkeywords and syntactic forms.\n- Enable inferencing:\n- Chris is an associate professor at MIT.\n- Associate professors are permanent employees.\n- Chris is a permanent employee of MIT."
    },
    {
      "category": "Lecture Notes",
      "title": "lec9and10.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/ff9a4c3af6bdbcb842d534ef6c24b01f_lec9and10.pdf",
      "content": "15.561\nInformation Technology Essentials\nSessions 9 & 10\nComputer Security\nAcknowledgments:\nAdapted from Chris Dellarocas, U. Md..\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas\n\nWhat is computer security?\n- Securing communications\n- Three steps:\n» Secrecy = prevent understanding of intercepted communication\n» Authentication = establish identity of sender\n» Integrity = establish that communication has not been tampered\nwith\n- Securing access to resources\n- Two steps:\n» Authenticate = establish identity of the requestor\n» Authorize = grant or deny access\n\nTopic 1: Securing communications\n- What can go wrong?\n\nA bird's eye view of the Internet\nBob\nAmazon.com\n\nCommunication security issues\n- Encryption - How do I ensure the secrecy of my transactions?\n- Authentication - How do I verify the true identity of my\ncounterparts?\n- Integrity - How can I be sure the message hasn't been altered?\nI\nI\nConsumer\nmpostor\nnternet\nBob\nhnt\nMerca\nAlice\nDarth\n\nTraditional cryptography\nPLAINTEXT\nPLAINTEXT\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nHF GIN PGP\n............\n.........\n.......\n....\nEND PGP\nKEY\nCIPHERTEXT\nENCRYPTION\nDECRYPTION\nFigure by MIT OCW.\n\nCeasar's Cipher: Encryption by\nSubstitution\n- Substitute for each letter (block of bits)\nIBM\nEncrypt: each letter goes to previous\nletter in the alphabet\nHAL\n- How can you crack a substitution cipher?\n- I.e., how can you guess the key?\n\nPublic-key cryptography\nPLAINTEXT\nPLAINTEXT\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nMemo.....\nConfidential\nHF GIN PGP\n............\n.........\n.......\n....\nEND PGP\nPUBLIC KEY\nCIPHERTEXT\nENCRYPTION\nDECRYPTION\nPRIVATE KEY\nFigure by MIT OCW.\n\nPublic key cryptography\n- Secret key cryptography: Based on a secret key\n- Same secret key used for encryption and decryption\n- Problem: How to transmit key securely on the Internet???\n- Public key cryptography: Two keys used\n- Public key known to everybody. Used for encryption.\n- Private key known only to owner. Used for decryption.\n{Message}\nOnly Bob\nencrypted using Bob's public key\nwho knows the\ncorresponding\nprivate key\ncan decrypt\nAlice\nBob\n\nPublic key cryptography works if...\n- Private key remains secret\n- Never leaves the owner's computer\n- Typically encrypted and password-protected\n- Difficult to guess private key from knowledge of\npublic key\n- Boils down to trying all different key combinations\n- Difficulty of \"breaking\" the code rises exponentially with the bit\nlength of the key\n- 1024-bit keys require more time than the life of the universe in\norder to be \"broken\"\n- Reliable public key distributed\n- This is the most difficult problem!\n\nEncryption is not enough: Spoofs\n- Pretending to be someone else\n- Hard to login without someone's password\n- But can send out communications with someone\nelse's name on it\n- email\n» 1993: Dartmouth sent a message saying midterm exam was\ncancelled\n» Message appeared to come from the Professor!\n\nNeeded: Message Authentication\n- Make sure Bob gets the message unaltered\n- Don't let Alice deny sending the message\nPlausible\nDeniability\n- Don't care about eavesdropper Darth, unless\nDarth changes the message\n- How can cryptography help?\n\nDigital Signatures\n- Key property: Public and private keys can be applied in either\norder\n- Alice has message M\n- She applies her private key to it\n- She sends encrypted message to Bob\n- Bob decrypts it with Alice's public key\n- gets back original message\n- infers that Alice is indeed the sender (since only Alice has the private key that\ncorresponds to her public key)\n- In that way, encrypting a message with one's private key acts\nas a digital signature!\n\nPublic Key Management\n- Public key cryptography works as long as\nV Private key is really kept secret\nV Hard to compute private key from public key\n- Get the correct public key from some trusted source\n- Bob can send public key over insecure\ncommunication channel\n- But how do you know Darth didn't send you his\nkey instead?\n\nA central key distributor\n- Alice asks the distributor for Bob's public key\n- The distributor sends it to Alice and \"digitally signs\" it\n- Alice knows the key came from the distributor\n- Now just have to be sure that the distributor is honest and got Bob's key\nfrom Bob, not Darth\n- Requires one secure communication per user\n- Bob sends public key to distributor when he joins the system\n- Secret keys require secure communication between every\npair of users\n\n(\n)\nPublic Key Infrastructure PKI\n- Certificate Authorities are Trusted Third Parties\ncharged with the responsibility to generate trusted\ncertificates for requesting individuals organizations\n- Certificates contain the requestors public key and are digitally\nsigned by the CA\n- Before a certificate is issued, CA must verify the identity of the\nrequestor\n- These certificates can then facilitate automatic\nauthentication of two parties without the need for\nout-of-band communication\n\nCertificates\n- Used to certify a user's identity to another user\n- The certificate issuer's name\n- Who the certificate is being issued for (a.k.a the subject)\n- The public key of the subject\n- Some time stamps\n- Digitally signed by issuer\n- Issuer must be a trusted entity\n- All users must have a reliable public key of the issuer\n- in order to verify signed certificate\n\nWeb browsers come with a number of\ncertificates already installed\n\nPKI Industry\n- Main players: trusted third party CAs\n- Verisign\n- Entrust\n- Cybertrust\n- RSA\n- Revenue from\n- products (PKI servers for intranets and extranets)\n- services (certificate services for individuals and organizations)\n\nApplications: eCommerce Security\n- Needed to transmit sensitive information through the\nWeb\n- credit card numbers\n- merchandise orders\n- Requirements\n- sender and receiver must authenticate each other before sending\nany \"real\" data\n- all \"real\" data must flow encrypted through the network\n- no intercepted communication can be used to an intruder's\nadvantage\n\n/\nSSL TLS\n- Secure Sockets Layer / Transport Layer Security\n- Provides reasonable level of security\n- Often used for transactions between consumers and\nmerchants\n\n/\nSSL TLS\nNegotiate Security Options\nMerchant's digital certificate\nCustomer\nRandom session key generated by customer\nMerchant\nand encrypted with merchant's public key\nOngoing communication with\nboth parties using session key\n\n(\n)\nApplications: Virtual Private\nNetworks VPNs\n- Secure, private networks that operate over a public\nnetwork (like the Internet).\n- Messages are confidential\n- Only authorized users can access network\n- \"Tunneling\" -- encrypted messages from one protocol\nare packaged inside another protocol.\n\nTopic 2: Access Control\n- Something you have\n- Something you know\n- Something you are\n\nSmart Cards\n\"Something you have\"\n- Several subcategories\n- One of interest here is cryptographic smart cards:\n- Store user's digital certificate and/or private key\n- Used to prevent private keys from being \"hacked\" from user's\ncomputer\n- What happens if a smart card is stolen?\n\nSystem Access Controls\n\"Something you know...\"\n- Login procedures\n- Usually something you know\n- Password leaks\n- Commonly used password\n- Explicitly told\n» Voluntarily\n» Trojan horse\n- Trial and error\n- Intercepted communication\n» paper, camera, wiretap, file on disk, emanations, password sniffing on networks\n- Passwords are inconvenient\n- In client/server environment, user doesn't want to enter password for every service she\nconnects to\n\nFingerprint Reader\nMatch\nCamera\n\"Liveness\" test\nMatch\nMatch\nFace Pattern\nMicrophone\nFace Pattern Database\nEnter Biometrics...\n\"Something you are...\"\nFingerprint Template\nTemplate Database\nFACE RECOGNITION\nFINGERPRINT RECOGNITION\nVOICE AUTHENTICATION\nVoiceprint Database\nVoiceprint\nFigure by MIT OCW.\n\nSneaking through the backdoor...\n- Strategies whose goal is to gain control by bypassing\naccess control defenses\n- Exploit \"holes\" in applications that connect our\nmachine to the network\n- Viruses\n- Buffer overflow attacks\n\nViruses and Worms\n- Programs that run on machines where they're not wanted\n- Transmitted through I/O channels\n- Disguise themselves\n- How?\n- Often don't act right away\n- Why not?\n- Why hasn't anyone written a definitive virus eliminator?\n\nSpyware, Adware, Malware\n- Programs that are (usually) added to your computer\nwithout your knowledge and that do things you don't\nwant, such as:\n- Display unwanted ads in pop-up windows\n- Surreptitiously send information about your computer and your\nactions to someone else\n- Change toolbars, homepages, etc.\n- Common sources:\n- \"Free\" software you download and install\n- Some web pages\n\nDenial of service attacks\n- Flood a server with fake messages (with \"spoofed\" IP\naddresses) so that no legitimate messages can get\nthrough\n- Flood someone's mailbox\n- Recent attacks on eBay, Yahoo, etc.\n- Difficult to trace since fake messages are sent from a\nvariety of \"hijacked\" machines\n\nDefensive Measures\n- Virus scanners and removers\n- Malware scanners and removers\n- Firewalls\n- Intrusion Detection Systems\n\nFirewalls\n\nWhat a firewall does\n- Hides the structure of the network by making it appear that\nall transmissions originate from the firewall.\n- Blocks all data not specifically requested by a legitimate user\nof the network.\n- Screens data for source and destination address so you\nreceive data from only trusted locations like people on your\napproved guest list.\n- Screens the contents of data packets for known hacker attacks\n\nTypes of firewalls\n- Packet filter: Looks at each packet entering or leaving\nthe network and accepts or rejects it based on user-\ndefined rules.\n- Stateless\n- Stateful\n- Proxy server: Intercepts all messages entering and\nleaving the network. The proxy server effectively\nhides the true network addresses\n\nPacket-level firewalls\nINSIDE\nCONNECTION\nOUTSIDE\nCONNECTION\nINSIDE HOST\nOUTSIDE\nINSIDE\nOUTSIDE HOST\nPACKET FILTERING ROUTER\nFigure by MIT OCW.\n\nApplication-level gateways\nFTP\nPROXY\nTELNET\nPROXY\nOUTSIDE\nINSIDE\nCONNECTION\nCONNECTION\nOUTSIDE CLIENT\nAPPLICATION-LEVEL GATEWAY\nPROXY-SERVER\nCLIENT-PROXY\nINSIDE SERVER\nFigure by MIT OCW.\n\n/\nFirewall performance security\ntradeoffs\nHYBRID\nINSPECTION\nSPEED\nSLOWER\nWEAKER\nSTRONGER\nSECURITY\nAPPLICATION\nLEVEL GATEWAYS\nSTATEFUL\nCIRCUIT-LEVEL\nGATEWAYS\nPACKET\nFILTERS\nFASTER\nFigure by MIT OCW.\n\nHow do Intrusion Detection Systems work?\n- IDS uses data mining techniques to uncover and\nreport suspicious activities\n- Two main strategies:\n- Pattern recognition\n- Anomaly detection\n\nOther prevention measures\n- Stay current on patch levels for Microsoft' s OS and\nweb server.\n\n1988 1989\n1990 1991 1992 1993 1994\n1995 1996\n1998 1999\n1,000\n2,000\n3,000\n4,000\n5,000\n6,000\n7,000\n8,000\nNUMBER OF INCIDENTS\nYEARS\nDespite all that...\nsecurity breaches are on the rise\nFigure by MIT OCW.\n\nHIGH\nINTRUDER\nKNOWLEDGE\nLOW\n\"Stealth\"/Advanced Scanning\nDenial of Service\nAutomated Probes/Scans\nGraphical User Interface\nPacket Spoofing\nNetwork Management Diagnostics\nSweepers\nHijacking Sessions\nBack Doors\nPassword Cracking\nSelf-Replicating Code\nPassword Guessing\n.. and require far less technical expertise\nATTACK\nSOPHISTICATION\nATTACKERS\nDistributed Attack Tools\nTechniques\nWWW Attacks\nSniffer\nDisabling Audits\nBurglaries\nExploiting Known Vulnerabilities\nTOOLS\nFigure by MIT OCW.\n\nSecurity Resources\n- www.microsoft.com/security\n- Advisories\n- Patches\n- IIS Security Checklist\n- www.securityfocus.com\n- Bugtraq Mailing List\n- Tools, Books, Links\n- Vulnerabilities and Fixes"
    },
    {
      "category": "Lecture Notes",
      "title": "lecture11.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/15-561-information-technology-essentials-spring-2005/b90bd1af6174f5f4c50b0020045cc14e_lecture11.pdf",
      "content": "15.561\nInformation Technology Essentials\nSession 11\nUnder the hood of\na commercial website\nAcknowledgments:\nAdapted from Chris Dellarocas, U. Md..\nCopyright (c) 2005 Thomas Malone, Chris Dellarocas\n\nOutline\n- Issues for building enterprise-class systems\n- Typical commercial website architecture: Travelocity\n- How much does it cost?\n\n/\nws\nWeb\nserver\nThe story so far...\nCGI ASP\nscript\nInternet\nWebbro er\nStatic\ncontent\nDatabase\n\nIssues for building enterprise-level\neCommerce sites\n- Security\n- Physical security\n- Access control\n- Availability/Fault Tolerance\n- Ensure the computer services remain available to users in the\nface of partial failures\n- Performance/Scalability\n- Ensure that response time remains acceptable as site traffic\ngrows\n- Content management\n- Ensure that content development is done in a streamlined and\norderly fashion\n\nEnterprise-level eCommerce sites:\nSummary of Technologies\n- Security\n- Physical security: Hosting\n- Access control: Firewalls\n- Availability/Fault Tolerance\n- Replication\n- Performance/Scalability\n- Replication\n- Load Balancing\n- Web Caching\n- Content management\n- Content Management Software\n\nIssue # 1: Network and Physical Security\n\nTypes of firewalls\n- Packet filter: Looks at each packet entering or leaving\nthe network and accepts or rejects it based on user-\ndefined rules.\n- Application gateway: Applies security mechanisms to\nspecific applications, such as FTP and Telnet servers.\n- Proxy server: Intercepts all messages entering and\nleaving the network. The proxy server effectively\nhides the true network addresses\n\nWeb Hosting\n- Ensure 24x7 site operation\n- Provide access to network bandwidth\n- Provide physical site security\n\nThe various flavors of hosting\n- Free hosting\n- Your site on a shared server. Usually a shared domain name. Usually\nsupported by advertising\n- Shared hosting\n- Your site (and domain name) on a shared server in a special facility with\nstaff to respond when machines go down, etc. Often bundled with email.\n- Dedicated hosting\n- Your site(s) on a separate, dedicated server in a special facility. Varying\namounts of additional services (such as design of server configuration,\nfirewalls, replication, etc.)\n- Collocated hosting\n- Similar to dedicated hosting except you own the server rather than renting it.\n\nThere is no single right answer\n- Select level of hosting based on what kind of\ncompany you are\n- basic eCommerce presence ‚\nshared hosting\n» Century 21\n- some in-house expertise, high volume ‚\ndedicated hosting\n» Land'sEnd, Vanguard\n- eCommerce pioneer ‚\ncollocated hosting\n» Yahoo, Amazon\n\nIssue # 2: Ensuring Availability and\nFault Tolerance\n- Why do computers crash?\n- Hardware errors\n- Operating system errors\n- Application errors\n- Human errors\n- Use redundancy to restore normal operation after crashes\n- Data redundancy\n- Active Replication\n\nData Replication\n- Keep several copies of same data (replicas)\n- If one server is down, query next server\n- Can improve response when load is heavy\n- Problem: How to synchronize replicas?\n\nActive Replication\n- Establish redundant copies of vital programs and\nservers\n- process groups\n- every group member operates on its own replica\n- Every message is processed by all group members\n- members remain in mutually consistent states\n- If one member fails, other members can still respond\n\nIssue # 3 Scalability:\nWhy you should care\n- ... the No.1 reason that customers got fed up and took\ntheir business elsewhere was technical problems,\nincluding unacceptably slow response times.\n- Fortune magazine\n- ... 28% of Netizens that encountered glitches, left the\nsite never to return\n- Business Week\n\nTechnological Alternatives\n- Local load balancer\n- Site mirroring\n- Content routing\n\nLoad balancing solutions\nCompanies: Cisco, HydraWeb\nS\nB\nS\nA\nLoad\nbalancer\nWeb\nerver\nWeb\nerver\nDistributes client requests among\nreplicated servers\nWeb\noaLa\nla\ni\nbro s\nInternet\nLclod\nRepcted\nw er\nblnc\nerv\naa er\nWebs\ners\n\nUser enters standard URL\nRich content served locally\nUser browser request embedded objects\nIntelligent content routing\nAKAMAI SERVER\nCUSTOMER\nWEB SERVER\nSTEP 1\nSTEP 1\nSTEP 2\nSTEP 2\nSTEP 3\nSTEP 3\nSTEP 4\nSTEP 4\nWeb Server returns HTML with embedded URLs\npointing to Akamai Network\nFigure by MIT OCW.\nCompanies: Akamai, Sandpiper\n\nAkamai network\n- Over 15,000 servers in over 65 countries\nAKAMAI SERVERS\nFigure by MIT OCW.\n\nIssue # 4: Large-scale content\ndevelopment\n- Large number of authors contributing site content\n- Diverse types of content (e.g., image, video, and other\nmedia files)\n- Need for regular content posting and replacement\n(i.e., weekly sales promotions)\n- Often one or more approvals are required before\ncontent is posted\n- Some content needs to be personalized or tailored to\nmatch the needs and interests of a site visitor\n\nAdditional issues\n- Often support for multiple languages and time zones\nis required\n- Content presentation must consistently conform to\nbranding and appearance standards\n- Version archiving and an audit trail\n- Content must be viewable across a variety of\nbrowsing devices, not just PCs\n\nSolution: Content management systems\n- Automatic support for content management workflows\n\nEnterprise-level eCommerce sites:\nSummary of Technologies\n- Security\n- Physical security: Hosting\n- Access control: Firewalls\n- Availability/Fault Tolerance\n- Replication\n- Performance/Scalability\n- Replication\n- Load Balancing\n- Web Caching\n- Content management\n- Content Management Software\n\nA Three Layer Website Architecture\nINTERNET\n/\nFront-end\nMiddleware\nBack-end\nProfile\nDataBase\nBROWSER\nContent\nDataBase\nSession\nmanagement\nsoftware\nInventory\nDatabase\nFirewall\nDatabase\nintelligence\nWeb interface\nManage page hits\nCustomer and session\nManagement\nTransacion and requests\nmanagement\nRead\nStore data\nWeb Server\nLoad Balancer\nWeb Server\n/\n\nHow much does it cost?\n- Typical e-Commerce corporate site\n- 600,000 unique visitors per month\n- Growth aimed at 3 million visitors per month in two\nyears\n\nTypical Hardware Costs\nStartup Costs\nServers\n$129,000\n33%\nNetwork Hardware\n$115,050\n29%\nLabor\n$124,800\n32%\nFacilities\n$26,000\n7%\nTotal\n$394,850\nAnnual Operating Costs\nMaintenance\n$10,400\nHosting\n$65,000\nLabor\n$204,750\nTotal\n$280,150\n\nTypical Software Costs\nStartup Costs\nSoftware Applications\n$310,250\nWeb design\n$1,105,000\nEnterprise Integration\n$364,000\nOther labor\n$403,650\nFacilties\n$78,000\nTotal\n$2,260,900\nAnnual Operating Costs\nMaintenance\n$7,150\nLabor\n$890,500\nTotal\n$897,650\n\nTotal Costs\nStartup\nSoftware\n$2,260,900\n85%\nHardware\n$394,850\n15%\nTotal\n$2,655,750\nOperating\nSoftware\n$897,650\n76%\nHardware\n$280,150\n24%\nTotal\n$1,177,800\n\nMoral of this lecture\nComputer Systems can be Fast, Cheap, or Reliable\n- Choose any two"
    }
  ]
}