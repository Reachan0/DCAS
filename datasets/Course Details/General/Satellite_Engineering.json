{
  "course_name": "Satellite Engineering",
  "course_description": "Satellite Engineering introduces students to subsystem design in engineering spacecraft. The course presents characteristic subsystems, such as power, structure, communication and control, and analyzes the engineering trades necessary to integrate subsystems successfully into a satellite.Â Discussions of spacecraft operating environment and orbital mechanics help students to understand the functional requirements and key design parameters for satellite systems.",
  "topics": [
    "Engineering",
    "Aerospace Engineering",
    "Astrodynamics",
    "Guidance and Control Systems",
    "Propulsion Systems",
    "Engineering",
    "Aerospace Engineering",
    "Astrodynamics",
    "Guidance and Control Systems",
    "Propulsion Systems"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nThis section contains the course syllabus. A version is also available as a PDF. The PDF version also contains portfolio information and the original course schedule, which was subject to change. This site's\ncalendar\nsection is a more accurate record of the class sessions. The same portfolio information may be found in the\nprojects\nsection.\n\nFall 2003 Course Syllabus (\nPDF\n)\n\nTable of Contents\n\n1.0 General Description: Satellite Engineering\n\n1.1 Course Learning Objectives\n\n2.0 Organization\n\n3.0 Homework\n\n3.1 Problem Sets\n\n3.2 Module Development\n\n4.0 Portfolio\n\n5.0 Communications\n\n5.1 Staff Meetings\n\n6.0 Grading\n\n7.0 Resources\n\n7.1 Textbooks\n\n7.2 Satellite Tool Kit(r)\n\n7.3 Satellite Design Web Sites\n\n1.0 General Description: 16.851 Satellite Engineering\n\nThe purpose of this course in Satellite Engineering is to provide the student with an introduction to the design of satellite subsystems. We will learn about subsystem functions and performance measures. We will discuss and practice evaluating tradeoffs of performance among alternative designs that may satisfy the required subsystem function and optimize higher-level system performance or cost requirements. We will also examine the environments and interfaces that impact satellite design, including launch systems and the space environment. We will discuss payloads in a general sense, with specific examples to highlight the payload's influence on the design of other subsystems.\n\nAt the end of this course the student will have a fundamental understanding of the factors influencing subsystem design and will be able to evaluate the impact of tradeoffs between subsystem requirements on the performance and cost at the system level.\n\nWe will not design a satellite in this subject. Our focus is on an understanding of subsystems and their relationships. Instead we build a foundation upon which later subjects (e.g. 16.89 Space System Engineering) design satellite systems. In those subjects you will use the skills and tools developed in this class to evaluate alternative designs at the system level.\n\nWe will, however, use a satellite system (or several systems) to provide a context for the subsystem discussions. These examples are useful because they provide realistic examples and highlight the challenges that drive tradeoffs in performance.\n\nSome of the students in this course may already have some knowledge of specific spacecraft subsystems. While the overall format of the class is lecture, it is hoped that all will contribute to our discussions from their work and study experience.\n\nOnce again, the purpose of the course is for you to learn about satellite subsystems. If there is something you do not understand, ask about it. Discussions allow us to explore the subject and significantly improve our understanding.\n\n1.1 Course Learning Objectives\n\nBy the end of the course the student will have demonstrated the ability to:\n\nUnderstand the function of spacecraft subsystems.\n\nApply orbital mechanics formula and tools to spacecraft mission design.\n\nSelect appropriate launch systems and understand their affect on satellite and payload design and performance.\n\nEvaluate spacecraft subsystem performance and trades\n\nEstimate space system costs\n\nTrade subsystem performance requirements to optimize higher-level system performance, cost, or weight.\n\n2.0 Organization\n\nSatellite Engineering is a twelve (12) unit course consisting of three (3) hours of lecture, and nine (9) hours of homework per week. It is an H-level Graduate credit course. Classes are held on Mondays and Wednesdays from 1 pm to 2:30 pm.\n\nPrimary faculty for the course will be John E Keesee and Professor David W Miller. Additional Aeronautics/Astronautics department faculty may deliver some of the lectures since they are experts in particular subsystems and environments.\n\n3.0 Homework\n\n3.1 Problem Sets\n\nHomework for this class will be worked in teams who will be selected by the instructors and changed during the semester. Homework will be handed out every other Wednesday and will be due one week later. In some cases each team's homework problems may be unique. When homework is turned in you should make two copies of your work, one for the instructor and one for another team to evaluate. In the next week you will prepare an evaluation of the other team's work.\n\n3.2 Module Development\n\nMost of the homework problems will require the coding of software modules. We suggest you use MATLAB to code these modules and will provide a tutorial to help you learn the programming language. We intend for these modules to be useful in future subjects (e.g. 16.89) or satellite system design work beyond your studies at MIT. The point of analyzing the other teams' work and receiving comments on your own is to help you build useful and effective tools. Your modules will very likely be used in 16.89 Space Systems Engineering.\n\nThe modules should mathematically capture the relationships between the discipline's inputs and outputs and in general relate subsystem performance and cost to the subsystem's requirements. When used in an integrated concurrent engineering context, you will be asked to determine how the subsystem performance or cost will change as a result of changes in the requirements. The module must be complex enough to capture the important relationships yet simple enough to provide outputs that make sense. You should ensure that your modules are appropriately documented with explicit definitions of input and output so that you and others will understand its structure in the 16.851 evaluation as well as future applications. You are likely to use this program again in the future or may need to use part of it in developing the solution to another problem. You might have to update it or correct errors. In any case, the faculty and the review team will grade it. Documentation is essential so that we can understand and give proper credit for your work. Good documentation would include:\n\nProgrammer's name\n\nA concise requirements specification\n\nDescriptions of problem inputs, expected outputs, constraints and applicable formula\n\nA pseudo-code or flowchart for its algorithm (optional)\n\nA source program listing\n\nA hardcopy of a sample test run of the program\n\nA user's guide explaining to nonprogrammer users how the program should be used (optional)\n\n4.0 Portfolio\n\nOne of the key products of this class is a personal portfolio. The portfolio provides both a personal reflection on the learning experience as well as a central collection of the tools and reference material from the course. The portfolio should contain:\n\nYour learning objectives for the class.\n\nYour reflections on the learning experiences with respect to the learning objectives.\n\nAll of the tools you developed, including particularly the software modules and the problem sets and their solutions you or others developed.\n\nWeb sites and reference material you found useful.\n\nWhatever else would be useful for your review of the subject.\n\nThe portfolio format is up to you to choose but it should be well organized. It may be captured on paper or electronically in a computer file or on a web site. You will turn in the portfolio (or provide a url) for grading three times during the semester.\n\n5.0 Communications\n\n5.1 Staff Meetings\n\nThe faculty and staff will meet every Monday at 10am to discuss the progress of the class.\n\n6.0 Grading\n\nGrading for 16.851 is based upon the criteria shown in the following table. The percentage weights of each item and a brief description are provided. These grades will be reported to the students in their end-of-term grades as well as once near the middle of the term.\n\nCRITERIA\n\nGRADERS\n\nWEIGHTS\n\nNUMBERS\n\nClass Participation\n\nFaculty\n\n15%\n\nProblem Sets\n\nFaculty\n\n50%\n\nProblem Set Reviews\n\nFaculty\n\n15%\n\nPortfolio\n\nFaculty\n\n20%\n\n7.0 Resources\n\n7.1 Textbooks\n\nThe following textbooks provide resource material for this course:\n\nRequired: Wertz, J.R. and W.J. Larson, eds.\nSpace Mission Analysis and Design\n(SMAD). 3rd ed. Microcosm Press, 1999. ISBN: 1881883108.\n\nOptional: Pisacane, V.L. and R.C. Moore.\nFundamentals of Space Systems.\nOxford, 1994. ISBN: 0195074971.\n\nOptional: Fortesque, P.W. and J.P.W. Stark.\nSpace Systems Engineering.\nJohn Wiley and Sons, 1995.\n\nOptional: Griffin, M.D. and J.R. French.\nSpace Vehicle Design.\nAIAA, 1991. ISBN: 0930403908.\n\nOptional: Morgan, W.L. and G.D. Gordon.\nCommunications Satellite Handbook\n. 1989. ISBN: 0471316032.\n\n7.2 Satellite Tool Kit(r)\n\nEach student will be provided with a copy of Satellite Tool Kit(r), an orbital analysis software package developed by Analytical Graphics, Inc. Each student will receive instructions on how to access the full capabilities afforded by MIT's educational license with Analytical Graphics, Inc. The STK(r) program is yours to keep (although I would like you to return the CD to me once you have installed the software on your computer). The educational license will expire at the end of the course, terminating your access to the tools beyond the basic functionality. The free version of STK(r) is always available by contacting AGI or on their\nWeb site\n.\n\n7.3 Satellite Design Web Sites\n\nSmall Spacecraft World Wide Web Links\n\nNASA Online Cost Models",
  "files": [
    {
      "category": "Resource",
      "title": "ps1_cg_solution.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/9f5c1b22d5574bd6289ff78a575185e2_ps1_cg_solution.pdf",
      "content": "16.851 Assignment #1, 2003-09-17\nProblem Statement\nMotivation\nThe design of a spacecraft power subsystem is an important driver for the mass, size, and\ncapability of the spacecraft. Every other spacecraft subsystem is affected by the power\nsubsystem, and in particular, important issues such as communications bandwidth,\nthermal regulation, and structural design are largely influenced by the capabilities and\nlimitations of the power system. The motivation for this problem is the broad\napplicability of a power-system design tool to a wide range of future design problems.\nRequirements\nGiven time histories of the power load and power source, design a power subsystem that\noptimizes with respect to some specified cost function. The power source profile can be\nspecified directly, or determined from constituent information such as time histories of\nthe sunlight intensity and the changing angle of a solar panel as a spacecraft rotates with\nrespect to the sun. The design space for the power subsystem should contain several\ntypes of power generation devices, such as photovoltaic arrays and radioisotope\nthermoelectric generators; and several types of energy storage devices, such as batteries\nand flywheels. From this design space, a system that minimizes the cost function should\nbe selected.\nProblem Solution\nThe approach taken to the problem is to create a set of modular functions that are\ncombined to achieve a solution. The primary advantage to using this approach is that\nsmall, simple blocks of code can be validated more easily than large, complex blocks.\nInputs\nRequired user inputs include the following quantities:\n- Load power as a function of time in Watts, sampled at constant time steps.\n- Source power as a function of time in Watts, sample at constant time steps. This can\nbe supplied either directly as a power profile, or indirectly as constituent data such as\nthe time histories of incident sunlight intensity and angle of solar array with respect\nto the sun.\n- The length of the time step in seconds.\n- The initial life fraction of the energy storage device.\n- The energy initially stored in the energy storage device, in Joules.\nOutputs\nOutputs from the design module include the following quantities:\n- The mass of the power system in kilograms, including the mass of the energy storage\nsystem (batteries or flywheel) and power generation system (solar array or RTGs).\nThis mass does not include other components of the system such as power\nconditioning electronics.\n\n- The cost of the energy storage and power generation systems in millions of dollars.\n- The time history of the state of charge of the energy storage system, in Joules.\n- The time indices at which the energy storage capacity was insufficient to meet\ndemand, if this has occurred.\n- The time history of excess thermal energy that must be dissipated, in Joules.\n- The remaining life in the storage system as a fraction of the original lifespan.\nFormulas and Constraint Equations\nWhen determining the state of charge for an energy storage device, two constraint\nequations must be satisfied at all times. First, the integral of the load power must be less\nthan the sum of the integral of the source power and the initial stored energy, as shown in\nthe following equation.\nt\nt\n( )\nPload dÏ â¤â« P\ndÏ +\nt\nE 0\nsource\nt0\nâ«t0\nSecondly, because it is impossible for an energy storage device to contain negative\nenergy, the energy contained in the device is constrained by a lower bound at zero, and\nby an upper bound at the device maximum capacity Emax.\nEmax\n( )â¥ 0\nâ¥\nt\nE\nThe fraction of the lifetime lost due to a particular discharge/charge cycle on a chemical\nbattery can be determined using the following formula, where âLi is the fraction lost, di is\nthe depth of discharge, b is the intercept, and m is the slope. This equation was derived\nfrom Fig. 11-11 in SMAD.\nâdi -b â\n-â\nâ\nâ m â \nâLi = -10\nThe remaining lifetime fraction as a function of time can then be determined by summing\nthe fractions lost due to each cycle. In the following equation, the lifetime fraction is L0\nat time t0.\nn\n(t\nL\n-t0 )= L +ââLi\nn\ni =0\nThese equations summarize many of the major interactions between elements of the\npower subsystem.\nFiles\nThe following files, listed in alphabetical order, are used in the calculation of the optimal\npower system and the validation of components of the power system model. The main\nfunction is masterloop.m; all of the other functions, with the exception of the\nvalidation functions, are called from within the function masterloop. A simplified\nflow diagram for the module is shown in Figure 1.\n\n=\n=\nÃ\nyes\nyes\nno\nno\nmasterloop.m\nPowerDesignResult.m\nDesign Vector\nPower Source\nSolar Array\nPower Source\nRTG\nSolarArrayPerArea.m\nSurface Area\nRTGPower.m\nbattery_profile.m\nerror\nDesign Vector\nFigure 1. Simplified flow diagram.\nbattery_profile.m\n- Calculates the time profiles of the energy storage device state of charge and excess\nthermal energy. Determines if the power and energy devices are sufficient to handle\nthe applied load.\n- Calculates the cumulative effect of individual discharge/charge cycles on the device\nlifetime.\n- Inputs include the properties of the energy storage device and the time histories of\nthe source and load power.\n- This file contains the functions battery_profile and delta_life.\n- Validated using MER_sol4.m.\nEffectivePowerIntensity.m\n- Used to compute the effective solar radiation intensity based on the incident angle\nbetween the line of radiation and a vector normal to the solar array surface.\n\n- As the incident angle is a function of time, the resulting effective power intensity is\nalso a function of time.\nmasterloop.m\n- The main function, from which the other functions are called. Operates with a set of\nnested 'for' loops, which are used to test all possible combinations of designs.\nMER_sol4.m\n- Used to validate the model used in battery_profile.m. This function can be\nrun from the command line without any additional inputs.\n- Reads in the source (solar array) and load (egress operations) power profiles for the\nMars Exploration Rover egress scenario planned for sol 4, as reported in the MER\nMission Plan.\n- Uses battery_profiles.m to recreate the battery state of charge history shown\nin the MER Mission Plan, and plots the recreated profile against the MER Missoin\nPlan profile.\n- Requires the Excel spreadsheet MER_sol4_input_data.xls. The accuracy of\nthe input data is limited by the fact that the data points were eyeballed from the plot\nin the mission plan and copied to Excel point by point.\n- This file contains the functions MER_sol4, plot_results, corner_times,\ncreate_profile, and t2m.\nMER_sol4_input_data.xls\n- A spreadsheet containing data points from MER_sol4_power_profile.png.\nUsed for validation of the function battery_profile.\nMER_sol4_power_profile.png\n- A bitmap screen capture of the energy balance plot for MER A sol 4 egress\noperations, taken from the MER Mission Plan. Used for validation of the function\nbattery_profile.\nplot_battery_dod_cycles.m\n- Used to visualize the effect of a single discharge/charge cycle on the lifetime of a\nbattery. Creates a plot of depth of discharge as a function of fraction of lifetime lost\nfor all types of chemical batteries being considered. This function can be run from\nthe command line without any additional inputs.\nPowerDesignResult.m\n- Given the design requirements and the specification of the power source and energy\nstorage devices, PowerDesignResult.m computes the overall mass and cost,\nthe power available from the power source as a function of time, and the state of\ncharge of the energy storage device as a function of time.\n- The function may also return a set of time instances at which the stored energy was\ninsufficient to handle the power load. Furthermore, it computes the energy storage\ndevice's remaining life and required energy dissipation.\n\n- Depends on SolarPowerPerArea.m and battery_profile.m to compute\nthe aforementioned information.\npower_read_xls.m\n- Reads in an Excel spreadsheet containing data on power generation and energy\nstorage devices (e.g. RTGs, photovoltaics, batteries, fly-wheels, etc.), and saves the\ninformation to Matlab structures.\nRTGPower.m\n- Used to compute the power an RTG can generate. The power an RTG can generate\ndepends on the specific model of the RTG.\nslope_intercept.m\n- Given a particular set of energy storage device properties, calculates the slope and\nintercept of the plot of depth of discharge as a function of cycle life. The slope is\nconsidered constant, based on the limited data available from SMAD and external\nsources.\nSolarPowerPerArea.m\n- Used to determine the amount of power that can be generated from a unit area of a\nsolar array, based on the type of the solar array and the effective illumination\nintensity. It takes into account the degradation of the array over the time period, the\nefficiency of the solar array, and the inherent degradation (i.e. degradation of the\nsolar array system due to the temperature and shadowing effects) [SMAD].\n- Depends on EffectivePowerIntensity.m for computing the effective power\nintensity.\nTestPowerDesignResult.m\n- This function is used to validate the functionality of PowerDesignResult.m\nthrough a simplified LEO scenario.\nTestSolarArray.m\n- This function is used to validate the functionality of SolarPowerPerArea.m and\nEffectivePowerIntensity.m through a simplified LEO scenario.\nModule Validation\nEnergy Storage for MER\nSeveral of the functions used in the module are validated individually. Among these is\nthe battery_profile function, which is validated using data from the MER Mission\nPlan, as shown in Figure 2. The function MER_sol4.m reads the source and load power\nprofiles from an Excel spreadsheet, parses the data, and passes the power profiles to\nbattery_profile, which generates the Battery SOC and Excess Power profiles. The\ntop plot is taken from the MER Mission Plan, the middle plot shows the inputs to and\noutputs from the function battery_profile, and the bottom plot shows these inputs\n\nand outputs overlaid on the MER Mission Plan data. Although some discrepancy can be\nseen in the battery state of charge profile, the shape of the profile is generally correct, and\nthe beginning and ending values are accurate.\nEnergy balance for MER A egress (Sol 4) from MER Mission Plan\nLoad power\nSource power\nExcess power\nBattery SOC\nPower [W]\nSimulation data. Outputs are battery SOC and excess power.\nBattery state of charge [%]\nTime [Mars hours]\nSimulation data overlayed on MER mission plan data\n[W]\n]\nPower\nBattery state of charge [%\nTime [Mars hours]\nFigure 2. Validation of battery_profile.m using MER Mission Plan data and MER_sol4.m.\n\nDepth of discharge and cycle lifetime\nThe issue of battery lifetime dependence on depth of discharge and number of cycles is\naddressed by treating each discharge/charge cycle as an individual event, and tracking the\ncumulative effect of the individual events. Data in SMAD and elsewhere were used to\ncreate the relationships between depth of discharge and degradation of lifetime shown in\nFigure 3. The slopes of the lines are considered constant, based on data in SMAD. This\nfigure may be plotted using plot_battery_dod_cycles.m.\nDepth of discharge [%]\nDepth of discharge vs cycle life for secondary batteries\ni\nSil\ni\nNickel-Hydrogen IPV (RNH30-9)\nLith um Ion (INCP77)\nver Znc (SZHR25)\nNickel-Hydrogen CPV (RNHC4-1)\n-1\n-2\n-3\n-4\n-5\n-6\n-7\n-8\nFraction of life lost in one charge/discharge cycle [log\n10(x)]\nFigure 3. Relationship between depth of discharge and reduction in lifetime for chemical batteries.\nSolar Arrays\nThe test function TestSolarArray.m is used to validate SolarPowerPerArea.m\nand EffectivePowerIntensity.m within a specific scenario. This scenario\nassumes a satellite in a low Earth circular orbit. The satellite has a fixed solar array, that\nis, the incident angle of the solar array with respect to the line of solar radiation varies in\nbetween -Ï and Ï. We also assume that the solar array is double sided and is never\neclipsed by Earth. Figure 4 is the output generated by TestSolarArray.m.\nFigure 4. Solar array power intensity for a simulated low Earth orbit without an eclipse.\n\nThe blue lines represent the solar radiation intensity, which is approximately 1367 W/m2.\nThe green line is the effective radiation intensity the solar panels can absorb. Note that\nthe effective solar radiation is periodic due to the periodicity of the incident angle. The\nred line represents the total power generated by the solar array. As shown by the plot on\nthe left, this line tracks the effective solar radiation (green), but with lower magnitude due\nto the efficiency of the solar array. The plot on the right with larger time scale exhibits\nthe degradation of the solar array as expected. Given a solar array, the power generated\nby the solar array is:\n(\nP = Î· â Id â Ieff â A â(1 -(D +\nt\nD - t0 )))\nwhere Î· is the efficiency, Id is the inherent degradation, Ieff is the effective radiation\n\nintensity, A is the surface area exposed to the radiation, D0 is the initial degradation, D is\nthe rate of degradation, t is the current time, and t0 is the initial time. While the harsh\nenvironment (e.g. thermal cycling and micrometeoroid strikes) causes degradation/rate of\ndegradation, the inherent degradation is caused by design inefficiencies (e.g. shadowing).\nRadioisotope Thermoelectric Generators\nThe function RTGPower.m exhibits\nexponentially decaying power, as\nexpected\nof\na\nradioisotope\nthermoelectric generator.\nFigure 5. RTG power vs. time.\nWe model the power generated by an RTG using an exponentially decaying function:\nP = P0 â e-kt ,\nwhere k is 1/87.74 [1/years] for Pu-238 that is typically used for an RTG.\nModule Results\nThe module was run using the input power profile and incident angle profile shown in\nFigure 6 and Figure 7, respectively. The profile was chosen to approximate a Low Earth\nOrbit to a very crude level. The fraction of life span remaining at the start of the period\nwas chosen to be one, and a maximum energy storage capacity of 161280 J was chosen, a\nfactor of ten less than the capacity of the Mars Exploration Rover batteries. The initial\nenergy in the batteries was selected as 60% of this amount.\n\nFigure 6. Input power profile.\nFigure 7. Input incidence angle profile (cosine of angle taken)\nThe solar array input vector was chose to range from one to four meters in increments of\none meter. After running masterloop, Figure 8 and Figure 9 were generated from the\nmodule outputs. Figure 8 illustrates the mass and costs for various designs in the design\n\nvector. The red dots indicate designs where the energy in the system dropped below zero,\nindicating that the energy storage capacity is insufficient. These designs are therefore\ninvalid, and are not considered part of the final answer. The blue dots indicate designs\nwhere energy conditions were successfully met. The data can be seen as 14 \"columns\" of\ndata, which correspond to the 14 different storage designs. The flywheel storage design\nis the 2nd column from the right. The bottom four dots per column that are grouped\ndiagonally represent the range of solar array sizes for a specific solar array type.\nDepending on the power input and incidence angle profiles, the number of valid and\ninvalid designs can change. For some profiles, all flywheel designs were determined to\nbe invalid. Figure 8 shows an example outcome for a solar-array based system.\nFigure 8. Mass and Costs for Design vector according to the input Power profile for a solar array\nsource system.\nFigure 9 illustrates the mass and cost for an RTG and storage system. There are only\neight discrete RTG designs, and this results in eight regions, each centered about one\nRTG design. If more RTG data were incorporated, a more distinct Pareto front could be\nachieved; however, the results show that for certain RTG designs, the higher-mass\noptions become invalid.\n\nFigure 9. Mass and Costs for Design vector according to the input Power profile for an RTG source\nsystem\nFuture Work\nThere are several ways to expand this module. The database of storage devices and\nsource devices could be expanded. We have included several types of secondary\nbatteries and eight RTGs; however, the design space could benefit from a larger selection\nof solar array types. The current module implemented only three types of solar arrays to\nkeep computation times down while running the module. One type of flywheel3 was\nincluded in the design space; however, if additional flywheel storage devices emerge,\nthey should be added to the design space. Additional storage and source types such as\nfuel cells, nuclear generators, and thermoelectric converters could add to the design space,\nbut the more options added, the slower computation will be.\nAdditional work includes incorporating the mass and power draw from power\ndistribution systems, such as a Direct Energy Transfer (DET) or Peak Power Tracker\n(PPT) system.\nThe spreadsheet of sources and storage devices includes the sizes of the storage units,\nhowever they were not used. A future design could include this data and output the size\nof the storage units. This could be used by a possible structures module. The heat\ngenerated by the power system consists of additional calculations that could be made to\nlink up with a possible thermal subsystem.\n\nSubsystems which would act as inputs to this power module include orbits, and\nenvironment. Environment already has an input, the form of the Solar Intensity, but\nadditional data could be added. The Orbits subsystem has an effect on the Effective\nIntensity, and on the Power Input profile.\nReferences\n1. Wertz, J., and Larson, W., Space Mission Analysis and Design, Third Edition.\nTorrance, CA: Microcosm Press, 1999.\n2. Ludwinski, J., et. al., \"Mars Exploration Rover (MER) Project Mission Plan,\"\nPasadena, CA: Jet Propulsion Laboratory, April 24, 2002, JPL-D19659.\n3. Designfax, http://www.manufacturingcenter.com/dfx/archives/0701/0701fly.asp,\nSept. 16, 2003.\n4. Eagle-Picher, http://www.epcorp.com/EaglePicherInternet/, Sept. 16, 2003\nSource Code\nFollowing are the full contents of the Matlab and Excel source code used in this\nassignment.\nbattery_profile.m\nfunction [energy,invalid,dissipation,life] = battery_profile(nsteps, dt, load, source, e_init, e_max, life_init, efficiency, slope, intercept)\n%[ENERGY, INVALID, DISSIPATION, LIFE]\n%\n= BATTERY_PROFILE(NSTEPS,DT,LOAD,SOURCE,E_INIT,E_MAX,LIFE_INIT,EFFICIENCY,SLOPE,INTERCEPT)\n%\n% Inputs:\n% NSTEPS The number of uniformly-spaced time values\n% DT\n[s] The separation between the time values\n% LOAD\n[W] The time profile of the power load\n% SOURCE\n[W] The time profile of the power source\n% E_INIT\n[J] The initial stored energy in the storage device\n% E_MAX\n[J] The capacity of the energy storage device\n% LIFE_INIT The fraction of the device's usable life as of the start of the period\n% EFFICIENCY The fraction of the input energy that is recoverable\n% SLOPE\nThe slope of the depth of discharge vs log life fraction plot\n% INTERCEPT The y-intercept of the depth of discharge vs log life fraction plot\n%\n% Outputs:\n% ENERGY\n[J] The time profile of the energy stored in the device\n% INVALID\nIndices of times at which the stored energy is negative (!)\n% DISSIPATION [W] The time profile of excess energy to be dissipated\n% LIFE The fraction of the device's usable life as of the end of the period\n%\n% Note that if LENGTH(INVALID)>0, the capacity of the energy storage device is insufficient\n% to meet demand, and this is an invalid design. Any function calling BATTERY_PROFILE(...)\n% should verify that INVALID is empty before proceeding with further calculations.\n%\n% reject any invalid inputs\nif (nsteps<2)\nerror('Error! NSTEPS must be at least two.');\nend\nif (dt<=0)\nerror('Error! Time step DT must be greater than zero.');\nend\nif (length(load) ~= nsteps)\nerror('Error! Length of LOAD must be NSTEPS.');\n\nend\nif (length(source) ~= nsteps)\nerror('Error! Length of SOURCE must be NSTEPS.');\nend\nif (e_max<0)\nerror('Error! Energy capacity E_MAX must be non-negative.');\nend\nif (e_init>e_max)\nerror('Error! Initial energy E_INIT is greater than max energy E_MAX.');\nend\nif (life_init > 1 | life_init < 0)\nerror('Error! Initial life LIFE_INIT must be between zero and one.');\nend\nif (efficiency > 1 | efficiency < 0)\nerror('Error! Charge efficiency EFFICIENCY must be between zero and one.');\nend\n% energy starts with e_init\nenergy(1) = e_init;\n% invalid vector starts out with no indices\ninvalid = [];\n% actual capacity is about 95% of e_max, based on MER battery profile\ne_cap = 0.95*e_max;\n% life begins at initial value\nlife = life_init;\n% create a time index vector\ntime = 0:length(load)-1;\n% allocate memory now to speed things up\ndissipation = zeros(size(time));\n% integrate power and track energy storage profile\nfor i=2:length(time)\nenergy(i) = energy(i-1) + efficiency*dt*(source(i-1)-load(i-1));\n% energy can't go negative, so this should result in an invalid design\nif energy(i)<0\n% records the indices of invalid energy events\ninvalid = [invalid i];\nend\nif energy(i)>e_cap\n% records the excess energy that won't fit in the storage device\ndissipation(i) = (energy(i)-e_cap)/dt;\n% caps the stored energy at its maximum value\nenergy(i) = e_cap;\nend\nend\n% all the indices that have negative slope\ndec = find(sign(energy(2:length(energy))-energy(1:length(energy)-1)) == -1);\n% all the indices that have positive slope\ninc = find(sign(energy(2:length(energy))-energy(1:length(energy)-1)) == 1);\n% account for depth of discharge and cycles to track life expectancy\ni=1;\nwhile i<length(dec)\n% the first point in a descent (i.e. the local peak)\ntop = max([(dec(i)-1) 1]);\n% the indices in the next increasing section\ntemp = inc(find(inc>top));\n% if there are no more increasing sections\n\nif length(temp)==0\n% depth of discharge\ndod = (e_max-energy(dec(length(dec))))/e_max;\n% terminate the loop\ni=length(dec);\n% if there is an upcoming increasing section\nelse\n% interested in the first index in the increasing section\ntemp = temp(1);\n% depth of discharge\ndod = (e_max-energy(temp))/e_max;\n% find the indices falling in later decreasing sections\ndec = dec(find(dec>temp));\nend\n% decrement the lifetime by some fraction due to this cycle\nlife = life - delta_life(dod, slope, intercept);\nend\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% Determines the fraction of the storage device lifetime lost\n% due to a particular discharge cycle.\nfunction dlife = delta_life(dod_frac, m, b)\nif m==0 & b==0\ndlife = 0;\nelse\ndlife = 10^-((dod_frac-b)/m);\nend\nMER_sol4.m\nfunction [t,L,A,E,W,life] = MER_sol4\n%[T, L, A, E, W, LIFE] = MER_sol4\n%\n% Reads in the solar array input power and the load power for the Mars Exploration Rover\n% egress scenario (data are from the MER Mission Plan, JPL/NASA). Requires the Excel\n% spreadsheet 'MER_sol4_input_data.xls' to be in the same directory. Determines the\n% profile of the battery state of charge given the load and source power profiles,\n% and plots the results.\n%\n% Outputs:\n% T\n[min] Time vector\n% L\n[W] Power load profile\n% A\n[W] Power source profile\n% E\nTime profile of fraction of battery being used\n% W\n[W] Power dissipation profile\n% LIFE Fraction of remaining usable battery lifetime\n%\n% read in data from the Excel spreadsheet\n[data,clocks] = xlsread('MER_sol4_input_data.xls');\n% time history of the load power\nval = data(:,1);\nval = val(find(val(:,1)>=0));\ntimes = clocks(:,1);\ntimes = times(1:length(val));\ntime = t2ms(times);\n[tL,L] = create_profile(time, val, 4);\n% time history of the array power\nval = data(:,3);\n\nval = val(find(val(:,1)>=0));\ntimes = clocks(:,3);\ntimes = times(1:length(val));\ntime = t2ms(times);\n[tA,A] = create_profile(time, val, 0);\nif (sum(tA-tL)~=0)\nerror('Error! Load and input power profiles have different time vectors.');\nend\nt\n= tA;\n% common time profile\ndt = 60;\n% [s] chosen to simplify calculations\nlife0 = 1.0;\n% fraction of life span remaining at start of period\nenergy_max\n= 448*3600; % Joules\nenergy_initial = 0.59*energy_max;\n% battery properties\nefficiency\n= 1.0;\nslope\n= -0.28;\nintercept = 1.67;\n% find the output\n[EE, invalid, W, life] = battery_profile(length(t), dt, L, A, energy_initial, ...\nenergy_max, life0, efficiency, slope, intercept);\n% warn if energy drops below zero\nif length(invalid)>0\ndisp('Battery energy went negative; invalid design.');\nend\n% change to a percentage\nE = EE/energy_max;\n% plot the data\nh=figure(1);\nsubplot(311)\nplot_results('original', t/60, L, A, E, W);\nsubplot(312)\nplot_results('ourdata', t/60, L, A, E, W);\nsubplot(313)\nplot_results('all', t/60, L, A, E, W);\n% scale the plot\nhmargin = 0;\nvmargin = 0;\norient tall;\nset(h,'PaperPosition',[hmargin vmargin (8.5-2*hmargin) (11-2*vmargin)]);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%\n% Plots the time profiles of L, A, E, and W as functions of t.\n% 'What' tells which data are to be plotted.\nfunction plot_results(what, t, L, A, E, W)\nif strcmp(what,'original') | strcmp(what,'all')\nax(1) = newplot;\nset(gcf,'nextplot','add')\n% read in and display the MER power profile image\nimg = imread('MER_sol4_power_profile.png','png');\nh1 = image(img);\nset(ax(1),'visible','off');\nset(ax(1),'box','off')\n% rescale the width by 80% (left-justified)\npos = get(ax(1),'position');\npos(3) = 0.8*pos(3);\nset(ax(1),'position',pos);\nend\n\nif strcmp(what,'original')\n% create a dummy axis on which to make a legend\ndummyax = axes('position',[1 1 1/0.8 1].*get(ax(1),'position'));\n% make dummy plots with the colors we will use for the real data\nplot(-1,-1,'b-',-1,-1,'g-',-1,-1,'m-',-1,-1,'r-');\naxis([0 1 0 1]);\nset(dummyax,'color','none','box','off','XTick',[],...\n'XTickLabel',[],'YTick',[],'YTickLabel',[])\n% create the legend\nh=legend('Load power','Source power','Excess power','Battery SOC',-1);\ntitle('Energy balance for MER A egress (Sol 4) from MER Mission Plan');\nreturn;\nend\nif strcmp(what,'ourdata')\nax(2) = newplot;\npos = get(ax(2),'position');\npos(3) = 0.7*pos(3);\nset(ax(2),'position',pos);\nelse\nax(2) = axes('position',get(ax(1),'position'));\nend\nif strcmp(what,'ourdata') | strcmp(what,'all')\n% the source, load and excess powers, and a line to make the top look nice\nh2 = plot(t, A, 'g-', t, L, 'b-', t, W, 'm-', [0 24],[140 140],'k-');\nif strcmp(what,'ourdata')\nset(ax(2),'xgrid','off','ygrid','off','box','off');\nelse\nset(ax(2),'color','none','xgrid','off','ygrid','off','box','off');\nend\nset(gcf,'nextplot','add')\naxis([0 24 0 140]);\nset(ax(2),'XTick',[]);\nylabel('Power [W]')\n% the battery state of charge percentage, with right-side axis\nax(3) = axes('position',get(ax(2),'position'));\nh2 = plot(t, 100*E, 'r-');\nset(ax(3),'YAxisLocation','right','color','none', ...\n'xgrid','off','ygrid','off','box','off');\naxis([0 24 0 100]);\nset(ax(3),'XTick',[0 6 12 18 24]);\nylabel('Battery state of charge [%]')\nend\nset(gcf,'nextplot','replace');\nxlabel('Time [Mars hours]');\nif strcmp(what,'ourdata')\ntitle('Simulation data. Outputs are battery SOC and excess power.');\nelse\ntitle('Simulation data overlayed on MER mission plan data');\nend\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%\n% translates corner value hh:mm to minutes\nfunction corner_times = t2ms(times)\nfor i=1:length(times)\ncorner_times(i) = t2m(times{i});\nend\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%\n\n% creates a power profile given corner values. corner_times must be integers.\nfunction [t,L] = create_profile(corner_times, corner_values, initial)\n% check for validity of inputs\nif length(corner_times) ~= length(corner_values)\nerror('Error! Invalid input to create_profile()');\nend\nif sum(corner_times==round(corner_times))~=length(corner_times)\nerror('Error! Input to create_profile() ''corner_times'' must contain only integers.');\nend\n% make sure there is a time zero\nt = 0:corner_times(length(corner_times));\nif (corner_times(1) ~= 0)\ncorner_times = [0 corner_times];\ncorner_values = [initial corner_values];\nend\n% fill in the time profile with equal steps\nfor i=1:length(corner_times)-1\nt0 = corner_times(i);\nt1 = corner_times(i+1);\ndt = t1-t0;\nL(t0+2:t1+1) = (corner_values(i+1)-corner_values(i))/dt*(1:dt)+corner_values(i);\nend\nL(1) = initial;\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%\n% changes hh:mm to number of minutes since midnight\nfunction [min] = t2m(time)\ndiv = find(time==':');\nif length(div)~=1\nerror('Error! Invalid input to function t2m().');\nend\nmin = str2num(time(1:div-1))*60 + str2num(time(div+1:length(time)));\nplot_battery_dod_cycles.m\nfunction plot_battery_dod_cycles(varargin)\n% PLOT_BATTERY_DOD_CYCLES\n% PLOT_BATTERY_DOD_CYCLES(FIGNUM)\n% PLOT_BATTERY_DOD_CYCLES(AXES_HANDLE)\n%\n% Plots the depth of discharge (DOD) as a function of cycle repetition lifetime\n% Creates a new figure, or plots to figure number FIGNUM.\n% read the data from the Excel spreadsheet\n[storage, generation, solar] = power_read_xls('power_design_vector.xls');\n% check if any data were found\nslen = length(storage);\nif slen==0\ndisp('Warning. No energy storage device data found.');\nreturn;\nend\n% check to see where it is supposed to plot\nif nargin>0\nvar = varargin{1};\nif var-fix(var) == 0\n% set the figure\nfigure(varargin{1});\nelse\n% set the axes\naxes(var)\n\nend\nelse\n% create a new figure\nfigure;\nend\n% record hold state\nwashold = ishold;\n% set up plotting properties for easy access later\ncolors = 'bgrmcy';\ncolors = [colors colors colors colors colors colors colors];\npoints = 'ox+sd<>';\npoints = [points points points points points points points];\n% initialize\ntypes{1} = '';\nlegstr = [];\ncount = 0;\n% look at all elements in the storage structure\nfor i=1:slen\n% check to see if we have seen this type yet\nif ~ismember(storage(i).Type, types)\n% add the newly found type to the list of known types\ncount = count+1;\ntypes{count+1} = storage(i).Type;\n% get the line properties from the battery characteristics\n[slope, intercept] = slope_intercept(storage(i).DOD, storage(i).Cyclelife);\n% ignore the case when fatigue is not a factor\nif slope==0 & intercept==0\ncontinue;\nelse\n% add on the the string that we will eval for the legend\nlegstr = [legstr ',''' storage(i).Type ' (' storage(i).PartNumber ')' ''''];\n% offset the points so we can see overlapping data sets\nx=[-1:7] + count/8;\ny=slope*x+intercept;\n% plot the line\nplot(x,100*y,[colors(count) points(count) '-']);\nend\nhold on;\nend\nend\n% return the hold state to its previous value\nif ~washold\nhold off;\nend\n% set nice axis limits and turn on the grid\naxis([0 8 0 100]);\ngrid on;\n% negatize the x ticks, since we're looking at the inverse of the plotted value\nh=gca;\nticks = str2num(get(h,'XTickLabel'));\nset(h,'XTickLabel',num2str(-ticks));\n% label the plot\ntitle('Depth of discharge vs cycle life for secondary batteries');\nxlabel('Fraction of life lost in one charge/discharge cycle [log_{10}(x)]');\nylabel('Depth of discharge [%]');\n% create a legend\n\nlegstr = legstr(2:length(legstr));\neval(['legend(' legstr ')']);\npower_read_xls.m\nfunction [storage, generation, solar] = power_read_xls(filename)\n%[STORAGE, GENERATION, SOLAR] = POWER_READ_XLS(FILENAME)\n%\n% Reads in data from the Excel file FILENAME, and parses it into\n% data structures. The file must contain sheets named 'Storage',\n% 'Generation', and 'Solar', and the sheets must be arranged in\n% a particular format, or an error will result. See the file\n% 'power_design_vector.xls' for an example of proper format.\n%\nstorage = [];\ngeneration = [];\nsolar\n= [];\n% read in the energy storage info\n[num, txt] = xlsread(filename,'Storage');\n% add on new field names one by one\nfor i=1:size(txt,1)\nstorage = setfield(storage, txt{i,1}, []);\nend\nnames = fieldnames(storage);\ni_offset = size(txt,1) - size(num,1);\nj_offset = size(txt,2) - size(num,2);\nfor i=1:size(txt,1)\nfor j=3:size(txt,2)\nif i<=i_offset\neval(['storage(j-2).',names{i},'= ''',txt{i,j}, ''';']);\nelse\neval(['storage(j-2).',names{i},'= num(i-i_offset,j-j_offset);']);\nend\nend\nend\n% read in the power generation info\n[num, txt] = xlsread(filename,'Generation');\nfor i=1:size(txt,1)\ngeneration = setfield(generation, txt{i,1}, []);\nend\nnames = fieldnames(generation);\ni_offset = size(txt,1) - size(num,1);\nj_offset = size(txt,2) - size(num,2);\nfor i=1:size(txt,1)\nfor j=3:size(txt,2)\nif i<=i_offset\neval(['generation(j-2).',names{i},'= ''',txt{i,j}, ''';']);\nelse\neval(['generation(j-2).',names{i},'= num(i-i_offset,j-j_offset);']);\nend\nend\nend\n% read in the solar array info\n[num, txt] = xlsread(filename,'Solar');\nfor i=1:size(txt,1)\nsolar = setfield(solar, txt{i,1}, []);\nend\n\nnames = fieldnames(solar);\ni_offset = size(txt,1) - size(num,1);\nj_offset = size(txt,2) - size(num,2);\nfor i=1:size(txt,1)\nfor j=3:size(txt,2)\nif i<=i_offset\neval(['solar(j-2).',names{i},'= ''',txt{i,j}, ''';']);\nelse\neval(['solar(j-2).',names{i},'= num(i-i_offset,j-j_offset);']);\nend\nend\nend\nslope_intercept.m\nfunction [slope, intercept] = slope_intercept(dod, cycles)\n%[SLOPE, INTERCEPT] = SLOPE_INTERCEPT(DOD, CYCLES)\n%\n% Returns the slope and intercept of a plot of the depth of discharge as a function\n% of the log10 of the number of cycles in the device lifetime.\n%\n% Inputs:\n% DOD\nDepth of discharge. Fraction of the energy discharged.\n% CYCLES\nNumber of cycles possible at given depth of discharge.\n%\n% Outputs:\n% SLOPE\nSlope of plot of DOD as a function of log10 of the cycle life.\n% INTERCEPT DOD-axis intercept of plot.\n%\n% If CYCLES=0, SLOPE=0 and INTERCEPT=0 will be returned. Otherwise, SLOPE=-0.28\n% and INTERCEPT corresponding to the DOD, CYCLES pair will be returned.\n%\n% check for invalid inputs\nif (dod>1 | dod<0)\nerror('Error! Depth of discharge must be between zero and one.');\nend\nif (cycles<0)\nerror('Error! Number of cycles must be non-negative.');\nend\n% any device that does not exhibit changes in lifetime with depth of discharge.\nif cycles==0\nslope\n= 0;\nintercept = 0;\n% any other device\nelse\n% from SMAD III, p.421\nslope\n= -0.28;\n% from y = m * log10(x) + b\nintercept = dod-slope*log10(cycles);\nend\n\n:45\nMER_sol4_input_data.xls\n0:0\n3 0:0\n9:00\n124 12:00\n4:38\n3 5:50\n9:01\n58 12:15\n4:39\n59 6:15\n10:25\n58 12:30\n4:53\n63 6:30\n10:26\n67 12:45\n4:54\n124 6:45\n10:55\n67 13:00\n4:59\n124 7:00\n10:56\n58 13:15\n5:00\n63 7:15\n10:59\n58 13:30\n5:01\n59 7:30\n11:00\n124 13:45\n5:02\n3 7:45\n11:57\n124 14:00\n6:42\n3 8:00\n11:58\n58 14:15\n6:43\n75 8:15\n13:19\n58 14:30\n6:49\n75 8:30\n13:20\n67 14:45\n6:50\n22 8:45\n13:45\n67 15:00\n7:15\n22 9:00\n13:46\n58 15:15\n7:16\n98 9:15\n13:50\n58 15:30\n7:17\n98 9:30\n13:51\n124 15:45\n7:18\n76 9:45\n14:47\n124 16:00\n7:24\n76 10:00\n14:51\n3 16:15\n7:25\n59 10:15\n16:00\n3 16:30\n7:29\n59 10:30\n16:01\n64 16:45\n7:30\n112 10:45\n16:15\n64 17:00\n7:56\n112 11:00\n16:16\n124 17:15\n7:57\n56 11:15\n16:21\n124 17:30\n8:00\n56 11:30\n16:22\n3 17:45\n8:01\n124 11:45\n24:00\n3 18:00\n9:00\n124 12:00\n24:00\nPowerDesignVector.xls\nPartNumber\ntext\nRNH30-9\nRNH81-5\nRNH160-3\nINCP77\nMSP01\nINCP95\nSZHR25\nSZHR25\nCompany\ntext\nEagle-Picher\nEagle-Picher\nEagle-Picher\nLithion\nLithion\nLithion\nEagle-Picher\nEagle-Picher\nDevice\ntext\nSecondaryBattery\nSecondaryBattery\nSecondaryBattery\nSecondaryBattery SecondaryBattery SecondaryBattery SecondaryBattery SecondaryBattery\nType\ntext\nNickel-Hydrogen IPV Nickel-Hydrogen IPV Nickel-Hydrogen IPV Lithium Ion\nLithium Ion\nLithium Ion\nSilver Zinc\nSilver Zinc\nName\ntext\n\n1.1\n\n1.2\n\n1.3\n3.1\n3.2\n3.3\n4.1\n4.2\n\nSpecificEnergy\nW hr/kg\nEnergyDensity\nW hr/L\nRatedCapacity\nA hr\nNominalVoltage\nV\n1.25\n1.25\n1.25\n14.4\n3.6\n1.5\n1.5\nMass\nkg\n0.997\n2.55\n4.18\n1.5\n17.8\n0.87\n0.5\n0.55\nDiameter\nm\n0.0892\n0.0902\n0.1178\n0.075\n0.1\n0.05\n0.015\n0.054\nLength\nm\n0.2286\n0.32\n0.307\n0.025\n0.129\n0.12\n0.05\n0.085\nMaxCycles\nnum\nCoulombicEfficiency %\n0.95\n0.99\n0.99\n0.99\nFadeRate\n%/cycle\n0.5\n0.5\n0.5\n0.02\n0.02\n0.02\n0.5\n0.5\nLife\nyears\n\n0.5\n\n0.5\n\nCost\n$\n\nTRL\nnum\n\nDOD\nfraction\n0.55\n0.55\n0.55\n0.8\n0.8\n0.8\n0.5\n0.5\nCyclelife\nnum\nName\nUniqueNameTBD UniqueNameTBD UniqueNameTBD UniqueNameTBD UniqueNameTBD UniqueNameTBD UniqueNameTBD UniqueNameTBD\nDevice\nRTG\nRTG\nRTG\nRTG\nRTG\nRTG\nRTG\nRTG\nType\nSNAP-19\nViking1\nCassini\nMMRTG\nSRG\nGPHS\nSNAP-3B7\nSNAP-27\nCompany\nReference\n16.89CDR\n16.89CDR\n16.89CDR\n16.89CDR\n16.89CDR\n16.89CDR\n16.89CDR\n16.89CDR\nPower\nW\n40.3\n2.7\n73.4\nMass\nkg\n13.6\n15.4\n2.1\nDiameter\nm\n0.508\n0.58\n0.41\n0.41\n0.27\n0.097\n0.61\n0.58\nLength\nm\n0.23\n0.4\n1.12\n0.6\n0.89\n0.093\n0.865\n0.4\nLife\nyears\nCost\n$\nTRL\n\nName\ntext\nSilicon\nGaAs\nMultijunction\nRef\ntext\nclass\nclass\nclass\nDevice\ntext\nSolar Array\nSolar Array\nSolar Array\nEfficiency\n0.148\n0.185\n0.22\nInherentDegradation\n0.77\n0.77\n0.77\nInitialDegradation\nDegradationRate 1/sec\n1.1883E-09\n7.92202E-10\n7.92202E-10\nDensity\nkg/m^2\n0.55\n0.85\n0.85\nK\nconstant\n0.5\n0.185\n0.22\nCostPerArea\n$/m^2\n\nmasterloop.m\nclear all\n%take in the design vector\n[storage, generation, solar] = power_read_xls('power_design_vector.xls');\n%storage type\nNumber\n%Nickel-Hydrogen IPV 1\n%Nickel-Hydrogen CPV 2\n%Lithium Ion\n%Silver Zinc\n%Fly Wheel\n[ENV]=environmentfun;\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%INPUTS$$$$$$$$$$$$$$$$%%%%%%%%%%%%%%%%%%%%\n%take in data file\n%[data,clocks] = xlsread('MER_sol4_input_data.xls'); %sample data file\n%[time, L, A]=parseinputdata(data,clocks);\n%time vector\nt_f = 5 * 24 * 60;\ndt=60;\ntime = dt*[0:1:t_f];\n% Orbital Period [sec]\nop = 90 * 60;\n% Incident Angle [rad]\n%incident_angle = 0:2*pi/op*dt:time(length(time))*2*pi/op;\n%incident_angle = mod(0:2*pi/op*dt:time(length(time))*2*pi/op,pi) - pi/2*ones(1,length(time));\nincident_angle = mod(0:2*pi/op*dt:time(length(time))*2*pi/op,pi) - pi/2*ones(1,length(time));\nfor i = 1:length(incident_angle)\nif mod(i,91) > 41\nincident_angle(i) = pi/2;\nend\nend\n%power_load requirement(W)\n%power_load = 75 + 25 * sin(time);\npower_load(1:length(time)) = 100 + 50*round(sin(time*3*pi/3600));\nlife_init = 1.0;\n% fraction of life span remaining at start of period\nenergy_max\n= 44.8*3600; % Joules\nenergy_initial = 0.59*energy_max;% Joules\n%solar array vector\nSA_area=1:1:4; %m^2\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\nstorage_design_length=length(storage); %find max length of storage design\ngeneration_design_length=length(generation);%find max length of generator design\nsolar_design_length=length(solar);%find max length of solar design\nSA_design_length=length(SA_area);\nstcnt=1;%storage counter\nsocnt=1;%solar cnt\ngecnt=1;%generator cnt\nSAcnt=1;\n%debug code\nfor stcnt=1:storage_design_length\nstorage(stcnt).InitialCharge=energy_initial;\n% storage(stcnt).InitialCharge=0;\nstorage(stcnt).RemainingLife=life_init;\n\n'solar cycle'\n%Pick either SOlar or RTG (generation)\nfor socnt=1:solar_design_length\nfor SAcnt=1:SA_design_length\n%outside loop\nsolar(socnt).IncidentAngle = incident_angle;\nsolar(socnt).SurfaceArea = SA_area(SAcnt);\nSAResult(stcnt,socnt,SAcnt)= PowerDesignResult({solar(socnt)}, storage(stcnt), power_load,ENV,time);\nend\nend %done with Solar options\n'RTG cycle'\n%try RTG options\nfor gecnt=1:generation_design_length\nRTGResult(stcnt,gecnt) = PowerDesignResult({generation(gecnt)}, storage(stcnt), power_load,ENV,time);\nend\nend\nEffectivePowerIntensity.m\nfunction effective_power_intensity = EffectivePowerIntensity(illumination_intensity, incident_angle);\n%EFFECTIVEPOWERINTENSITY Effective Power Intensity.\n%\n%\nI_EFF = EFFECTIVEPOWERINTENSITY(SI, IA) computes the time profile\n%\nof the effective illumination intensity SI due to the illumination\n%\nincident angle IA. The unit of I_EFF is [W/m^2].\n%\n%\nThe powerIntensity(t) is a vector that represents the time profile\n%\nof the illumination intensity [W/m^2].\n%\n%\nThe incidentAngle(t) is a vector that represents the time profile\n%\nof the illumination incident angle (i.e the angle between the vector\n%\nnormal to the surface and the line of illumination) [radians].\n%\neffective_power_intensity = illumination_intensity .* cos(incident_angle);\nenvironmentfun.m\nfunction [ENV] = environmentfun\n%\nENVIRONMENT MODULE\n%\n%\n-------------------------------------------------------------------\n%\nGlobal INPUT\nVARIABLE NAME UNIT\n%\n%\n-------------------------------------------------------------------\n%\nCONSTANTS\nVARIABLENAME UNIT\n%\n%\n-------------------------------------------------------------------\n%\nINTERNAL OUTPUTS\nVARIABLE NAME UNIT\n%\n-------------------------------------------------------------------------\n%\nOUTPUTS\n\nVARIABLE NAME UNIT\n%\n%\nSun Illumination Intensity\nilluminationIntensity W/m^2\n%\n-------------------------------------------------------------------------\nENV.IlluminationIntensity = 1367;\n\nPowerDesignResult.m\nfunction R = PowerDesignResult(power_source, energy_storage, power_load, environment, t);\n% R = POWERDESIGNRESULTS(POWER_SOURCE, ENERGY_STORAGE, POWER_LOAD, ENVIRONMENT, T)\n%\n% Inputs:\n% POWER_SOURCE\nDesign specification of the power source.\n% ENERGY_STORAGE\nEnergy storage device design specification.\n% POWER_LOAD\nPower load requirement.\n% ENVIRONMENT\nEnvironment specification.\n% T\nTime.\n%\n% Outputs:\n% R\nStruct of the results:\n% .Mass\nTotal power subsystem mass [Kg].\n% .Cost\nTotal cost of the power subsystem [US$].\n% .AvailablePower\nPower availble from the power source [W].\n% .AvailableEnergy\nEnergy available from the energy storage [J].\n% .EnergyStorageInvalid Time at which the enery was insufficient.\n% .EnergyDissipation Required energy dissipation.\n% .EnergyStorageLifeRemaining\nRemaining life on the energy storage.\n% Initialize the mass of the design.\nR.Mass = 0;\n% Initialize the cost of the design.\nR.Cost = 0;\n% Initialize the available power.\nR.AvailablePower = zeros(1,length(t));\n% Initialize the available engergy.\nR.AvailableEnergy = zeros(1,length(t));\n% For each power source:\nfor i = 1:length(power_source)\n% The power source is a solar array:\nif strcmp(power_source{i}.Device,'Solar Array')\n%if not(isfield(enviornment,'illumination_intensity'))\n% error('To use a solar array, the illumination intensity \"illuminationIntensity\" must be specified within the environment\")\n%end\n% Compute the effective illumination intensity given the\n% illumination intensity and the incident angle of of the\n% illumination.\neffective_intensity = ...\nEffectivePowerIntensity(environment.IlluminationIntensity, ...\npower_source{i}.IncidentAngle);\n% Compute the power generated pwer area of the solar array.\npower_per_area = SolarPowerPerArea(power_source{i},effective_intensity,t);\n% Compute the power available.\nR.AvailablePower = R.AvailablePower ...\n+ power_source{i}.SurfaceArea * power_per_area;\n% Compute the mass of the solar array.\nR.Mass = R.Mass ...\n+ power_source{i}.Density * power_source{i}.SurfaceArea;\nR.SAMass=power_source{i}.Density * power_source{i}.SurfaceArea;\nR.RTGMass=0;\nR.MassINV=0;\nR.CostINV=0;\n% Compute the cost of the solar array.\nR.Cost = R.Cost ...\n+ power_source{i}.CostPerArea * power_source{i}.SurfaceArea;\n% The power source is an RTG:\nelseif strcmp(power_source{i}.Device,'RTG')\n% Compute the power availble.\nR.AvailablePower = R.AvailablePower + RTGPower(power_source{i},t);\n% Lookup the mass of the RTG.\nR.Mass = R.Mass + power_source{i}.Mass;\nR.MassINV=0;\nR.CostINV=0;\nR.SAMass=0;\nR.RTGMass=power_source{i}.Mass;\n\n% Lookup the cost of the RTG.\nR.Cost = R.Cost + power_source{i}.Cost;\n% Do not recognize the power source type:\nelse\nerror('Unrecognized power source was defined.');\nend\nend\n[slope, intercept] = slope_intercept(energy_storage.DOD, energy_storage.Cyclelife);\n% Compute energy available from the energy storage device.\n[R.AvailableEnergy, R.EnergyStorageInvalid, ...\nR.EnergyDissipation, R.EnergyStorageLifeRemaining] = battery_profile(...\nlength(t), ...\n% Number of time steps\nt(2) - t(1), ...\n% Time increment\npower_load, ...\nR.AvailablePower, ...\n...%energy_storage.InitialCharge, ...\n% Initial energy available\nenergy_storage.SpecificEnergy * energy_storage.Mass * 0.6, ... % Initial energy available\nenergy_storage.SpecificEnergy * energy_storage.Mass, ... % Max chargin capacity\nenergy_storage.RemainingLife, ...\n% Remaing Life\nenergy_storage.CoulombicEfficiency, ... % Efficiency\nslope, ...\nintercept);\nif (length(R.EnergyStorageInvalid) > 0)\n%disp('Invalid energy storage device.')\nR.MassINV=R.Mass + energy_storage.Mass;\nR.CostINV=R.Cost + energy_storage.Cost;\nR.Mass=NaN;\nR.Cost=NaN;\nR.STMass=NaN;\nelse\n% Compute the mass if the energy storage device.\nR.Mass = R.Mass + energy_storage.Mass;\nR.STMass=energy_storage.Mass;\n% Cost of the power subsystem design.\nR.Cost = R.Cost + energy_storage.Cost;\nR.MassINV=NaN;\nR.CostINV=NaN;\nend\nRTGPower.m\nfunction P = RTGPower(RTG, t);\n% P = RTGPOWER(RTG, T)\n%\n% Inupts:\n% RTG\nSpecification of the RTG\n% t\nTime length in a finite discret increments\ninitial_power = RTG.Power;\n% initial Power\nP = initial_power * exp(-1/(87.74*365*24*3600)*t); % assume Pu238 half life\nSolarPowerPerArea.m\nfunction P = SolarPowerPerArea(solar_array, effective_intensity, t);\n% P = SOLARPOWERPERAREA(SOLAR_ARRAY, EFFECTIVE_INTENSITY, T)\n%\n% Inputs\n%\nSOLAR_ARRAY\nSpecifies the type and the specificatution of solar array\n%\nEFFECTIVE_INTENSITY Effective power intensity due to incident angles.\n%\nT\nTime sequence.\n\n% Outpus\n%\nP\nPower per area of a solar array.\nif (length(t) ~= length(effective_intensity))\nerror('The length of the vectors of effective intensity and time do not match.');\nP = 0;\nelse\nt_0 = t(1);\nfor i = 1:length(t)\nP(i) = CurrentPowerPerArea(solar_array, effective_intensity(i), t_0, t(i));\nend\nend\nfunction P_current = CurrentPowerPerArea(solar_array, effective_intensity, t_0, t)\nP_current = solar_array.Efficiency * solar_array.InherentDegradation ...\n* (1 - (solar_array.InitialDegradation + solar_array.DegradationRate ...\n* (t - t_0))) * effective_intensity;\nTestPowerDesignResult.m\nclear;\nclose all;\n% Initial Time [sec]\nt_0 = 0;\n% Final Time [sec]\nt_f = 5 * 24 * 3600;\n% Time Increment [sec]\ndt = 50;\nt = t_0:dt:t_f;\nenvironment.IlluminationIntensity = 1367*ones(1,length(t));\n[storage, generation, solar] = power_read_xls('power_design_vector.xls');\n% Obital Period [sec]\nop = 90 * 60;\n% Incident Angle [rad]\nincident_angle = 0*t;\n% Power Load\npower_load = 100 * sin(t/t_f*pi);\npower_source{1} = solar(1);\npower_source{1}.IncidentAngle = incident_angle;\npower_source{2} = solar(3);\npower_source{2}.IncidentAngle = incident_angle;\npower_source{1} = generation(1);\nenergy_storage = storage(1);\nenergy_storage.InitialCharge = 30;\nenergy_storage.RemainingLife = 1;\narea = [1 2 3 4 5]; %[m^2]\nfor i=1:length(area)\npower_source{1}.SurfaceArea = area(i); %[m]\npower_source{2}.SurfaceArea = area(i); %[m]\ndesign(i) = PowerDesignResult(power_source, energy_storage, power_load, environment, t);\nend\nfor i=1:length(area)\nfigure(1)\nhold on\nplot(area(i),design(i).Mass,'o');\nfigure(2)\n\nhold on\nplot(area(i),design(i).Cost,'o');\nfigure(3)\nhold on\nplot(t,design(i).AvailablePower);\nfigure(4)\nhold on\nplot(t,design(i).AvailableEnergy);\nend\nTestSolarArray.m\nclear;\nclose all;\n[storage, generation, solar] = power_read_xls('power_design_vector.xls')\n% eta: efficiency\n% d_0: initial degradation\n% d_dot: degradation rate\n% I_eff: effective power intensity\n% P_profile: profile of power per unit area\n% P_current: currently available power per unit area\nsolar_array.Device = 'Solar Array';\nsolar_array.Efficiency = 0.185;\nsolar_array.InherentDegradation = 0.77;\nsolar_array.InitialDegradation = 0.01;\nsolar_array.DegradationRate = 0.0275/365.25/24/3600;\n% Initial Time [sec]\nt_0 = 0;\n% Final Time [sec]\n%t_f = 365.25 * 24 * 3600;\n%t_f = 5 * 24 * 3600;\nt_f = 50000;\n%t_f = 1000000000;\n% Time Increment [sec]\n%dt = 24 * 3600;\ndt = 5;\n%dt = 1000000;\nt = t_0:dt:t_f;\n% Power Intensity [W/m^2]\npower_intensity = 1367*ones(1,length(t));\n% Obital Period [sec]\nop = 90 * 60;\n% Incident Angle [rad]\nincident_angle = mod(0:2*pi/op*dt:t(length(t))*2*pi/op,pi) - pi/2*ones(1,length(t));\nfor i = 1:length(incident_angle)\nif mod(i,1082) > 541\nincident_angle(i) = pi/2;\nend\nend\neffective_power_intensity = EffectivePowerIntensity(power_intensity, incident_angle);\navailable_power_per_area = SolarPowerPerArea(solar_array, effective_power_intensity, t);\nplot(t, power_intensity, t, effective_power_intensity, t, available_power_per_area);\nlegend('Solar Radiation','Effective Radiation','Available Power Intensity');\nrtg_power = RTGPower(generation(1),t);\nrtg_power_final=min(rtg_power);\nfigure(2)\nplot(t,rtg_power)"
    },
    {
      "category": "Resource",
      "title": "ps1_cs_ps1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/63be0302daa2543088e6646166135177_ps1_cs_ps1.pdf",
      "content": "16.851 - SATELLITE ENG INE ER ING MEMORANDUM\nTO:\n16.851 FACULTY\nFROM:\nSTUDENTS\nSUBJECT: PROBLEM SET #1 QUESTION DEFINITION\nDATE:\n9/7/2003\nMotivation:\nTo provide ease of launch vehicle selection given spacecraft design specifications.\nProblem Statement:\nDesign a launch vehicle decision tool. Given specific payload constraints, such as\npayload mass, payload dimensions, number of spacecraft, required launch\nfrequency, minimum reliability, and desired orbit, output the launch vehicles that\nsatisfy those requirements. The design tool then should be able to optimize the\nselection on other criteria such as cost or reliability and output information needed\nfor other design considerations such as launch site and fairing specifications. The\ntool will be capable of being updated with current launch vehicle specifications as\nthey are available (reliability, thrust, availability, etc.)\nApproach:\nFirst, a literature survey will be performed to gather currently available launch\nvehicle specifications. This data will be stored in a standardized data structure for\nease of future updates. Next, a selection flow chart will be laid out to prioritize\ndown selection criteria/logic for the software tool. The software tool will then be\ncoded incorporating the data and selection logic. The tool will allow the user to\ncontrol the number of input constraints."
    },
    {
      "category": "Resource",
      "title": "ps1_cs_solution.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/c019f9b572b7219210ec9d581100876f_ps1_cs_solution.pdf",
      "content": "16 .8 51 - SATELLITE E NGINEERING MEMORANDUM\nTO:\n16.851 FACULTY\nFROM:\nSTUDENTS\nSUBJECT: PROBLEM SET #1\nDATE:\n9/17/2003\nMotivation:\nLaunch vehicle selection and deployment strategies are an important and expensive\nissue for satellite development. We want to provide ease of launch vehicle selection given\nspacecraft design specifications.\nProblem Statement:\nDesign a launch vehicle decision tool. Given specific payload constraints, such as\npayload mass, payload dimensions, required launch frequency, maximum acceleration\nloads, and desired orbit, output the launch vehicles that satisfy those requirements.\nThe design tool then should be able to optimize the selection on other criteria such\nas cost, risk, performance margin, and availability. The tool will be capable of being\nupdated with current launch vehicle specifications as they are available (reliability,\ncost, availability, payload mass, etc.)\nApproach:\nFirst, a literature survey will be performed to gather currently available launch vehicle\nspecifications. This data will be stored in a standardized data structure for ease of\nfuture updates. Next, a selection flow chart will be laid out to prioritize down\nselection criteria/logic for the software tool. The software tool will then be coded\nincorporating the data and selection logic. The tool will allow the user to control the\nnumber of input constraints.\n\nSolution:\nI. Requirements Specifications:\nGiven specific payload constraints (Table 1), output the launch vehicles that satisfy\nthose requirements and optimize them according to user flagged options. Any\ncombination of constraints can be applied to the selection process. The tool should\nbe coded generically so that any new or updated launch vehicle can be added to the\ndatabase as manufacturer data are available. Given a databases of launch vehicles,\nthe tool will expand the database to include all variants of any one class of vehicle.\nAfter down selecting a set of vehicles by applying the constraints, the tool will\noptimize the remaining set of vehicles by a particular parameter (Table 2).\nII. Problem Inputs:\nThe program inputs consist of a payload data structure containing the desired\nconstraints and the optimization flags (Table 1 & 2). This structure is generated by\nthe \"payload_dat.m\" file (please see attached file) The launch vehicle database\nconsists of a file for each vehicle class that contains all of the relevant specification\ndata and one central file that loads all the vehicle data plus the payload data\n(\"load_data.m\"). The launch vehicle data also includes information on the vehicle\nclass variants and the appropriate launch sites for the vehicle. (Please see attached\nfiles). The supplied database contains many common vehicles used for commercial\npayload launches.\nTable 1: Payload Constraints for Launch Vehicle Tool\nConstraint\nDescription\nmass\n[kg], total payload mass (spacecraft, adaptors, propellant, etc)\ndiameter\n[m], payload diameter\nheight\n[m], payload height\ninclination\n[deg], desired orbit inclination\nlaunchfreq\n[launches/year], launch frequency\nmax_axial_accel\n[g], maximum axial acceleration\nmax_lat_accel\n[g], maximum lateral acceleration\nlat_freq\n[Hz], minimum lateral frequency\nlong_freq\n[Hz], minimum longitudinal frequency\nacoustic\n[dB], noise intensity\nmax_aeroheating\n[W/m^2], aero heating after fairing deploy\nair_clean\n[class], air cleanliness class\norbital_accu_alt\n[km], allowable LEO insertion altitude error (+/-)\norbital_accu_incl\n[deg], allowable LEO insertion inclination error (+/-)\n\nTable 2: Payload Optimization Flags for Launch Vehicle Tool\nOptimization\nParameters\nDescription\ncost\n[Mil $], minimize cost\nrisk\n[Mil $], minimize risk,\nst\nvehicle_co\ny\nreliabilit\nvehicle\nrisk\nÃ\n-\n=\n)\n_\n1 (\nperformance\nmargin\n[kg], maximize performance margin,\nmass\npayload\ncapability\npayload\nvehicle\npmargin\n_\n_\n_\n-\n=\navailability\nmaximize availability,\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\n-\nÃ\n-\nÃ\n-\n=\n)\n_\n/(\n)\n(\n)\n_\n1 (\n)\n(\ncapacity\nsurge\nime\nstandown_t\nty\nreliablili\nvehicle\nlaunchfreq\nty\navailabili\nabsolute cost\n[Mil $], minimize absolute cost,\n(\n)\n(\n)\nst\nvehicle_co\ny\nreliabilit\nvehicle\nst\nvehicle_co\nt\nabsolute\nÃ\n-\n+\n=\n_\ncos\n_\nIII. Software Execution Procedure:\nThe launch vehicle selection tool is executed using Matlab. First the payload input is\nspecified by the user by editing the \"payload_dat.m\" file. Next the vehicle database\nand payload input must be loaded into the Matlab workspace. This is accomplished\nby executing the script, \"load_data.m\". The tool is executed by entering at the\nMatlab command prompt:\n>> selected_vehicles = launcher_select(payload, veh);\nThe constrained and optimized set of launch vehicles will be stored as a data\nstructure in the \"selected_vehicles\" variable. This structure contains all the\nvehicle specifications plus the newly calculated optimization parameters.\nIV. Expected Outputs:\nThe outputs consist of a sorted list of launch vehicles that meet all user input\nconstraints and are optimized with respect to one specified user flag (Table 2). The\noutput can also include several figures that depict various trends of the selected\nlaunch vehicles.\n\nV. Pseudo-Code (Very Simplified):\nSolution launch_select( payloadInput, launchVehicleDatabase) {\n\nSolution solution;\n\nSites sites;\n\nchooseSites(payloadInput, launchSites);\n\nfilterConstraints(payloadInput, launchVehicleDatabase);\n\nsolution = sort(launchVehicleDatabase, option);\nreturn solution\n}\nVI. User's Guide\nHello. Welcome to LaunchSelectTool1.0!\nHow to select a launch vehicle:\n1. Type payload information into \"payload_dat.m\". If you don't want one of the\nconstraints or don't know the information, please type -1.\n2. Please choose an optimization option for your output under the section named\n\"Program Optimization Sorting Options\" in \"payload_dat.m\".\n3. Save \"payload_dat.m\"\n4. Load the input data and vehicle database into memory by executing\n\"load_data.m\".\n>> load_data\n5. Execute the launch select tool\n>> selected_vehicles = launcher_select(payload, veh);\n6. All applicable vehicles will be output to the \"selected_vehicles\" data\nstructure in optimal order according to the user option.\nHow to add to database:\n1. Make a copy of any vehicle data file \"launch_vehicle.m\"\n2. Modify the data to match the new vehicle\n3. Add the new data file name to the \"load_data.m\" launch vehicle list.\n\nVII. Sample Test Run\nFor the test run, a payload with constraints shown in Table 3 is submitted to the\nlauncher selection tool. Table 4 shows the results sorted by cost. The negative\navailability values are because the current vehicle database shows those vehicles as\nhaving never launched any payload. This also has the effect of driving up the risk\nand absolute cost for those particular vehicles. The Atlas II's zero risk is due to its\nperfect launch record.\nTable 3: Test Run Payload Constraints\nConstraint\nValue\nmass\n6000 kg\ndiameter\n3 m\nheight\n3 m\ninclination\n34 deg\nlaunchfreq\n2 per year\nmax_axial_accel\n8.5 g\nmax_lat_accel\n2.2 g\nlat_freq\n45 Hz\nlong_freq\n30 Hz\nacoustic\n200 dB\nmax_aeroheating\n1200 W/m2\nair_clean\n10,000 class\norbital_accu_alt\n20 km\norbital_accu_incl\n2 deg\nTable 4: Test Run Results\nVehicle\nCost\n(mil $)\nRisk\n(mil $)\nPerformance\nMargin (kg)\nAvailability\n(%)\nAbsolute\nCost (mil $)\nSoyuz_U\n1.5\n86.1\n51.5\nAtlas V_400\n-360\nAtlas II_AS\nAtlas III_A\n-360\nAtlas III_B\n-360\nAtlas V_500\n-360\nProton_M\n-360\n\nVIII. References\nIsakowitz, Steven J. 1999, AIAA International Reference Guide to Space Launch Systems (3rd\nEdition). Washington, DC: American Institute of Aeronautics and Astronautics.\nJilla, Cyrus D. 2002, A Multiobjective, Multidisciplinary Design Optimization Methodology for the\nConceptual Design of Distributed Satellite Systems. Massachusetts Institute of\nTechnology, Aero/Astro.\nWertz, James R. and Wiley J. Larson (Ed.), Space Mission Analysis and Design. El Segundo:\nMicrocosm Press, 1999.\n\nIX. Appendix - Source Code Listing\nPayload Constraints & Optimization Flags, payload_dat.m\n%##################################\n%## payload data\n%specify a \"-1\" value to disable constraint\npayload.name = 'Test Payload';\npayload.mass = 6000; %[kg], total payload mass (spacecraft, adaptors, propellant)\npayload.diameter = 3; %[m], payload diameter\npayload.height = 3; %[m], payload height\npayload.orbit_type = 'leo'; %orbit class // options: [leo, polar, sunsync, ss, gto, geo]\npayload.inclination = 34; %[deg], desired orbit inclination\npayload.launchfreq = 2; %[launches/year], launch frequency\npayload.max_axial_accel = 8.5; %[g], max axial acceleration\npayload.max_lat_accel = 2.2; %[g], max lateral acceleration\npayload.lat_freq = 45; %[Hz], min lateral frequency\npayload.long_freq = 30; %[Hz], min longitudinal frequency\npayload.acoustic = 200; %[dB], noise intensity\npayload.max_aeroheating = 1200; %[W/m^2], aeroheating after fairing deploy\npayload.air_clean = 10000; %[class], air cleanliness class\npayload.orbital_accu_alt = 20; %[km], allowable LEO insertion altitude error (+/-)\npayload.orbital_accu_incl = 2; %[deg], allowable LEO insertion inclination error (+/-)\n%##################################\n%## Program Optimization Sorting Options\n% 1 for category sort on // 0 for category sort off\n% You may only enable one sort category at a time.\npayload.cost = 0; %minimize cost\npayload.risk = 0; %minimize risk\npayload.pmargin = 0; %maximize margin\npayload.availiability = 0; %maximize availability\npayload.absolute_cost = 1; %minimize absolute cost\nLoad Data File, load_data.m\n%##################################\n%## load data\nclear\nclc\n%loads payload data\npayload_dat\n%Loads all launch vehicles\ni=0;\nAriane4\nAriane5\nAtlasII\nAtlasIII\nAtlasV\nDeltaII\nDeltaIV\nMolniya\nPegasus\nProton_a\nProton_b\nSoyuz\nclear i j\n\nSample Vehicle Data File, AtlasII.m\n% Launch Vehicle Database\ni=i+1;\nveh{i}.family = 'Atlas';\nveh{i}.class = 'Atlas II';\nveh{i}.country = 'USA';\nveh{i}.provider = 'Lockheed Martin';\nveh{i}.success_flight = 41; %# of flights%\nveh{i}.total_flights = 41;\nveh{i}.stddwntime = 0.3; %years\nveh{i}.surge = 1.15; %percentage\nveh{i}.max_axial_accel = 6; %g\nveh{i}.max_lat_accel = 2; %g\nveh{i}.min_lat_freq = 10; %Hz\nveh{i}.min_long_freq = 15; %Hz\nveh{i}.shock = 4000; %g\nveh{i}.acoustic = 131; %dB\nveh{i}.fairing_press = 7; %kPa/s\nveh{i}.max_aeroheating = 1135; %W/m^2\nveh{i}.air_clean = 100000; %class\nveh{i}.orbital_accu_alt = 19.4; %km\nveh{i}.orbital_accu_incl = 0.02; %deg\nveh{i}.rate = 7; %# per year\nveh{i}.site{1}.name = 'KSC';\nveh{i}.site{1}.min_incl = 28.5; %deg\nveh{i}.site{1}.max_incl = 55; %deg\nveh{i}.site{2}.name = 'Vandenberg';\nveh{i}.site{2}.min_incl = 63; %deg\nveh{i}.site{2}.max_incl = 120; %deg\n%-- Variants / Upper Stages --\nj=1;\nveh{i}.upper_stage{j}.var_name = 'A';\nveh{i}.upper_stage{j}.mass2leo = 7316; %kg\nveh{i}.upper_stage{j}.mass2polar = 6192; %kg\nveh{i}.upper_stage{j}.mass2SS = 6074; %kg\nveh{i}.upper_stage{j}.mass2sunsync = 0; %kg\nveh{i}.upper_stage{j}.mass2gto = 3066; %kg\nveh{i}.upper_stage{j}.mass2geo = 0; %kg\nveh{i}.upper_stage{j}.cost = 85; %million dollars\nveh{i}.upper_stage{j}.fairingheight = 4.1; %m\nveh{i}.upper_stage{j}.fairingdiameter = 2.9; %m\nj=j+1;\nveh{i}.upper_stage{j}.var_name = 'AS';\nveh{i}.upper_stage{j}.mass2leo = 8618; %kg\nveh{i}.upper_stage{j}.mass2polar = 7212; %kg\nveh{i}.upper_stage{j}.mass2SS = 7225; %kg\nveh{i}.upper_stage{j}.mass2sunsync = 0; %kg\nveh{i}.upper_stage{j}.mass2gto = 3719; %kg\nveh{i}.upper_stage{j}.mass2geo = 0; %kg\nveh{i}.upper_stage{j}.cost = 105; %million dollars\nveh{i}.upper_stage{j}.fairingheight = 4.1; %m\nveh{i}.upper_stage{j}.fairingdiameter = 3.7; %m\n\nLaunch Sel e ct Tool, launcher_select.m\nfunction bestveh = launcher_select(payload, veh_input);\n% This is a launch vehicle selection tool\n% input #1 - payload specifictions\n% input #2 - launch vehicle specs\n%expand database for upper stages\nkk = 1;\nfor ii = [1:length(veh_input)]\n%## if generic vehicle can lift payload, add to database\nfor jj = [1:length(veh_input{ii}.upper_stage)]\nveh{kk} = veh_input{ii};\nveh{kk}.class = [veh_input{ii}.class '_' veh_input{ii}.upper_stage{jj}.var_name];\n\nveh{kk}.mass2leo = veh_input{ii}.upper_stage{jj}.mass2leo;\n\nveh{kk}.mass2polar = veh_input{ii}.upper_stage{jj}.mass2polar;\n\nveh{kk}.mass2ss = veh_input{ii}.upper_stage{jj}.mass2SS;\n\nveh{kk}.mass2sunsync = veh_input{ii}.upper_stage{jj}.mass2sunsync;\n\nveh{kk}.mass2gto = veh_input{ii}.upper_stage{jj}.mass2gto;\n\nveh{kk}.mass2geo = veh_input{ii}.upper_stage{jj}.mass2geo;\n\nveh{kk}.cost = veh_input{ii}.upper_stage{jj}.cost;\n\nveh{kk}.fairingheight = veh_input{ii}.upper_stage{jj}.fairingheight;\n\nveh{kk}.fairingdiameter = veh_input{ii}.upper_stage{jj}.fairingdiameter;\n\nveh{kk} = rmfield(veh{kk}, 'upper_stage');\n\nkk = kk+1;\n\nend\nend\n% filter based on all constraints\nsite_found = 0; %flag found\nm = 1; %counter for qualified vehicles\nfor i = [1:length(veh)]\n%site and inclination constraint\nfor j = [1:length(veh{i}.site)]\nif(veh{i}.site{j}.max_incl >= payload.inclination & veh{i}.site{j}.min_incl <= payload.inclination)\nsite_found = 1;\nend\nend\nif(site_found == 0)\ncontinue;\nend\n%mass constraint\nif(strcmp(payload.orbit_type,'leo') == 1)\nif(veh{i}.mass2leo < payload.mass)\ncontinue;\nend\nend\nif(strcmp(payload.orbit_type,'gto') == 1)\nif(veh{i}.mass2gto < payload.mass)\ncontinue;\nend\nend\nif(strcmp(payload.orbit_type,'geo') == 1)\nif(veh{i}.mass2geo < payload.mass)\ncontinue;\nend\nend\nif(strcmp(payload.orbit_type,'polar') == 1)\nif(veh{i}.mass2polar < payload.mass)\ncontinue;\nend\nend\nif(strcmp(payload.orbit_type,'sunsync') == 1)\nif(veh{i}.mass2sunsync < payload.mass)\ncontinue;\nend\nend\nif(strcmp(payload.orbit_type,'ss') == 1)\n\nif(veh{i}.mass2ss < payload.mass)\ncontinue;\nend\nend\n%diameter constraint\nif(veh{i}.fairingdiameter < payload.diameter)\ncontinue;\nend\n%height constraint\nif(veh{i}.fairingheight < payload.height)\ncontinue;\nend\n%max_acceleration constraint\nif(payload.max_lat_accel ~= -1)\nif(veh{i}.max_lat_accel > payload.max_lat_accel)\ncontinue;\nend\nend\n%max_acceleration constraint\nif(payload.max_axial_accel ~= -1)\nif(veh{i}.max_axial_accel > payload.max_axial_accel)\ncontinue;\nend\nend\n%vibration constraint\nif(payload.lat_freq ~= -1)\nif(veh{i}.min_lat_freq > payload.lat_freq)\ncontinue;\nend\nend\nif(payload.long_freq ~= -1)\nif(veh{i}.min_long_freq > payload.long_freq)\ncontinue;\nend\nend\n%acoustic constraint\nif(payload.acoustic ~= -1)\nif(veh{i}.acoustic > payload.acoustic)\ncontinue;\nend\nend\n%temp constraint\nif(payload.max_aeroheating ~= -1)\nif(veh{i}.max_aeroheating > payload.max_aeroheating)\ncontinue;\nend\nend\n%air_clean constraint\nif(payload.air_clean ~= -1)\nif(veh{i}.air_clean < payload.air_clean)\ncontinue;\nend\nend\n%orbit_accu\nif(payload.orbital_accu_alt ~= -1)\nif(veh{i}.orbital_accu_alt > payload.orbital_accu_alt)\ncontinue;\nend\nend\nif(payload.orbital_accu_incl ~= -1)\nif(veh{i}.orbital_accu_incl > payload.orbital_accu_incl)\ncontinue;\nend\nend\n%vehicle passes all constraints, add to list\nqualified_vehicles{m} = veh{i};\n%\nfprintf(['\\n' qualified_vehicles{m}.class '\\n'])\nm = m+1;\nend\n%calculate reliability\n%calculate availiability for remaining vehicles\n%calculate performance margin\nif(exist('qualified_vehicles') == 0)\nerror(' No Vehicles Qualify.');\nend\nfor i = [1:length(qualified_vehicles)]\nif(qualified_vehicles{i}.total_flights == 0)\nelse\nqualified_vehicles{i}.reliability = 0;\nqualified_vehicles{i}.reliability = qualified_vehicles{i}.success_flight/qualified_vehicles{i}.total_flights;\n\nend\nqualified_vehicles{i}.availiability = 1 - (payload.launchfreq*(1-\nqualified_vehicles{i}.reliability)*qualified_vehicles{i}.stddwntime/(1 - 1/qualified_vehicles{i}.surge));\nif(strcmp(payload.orbit_type,'leo') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2leo - payload.mass;\nif(strcmp(payload.orbit_type,'gto') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2gto - payload.mass;\nif(strcmp(payload.orbit_type,'geo') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2geo - payload.mass;\nif(strcmp(payload.orbit_type, 'polar') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2polar - payload.mass;\nif(strcmp(payload.orbit_type, 'sunsync') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2sunsync - payload.mass;\nif(strcmp(payload.orbit_type, 'ss') == 1)\nend\nqualified_vehicles{i}.pmargin = qualified_vehicles{i}.mass2ss - payload.mass;\nend\n% now optimize based on options\nm = 1;\nif(payload.absolute_cost == 1)\nfprintf('\\n## Absolute Cost Optimization ##\\n')\nwhile(~isempty(qualified_vehicles))\nmin = qualified_vehicles{1}.cost+((1 - qualified_vehicles{1}.reliability)*qualified_vehicles{1}.cost);\nbestveh{m} = qualified_vehicles{1};\nbestveh{m}.abs_cost = min;\nbest = 1;\nfor i = [1:length(qualified_vehicles)]\nif(qualified_vehicles{i}.cost + ((1 - qualified_vehicles{i}.reliability)*qualified_vehicles{i}.cost) < min)\nbestveh{m} = qualified_vehicles{i};\nbestveh{m}.abs_cost = (qualified_vehicles{i}.cost + ((1 -\nqualified_vehicles{i}.reliability)*qualified_vehicles{i}.cost));\nmin = qualified_vehicles{1}.cost+((1 - qualified_vehicles{1}.reliability)*qualified_vehicles{1}.cost);\nbest = i;\nend\nend\n%delete best entry from qualified vehicles\nfprintf(['\\n\n' qualified_vehicles{best}.class ' | ' num2str(qualified_vehicles{best}.cost+((1 -\nqualified_vehicles{best}.reliability)*qualified_vehicles{best}.cost)) '\\n'])\nqualified_vehicles(best) = [];\nm = m+1;\nend\nend\nif(payload.cost == 1)\nfprintf('\\n## Cost Optimization ##\\n')\nwhile(~isempty(qualified_vehicles))\nmin = qualified_vehicles{1}.cost;\nbestveh{m} = qualified_vehicles{1};\nbest = 1;\nfor i = [1:length(qualified_vehicles)]\nif(qualified_vehicles{i}.cost < min)\nbestveh{m} = qualified_vehicles{i};\nmin = qualified_vehicles{i}.cost;\nbest = i;\nend\nend\n%delete best entry from qualified vehicles\nfprintf(['\\n\n' qualified_vehicles{best}.class ' | ' num2str(qualified_vehicles{best}.cost) '\\n'])\nqualified_vehicles(best) = [];\nm = m+1;\nend\nend\nif(payload.risk == 1)\nfprintf('\\n## Risk Optimization ##\\n')\nwhile(~isempty(qualified_vehicles))\nmin = (1 - qualified_vehicles{1}.reliability)*qualified_vehicles{1}.cost;\nbestveh{m} = qualified_vehicles{1};\nbest = 1;\nfor i = [1:length(qualified_vehicles)]\nif((1 - qualified_vehicles{i}.reliability)*qualified_vehicles{i}.cost < min)\nbestveh{m} = qualified_vehicles{i};\nmin = (1 - qualified_vehicles{i}.reliability)*qualified_vehicles{i}.cost;\nbest = i;\nend\nend\n%delete best entry from qualified vehicles\n\nfprintf(['\\n\n' qualified_vehicles{best}.class ' | ' num2str((1 -\nqualified_vehicles{best}.reliability)*qualified_vehicles{best}.cost) '\\n'])\nqualified_vehicles(best) = [];\nm = m+1;\nend\nend\nif(payload.availiability == 1)\nfprintf('\\n## Availability Optimization ##\\n')\nwhile(~isempty(qualified_vehicles))\nmax = qualified_vehicles{1}.availiability;\nbestveh{m} = qualified_vehicles{1};\nbest = 1;\nfor i = [1:length(qualified_vehicles)]\nif(qualified_vehicles{i}.availiability > max)\nbestveh{m} = qualified_vehicles{i};\nmax = qualified_vehicles{i}.availiability;\nbest = i;\nend\nend\n%delete best entry from qualified vehicles\nfprintf(['\\n\n' qualified_vehicles{best}.class ' | ' num2str(qualified_vehicles{best}.availiability) '\\n'])\nqualified_vehicles(best) = [];\nm = m+1;\nend\nend\nif(payload.pmargin == 1)\nfprintf('\\n## Performance Margin Optimization ##\\n')\nwhile(~isempty(qualified_vehicles))\nmax = qualified_vehicles{1}.pmargin;\nbestveh{m} = qualified_vehicles{1};\nbest = 1;\nfor i = [1:length(qualified_vehicles)]\nif(qualified_vehicles{i}.pmargin > max)\nbestveh{m} = qualified_vehicles{i};\nmax = qualified_vehicles{i}.pmargin;\nbest = i;\nend\nend\n%delete best entry from qualified vehicles\nfprintf(['\\n\n' qualified_vehicles{best}.class ' | ' num2str(qualified_vehicles{best}.pmargin) '\\n'])\nqualified_vehicles(best) = [];\nm = m+1;\nend\nend"
    },
    {
      "category": "Resource",
      "title": "ps1_nn_solution.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/dad9acba8d299208bff6ee2e151d2cf0_ps1_nn_solution.pdf",
      "content": "Problem Set 1 Solution\nMEMORANDUM\n16.851 Satellite Engineering\n\nTo: Professor David W. Miller and John E. Keesee\nFrom: Students\n\nDate: 17 September 2003\nSubj: Potential Orbits about the Lagrangian Points\n\ncc: Marilyn Good\nMOTIVATION\nIn the 1960's Robert W. Farquhar, with his thesis advisor Professor John Breakwell,\ntackled a NASA problem involving a spacecraft orbiting about the Earth-Moon L2\nLagrange point. The goal was a communications satellite to service the backside of the\nMoon, with an uninterrupted view of both the Earth and the far side of the Moon. Even\nthough they were not the first to tackle orbits at the Lagrange points, their work has\nprovided a foundation for modern missions about these \"stationary\" points, and has\nmotivated the use of these points for current and future missions.\nCurrently, one of NASA's long term objectives for manned space travel is to expand\nmission capability from Low Earth Orbit to anywhere in the solar system8. A major\nstepping stone to exploring the solar system is developing space observatories at the\nLagrangian Points. The Lagrangian Points have been used in the past for systems such as\nthe International Sun-Earth Explorer-3 (ISEE-3) and Solar and Heliospheric Observatory\nSatellite (SOHO). The ISEE-3 spacecraft observed the Earth from a halo orbit at the\nSun-Earth L1 point, while SOHO observed the Sun from the same point. From the L1\npoint, SOHO has the unique ability to maintain continuous line-of-site to the Sun (no\neclipse), while also being continually able to return data to the Earth. Also several future\nmissions plan on using these strategic points for telescopes, moon communication\nsatellites, and observatories. For example, a mission has been proposed to place space\ntelescopes at each of Jupiter's Lagrange points L4 and L5 for cooperative, ultra-long-\nbaseline astronomical observations2. Understanding how these unique locations can be\nexploited for space exploration becomes a necessary task.\nPROBLEM STATEMENT\nAs future space missions plan to utilize Lagrange Point Orbits, describe the potential\norbits about the stable and unstable Lagrange points.\n\nAPPROACH\nIn order to answer this question, background information must be provided on the nature\nof the Lagrange Points. A literature search will supplement SMAD3 and yield a\ndescription of the Lagrange Points, their stability, potential orbits around them, and\nfurther motivations for Lagrange Point missions. Analysis based on the literature study\nwill allow the creation of software tools to predict and visualize the locations of the\nLagrange Points for a given two-body system, as well as the determination of maneuver\nrequirements to maintain Lagrange Point Orbits.\nSOLUTION\nPerspective\nJoseph Louis Lagrange (1736-1813) showed that, given two large bodies (i.e. the Earth\nand the Moon) in circular orbits about each other, there exist 5 points where an object\ncould remain stationary with respect to the two major bodies, as shown in Figure 1.\nLagrange further showed that the points will exist for any pair of orbiting bodies as long\nas the mass ratio between them is larger than 25. While some of these \"Lagrange\nPoints\" were shown to be unstable, a spacecraft could potentially orbit any of them with\nminimal control effort. The points are also known as the \"equilibrium\" or \"libration\"\npoints, because at any one of these points, the gravitational attraction of the two bodies\non a spacecraft and the spacecraft's centrifugal acceleration are balanced. Generally,\nwhen analyzing the Lagrangian points, the origin of the reference frame is at the\nbarycenter of the two bodies and rotates with an angular velocity equivalent to the period\nof the co-orbiting bodies. (For the Earth-Moon system, the barycenter is located inside\nthe Earth at 4,700 km toward the moon4 and the angular velocity is approximately the\nperiod of the Moon about the Earth ~ 1 month.) All five of these strategic points exist in\nthe plane of motion.\n\nFigure 1. Locations of the Lagrange Points for an arbitrary 2-body system\nThe three points located on the line which connects the two bodies (L1, L2, L3) are\nreferred to as the collinear points, and are determined from Lagrange's famous Quintic\nEquation, presented by Richard Battin5 as:\n(m + m2)Ï + (3m + 2m2)Ï\n+ (3m + m2)Ï\n\n(Eq. 1)\n- (m + 3m3)Ï\n- (2m + 3m3)Ï - (m + m3) = 0\nwhere m1, m2 and m3 represent the masses of the three bodies (large body, small body,\nand spacecraft). The mass of the spacecraft is assumed to be zero when solving the\nequation. Depending on the location of the spacecraft there are 3 different solutions for\nthe Quintic Equation (when m1=0, m2=0, or m3=0) Though not clear at first, the term Ï is\nused to calculate the three different collinear points as shown in Figure 2.\n\nm1\nm3\nÏ\nÏÏ\nL1 = Ï\nÏ )\nm1\nm2\nÏ\nÏÏ\nL2 = Ï(1+Ï) =\nÏ )\nm2\nm3\nÏ\nÏÏ\nL3 = Ï\nÏ\n= Unit Distance/ (1+\nUnit distance (1+\n= -Unit distance/\nFigure 2. Graphical interpretation of the Quintic Equation\nThese points can also be looked at as a balance of forces such that objects in these\nlocations have a period equivalent to the co-orbiting bodies. To illustrate, if the smaller\nbody was not present, then a spacecraft located at these particular points would have an\norbital period either greater than or less than the co-orbiting period. However, due to the\npresence of the smaller body, gravitational forces act on the objects in these regions, such\nthat their orbital period either increases or decreases to be equivalent to the smaller body.\nThis produces the effect that (in the relative, rotating frame) objects located at these\npoints remain stationary with respect to the two bodies4.\n\nThe L4 and L5 points are referred to as the Triangular Points. This is because they are at\nthe points of an equilateral triangle, where the base of the triangle is the line between the\ntwo bodies, as shown in Figure 1. Without the presence of the smaller body, the net\ngravitational force is directed toward the center of the Earth. However, the gravitational\nforce due to the smaller body causes the total gravitational force to point toward the\nbarycenter of the system and produce a period of revolution equivalent to the co-orbiting\nbodies4.\nStability and Langrage Orbits\nThe three collinear points, L1, L2, and L3, are considered unstable and are like \"saddles\"\nin the gravitational potential, while the two triangular points are stable. In the plots of the\ngravitational potential below, the large peak represents the gravity potential near the large\nbody, and the smaller peak represents the gravity potential near the small body. Notice\nthe \"saddle\" where the L1 point is located. The origin of these plots is explained in the\nAnalysis section, below.\nFigure 3. 3D plot of gravitational potential in the rotating reference frame\n\nFigure 4. 2D contour plot of gravitational potential in the rotating reference frame\nIt has been proven in theory and in application that there are periodic orbits about the\nunstable Lagrange points (no special treatment is required for the stable L4 and L5\npoints, once there). Since there is no closed form solution for the equations of these\norbits, computational and numerical analysis are used to determine the trajectories. Also,\nthese orbits can not be described by specific orbital parameters (orbital elements) as is\ncommon for typical orbits, but there are \"families\" of orbits that exist. \"As early as 1963,\nBoudas computed 19 families of three-dimensional periodic orbits in the circular\nrestricted three-body problem.\"6 Though there are many names and different methods of\norganization, there are 3 main categories in present literature (note that not all orbits can\nbe classified into one of these types, however these are the most practical and well-\nstudied orbits):\n1. Lyapunov Orbit\nThe Lyapunov Orbit is a periodic orbit in the plane of motion of the primary\nbodies.\n\n2. Lissajous Orbit\nThe Lissajous Orbit is a combination of a planar and vertical components in the\nperiodic orbit (see Figure 6)\n3. Halo Orbit:\nThe Halo Orbit is a special case of Lissajous orbits where the in-plane and out-of-\nplane frequencies are equal11,6.\nEquations and Analysis\nMuch work has been done to analyze the motion of satellites in the vicinity of the\nLagrange points. As mentioned above, Robert W. Farquhar wrote his PhD thesis on this\ntopic under a NASA grant, and this technical report1 has become the bibliographical root\nof almost every Lagrange Point paper since 1969 (as it is the root of this one). In the first\nsection of his work, Farquhar derives the equations of motion for the circular restricted\nthree-body problem (CR3BP), which can be used to plot both Lagrange Point orbits and\nthe transfer orbits required to get there. This formulation is characterized by a rotating\ncoordinate system with an origin at the center of mass of the two large bodies (the\nbarycenter). The x-axis of the coordinate system is along the line connecting the primary\nbodies, the z-axis in the direction of the angular momentum vector of the system, and the\ny-axis completing the right handed set. The coordinate frame thus rotates with the\nangular velocity of the system. This arrangement is illustrated in Figure 1.\nSeveral other assumptions are important to the circular restricted three-body equations,\nmost of them evidenced by the name itself. First, the orbit of the small body (for\nexample, the Moon in the Earth-Moon system) is assumed to be circular. This is a\nreasonable assumption for most systems of interest, including Earth-Moon9 (em=0.055),\nSun-Earth7 (ee=0.0167), and Sun-Jupiter7 (ej=0.0482). The term restricted refers to the\nassumption that the third body does not affect the orbits of the two primary bodies. That\nis, the third body is massless. Another assumption is that the universe is strictly limited\nto the three bodies under consideration, so there are no other gravitational influences in\nthe system. For example, it is assumed that the Sun does not affect the orbit of a\nspacecraft about an Earth-Moon Lagrange Point. Finally, it is assumed that there are no\nother unmodeled accelerations in the system, such as solar radiation pressure. All of\nthese assumptions, while seemingly very restrictive, allow the formulation of the\nequations of motion that give a representative first-order picture of orbits about the\nLagrange Points. While not suitable for a real spacecraft trajectory, the orbits that can be\ngenerated with the CR3BP equations are useful from an initial design perspective.\nThere are many equivalent formulations of the CR3BP equations as presented by\ndifferent authors. One of the most readable forms is given by Paul D. Merritt9 and is\npresented here (Farquhar's equations are similar, using different notation):\n&& = 2 y& + x - (1-Î¼)(x + Î¼)\nÎ¼[x - (1-Î¼)]\n\n(Eq. 2)\nx\n-\nr1\nr2\n\ny&& = - 2x& + y - (1-Î¼ ) y -Î¼ y\n(Eq.\n\n3)\nr1\nr2\nz&& = - (1-Î¼ )z -Î¼ z\n(Eq.\n\n4)\nr1\nr2\nIn the above equations, x, y, and z represent the position of the satellite with respect to the\nbarycenter, where r1 is the distance from the large body to the satellite, r2 is the distance\nfrom the small body to the satellite, and Î¼ is the nondimensional center of mass:\nÎ¼ =\nM 2\n(Eq.\n\n5)\nM 1 + M 2\nHere M1 is the larger body. It is important to note also that, in the normalized unit system\nof these equations, the angular rate of the two bodies about the barycenter has been set to\nunity, resulting in a unit of time (TU) that is the inverse of the mean angular rate. That is:\n&Î¸ = 1\n(Eq.\n\n6)\n\nP\n1TU =\n=\ns\n(Eq.\n\n7)\nn\n2Ï\nWhere n is the mean angular rate, or P is the period of the masses about the barycenter.\nThe equations above (Eq. 2-4) are a system of three coupled nonlinear differential\nequations that can be used to model the motion of a spacecraft on orbits around the\nLagrange points. No closed-form solution exists to these equations, even with the\nsimplifying assumptions listed above. Given the proper initial conditions, however, a\ndesigner can use a numerical integration routine to plot a reference trajectory for initial\nanalysis. Such a tool has been created for this report, and is presented in the following\nsection.\nUnfortunately, deriving the necessary initial conditions is no trivial task. A simple\nexample can be formed using the stable L4 and L5 points. Since the location of these\npoints is known precisely, and no critical initial velocity is required, a sample spacecraft\ncan be inserted into the L4 or L5 point and observed for an extended time. Using the tool\nmentioned above, this experiment was performed, and the results are as expected. When\ninserted precisely at the L4 or L5 point with no initial velocity, the spacecraft has no\nrelative motion at all for extended periods. The result is a plot with a single point at the\nL4 and L5 points, and so is not presented here. A more interesting example is formed\nwhen the spacecraft is not put exactly at the Lagrange point (or is put there with nonzero\nrelative velocity), and is allowed to obey the mechanics of the CR3BP for an extended\nperiod. The result of this experiment is shown in Figure 5. Compare the resulting pattern\nto Figures 4 and, and then the CR3BP equations may be used with confidence.\n\nFigure 5. Perturbed and bounded motion at the L4 and L5 Lagrange Points\nResearch has indicated several methods that have been used in the past to generate initial\nconditions (and even full trajectories), including sophisticated software tools developed\nby industry or educational institutions. One such software tool is called Generator and\nwas created by Purdue University, as described by Hamilton, et. al10. Generator uses\nephemeris data to model perturbations not included in the CR3BP model, including\neccentricities, external gravitational influences, and radiation pressure. Another method,\npresented clearly by Wang Sang Koon11 of Caltech, derives analytic periodic solutions to\nlinearized versions of the CR3BP. These equations can be used as a first approximation\nto the desired halo orbit, for use in more advanced propagation and correction algorithms\nfor Lagrange Point orbits. These periodic solutions for the linearized problem are as\nfollows:\nt +\nx\n-\n= A cos(\nÏ\nÎ»\n)\n(Eq.\n\n8)\nx\nt +\ny = kA sin(\nÏ\nÎ»\n)\n(Eq.\n\n9)\nx\nt +\nz = A sin(\nÏ\nÎ½\n)\n(Eq.\n\n10)\nz\n\nHere Ax, Ay=kAx, and Az are amplitudes that characterize the orbit. The parameters Î» and\nÎ½ are the frequencies of the orbit in the respective axes, and Ï and Ï are phase angles. If Î»\nand Î½ are unequal, the result is a Lissajous orbit; if they are equal, the result is a halo\norbit. A sample plot generated by these equations is shown in Figure 6. It should be\nnoted that the origin of this plot is at the L1 point based on the formulation of Eqs. 8-10.\nFigure 6. 3D plot of a Lissajous orbit about L1, using solution from linearized CR3BP\nIn addition to the equations of motion for the restricted three body problem, Farquhar\nderives in Chapter 1 of his thesis the equation for the Jacobian constant and the surfaces\nof constant velocity. Using energy methods and drawing upon the equations for the three\nbody problem, the following equation can be derived:\nV 2\nÎ¼\n= (x 2 + y 2) + (1-Î¼) +\n- C\n\n(Eq. 11)\nr2\nr1\nHere V is the magnitude of the relative velocity of the satellite in the rotating frame, x and\ny are the position of the satellite in the same frame, C is the Jacobian constant, and Î¼ is as\ndefined above in Eq. 5. Of course this equation only describes motion in the orbital\nplane. By setting the relative velocity to zero, a contour map can be created that indicates\nlines of constant C. This map is the potential field of the given system as viewed in the\nrotating coordinate frame, as presented in Figures 3 and 4.\n\nOrbit Maintenance Requirements\nInitially there was an expectation that a software tool could and would be created, that\nwould estimate maneuver requirements for Lagrange point orbits. Knowing initially that\norbits about the Lagrange Points were unstable, and periodic maintenance was thus\nrequired (regardless of perturbing forces), it was expected that a simple algorithm could\nbe found or derived to give the designer a first cut at the âV budget for his mission. The\nresult of research in this area was surprising, and the immediate consequence is that the\ndesigner does not need a software tool to make a basic âV estimate for the mission. The\nsecondary consequence is that mission designers need quite sophisticated software tools\nto obtain a high-fidelity model of the sizes and frequencies of the orbit maintenance\nmaneuvers. An explanation for both of these consequences follows, beginning however\nwith the methods that exist for calculating the requirements.\nRegardless of the perturbing forces involved, orbits about the collinear Lagrange Points\nare unstable and thus require periodic maintenance. The three body problem, however,\neven in its simplest and most restricted form, still results in a system of three coupled\nnonlinear differential equations. Farquhar himself discussed possible station-keeping\nstrategies in his original work1, and later advanced this effort in at least one more paper\npublished in 198012. Farquhar's original work dealt with continuous thrust techniques\n(and indeed even applied solar sails to this application), while many of the techniques to\nfollow dealt in discrete burns suitable for chemical propulsion devices. Hamilton10 used\na discrete linear-quadratic-regulator framework to control the orbit of spacecraft at the\nSun-Earth L2 point, with applications for formation flying at that location. Gomez, et.\nal.13, wrote a paper detailing two methods of control, called the Target Point strategy and\nthe Floquet Mode approach. The Target Point strategy computes maneuvers designed to\nkeep the spacecraft near a reference orbit, using a cost function that incorporates required\ncontrol energy and predicted deviation from the nominal (based on the calculated\nmaneuvers). The Floquet Mode approach is a sophisticated system based on the\nlinearized equations of the CR3BP described above (Eq. 8-10). Serban, Koon, et. al., in a\nmuch more recent paper14, have used optimal control to generate halo orbit maneuver\ncorrection strategies, with additional emphasis on transfer trajectories to halo orbits.\nUnfortunately, none of these methods has a simple implementation that could be quickly\nand neatly coded into a useful design tool for satellite engineers. Fortunately, the result\nof all this effort in control strategies yields a consistent and valuable generalization:\norbits around the Lagrange Points can be maintained for years using a very small amount\nof âV, and with relatively infrequent maneuvers [see 13, 15, 16]. A conservative rule-of-\nthumb for designers would be an estimate of 12 maneuvers per year, with a total âV of\nonly 20 m/s per year. Examples have been found with as few as 6 maneuvers, and âV\nrequirements only 4 m/s per year.\nSoftware Description\nA number of software tools were written in the course of the preceding analysis. All\nfunctions were written in Matlab, and their dependencies and flow (where applicable) are\nindicated in Figure 7. The following text is a brief description of each function and its\n\nintention, and then the commented code follows as an Appendix. The code is\ndocumented such that, with the help of this description, a user could immediately begin\nusing the tools to generate useful visualizations.\n)\nM1, M2, R)\nM1, M2, R)\n(\ncr3bp_lin(M1,\nM2, R, phi, psi,\nAz)\nfind_l(M1, M2)\nhost\nInitial\nConditions (xo1)\nConstants (M1,\nM2, R, dt)\node45('cr3bp'\nfind_L(M1, M2)\nplot(x,y), plot3(x,y,z)\ntconvert(dt,\nicconvert(xo1,\nfzero 'quintic')\nzeroV(M1, M2)\nlplot(M1, M2, R)\nlambda, nu, Ax,\nFigure 7. Dependencies and flow diagram for analysis functions\nThe primary code, host.m, is a host program that calls all of the others. It is here that the\nuser can specify the desired parameters such as: the mass of the primary bodies (M1,\nM2), the distance between them (R), the run time of the simulation (dt), the initial\nconditions of the orbits (xo1), and the parameters of the linearized equations of the three\nbody problem (phi, psi, lambda, nu, Ax, Az).\nBecause all of the equations from the previous section are formulated in normalized units,\nthe conversion programs tconvert.m and icconvert.m were created to convert standard\nunits of seconds, meters, and meters/second into TU, DU, and DU/TU, respective. These\nfunctions can be called in-line with the other functions, so the conversion is transparent to\nthe user.\n\nThe function find_l.m is useful for several purposes. First, as seen in the diagram, it can\nbe used to create or supplement the initial conditions for the equations of motion. For\nexample, this function was used to locate the L4 and L5 points (and then these points\nwere offset a bit to make the plot interesting) for the initial conditions to the plots in\nFigure 5. Secondly, the output from the function is used to create the 2D visualization of\nthe Lagrange Points for any system, as shown in Figure 1. Function find_l.m works by\nnumerically solving Lagrange's quintic equation for the three collinear points, and then\ncalculating the remaining two points with simple trigonometry.\nThe function cr3bp.m is describes the three coupled nonlinear differential equations of\nmotion for the CR3BP. The function is called using one of Matlab's built-in numerical\nintegrators, such as ode45.m, to determine the position and velocity of the spacecraft in\ntime. The output from cr3bp.m can be plotted in two or three dimensions using Matlab's\nbuilt-in plot commands. Again, a two-dimensional example of this function's capability\nis shown in Figure 5.\nThe function lplot.m, as mentioned above, is used to create the two-dimensional\nvisualization of the Lagrange points in any system, as shown in Figure 1. The generated\nplot has its origin at the barycenter of the two primary bodies.\nThe function zerov.m implements Eq. 11 and creates both two- and three-dimensional\nrepresentations of the potential field of the two central bodies, in the rotating coordinate\nframe.\nFinally, the function cr3bp_lin.m is an implementation of Eqs. 8-10, and generates two-\nand three-dimensional plots of the periodic solution to the linearized CR3BP. The\nfunction requires many inputs that describe the amplitude and frequency of the desired\norbit in all three axes.\n\nAPPENDIX\nSoftware Code\nhost.m\nglobal M1\n% must be global to work in ode45 call\nglobal M2\nglobal M3\nM1=5.9736e24;\n%kg, earth\nM2=7.35e22;\n%kg, moon\nR=3.84e8;\n%m, earth-moon\n% M1=1.9891e30;\n% kg, sun\n% M2=5.9736e24;\n% kg, earth\n% R=1.50e11;\n% m, earth-sun\ndt=1800*24*60*60; % s, simulation time\npoints=find_l(M1, M2);\nxo1 = [.5 -sqrt(3)/2 0 0 0 0]';\n% IC's for oscillation at L5/L4\n% If t needs to be converted, use 'tconvert' in the form \"tconvert(dt, M1, M2, R)\"\n% If the IC's need conversion, use 'icconvert' in the form \"icconvert(xo1, M1, M2, R)\"\n% Ex: [t y]=ode45('cr3bp', [0 tconvert(dt, M1, M2, R)], icconvert(xo1, M1, M2, R));\n[t y]=ode45('cr3bp', [0 tconvert(dt, M1, M2, R)], xo1);\n% here xo1 is already\nbarycentered\n%%%%%% make 2D plot of the CR3BP %%%%%%\nfigure\nplot(y(:,1),y(:,2))\nxlabel('x')\nylabel('y')\ngrid on\naxis equal\n%%%%%% /make 2D plot of the CR3BP %%%%%%\n%%%%%% make 3D plot of the CR3BP %%%%%%\nfigure\nplot3(y(:,1),y(:,2),y(:,3))\ngrid on\nxlabel('x')\nylabel('y')\nzlabel('z')\naxis equal\n%%%%%% /make 3D plot of the CR3BP %%%%%%\n%%%%%% make plots of the surfaces of zero velocity %%%%%\nzerov(M1, M2, 6)\n%%%%%% /make plots of the surfaces of zero velocity %%%%%\n%%%%%% make the 2D plot of L-point locations %%%%%%\nlplot(M1, M2)\n%%%%%% /make the 2D plot of L-point locations %%%%%%\n%%%%% plot the periodic solutions to linearized CR3BP %%%%%\n% Here, because of the example data available, this example is called\n%\nfor the sun-earth system\nAx = 206e6;\nAz = 110e6;\ncr3bp_lin(1.9891e30, 5.9736e24, 1.50e11, Ax, Az, 0, 0, 2.086, 2.015);\n%%%%% plot the periodic solutions to linearized CR3BP %%%%%\n\ntconvert.m\nfunction tout=tconvert(t, Mb, Ms, r)\n% tout is the converted time in units of TU for the given system\n% t is the time to convert from, in units of seconds\n% Mb is large body\n% Ms is the small body\n% r is the distance between them\nG = 6.67e-11; % N m^2 / kg^2\nP = sqrt( (4*pi*pi*r*r*r) / (G*(Mb+Ms)) );\n% s, Period of small body's rotation about\nbarycenter\ntout = (2 * pi * t) / P;\n% the time in TU\nicconvert.m\nfunction ic_out=icconvert(x, Mb, Ms, r)\n% ic_out is the converted initial state in units of DU and DU/TU for the given system\n% x is the state to convert from, in units of meters and meters/second\n% Mb is large body in kg\n% Ms is the small body in kg\n% r is the distance between them in meters\nG = 6.67e-11; % N m^2 / kg^2\nP = sqrt( (4*pi*pi*r*r*r) / (G*(Mb+Ms)) );\n% s, Period of small body's rotation about\nbarycenter\nTU = P / (2 * pi);\n% 1 TU, in seconds\nic_out(1:3,:) = x(1:3,:) / r;\n% initial conditions converted to DU\nic_out(4:6,:) = x(4:6,:) * TU / r;\n% initial conditions converted to DU/TU\n\nfind_l.m\nfunction l_points=find_l(Ml, Ms)\n% Function \"l_points\" find the 5 lagrange points for a given system, in\n%\nnormalized units (assuming the distance between the bodies is 1)\n%\n% l_points is returned as a length 5 vector of the lagrange points, in order\n%\nLagrange points will be referenced from the barycenter, + towards small body\n%\nAll z-components are assumed to be zero, planar system\n% Ml is large body in kg\n% Ms is the small body in kg\nglobal Ma\n% must be global to get these variables to 'quintic' through fzero\nglobal Mb\nglobal Mc\nr = 1;\n% the distance from the big body to small body in normalized units\n%%%%%%%%% Solve for L1 %%%%%%%%%%%\nMa=Ml;\nMb=0;\nMc=Ms;\nl_points(1,1)=r/(fzero('quintic', .1) + 1) - Ms/(Ml+Ms);\nl_points(1,2)=0;\n%%%%%%%%% /Solve for L1 %%%%%%%%%%%\n%%%%%%%%% Solve for L2 %%%%%%%%%%%\nMa=Ml;\nMb=Ms;\nMc=0;\nl_points(2,1)=r*fzero('quintic', .1) + 1 - Ms/(Ml+Ms);\nl_points(2,2)=0;\n%%%%%%%%% /Solve for L2 %%%%%%%%%%%\n%%%%%%%%% Solve for L1 %%%%%%%%%%%\nMa=0;\nMb=Ml;\nMc=Ms;\nl_points(3,1)=-r/fzero('quintic', .1) - Ms/(Ml+Ms);\nl_points(3,2)=0;\n%%%%%%%%% /Solve for L3 %%%%%%%%%%%\n%%%%%%%%% Solve for L4 & L5 %%%%%%%%%%%\nl_points(4,:)= [.5-(Ms/(Ml+Ms)) sqrt(3)/2];\nl_points(5,:)= [.5-(Ms/(Ml+Ms)) -sqrt(3)/2];\n% these are simply the corners of the equilateral triangle where one\n%\nside is the distance between the two primary bodies\n%%%%%%%%% /Solve for L4 & L5 %%%%%%%%%%%\n\ncr3bp.m\nfunction xdot = cr3bp(t, x);\n% function cr3bp implements the CR3BP equations of motion\n% x is the state vector [r v], [6x1]\nglobal M1;\nglobal M2;\nMU = M2 / (M1 + M2);\nr_eb_mag = 1 * MU;\n% distance from Big body to Barycenter, in normalized\ndistance units (MDU)\nr_mb_mag = 1 - r_eb_mag;\n% distance from Small body to Barycenter (MDU)\nr_eb = r_eb_mag * [ 1 0 0]';\n% vector from Big body to Barycenter (MDU)\nr_mb = r_mb_mag * [-1 0 0]';\n% vector from Small to Barycenter (MDU)\nxdot(1:3,1) = x(4:6,1);\nrho = x(1:3,1);\n% barycenter to satellite\nv = x(4:6,1);\nr1 = r_eb + rho;\n% Big body to satellite\nr2 = r_mb + rho;\n% Small body to satellite\nr1_mag = norm(r1);\nr1_3 = r1_mag * r1_mag * r1_mag;\nr2_mag = norm(r2);\nr2_3 = r2_mag * r2_mag * r2_mag;\nxdd = 2 * v(2) + rho(1) - ((1-MU)*(rho(1)+MU))/r1_3 - MU*(rho(1)-(1-MU))/r2_3;\nydd = -2 * v(1) + rho(2) - ((1-MU)*(rho(2)\n))/r1_3 - MU*(rho(2)\n)/r2_3;\nzdd =\n- ((1-MU)*(rho(3)\n))/r1_3 - MU*(rho(3)\n)/r2_3;\nxdot(4:6,1) = [xdd ydd zdd]';\nlplot.m\nfunction lplot(Ml, Ms)\nr_sun = .1;\n% scaled diameter of the large body (i.e. sun), not to scale\nr_earth = .05;\n% scaled diameter of the small body (i.e. earth), not to scale\npoints=find_l(Ml, Ms);\nMU = Ms / (Ml + Ms);\n% large body to barycenter in normalized distance units\nfigure\nhold on\ntheta = 0:pi/32:2*pi;\nplot(r_sun*sin(theta)-MU, r_sun*cos(theta),'m')\nplot(r_earth*sin(theta)+1-MU, r_earth*cos(theta),'g')\nlegend('Major Body','Minor Body')\nplot(sin(theta)-MU, cos(theta),'b')\nx_axis=-1.5:1.5;\ny_axis=-1:1;\nplot(x_axis, zeros(1,length(x_axis)),'k','linewidth',2)\nplot(zeros(1,length(y_axis)),y_axis,'k')\nplot(points(:,1),points(:,2),'rx','markersize',12)\ntext(-1.4, -1.05, 'Massive bodies not drawn to scale')\naxis equal\ngrid on\n\nzerov.m\nfunction zerov(Ml, Ms, max_height)\n% function zerov plots the 2D and 3D representations of the\n%\npotential near Ml and Ms in the rotating coordinate frame\n% Ml is large body in kg\n% Ms is the small body in kg\n% \"max_height\" is where the top of the 3D plot is cut off, otherwise\n%\nthere are scaling issues and the plot is not useful\nclear c\n% M1 = 5.97e24; % kg, Mass of Earth\n% M2 = 7.35e22; % kg, Mass of Moon\nMU = Ms / (Ml + Ms);\nr_eb_mag = 1 * MU;\n% distance from Earth to Barycenter, in Moon distance units\n(MDU)\nr_mb_mag = 1 - r_eb_mag;\n% distance from Moon to Barycenter (MDU)\nr_eb = r_eb_mag * [ 1 0 0]';\n% vector from Earth to Barycenter (MDU)\nr_mb = r_mb_mag * [-1 0 0]';\n% vector from Moon to Barycenter (MDU)\n% x=-3:.02:3;\n% y=-3:.02:3;\nx=-1.5:.05:1.5;\n% the x-plot range\ny=-1.5:.05:1.5;\n% the y-plot range\nfor i=1:length(x)\nfor j=1:length(y)\nrho=[x(i) y(j) 0]';\nr1 = r_eb + rho;\n% big body to satellite\nr1_mag = norm(r1);\nr2 = r_mb + rho;\n% small body to satellite\nr2_mag = norm(r2);\nc(j,i) = x(i)^2 + y(j)^2 + 2*(1-MU)/r1_mag + 2*MU/r2_mag; % zero v_rel equation\nif c(j,i)>max_height\nc(j,i)=max_height;\nend\nend\nend\n% The following manipulations create meaningful contour lines on the\n%\ncontour plot\ncsize=size(c);\ndata=reshape(c,[1 csize(1)*csize(2)]);\n[numbinned centers]=hist(data,18);\nlow_bin=centers(1);\nmin_el=min(data);\nmax_el=max(data);\ntmp=log(centers)/log(15);\ncontourlist=[sort([tmp+(min_el-tmp(1)) centers(find(centers>max(tmp+(min_el-\ntmp(1)))))])];\n% End manipulations\nfigure\n[a b]=contour(x,y,c,contourlist);\naxis equal\nxlabel('x');\nylabel('y');\nfigure\n[a b]=contour3(x,y,c,contourlist);\naxis equal\nxlabel('x');\nylabel('y');\nzlabel('c');\nfigure\n\nsurf(x,y,c);\nxlabel('x');\nylabel('y');\nzlabel('c');\ncr3bp_lin.m\nfunction cr3bp_lin(Ml, Ms, R, Ax, Az, phi, psi, lambda, nu)\n% function cr3bp_lin plots the periodic orbits based on the\n%\nlinearized CR3BP equations\n% Ml is large body in kg\n% Ms is the small body in kg\n% R is the distance between them in meters\n% phi and psi are phase angles of the orbit\n% lambda and nu are frequencies of the orbit (radians)\n% Ax and Az are the amplitudes of the orbit (in meters)\nMU = Ms / (Ml + Ms);\n% large body to barycenter in normalized distance units\n%\nor unitless center of mass\npoints=find_l(Ml, Ms);\n% normalized distance\ngamma=1-points(1,1)-MU; % normalized distance units\nc2 = (gamma^-3)*(MU + ((-1)^2)*(1-MU)*(gamma/(1-gamma))^3); % unitless\nk = (lambda^2 + 1 + 2*c2)/(2*lambda);\nAx = Ax/R;\nAy = (k*Ax);\nAz = Az/R;\nt=0:.1:80;\nx = -Ax * cos(lambda.*t + phi);\n% the solutions of the linearized eqs\ny =\nAy * sin(lambda.*t + phi);\nz =\nAz * sin(nu\n.*t + psi);\nxd = lambda * Ax * sin(lambda.*t + phi); % and their derivatives, if required\nyd = lambda * Ay * cos(lambda.*t + phi);\nzd = nu\n* Az * cos(nu\n.*t + psi);\nfigure\nplot3(x*R/1000, y*R/1000, z*R/1000)\ngrid on\nxlabel('x (km)')\nylabel('y (km)')\nzlabel('z (km)')\naxis equal\nquintic.m\nfunction x=quintic(chi)\n% Lagrange's quintic equation, solved by fzero to find L1, L2, L3\nglobal Ma\nglobal Mb\nglobal Mc\nx=(Ma + Mb)*chi^5 + (3*Ma + 2*Mb)*chi^4 + (3*Ma + Mb)*chi^3 - (Mb + 3*Mc)*chi^2 - (2*Mb +\n3*Mc)*chi - (Mb + Mc);\n\nBIBLIOGRAPHY\n1. R. W. Farquhar. The control and use of libration point satellites. Technical\nReport TR R346, NASA, 1968.\n2. T. Howard, L. Gutheinz, J. Sanders-Reed, C. Tuttle, W. Witt, Large-Scale, Large-\nAperture Space Astronomy: Beyond The Next Generation. AIAA-2000-5299,\nAIAA Space 2000 Conference & Exposition, 19-21 Sept 2000. Long Beach, CA.\n3. Wertz, J. R. and Larson, W. J. (editors), Space Mission Analysis and Design, 3rd\nEdition, 1999 Microcosm Press, El Segundo California.\n4. Wertz, J. R., Mission Geometry, Orbit and Constellation Design and\nManagement. 2001 Microcosm Press, El Segundo California.\n5. Battin, Richard. An Introduction to the Mathematics and Methods of\nAtsrodynamics, Revised Edition. AIAA, Reston, VA. 1999.\n6. K.C. Howell, Families of Orbits in the Vicinity of the Collinear Libration Points.\nAAS 98-4465, AIAA. 1998.\n7. Bate, R., Mueller, D., and White, J., Fundamentals of Astrodynamics, Dover\nPublications, Inc., New York, 1971.\n8. NASA's Vision, Adminstrator O'Keefe's supporting slides, NASA web site,\nftp://ftp.hq.nasa.gov/pub/pao/okeefe/2002/nasa_vision.pdf, 2002\n9. Paul D. Merritt, A Differentially Corrected Halo Transfer Orbit\n10. Hamilton, Nicholas, et. al., Formation Flying Satellite Control around the L2\nSun-Earth Libration Point\n11. Koon, Wang Sang, Dynamical Systems and Space Mission Design, Computer\nBased Learning Unit, University of Leeds, 1997.\nhttp://www.cds.caltech.edu/courses/1999-2000/cds270-1/outline/outline.html\n12. R. W. Farquhar, D.P. Muhonen, C. R. Newman, and H. S. Heuberger.\nTrajectories and orbital maneuvers for the first libration-point satellite. Journal of\nGuidance and Control, 3(6):549-554, 1980.\n13. G. Gomez, K. Howell, et. al, Station-keeping Strategies for Translunar Libration\nPoint Orbits\n14. Serban, R., Koon, W., Lo, M., Marsden, J., Petzold, L., Ross, S., Wilson, R., Halo\nOrbit Mission Correction Maneuvers Using Optimal Control, 2001.\n15. Lo, M., Ross, S., \"The Lunar L1 Gateway: Portal to the Stars and Beyond\", AIAA\nSpace 2001 Conference, Albuquerque, NM, August 28-30, 2001.\n16. Folta, D., Richon, K., Libration Orbit Mission Design at L2: A MAP and NGST\nPerspective"
    },
    {
      "category": "Resource",
      "title": "ps2_cg_ps2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/4bc93b56ca9fb5e6ca93386e23ab3d81_ps2_cg_ps2.pdf",
      "content": "TO:\nProf. John Keesee, Prof. David Miller, and Ms. Marilyn Good\n\nFROM:\nNamiko Yamamoto, Seung Chung\n\nSUBJECT:\nHomework #2 (Orbit and Propulsion)\n\nDATE:\n6/21/2004\n\nHomework #2\n(Orbit and Propulsion Subsystems)\n\nGiven a mission objective, a satellite must be placed in its final destination orbit using some type of\npropulsion system. This requires an orbit transfer from the parking orbit to the final destination orbit. The\nmission may dictate the minimum allotted time to achieve the final destination orbit, and in general,\nminimal propellant mass is desired.\n\nThe desired objective of this problem set is to compare a set of feasible orbit transfer and propulsion\nsystem combinations for a given mission requirement. The mission requirement will be defined in terms\nof the parking orbit and the final destination orbit (using orbital parameters). The types of transfer orbit to\nconsider are:\n\n-\nElliptical/Hyperbolic\n-\nHohmann\n-\nHohmann Transfer Segments\n-\nSpiral\n\nThe types of propulsion system to consider are:\n\n-\nCold Gas\n-\nSolid Motor\n-\nLiquid\n-\nHybrid\n-\nElectrothermal\n-\nElectrostatic\n-\nElectromagnetic\n\nNote that the aforementioned types of the propulsion systems can be broken down farther (i.e. different\npropellants and the associated Isp's). For each pair of transfer orbit and propulsion system types, the\nfollowing output must be computed for analysis:\n\n-\nTime for orbit transfer\n-\nRequired propellant and tank mass\n\nFor all feasible designs, a set of plots/graphics should be provided for the purpose of comparison. Note\nthat the type of transfer orbit depends on the propulsion system type, and the total required âV depends\non the transfer orbit type. While this problem can become very complex depending on the accuracy of the\ncomputation and analysis, a right set of assumptions should be applied to minimize the computational\ncomplexity while maintaining the fidelity for comparison among various designs (e.g. assume fixed dry\nmass, but excluding the tank mass). Note that the mass of a power subsystem will be crucial when\ncomparing an electric propulsion system to those that are not. For this problem set, however, the power\nsubsystem will not be considered (i.e. assume the power subsystem to have a fixed mass, but do make a\nnote of the fact that the propulsion system is/is not electrical)."
    },
    {
      "category": "Resource",
      "title": "ps2_cg_solution.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/e9e1eb82a6e428358fb07c1ee0fd2c3c_ps2_cg_solution.pdf",
      "content": "TO:\nProf. John Keesee, Prof. David Miller, and Ms. Marilyn Good\nFROM:\nNamiko Yamamoto, Seung Chung\nSUBJECT: Problem Set #2 (Orbit and Propulsion)\nDATE:\n12/11/2003\nProblem Set #2\n(Orbit and Propulsion Subsystems)\nMotivation\nIn a mission design in which an orbit transfer is necessary, the orbit transfer and propulsion\nsystem types may drive of the design. Many missions desire minimal mass to reduce the mission\ncost, which may be achieved in part by choosing the appropriate propulsion system. Some\nmilitary missions and manned missions, however, may prefer minimal orbit transfer time over\nminimal cost associated with minimal mass. In many missions, the choices for the orbit transfer\nand propulsion system may be obvious. For some missions, the appropriate design is not obvious,\ngiven that designing a propulsion system depends on the transfer orbit chosen, and vice versa.\nFor such design problem, a tool that designs the orbit transfer and propulsion system may\nalleviate the difficulty in solving the coupled problem.\nProblem Statement\nThe objective is to design a tool that compares a set of feasible orbit transfer and propulsion\nsystem combinations for a given mission requirement. The mission requirement is in terms of the\ndesired orbit transfers. For simplicity, we will only consider an orbit transfer from a lower\ncircular orbit to a higher circular orbit. The output of the design tool should be a set of feasible\ntransfer orbit and propulsion system combinations. The comparison metric is the mass of the\npropulsion system and the time required for orbit transfer.\n\nNote that the set of possible transfer orbits depends on the propulsion system type, and the total\nâVtotal required depends on the transfer orbit type. While this problem can become very complex\ndepending on the accuracy of the computation and analysis, a right set of assumptions should be\napplied to minimize the computational complexity while maintaining the fidelity for comparison\namong various designs (e.g. assume fixed dry mass, but excluding the propulsion system mass).\nThe satellite mission will have the following guidelines:\n\n1. Orbit transfer takes place purely by provision of additional energy by the propulsion\nsystem. No plane change is considered.\n2. Shapes of initial and final orbits are circular.\n3. Both initial and final orbits are assumed to satisfy all components which affect possibility,\nduration, and efficacy of satellite mission, such as launch windows, radiation effects,\nearth convergence and others.\n\n4. The dry mass, mdry, (excluding the propulsion system mass) is fixed. The power\nsubsystem mass have a fixed mass, although its crucial influence on comparison between\nelectric propulsion systems are noted.\n5. The maximum initial mass, mmax, is fixed.\n6. Transfer orbit types to consider are:\na. Elliptical & Hyperbolic Transfer\nb. Hohmann Transfer\nc. Hohmann Transfer Segments\nd. Spiral Transfer\n7. Types of propulsion system to consider are:\na. Solid Motor\nb. Chemical\ni. Bipropellant\nii. Monopropellant\nc. Electric\n\nPropulsion systems can be broken down further with different propellants and associated Isps.\ncold gas systems are excluded because of the combination of low thrust and low Isp. In general,\ncold gas systems are not applicable to orbit transfers even for satellites that are extreme\nsensitivity to contamination and/or for which the complexity of the propulsion system is of an\nissue.\nApproach\nFlow chart below shows the outline of out approach procedure.\n\nThe correlation between orbit and propulsion system is complementary for each other. The\nvelocity change calculated from initial and final orbits selects propulsion systems such that\nachieve that value. On the other hand, propulsion system with a certain velocity change budget\nconstrains the types of orbital maneuvers. Calculation starting with certain assumptions and\nreleasing those assumptions as variable later is required to get out of this loop relationship. In\nthis MATLAB code, we commenced the calculation with propulsion system and associated\nachievable velocity change limit as inputs, and checked its validity with velocity change obtained\nfrom transfer orbits later.\n\nSTEP 1: Compute the maximum âV available.\nTo calculate the maximum velocity change achievable and the maximum firing time by a\npropulsion system, Impulsive Maneuvers for Orbit Transfer is considered. For most orbit\ntransfer calculations, each âV is assumed impulsive given the thrust is \"relatively\" high. That is,\nwith high thrust capability, an infinitesimal time is necessary to achieve the necessary âV, and as\nsuch, we can approximate the burn as an impulse. If the thrust is relatively low, however, the\nmaneuver will require a finite amount of time.\n\nFigure 1 illustrates the case in which the burn time is finite. In such case, the thrust vector is not\nalong the flight path and results in gravity loss as shown by the second term on the right hand\nside of Eq. (1). If the thrust vector were aligned along the flight path, the gravity loss would be\neliminated. The resulting orbit transfer, however, will not be the intended one. Thus, for a\nspacecraft to achieve the intended orbit transfer, the burn time must be short enough such that the\ngravity loss is negligible compared to the thrust.\n\nCalculate\n-\nMaximum\nimpulsive V\nâ\nachievable\nInitial Orbit\nFinal Orbit\nV\nâ\nmax\nGiven V\nâ\nmax\nDecide applicable Transfer Orbit Types\nHohmann Transfer\nSegments\nPropulsion System\nType\n\nMass Assumptions:\nSpiral\nTransfer\nTransfer Time, and total V\nâ\n\nElliptical & Hyperbolic\nTransfer\nHohmann\nTransfer\nPropulsion mass including Tank\nCalculate required propulsion mass\nto achieve V\nâ\n\nPropulsion\nMaximum total\nmass,\nFixed dry mass\nOrbit\nPropulsion\nIterate\n\nln\nsin\nf\ni\nt\ni\nsp\nt\nf\nm\nV\ngI\ng\nd\nm\nt\nÎ³\nâ\n=\n-â«\n\n(1)\n\nFigure 1. Forces during finite burn.\n\nWe use a small angle approximation, and assume that for Î³ â¤ Ï/12, i.e. Î¸ â¤ Ï/6, the gravity loss\neffect is minimal. Then, given the gravitational constant Î¼ of the central body, current circular\norbital radius r, mass of the spacecraft mi, and available propellant mass mprop, we can compute\nthe maximum achievable âVmax:\n\nmax\nln\ni\nmax\nsp\ni\nm\nV\ngI\nm\nm\nâ\nâ\nâ\n=\nâ\n-â\nâ\nâ \nâ\n(2)\n\nwhere\n\n3/ 2\nmax\nmin\n,\np\nsp\nTr\nm\nm\ngI\nÎ¸\nÎ¼\nâ¡\nâ¤\nâ\n=\nâ¢\nâ¥\nâ¢\nâ¥\nâ£\nâ¦\n.\n(3)\n\nNote that mo and mp are initially unknown. Thus, we assume mi = mmax and mp = mmax - mdry.\nThese values must be update once the actual values are known, and the remaining design\nprocesses must be repeated.\n\nThis is implemented in compute_impulsive_Delta_V_max.m.\n\nInput\nmi\n\ninitial total mass, i.e. mdry + mwet\nmprop\navailable propellant mass\nÎ¼\n\ngravitational constant of the body orbiting\nr\nradius of the initial orbit\nT\n\nthrust\nIsp\nspecific impulse\n\nOutput\n\nâVmax\nmaximum impulsive âV available\nÎ³\nmg\nÎ¸\nflight path\nburn\ntime\ntf\nti\nT\n\nSTEP2: Compute the âV required for the orbit transfer.\nCalculate the velocity change required and transfer time for each orbit transfer from orbit\nelements of given initial and final orbit elements.\n\nVerify that velocity change for each firing is smaller than the maximum velocity achievable by a\npropulsion system.\n\nOrbit element values provided by given initial and final orbits are follows:\n- rA: Radius of initial orbit\n- rB; Radius of final orbit\n- âVmax; Maximum velocity change according to propellant\n\nThe satellite velocities on initial, transfer, and final orbits are calculated using these values\nmentioned above and the gravitational constant of a body the spacecraft is orbiting.\nHohmann Transfer\nHohmann Transfer orbit's ellipse is tangent to both the initial and final orbits at the transfer\norbit's perigee and apogee respectively. This is one of the most fuel-efficient transfers between\ntwo circular coplanar orbits and the orbit transfer time is relatively small. The disadvantage is\nthat a failure is unrecoverable during the orbit transfer.\n\nAtx: Semimajor axis of transfer ellipse\nA\nB\ntx\nr\nr\na\n+\n=\n\nVia: Velocity in the initial orbit\niA\nA\nv\nr\nÎ¼\n=\n\nVfb: Velocity in the final orbit\nfB\nB\nv\nr\nÎ¼\n=\n\nVtxa: Velocity at perigee point on transfer orbit\ntxA\nA\ntx\nv\nr\na\nÎ¼ â\nâ\n=\n-\nâ\nâ\nâ\nâ \n\nVfxb: Velocity at apogee point on transfer orbit\ntxB\nB\ntx\nv\nr\na\nÎ¼ â\nâ\n=\n-\nâ\nâ\nâ\nâ \n\nThe velocity changes required at each staging is computed as follows.\nâVA: Velocity change at the perigee of transfer orbit (1st burn)\nA\ntxA\niA\nV\nV\nV\nâ\n=\n-\n\nâVB: Velocity change at the apogee of transfer orbit (2nd burn)\nB\nfB\ntx\nV\nV\nV\nâ\n=\n-\nB\n\nAfter verifying that both âVA and âVB are smaller than\nmax\nV\nâ\nfrom propellant, total V\nâ\nand\ntransfer time can be determined by:\n\ntotal\nA\nB\nV\nV\nV\nâ\n= â\n+ â\n\ntx\na\nt\nÏ\nÎ¼\nâ=\n\nThis is implemented in compute_Hohmann_transfer.m.\n\nInput\nrA\n\ninner orbit radius\nrB\nouter orbit radius\nÎ¼\n\ngravitational constant of the body orbiting\n\nOutput\n\nâV\n\nâV required for transfer\n\nât\n\ntime required for transfer\nElliptical & Hyperbolic Transfer\nElliptical & Hyperbolic Transfer is a modified version of Hohmann to achieve rapid transfer.\nExtra energy was put at the first burn, and transfer orbit can be a bigger ellipse than Hohmann\ntransfer orbit or a hyperbola.\n\nFirst, decide maximum rc, apoapsis of transfer orbit, which should achieve the fastest transfer,\naccording to\ndue to propellant.\nmax\nV\nâ\n\natx; Semimajor axis of transfer eclipse\nrc\nra\natx\n+\n=\n\nVia: Velocity in the initial orbit\nra\nVia\nÎ¼\n=\n\nVfb: Velocity in the final orbit\nrb\nVfb\nÎ¼\n=\n\nVtxa: Velocity at perigee point on transfer orbit\nâ\nâ \nâ\nâ\nâ\nâ\n-\n=\natx\nra\nVtxa\nÎ¼\n\nVfxb: Velocity at apogee point on transfer orbit\nâ\nâ \nâ\nâ\nâ\nâ\n-\n=\natx\nrb\nVtxb\nÎ¼\n\nVa\nâ\n: Velocity change at the perigee of transfer orbit (1st burn)\nVia\nVtxa\nVa\n-\n=\nâ\n\nVb\nâ\n: Velocity change at the apogee of transfer orbit (2nd burn)\nÏ\ncos\nVfbVtxb\nVtxb\nVfb\nVb\n-\n+\n=\nâ\n\nwhere\n\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\n+\n=\n-\nÎ½\nÎ½\nÏ\ncos\nsin\ntan 1\ne\ne\n\n(\n)\nâ¥\nâ¥\nâ¥\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ¢\nâ¢\nâ¢\nâ£\nâ¡\nâ­\nâ¬\nâ«\nâ©\nâ¨\nâ§\n-\n-\n=\n-\ne\nrb\ne\natx\ncos\nÎ½\n\nConsidering that both\nand\nare smaller than\nVa\nâ\nVb\nâ\nmax\nV\nâ\nfrom propellant, we can get\nmaximum rc, accordingly. Also, e is also determined by:\n\natx\nra\ne\n-\n=1\n\n1)\n>\n\nVa\nâ\nVb\nâ\n\nFirst, the code assumes that\nis the limitation. By deploying the equation of\n=\nVa\nâ\nVa\nâ\nmax\nV\nâ\n,\nmaximum atx and rc are calculated as follows:\nmax\ntx\nA\nA\na\nV\nr\nr\nÎ¼\nÎ¼\n=\nâ\nâ\n+ â\nâ\nâ\nâ\nâ \n-\n\nra\natx\nrc\n-\n= 2\n\nVerify that\ncorresponding to this rc is smaller than\nVb\nâ\nmax\nV\nâ\n.\n\n2)\n>\n\nVb\nâ\nVa\nâ\nTry out this case only if\n>\n.\nVb\nâ\nmax\nV\nâ\nStart from the decent number of rc (>rb), and increase the number until\nvalue becomes\nbigger than\n. The maximum value of rc which still achieve\nVb\nâ\nmax\nV\nâ\nVb\nâ\n<\nmax\nV\nâ\ndetermines the\nfastest transfer.\n\nIn either case, plugging into rc value obtained into the equations above leads to\ntotal and\ntransfer time required.\nV\nâ\n\nVb\nVa\nVtotal\nâ\n+\nâ\n=\nâ\n\n(\n)\nE\ne\nE\natx\nt\nsin\n.0\n-\n=\n\nwhere\n\ncos\ncos\ncos\ne\nE\ne\nÎ½\nÎ½\n-\n+\nâ¡\nâ¤\n=\nâ¢\nâ¥\n+\nâ£\nâ¦\n\nThis is implemented in compute_high_energy_transfer.m.\n\nInput\nrA\n\ninner orbit radius\nrB\nouter orbit radius\nÎ¼\ngravitational constant of the body orbiting\nâVmax\nmaximum impulsive âV available\n\nOutput\n\nâV\n\nâV required for transfer\n\nât\n\ntime required for transfer\nHohmann Transfer Segments\nThis transfer orbit is often chosen for a low-thrust transfer, using low thrust chemical or\nelectrical propulsion.\n\nFirst, calculate the value of atk (semimajor axis of\ntransfer eclipse) achievable using\nfrom propellant by deploying\nth\nk\nmax\nV\nâ\nVak\nâ\n=\nmax\nV\nâ\n:\natk: Semimajor axis of\ntransfer\nth\nk\nÎ¼\nÎ¼\nmax\n)1\n(\nâ\nâ\nâ \nâ\nâ\nâ\nâ\nâ\nâ\n+\nââ\nâ \nâ\nââ\nâ\nâ\n-\n-\n-\n=\nV\nk\nat\nra\nra\natk\n\nrck: Apoapsis of\ntransfer orbit\nth\nk\nra\natx\nrck\n-\n= 2\n\nwhere\nat0 = ra (k=0)\natK = rb (k=K, final orbit)\n\nVia: Velocity in the initial orbit\nra\nVia\nÎ¼\n=\n\nVfb: Velocity in the final orbit\nrb\nVfb\nÎ¼\n=\n\nVtka: Velocity at perigee point on\ntransfer orbit\nth\nk\nâ\nâ \nâ\nâ\nâ\nâ\n-\n=\natkx\nra\nVtka\nÎ¼\n\nVi\nâ\nVelocity change at the perigee of transfer orbit on\nburn\nth\nk\na\nk\nVt\nVtka\nVak\n)1\n( -\n-\n=\nâ\n\nTotal velocity change and total transfer time required are accumulated in each transfer orbit\nsegments, and are determined by:\n\nâ\nâ \nâ\nâ\nâ\nâ\n-\n+\nâ\n=\nâ\nâ\n=\natk\nrb\nVi\nVtotal\nk\ni\nÎ¼\n\n(\n)\n(\n)\nÎ¼\nÎ¼\nrk\nra\nrk\nra\nt\nk\ni\n+\nÎ \n+\n+\nÎ \n= â\n-\n=\n\nSpiral Orbit Transfer\nGiven a propulsion system with a very low acceleration capability (i.e.T/W < 10-3), we cannot\napproximate each maneuver as impulsive due to high gravity loss (see Approach, STEP1). This\nimplies that the aforementioned orbit transfers cannot be used. In such case, we can use a spiral\norbit transfer (see Figure 2). During a spiral orbit transfer, the spacecraft thrusts continuously\nuntil it reaches the desired orbit.\n\nro\nrf\n\nFigure 2. Low thrust spiral orbit.\n\nEdelbaum [2] has introduced a method for optimal low-thrust transfer between inclined circular\norbits, which is also discussed in [1]. For coplanar orbit transfer between two circular orbits,\nhowever, we can derive the equations for the necessary âV and the time for orbit transfer using\nbasic knowledge of the orbital mechanics and few key assumptions.\n\nAssuming that the spacecraft thrusts in the direction of it's velocity vector, the change in the\nspecific mechanical energy, Îµ, of the spacecraft with mass m is\n\nd\nT v\na v\ndt\nm\nÎµ =\nâ=\nâ,\n(4)\n\nwhere T is thrust (assumed constant), a is the acceleration of the spacecraft, and v is velocity.\nGiven that the thrust is very small, we can assume that the orbit remains relatively circular. That\nis,\n\nd\ndt\nr\ndt\ndr\nÎµ\nÎ¼\n=\n,\n(5)\n\nwhere Î¼ is the gravitational constant and r is the radius at which the spacecraft is in. Equating\nEqs. (4) and (5), and assuming constant acceleration, we can compute the amount of time the\nspacecraft takes, ât, to transfer to a circular orbit at rB radius:\n\nA\nB\nt\na\nr\nr\nÎ¼\nÎ¼\nâ\nâ\nâ=\n-\nâââ\nâ \nââ\nt\n\n(6)\n\nThe total âV necessary to transfer to a circular orbit with radius rB from rA is then given by:\n\ntotal\nV\na\nâ\n=\nââ\n(7)\n\nThis is implemented in compute_spriral_transfer.m.\n\nInput\nrA\n\ninner orbit radius\nrB\nouter orbit radius\nÎ¼\ngravitational constant of the body orbiting\nmi\n\ninitial total mass, i.e. mdry + mwet\nT\n\nthrust\n\nOutput\n\nâV\n\nâV required for transfer\n\nât\n\ntime required for transfer\nSTEP 3: Compute the propulsion system mass.\nOnce propulsion system type has been chosen and the necessary âV budget is determined, we\ncan compute the necessary propellant mass mprop from the rocket equation:\n\n0 sp\nV\ng I\nprop\ndry\ndry\nm\nm\ne\nm\nâ\n=\n-\n\n(8)\n\nwhere Isp is the specific impulse of the propulsion system chosen, g0 is the acceleration due to\nEarth's gravitational force at the sea level. Note that in general, the true dry mass mdry is\nunknown since the propulsion system mass is unknown among others. Thus, this number has to\nbe estimated in the beginning and must be updated as better estimate of the dry mass is generated.\n\nNow with the propellant mass, we can calculate the mass of the propulsion system. Once the\npropulsion system mass is calculated, the dry mass must be updated and the whole process must\nbe iterated until it converges to a desired level of confidence.\nChemical\nWe could go through a detailed analysis to determine the mass of a chemical propulsion system,\nsuch as monopropellant and bipropellant systems. The analysis, however, become very complex\nand tedious. Furthermore, there are many detailed design choices required to compute the\npropulsion system mass. While such tool would be great for future use, we take a very simple\napproach to approximating the chemical propulsion system mass. That is, we assume that\napproximately 85 ~ 90% of the system mass is the propellant mass [5]. Pressurant, tanks, lines,\nfittings, components, etc. contributes to the remaining 15%.\n\n0.85\nprop\nTotal\nm\nm\n=\n\n(9)\nSolid\nSimilar to the chemical propulsion system, we take a crude approximation of the solid rocket\npropulsion system mass as a mass fraction. Typically, 82 ~ 94% of a solid rocket prolusion\nsystem mass account for the propellant mass. We take the conservative 82%.\n\n0.82\nprop\nTotal\nm\nm\n=\n\n(10)\nElectric Propulsion\nFor electric propulsion, we will use a simple empirical model [3] to estimate the mass of the\npropulsion system. This is will more than suffice for our desired level of fidelity. This tool could\nbe replaced with higher fidelity model as desired or necessary in the future.\n\nFirst, we compute the efficiency of the propulsion system Î· as follows:\n\n(\n)\nln\nthruster\nPowerProcessor\nsp\nA\nB\nI\nÎ·\nÎ·\nÎ·\n=\n=\n+\n\n(11)\n\nwhere the constants A and B are defined in Table 1.\n\nTable 1. Empirical data for modeling the efficiency and the specific mass of an electric propulsion system.\n\nConstants for Models\nPropulsion System\nA\nB\nC\nD\nH2 Arcjet\n\n5.0\nNH3 Arcjet\n\n1.8\nAr Ion\n-2.024\n0.307\n-0.781\n\nXe Ion\n-1.776\n0.307\n-1.198\nHg Ion\n-0.765\n0.181\n-1.136\nAr MPD\n-0.591\n0.126\nAr PIT\n-1.99\n0.32\n\nGiven the flow rate of the propellant as a function of the propellant mass and the duration for\nwith the thruster is turned on âtburn,\n\nprop\nburn\nm\nm\nt\n= â\n\n(12)\n\nwe can compute the necessary power:\n\n(\n)\nsp\nm I g\nP\nÎ·\n=\n\n(13)\nThen, the mass of the thruster and the power processor is computed from an empirical formula\nusing Table 1 where:\n\n(14)\nD\nThruster\nPowerProcessor\nsp\nm\nm\nCI\n+\n=\nP\n\nFinally the tank mass is calculated using one of the equation listed in Table 2.\n\nTable 2. Electric propulsion system propellant tank mass.\nPropellant Type\nPropellant Mass Range (kg)\nTank Mass (kg)\nNH3\n5000 ~ 18300\n120 + 0.173 mprop + 2.28 mprop\n2/3\nNH3\n18300 ~ 2200\n1020 + 0.198 mprop\nHe\n5000 ~ 13000\n610 + 0.493 mprop\nXe\n5000 ~ 2200\n52 + 0.075 mprop + 0.154 mprop\n2/3\n\nThe total electrical propulsion system ass is:\n\n(15)\nPr\nPr\nTotal\nThruster\nower\nocessr\nTank\nprop\nm\nm\nm\nm\nm\n=\n+\n+\n+\n\nWhile the mass of the necessary power source for the propulsion system may be significant, it\nisn't included as it overlaps with the power subsystem's requirements.\n\nImplementation Source Code\ncompute_impulsive_Delta_V_max.m\n\nfunction Delta_V_max =\ncompute_impulsive_Delta_V_max(m_o,m_prop,mu,r,thruster)\n% DELTA_V_MAX = COMPUTE_IMPULSIVE_DELTA_V_MAX(M_O,M_PROP)\n%\n% Inputs:\n% M_O Initial total mass, i.e. m_dry + m_wet\n% M_PROP Available propellant mass\n% MU Gravitational constant of the body orbiting\n% R radius of the initial orbit\n% TRUSTER Thruster info\n%\n% Outputs:\n% DELTA_V_MAX Maximum impulsive Delta V available\n\n% reject any invalid inputs\nif (m_o <= m_prop)\nerror('Error! Propellant mass must be less than the initial spacecraft\nmass.');\nend\n\ntheta = 2*pi/12; % Angle of the orbit for wich the Delta V occurs. [rad]\n% Assume pi/12 ~ 0, i.e. small angle approximation.\n\ng = 98.1; % Earth gravity at sea level [m/s^2]\n\n% Maximum propellant available during an impulsive burn. [kg]\nDelta_m_max = min(m_prop, theta * thruster.T * r^(3/2) /...\n(g*thruster.I_sp * sqrt(mu)));\n\n% Maximum Delta_V available during an impulsive burn. [m/s]\nDelta_V_max = g * thruster.I_sp * log(m_o/(m_o - Delta_m_max));\n\ncompute_high_energy_transfer.m\nfunction [Delta_V,Delta_t] =\ncompute_high_energy_transfer(mu,r_A,r_B,Delta_V_max)\n% [DELTA_V,DELTA_T] = COMPUTE_HIGH_ENERGY_TRANSFER(MU,R_A,R_B,Delta_V_max)\n%\n% Inputs:\n% MU Gravitational constant of the body orbiting\n% R_A Radius of the inner circular orbit\n% R_B Radius of the outer circular orbit\n% Delta_V_max Maximum impulsive Delta_V available\n%\n% Outputs:\n% DELTA_V Total Delta_V necessary for Hohmann transfer\n% Delta_T Orbit transfer time\n\n% Constrain so that the first burn is no greater than the max allowed.\nDelta_V_A = Delta_V_max;\n\nv_iA = sqrt(mu/r_A); % Velocity for inner circular orbit [m/s]\nv_fB = sqrt(mu/r_B); % Velocity for outer circular orbit [m/s]\n\n% Compute the transfer orbit assuming that the maximum Delta_V_max is used\n% at point A.\n\nv_txA = Delta_V_max + v_iA; % Velocity for transfer orbit at first\nburn [m/s]\na_tx = 1/(2/r_A - v_txA^2/mu); % Semi-major axis of the transfer orbit\n[m]\ne = 1 - r_A/a_tx; % Eccentricity of the transfer orbit\nnu = acos((a_tx*(1-e^2)/r_B - 1)/e);% True anomaly at the second burn [rad]\nphi = atan(e*sin(nu)/(1+e*cos(nu)));% Flight path angle at second burn [rad]\nv_txB = sqrt(mu*(2/r_B - 1/a_tx)); % Velocity for transfer orbit at second\nburn [m/s]\n% Second burn Delta_V necessary [m/s]\nDelta_V_B = sqrt(v_fB^2 + v_txB^2 - 2*v_fB*v_txB*cos(phi));\n\n% Check to see if the second burn is less than the maximum allowed.\nif (Delta_V_B <= Delta_V_max)\n% The first burn is the limiting factor.\nDelta_V = Delta_V_A + Delta_V_B; % Total Delta_V [m/s]\nE = acos((e + cos(nu))/(1+e*cos(nu))); % Eccentricy anomaly at\nsecond burn [rad]\nDelta_t = sqrt(a_tx^3/mu)*(E-e*sin(E)); % Orbit transfer time [sec]\nreturn\nelse\n% The second burn is the liminting factor.\nDelta_V_B = Delta_V_max; % Delta_V at second burn\n[m/s]\na_tx = search_a_tx(mu,r_A,r_B,Delta_V_B); % Semi-major axis of transfer\noribt [m]\nv_txA = sqrt(mu*(2/r_A - 1/a_tx)); % Velocity for tranfer orbit\nat first burn [m/s]\nDelta_V_A = v_txA -v_iA; % Delta_V at first burn [m/s]\nDelta_V = Delta_V_A + Delta_V_B; % Total Delta_V [m/s]\ne = 1 - r_A/a_tx; % Eccentricity of the\ntransfer orbit\nnu = acos((a_tx*(1-e^2)/r_B - 1)/e); % True anomaly at the second\nburn [rad]\nE = acos((e + cos(nu))/(1+e*cos(nu))); % Eccentricy anomaly at\nsecond burn [rad]\nDelta_t = sqrt(a_tx^3/mu)*(E-e*sin(E)); % Orbit transfer time [sec]\nend\n\nfunction Delta_V_B = compute_Delta_V_B(a_tx,mu,r_A,r_B)\ne = 1 - r_A/a_tx % Eccentricity of the\ntransfer orbit\nnu = acos((a_tx*(1-e^2)/r_B - 1)/e); % True anomaly at the second\nburn [rad]\nphi = atan(e*sin(nu)/(1+e*cos(nu))); % Flight path angle at second\nburn [rad]\nv_txB = sqrt(mu*(2/r_B - 1/a_tx)); % Velocity for transfer orbit\nat second burn [m/s]\nv_fB = sqrt(mu/r_B); % Velocity for outer circular\norbit [m/s]\nDelta_V_B = sqrt(v_fB^2 + v_txB^2 - 2*v_fB*v_txB*cos(phi))\n\nfunction a_tx = search_a_tx(mu,r_A,r_B,Delta_V_B)\nallowable_percent_error = 0.000001;\na_tx_low = r_B/2;\na_tx = (r_A + r_B)/2;\na_tx_high = (r_A + r_B)*10000;\n\nquit = 0;\nwhile (not(quit))\ndifference = Delta_V_B - compute_Delta_V_B(a_tx,mu,r_A,r_B); % This\nshould be zero\nif ((a_tx_high - a_tx)/a_tx < allowable_percent_error | ...\n(a_tx - a_tx_low)/a_tx < allowable_percenT_error);\nquit = 1;\nelseif (difference > 0)\na_tx_low = a_tx;\na_tx = (a_tx_high - a_tx)/2;\nelseif (difference < 0)\na_tx_high = a_tx;\na_tx = (a_tx - a_tx_low)/2;\nend\nend\n\ncompute_Hohmann_transfer\nfunction [Delta_V,Delta_t] = compute_Hohmann_transfer(mu,r_A,r_B)\n% [DELTA_V,DELTA_T] = COMPUTE_HOHMANN_TRANSFER(MU,R_A,R_B)\n%\n% Inputs:\n% MU Gravitational constant of the body orbiting\n% R_A Radius of the inner circular orbit\n% R_B Radius of the outer circular orbit\n%\n% Outputs:\n% DELTA_V Total Delta_V necessary for Hohmann transfer\n% Delta_T Hohman transfer time\n\n% reject any invalid inputs\nif (r_A > r_B)\nerror('Error! Inner orbit radius is larger than the outer.');\nend\n\nv_iA = sqrt(mu/r_A); % Velocity for inner orbit [m/s]\nv_fB = sqrt(mu/r_B); % Velocity for outer orbit [m/s]\na_tx = (r_A + r_B)/2; % Semi-major axis of transfer orbit [m/s]\nv_txA = sqrt(mu*(2/r_A - 1/a_tx)); % Velocity at periapsis for m/s]\nv_txB = sqrt(mu*(2/r_B - 1/a_tx)); % Velocity at apoapsis for [m/s]\nDelta_V_A = v_txA - v_iA; % Delta_V at periapsis of [m/s]\nDelta_V_B = v_fB - v_txB; % Delta_V at apoapsis of transfer [m/s]\nDelta_V = Delta_V_A + Delta_V_B; % Total Delta V required transfer [m/s]\nDelta_t = pi*sqrt(a_tx^3/mu); % Hohmann transfer time [s]\n\ncompute_spiral_transfer\nfunction [Delta_V,Delta_t] = compute_spiral_transfer(mu,r_A,r_B,m_i,T)\n% [DELTA_V,DELTA_T] = COMPUTE_SPIRAL_TRANSFER(MU,R_A,R_B,M_I,T)\n%\n% Inputs:\n% MU Gravitational constant of the body orbiting\n% R_A Radius of the inner circular orbit\n% R_B Radius of the outer circular orbit\n% M_I Initial Total Mass\n% T Thrust\n\n%\n% Outputs:\n% DELTA_V Total Delta_V necessary for Hohmann transfer\n% Delta_T Hohman transfer time\n\n% reject any invalid inputs\nif (r_A > r_B)\nerror('Error! Inner orbit radius is larger than the outer.');\nend\nif (T/m_i*g > 10e3)\nerror('Error! Too much thrust for spiral transfer assumptions.');\nend\n\na = T/m_i; % Acceleration [m/s^2]\nDelta_t = (sqrt(mu/r_A) - sqrt(mu/r_B))/a; % Orbit transfer time [s]\nDelta_V = a*Delta_t; % Total Delta V required for orbit transfer [m/s]\n\nReferences\n1. Chobotov V., Orbital Mechanics, 2nd ed. Reston, VA: American Institute of Aeronautics and\nAstronautics, Inc., 1996.\n2. Edelbaum, T., \"Propulsion Requirements for Controllable Satellites,\" ARS Journal, Vol. 31,\nAugust 1961, pp. 1079-1089.\n3. Humble R., Henry G., Larson W., Space Propulsion Analysis and Design., New York: The\nMcGraw-Hill Companies, Inc. Primis custom Publishing, 1995.\n4. Sutton G. and Biblarz O., Rocket Propulsion Elements, New York: John Wiley & Sons, Inc.,\n2001.\n5. Wertz, J., and Larson, W., Space Mission Analysis and Design, 3rd ed. Torrance, CA:\nMicrocosm Press, 1999."
    },
    {
      "category": "Resource",
      "title": "ps2_cs_ps2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/f1ad4bfb90a9d745ac8266e22e710766_ps2_cs_ps2.pdf",
      "content": "Kathryn Weiss\nChristopher Hynes\n16.851 - Satellite Engineering\nDue: Tuesday, September 23, 2003\n\nProblem Set #2: Problem Definition\n\nSubject: Orbit Maneuvering and Power\n\nMotivation: Many of today's spacecraft use solar panels to power their various subsystems.\nThere are a variety of factors that influence the size and type of solar panels to be used.\nDepending on the altitude and inclination of the spacecraft's orbit, the surface of the solar array\nmay be eclipsed for some time. In addition, there are three types of solar cells (Gallium\nArsenide, Indium Phosphide and Silicon) that provide varying amounts of power. The surface\narea of a solar array must be adjusted so that the power requirements of the spacecraft's\nsubsystems can be fulfilled given these constraints.\n\nProblem Statement: What is the surface area of a solar panel needed to produce enough power to\nfulfill the power requirements of a given spacecraft? How does this surface area vary given the\nspacecraft's altitude and inclination? How does this surface area vary given the type of the solar\ncells, i.e. Gallium Arsenide, Indium Phosphide or Silicon?\n\nApproach: We will write a Matlab program to find solar array size needed to fulfill the power\nrequirements for a spacecraft given a particular orbit. The program user will input the power\nneeded as well as the altitude and inclination of the spacecraft's orbit. It is assumed that the orbit\nwill be fixed throughout the lifetime of the spacecraft. Given the orbital parameters, the time the\nsatellite is in eclipse and in daylight will be calculated. The program will then determine the size\nof the solar array for three different solar cell types: Gallium Arsenide, Indium Phosphide and\nSilicon. The results for the three solar cell types will be displayed in Matlab."
    },
    {
      "category": "Resource",
      "title": "l1_launch_system.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/50f5d348d79d68dc5ce2b39b5af16283_l1_launch_system.pdf",
      "content": "LAUNCH SYSTEMS\nCol. John Keesee\n5 September 2003\n\nOutline\n- Launch systems characteristics\n- Launch systems selection process\n- Spacecraft design envelope &\nenvironments.\n\nLesson Objectives\n- Each student will\n- Understand launch system characteristics, sizing and\ntrade-offs.\n- Estimate launch system sizes, staging requirements.\n- Be able to select appropriate launch system for a given\nmission from available systems.\n- Be able to estimate spacecraft requirements driven by\nlaunch vehicle induced environments.\n- Determine costs of launch systems.\n\nRocket Basics\nThrust\nSpecific impulse\nwhere K depends on J and the engine pressure ratio\n)\n(\nf\n\np\ne\np\ne\nA\ne\nV\ne\nm\nF\n\nM\nc\nT\nK\nIsp\ng\nm\nF\nIsp\n\n{\nme\nVe\nPe\nAe\nf\np\nFuel in\nOxidizer in\nThrust\npc\nThroat\n\nRocket Equation\nWhere is the mass ratio\n(Assumes zero losses due to drag and gravity)\nt\nm\no\nM\nveh\nM\ng\nveh\nM\nIsp\nm\nveh\nM\nF\na\n\n'V adt Isp g\nd m\ndt dt\nMo dm\nd t t\nt\no\nt\nf\n\nÂ·\n\n(c)\nÂ§\n\nÂ·\n\n(c)\nÂ§\n\nÂ·\n\n(c)\nÂ§\n\n'\nR\nn\nIsp\ng\nf\nMo\nM\nn\nIsp\ng\npropellant\nM\no\nM\no\nM\nn\nIsp\ng\nV\n\"\n\"\n\"\nR Mo\nMf\n\nRocket Equation (Cont.)\nMp Mf e\n'V\nIsp g\nÂ§\n(c)\n\nÂ·\n\na\nÂ¬\nÂ«\nÂ«\nÂ«\nÂ«\nÂ«\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»\nÂ»\nÂ»\nÂ»\nÂ»\nÂ»\nMo1e'V/Isp g\nÂ§\n(c)\n\nÂ·\n\na\nÂ¬\nÂ«\nÂ«\nÂ«\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»\nÂ»\nÂ»\nÂ»\nMp\n= mass of propellant\nMo\n= initial mass\nMf\n= final mass\n'V\n= vehicle velocity change\nMveh = vehicle mass\n\nStaging\n- Near burnout, rocket acceleration is diminished because\npayload mass includes entire launch systems structure.\n- Staging removes lower stage structural weight\nMoi = initial mass of rocket including all upper stages and\npayload.\nMfi = final mass after stage has burned before separation.\ni = stage number\n'V = 'Vi\n\n'Vi g Isp \"n\nMoi\nMfi\nÂ§\n(c)\n\nÂ·\n\nStaging (Cont.)\nO = payload fraction =\nor\nMpayload i = mass of payload plus all upper stages\nStructure fraction\nMsi = mass structure for stage i\nMpi = mass propellant for stage i\nMpayload\nMo\nOi Mpayload\nmoi\ni\nO 3\ni 1\nn Oi\nHsi\nMsi\nMoi\n\nMsi\nMpiMsiMpayload i\n\nLaunch Vehicle Forces\nW\nL\nD\nV\nx\nz\ncp\nT\nI\nD\nFlight path angle\nAngle of attack\nax g T\nW sin I D\nÂ§\n(c)\n\nÂ·\nD\nW cos D\nÂ§\n(c)\nÂ·\n1 L\nW sin D\nÂ§\n(c)\nÂ·\na\nÂ¬\nÂ«\nÂ«\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»\nÂ»\nÂ»\naz g cos ID\nÂ§\n(c)\n\nÂ·\nD\nW sin D L\nW cos D\na\nÂ¬\nÂ«\nÂ«\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»\nÂ»\nÂ»\n\nLaunch System\nSelection Process\n- Mission needs and objective\n- Mission requirements\n- Altitude\n- Inclination\n- Right ascension of ascending node (RAAN)\n- Payload dimensions\n- Launch system performance, availability, cost,\nreliability\n- Fairings\n- Upperstage\n\nExample Launch Systems\nLaunch\nSystem\nUpper\nStage\nLEO\n(kg)\nGTO\n(kg)\nGEO\n(kg)\nPolar\n(kg)\nAtlas\nIIAS\nCentaur\n2A\nDelta II\n7920/25\nPAM-D 5089\nPegasus\nXL\nShuttle\n-\nIUS\n24,400\nTaurus\nStar 37\nTitan IV\n-\nCentaur\n14,110\n\nExample Orbit\nTransfer Vehicles\nCharacteristics\nPAM-D\nIUS\nCentaur\nLength (m)\n2.04\n5.2\n9.0\nDiameter (m)\n1.25\n2.9\n4.3\nMass (kg)\n14,865\n18,800\nThrust (N)\n66,440\n200,000\n147,000\nIsp\n292.6\n292.9\nStructure mass\nPropellant mass\n16,700\nAirborne support\nequipment mass\n\nLaunch Sites Criteria\n- Minimum inclination\n- Launch azimuth\n- Weather\nOrbital\nmotion\nTo sun\nEarth rotation\n\nUS Launch Sites and Launch\nSystems\n- Western range (Vandenberg AFB):\n- LMMS Titan II, IV-B, Athena\n- Boeing Delta II, III, EELV\n- OSC Taurus, Minotaur, Pegasus\n- Equatorial launch site:\n- Boeing SeaLaunch\n- Alaska Spaceport\n- OSC Minotaur\n\nUS Launch Sites and Launch\nSystems (continued)\n- Eastern Range (Cape Canaveral Air Station,\nKennedy Space Center):\n- STS\n- LMMS Titan IV; Atlas II, IIA, IIAS; EELV\n- Boeing Delta II, III, EELV\n- Orbital Pegasus XL, (Taurus, Minotaur)\n- Coleman/TRW/IAI Shavit\n- Wallops Island\n- Pegasus XL, Minotaur\n\nTypical Launch Vehicle\nIntegration Tasks\n-\nMission Orbit Planning\n- Effect of launch delays, launch window definition\n-\nLaunch vehicle and spacecraft performance analyses\n- LV performance variations vs mission impacts\n-\nDefining, implementing mission unique requirements\n- Ground processing, ground testing\n- Launch vehicle interfaces - power, command, telemetry, etc.\n- Critical s/c commands: self-generated, booster provided, backup\ntimers?\n-\nFlight safety systems - range destruct protocols: installation and test of\nrange destruct packages\n-\nDeveloping multi-agency day-of-launch launch ops procedures\n- Example: Go/No-Go limits\n\nLaunch Services - Scheduling\n- LMMS Atlas Commercial template\n- @ 36 months, select a 3 month window\n- @ 12 months, select a 30 day slot\n- @ 6 months, select a launch day\n- STS templates:\n- 36+ months for a Primary payload\n- 24 months minimum for secondary payloads\n\nPayload Integration\n-\nFairing size and shape\n-\nMaximum accelerations\n-\nVibration frequencies and magnitudes\n-\nAcoustic frequencies and magnitudes\n-\nTemperature extremes\n-\nAir cleanliness\n-\nOrbital insertion accuracy\n-\nInterfaces to launch site and vehicle\nGround handling, ground and airborne\ntransportation, and launch environment may be\nmore severe than space operating environment\n\nFairings\n- Protection from aerodynamic loading\n- Diameter and length constraint\n- Acoustic environment\n- Jettison Altitude\n\nStructural & Electrical Interface\n- Physical support adaptors\n- Separation/deployment system\n- Kick motor/Spin tables\n- Electrical interface\n- Access\n- Physical\n- Electrical\n- Optical\n- Radio frequency\n\nPayload Environments\n- Thermal\n- Pre-launch\n- Ascent fairing radiant\n- Aero-heating (Free molecular heating)\n- Electromagnetic\n- Contamination\n- Venting\n- Acceleration\n- Vibration\n- Acoustics\n- Shock\n\nAcceleration Load Factors\nLift off\nMax\nAirloads\nStage 1\nshutdown\nStage 2\nshutdown\nVehicle\nAxial\nLater\nal\nAxial\nLateral\nAxial\nLater\nal\nAxial\nLater\nal\nTitan 34D/IUS steady\nDynamic\n+1.5\n+1.5\n+ 5.0\n+2.0\n+ 1.0\n+ 2.5\n0 - +4.5\n+ 4.0\n+ 2.0\n0 - +2.5\n+ 4.0\n+ 2.0\nAtlas II steady\ndynamic\n+1.3\n+1.5\n+1.0\n+2.2\n+ 0.3\n+0.4\n+ 1.2\n+5.5\n+ 0.5\n+ 0.5\n+4.0\n+ 2.0\n0.5\nDelta steady\ndynamic\n+2.4\n1.0\n2 to 3\n+6.0\nShuttle IUS steady\nDynamic\n+3.2\n+3.5\n+2.5\n+3.4\n+1.1\nto 3.2\n+0.25 to\n-0.59\n+3.2\n+0.59\n\nVibration Environments\n- Caused by\n- Launch system propulsive dynamic acceleration\n- Unsteady aerodynamic effects\n- Acoustic pressure from engines\n- Amplified mechanical response of vehicle structure\n- Includes ground and airborne transportation\n- Yields structural stiffness requirement on\npayload and adaptor/interface.\n\nShock Loads\nCaused by pyrotechnic devices used to separate\nfrom launch.\nStaging, engine starts and shut down.\n\nAcoustic Environments\n- Caused by\n- Reflected sound energy from launch pad structures\nand facilities.\n- Maximum dynamic pressure (max q) aerodynamics.\n- Affected by fairing design\n\nInjection Accuracy\n- Final stage guidance and propulsion\nperformance determines injection accuracy.\n- Apogee, perigee, inclination\n- Payload's Attitude Determination and Control\nSystem must capture and correct linear and\nrotational tip-off rates, and injection errors.\n\nPayload Integration Procedures\n- Mating spacecraft to launch vehicle.\n- Spin tests.\n- Propellant loading.\n- Pre-launch test of all subsystems.\n\nPayload Processing\n- Receiving inspection\n- Payload & ground support equipment\n- Installing hardware (batteries, guidance\nsystems)\n- Pressure checks\n- Communication and payload functional test\n\nLaunch System\nCost Estimate\n- Determined from supplier.\n- Should include integration and check out costs,\nlaunch support systems and launch integration\ncosts.\n- Small payloads may ride as a secondary\npayload.\n- Example launch system costs.\n\nReferences\n- Launch system user handbooks.\n- Lockheed Martin, Boeing, Orbital, etc. (or www)\n- AIAA Launch Vehicle Summary (in Library)\n- International Space Industry Report\n- Reducing Space Mission Costs. Wertz and Larson"
    },
    {
      "category": "Resource",
      "title": "l2_orbital_mech.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/4d385d5034d5812233944921d570b067_l2_orbital_mech.pdf",
      "content": ""
    },
    {
      "category": "Resource",
      "title": "l3_scpowersys_dm_done2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/2c8a1a136db0e366ae8d1a1e2995a505_l3_scpowersys_dm_done2.pdf",
      "content": "Spacecraft Power Systems\nDavid W. Miller\nJohn Keesee\n\nElectrical Power System\nPower\nSource\nEnergy\nStorage\nPower\nDistribution\nPower Regulation\nand Control\nEPS\n\nPower Sources\nPrimary Batteries\nRadioisotope\nSecondary Battery\nThermionic converter\nFuel cell\nThermoelectric converter\nRegenerative fuel cell\nPhotovoltaic\nChemical dynamic\nSolar dynamic\nNuclear\nFlywheel Storage\nElectrodynamics Tethers\nPropulsion-charged tether\n\nPower Source Applicability\nFUEL CELL\nCHEMICAL\nDYNAMIC\n(APUs)\nHOURS\nLOAD POWER (kW)\nNUCLEAR\nNUCLEAR THERMIONICS\nSOLAR DYNAMIC AND\nPHOTOVOLTAIC\nNUCLEAR THERMIONIC\nOR SOLAR DYNAMIC\nPHOTOVOLTAIC OR\nISTOTOPE - THERMOELECTRIC\nMONTHS\nYEARS\nPRIMARY\nBATTERIES\n1 DAY\n0.1\n0.1\n6 810\n10 DAYS\nApproximate ranges of application of different power sources.\n\nDesign Space for RTGs\n5-Year Design\nLife\n% of Original Power\nYears\nThe 87-year half-life of Pu-238 results in 96% of the original heat\noutput even after five years\nElectric - Power Level (kW)\nDuration of Use\nMIN\n1 HOUR\n1 DAY\n1 MONTH\n1 YEAR\n10 YEARS\nChemical\n10-1\nRadioisotopes\nNuclear reactors\nSolar\n\nPrimary Battery Types\nSilver zinc\nLithium sulfur\ndioxide\nLithium\ncarbon\nmonofluoride\nLithium\nthionyl\nchloride\nEnergy density\n(W h/kg)\nEnergy density\n(W h/dm3)\nOp Temp\n(deg C)\n0-40\n-50 - 75\n? - 82\n-40 - 70\nStorage Temp\n(deg C)\n0 - 30\n0 - 50\n0 - 10\n0 - 30\nStorage Life\n30-90 days\nwet, 5 yr dry\n10 yr\n2 yr\n5 yr\nOpen circuit\nvoltage(V/cell)\n1.6\n3.0\n3.0\n3.6\nDischarge\nvoltage(V/cell)\n1.5\n2.7\n2.5\n3.2\nManufacturers\nEagle Pitcher,\nYardley\nHoneywell,\nPower Conver\nEagle Pitcher\nDuracell,\nAltus, ITT\n\nSilver Zinc Cells\n- Wide use in industry\n- High energy density, high discharge rate\ncapability, fast response\n- Short lifetime\n- Vent gas during discharge\n- Potentially rechargeable but few cycles\n\nLithium cells\n- Higher energy density than silver zinc\n- Wide temperature range\n- Low discharge rate (high internal\nimpedance)\n- Rapid discharge may cause rupture\n- Slow response\n\nSecondary Battery Types\nSilver zinc\nNickel cadmium\nNickel hydrogen\nEnergy density\n(W h/kg)\nEnergy density\n(W h/dm3)\nOper Temp (deg C)\n0 - 20\n0 - 20\n0 - 40\nStorage Temp (C)\n0 - 30\n0 - 30\n0 - 30\nDry Storage life\n5 yr\n5 yr\n5 yr\nWet Storage life\n30 - 90 days\n2 yr\n2 yr\nMax cycle life\n20,000\n20,000\nOpen circuit\n(V/cell)\n1.9\n1.35\n1.55\nDischarge (V/cell)\n1.8 - 1.5\n1.25\n1.25\nCharge (V/cell)\n2.0\n1.45\n1.50\nManufacturers\nEagle-\nPitcher,Yardney\nTechnical Prod\nEagle-Pitcher,\nGates Aerospace\nBatteries\nEagle-Pitcher,\nYardney, Gates,\nHughes\n\nNickel Cadmium Cells\n- Long space heritage\n- High cycle life, high specific energy\n- Relatively simple charge control systems\n- Battery reconditioning necessary to\ncounteract reduction in output voltage after\n3000 cycles\n\nNickel Hydrogen Cells\n- Potentially longer life than\nNiCads\n- Hydrogen gas negative\nelectrode eliminates\nsome failure modes\n- Highly tolerant of high\novercharge rates and\nreversal\n- Individual, common and\nsingle pressure vessel types\n\nLithium Ion Cells\n- Recently developed system, may provide\ndistinct advantages over NiCd and NiH2\n- Operating voltage is 3.6 to 3.9 v which\nreduces the number of cells\n- 65% volume advantage and 50% mass\nadvantage over state of the art systems\n\nDepth of Discharge\n(Image removed due to copyright considerations.)\n\nFuel Cells\n-\n+\nLoad\nWaste\nwater\nElectrolyte =\n30% KOH\nAnode\nCathode\n2e-\n2H+\n1/2 O2\nH2\nH2O\n2e-\nH\nY\nD\nR\nO\nG\nE\nN\nO\nX\nY\nG\nE\nN\n\nFuel Cell Characteristics\n- Output voltage per cell 0.8 volts in practice\n- Consumes hydrogen and oxygen, produces\nwater as by-product (1 Pint/kW h)\n- High specific power (275 W/kg)\n- Shuttle fuel cells produce 16 kW peak\n- Reaction is reversible so regenerative fuel\ncells are possible\n\nRadioisotope Thermoelectric\nGenerators\n- Used in some interplanetary missions\n- Natural decay of radioactive material provides\nhigh temperature source\n- Temperature gradient between the p-n junction\nprovides the electrical output\n- High temperatures\n- Lead telluride (300 - 500 deg C, silicon germanium\n>600 deg C\n- Excess heat must be removed from the spacecraft\n\n(Dis) advantages of RTGs\n-\nAdvantages\n-\nDo not require sunlight to operate\n-\nLong lasting and relatively insensitive\nto the chilling cold of space and\nvirtually invulnerable to high\nradiation fields.\n-\nRTGs provide longer mission\nlifetimes than solar power systems.\n-\nSupplied with RTGs, the Viking\nlanders operated on Mars for four and\nsix years, respectively.\n-\nBy comparison, the 1997 Mars\nPathfinder spacecraft, which used\nonly solar and battery power,\noperated only three months.\n-\nThey are lightweight and compact. In\nthe kilowatt range, RTGs provide\nmore power for less mass (when\ncompared to solar arrays and\nbatteries).\n-\nNo moving parts or fluids,\nconventional RTGs highly reliable.\n-\nRTGs are safe and flight-proven.\nThey are designed to withstand any\nlaunch and re-entry accidents.\n-\nRTGs are maintenance free..\n-\nDisadvantages\n-\nThe nuclear decay process cannot be\nturned on and off. An RTG is active\nfrom the moment when the\nradioisotopes are inserted into the\nassembly, and the power output\ndecreases exponentially with time.\n-\nAn RTG must be cooled and shielded\nconstantly.\n-\nThe conversion efficiency is normally\nonly 5 %.\n-\nRadioisotopes, and hence the RTGs\nthemselves, are expensive\n\nSubsystem: Power (RTG)\n- Modeling, Assumptions and Resources:\n- RTG database\n- 3 RTG types used for modeling\n- General Purpose\nHeat Source (GPHS)\n- Batteries\n- Combinations of different types of RTGs\nPow er Source\nPBOL [We]\nPEOL[We]\nMass [kg]\nDim ensions [m ]\nLife[yrs]\nPu[kg]\nCost [M$]\nTRL\nNotes\nCassini RTG\n55.5\nD = 0.41,L=1.12\n10.75\n35.00\n18 GPHS\nNew MMRTG\nD = 0.41,L = 0.6\n25.00\n9 GPHS\nSRG 1.0\nD = 0.27,L = 0.89\n0.9\n20.00\n2 GPHS\n<114\nWatts\n1 SRG\n1 MMRTG\n2 MMRTG\n1 Cassini\n2 SRG\n1 SRG +\n1 MMRTG\n1 SRG +\n1 Cassini\n2 SRG +\n1 MMRTG\n3 SRG\n4 SRG\n3 MMRTG\n4 MMRTG\n2 Cassini\nor 5 SRG\n6 SRG\n5 MMRTG\nKKG\n\nSubsystem: Power (RTG)\n- Validation of model:\n- Confirmation of data by multiple sources.\n- Tested ranges of variables:\n- Power required (< 0 to > 1.37 kW)\n- Mission lifetime (< 0 to > 3.5548e4 sols)\n- No discrepancies found.\nHundreds of millions of $\nKKG\n\nThermoelectric Generator\nThermal sink Tcold\nLoad\nElectrical\ninsulation\nThermal source Thot\nHeat Flow\nElectrical insulation\nConnecting straps\nP\nN\nP\nN\nN\nP\n+\n+\n+\n+\n+\n-\n-\n-\n-\n-\n+\n+\n-\n\nFlywheel Energy Storage Modules (FESM) could\nreplace batteries on Earth-orbit satellites.\n-\nWhile in sunlit orbit, the motor will spin the\nflywheel to a fully charged speed\n- generator mode will take over to discharge the\nflywheel and power the satellite during the eclipse\nphase\n- present flywheel technology is about four times better\nthan present battery technology on a power stored vs.\nweight comparison.\n-\nWeighing less than 130 lbs, the FESM is 18.4-in. in\ndiameter by 15.9-in. in length\n- Delivers 2 kW-hr of useful energy for a typical 37-\nminute LEO eclipse cycle\n- high speeds of up to 60,000 rpm\n-\nthe current average for commercial GSO storage is\n2,400 lbs of batteries, which is decreased to 720 lbs\nwith an equivalent FESM.\n-\nHoneywell has developed an integrated flywheel\nenergy storage and attitude control reaction wheel\n- Energy stored in non-angular momentum change\nmode\n\nSolar Cell\n- Long heritage, high reliability power source\n- High specific power, low specific cost\n- Elevated temperature reduce cell\nperformance\n- Radiation reduces performance and lifetime\n- Most orbits will require energy storage\nsystems to accommodate eclipses\n\nSolar Cell Physics\n+\n+\n+ + +\n+\nn\nFlow of\nelectrons\nSi molecule\nPhotons\nPhotons\nLoad\nElectrons\nHoles\nCovalent\nbond\np\n+\n-\n-\n- - -\n-\n-\n+\n-\n\nSolar Cell Operating\nCharacteristics\nMaximum\npower point\nArea = maximum\npower output\nIncreasing\npower\nOptimum load resistance\nP = constant\nVmp\nVoc\nPmp\nIsc\nImp\nI-V curve\nOutput current\n\nSolar Cell Operating\nCharacteristics\nOutput power\nOutput voltage\nVmp\nPmp\nP-V curve\n\nTemperature Effects\nCURRENT (mA)\nVOLTAGE (volts)\n-1700\n-1500\n-1200\n-900\n-600\n-300\n1200C\n0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0\nVoltage - current characteristics vs cell temperature\nfor 2 x 2 cm 10 ohm cm N/P solar cell\nSilicon thickness 0.012 inch, active area 3.9 cm2\nSpectrosun solar simulator = AMO\nBalloon calibration\n\nRadiation Effects\nRELATIVE OUTPUT (%)\n4 mil thick\nFLUENCE, 1 Mev electrons/cm2\n12 mil thick\n\nAlternate Solar Cell\nTechnologies\nCell type\nSilicon\nThin sheet\namorphous Si\nGallium\nArsenide\nIndium\nPhosphide\nMultijunction\nGaInP/GaAs\nPlanar cell\ntheoretical\nefficiency\n20.8%\n12.0%\n23.5%\n22.8%\n25.8%\nAchieved\nefficiency:\nProduction\nBest laboratory\n14.8%\n20.8%\n5.0%\n10%\n18.5%\n21.8%\n18%\n19.9%\n22.0%\n25.7%\nEquivalent time in\ngeosynchronous\norbit for 15%\ndegradation\n- 1 MeV electrons\n- 10 McV electrons\n10 yr\n4 yr\n10 yr\n4 yr\n33 yr\n6 yr\n155 yr\n89 yr\n33 yr\n6 yr\n\nSolar Array Construction\n- Construct arrays with cells in series to provide the\nrequired voltage\n- Parallel strings provide required current\n- Must plan for minimum performance requirements\n- Radiation affects at end of life, eclipse seasons\nand warm cells\n- Shadowing can cause cell hot spots and potentially\ncascading failure\n\nCell Shadowing\nAffected\nsolar cell\nUnaffected portion\nof module of s-1\ncells in series\n+VBUS\nVU\nA\nB\nTotal cells\n= (s - 1) x p\nTotal cells\n= s x p\nVA\nlA\nlU\nl1\nAffected portion of\nmodule with open\nor shadowed solar\ncell\n-\n-\n+\n+\n\nCell Shadowing\n4 Parallel Cells\nQ1\n2 Parallel Cells\nOP1\nQ2\nVBUS\nV\nQ4\nQ3\nOP2\nLeakage\nHigh\nLow\n(one cell)\nCURRENT (A)\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n1.0\nHigh\nLow\n(3 cells)\nLeakage\n\nSolar Array Construction\nCoverglass (0211 microsheet or\nCorning 7940 fused silica)\nMg Fl AR coating\nMulti-layer blue\nreflecting filter\nSiO AR coating\nGlass/Cell Adhesive\nSolar Cell\nSolder\nCell/Substrate Adhesive\nFiberglass Insulator\nSubstrate Aluminum Facesheet\nSubstrate Aluminum Facesheet\nThermal Control Coating\nFacesheet/Core Adhesive\nAluminum Honeycomb Core\nFacesheet/Core Adhesive\n\nPower Supply-Demand Profiling\n- Solar array:\nSilicon\nGaAs\nMulti junction\n- Batteries:\nSecondary Battery\nSpecific energy\ndensity (W-hr/kg)\nNickel-Cadmium\n25-35\nNickel hydrogen\nLithium-Ion\nSodium-Sulfur\nslifetime\nRover\nd\nyear\nradation\nL\n'\n)\ndeg\n1(\n\nRN\n\nPower Distribution Systems\n- Power switching usually accomplished with\nmechanical or solid-state FET relays\n- Load profiles drive PDS design\n- DC-DC converters isolate systems on the power\nbus\n- Centralized power conversion used on small\nspacecraft\n- Fault detection, isolation and correction\n\nDET Power Regulation Systems\n- Direct Energy Transfer (DET) systems\ndissipates unneeded power\n- Typically use shunt resistors to maintain bus\nvoltage at a predetermined level\n- Shunt resistors are usually at the array or\nexternal banks of resistors to avoid internal\nheating\n- Typical for systems less than 100 W\n\nPPT Power Distribution Systems\n- Peak Power Trackers (PPT) extract the\nexact power required from the solar array\n- Uses DC to DC converter in series with the\narray\n- Dynamically changes the solar array's\noperating point\n- Requires 4 - 7% of the solar array power to\noperate\n\nOther Topics\n- Lenses are sometimes used to concentrate solar\nenergy on cells\n- Higher efficiency\n- Some recent evidence of premature degradation\n- Tethers\n- Felectron=e(vxB), decay orbital energy to produce\nelectricity\n- Use high Isp propulsion to spin up tethers over many\norbits\n- Discharge tether rapidly using it as a slingshot to boost\npayloads into higher orbits or Earth escape"
    },
    {
      "category": "Resource",
      "title": "l4_propulsion.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/087250a0b580a30a2b79544d9bc9f122_l4_propulsion.pdf",
      "content": ""
    },
    {
      "category": "Resource",
      "title": "l5_space_environ_done2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/23fb324b060217996562df1b60847d9f_l5_space_environ_done2.pdf",
      "content": "THE ENVIRONMENT\nOF SPACE\nCol. John Keesee\nImage courtesy of NASA.\n\nOUTLINE\n- Overview of effects\n- Solar Cycle\n- Gravity\n- Neutral Atmosphere\n- Ionosphere\n- GeoMagnetic Field\n- Plasma\n- Radiation\n\nOVERVIEW OF THE EFFECTS OF\nTHE SPACE ENVIRONMENT\n- Outgassing in near vacuum\n- Atmospheric drag\n- Chemical reactions\n- Plasma-induced charging\n- Radiation damage of microcircuits, solar\narrays, and sensors\n- Single event upsets in digital devices\n- Hyper-velocity impacts\n\n- Solar Cycle affects all space environments.\n- Solar intensity is highly variable\n- Variability caused by distortions in magnetic field\ncaused by differential rotation\n- Indicators are sunspots and flares\nSolar Cycle\n\nLONG TERM\nSOLAR CYCLE INDICES\n- Sunspot number\nR\n10 (solar min) d R d 150 (solar max)\n- Solar flux\nF10.7\nRadio emission line of Fe (2800 MHz)\nRelated to variation in EUV\nMeasures effect of sun on our atmosphere\nMeasured in solar flux units (10-22 w/m2)\n50 (solar min) d F10.7 d 240 (solar max)\n\nSHORT TERM\nSOLAR CYCLE INDEX\n- Geomagnetic Index Ap\n- Daily average of maximum variation in the earth's\nsurface magnetic field at mid lattitude (units of\n2 u 10-9 T)\nAp = 0 quiet\nAp = 15 to 30 active\nAp > 50 major solar storm\n\nGRAVITY\nforce\nAt surface of earth\nGm1m2\nr2\nr\nG 6.672u 1011m3kg\nE\ne\nE\ne\ng\nsecm\n9.8\nR\nGm\ng\nR\nGm\nm\nf\n|\n\nMICROGRAVITY\n- Satellites in orbit are in free fall - accelerating\nradially toward earth at the rate of free fall.\n- Deviations from zero-g\n- Atmospheric drag\n- Gravity gradient\n- Spacecraft rotation\n(rotation about Y axis)\n- Coriolis forces\n5.0\nZ\nU a\nm\nA\nC\nx\nD\n\nÂ·\n\n(c)\nÂ§\n\n2zw\nz\nyw\nx\nxw\nx\n\nZ\nZ\nz\nz\nx\nx\n\nZ\nZ\nx\nz\nz\no\ny\nz\nx\n\nATMOSPHERIC MODEL\nNEUTRAL ATMOSPHERE\n- Turbo sphere (0 ~ 120Km) is well mixed (78% N2, 21%\nO2)\n- Troposphere (0 ~ 10Km) warmed by earth as heated\nby sun\n- Stratosphere (10 ~ 50 Km) heated from above by\nabsorption of UV by 03\n- Mesosphere (50 ~ 90Km) heated by radiation from\nstratosphere, cooled by radiation into space\n- Thermosphere (90 ~ 600Km) very sensitive to solar\ncycle, heated by absorption of EUV.\n- Neutral atmosphere varies with season and time of day\n\nLayers of the\nEarth's\nAtmosphere\nTEMPERATURE\nMAGNETOSPHERE\nPressure\nMolecular mean free path\nEXOSPHERE\nSunlit\nSpray region\nWarm region\nMaximum\nheight for\nballoons\nTHERMOSPHERE\nAurora\nAurora\nAirglow\nMESOSPHERE\nIONOSPHERE\nNoctilucent\ncloud\nD\nE\nF1\nF2\nOzone region\nSound waves\nreflected here\nMother-of-pearl\nclouds\nCirrus\nclouds\nAltocumulus\nclouds\ncumulus\nclouds\nStratus\nclouds\nTropopause\nSTRATOSPHERE\nMount\nBlanc\nBen\nNevis\nTemperature curve\n-1000C\n-500C\n00C\n500C\n1000C\n1,000\nmb\n-8\nmb\n10-6\ncm\n10-4\ncm\n1cm\n1km\nkm\nmb\nmb\n-2\nmb\n-4\nmb\n-6\nmb\n-10\nmb\nMiles\n10,000\n5,000\n5,000\n2,000\n2,000\n1,000\n1,000\n50,000\n30,000\n20,000\n10,000\n5 ,000\nKilometers\nFeet\nMount\nEverest\nTROPOSPHERE\n\nDENSITY ALTITUDE MODEL\nAssume perfect gas and constant temperature\nn is number density (number/m3) dpA - n m g A d h = o\nk is Boltzmann's constant\nM is average molecular mass\nH ~ 8.4km\nh ~ 120km\nn = noexp (-h/H)\nH { kT/mg (scale height)\ndh\nnkT\nd\ndh\ndp\nT\nk\nn\np\n\nÂ·\n\n(c)\nÂ§\n\ndh\nnkT\nd\nnMg\ndh\ndp\n\nÂ·\n\n(c)\nÂ§\n\ndh\nKT\nMg\nndn\np\nA\ndh\np+dp\n\nAtmospheric Gases\n- At higher altitudes O2 breaks down into O by UV\n- Primarily O from 80 - 90 km to 500 km\n- Hydrogen and Helium beyond 500 km\n- Kinetic energy of O atom at 7.8 km/s ~ 5eV (enough to\nbreak molecular bonds ~1 - 2eV)\n- O is highly reactive and destructive to spacecraft\n- Temperature at LEO increases with altitude\n- Atmosphere expands when heated by high UV (solar max)\n- LEO densities ~ 108 particles/cm3\n\nATMOSPHERIC MODEL\nMost common Mass Spectrometer and Incoherent\nScatter model - 1986 (MSIS - 1986)\n- Based on measured data\n- Requires Ap, F10.7, month as input\n- Gives average values of n, no, T, atomic mass as\nfunction of altitude\n- Instantaneous values can vary by factor of 10\nhttp://nssdc.gsfc.nasa.gov/space/model/atmos/msis.html\n\nAERODYNAMIC DRAG\nDrag\nBallistic coefficient\nU=density of the atmosphere=mono\n=16x1.67x10-27x1013=2.67x10-13kg/m3\nV=7.8km/s\nCD - Drag coefficient\nA - Cross sectional area\nD 1\nUv xv ( v\nv\n)CDA\nD m dv\nd t\n'v 1\nUv\n2 CDA\nm\na\nÂ¬\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»'t\nE\nm\nCDA\na\nÂ¬\nÂ«\nÂ«\no\n1â4\nÂ»\nÂ»\n\nDRAG COEFFICIENTS\nDerived from Newtonian Aerodynamics. Depends\non what air molecule does at impact\n- Reflected\nCD = 4\n- Absorbed\nCD = 2\nSince F = d(mv)/dt\nD = - F = - d(mv)/dt\no\nm = U Avidt\nCD = - 2 (vf - vi)/vi\n= 2 if vf = o\nin rarefied atmosphere\n= 4 if vf = - vi\nAdt\nV\nV\nV\nm\nA\nV\nD\nC\ni\ni\nf\nD\nU\nU\n\nÂ·\n\n(c)\nÂ§\n\nA\n\nTYPICAL DRAG PARAMETERS\nE (kg/m2)\nCD\nLANDSAT\n25 - 123\n3.4 - 4\nERS - 1\n12 - 135\nHubble\n29 - 192\n3.3 - 4\n90,000Kg\nEcho 1\n0.515\nTypically CD ~ 2.2 - 4 for spacecraft. (see SMAD Table 8.3)\n'V over one year (E = 100 kg/m2)\nh (km)\n'V /year (m/s)\n2 - 5 u 103\nsolar (min - max)\n40 - 600\n3 - 200\n\nSATELLITE LIFETIMES\nLarge variation depending on initial altitude and\nsolar min/max condition (see SMAD Fig. 8 - 4)\nAt LEO, design must compensate for effects of\ndrag.\n\nMAGNETIC FIELD EFFECTS\n- Deflects charged particles/solar wind.\n- South Atlantic Anomaly\n- Creates the structure of the ionosphere/plasmasphere\n- Magnetosphere\n- Van Allen radiation belts\n- Direct effects on Spacecraft systems\n- Avionics - induced potential effects\n- Power - induced potential effects\n- GN&C - magnetic torquer performance, sizing\n- Structures - induced currents\n- TT&C - location of SAA\n\nGEOMAGNETIC FIELD\n- Earth's Magnetic field comes from three sources\n- internal field (99%)\n- currents inside the Earth\n- residual magnetism of elements contained in crust\n- External field 1%\n- Currents in the magnetosphere\n- Bi internal field varies slowly\non the order of 100 years\n(0.05%/year.)\n- Poles of magnetic field lie in\nSiberia and South Australia.\n\nGEOMAGNETIC FIELD\n\nMAGNETOSPHERE\n\nMagnetosphere (continued)\n- Earth's field extends 10 Earth Radii (RH) toward the sun\n- terminates at magneto pause\n- Earth's field slows and deflects solar wind\n- Compressed, heated, turbulent\n- Bow shock at about 14 RH\n- Polar field lines are swept back in night-side tail\n- Does not close\n- Neutral sheet\n- Surface of discontinuity in magnetic field implies\ncurrent flow in the surface\n- Sunward magnetopause - eastward current flow across sub-\nsolar point.\n- Neutral sheet current flow is westward across the tail\n\nEXTERNAL MAGNETIC FIELD\n- Be generated by ring currents and solar wind. Large\nvariation with time\n- Milliseconds to 11-year cycle scales.\n- Variations caused by\n- Magnetosphere fluctuations (geomagnetic storms)\n- Solar activity\n- Geomagnetic storms dump large numbers of charged\nparticles from magnetosphere into atmosphere\n- Ionizes and heats the atmosphere\n- Altitudes from 300 km to over 1000 km\n- Persist 8-12 hours after storm subsides\n\nGEOMAGNETIC\nCOORDINATE SYSTEMS\nGeomagnetic\nB - L\nB\nL=8\nGreenwich\nmeridian\nGeographic\nnorth pole\nGeographic\nnorth pole\nGeographic\nGeomagnetic\nSolar-ecliptic\nSolar-magnetospheric\nSolar-magnetic\nColatitude\nz\nzse\nxse\nxsm\nxsm\nysm\nzsm\nzsm\nysm\nTo sun\nTo sun\nyse\ny\nr\nrm\nzm\nrse\nxm\nx\nym\nMagnetic\ncolatitude\nEast longitude\nTo north\necliptic pole\nSun direction\nSeveral coordinate systems used in geomegnetism.\nDirection of\ngeographic\nnorth pole\nDipole axis\ndirection\nDipole\naxis\nDipole axis\nMagnetic longitude\nÏ\nÏse\nÎ¸\nÏm\nÏse\nÎ¸m\nB=.01\n.02\n.05\n0.1\nL = 2\n-90\n-60\n-30\n0.2\n.005\n.002\n.001\nField Strength\n(Oersteds)\nNorth Latitude (Degrees)\nGeocentric Distance (Re)\n\nGEOMAGNETIC FIELD\nMagnitude Formula/Models\nTilted dipole (11q from geographic north)\nat LEO\nwhere\nM = 0.311 u 10-4\n= 7.9 u 1015\nT - m3\nInternational Geomagnetic Reference Field\n1987 (IGRF1987)\nBi r,Tm,Im\nÂ§\n(c)\n\nÂ·\nM\nr3 3cos2 Tm\nÂ§\n(c)\n\nÂ·\nÂ§\n(c)\n\nÂ·\n\n1/ 2\nBr M\nr3 2cosTm\nBTm M\nr3sinTm\nBIm 0\nTRe3\n\nFIELD VALUES\n- Minimum (near equator) = 0.25 u 10-4 T\n- Maximum (near polar caps) = 0.50 u 10-4 T\n- Two peaks near north pole\n- Two minimum near equator\n- Largest minima is known as South Atlantic\nAnomaly\n- Much higher radiation exposure at LEO\n- Geomagnetic storms impose variations of\n0.01 u 10-4 T\n\nTOTAL FIELD INTENSITY\n\nSOUTH ATLANTIC ANOMALY\nReduced protection in SAA allows greater effect of high\nenergy particles - electronic upsets, instrument interference.\n\nPLASMA EFFECTS OVERVIEW\n- Plasma is a gas made up of ions and free electrons in\nroughly equal numbers.\n- Causes\nElecromagnetic Interference\nSpacecraft charging & arcing\nMaterial effects\n- Effects\nAvionics - Upsets from EMI\nPower - floating potential, contaminated solar arrays, current\nlosses\nGN & C - torques from induced potential\nMaterials - sputtering, contamination effects on surface\nmaterials\n\nPLASMA EFFECTS (cont.)\n- Effects continued\nOptics systems - contamination changes properties of\nsurface materials.\nPropulsion - Thruster firings change/shift the floating\npotential by contacting the plasma.\n\nPLASMA GENERALIZATION\n- Plasma is caused by UV, EUV, X-ray photoelectric\neffect on atmospheric molecules.\n- Breaks diatomic molecule bonds.\n- Ejects electrons from outer shells.\n- As UV, EUV, X-ray penetrate the atmosphere, ion\ndensity increases with atmospheric density until most\nUV, EUV have been absorbed (>60 Km altitude).\nVaries dramatically with altitude, latitude, magnetic\nfield strength, time of day and solar activity.\n- Electrically charged region of atmosphere is called the\nionosphere.\n- Gas in ionosphere is called ionospheric plasma.\n\nLEO PLASMA ENVIRONMENT\n- Balance between increasing density and increasing absorption\nleads to formation of ionization layers.\nF - layer\n150 km - 1000 km\nE - layer\n100 km - 150 km\nD - layer\n60 km - 100 km\n- Transition region from ion-free atmosphere to fully ionized\nregion called the plasmasphere.\n- Plasmasphere ion densities peak at 1010/m3 to 1011/m3 at\n1000 km\n- Drops to 109/m3 at its boundary\n- Outer boundary called plasmapause\n- Density drops to 105/m3 to 106/m3\n- Height is ~ 4 RH between 0000 and 1800 hours\n- Expands to ~ 7 RH during the local dusk (dusk bulge)\n\nELECTRON DENSITY\nSolar Max\nSolar Min\nDaytime Electrons\nNightime Electrons\nAltitude (km)\nDensity (cm-3)\n\nKp is Magnetic Activity Index\nPLASMAPAUSE HEIGHT VS\nLOCAL TIME\nKp<1\nKp=2\nKp=4-5\nKp=3\n10-2\nN(H+) (cm-2)\nOGO S, Nightside, 1968\nL\n\nION CONCENTRATIONS\n- Similar to neutral atmosphere\nD - layer\nNO+/O+\nE - layer\nO+\nF - layer\nO+/H+\n-Daytime F layer density peaks at 1012/m3 (300 km)\n-Nighttime F-layer density drops to 1011/m3 (500 km)\n- Composition transitions from O+ to H+\n\nION CONCENTRATIONS (cont.)\nHe++\nO2+\nAltitude (km)\nIon Concentrations (ions/cm3)\nO+\nH+\nNO+\n\nPLASMA TEMPERATURES\nIncreases from ~100K at 50 - 60 km to\n2000 - 3000K above 500 km\nElectron temperature Te = 4000K - 6000K\nIon temperature\nTi = 2000K - 3000K\nDensity much higher at solar maximum due to\nhigher UV/EUV fluxes.\n\nLEO PLASMA\nENVIRONMENT MODELS\nInternational Reference Ionosphere (IRI)\n-Outputs - electron density ne\n- ion composition ni\n- Temperature Te, Ti\n-Inputs (latitude, longitude, altitude, solar activity (R),\ntime).\nAvailable at :\nhttp://nssdc.gsfc.nasa.gov/space/model/ionos/iri.html\n\"Ionospheric models\" Carlson, Schunk, Heelis, Basu\n\nRADIO FREQUENCY\nTRANSMISSIVITY\n- Plasma transitions from a perfect conductor to\nperfect dielectric as a function of frequency.\n- Plasma frequency\n- Dielectric constant\n- For Z >> Zpe the plasma appears like free space\n- For Z~ Zpe electromagnetic waves cannot\npropagate\n- Transmissions from below are reflected\n- Transmissions from within are absorbed\n- For Z!~ Zpe random variations in ne can cause\nrandom delays and phase shifts\nZpe n ee\nHom\nÂ§\n(c)\n\nÂ·\n\nH Ho 1 Zpe\nZ\nÂ§\n(c)\n\nÂ·\n\nÂ§\n(c)\n\nÂ·\n\nSPACECRAFT CHARGING\n- At LEO spacecraft become negatively charged\n- Plasma is dense but low energy\n- Orbital velocity is higher than ion thermal velocity\n- Lower than electron thermal velocity\n- Electrons impact all surfaces\n- Ions impact ram surfaces only\n- Geo spacecraft charge during magnetospheric substorms\nbetween longitudes corresponding to midnight and dawn\n- Biased surfaces (solar arrays) influence the floating\npotential\n\nCHARGING EFFECTS\n- Instrument reading bias\n- Arcing-induced EMI, electronics upsets\n- Increased current collection\n- Re-attraction of contaminants\n- Ion sputtering, accelerated erosion of materials\nSpacecraft must be designed to keep differential\ncharging below the breakdown voltages or must\ntolerate the effects of discharges.\n\nRADIATION\n- Most radiation effects occur by energy depostion\n- Function of both energy, type of particle and material into\nwhich energy is deposited.\n- Definitions\n1 rad (Si) = 100 ergs/gm into Silicon\n1 Cray (Si) = 1 J/kg into Si\n1 rad (Si) = 10-4 Cray\nAdapted from SMAD.\n\nRADIATION DAMAGE THRESHOLDS\nIn many materials the total dose of radiation is the most\ncritical issue. In other circumstances the time over which\nthe dose is received is equally important.\nMaterial\nDamage Threshold (rad)\nBiological Matter\n101 - 102\nElectrical Matter\n102 - 104\nLubricants, hydraulic fluid\n105 - 107\nCeramics, glasses\n106 - 108\nPolymeric materials\n107 - 109\nStructural metals\n109 - 1011\n\nSPACECRAFT EFFECTS\n- High energy particles travel through spacecraft\nmaterial and deposit kinetic energy\n- Displaces atoms.\n- Leaves a stream of charged atoms in their wake.\n- Reduces power output of solar arrays\n- Causes sensitive electronics to fail\n- Increases sensor background noise\n- Radiation exposure to crews\n\nHIGH ENERGY RADIATION\n- Definition\nFor Electrons\nE > 100 keV\nFor protons and heavy ions\nE > 1 MeV\n- Sources\n- Van Allen Belt (electrons and protons) (trapped\nradiation)\n- Galactic cosmic rays\ninterplanetary protons and ionized\nheavy nuclei\n- Protons associated with solar proton events\n\nVAN ALLEN BELTS\n- Torodial belts around the earth made up of electrons\nand ions (primarily protons) with energies > 30 keV.\n- Two big zones\n- Inner belt ~ 1000 Km 6000 km altitude\n- Protons E > 10's of MeV\n- Electrons E ~ 1 - 10 MeV\n- Outer belt 10,000 - 60,000 km\n- Electrons E ~ 0.04 - 4.5 MeV\n\nVAN ALLEN BELTS (cont.)\n- Sources\n- acceleration of lower-energy particles by magnetic\nstorm activity\n- trapping of decay products produced by cosmic ray\ncollisions with the atmosphere\n- solar flares\n\nCONCENTRATION MECHANISM\n- Earth's magnetic field concentrates on large fluxes of\nelectrons, protons and some heavy ions.\n- Radiation belt particles spiral back and forth along\nmagnetic field lines.\n- Ionizing radiation belts reach lowest altitude of the eastern\ncoast of the eastern coast of South America (SAA).\n(Image removed due to copyright considerations.)\n\nELECTRON AND PROTON\nFLUXES\nAP8Min Proton Fluxes (cm-2 s-1)\n2x106\n2x106\n3x106\n-2.5\nz (Re)\nx (Re)\n2.5\n2.5\n5.0\n7.5\n10.0\n104 103\nAE8Max Electron Fluxes (cm-2 s-1)\n\n5 YEAR DOSE\n5 YEAR DOSE, Rad (Si)\nALTITUDE, nml\nDMSP\nAltitude\n(960)\nGPS\nAltitude\n(550-630)\nSynchronous altitude\n(DSP, DSCS, Fltsatcom - 0o)\n5 Times\nsynchronous alt\nFree space\n(Flare only)\n63.40\n900 Inclination\nNatural environment\nNo operational\nsatellites\n\nTRAPPED RADIATION BELTS\n5x108\nN\nElectrons >40 Kev\nDistance from center\nof earth (Earth Radii)\nProtons >100 Mev\n\nVAN ALLEN BELT\nRADIATION STABILITY\n- Inner belt\n- Fairly stable with changes in solar cycle\n- May change by a factor of three as a result of geomagnetic\nstorms loading in high energy electrons.\n- Outer belt\n- Electron concentrations may change by a factor of 1000 during\ngeomagnetic storms.\n- Standard Models (AP8 protons) and (AE8 electrons)\n- Require B, L and whether solar min/solar max\n- Provide omni-directional fluxes of protons 50 keV < E < 500\nMeV and electrons 50 keV < 7 Mev\n\nSOLAR CELL DEGRADATION\n0.4\nNORMALIZED EFFICIENCIES\n1 MeV ELECTRON FLUENCE (cm-2)\nDegradation caused by the radiation of InP, GaAs,\nconventional (8mil) Si, and thin (3 mil) Si solar cells.\n0.6\n0.8\n1.0\nInP\nGaAs/Ge\nS1 (2.6-3.1 mils thick)\nS1 (8 mils thick)\n\nGALACTIC COSMIC RAYS\n- Primarily interplanetary protons and ionized heavy\nnuclei\n- 1 MeV < E < 1 GeV per nucleon\nCause Single Event Upsets (SEU)\n- Sources are outside the solar system\n- other solar flares\n- nova and supernova explosions\n- quasars\n\nPARTICLE RANGE\nRanges of Protons and Electrons in Aluminum\nPARTICLE ENERGY (MeV)\nRANGE (cm)\nElectrons\nProtons\n0.1\n0.01\n0.1\n\nMAGNETIC SHIELDING\nMagnetic Equator\nAny\nIon\nÎ²\n1147 MeV/n\n2900 MeV/n\n907 MeV\n384 MeV\n173 MeV\n87 MeV\n48 MeV\n313 MeV/n\n109 MeV/n\n46 MeV/n\n23 MeV/n\n12 MeV/n\n\nSOLAR PROTON EFFECTS\n- Solar flares often eject high energy hydrogen\nand other nuclei\n- 1 MeV < E < 10 GeV/nucleon\n- At low energies the number can be much greater\nthan galactic comic radiation level\n- Solar events are sporadic but correlate\nsomewhat with the solar cycle\n- These events make a Mass Mission hazardous\n\nPARTICLE ENERGY\nEnergy (MeV)\n1x10-6\nGalactic Cosmic\nRays\nParticles/ m2 sec (MeV) ster\nWorst Case\nSolar Flare Event\n1x10-4\n1x10-2\n1x102\n1x104\n1x106\n1x108\n\nSOLAR PROTON DOSE\n\nFEYNMAN MODEL\nBased on data from 1963 to 1991\n1 Year\n2 Year\nFLUENCE (cm-2)\n0.001\n0.01\n0.1\nPROBABILITY\n3 Year\n5 Year\n7Year\n\nELECTROMAGNETIC RADIATION\n- Radio\n- 1 - 10 MHz galactic electromagnetic radiation\n- terminal noise\n- not significant for single event environment\n- Visible/IR\n- solar flux\n- heating\n- UV/EUV/X-ray\n- EUV @ 100 to 1000 A is significant for surface chemistry\n\nReferences\n- Wertz, James R. and Wiley JH. Larson, Space Mission\nAnalysis and Design, Third edition, Microcosm Press, El\nSegundo CA 1999\n- Pisacane, Vincenti and Robert C. Moore, Fundamentals of\nSpace Systems, Oxford University Press, NY, 1994.\n- http://nssdc.gsfc.nasa.gov/space/model/models_home.html\n- http://nssdc.gsfc.nasa.gov/space/model/magnetos/igrf.html"
    },
    {
      "category": "Resource",
      "title": "l6_optics_1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/33a224247fe1cbfa82f42ae633f55117_l6_optics_1.pdf",
      "content": "Introduction to Optics\npart I\nOverview Lecture\nSpace Systems Engineering\npresented by: Prof. David Miller\nprepared by: Olivier de Weck\nRevised and augmented by: Soon-Jo Chung\nChart: 1\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOutline\nGoal: Give necessary optics background to tackle a\nspace mission, which includes an optical payload\n-Light\n-Interaction of Light w/ environment\n-Optical design fundamentals\n-Optical performance considerations\n-Telescope types and CCD design\n-Interferometer types\n-Sparse aperture array\n-Beam combining and Control\nChart: 2\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nExamples - Motivation\nSpaceborne Astronomy\nPlanetary nebulae NGC 6543\nSeptember 18, 1994\nHubble Space Telescope\nChart: 3\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nProperties of Light\nWave Nature\nParticle Nature\nHP w E\nDuality\nEnergy of\nE\na photon\nQ=hQ\nDetector\nc\nwt 2\nSolution:\nPhotons are\n(\n\ni kr ZtI )\n\"packets of energy\"\nE\nAe\n\nE: Electric field vector\nH: Magnetic field vector\nPoynting Vector:\nS c E u H\n4S\nSpectral Bands (wavelength O):\nWavelength: O Q 2S QT\nUltraviolet (UV) 300 A -300 nm\nZ\nVisible Light\n400 nm - 700 nm\n2S\nNear IR (NIR) 700 nm - 2.5 Pm\nWave Number:\nk O\nChart: 4\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nReflection-Mirrors\nMirrors (Reflective Devices) and Lenses (Refractive Devices)\nare both \"Apertures\" and are similar to each other.\nTi\nTo\nLaw of reflection:\nTi=To\nMirror Geometry given as\na conic section rot surface:\nz( )\nr\nr k 1 U\nU\nReflected wave is also\nk 1\nin the plane of incidence Circle: k=0\nEllipse -1<k<0\nSpecular\nReflection\nParabola: k=-1 Hyperbola: k<-1\nDetectors resolve Images produced by\n(solar) energy reflected from\na target scene* in Visual and NIR.\n*rather than self-emissions\nTarget Scene\nsun\nmirror\ndetector\nChart: 5\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nTransmission-Refraction\nMedium 1\nMedium 2\nn2\nn1\nRecall Snell's Law\nn1 sinT n2 sinT\nIncident ray\nRefracted Ray\nE\nH\nLight Intensity\nS c\n4S\nDispersion if index of refraction is wavelength dependent n(O)\nRefractive devices not popular in space imaging ,\nsince we need different lenses for UV, visual and IR.\nChart: 6\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nPolarization\nLight can be represented as a\ntransverse electromagnetic wave\nmade up of mutually perpendicular,\nfluctuating electric and magnetic\nfields.\nOrdinary white light is made up of waves that fluctuate\nat all possible angles. Light is considered to be\n\"linearly polarized\" when it contains waves that only\nfluctuate in one specific plan (Polarizers are shown)\nIn-phase=> 45 degrees linearly polarized\n90 degree out of phase->circular\nChart: 7\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nQuickTimeTM and a\nCinepak decompressor\nare needed to see this picture.\nInterference\ntwo or more light waves yielding a resultant\nInterference: Interaction of\nirradiance that deviates from the sum of the component irradiances\nIf the high part of one wave (its crest) overlaps precisely with the high part\nof another wave, we get enhanced light. (r1 r2) 2Sm / k mO\nCrest + Crest = Strong Light\nIf the high part of one wave overlaps precisely with the low part of another\nwave (its trough), they cancel each other out. (r1 r2) Sm / k 1 mO\nCrest + Trough = Darkness\nMIT Space Systems Laboratory\n(coherent)\neach other\nConditions of Interference:\n- need not be in phase with each source, but\nthe initial phase difference remains constant\n- A stable fringe pattern must have nearly\nthe same frequency. But,white light will\nproduce less sharp, observable interference\n- should not be orthogonally polarized to\nChart: 8\n16.684 Space Systems Product Development\nFebruary 13, 2001\n\nDiffraction\nDiffraction occurs at the edges of optical elements\nand field stops, this limits the Field-of-View (FOV).\nThis is THE limiting factor,\nIntensity\nT\nÂ§ sinu Â·\nwhich causes spreading of\nscreen\nI E\nIo\n\nlight and limits the \"sharpness\n(c)\nu\nof an image\"\nO\npinhole\nS\nu\nBsinT\nO\nIncoming light\nB\nB - aperture size\nT - angle of boresight\npattern\nFraunhofer Diffraction Thoery (very distant object) is applied.\nsine function is replaced by J1 for a circular aperture\nChart: 9\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nDerivation of Angular Resolution\nT\nI E\n2 Io\n2J1(u)\nu\nÂ§\n(c)\nÂ·\nu 3.83 S\nO BsinT S\nO BT\nT 3.83O\nSB\n1.22O\nB\ntelescope's ability to clearly separate, or resolve,\ntwo star points (i.e., two Airy discs)\nJ\n)\nB - aperture size\n- angle of boresight\nAngular Resolution(Resolving Power) :the\n=> Rayleigh Criterion\n1:Bessel function of\nthe first kind(order 1\nGoal is to design optical system to be diffraction limited\nat the wavelength of interest.\nChart: 10\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nAngular Resolution Simulation\n1.22O\nT\nB\nEffects of separation, diameter\nand wavelength on Resolving\nPower\nChart: 11\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nAbsorption\nElectronic Detectors work by absorption, i.e. a photon is\nabsorbed by a semiconductor surface and turned into a photo-\nelectron -> photoelectric effect.\nphoton\n4000A<O<10,000A ,e- =1\ne-\n20 Pm\n500 Pm\n30-50:cm\n0.01:cm\nSubstrate\nEpitaxial layer\nE=hQ\n1A<O<1000A, e- = eV/3.65eV/e-\n# of photoelectrons\ngenerated.\nAbsorption in an\nopaque non-silicon\nopaque material\n+ hole\nphotons -> heat\nE.g. Germanium is opaque in visible but transmissive\nin the band from 1.8-25 Pm. Opaque surfaces absorb.\nChart: 12\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOptical Design Fundamentals (1)\nSystems for gathering and transmitting RF (radio frequency) and\noptical signals are identical in theory. Hardware is different.\nFocal Length f\nFocal length f determines overall\nlength of optical train and is related\nto the radius of curvature (ROC) of the\nprimary mirror/lens surface.\nPower of a lens/mirror:\n[diopters=m-1]\nLensmakers Formula:\nFocal Point\n1/\nP\nf\n\nOptical\nAxis\n\nP\nn\nÂ§\n\n(c)\nr1\nr2\nn\nd\n1 Â·\nn 1\nd\n\nn\nrr\n\nr1\nr2 1\n1 2\nIn principle: Optical Mirror ~ RF Parabolic Dish Antenna\nChart: 13\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOptical Design Fundamentals (2)\nApproach (I) for determining the focal length f\nRequired\nField of\nPlate Scale s\nView (FOV)\ns=f\n[m on focal plane/rad on sky]\nSize of Image\nE.g. \"1cm on the focal plane\nPlane [m]*\nequals 2 km on the ground\"\nFocal length f needed to record a scene of Radius R on the ground:\nImportant Equation !!!\nf: focal length [m]\nh: altitude [m]\nf rd m magnification\nrd: radius detector array [m]\nh\nR\nR: Target radius [m]\n* can arrange several detectors (CCD's) in a matrix to obtain\na larger image on the focal plane\nChart: 14\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOptical Design Fundamentals (3)\nApproach (II) for determining the focal length f\nDetect point targets at a fixed range:\nThere is a central bright ring containing 83.9% of the total\nenergy passing through the aperture. Angular dimension\nof this ring is:\nO\nd AIRY 2.44 D\n*D\nRequired focal length f to give an image of\nf\ndiameter * for a point target:\n2.44O\nO : wavelength of light\nD: aperture diameter\n*: image diameter of a point target\nDiffraction spreads the light:\nTrue\nPoint Source\nPoint Source\n*\nImage of\nChart: 15\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nTelescope Key Variables\nMost important:\nf - Focal length\nf\nF #\n\nD\n2NA\nInfinity F-number*\n, e.g. F# or f/\n* a.k.a. F-stop: synonyms: f/, F, F No., F#\nD\nNumerical Aperture\nNA\n\nF\n#\n\nf\nImage brightness is proportional to 1/F2\n\nDepth of focus Gf:\nf\nh\nf G f\nBest optical systems are DIFFRACTION-LIMITED.\nChart: 16\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nSpace Based Imaging\nFocal Length f\nAltitude h\nCaution:\nAperture Diameter D\nField Stop for Aperture\nboresight\nPixel of ground-resolution\nelement size: 'x/m\nTr\nResolution element\ntT\nTt\nx\ny\nR\nRadius of\nGround Scene\nRay from\ntarget edge\nDepth of\nfocus Gf\nImage radius rd\nnadir\nFlat Earth\nApproximation\nNot to scale\nTelescope\nOrbital\nElements\nOh\n' 1.22 Dcos\nChart: 17\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\nx\n\nGround Resolution\nGround Resolution\nO\n(Rayleigh Diffraction\nElement defined by\nT 1.22 D\nCriterion)\nr\n(Angular Resolution):\nLength Normal to ' 1.22\nOh\nRelate this to the 0.3m\nx\nBoresight Axis:\nDcos\n\nground resolution\nTt\nrequirement given\nin the SOW\nAssumes a circular\naperture\nFor astronomical imaging, angular\nresolution is more relevant metric\nSince our target is faint distant\nStars(point source).\n1 arcsec=4.8 micro radians\nChart: 18\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nField-of-View (FOV)\nDetermines the scope of the image. Defined by\nangle on the sky/ground we can see in one single image.\nE.g. \"Our FOV is 4x4 arcminutes\".\nÂ§\nÂ·\nrd\nTFOV\n2 tan 1\n\nAngular diameter of FOV:\n(c)\nf\nLarge detector = Large FOV\nLong Focal Length f = Small FOV\nS/C\nFOV\nGround\nTarget\nFOV\nT\n2)\nA\nR\nh\nT\nS\nS\nÂ§\nÂ·\n\n(c)\nA\nR\n( tan\nChart: 19\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nRay Tracing/Optical Train\nRay-Tracing uses first term in paraxial approximation\n(first order theory). Geometrical Optics is based on two laws\nof physics:\nOptical Elements\nSIM Classic\nMirrors\nLenses\nRay Tracing Diagram\nPrisms\nFilters\nScience\nBeamsplitters\nCompressors\nGuide 1\nExpanders\nDetectors\nGuide 2\nDelay Lines\n1. Rectilinear propagation of light in homogeneous media\n2. Snell's law of refraction\nAssumptions: Rays are paraxial, index of refraction n is constant,\nindependent of wavelength (ignore dispersion) and angle.\nChart: 20\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\n3 Important Aspects\nFirst Order:\nPerformance of Optical\nTake into account:\n\"paraxial approx\"\nImaging System\ndiffraction\ninsufficient\nIsolation\nAmbiguity\nSensitivity\nAngular Resolution\ndetermines ability to\nseparate closely spaced\nobjects\nSNR determines\nability to detect\nfaint object\nAbility to detect\na signal in the main\nlobe from the signals\nin the side lobes\nDriving Parameters:\nO\nOptical errors\nDriving Parameters:\nLk,\\\nlocations, sparseness\nof aperture array\nParameters:\nD- Aperture Size\n- wavelength\n- Aperture\nI - Target Irradiance\nD - Aperture Size\nT - sys temp\nQE - detector\nChart: 21\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nSpatial Laplace Transform\nincoming\nwavefront\nOp\nO\nT\n\np\nA\nt\nZ\nI\n\nTime\nAveraging\nAperture samples incoming\nangle dependent intensity\ncos k x\nwavefront and produces an\nB\n1D-Aperture\nsinT\nFirst Null\nat kBT/2=S\nAperture Response (1D) - Diffraction Pattern\nO\n0.9\nOp\nI A2\nB\n/ 2\nÂ¬acos(k x)o dx\np\n1â4\n0.8\n2S\n,B/ 2\n0.7\n0.6\nk\nIo\n0.5\nO\n0.4\nk k sinT\n0.3\np\n0.2\nNormalized Intensity\nI a\nÂ«\nsinkBT / 2o\n0.1\nT\nÂ» Io\nÂ¬\nkBT / 2\n1â4\n-15\n-10\n-5\nArgument kBT/2\nChart: 22\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nPoint-Spread-Function (PSF)\nRepresents the 2D-spatial impulse Other names:\nresponse of the optical system.\nFraunhofer diffraction pattern\nAiry pattern\na=D/2\nJ1: First order Bessel Function\na2J\nkaZo\n( )\n( )\nU P\n\n1m circular aperture\nI P\nÂ«\nkaZ\nÂ»\n1â4\nIo\nÂ¬\nwhere I v D\no\nP is a point in the diffraction\npattern: P=P(Z\\)\nNormalized PSF for\na monolithic, filled,\ncircular aperture with\nDiameter =1m\nChart: 23\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nEncircled Energy\nDiffraction pattern of light passed through a pinhole or from\na circular aperture and recorded at the focal plane: Airy Disk\nBessel-Function of n-th order:\nin 2S\n)\nJ x )\nexp( ixcosD)exp( in d\n(\nD\nD\nn\n2S\nJ x)o\nMaxima/Minima of\ny a2\n(\nÂ«Â¬\nx\n1â4Â»\nx\ny\nMax\n1.22S\nMin\nCentral ring contains 83.9% of the total 1.635S\n0.0175\nMax\nenergy passing through the aperture. 2.233S\nMin\nChart: 24\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nSNR and Integration Time\nLook at the Power = Energy/unit time we receive from ground\nSolid Angle FOV:\nZ A/ h\nd\nSolid angle defining\n\nr\nupwelling flux from Z Ad cosT /(h / cos T ) | S T / 2\nd\nt\nt\na resolution element:\nW - detector time constant\nDwell Time: td vW,\nD - aperture size,\n2 , Ignd ,....\nD\nIgnd - ground Irradiance\nSNR: = S/N\n\"Optical Link Budget\" , see SMAD\nIR Imaging systems must be cooled to achieve low noise,\nuse passive cooling or active cooling (cryocoolers).\nChart: 25\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nStatic Optical Aberrations\nZernike Polynomials and\nSeidel Coefficients\nExample: Spherical Aberration\nIQ\nÂ§ hQ Â· Q2'Â§ 1 Â·\n\n(c) ns\n\n(c) h1\n\nQ\n\n1Q\nSee the next page\nfor definitions\nSpherical Aberration, Coma\n= change in magnification\nthroughout the FOV\nAlso have dynamic errors (WFE RMS)\nChart: 26\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nStatic Optical Aberrations (II)\nChromatic Aberration -- usually associated with objective lenses of refractor telescopes. It is the failure of a\nlens to bring light of different wavelengths (colors) to a common focus. This results mainly in a faint colored\nhalo (usually violet) around bright stars, the planets and the moon. It also reduces lunar and planetary\ncontrast. It usually shows up more as speed and aperture increase. Achromat doublets in refractors help\nreduce this aberration and more expensive, sophisticated designs like apochromats and those using fluorite\nlenses can virtually eliminate it.\nSpherical Aberration -- causes light rays passing through a lens (or reflected from a mirror) at different\ndistances from the optical center to come to focus at different points on the axis. This causes a star to be seen\nas a blurred disk rather than a sharp point. Most telescopes are designed to eliminate this aberration.\nComa -- associated mainly with parabolic reflector telescopes which affect the off-axis images and are more\npronounced near the edges of the field of view. The images seen produce a V-shaped appearance. The faster\nthe focal ratio, the more coma that will be seen near the edge although the center of the field (approximately\na circle, which in mm is the square of the focal ratio) will still be coma-free in well-designed and\nmanufactured instruments.\nAstigmatism -- a lens aberration that elongates images which change from a horizontal to a vertical position\non opposite sides of best focus. It is generally associated with poorly made optics or collimation errors.\nField Curvature -- caused by the light rays not all coming to a sharp focus in the same plane. The center of\nthe field may be sharp and in focus but the edges are out of focus and vice versa.\nChart: 27\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nAtmosphere\nIn Telescope\nScattering by aerosols and airborne particles\nDesign account\nScattering proportional to 1/O4\nfor:\nIndex of refraction of the air is not constant (!)\nChart: 28\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nPrimary Aperture Types\nMonolithic\nSegmented\nSparse\nExamples:\nPalomar\nNGST,MMT\n\"spangles\" SIM, VLT\nExamples:\nExamples:\nIn your study: consider different aperture types and their effect on\nthe optical image quality, the PSF, resolution, ambiguity and SNR.\nChart: 29\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nTelescope Types (I)\nDesign Goal: Reduce physical size while maintaining focal length f\n-Refractors\n-Newtonian Reflectors\n-Cassegrain\n-Two Mirrors\n-Catadioptric System\n-Off-axis Systems\n- Single Mirror(Newtonian) :\nSolution: Folded reflective Telescopes\nA small diagonal mirror is inserted in the focusing beam. A more accessible focused\nSpot, but produces a central obscuration in the aperture and off-axis coma\n- Two Mirror Focusing (Cassegrain):\nImprove the system field of view, reduce the package size while maintaining a given\nFocal length and performance characteristics\nChart: 30\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nTelescope Types(II)-Cassegrain\nf = effective focal length, focal length of the system\nf1= focal length of primary(positive,concave)\nF2= focal length of secondary(negative,convex)\n(1)Effective focal length:\nf\nf1 f2\nf1 f2 d\nd\nb\nf\nD 2 D 1 (1 d\nf 1\n)\nCl\nl\ni\nDall\ni\ni\nl\ni\ni\n)\nD1,D2= Diameter of primary,secondary mirror\n(2)Secondary Mirror Apertures\nSystem\nPrimary\nSecondary\nComment\nassica\nCassegrain\nParaboloid\nHyperboloid\nOff-Ax s Performance\nSuffers\n-Kirkham\nProlate ellipsoid Sphere\nLess Expensive,\ndegraded Off-Ax s errors\nRitchey-\nChret en\nHyperboloid\nHyperboloid\nComplete y corrected\nspherical aberrat on & coma\n(expens ve\nPressman-\nCamichel\nSphere\nOblate epllipsoid\nChart: 31\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nTelescope Types(III)-Catadioptric\nMAKSUTOV-uses a thick meniscus correcting lens with a\nstrong curvature and a secondary mirror that is usually an\naluminized spot on the corrector. The secondary mirror is\ntypically smaller than the Schmidt's giving it slightly better\nresolution for planetary observing. Heavier than the Schmidt\nand because of the thick correcting lens takes a long time to\nreach thermal stability at night in larger apertures (over 90mm).\nTypically is easier to make but requires more material for the\ncorrector lens than the Schmidt-Cassegrain.\nSchmidt-Cassegrain the light enters through a thin\naspheric Schmidt correcting lens, then strikes the\nspherical primary mirror and is reflected back up the tube\nand intercepted by a small secondary mirror which\nreflects the light out an opening in the rear of the\ninstrument. Compact(F# f/10-f/15), Correcting Lens\neliminates Spherical aberration,coma, Astigmatism,\nImage Field Curvature at the expense of central\nobstruction,chromatic error(from refractive lense)\nChart: 32\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nDetectors\nFundamentally\n(1) Photographic Plate/Film\nthree types:\n(2) Electronic Detector (e.g. CCD)\n(3) Human Eye\nCCD most important for remote sensing (electronic transmission)\nDetector field area:\nAd Srd\nDepth of Focus:\nG f r2OF #\nSample CCD Design Parameters:\nFormat: 2048(V) x 1024 (H)\nPixel Shape: Square\nQuantum Efficiency: >0.60\nPixel Pitch: 12 Pm\nFull Well condition: >100,000 e-\nChannel Stop Width: 2.5 Pm\nDark Current: < 1nAmp/cm2\nChart: 33\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOptimizing a CCD Imaging System (I)\n- Pixel Size:d (2Tr f )Q (2.44Of / D)Q\nQ(quality factor)=1/2 used to avoid\nundersampling\n- # of pixels <= FOV\n- Sensitivity :\nRather than the total amount of signal in an image (which depends on gain in the\ncamera's electronics), sensitivity is the signal-to-noise ratio (S/N) obtained with a\ngiven exposure time. The S/N is a measure of quality; the higher the ratio, the less\ngritty an image will appear\n- A very good deep sky object at least 25 S/N.\n- Smaller pixel(9Î¼m)=>longer exposure time (lower sensitivity)\na faint deepsky object may be oversampled\n- Larger pixel(24Î¼m)=> greater sensitivity, undersampled for bright source.\nChart: 34\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001\n\nOptimizing a CCD Imaging System (II)\n-Anti-blooming: helps protect against the objectionable streaks that occur\nwhen bright objects saturate the CCD, causing an excess charge to bleed down\na column of pixels. This feature can, however, produce side effects like\nincreased dark current and reduced sensitivity.\n- Quantum Efficiency (QE):\nQ.E. of a sensor describes its response\nto different wavelengths of light (see\nchart). Standard front-illuminated\nsensors, for example, are more\nsensitive to green, red, and infrared\nwavelengths (in the 500 to 800 nm\nrange) than they are to blue\nwavelengths (400 - 500 nm). Note\nBack-illuminated CCDs have\nexceptional quantum efficiency\ncompared to front-illuminated CCDs.\nChart: 35\n16.684 Space Systems Product Development\nMIT Space Systems Laboratory\nFebruary 13, 2001"
    },
    {
      "category": "Resource",
      "title": "l7_optics_2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/93b7eb036d399a5a3f650dfcd5dcca85_l7_optics_2.pdf",
      "content": "16.684 Space Systems Product Development\nChart: 1\nFebruary 13, 2001\nMIT Space Systems Laboratory\nIntroduction to Optics\npart II\nOverview Lecture\nSpace Systems Engineering\npresented by: Prof. David Miller\nprepared by: Olivier de Weck\nRevised and augmented by: Soon-Jo Chung\n\n16.684 Space Systems Product Development\nChart: 2\nFebruary 13, 2001\nMIT Space Systems Laboratory\nInterferometer Types (NASA, AirForce)\nSpace Technology 3-2005\nAir Force UltraLITE\nSIM-2006\nMichelson Interferometer\nPrecision Astrometry\nMichelson Interferometer\nFizeau Interferometer\nEarth Observing Telescope\nTPF - 2011\nNGST - 2007\nMichelson Interferometer\nA Common Secondary Mirror (MMT, Fizeau)\nPrimary Mirror = 8 m diameter\n\n16.684 Space Systems Product Development\nChart: 3\nFebruary 13, 2001\nMIT Space Systems Laboratory\nInterferometer Types (Ground)\nMichelson Interferometer (Visible)\nKeck Interferometer-2006\nMichelson Interferometer (Infrared)\nTwin 10 m Keck Telescopes and four 1.8 m outriggers\nBaseline 85m\nPalomar Testbed Interferometer\nMichelson Interferometer (Infrared)\nTestbed for Keck and SIM\nMark III Interferometer\nKeck Observatory:\nMultiple Mirror Telescope (MMT)\nFizeau Interferometer (Visible, Infrared)\n36 hexagonal segments => 10 m overall aperture\n\n16.684 Space Systems Product Development\nChart: 4\nFebruary 13, 2001\nMIT Space Systems Laboratory\nMichelson Interferometer\nIndependent Light Collectors feed light to a common beam\ncombiner. Get interfered fringes => Inverse Fourier Transform\n(CLEAN,MEM)\nSuitable for Astronomical Objects:\nUnchanged over a long period of time\nBeamsplitter\nCollector\nCollector\nMichelson Interferometer\nStellar wavefront\nDetector\nDetector\nOptical delay\nline\nObject\nImaging with Michelson Interferometer\nFT\n\"FT-1\"\nBaseline orientations:\n+\ny\nx\ny\nv\nv\nv\nu\nu\nu\nx\nu-v (Fourier plane)\nReconstructed\nimage\n\n16.684 Space Systems Product Development\nChart: 5\nFebruary 13, 2001\nMIT Space Systems Laboratory\nFizeau Interferometer\nGives a direct image of a target from a large combined primary\nmirror, and a wide field of view (Imaging applications in space\nand MMT)\nSuitable for Wide Angle Astrometry\nAnd for rapidly changing targets (Terrestrial, Earth Objects)\nTelescope\nTelescopes\nFizeau Interferometer\nFizeau Interferometer\nDetector\nDetector\nSparse aperture\nTelescope\n\"Beam combiner\"\n\n16.684 Space Systems Product Development\nChart: 6\nFebruary 13, 2001\nMIT Space Systems Laboratory\nComparison (Fizeau, Michelson)\nFizea u\nInt erferomet er\nMiche lson Inte rferomete r\nProduce a dir ec t im age o f its\ntarg et (Full Instan t u-v c overage\nprov ided)\nTakes a sub se t o f u-v po ints\nobtaine d a peri od o f tim e.\nWide ang le(f ield) of view\nim aging app lications\nAst rome try,\nNulling Interferom etry\nRapidly Cha nging t arge ts\n(Terre strial, Ea rth Objects)\nTarg et u nc han ged\n(Ast ron omi cal Objects)\nTakes t he comb ine d sci en ce\nligh t from all the ap ertures an d\nfocuses it into C CD\nMe as ure s po ints in Fourier\ntran sform of ima ges => Inverse\nFFT ne eded\nU- V reso lution dep end s on both\nthe separa tion and the size of\naperture s\nAngula r re so lution de pend s\nsolely on the separa tion of\naperture s\nOptima l Con figuration:\nGolay (m inim um aper ture size )\nThe angul ar res olution im proves\nas t he sep aration increas es\n\n16.684 Space Systems Product Development\nChart: 7\nFebruary 13, 2001\nMIT Space Systems Laboratory\nCCD\nBeam\nCombiner\nCommon Secondary vs Sub Telescope\nPhased Sub-\nTelescope Arrays\nCommon Primary\nSub Telescope Fizeau\nPrecise Off Axis Configuration\nOff Axis Optical Aberration\nNeed Combiner + Phase sensing and\ncompensater mechanism (complex)\nLess Central Obstruction(Off Axis)\nOn Axis Suffers Central Obstruction\nHard to change the Configuration\nCan employ Off-the-shelf telescopes\nCommon\nSecondary Mirror\nArray\nAirForce is studying two options for UltraLITE(Golay 6)\n\n16.684 Space Systems Product Development\nChart: 8\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical Arrays\n-0.3\n-0.2\n-0.1\n0.1\n0.2\n0.3\n-0.25\n-0.2\n-0.15\n-0.1\n-0.05\n0.05\n0.1\n0.15\n0.2\n0.25\nOptical Array Configuration\nX - Distance [m]\nY - Distance [m]\nInstead of using a single aperture use several\nand combine their light to form a single image\nAperture positions (uv) are critical -\nlook at combined PSF / Transmissivity\nof the Optical Array\nTransmissivity Function:\nDerivation see separate\nhandout (Mennesson)\n\n16.684 Space Systems Product Development\nChart: 9\nFebruary 13, 2001\nMIT Space Systems Laboratory\nCDIO: Breaking the Paradigm\n-0.5\n-0.4\n-0.3\n-0.2\n-0.1\n0.1\n0.2\n0.3\n0.4\n0.5\n-0.4\n-0.3\n-0.2\n-0.1\n0.1\n0.2\n0.3\n0.4\nOptical Array Configuration\nX - Distance [m]\nY - Distance [m]\nGolay\nGolay--3 0.6 m telescope\n3 0.6 m telescope\n-0.4\n-0.3\n-0.2\n-0.1\n0.1\n0.2\n0.3\n0.4\n-0.3\n-0.2\n-0.1\n0.1\n0.2\n0.3\nOptical Array Configuration\nX - Distance [m]\nY - Distance [m]\nPhysical\nPhysical\nAperture\nAperture\nLayout\nLayout\nMonolithic 0.6 m telescope\nMonolithic 0.6 m telescope\nCompare\nArchitectures\nwith\nQuantitative\nMetrics\nPSF\nPSF\n\n16.684 Space Systems Product Development\nChart: 10\nFebruary 13, 2001\nMIT Space Systems Laboratory\nEffective Radius of Optical Array\nHow to find the effective\nradius(Reff) of the array?\n-\n=the radius of the array\nthought as that of a monolithic\naperture.\n- UV coverage plot\nx,y is any point within aperture\n-\n: the maximum radius of\nuv plot without any holes\n-\n- Fill Factor: the array's total\ncollecting area over the area of a\nfilled aperture with the same uv\ncoverage(the same Reff)\nu = Â± x2 -x1\nÎ»\nv = Â± y2 -y1\nÎ»\nRuv\nReff\nReff = 0.5Ruv\n\n16.684 Space Systems Product Development\nChart: 11\nFebruary 13, 2001\nMIT Space Systems Laboratory\nGolay Configurations\n-\nOptimum Golay is\nDeff-dependent\n-\nLabor moves\nGolay benefits to\nlarger Deff\n-\nGolay's sacrifice\nEncircled Energy\nEE=83.5%\nEE=26.4%\nEE=9.3%\nEE=3.6%\nEE=2.2%\n\n16.684 Space Systems Product Development\nChart: 12\nFebruary 13, 2001\nMIT Space Systems Laboratory\nTechnological Trends\n-\nLightweight (Low-Area-Density) Optics - 15kg/m2\n-\nDeployable Optics\n-\nAdaptive and Active Optics\n-\nMembrane Mirrors and Inflatables\n-\nUltra-Large Arrays (CCD Mosaics)\n-\nDistributed Optical Arrays\n-\nSpace Based Astronomy\n-\nWhite light interferometry\n\n16.684 Space Systems Product Development\nChart: 13\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical Performance Criteria\n- Sensitivity(Effective Collecting Area)\n- Point Spread Function(PSF): Frequency used merit\nfunction(Irradiance distribution),Can measure Phase difference, can derive\nResolution,EE, MTF(OTF)\n- Encircled Energy: particularly relevant merit function of the\noptic performance of an optical system whose purpose is to collect light and\ndirect it thru the entrance slit of a spectrometer\n- Modulation Transfer Function(MTF): For many\nimaging applications involving extended objects containing fine structure,\nthe MTF is a more appropriate performance criterion than PSF. Practical\nCutoff Frequency(Fr) -> Cutoff Frequency(Fc)\n\n16.684 Space Systems Product Development\nChart: 14\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical Sensitivity\n0.65\n0.7\n0.75\n0.8\n0.85\n0.9\n0.95\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\nN=8\nN=6\nN=2\nPhase SubTelescope\nCommon Secondary\nEffective Collecting Area\nREFLECTANCE R\n-\nSensitivity of Phased Telescope Array (Effective Collecting Area)\nR: the reflectance\nN: the number of reflections\n-\nN\ngeo\neff\nR\nA\nA\n=\n2 types may be viable concept\nfor quasi-monochromatic\napplications; however, phased\ntelescope arrays will suffer\nsubstantial sensitivity losses for\nbroadband spectral applications\nA Region: UV\nB Region: Visible (Color)\nC Region: Quasi-Monochromatic\nA\nB\nC\n\n16.684 Space Systems Product Development\nChart: 15\nFebruary 13, 2001\nMIT Space Systems Laboratory\nPSF,EE (Golay Array -3)\nPreliminary Calculation(0.3m GR) => D=2.0m,approx needed !!\nFor Reff=1m, r=0.5m and Array Radius(L)= 1.m (Golay 3,monochrome)\nr=0.3685m and Array Radius(L)= 1.1m (Golay 6,monochrome)\nUsing Analysis\nTool:\nEvaluate\nConfiguration\nUsing\n-PSF(Point Spread\nFunction)\n-Encircled Energy\n-MTF(Modulation\nTransfer Function)\n-FF(Fill Factor)\n\n16.684 Space Systems Product Development\nChart: 16\nFebruary 13, 2001\nMIT Space Systems Laboratory\nModulation Transfer Function\n- An image of an extended object is far more complex thant point source(e.g)\nastrometry. PSF is not enough! -> MTF of each configuration is necessary\n- Both Resolution and Contrast (Modulation) Transfer IMPORTANT\n-1\n-0.8\n-0.6\n-0.4\n-0.2\n0.2\n0.4\n0.6\n0.8\nTextEnd\n-10\n-8\n-6\n-4\n-2\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n-1\n-0.8\n-0.6\n-0.4\n-0.2\n0.2\n0.4\n0.6\n0.8\nIntensity\nOf Object\nImage\nObject\nOptical\nArray\nPSF of Optical Array\nIntensity\nOf Image\nModulation= I max -I min\nI max + I min\nFFT(I object)\nOTF=FFT(PSF)\nFFT(I image)\n*\nReal Image\nInvFFT\nMTF=abs(OTF)\n\n16.684 Space Systems Product Development\nChart: 17\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical Control and Beam Combining\nOptics Control\nActuators\nPiezoelectric translators (PZTs)\nFast steering mirrors (Tilt and Tip)\nOptical delay lines (or inchworm positioners)\nAlignment mirrors\nSensors\nLaser interferometers\nQuad cells\nCharge Coupled Device (CCDs) cameras\nAvalanche Photo Diodes (APDs)\n\n16.684 Space Systems Product Development\nChart: 18\nFebruary 13, 2001\nMIT Space Systems Laboratory\nFine Optical Pointing and Phasing:\nSingle Aperture\n-\nLight path\n- Light enters spacecraft by reflecting off\nprimary and then secondary, after which it\nis collimated (not converging or diverging\nexcept for diffraction effects)\n- Reflects off two-axis (tip and tilt) Fast\nSteering Mirror (FSM)\n- FSM controls out the low level line-of-\nsight (LOS) jitter in the deadband of\nthe attitude control\n- Lens focuses light onto camera\n-\nLOS jitter control using FSM\n- Feedforward attitude sensors to command\nFSM\n- If bright point source in FOV, measure\nmotion on camera and command FSM to\nminimize its motion\nPrimary\nMirror\nSecondary\nMirror\nFast\nSteering\nMirror\nLight\nRays\nCamera\nLens\n\n16.684 Space Systems Product Development\nChart: 19\nFebruary 13, 2001\nMIT Space Systems Laboratory\nCCD\nFig.10, Cassegrain Type beam combiner\n(above) and refractive lense combiner\nBeam Combining Goal:\n1.\nmaintain the optical phase difference of each beam to a fraction of a\nwavelength\n2.\nalign images from telescopes to within a fraction of a resolution\nelement over the whole field of view\n(Additionally) Field of curvatures on the order of wavelength, finer than\nrequired for conventional telescopes\nBeam Combiner\nPhase(Piston Error) Contributor:\n1.\nLateral Pupil Geometry Error (Pupil Mapping\nError)\n=>the elimination of this error : golden rule of\nseparated telescope ( significant in wide field of\nview telescope)\n2.\nPiston Error: part of piston error is induced by\npupil geometry e\n3.\nTilt Error : Measured separately from piston\nerror. X-Tilt Error, Y-Tilt Error\n\n16.684 Space Systems Product Development\nChart: 20\nFebruary 13, 2001\nMIT Space Systems Laboratory\nLateral Pupil Geometry Error\nPhysical Meaning:\nIf the subapertures of the entrance pupil\nhave a D, and separated by S, with\nmagnification M, the exit pupil must have\ndimensions for D/M and separation S/M\na\na\n)\nsin(aM\nP\nÎµ\n=\np\nCorrect Pupil Geometry\nIncorrect Pupil Geometry\nDifficult to measure lateral\npupil geometry =>\nabstract optical quantity\nUse the relationship and\nKalman filter to estimate Îµ\nPg\nÏ\n)\nsin(M\nPg\nÏ\nÎµ\n=\nÎµ :lateral pupil\ngeometry error\n\n16.684 Space Systems Product Development\nChart: 21\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical Tolerance\np\nÎ³\nr\nTilt induced\npiston error\n)\nsin(Î³\nr\nPt =\n]\n)\nsin(\n[\n)\nsin(\n)\n(\np\nM\nr\np\np\np\nm\ng\nt\np\n+\n+\n=\n+\n+\n=\nÏ\nÎµ\nÎ³\nFOV=4km,h=500km,piston error55nm\n=>1Î¼m\nLateral pupil\nGeometry Error\n<1/10 of Airy Disk Diameter\n=> 33\nÎ¼rad\nAlignment Error\n(Image Rotation)\n1/10 of Î», r=0.5m => 110 nrad\nTilt\n1/10 of wavelength = 55 nm\nPiston\nTotal Piston Error\nP :the optical\npath difference\nbetween beams\nTolerance\nErrors\nD\nFOVHalfAngle\n)\n.2\n)(\n1.0\n(\nÎ»\n<\nâÎ¦\n\n16.684 Space Systems Product Development\nChart: 22\nFebruary 13, 2001\nMIT Space Systems Laboratory\nBeam Combining Layout\nOPDA(Optical Path Difference Adjuster) :is driven by\n-Piezoelectric translator(PZT) = Fine Control\nTranslation Range (-12 Î¼m),Resolution(5nm), SlewRate(4.5 Î¼m/s)\nAngular Tilt Range(700 Î¼rad),Resolution (200 nrad)\n-Burleigh inchworm positioners = Coarse Control\nTranslation Range(5mm) with a resolution of 0.1 Î¼m\nCCD\nRetro Mirror\nSensor System (Interferometer)\nScraper(Scan) Mirror\nOPDA\n\n16.684 Space Systems Product Development\nChart: 23\nFebruary 13, 2001\nMIT Space Systems Laboratory\nSensor System Optics(Example from AFRL)\nPolarizing\nBeam Splitter\nFilter\nBeam Splitter\nDirection to Scraper Mirror\nLine Scan\nCamera\nLine Scan\nCamera\nBeam Expander\nArgon Laser\nMotor\nField Scan Mirror (Ï)\nPiston\nSensing\n: Lateral Effective\nPhoto detector(LEP)\n: Split Polarizer\nTilt\nSensing\n: Microscope Lens\n\n16.684 Space Systems Product Development\nChart: 24\nFebruary 13, 2001\nMIT Space Systems Laboratory\nFine Optical Pointing and Phasing:\nMultiple Aperture\n-\nNow need to stabilize both absolute\nand relative LOS jitter (Differential\nWavefront Tilt)\n-\nAlso need to interfere same\nwavefront of light at combiner\n- Use Optical Delay Lines (ODLs)\n- ODLs add and subtract\noptical pathlength from the\ncompanion telescope to the\ncombiner.\n- Used to control small\npositional mis-alignment\nand S/C attitude error\n- Typically a multi-stage\ndevice with voice coils and\npiezoelectrics\nPrimary\nMirror\nSecondary\nMirror\nFast\nSteering\nMirror\nLight\nRays\nCamera\nLens\nSecondary\nMirror\nLight\nRays\nFast\nSteering\nMirror\nOptical\nDelay\nLine\nFold\nMirrors\nBeam\nCombiner\n\n16.684 Space Systems Product Development\nChart: 25\nFebruary 13, 2001\nMIT Space Systems Laboratory\nReferences\n[1] Larson, W.J., Wertz, J.R., \"Space Mission Analysis and Design\", Second\nEdition, 9.5 Designing Visual and IR Payloads, pp.. 249-274, Microcosm,\nInc,1992\n[2] Born Max, Wolf Emil, \"Principles of Optics\", Electromagnetic Theory of\npropagation interference and diffraction of light, Sixth Edition, Cambridge\nUniversity Press, 1998\n[3] Hecht E. \"Optics\", Addison-Wesley, 1987\n[4] Gunter Diethmar Roth, \"Compendium of Practical Astronomy\", Volume 1,\nInstrumentation and Reduction Techniques, Springer Verlag, Berlin, New York,\nISBN 3-540-56273-7, 1994\n\n16.684 Space Systems Product Development\nChart: 26\nFebruary 13, 2001\nMIT Space Systems Laboratory\nOptical System Design Process\nFrom SMAD Chapter 9\n1. Determine Instrument Requirements\n2. Choose preliminary aperture\n3. Determine target radiance\n4. Select detector candidates\n5. \"Optical Link Budget\", SNR considerations\n6. Determine Focal Plane architecture and scanning schemes\n7. Select F# and telescope/optical train design\n8. Complete preliminary design and check MTF\n9. Estimate weight, power and ACS requirements\n10. Iterate and document - code optics software module"
    },
    {
      "category": "Resource",
      "title": "l8_optics_3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/89884fbee3e20ea53f328a3c6b6a23b4_l8_optics_3.pdf",
      "content": "Chart: 1\nAdaptive Reconnaissance Golay\nAdaptive Reconnaissance Golay--3 Optical Satellite\n3 Optical Satellite\n(ARGOS)\n(ARGOS)\nProf David W. Miller\nProf David W. Miller\n\nChart: 2\nARGOS Overview\nARGOS Overview\nISS\nMoon\nFrictionless Air Bearing\nRWA\nSurrogate\nGround Station\nM.I.T.\nAngular Resolution at Î»=550 nm:\n0.35 arcsec\nWavelength Regime:\n400-700 nm FOR\n(Field-of-Regard):\n120Â° (full cone)\nFOV (Field-of-View)-min:\n3 x 3 arcmin\nSNR\n100 (Min)\nPointing Accuracy:\n+/- 10 arcsec\nAutonomous Operation:\n> 1 hour\nAngular Resolution at Î»=550 nm:\n0.35 arcsec\nWavelength Regime:\n400-700 nm FOR\n(Field-of-Regard):\n120Â° (full cone)\nFOV (Field-of-View)-min:\n3 x 3 arcmin\nSNR\n100 (Min)\nPointing Accuracy:\n+/- 10 arcsec\nAutonomous Operation:\n> 1 hour\nWireless\nCOMM\nStation\nFirst field operation in May\nFirst field operation in May\nGoal :\nDemonstrate\nthe feasibility\nof\nInterferometry\ntechnology\nGoal :\nDemonstrate\nthe feasibility\nof\nInterferometry\ntechnology\n\nChart: 3\nFull Structure\nFull Structure\n\nChart: 4\nSub\nSub--Aperture Manufacturing\nAperture Manufacturing\nTAKAHASHI 8-inch High Precision (RMS WF errors 1/20 Î») Telescope\nFinal Design\nDesigned optimized achromatic doublet to convert a focal telescope to afocal with\nMagnification m=10\n-FK51/BaK2\n-â CTE 5.3\n-0.0027 RMS Error\n-Some sensitivity to thermal shock\n--Manufacturable tolerances\n-FK51/BaK2\n-â CTE 5.3\n-0.0027 RMS Error\n-Some sensitivity to thermal shock\n--Manufacturable tolerances\nFK51\nBaK2\n\nChart: 5\nRelay Optics Design\nRelay Optics Design\n1.\nSub Aperture\n2.\nCollimator\n3.\nFSM+ODL\n4.\nPyramidal Mirror\n5.\nBeam Combiner\n6.\nCCD\nThe Advantages of Two Mirror Design\nthe cost, the controller complexity,\nless reflectance loss, smaller possible misalignment\nerrors, compactness\nThe Advantages of Two Mirror Design\nthe cost, the controller complexity,\nless reflectance loss, smaller possible misalignment\nerrors, compactness\n\nChart: 6\nAllowable Structural\nAllowable Structural\nMisalignments\nMisalignments\nB= FSM\nrotation\nA\nB\n45-B\n45-A+B = 45- B\n2B=A\nB= 0.5 *A *10 = 5 A. In reality, a factor of 6.4 works well up\nto 0.01 degree\nTelescope Tilt\n[Deg] [arcsec]\nFSM Comp\n[Deg] Max\n0.034 degree\nFSM OPD\n[mm]\nStrehl Ratio\nAberrated\nSR\nrestored\n0.0001\n0.36\n-0.00064\n0.687\n0.982\n0.001\n3.6\n-0.0064\n0.016\n0.979\n0.005\n-0.032\n0.192\n0.907\n0.01\n-0.064\n0.064\n0.604\n0.01\n-0.064\n0.0002\n0.189\n0.859\nMagnification m=10\n\nChart: 7\nPassive/Active Actuators\nPassive/Active Actuators\nFSM+ODL\n- Angular Range +/- 600 Î¼rad\n- Angular Res. +/- 0.05 Î¼rad\n- Linear Range 12 Î¼m\n- Linear Res. 0.2 nm\nFSM+ODL\n- Angular Range +/- 600 Î¼rad\n- Angular Res. +/- 0.05 Î¼rad\n- Linear Range 12 Î¼m\n- Linear Res. 0.2 nm\nFSM MOUNT\n-Angular Range +/- 7Â°\n- Angular Res. +/- 0.0008Â° (14 Î¼rad)\n- Linear Range 1 cm\n- Linear Res. 1 Î¼m\nFSM MOUNT\n-Angular Range +/- 7Â°\n- Angular Res. +/- 0.0008Â° (14 Î¼rad)\n- Linear Range 1 cm\n- Linear Res. 1 Î¼m\n7Â°\n600 Î¼rad\n0.05 Î¼rad\nFSM\n14 Î¼rad\nMount\nPyramid Errors\nw/o FSM Correction\nSR = 0.444\nPyramid Errors\nw/ FSM Correction\nSR = 0.960\nPyramidal Mirror Pyramidal mount\n\nChart: 8\nAttitude Control System (ACS)\nAttitude Control System (ACS)\nSensor 2:\nViewfinder\nSensor 2:\nViewfinder\nACS\nActuator:\nReaction\nWheel\nACS\nActuator:\nReaction\nWheel\nBody rate\nBody rotation\nWheel\nspeed\n+\nÏ\ne\nQ\nd\nQ\nSensor 3:\nRate Gyro\nSensor 3:\nRate Gyro\nSensor 1:\nElectronic Compass\nSensor 1:\nElectronic Compass\nActive\nBalancing\nSystem\nActive\nBalancing\nSystem\n\nChart: 9\nStructures Design\nStructures Design\n\nChart: 10\nSparse\nSparse--aperture Optics/Control\naperture Optics/Control\nSystem (SOCS) Framework\nSystem (SOCS) Framework\nPSF\nPSF\nX Analyze Optics Performance Requirements\nX Analyze Optics Performance Requirements\nY Determine Array Configuration\nY Determine Array Configuration\nZ Determine Tolerable Beam\nCombining Errors\nZ Determine Tolerable Beam\nCombining Errors\n[ Design/Build\nSub-Aperture\nTelescope\n[ Design/Build\nSub-Aperture\nTelescope\n\\ Design\nRelay Optics\n\\ Design\nRelay Optics\n_ Develop Wavefront Sensors,Controllers\n_ Develop Wavefront Sensors,Controllers\n^ Design, Analyze, Build Structures\n^ Design, Analyze, Build Structures\nTrack\nWFE\nBudget\nÎ¸r\nÎ¸r\nEE\nEE\nSR\nSR\nACS\nACS\nSNR\nSNR\nFOV\nFOV\nMTF\nMTF\nL\nL\nD\nD\n# of Aperture\n# of Aperture\nPiston\nPiston\nTilt/Tip\nTilt/Tip\nPupil\nmapping\nPupil\nmapping\n# Reflection\n# Reflection\nGeometry\nGeometry\n# Control Channel\n# Control Channel\nBeam\nCombiner\nBeam\nCombiner\nAssembly/Alignment Errors\nAssembly/Alignment Errors\nRMS WF Error Budget Tree\nRMS WF Error Budget Tree\nFocal_1\nFocal_1\nM=d/D\nM=d/D\nFSM\nFSM\nFMs\nFMs\nODLs\nODLs\nStructure Vibration\nStructure Vibration\n]Design\nCCD System\n]Design\nCCD System\nBeam Combininng Errors\nBeam Combininng Errors\nSub Aperture RMS WFE\nSub Aperture RMS WFE\nOptical Components Errors\nOptical Components Errors\nResidual Optics Design WFE\nResidual Optics Design WFE\nAllowable\nmisalignment\nAllowable\nmisalignment\n\nChart: 11\nDetermination of Array Configuration\nDetermination of Array Configuration\nA (x,y)\nabs( )^2\nS (x,y)\nAmplitude Spread Function\nPoint Spread Function (PSF)\nP (Î¾,Î¶)\nAuto-correlation\nH (Î¾,Î¶)\nComplex Pupil Function\nOptical Transfer Function (OTF)\nAngular Resolution,\nStrehl Ratio Requirement\nAngular Resolution,\nStrehl Ratio Requirement\nFind suitable PSF, MTF\nFind suitable PSF, MTF\nDetermine the\ncorresponding L, D\nDetermine the\ncorresponding L, D\n\nChart: 12\nImpact of [L D] on Resolution\nImpact of [L D] on Resolution\nFinal Selection for the ARGOS testbed\nL=0.19185 m\nD=0.210 m (8 inch COTS telescope)\nFinal Selection for the ARGOS testbed\nL=0.19185 m\nD=0.210 m (8 inch COTS telescope)\n\nChart: 13\nPhasing Error Analysis\nPhasing Error Analysis --\nPiston(OPD) Error\nPiston(OPD) Error\nI âÏD(1 + cos( r ))\nÎ»\n2 J1 (ÏD sin r / Î» )\nÏD sin r / Î»\ne\nj 2 Ï ( L k r / Î» ) cos( Î´ k -Î¸ )e\njÏ k\nk =1\nn\nâ\n- Menneson's Equation\n- simplified\n-4\n-2\nx 10-6\n0.5\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\n1.4\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\n-4\n-2\nx 10-6\n0.2\n0.4\n0.6\n0.8\n1.2\nGolay w/o OPD\nGolay w/ OPD\nMonolithic\nIArray=3+2cos( 3cos(Ï/6+Î¸)2ÏLr/Î»+Ï12)\n+2cos( 3cos(Ï/6-Î¸)2ÏLr/Î»+Ï13)+2cos( 3sin(Î¸)2ÏLr/Î»+Ï23)\n+0.2Î»\n-0.2Î»\nÎ»/10 was suggested\nas maximum piston\n(OPD) error\nÎ»/10 was suggested\nas maximum piston\n(OPD) error\n\nChart: 14\nPhasing Error Requirement\nPhasing Error Requirement --\nTilt / Pupil Mapping Error\nTilt / Pupil Mapping Error\nPupil Mapping Error :\nGolden Rule of Beam Combining\nD/L (Entrance Pupil) =d/l (exit pupil)\nMax allowable = 12 Î¼m\nPupil Mapping Error :\nGolden Rule of Beam Combining\nD/L (Entrance Pupil) =d/l (exit pupil)\nMax allowable = 12 Î¼m\nFEM Tilt Error Analysis\npredicts maximum\nallowable: 0.35 Î¼rad=20 Î¼ Deg\nFEM Tilt Error Analysis\npredicts maximum\nallowable: 0.35 Î¼rad=20 Î¼ Deg\n\nChart: 15\nMagnification\nMagnification vs\nvs Shear Error\nShear Error\n- Sub-aperture magnification can be tuned to maximize\nallowable shear error (lateral pupil mapping error) thereby\nreducing control complexity.\n\nChart: 16\nZEMAX, CODE\nZEMAX, CODE--V\nV\n- Zemax is a professional ray tracing/optical design software\n- Sequential, Nonsequential Ray Tracing\n- Optimization of optics design\n- PSF, MTF, Spot Diagram, Imaging Analysis\n- Tolerancing and Sensitivity Analysis\n\nChart: 17\nComplete WF Error Budget\nComplete WF Error Budget\nDistortion\n0.015\nField Curvature\n0.020\nOther abberations\n0.013\nOptical Design Errors\n(Residual Design Error)\n0.028\nFabrication + alignment\n0.015\nThermal\n0.01\nCollimator\n0.0009\nSubtelescope w/ Collimator\n0.017\nFabrication\n0.015\nThermal\n0.01\nAlignment\n0.010\nPrimary\n0.021\nFabrication\n0.015\nThermal\n0.01\nAlignment\n0.010\nSecondary\n0.017\nBeam Combiner\nManufacturing Error\n0.027\nPiston(Phase) Error\n0.028\nTilt/Tip Error\n0.016\nPupil Mapping Error\n0.015\nMagnification Error\n0.015\nSensor Error\n0.010\nActuator Error\n0.01\nBeam Combining Error\n0.041\nInter-subtelescope alignment\n0.015\nPointing/Focus\n0.01\nAssembly Deformation\n0.01\nFSM\nODL\nFM @ BC\nFold Mirrors Alignment\n0.01\nAssembly/Alignment\n0.029\nThermal Deformation\n0.02\nJitter/Drift (Image)\n0.015\nJitter/Drift (Pupil)\n0.015\nGravity Release Error\n0.010\nEnvironmental Error\n0.0309\nTotal Wavefront Error\n0.0727 (total RMS) < 0.075\nStrehl Ratio =\n(2\n/\n)\ne\nÏÏ Î»\n-\n,Ï= RMS Wavefront error.\n\nChart: 18\nOptical Cost Models\nOptical Cost Models\n- Investigate economical viability of modular optics\ngiven performance constraints\n- Focus on monolithic Cassegrain telescopes versus\nGolay-3 design\n- Use real data and experience from ARGOS\nÎ´k\nLk\nB\nDk\nlk\nb\ndk\nsub-telescope plane\n(input pupil)\ncombiner plane\n(exit pupil)\nfocal plane\n(image pupil)\nobject\nk-th aperture\nbeam\ncombiner\nrelay\noptics\n\nChart: 19\nLiterature Search for Cost Models\nLiterature Search for Cost Models\nKahan, Targrove, \"Cost modeling of large\nspaceborne optical systems\", SPIE, Kona, 1998\nHumphries, Reddish, Walshaw,\"Cost scaling laws\nand their origin: design strategy for an optical array\ntelescope\", IAU, 1984\nMeinel, \"Cost-scaling laws applicable to very large\noptical telescopes\", SPIE, 1979\nMeinel's law:\n2.58\n0.37\n[M$] (1980)\nS\nD\n=\nâ\n\nChart: 20\nSmall Amateur Telescopes\nSmall Amateur Telescopes\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n0.5\n1.5\n2.5\nx 10 4\nTelescope Diameter D [m]\nTelescope Purchase Cost C [2001$]\nTelescope Cost CER (Aperture): C=28917*D 2.76\n- Priced various amateur\ntelescopes\n- DHQ f/5\n- DHQ f/4.5\n- D Truss f/5\n- Obsession f/4.5\n- Celestron G-f/10\n- Fit power law\n- Exponent surprisingly\nsimilar to Meinel's Law\n2.76\nC\nD\n=\n\nChart: 21\nProfessional Telescope OTA cost\nProfessional Telescope OTA cost\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\n0.5\n1.5\n2.5\n3.5\nx 10\nAperture Diameter D [m]\nOTA Cost [2001 $]\nRitchey-Chretien\nClassical Cassegrain\nCompany: Optical Guidance Systems\n(http:www.opticalguidancesystems.com)\nCERs for\nRitchey-Chretien\nClassical Cassegrain\nRemarkable Result:\nvirtually identical\npower law across\ncompletely different\nproduct lines.\n2.80\nRC\nC\nD\n=\nâ\n2.75\nCC\nC\nD\n=\nâ\n\nChart: 22\nACS Mass and Cost\nACS Mass and Cost\n-\nReaction wheel mass scales w/\nmomentum capacity\n-\nReaction wheels dominate\nACS mass\n-\nACS cost is function of mass\n-\nScale using ARGOS ACS mass\nand cost\n-\nInertia depends on sub-aperture\nmasses and geometry\n-\nAssumed 1.5 deg/sec slew rate\nMass [Kg]\nMomentum Capacity [Nms]\nBall, Honeywell, and Ithaco RWAs [Kg = 2.49 Nms0.41]]\nKg = 2.49Nms\n0.41\n0.8\n$ACS\no\nACS\nc Kg\n=\n\nChart: 23\nSub\nSub--System Cost Tables\nSystem Cost Tables\n\nChart: 24\nSub\nSub--System Cost Tables\nSystem Cost Tables\n\nChart: 25\nSub\nSub--System Cost Tables\nSystem Cost Tables\n\nChart: 26\nLabor Cost Table\nLabor Cost Table\nSub-System\nYearly\nRate\nSpring Summer\nFall\nSpring\nTotal\nTotal\nRecurring\nPassive Optics Soon-Jo Chung\n$70,000\n$61,833\n$15,458\nJanaki Wickrema\n$50,000\n$35,885\n$7,177\nErik Iglesias\n$50,000\n$55,760\n$7,177\nDavid Ngo\n$50,000\n$55,760\n$7,177\nActive Optics\nSoon-Jo Chung\n$70,000\n$47,148\n$11,594\nAbran Alaniz\n$50,000\n$55,760\n$7,177\nPraxedis Flores III\n$50,000\n$35,885\n$7,177\nACS\nCarl Blaurock\n$70,000\n$12,058\n$6,029\nAyanna Samuels\n$50,000\n$35,885\n$7,177\nSusan Kim\n$50,000\n$35,885\n$7,177\nPaul Wooster\n$50,000\n$35,885\n$7,177\nStructures\nMarc dos Santos\n$50,000\n$35,885\n$7,177\nDavid LoBosco\n$50,000\n$35,885\n$7,177\nPAS\nRaymond Sedwick\n$70,000\n$31,535\n$8,038\nSoon-Jo Chung\n$70,000\n$8,038\n$8,038\nCarolina Tortora\n$50,000\n$35,885\n$7,177\nChristopher Rakowski\n$50,000\n$55,760\n$7,177\nDustin Berkovitz\n$50,000\n$55,760\n$7,177\nSOC\nJohn Keesee\n$90,000\n$40,545\n$10,335\nEric Coulter\n$50,000\n$35,885\n$7,177\nDaniel Kwon/Lisa Girerd\n$50,000\n$35,885\n$7,177\nManagement\nPaul Bauer\n$70,000\n$31,535\n$8,038\nDavid Miller\n$90,000\n$35,775\n$10,335\nRaymond Sedwick\n$70,000\n$6,029\n$2,010\nJohn Keesee\n$90,000\n$7,751\n$2,584\nTotal\n$919,903\n$190,115\nARGOS\nHours\nEB/OHD Wrap\n2.12\nStudent\n$50,000\nStaff\n$70,000\nManagement\n$90,000\n\nChart: 27\nLabor Cost Table\nLabor Cost Table\nSub-System\nmult\nTotal\nRecurring\nmult\nTotal\nRecurring\nmult\nTotal\nRecurring\nPassive Optics\n$209,240\n$36,990\n0.3\n$62,772\n$11,096.88\n$209,240\n$36,990\nActive Optics\n$138,794\n$25,948\n0.3\n$41,638\n$7,784.38\n$138,794\n$25,948\nACS\n$119,714\n$27,560\n$119,714\n$27,560.00\n$119,714\n$27,560\nStructures\n$71,771\n$14,354\n0.6\n$43,063\n$8,612.50\n$71,771\n$14,354\nPAS\n$186,980\n$37,608\n$186,980\n$37,607.92\n$186,980\n$37,608\nSOC\n$112,316\n$24,689\n$112,316\n$24,689.17\n$112,316\n$24,689\nManagement\n$81,090\n$22,967\n$81,090\n$22,966.67\n$81,090\n$22,967\nTotal\n$919,903\n$190,115\n$647,572\n$140,318\n$919,903\n$190,115\nSub-System\nmult\nTotal\nRecurring\nmult\nTotal\nRecurring\nmult\nTotal\nRecurring\nPassive Optics\n1.5\n$313,859\n$55,484\n$418,479\n$73,979\n2.5\n$523,099\n$92,474\nActive Optics\n$277,588\n$51,896\n$416,381\n$77,844\n$555,175\n$103,792\nACS\n$119,714\n$27,560\n$119,714\n$27,560\n$119,714\n$27,560\nStructures\n$143,542\n$28,708\n$215,313\n$43,063\n$287,083\n$57,417\nPAS\n$186,980\n$37,608\n$186,980\n$37,608\n$186,980\n$37,608\nSOC\n$112,316\n$24,689\n$112,316\n$24,689\n$112,316\n$24,689\nManagement\n$81,090\n$22,967\n$81,090\n$22,967\n$81,090\n$22,967\nTotal\n$1,235,088\n$248,912\n$1,550,272\n$307,709\n$1,865,456\n$366,506\nARGOS\nMonolith\nGolay-3\nGolay-6\nGolay-9\nGolay-12\n\nChart: 28\nGolay\nGolay System Costs\nSystem Costs\n-\nOptimum Golay is\nDeff-dependent\n-\nLabor moves\nGolay benefits to\nlarger Deff\n-\nGolay's sacrifice\nEncircled Energy\nEE=83.5%\nEE=26.4%\nEE=9.3%\nEE=3.6%\nEE=2.2%\n\nChart: 29\nCompact Golay\nCompact Golay--33\n-\nReduces side-lobes, improves EE,\nimproves fill factor (SNR)\n-\nSacrifices cost savings\n-\nAdding bus & relay optics costs\ndefines Golay-3 vs. monolith\nbreakpoint\n*\nARGOS\nL=1.2xD\nL=D (Golay)\nL=0.8xD\n*\nARGOS\n\nChart: 30\nCompact Hex Arrays\nCompact Hex Arrays\nEE=62%\nEE=50%\nEE=40%\nEE=31%\nEE=23%\nDeff=0.42m\nDeff=0.64m\nDeff=1.79m\nCompact Golay-3\nCompact Golay-6\nCompact Golay-9\nCompact Golay-12\nCompact Hex\nMonolith\nGolay-3\nGolay-6\nGolay-9\nGolay-12\n-\nLarger Deff favors higher\norder Golays\n-\nGolay-3 & Hex compact\nbetter than higher order\nGolays\n-\nCompactness limited by sub-\naperture interference\n-\nHex is not as cost-efficient at\nproviding full uv-coverage as\nGolay\nEqual Deff (angular resolution)"
    },
    {
      "category": "Resource",
      "title": "l9_acs.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/ee22e157539639b68dedef68d5a0c45f_l9_acs.pdf",
      "content": "Attitude Determination and Control\nAttitude Determination and Control\n(ADCS)\n(ADCS)\nOlivier L. de\nOlivier L. de Weck\nWeck\nDepartment of Aeronautics and Astronautics\nDepartment of Aeronautics and Astronautics\nMassachusetts Institute of Technology\nMassachusetts Institute of Technology\n16.684 Space Systems Product Development\n16.684 Space Systems Product Development\nSpring 2001\nSpring 2001\n\nADCS Motivation\nADCS Motivation\nMotivation\n-- In order to point and slew optical\nsystems, spacecraft attitude control\nprovides coarse pointing while\noptics control provides fine\npointing\nSpacecraft Control\n-- Spacecraft Stabilization\n-- Spin Stabilization\n-- Gravity Gradient\n-- Three-Axis Control\n-- Formation Flight\n-- Actuators\n-- Reaction Wheel Assemblies\n(RWAs)\n-- Control Moment Gyros\n(CMGs)\n-- Magnetic Torque Rods\n-- Thrusters\n-- Sensors: GPS, star trackers, limb\nsensors, rate gyros, inertial\nmeasurement units\n-- Control Laws\nSpacecraft Slew Maneuvers\n-- Euler Angles\n-- Quaternions\nKey Question:\nWhat are the pointing\nrequirements for satellite ?\nNEED expendable propellant:\n- On-board fuel often determines life\n- Failing gyros are critical (e.g. HST)\n\nOutline\nOutline\nDefinitions and Terminology\nCoordinate Systems and Mathematical Attitude Representations\nRigid Body Dynamics\nDisturbance Torques in Space\nPassive Attitude Control Schemes\nActuators\nSensors\nActive Attitude Control Concepts\nADCS Performance and Stability Measures\nEstimation and Filtering in Attitude Determination\nManeuvers\nOther System Consideration, Control/Structure interaction\nTechnological Trends and Advanced Concepts\n\nOpening Remarks\nOpening Remarks\nNearly all ADCS Design and Performance can be viewed in\nterms of RIGID BODY dynamics\nTypically a Major spacecraft system\nFor large, light-weight structures with low fundamental\nfrequencies the flexibility needs to be taken into account\nADCS requirements often drive overall S/C design\nComponents are cumbersome, massive and power-consuming\nField-of-View requirements and specific orientation are key\nDesign, analysis and testing are typically the most\nchallenging of all subsystems with the exception of payload\ndesign\nNeed a true \"systems orientation\" to be successful at\ndesigning and implementing an ADCS\n\nTerminology\nTerminology\nATTITUDE\nATTITUDE : Orientation of a defined spacecraft body coordinate\nsystem with respect to a defined external frame (GCI,HCI)\nATTITUDE\nATTITUDE DETERMINATION:\nDETERMINATION: Real-Time or Post-Facto knowledge,\nwithin a given tolerance, of the spacecraft attitude\nATTITUDE CONTROL:\nATTITUDE CONTROL: Maintenance of a desired, specified attitude\nwithin a given tolerance\nATTITUDE ERROR:\nATTITUDE ERROR: \"Low Frequency\" spacecraft misalignment;\nusually the intended topic of attitude control\nATTITUDE JITTER:\nATTITUDE JITTER: \"High Frequency\" spacecraft misalignment;\nusually ignored by ADCS; reduced by good design or fine\npointing/optical control.\n\nPointing Control Definitions\nPointing Control Definitions\ntarget\ndesired pointing direction\ntrue\nactual pointing direction (mean)\nestimate estimate of true (instantaneous)\na\npointing accuracy (long-term)\ns\nstability (peak-peak motion)\nk\nknowledge error\nc\ncontrol error\ntarget\nestimate\ntrue\nc\nk\na\ns\nSource:\nG. Mosier\nNASA GSFC\na = pointing accuracy = attitude error\na = pointing accuracy = attitude error\ns = stability = attitude jitter\ns = stability = attitude jitter\n\nAttitude Coordinate Systems\nAttitude Coordinate Systems\nX\nZ\nY\n^\n^\n^\nY = Z x X\nCross product\nCross product\n^\n^\n^\nGeometry: Celestial Sphere\nGeometry: Celestial Sphere\n\n: Right Ascension\n: Right Ascension\n: Declination\n: Declination\n(North Celestial Pole)\n\nArc length\ndihedral\nInertial Coordinate\nInertial Coordinate\nSystem\nSystem\nGCI: Geocentric Inertial Coordinates\nGCI: Geocentric Inertial Coordinates\nVERNAL\nVERNAL\nEQUINOX\nEQUINOX\nX and Y are\nin the plane of the ecliptic\n\nAttitude Description Notations\nAttitude Description Notations\nDescribe the orientation of a body:\n(1) Attach a coordinate system to the body\n(2) Describe a coordinate system relative to an\ninertial reference frame\nA\nZË\nA\nXË\nA\nYË\n}\n{\nw.r.t.\nvector\n\nPosition\n\nVector\n\nsystem\n\nCoordinate\n\n}\n{\nA\nP\nP\nA\n=\n=\n=\nâ\n\nP\nA\ny\nP\nx\nP\nz\nP\n\n=\nz\ny\nx\nA\nP\nP\nP\nP\n[\n]\n\n=\n=\n\n}\n{\nof\n\nvectors\nUnit\nA\nA\nA\nZ\nY\nX\nA\nË\nË\nË\n\nRotation Matrix\nRotation Matrix\nRotation matrix from {B} to {A}\nJefferson Memorial\nA\nZË\nA\nXË\nA\nYË\nsystem\n\ncoordinate\n\nReference\n\n}\n{\n=\nA\nB\nXË\nB\nYË\nB\nZË\nsystem\n\ncoordinate\n\nBody\n\n}\n{\n=\nB\n[\n]\nB\nB\nB\nA\nA\nB\nZ\nY\nX\nR\nË\nË\nË\nA\nA\n\n=\nSpecial properties of rotation matrices:\n,\n-\n=\n=\nR\nR\nI\nR\nR\nT\nT\n\n=\nR\n(1) Orthogonal:\nR\nR\nR\nR\nA\nB\nC\nB\nC\nA\nB\nB\n\n=\nJefferson Memorial\nA\nZË\nA\nXË\nA\nYË\nB\nXË\nB\nYË\nB\nZË\nÎ¸\nÎ¸\n\n=\nR\nA\nB\ncos\n\nsin\n\nsin\n-\n\ncos\n\n(2) Orthonormal:\n(3) Not commutative\n\nEuler\nEuler Angles (1)\nAngles (1)\nEuler angles describe a sequence of three rotations about different\naxes in order to align one coord. system with a second coord. system.\n\n=\n\ncos\n\nsin\n\nsin\n-\n\ncos\n\nÎ±\nÎ±\nÎ±\nÎ±\nR\nA\nB\nÎ±\nby\n\nabout\n\nRotate\nA\nZË\nÎ²\n\nby\n\nabout\n\nRotate\nB\nYË\nÎ³\nby\n\nabout\n\nRotate\nC\nXË\nA\nZË\nA\nXË\nA\nYË\nB\nXË\nB\nYË\nB\nZË\nÎ±\nÎ±\nB\nZË\nB\nXË\nB\nYË\nC\nXË\nC\nYË\nC\nZË\nÎ²\nÎ²\nC\nZË\nC\nXË\nD\nYË\nD\nXË\nC\nYË\nD\nZË\nÎ³\nÎ³\n\n=\nÎ²\nÎ²\nÎ²\nÎ²\ncos\n\nsin\n-\n\nsin\n\ncos\n\nR\nB\nC\n\n=\nÎ³\nÎ³\nÎ³\nÎ³\ncos\n\nsin\n\nsin\n-\n\ncos\n\nR\nC\nD\nR\nR\nR\nR\nC\nD\nB\nC\nA\nB\nA\nD\n\n=\n\nEuler\nEuler Angles (2)\nAngles (2)\nConcept used in rotational\nkinematics to describe body\norientation w.r.t. inertial frame\nSequence of three angles and\nprescription for rotating one\nreference frame into another\nCan be defined as a transformation\nmatrix body/inertial as shown: TB/I\nEuler angles are non-unique and\nexact sequence is critical\nZi (parallel to r)\nYaw\nYaw\nPitch\nPitch\nRoll\nRoll\nXi\n(parallel\nto v)\n(r x v direction)\nBody\nCM\nGoal: Describe kinematics of body-fixed\nframe with respect to rotating local vertical\nYi\nnadir\nr\n/\nYAW\nROLL\nPITCH\ncos\nsin\ncos\n-sin\n-sin\ncos\ncos\nsin\n-sin\ncos\nsin\ncos\nB I\nT\nÏ\nÏ\nÎ¸\nÎ¸\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÎ¸\nÎ¸\n\n=\nâ\nâ\n\nNote:\nabout Yi\nabout X'\nabout Zb\nÎ¸\nÏ\nÏ\n/\n/\n/\nT\nB I\nI B\nB I\nT\nT\nT\n-\n=\n=\nTransformation\nfrom Body to\n\"Inertial\" frame:\n(Pitch, Roll, Yaw) = ()\nEuler Angles\n\nQuaternions\nQuaternions\nMain problem computationally is\nthe existence of a singularity\nProblem can be avoided by an\napplication of Euler's theorem:\nThe Orientation of a body is uniquely\nspecified by a vector giving the direction\nof a body axis and a scalar specifying a\nrotation angle about the axis.\nEULER\nEULER''S THEOREM\nS THEOREM\nDefinition introduces a redundant\nfourth element, which eliminates\nthe singularity.\nThis is the \"quaternion\" concept\nQuaternions have no intuitively\ninterpretable meaning to the human\nmind, but are computationally\nconvenient\n\n=\n\n=\nq\nq\nq\nq\nq\nq\nQ\n\nJefferson Memorial\nA\nZË\nA\nXË\nA\nYË\nB\nXË\nB\nYË\nB\nZË\nÎ¸\nK\nA Ë\n\n=\nz\ny\nx\nA\nk\nk\nk\nKË\n\n=\n\n=\n\n=\n\n=\ncos\nsin\nsin\nsin\nÎ¸\nÎ¸\nÎ¸\nÎ¸\nq\nk\nq\nk\nq\nk\nq\nz\ny\nx\nrotation.\n\nof\n\naxis\n\nthe\n\ndescribes\nvector\n\nA\n=\nq\nrotation.\n\nof\namount\n\nthe\n\ndescribes\nscalar\n\nA\n=\nq\nA: Inertial\nB: Body\n\nQuaternion Demo (MATLAB)\nQuaternion Demo (MATLAB)\n\nComparison of Attitude Descriptions\nComparison of Attitude Descriptions\nMethod\nEuler\nAngles\nDirection\nCosines\nAngular\nVelocity\nQuaternions\nPluses\nIf given Ï,Ï,Î¸\nthen a unique\norientation is\ndefined\nOrientation\ndefines a\nunique dir-cos\nmatrix R\nVector\nproperties,\ncommutes w.r.t\naddition\nComputationally\nrobust\nIdeal for digital\ncontrol implement\nMinuses\nGiven orient\nthen Euler\nnon-unique\nSingularity\n6 constraints\nmust be met,\nnon-intuitive\nIntegration w.r.t\ntime does not\ngive orientation\nNeeds transform\nNot Intuitive\nNeed transforms\n\nBest for\nBest for\nanalytical and\nanalytical and\nACS design work\nACS design work\nBest for\nBest for\ndigital control\ndigital control\nimplementation\nimplementation\nMust store\ninitial condition\n\nRigid Body Kinematics\nRigid Body Kinematics\nInertial\nInertial\nFrame\nFrame\nTime Derivatives:\n(non-inertial)\nX\nY\nZ\nBody\nBody\nCM\nCM\nRotating\nRotating\nBody Frame\nBody Frame\ni\nJ\nK\n^\n^\n^\n^\n^\n^\nj\nk\nI\nr\nR\n\n= Angular velocity\nof Body Frame\nBASIC RULE:\nINERTIAL\nBODY\nÏ\nÏ\nÏ\nÏ\n=\n+\nÃ\n\nApplied to\nposition vector r:\n(\n)\nBODY\nBODY\nBODY\nr\nR\nr\nR\nr\nR\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\n=\n+\n=\n+\n+\nÃ\n=\n+\n+\nÃ\n+\nÃ\n+\nÃ\nÃ\n\nPosition\nRate\nAcceleration\nInertial\naccel of CM\nrelative accel\nw.r.t. CM\ncentripetal\ncoriolis\nangular\naccel\nExpressed in\nthe Inertial Frame\n\nAngular Momentum (I)\nAngular Momentum (I)\nAngular Momentum\ntotal\nn\ni\ni\ni\ni\nH\nr\nm r\n=\n=\nÃ\nâ\n\nm1\nmn\nmi\nX\nY\nZ\nCollection of point\nmasses mi at ri\nri\nr1\nrn\nrn\nri\nr1.\n.\n.\nSystem in\nmotion relative\nto Inertial Frame\nIf we assume that\n(a)\nOrigin of Rotating Frame in Body CM\n(b)\nFixed Position Vectors ri in Body Frame\n(Rigid Body)\nThen :\nBODY\ntotal\nANGULAR MOMENTUM\nOF TOTAL MASS W.R.T\nBODY ANGULAR\nINERTIAL ORIGIN\nMOMENTUM ABOUT\nCENTER OFMASS\nn\nn\ni\ni\ni\ni\ni\ni\nH\nH\nm\nR\nR\nm Ï\nÏ\n=\n=\n\n=\nÃ\n+\nÃ\n\nâ\nâ\n\nNote that i is\nmeasured in the\ninertial frame\nAngular Momentum Decomposition\n\nAngular Momentum (II)\nAngular Momentum (II)\nFor a RIGID BODY\nwe can write:\n,BODY\nRELATIVE\nMOTION IN BODY\ni\ni\ni\ni\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\n=\n+\nÃ\n=\nÃ\n\nAnd we are able to write:\nH\nIÏ\n=\n\"The vector of angular momentum in the body frame is the product\nof the 3x3 Inertia matrix and the 3x1 vector of angular velocities.\"\nRIIGID BODY, CM COORDINATES\nH and are resolved in BODY FRAME\nInertia Matrix\nProperties:\nI\nI\nI\nI\nI\nI\nI\nI\nI\nI\n\n=\n\nReal Symmetric ; 3x3 Tensor ; coordinate dependent\n(\n)\n(\n)\n(\n)\n\nn\nn\ni\ni\ni\ni\ni\ni\ni\ni\nn\nn\ni\ni\ni\ni\ni\ni\ni\ni\nn\nn\ni\ni\ni\ni\ni\ni\ni\ni\nI\nm\nI\nI\nm\nI\nm\nI\nI\nm\nI\nm\nI\nI\nm\nÏ\nÏ\nÏ Ï\nÏ\nÏ\nÏ Ï\nÏ\nÏ\nÏ Ï\n=\n=\n=\n=\n=\n=\n=\n+\n=\n= -\n=\n+\n=\n= -\n=\n+\n=\n= -\nâ\nâ\nâ\nâ\nâ\nâ\n\nKinetic Energy and\nKinetic Energy and Euler\nEuler Equations\nEquations\ntotal\nE-ROT\nE-TRANS\nn\nn\ni\ni\ni\ni\ni\nE\nm\nR\nm Ï\n=\n=\n\n=\n+\n\nâ\nâ\n\nKinetic\nEnergy\nFor a RIGID BODY, CM Coordinates\nwith resolved in body axis frame\nROT\nT\nE\nH\nI\nÏ\nÏ\nÏ\n=\nâ\n=\nH\nT\nI\nÏ\nÏ\n\n=\n-\nÃ\n\nSum of external and internal torques\nIn a BODY-FIXED, PRINCIPAL AXES CM FRAME:\n(\n)\n(\n)\n(\n)\nH\nI\nT\nI\nI\nH\nI\nT\nI\nI\nH\nI\nT\nI\nI\nÏ\nÏ Ï\nÏ\nÏ Ï\nÏ\nÏ Ï\n=\n=\n+\n-\n=\n=\n+\n-\n=\n=\n+\n-\n\nEuler\nEuler Equations\nEquations\nNo general solution exists.\nParticular solutions exist for\nsimple torques. Computer\nsimulation usually required.\n\nTorque Free Solutions of\nTorque Free Solutions of Euler\nEuler''s Eq\ns Eq..\nTORQUE-FREE\nCASE:\nAn important special case is the torque-free motion of a (nearly)\nsymmetric body spinning primarily about its symmetry axis\nBy these assumptions:\n,\nx\ny\nz\nÏ\nÏ\nÏ\n<<\n= Î©\nxx\nyy\nI\nI\nâ\nAnd the Euler equations become:\nx\ny\nzz\nyy\nx\ny\nxx\nK\nzz\nxx\ny\ny\nyy\nK\nz\nI\nI\nI\nI\nI\nI\nÏ\nÏ\nÏ\nÏ\nÏ\n-\n= -\nÎ©\n-\n=\nÎ©\n=\n\nThe components of angular velocity\nthen become:\n( )\ncos\n( )\ncos\nx\nxo\nn\ny\nyo\nn\nt\nt\nt\nt\nÏ\nÏ\nÏ\nÏ\nÏ\nÏ\n=\n=\nThe n is defined as the \"natural\"\nor \"nutation\" frequency of the body:\nn\nx\ny\nK K\nÏ\n=\nÎ©\nBody Cone\nSpace Cone\nZ\nH\n\nz\nx\ny\nI\nI\nI\n<\n=\nH\nZ\n\nBody Cone\nSpace\nCone\nz\nx\ny\nI\nI\nI\n>\n=\n\n:: nutation\nnutation\nangle\nangle\n\nH and never align\nunless spun about\na principal axis !\n\nSpin Stabilized Spacecraft\nSpin Stabilized Spacecraft\nUTILIZED TO STABILIZE SPINNERS\n\nXb\nYb\nZb\nTwo bodies rotating at different rates\nabout a common axis\nBehaves like simple spinner, but part\nis despun (antennas, sensors)\nrequires torquers (jets, magnets) for\nmomentum control and nutation\ndampers for stability\nallows relaxation of major axis rule\nDUAL SPIN\nPerfect Cylinder\nBODY\n\nAntenna\ndespun at\n1 RPO\nxx\nyy\nzz\nm\nL\nI\nI\nR\nmR\nI\n\n=\n=\n+\n\n=\n\nDisturbance Torques\nDisturbance Torques\nAssessment of expected disturbance torques is an essential part\nof rigorous spacecraft attitude control design\nGravity Gradient: \"Tidal\" Force due to 1/r2 gravitational field variation\nfor long, extended bodies (e.g. Space Shuttle, Tethered vehicles)\nAerodynamic Drag: \"Weathervane\" Effect due to an offset between the\nCM and the drag center of Pressure (CP). Only a factor in LEO.\nMagnetic Torques: Induced by residual magnetic moment. Model the\nspacecraft as a magnetic dipole. Only within magnetosphere.\nSolar Radiation: Torques induced by CM and solar CP offset. Can\ncompensate with differential reflectivity or reaction wheels.\nMass Expulsion: Torques induced by leaks or jettisoned objects\nInternal: On-board Equipment (machinery, wheels, cryocoolers, pumps\netc...). No net effect, but internal momentum exchange affects attitude.\nTypical Disturbances\n\nGravity Gradient\nGravity Gradient\nGravity Gradient:\n1) â¥Local vertical\n2) 0 for symmetric spacecraft\n3) proportional to â1/r3\nEarth\nr^\n- sin\nZb\nXb\n\n/\nORBITAL RATE\nn\na\nÎ¼\n=\n=\n2 Ë\nË\nT\nn\nr\nI r\n\n=\nâÃ\n\nGravity Gradient\nTorques\nIn Body Frame\n[\n]\nË\nsin\nsin\n1 sin\nsin\nT\nT\nr\nÎ¸\nÏ\nÎ¸\nÏ\nÎ¸\nÏ\n\n= -\n-\n-\nâ-\n\nSmall\nangle\napproximation\nTypical Values:\nI=1000 kgm2\nn=0.001 s-1\nT= 6.7 x 10-5 Nm/deg\nResulting torque in BODY FRAME:\n(\n)\n(\n)\nzz\nyy\nzz\nxx\nI\nI\nT\nn\nI\nI\nÏ\nÎ¸\n-\n\nâ´\nâ\n-\n\n(\n)\nxx\nzz\nlib\nyy\nI\nI\nn\nI\nÏ\n-\n=\nPitch Libration freq.:\n\nAerodynamic Torque\nAerodynamic Torque\na\nT\nr\nF\n=\nÃ\nr = Vector from body CM\nto Aerodynamic CP\nFa = Aerodynamic Drag Vector\nin Body coordinates\na\nD\nF\nV SC\nÏ\n=\nD\nC\nâ¤\nâ¤\nAerodynamic\nDrag Coefficient\nTypically in this Range for\nFree Molecular Flow\nS = Frontal projected Area\nV = Orbital Velocity\n= Atmospheric Density\nExponential Density Model\n2 x 10-9 kg/m3 (150 km)\n3 x 10-10 kg/m3 (200 km)\n7 x 10-11 kg/m3 (250 km)\n4 x 10-12 kg/m3 (400 km)\nTypical Values:\nCd = 2.0\nS = 5 m2\nr = 0.1 m\nr = 4 x 10-12 kg/m3\nT = 1.2 x 10-4 Nm\nNotes\n(1) r varies with Attitude\n(2) varies by factor of 5-10 at\na given altitude\n(3) CD is uncertain by 50 %\n\nMagnetic Torque\nMagnetic Torque\nT\nM\nB\n=\nÃ\nB varies as 1/r3, with its direction\nalong local magnetic field lines.\nB = Earth magnetic field vector in\nspacecraft coordinates (BODY FRAME)\nin TESLA (SI) or Gauss (CGS) units.\nM = Spacecraft residual dipole\nin AMPERE-TURN-m2 (SI)\nor POLE-CM (CGS)\nM = is due to current loops and\nresidual magnetization, and will\nbe on the order of 100 POLE-CM\nor more for small spacecraft.\nTypical Values:\nB= 3 x 10-5 TESLA\nM = 0.1 Atm2\nT = 3 x 10-6 Nm\nConversions:\n1 Atm2 = 1000 POLE-CM , 1 TESLA = 104 Gauss\nB ~ 0.3 Gauss\nat 200 km orbit\n\nSolar Radiation Torque\nSolar Radiation Torque\ns\nT\nr\nF\n=\nÃ\nr = Vector from Body CM\nto optical Center-of-Pressure (CP)\nFs = Solar Radiation pressure in\nBODY FRAME coordinates\n(\n)\ns\ns\nF\nK P S\n=\n+\nK = Reflectivity , 0 < K <1\nS = Frontal Area\n/\ns\ns\nP\nI\nc\n=\nIs = Solar constant, depends on\nheliocentric altitude\n1400 W/m @ 1 A.U.\nsI =\nSignificant for\nspacecraft\nwith large\nfrontal area\n(e.g. NGST)\nSUN\nSUN\nTypical Values:\nK = 0.5\nS =5 m2\nr =0.1 m\nT = 3.5 x 10-6 Nm\nNotes:\n(a) Torque is always â¥ to sun line\n(b) Independent of position or\nvelocity as long as in sunlight\n\nMass Expulsion and Internal Torques\nMass Expulsion and Internal Torques\nMass Expulsion Torque:\nT\nr\nF\n=\nÃ\nNotes:\n(1)\nMay be deliberate (Jets, Gas venting) or accidental (Leaks)\n(2)\nWide Range of r, F possible; torques can dominate others\n(3)\nAlso due to jettisoning of parts (covers, cannisters)\nInternal Torque:\nNotes:\n(1)\nMomentum exchange between moving parts\nhas no effect on System H, but will affect\nattitude control loops\n(2)\nTypically due to antenna, solar array, scanner\nmotion or to deployable booms and appendages\n\nDisturbance Torque for CDIO\nDisturbance Torque for CDIO\nground\nground\nAir\nBearing\nBody\nBody\nCM\nCM\nPivot Point\nPivot Point\nAir Bearing\nAir Bearing\noffset\noffset\nExpect residual\ngravity torque to be\nlargest disturbance\nInitial Assumption:\nInitial Assumption:\n0.001 100 9.81\n1 [Nm]\nT\nr\nmg\n=\nÃ\nâ\nâ\nâ\nâ\nr\nmg\nImportant\nImportant\nto balance\nto balance\nprecisely !\nprecisely !\n\nPassive Attitude Control (1)\nPassive Attitude Control (1)\nRequires Stable Inertia Ratio: Iz > Iy =Ix\nRequires Nutation damper: Eddy Current, Ball-in-\nTube, Viscous Ring, Active Damping\nRequires Torquers to control precession (spin axis\ndrift) magnetically or with jets\nInertially oriented\nPassive control techniques take advantage of basic physical\nprinciples and/or naturally occurring forces by designing\nthe spacecraft so as to enhance the effect of one force,\nwhile reducing the effect of others.\n\nPrecession:\nH\nH\n\nr\nT\nr\nF\n=\nÃ\nF into page\nH\nT\nrF\n=\n=\n\nSPIN STABILIZED\ndH\nH\nH\ndt\nt\nâ\n=\nââ\n\nH\nrF t\nâ´â\nâ\nâ\nsin 2\nH\nH\nH\nI\nÎ¸\nÎ¸\nÏ\nÎ¸\nâ\nâ\n=\nâ\nâ\n=\nââ\nrF t\nrF\nt\nH\nI\nÎ¸\nÏ\nâ\nâ\nâ\n=\nâ\nLarge\n=\ngyroscopic\nstability\nF\n\nPassive Attitude Control (2)\nPassive Attitude Control (2)\nGRAVITY GRADIENT\nRequires stable Inertias: Iz << Ix, Iy\nRequires Libration Damper: Eddy Current,\nHysteresis Rods\nRequires no Torquers\nEarth oriented\nNo Yaw Stability (can add momentum wheel)\nGravity Gradient with Momentum wheel:\nnadir\ndown\nforward\nWheel spins\nat rate\nBODY rotates at\none RPO (rev per orbit)\nO.N.\nGravity Gradient Configuration\nwith momentum wheel for\nyaw stability\n\"DUAL SPIN\" with GG\ntorque providing\nmomentum control\n\nActive Attitude Control\nActive Attitude Control\nReaction Wheels most common actuator\nFast; continuous feedback control\nMoving Parts\nInternal Torque only; external still\nrequired for \"momentum dumping\"\nRelatively high power, weight, cost\nControl logic simple for independent axes\n(can get complicated with redundancy)\nActive Control Systems directly sense spacecraft attitude\nand supply a torque command to alter it as required. This\nis the basic concept of feedback control.\nTypical Reaction (Momentum) Wheel Data:\nOperating Range: 0 +/- 6000 RPM\nAngular Momentum @ 2000 RPM:\n1.3 Nms\nAngular Momentum @ 6000 RPM:\n4.0 Nms\nReaction Torque: 0.020 - 0.3 Nm\n\nActuators: Reaction Wheels\nActuators: Reaction Wheels\nOne creates torques on a spacecraft by creating equal but opposite\ntorques on Reaction Wheels (flywheels on motors).\n-- For three-axes of torque, three wheels are necessary. Usually use four\nwheels for redundancy (use wheel speed biasing equation)\n-- If external torques exist, wheels will angularly accelerate to counteract\nthese torques. They will eventually reach an RPM limit (~3000-6000\nRPM) at which time they must be desaturated.\n-- Static & dynamic imbalances can induce vibrations (mount on isolators)\n-- Usually operate around some nominal spin rate to avoid stiction effects.\nNeeds to be carefully balanced !\nIthaco RWA's\n(www.ithaco.com\n/products.html)\nWaterfall plot:\nWaterfall plot:\n\nActuators: Magnetic\nActuators: Magnetic Torquers\nTorquers\nOften used for Low Earth Orbit\n(LEO) satellites\nUseful for initial acquisition\nmaneuvers\nCommonly use for momentum\ndesaturation (\"dumping\") in\nreaction wheel systems\nMay cause harmful influence on\nstar trackers\nMagnetic\nMagnetic Torquers\nTorquers\nCan be used\n-- for attitude control\n-- to de-saturate reaction wheels\nTorque Rods and Coils\n-- Torque rods are long helical coils\n-- Use current to generate magnetic\nfield\n-- This field will try to align with the\nEarth's magnetic field, thereby\ncreating a torque on the spacecraft\n-- Can also be used to sense attitude\nas well as orbital location\n\nACS Actuators: Jets / Thrusters\nACS Actuators: Jets / Thrusters\nThrusters / Jets\n-- Thrust can be used to control\nattitude but at the cost of\nconsuming fuel\n-- Calculate required fuel using\n\"Rocket Equation\"\n-- Advances in micro-propulsion\nmake this approach more feasible.\nTypically want Isp > 1000 sec\n\nUse consumables such as Cold Gas\n(Freon, N2) or Hydrazine (N2H4)\n\nMust be ON/OFF operated;\nproportional control usually not\nfeasible: pulse width modulation\n(PWM)\n\nRedundancy usually required, makes\nthe system more complex and\nexpensive\n\nFast, powerful\n\nOften introduces attitude/translation\ncoupling\n\nStandard equipment on manned\nspacecraft\n\nMay be used to \"unload\" accumulated\nangular momentum on reaction-wheel\ncontrolled spacecraft.\n\nACS Sensors: GPS and Magnetometers\nACS Sensors: GPS and Magnetometers\nGlobal Positioning System (GPS)\n-- Currently 27 Satellites\n-- 12hr Orbits\n-- Accurate Ephemeris\n-- Accurate Timing\n-- Stand-Alone 100m\n-- DGPS 5m\n-- Carrier-smoothed DGPS 1-2m\nMagnetometers\n-- Measure components Bx, By, Bz of\nambient magnetic field B\n-- Sensitive to field from spacecraft\n(electronics), mounted on boom\n-- Get attitude information by\ncomparing measured B to modeled B\n-- Tilted dipole model of earth's field:\nnorth\neast\nkm\ndown\nB\nC\nS C\nS S\nB\nS\nC\nr\nB\nS\nC C\nC S\nÏ\nÏ\nÎ»\nÏ\nÎ»\nÎ»\nÎ»\nÏ\nÏ\nÎ»\nÏ\nÎ»\n\n-\n-\n\n=\n-\n-\n\n-\n-\n-\n\nWhere: C=cos , S=sin, Ï=latitude, Î»=longitude\nUnits: nTesla\n+Y\n+Z\nflux\nlines\n+X\nMe\n\nACS Sensors: Rate Gyros and\nACS Sensors: Rate Gyros and IMUs\nIMUs\nRate Gyros (Gyroscopes)\n-- Measure the angular rate of a\nspacecraft relative to inertial space\n-- Need at least three. Usually use\nmore for redundancy.\n-- Can integrate to get angle.\nHowever,\n-- DC bias errors in electronics\nwill cause the output of the\nintegrator to ramp and\neventually saturate (drift)\n-- Thus, need inertial update\nInertial Measurement Unit (IMU)\n-- Integrated unit with sensors,\nmounting hardware,electronics and\nsoftware\n-- measure rotation of spacecraft with\nrate gyros\n-- measure translation of spacecraft\nwith accelerometers\n-- often mounted on gimbaled\nplatform (fixed in inertial space)\n-- Performance 1: gyro drift rate\n(range: 0 .003 deg/hr to 1 deg/hr)\n-- Performance 2: linearity (range: 1\nto 5E-06 g/g^2 over range 20-60 g\n-- Typically frequently updated with\nexternal measurement (Star\nTrackers, Sun sensors) via a\nKalman Filter\nMechanical gyros\n(accurate, heavy)\nRing Laser (RLG)\nMEMS-gyros\nCourtesy of Silicon Sensing Systems, Ltd. Used with permission.\n\nACS Sensor Performance Summary\nACS Sensor Performance Summary\nReference\nTypical\nAccuracy\nRemarks\nSun\n1 min\nSimple, reliable, low\ncost, not always visible\nEarth\n0.1 deg\nOrbit dependent;\nusually requires scan;\nrelatively expensive\nMagnetic Field\n1 deg\nEconomical; orbit\ndependent; low altitude\nonly; low accuracy\nStars\n0.001 deg\nHeavy, complex,\nexpensive, most\naccurate\nInertial Space\n0.01 deg/hour\nRate only; good short\nterm reference; can be\nheavy, power, cost\n\nCDIO Attitude Sensing\nCDIO Attitude Sensing\nWill not be able to\nuse/afford STAR TRACKERS !\nFrom where do we get\nan attitude estimate\nfor inertial updates ?\nPotential Solution:\nPotential Solution:\nElectronic Compass,\nElectronic Compass,\nMagnetometer and\nMagnetometer and\nTilt Sensor Module\nTilt Sensor Module\nProblem: Accuracy insufficient to meet requirements alone,\nwill need FINE POINTING mode\nSpecifications:\nHeading accuracy: +/- 1.0 deg RMS @ +/- 20 deg tilt\nResolution 0.1 deg, repeatability: +/- 0.3 deg\nTilt accuracy: +/- 0.4 deg, Resolution 0.3 deg\nSampling rate: 1-30 Hz\n\nSpacecraft Attitude Schemes\nSpacecraft Attitude Schemes\nSpin Stabilized Satellites\n-- Spin the satellite to give it\ngyroscopic stability in inertial\nspace\n-- Body mount the solar arrays to\nguarantee partial illumination by\nsun at all times\n-- EX: early communication\nsatellites, stabilization for orbit\nchanges\n-- Torques are applied to precess the\nangular momentum vector\nDe-Spun Stages\n-- Some sensor and antenna systems\nrequire inertial or Earth referenced\npointing\n-- Place on de-spun stage\n-- EX: Galileo instrument platform\nGravity Gradient Stabilization\n-- \"Long\" satellites will tend to point\ntowards Earth since closer portion\nfeels slightly more gravitational\nforce.\n-- Good for Earth-referenced pointing\n-- EX: Shuttle gravity gradient mode\nminimizes ACS thruster firings\nThree-Axis Stabilization\n-- For inertial or Earth-referenced\npointing\n-- Requires active control\n-- EX: Modern communications\nsatellites, International Space\nStation, MIR, Hubble Space\nTelescope\n\nADCS Performance Comparison\nADCS Performance Comparison\nMethod\nTypical Accuracy\nRemarks\nSpin Stabilized\n0.1 deg\nPassive, simple; single axis\ninertial, low cost, need slip\nrings\nGravity Gradient\n1-3 deg\nPassive, simple; central\nbody oriented; low cost\nJets\n0.1 deg\nConsumables required, fast;\nhigh cost\nMagnetic\n1 deg\nNear Earth; slow ; low\nweight, low cost\nReaction Wheels\n0.01 deg\nInternal torque; requires\nother momentum control;\nhigh power, cost\n\n33--axis stabilized, active control most common choice for precision\naxis stabilized, active control most common choice for precision spacecraft\nspacecraft\n\nACS Block Diagram (1)\nACS Block Diagram (1)\nFeedback Control Concept:\nFeedback Control Concept:\n+\n-\nerror\nsignal\ngain\nK\nSpacecraft\nControl\nActuators\nActual\nPointing\nDirection\nAttitude Measurement\nc\nT\nK\nÎ¸\n=\nââ\nCorrection\ntorque\n= gain x error\ndesired\nattitude\n\nTc\na\nForce or torque is proportional to deflection. This\nis the equation, which governs a simple linear\nor rotational \"spring\" system. If the spacecraft\nresponds \"quickly we can estimate the required\ngain and system bandwidth.\n\nGain and Bandwidth\nGain and Bandwidth\nAssume control saturation half-width Î¸sat at torque command Tsat, then\nsat\nsat\nT\nK\nÎ¸\nâ\nhence\nsat\nK\nI\nÎ¸\nÎ¸\n\n+\nâ\n\nRecall the oscillator frequency of a\nsimple linear, torsional spring:\n[rad/sec]\nK\nI\nÏ =\nI = moment\nof inertia\nThis natural frequency is approximately\nequal to the system bandwidth. Also,\n[Hz]\n=\nf\nf\nÏ\nÏ\nÏ\nÏ\nÏ\n=\nâ\n=\nIs approximately the system time constant .\nNote: we can choose any two of the set:\n,\n,\nsat\nÎ¸ Î¸\nÏ\n\nEXAMPLE:\n[rad]\nsat\nÎ¸\n-\n=\n10 [Nm]\nsat\nT\n=\n1000 [kgm ]\nI =\n1000 [Nm/rad]\nK\nâ´\n=\n1 [rad/sec]\nÏ =\n0.16 [Hz]\nf =\n6.3 [sec]\nÏ =\n\nFeedback Control Example\nFeedback Control Example\nPitch Control with a single reaction wheel\nRigid Body\nDynamics\nBODY\nw\next\nI\nT\nT\nI\nH\nÎ¸\nÏ\n=\n+\n=\n=\n\nÎ©\nWheel\nDynamics\n(\n)\nw\nJ\nT\nh\nÎ¸\nÎ©+\n= -\n=\n\nFeedback\nLaw, Choose\n\nw\np\nr\nT\nK\nK\nÎ¸\nÎ¸\n= -\n-\n\nPosition\nfeedback\nRate\nfeedback\nThen:\n(\n)\n(\n)\n(\n)\n(\n)\n/\n/\n\n/\n/\nr\np\nr\np\nK\nI\nK\nI\nLaplace Transform\ns\nK\nI s\nK\nI\ns\ns\nÎ¸\nÎ¸\nÎ¶Ï\nÏ\n+\n+\n=\nâ\n+\n+\n=\n+\n+\n=\n\nCharacteristic Equation\nr\n/ =K / 2\np\np\nK\nI\nK I\nÏ\nÎ¶\n=\nNat. frequency\ndamping\nStabilize\nRIGID\nBODY\nRe\nIm\n\nJet Control Example (1)\nJet Control Example (1)\nTc\nF\nF\n\nl\nl\nIntroduce control torque Tc via\nforce couple from jet thrust:\nc\nI\nT\nÎ¸ =\n\nOnly three possible values for Tc :\nc\nFl\nT\nFl\n\n=\n-\n\nCan stabilize (drive to zero)\nby feedback law:\nOn/Off\nControl\nonly\n(\n)\nsgn\nc\nT\nFl\nÎ¸\nÏÎ¸\n= -\nâ\n+\n\nprediction\nterm\nWhere\n( )\nsgn\nx\nx\nx\n=\n= time constant\n\n.\nSTART\n\"PHASE PLANE\"\nSWITCH\nLINE\n\"Chatter\" due to minimum\non-time of jets.\nProblem\nc\nT\nFl\n= -\nc\nT\nFl\n=\n\nJet Control Example (2)\nJet Control Example (2)\n\"Chatter\" leads to a\n\"limit cycle\", quickly\nwasting fuel\nSolution:\nEliminate \"Chatter\" by \"Dead Zone\" ; with Hysteresis:\n\n.\n\"PHASE PLANE\"\nc\nT\nFl\n= -\nc\nT\nFl\n=\nAt Switch Line:\nÎ¸\nÏÎ¸\n+\n=\n\nSL\nc\nÎ¸\nC\nT\nIs\ns\nÏ\n+\nÎµ\nÎ¸\nÏÎ¸\n=\n+\n\n+\n-\nE1 E2\nÎµ\n-\nResults in the following motion:\n\n.\nDEAD ZONE\n1Îµ\n-\nÎµ\n-\n1Îµ\nÎµ\nmax\nÎ¸\nmax\nÎ¸\n- Low Frequency Limit Cycle\n- Mostly Coasting\n- Low Fuel Usage\n- and bounded\n.\n\nACS Block Diagram (2)\nACS Block Diagram (2)\nSpacecraft\n+\n+\n+\ndynamic\ndisturbances\nsensor noise,\nmisalignment\ntarget\nestimate\ntrue\naccuracy + stability\nknowledge error\ncontrol\nerror\nController\nEstimator\nSensors\nIn the \"REAL WORLD\" things are somewhat more complicated:\nSpacecraft not a RIGID body, sensor , actuator & avionics dynamics\nDigital implementation: work in the z-domain\nTime delay (lag) introduced by digital controller\nA/D and D/A conversions take time and introduce errors: 8-bit, 12-bit,\n16-bit electronics, sensor noise present (e.g rate gyro @ DC)\nFiltering and estimation of attitude, never get q directly\n\nAttitude Determination\nAttitude Determination\nAttitude Determination (AD) is the process of of deriving estimates\nof spacecraft attitude from (sensor) measurement data. Exact\ndetermination is NOT POSSIBLE, always have some error.\nSingle Axis AD: Determine orientation of a single spacecraft axis\nin space (usually spin axis)\nThree Axis AD: Complete Orientation; single axis (Euler axis,\nwhen using Quaternions) plus rotation about that axis\nfiltered/corrected\nrate\nestimated\nquaternion\nWc comp rates\nSwitch1\nSwitch\nNOT\nLogical\nKalman\nFixed\nGain\nKALMAN\nConstant\ninertial\nupdate\nraw\ngyro rate\nExample:\nExample:\nAttitude\nAttitude\nEstimator\nEstimator\nfor NEXUS\nfor NEXUS\n\nSingle\nSingle--Axis Attitude Determination\nAxis Attitude Determination\nUtilizes sensors that yield an arc-\nlength measurement between\nsensor boresight and known\nreference point (e.g. sun, nadir)\nRequires at least two independent\nmeasurements and a scheme to\nchoose between the true and false\nsolution\nTotal lack of a priori estimate\nrequires three measurements\nCone angles only are measured, not\nfull 3-component vectors. The\nreference (e.g. sun, earth) vectors\nare known in the reference frame,\nbut only partially so in the body\nframe.\nX\nY\nZ\n^\n^\n^\ntrue\nsolution\na priori\nestimate\nfalse\nsolution\nEarth\nnadir\nsun\nLocus of\npossible S/C\nattitude from\nsun cone angle\nmeasurement\nwith error band\nLocus of\npossible attitudes\nfrom earth cone\nwith error band\n\nThree\nThree--Axis Attitude Determination\nAxis Attitude Determination\nNeed two vectors (u,v) measured in\nthe spacecraft frame and known in\nreference frame (e.g. star position\non the celestial sphere)\nGenerally there is redundant data\navailable; can extend the\ncalculations on this chart to include\na least-squares estimate for the\nattitude\nDo generally not need to know\nabsolute values\n(\n)\nË\n/\n/\nË\nË\nË\ni\nu u\nj\nu\nv\nu\nv\nk\ni\nj\n=\n=\nÃ\nÃ\n= Ã\nDefine:\nWant Attitude Matrix T:\nË\nË\nË\nË\nË\nË\nB\nB\nB\nR\nR\nR\nM\nN\ni\nj\nk\nT\ni\nj\nk\n\n=\nâ\n\nSo:\nT\nMN -\n=\nNote: N must be non-singular (= full rank)\n,\nu\nv\n\nEffects of Flexibility (Spinners)\nEffects of Flexibility (Spinners)\nThe previous solutions for Euler's equations were only valid for\na RIGID BODY. When flexibility exists, energy dissipation will occur.\nH\nIÏ\n=\nCONSTANT\nConservation of\nAngular Momentum\nROT\nT\nE\nI\nÏ\nÏ\n=\nDECREASING\nâ´\nSpin goes to maximum\nI and minimum\nCONCLUSION: Stable Spin is\nonly possible about the axis of\nmaximum inertia.\nClassical Example: EXPLORER 1\ninitial\nspin\naxis\nenergy dissipation\n\nControls/Structure Interaction\nControls/Structure Interaction\n\nSpacecraft\nSensor\nFlexibility\nCan't always neglect flexible modes (solar\narrays, sunshield)\nSensor on flexible structure, modes introduce\nphase loss\nFeedback signal \"corrupted\" by flexible\ndeflections; can become unstable\nIncreasingly more important as spacecraft\nbecome larger and pointing goals become tighter\n-2000\n-1500\n-1000\n-500\n-200\nNM axis 1 to NM axis 1\nGain\n[dB]\nPhase [deg]\nLoop Gain Function: Nichols Plot (NGST)\nLoop Gain Function: Nichols Plot (NGST)\nFlexible\nmodes\nStable\nStable\nno encirclements\nno encirclements\nof critical point\nof critical point\n\nOther System Considerations (1)\nOther System Considerations (1)\nNeed on-board COMPUTER\n-- Increasing need for on-board performance and autonomy\n-- Typical performance (somewhat outdated: early 1990's)\n-- 35 pounds, 15 Watts, 200K words, 100 Kflops/sec, CMOS\n-- Rapidly expanding technology in real-time space-based computing\n-- Nowadays get smaller computers, rad-hard, more MIPS\n-- Software development and testing, e.g. SIMULINK Real Time Workshop,\ncompilation from development environment MATLAB C, C++ to target\nprocessor is getting easier every year. Increased attention on software.\nGround Processing\n-- Typical ground tasks: Data Formatting, control functions, data analysis\n-- Don't neglect; can be a large program element (operations)\nTesting\n-- Design must be such that it can be tested\n-- Several levels of tests: (1) benchtop/component level, (2) environmental\ntesting (vibration,thermal, vacuum), (3) ACS tests: air bearing, hybrid\nsimulation with part hardware, part simulated\n\nOther System Considerations (2)\nOther System Considerations (2)\nManeuvers\n-- Typically: Attitude and Position Hold,Tracking/Slewing, SAFE mode\n-- Initial Acquisition maneuvers frequently required\n-- Impacts control logic, operations, software\n-- Sometimes constrains system design\n-- Maneuver design must consider other systems, I.e.: solar arrays pointed\ntowards sun, radiators pointed toward space, antennas toward Earth\nAttitude/Translation Coupling\n-- vv from thrusters can affect attitude\n-- (2) Attitude thrusters can perturb the orbit\nSimulation\n-- Numerical integration of dynamic equations of motion\n-- Very useful for predicting and verifying attitude performance\n-- Can also be used as \"surrogate\" data generator\n-- \"Hybrid\" simulation: use some or all of actual hardware, digitally simulate\nthe spacecraft dynamics (plant)\n-- can be expensive, but save money later in the program\nCM\nF\nl\nT\nT\n(1)\n(2)\nF1\nF1 = F2\nF\nH/W\nA/D\nD/A\nsim\n\nFuture Trends in ACS Design\nFuture Trends in ACS Design\nLower Cost\n-- Standardized Spacecraft, Modularity\n-- Smaller spacecraft, smaller Inertias\n-- Technological progress: laser gyros, MEMS, magnetic wheel bearings\n-- Greater on-board autonomy\n-- Simpler spacecraft design\nIntegration of GPS (LEO)\n-- Allows spacecraft to perform on-board navigation; functions independently\nfrom ground station control\n-- Potential use for attitude sensing (large spacecraft only)\nVery large, evolving systems\n-- Space station ACS requirements change with each added module/phase\n-- Large spacecraft up to 1km under study (e.g. TPF Able \"kilotruss\")\n-- Attitude control increasingly dominated by controls/structure interaction\n-- Spacecraft shape sensing/distributed sensors and actuators\n\n-1.5\n-1\n-0.5\n0.5\n1.5\n-1.5\n-1 -0.5\n0.5\n1.5\n-1\n-0.5\n0.5\ny/Ro(velocity vector)\nCircular Paraboloid\nEllipse\nOptimal Focus (p/Ro=2.2076)\nProjected Circle\nz/Ro (Cross axis)\nHyperbola (Foci)\nx/Ro (Zenith Nadir)\nAdvanced ACS concepts\nAdvanced ACS concepts\n\nNo âV required for collector\nspacecraft\n\nOnly need âV to hold combiner\nspacecraft at paraboloid's focus\nVisible Earth Imager using\nVisible Earth Imager using\na Distributed Satellite System\na Distributed Satellite System\n- Exploit natural orbital dynamics to\nsynthesize sparse aperture arrays\nusing formation flying\n- Hill's equations exhibit closed \"free-\norbit ellipse\" solutions\nx\ny\nz\nx\n2yn\n3n x\na\ny\n2xn\n\na\nz\nn z\na\n-\n-\n=\n+\n=\n+\n=\n\nFormation Flying in Space\nFormation Flying in Space\nTPF\n\nACS Model of NGST (large, flexible S/C)\nACS Model of NGST (large, flexible S/C)\ngyro\nWt true rate\nWheels\nStructural Filters\nQt true attitude\nQt prop\nPID\nControllers\nK\nEstimated\nInertia\nTensor\nKF Flag\nAttitude\nDetermination\nK\nACS Rate\nMatrix\nCommand\nRate\nCommand\nPosition\n72 DOF\n6x1\nForces &\nTorques\nPID bandwidth is 0.025 Hz\n3rd order LP elliptic filters for\nflexible mode gain suppression\nKalman Filter blends 10 Hz IRU and\n2 Hz ST data to provide optimal attitude\nestimate; option exists to disable the KF\nand inject white noise, with amplitude given\nby steady-state KF covariance into the\ncontroller position channel\nWheel model includes non-linearities\nand imbalance disturbances\nFEM\nFEM\n\"Open\" telescope (no\nexternal baffling) OTA\nallows passive\ncooling to ~50K\nDeployable\nsecondary\nMirror (SM)\nBeryllium\nPrimary mirror (PM)\nSpacecraft support module\nSSM (attitude control,\ncommunications, power,\ndata handling)\narm side\nScience\nInstruments\n(ISIM)\nLarge (200m2) deployable\nsunshield protects from sun,\nearth and moon IR radiation(ISS)\nIsolation truss\ncold side\nNGST\nNGST\nACS\nACS\nDesign\nDesign\n\nAttitude Jitter and Image Stability\nAttitude Jitter and Image Stability\nGuider\nCamera\n*\n*\nroll about boresight produces\nimage rotation (roll axis shown\nto be the camera boresight)\n\"pure\" LOS error from\nuncompensated high-frequency\ndisturbances plus guider NEA\ntotal LOS error at target\nis the RSS of these terms\nFSM rotation while guiding on a\nstar at one field point produces\nimage smear at all other field points\nTarget\nGuide Star\nImportant to assess impact of attitude jitter (\"stability\") on image\nquality. Can compensate with fine pointing system. Use a\nguider camera as sensor and a 2-axis FSM as actuator.\nSource: G. Mosier\nNASA GSFC\nRule of thumb:\nRule of thumb:\nPointing Jitter\nPointing Jitter\nRMS LOS < FWHM/10\nRMS LOS < FWHM/10\nE.g. HST: RMS LOS = 0.007 arc-seconds\n\nReferences\nReferences\nJames French: AIAA Short Course: \"Spacecraft Systems Design and\nEngineering\", Washington D.C.,1995\nProf. Walter Hollister: 16.851 \"Satellite Engineering\" Course Notes,\nFall 1997\nJames R. Wertz and Wiley J. Larson: \"Space Mission Analysis and\nDesign\", Second Edition, Space Technology Series, Space Technology\nLibrary, Microcosm Inc, Kluwer Academic Publishers"
    },
    {
      "category": "Resource",
      "title": "l10_emformflight.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/7bd38a14f1fd0c42340a97966141afc6_l10_emformflight.pdf",
      "content": "-\nMassachusetts Institute of\nTechnology\n-\nSpace Systems Laboratory\n-\nLockheed Martin Corporation\n-\nAdvanced Technology Center\nElectromagnetic Formation Flight\nElectromagnetic Formation Flight\nNRO DII Final Review\nFriday, August 29, 2003\nNational Reconnaissance Office\nHeadquarters\nChantilly, VA\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\nMotivation\nMotivation\n-\nTraditional propulsion uses propellant as a reaction mass\n-\nAdvantages\n- Ability to move center of mass of spacecraft\n(Momentum conserved when propellant is included)\n- Independent (and complete) control of each spacecraft\n-\nDisadvantages\n- Propellant is a limited resource\n- Momentum conservation requires that the necessary propellant\nmass increase exponentially with the velocity increment (âV)\n- Propellant can be a contaminant to precision optics\n\nDII EMFF Final Review\nAug. 29, 2003\nQuestion I:\nQuestion I:\n- Is there an alternative to using propellant?\n- Single spacecraft:\n- Yes, If an external field exists to conserve momentum\n- Otherwise, not that we know of...\n- Multiple spacecraft\n- Yes, again if an external field exists\n- OR, if each spacecraft produces a field that the others can\nreact against\n- Problem: Momentum conservation prohibits control of the\nmotion of the center of mass of the cluster, since only\ninternal forces are present\n\nDII EMFF Final Review\nAug. 29, 2003\nQuestion II:\nQuestion II:\n-\nAre there missions where the absolute position of the center of mass of\na cluster of spacecraft does not require control?\n-\nYes! In fact most of the ones we can think of...\n- Image construction\n- u-v filling does not depend on absolute position\n- Earth coverage\n- As with single spacecraft, Gravity moves the mass center of the\ncluster as a whole, except for perturbations...\n- Disturbance (perturbation) rejection\n- The effort to control perturbations affecting absolute cluster\nmotion (such as J2) is much greater than that for relative motion\n- Only disturbances affecting the relative positions (such as\ndifferential J2) NEED controlling to keep a cluster together\n- Docking\n- Docking is clearly a relative position enabled maneuver\n\nDII EMFF Final Review\nAug. 29, 2003\nExample: Image Construction\nExample: Image Construction\n-\nImage quality is determined by the point spread function of aperture\nconfiguration\n(\n)\n)\n(\nexp\nsin\nsin\n)\ncos\n1(\n,\nâ¥\nâ¥\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ¢\nâ¢\nâ£\nâ¡\nâ\nââ \nâ\nââ\nâ\nÏ\n+\nÏ\nÎ»\nÏ\n-\nâ\nâ\nâ\nâ\nâ \nâ\nâ\nâ\nâ\nâ\nâ\nâ\nÎ»\nÎ¸\nÏ\nââ \nâ\nââ\nâ\nÎ»\nÎ¸\nÏ\nââ \nâ\nââ\nâ\nÎ»\nÎ¸\n+\nÏ\n=\nÏ\nÏ\n=\nN\nn\nn\nj\nn\ni\nj\ni\ny\nx\ni\nD\nD\nJ\nD\nI\n-\nThe geometry dependence can be expanded into terms which only depend on\nrelative position\nAperture dependence\nGeometry dependence\nI Ïi\n( ) = IAp Ïi\n( ) N + cos 2Ï\nÎ» Ïi(x1 -x2)\nâ\nâ\nâ\nâ  + cos 2Ï\nÎ» Ïi(x1 -x3)\nâ\nâ\nâ\nâ  + ...\nâ¡\nâ£ â¢\nâ¤\nâ¦ â¥\n\nDII EMFF Final Review\nAug. 29, 2003\nComparison\nComparison -- Golay\nGolay Configurations\nConfigurations\nPSFs for the Golay configurations shown here will not change if\nthe apertures are shifted in any direction\n\nDII EMFF Final Review\nAug. 29, 2003\nQuestion III:\nQuestion III:\n-\nWhat forces must be transmitted between satellites to allow for all relative\ndegrees of freedom to be controlled?\n- In 2-D, N spacecraft have 3N DOFs, but we are only interested in\ncontrolling (and are able to control) 3N-2 (no translation of the center of\nmass)\n- For 2 spacecraft, that's a total of 4:\n-\nAll except case (4) can be generated using axial forces (such as electrostatic\nmonopoles) and torques provided by reaction wheels\n-\nComplete instantaneous control requires a transverse force, which can be\nprovided using either electrostatic or electromagnetic dipoles\n\nDII EMFF Final Review\nAug. 29, 2003\nWhat is it NOT good for?\nWhat is it NOT good for?\n- Orbit Raising\n- Bulk Plane Changes\n- De-Orbit\n- All these require rotating the system angular\nmomentum vector or changing the energy of the orbit\n- None of these is possible using only internal forces\n\nDII EMFF Final Review\nAug. 29, 2003\nForces and Torques: Conceptual\nForces and Torques: Conceptual\nN\nS\nS\nN\nN\nS\nS\nN\nB\nA\nA\nB\n- In the Far Field, the dipole field structure for electrostatic and\nelectromagnetic dipoles are the same\n- The electrostatic analogy is useful in getting a physical feel for\nhow the transverse force is applied\n- Explanation ...\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Vehicle Conceptual Model\nEMFF Vehicle Conceptual Model\n-\nIn the Far Field, Dipoles add as vectors\n-\nEach vehicle will have 3 orthogonal\nelectromagnetic coils\n- These will act as dipole vector\ncomponents, and allow the magnetic\ndipole to be created in any direction\n-\nSteering the dipoles electronically will\ndecouple them from the spacecraft\nrotational dynamics\n-\nA reaction wheel assembly with 3\northogonal wheels provides counter\ntorques to maintain attitude\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n- Governing Equations\n- Trajectory Mechanics\n- Stability and Control\n-\nMission Applicability\n- Sparse Arrays\n- Filled Apertures\n- Other Proximity Operations\n-\nMission Analyses\n- Sparse Arrays\n- Filled Apertures\n- Other Proximity Operations\n-\nMIT EMFFORCE Testbed\n- Design\n- Calibration\n- Movie\n-\nSpace Hardware Design\nIssues\n- Thermal Control\n- Power System Design\n- High B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\nMagnetic Dipole Approximation\nMagnetic Dipole Approximation\n- The interaction force between two arbitrary magnetic circuits is given by the\nLaw of Biot and Savart\nI1\nI2\nO\n- In general, this is difficult to solve, except for cases\nof special symmetry\n- Instead, at distances far from one of the circuits, the\nmagnetic field can be approximated as a dipole\n[\n]\n(\n)\nË\nË Ë\nË\n\n3(\n)\no\nr\nB\nr\nr r\nr\nr\nr\nÎ¼\nÎ¼\nÎ¼\nÎ¼\nÎ¼\nÎ¼\nÎ¼\nÏ\nÏ\nâ\nâ¡\nâ¤\nâ\nâ\n=\n-\n=\nâ\n-\nâ\nâ\nâ¢\nâ¥\nâ£\nâ¦\nâ\nâ \nG\nG\nG\nG\nG\nwhere its dipole strength Î¼1 is given by the product of the total current around\nthe loop (Amp-turns) and the area enclosed\n\nDII EMFF Final Review\nAug. 29, 2003\nDipole\nDipole--Dipole Interaction\nDipole Interaction\n-\nJust as an idealized electric charge in an external electric field can be assigned\na scalar potential, so can an idealized magnetic dipole in a static external\nmagnetic field, by taking the inner product of the two\n-\nContinuing the analogy, the force on the dipole is simply found by taking the\nnegative potential gradient with respect to position coordinates\n-\nIn a similar manner, taking the gradient with respect to angle will give the torque\nexperienced by the dipole\n-\nSince the Force results from taking a gradient with respect to position, and the\nTorque does not, the scaling laws for the two are given as\nU\nB\nÎ¼\n= -\nâ\nG\nG\n(\n)\nr\nr\nr\nF\nU\nB\nB\nÎ¼\nÎ¼\n= -â\n= â\nâ\n=\nââ\nG\nG\nG\nG\nT\nU\nB\nÎ¸\nÎ¼\n= -â\n=\nÃ\nG\nG\n~ 2\nF\ns\nÎ¼ Î¼\nÎ¼\nÏ\n~ 4\nT\ns\nÎ¼ Î¼\nÎ¼\nÏ\n\nDII EMFF Final Review\nAug. 29, 2003\nHow Far Apart Will They Work?\nHow Far Apart Will They Work?\n-\nWriting the force in terms of the coil radius (R), separation distance (s) and\ntotal loop current (IT), the force scales as\n-\nWe see that for a given coil current, the system scales 'photographically',\nmeaning that two systems with the same loop current that are simply scaled\nversions of one another will have the same force\n-\nFor design, it is of interest to re-write in terms of coil mass and radius, and\nphysical constants:\n-\nThe current state-of-the-art HTS wire has a value of\nAnd the product of coil mass and radius becomes the design parameter.\n~ 2\nT\nR\nF\nI\ns\nÏ Î¼\nâ\nâ\nâ\nâ\nâ\nâ \n~\n(10 )\n(\n)\nC\nC\nC\nC\nC\nM I\nI\nR\nF\nM R\nR\ns\ns\nÏ Î¼\nÏ\nÏ\n-\nâ\nâ\nâ\nââ\nâ\n=\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ \nâ\nâ \nâ\nâ \n14,444\n/\nCI\nA\nm kg\nÏ\nâ\nâ=\n-\nâ\nâ\nâ\nâ \n\nDII EMFF Final Review\nAug. 29, 2003\nMore of 'How Far apart will they work'?\nMore of 'How Far apart will they work'?\nForce vs. Separation Distance\n1.0E-04\n1.0E-03\n1.0E-02\n1.0E-01\n1.0E+00\n1.0E+01\n1.0E+02\n1.0E+03\nSeparation (m)\nForce (N)\nMR = 0.1\nMR = 0.3\nMR = 1\nMR = 3\nMR = 10\nMR = 30\nMR = 100\nMR = 300\nkg-m\nEMFORCE Testbed\nForce vs. Separation Distance\n1.0E-04\n1.0E-03\n1.0E-02\n1.0E-01\n1.0E+00\n1.0E+01\n1.0E+02\n1.0E+03\nSeparation (m)\nForce (N)\nMR = 0.1\nMR = 0.3\nMR = 1\nMR = 3\nMR = 10\nMR = 30\nMR = 100\nMR = 300\nkg-m\nWith further simplification:\n~ 31.2 (\n)\nC\nC\nF\nM R\ns\nThe graph to the right shows a family of\ncurves for various products of MC and RC\n-7\nC\nI\nm\n(10 )\n= 31.2\nkg-s\nÏ\nâ\nâ\nâ\nâ\nâ\nâ \n-7\nC\nI\nm\n(10 )\n= 312\nkg-s\nÏ\nâ\nâ\nâ\nâ\nâ\nâ \nExample:\n- 300 kg satellite, 2 m across, needs\n10 mN of thrust, want MC < 30 kg\n- EMFF effective up to 40 meters\n\nDII EMFF Final Review\nAug. 29, 2003\nFar Field/Near Field Comparison\nFar Field/Near Field Comparison\n-\nThe far field model does not work in the\nnear field\n-\n(Separation/Distance)>10 to be within 10%\n- Some configurations are more accurate\n-\nA better model is needed for near-field\nmotion since most mission applications will\nwork in or near the edge of the near field\n- For TPF, (s/d) ~ 3 - 6\nÎ² =10o\nÎ² =30o\nÎ² =45o\nÎ² =60o\nÎ² =90o\nÎ² =15o\nÎ² =30o\nÎ² =45o\nÎ² =60o\nÎ² =90o\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\n22--D Dynamics of Spin\nD Dynamics of Spin--Up\nUp\n-\nSpin-up/spin-down\n- Spin-up from \"static\" baseline to rotating cluster for u-v plane filling\n- Spin-down to baseline that can be reoriented to a new target axis\n-\nElectromagnets exert forces/torques on each other\n- Equal and opposite \"shearing\" forces\n- Torques in the same direction\n-\nReaction wheels (RW) are used to counteract EM torques\n- Initial torque caused by perpendicular-dipole orientation\n- Reaction wheels counter-torque to command EM orientation\n- Angular momentum conserved by shearing of the system\nEM Torque\nRW Torque\nN\nS\nS\nN\n\nDII EMFF Final Review\nAug. 29, 2003\n22--Satellite Spin\nSatellite Spin--up\nup\nx\ncentripical\nF\nm a\nm\nr\nÏ\n=\n=\ny\nF\nm\nr\nÏ\nÎ²\n=\n=\n\n(2cos\ncos\nsin\nsin\n)\n(cos\nsin\nsin\ncos\n)\n(cos\nsin\n2sin\ncos\n)\nA\nB\nx\nA\nB\ny\nA\nB\nz\nF\nd\nF\nd\nT\nd\nÎ¼ Î¼ Î¼\nÎ±\nÎ²\nÎ±\nÎ²\nÏ\nÎ¼ Î¼ Î¼\nÎ±\nÎ²\nÎ±\nÎ²\nÏ\nÎ¼ Î¼ Î¼\nÎ±\nÎ²\nÎ±\nÎ²\nÏ\n=\n-\n= -\n+\n= -\n+\nd\nN\nS\nÎ±\nN\nS\nÎ²\nËx\nËy\ncos\nA\nB\nm r\nÏ\nÏ\nÏ\nÎ¼ Î¼\nÎ¼\nÏ\nÎ±\nÏ\nÏ\n-\n+\n=\nâ\nâ\n= -\nâ\nâ\n+\nâ\nâ \n\n-\n6 DOF (4 Translational, 2 Rotational)\n-\n4 DOF (2 Translational, 2 Rotational)\n-\n2 Reaction wheels control 2 Rotational\nDOF\n-\n2 dipole strengths and 2 dipole angles\nto control 2 translational degrees of\nfreedom (relative motion)\n-\n2 extra degrees of freedom.\n-\nAllows for many different spin-up\nconfigurations\n-\nAllows for different torque\ndistribution\n-\nBecome more complex with more\nsatellites\n-\nMust solve non-linear system of\nequations\n\nDII EMFF Final Review\nAug. 29, 2003\nTorque Analysis\nTorque Analysis\nS\nN\nS\nN\nA\nB\ns\nMagnet\nA\nMagnet\nB\n2 sin\ncos\n3cos(2 )\nÎ²\nÎ±\nÎ²\n-â\nâ\n= Â±\nÂ±\nâ\nâ\nâ\nâ\n+\nâ\nâ \n-\nShear forces are produced when the dipole axes\nare not aligned.\n-\nTorques are also produced when the shear\nforces are produced (Cosv. of angular mom.)\n-\nThe torques on each dipole is not usually equal\n- For the figure to the right\n-\nEven for pure shear forces, (Fx= 0) one can\narbitrarily pick one of the dipole angles.\nA\nB\nÏ\nÏ\n=\n\nDII EMFF Final Review\nAug. 29, 2003\nSatellite Formation Spin\nSatellite Formation Spin--Up\nUp\n-\nSpin-up of complex formations can be achieved by utilizing magnetic dipoles.\n-\nThere are a number of possible combinations of magnet strengths and dipole\nconfigurations to achieve a given maneuver.\n-\nThese different configurations cause different distribution of angular\nmomentum storage.\nTime\nMagentic\nStrengths\nOuter\nInner\nCenter\nTime\nAcc. Ang. Mom.\nCenter\nOuter\nInner\nMagnetic Strength (A m2)\nAngular Momentum (N m s)\n600 kg s/c, 75m diameter formation, 0.5 rev/hr\n\nDII EMFF Final Review\nAug. 29, 2003\nSteady State Rotations\nSteady State Rotations\n-\nSpin-up of formations\nare not restricted to\nlinear arrays\n-\nConfigurations of any\nshape can be spun-up\n-\nShown here is a SPECS\nconfiguration of 3\nsatellites in an\nequilateral triangle.\nInitial position\nSteady state position\n\nDII EMFF Final Review\nAug. 29, 2003\nSolving the EOM\nSolving the EOM\n-\nFor a given instantaneous force profile, there are (3N-3) constraints (EOM),\nand 3N variables (Dipole strengths).\n- This allows us to arbitrarily specify one vehicle's dipole\n- Allows the user the freedom to control other aspects of the formation\nespecially angular momentum distribution\n- For a specific choice of dipole, there are multiple solutions due to the\nnon-linearity of the constraints\n-\nTo determine the required magnetic dipole strengths\n- Pick the magnetic dipole strengths for one vehicle\n- Set the first equation equal to the desired instantaneous force and solve\nfor the remaining magnetic dipole strengths.\n- There will be multiple solutions. Pick the solution that is most favorable\n\nDII EMFF Final Review\nAug. 29, 2003\nMultiple Solutions\nMultiple Solutions\n\nDII EMFF Final Review\nAug. 29, 2003\n3D Formations\n3D Formations\n-\nWe also have the ability\nto solve for complex 3D\nmotion of satellites.\n\nDII EMFF Final Review\nAug. 29, 2003\n3D Formations\n3D Formations\n-\nHere is another example of a 3D configuration\n\nDII EMFF Final Review\nAug. 29, 2003\nChoosing the Free Dipole\nChoosing the Free Dipole\n-\nChoose the free dipole such that a cost function is optimized\n- Angular momentum distribution\n- Dipole strength distribution\n- Currently using Mathematica's global minimization routine\n- Simulated Annealing\n- Genetic algorithms (Differential Evolution)\n- Nelder-Mead\n- Random Search\n-\nChoose the free dipole based on a specific algorithm\n- Aligning with the Earth's magnetic field\n- Favorable angular momentum distribution\n\nDII EMFF Final Review\nAug. 29, 2003\nAngular Momentum Management\nAngular Momentum Management\n-\nBeing able to control the angular momentum gained by the\nindividual satellites is crucial to the success of EMFF\n-\nBecause the torques and forces generated by EMFF are\ninternal, there is no way to internally remove excess angular\nmomentum from the system\n- Angular momentum can be transferred from one spacecraft\nto another\n-\nSince EMFF systems do not employ thrusters, other innovative\nmethods must be used to remove the excess angular\nmomentum\n- The formation must interact with its environment\n- Using the Earth's magnetic field\n- Using differential J2 forces\n\nDII EMFF Final Review\nAug. 29, 2003\nEarth's Magnetic Field\nEarth's Magnetic Field\n-\nMany formation flight missions will operate in LEO.\n-\nThe electromagnets will interact\nwith the Earth's magnetic field\nproducing unwanted forces and\ntorques on the formation\n-\nThe Earth's magnetic field can be\napproximated by a large bar\nmagnet with a magnetic dipole\nstrength of 8*1022\n-\n(EMFF Testbed ~ 2*104)\n\nDII EMFF Final Review\nAug. 29, 2003\nEarth's Magnetic Field\nEarth's Magnetic Field\n- The Earth's Magnetic field produces an insignificant\ndisturbance force, but a very significant disturbance\ntorque, due to the scaling of force and torque\n~3*104-3*10-2 Nm\n~2*101 Nm\nT ~ Î¼0 (Î¼1 Î¼2) / r3\n~1*104-2*10-3 N\n~1*10-5 N\nF ~ Î¼0 (Î¼1 Î¼2) / r4\n2-100 m\n> 6,378,000 m\nd\n5*105 Am2\n8*1022 Am2\nÎ¼\nAnother Sat.\nEarth\n\nDII EMFF Final Review\nAug. 29, 2003\nPossible Solutions for Dealing with the\nPossible Solutions for Dealing with the\nEarth's Magnetic Field\nEarth's Magnetic Field\n-\nIgnore the disturbance forces from the Earth's magnetic field on the\nformation as a whole\n- This frees up the arbitrary dipole, but disturbance forces are still\naccounted for.\n-\nPeriodically alternate the magnetic dipole directions, so that the\naccumulated torques average to zero\n-\nTurn off all the satellites but one, and use the electromagnets like\ntorque rods to dump the angular momentum\n-\nChoose the arbitrary dipole wisely so that the total acquired angular\nmomentum on the formation is zero\n-\nChoose the arbitrary dipole wisely so that you can use the Earth as\na dump for angular momentum.\n\nDII EMFF Final Review\nAug. 29, 2003\nThe Earth as a Momentum Dump\nThe Earth as a Momentum Dump\n- Use the Earth's dipole to our advantage by transferring\nangular momentum to the Earth\n- Already done for single spacecraft using torque rods\n- Can be expanded for use with satellite formations\n- Strategy:\n- Pick a satellite to dump momentum\n- Turn up its dipole strength to maximum\n- Align the dipole to optimize momentum exchange\n- Solve the remaining dipoles for the required\ninstantaneous forces\n- Once the required momentum has been dumped, pick\nanother satellite that needs to dump momentum\n\nDII EMFF Final Review\nAug. 29, 2003\nSimulation Results\nSimulation Results\n-\nSatellites are undergoing a specific forcing profile in the presence of\nthe Earth's magnetic field\n- This way the satellites that are not dumping momentum are still being\ndisturbed by the Earth's magnetic field.\n-\nEach satellite starts off with excess angular momentum\n-\nThe satellite with the most excess momentum is selected for angular\nmomentum dumping\n-\nThe formation is then maintained to have H<100\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Simulator\nEMFF Simulator\n-\nCurrently designing a software simulator to test different angular\nmomentum control schemes\n-\nBuilt in Mathematica, it has the ability to provide MatLab style outputs\n-\nIt will have the ability to test\ncontrol algorithms in the\npresence of the Earth's\nmagnetic field or under the\ninfluence of the J2 disturbance\nforce.\n-\nCurrently being used to verify\nangular momentum dumping\nalgorithms in the presence of\nthe Earth's magnetic field.\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nMotivation:\n- Dynamic analyses must be performed to verify the stability and\ncontrollability of EMFF systems.\n-\nObjective:\n- Derive the governing equations of motion for an EMFF system:\n- Analyze the relative displacements and rotations of the bodies.\n- Include the gyroscopic stiffening effect of spinning RWs on the\nvehicles.\n- Linearize the equations, and investigate the stability and controllability of\nthe system.\n- Design a closed-loop linear controller for the system.\n- Perform a closed-loop time-simulation of the system to assess the model\ndynamics and control performance.\n- Experimentally validate the dynamics and control on a simplified\nhardware system.\nObjective :\nObjective : Multi\nMulti--Vehicle EMFF Analysis\nVehicle EMFF Analysis\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nTwo-spacecraft array\n-\nEach has three orthogonal electromagnets\n-\nEM pointing toward other spacecraft\ncarries bulk of centripetal load; others\nassist in disturbance rejection\n-\nEach has three orthogonal\nreaction wheels, used for system\nangular momentum storage and\nas attitude actuators\n-\nState vector:\nx\nr Ï Î¨ Î±1 Î±2 Î±3 Î²1 Î²2 Î²3 rÂ· ÏÂ· Î¨\nÂ·\nÎ±Â·\n1 Î±Â·\n2 Î±Â·\n3 Î²Â·\n1 Î²Â·\n2 Î²Â·\nT\n=\n33--D Dynamics of 2\nD Dynamics of 2--S/C EMFF Cluster\nS/C EMFF Cluster\nr\nZ\nY\nÏ\nÏ\neËr\neËÏ\neË Ï\neË x\neËy\neËz\nX\nSpacecraft A\nSpacecraft B\nr\neË r\neË\nÏ\neË Ï\nSpacecraft A\nZ\nY\nX\nPiece of an imaginary\nsphere centered at\nthe origin of the\nX, Y, Z frame\n\nDII EMFF Final Review\nAug. 29, 2003\n33--D Nonlinear Translational Equations\nD Nonlinear Translational Equations\n-\nTranslational equations of motion for spacecraft A:\n-\nIn er, eÏ, eÏ components:\n-\nAnd the forcing terms are of the form:\n(\n)\n/\n/\n/\n/\n/\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nF\nF\nF\nF\nm\nF\nm\nr\nG\nG\nG\nG\nG\nG\n+\n+\n+\n=\n=\n=\nrG\nrÂ·Â·\nrÏÂ· 2\n-\nrÏÂ· 2\nÏ\ncos\n-\n2rÂ·ÏÂ·\nÏ\ncos\nrÏÂ·Â·\nÏ\ncos\n2rÏÂ· ÏÂ·\nÏ\nsin\n-\n+\n2rÂ·ÏÂ·\nrÏÂ·Â·\nrÏÂ· 2\nÏ\nsin\nÏ\ncos\n+\n+\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\n3Î¼0Î¼AÎ¼B\n64Ïmr4\n-----------------------\nsÎ±1cÎ±2sÎ²1cÎ²2\n2cÎ±1cÎ±2cÎ²1cÎ²2\nsÎ±2sÎ²2\n+\n-\ncÎ±2cÎ²2 sÎ±1cÎ²1\nsÎ²1cÎ±1\n+\n(\n)\ncÎ²1\n-\ncÎ²2sÎ±2\ncÎ±1cÎ±2sÎ²2\n-\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\nm\nF\nB\nA\n/\nG\n\nDII EMFF Final Review\nAug. 29, 2003\n33--D Nonlinear Rotational Equations\nD Nonlinear Rotational Equations\n-\nRotational equations of motion for spacecraft A:\n-\nTorques:\nÎ¸Â·\nx\nÎ¸Â·\ny\nÎ¸Â·\nz\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\nÎ±Â·\nÎ±Â·\n1sÎ±2\n-\nÎ±Â·\n2cÎ±3\nÎ±Â·\n1cÎ±2sÎ±3\n+\nÎ±Â·\n1cÎ±2cÎ±3\nÎ±Â·\n2sÎ±3\n-\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\nÎ¸Â·Â·\nx\nÎ¸Â·Â·\ny\nÎ¸Â·Â·\nz\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\nÎ±Â·Â·\nÎ±Â·Â·\n1sÎ±2\n-\nÎ±Â·\n1Î±Â·\n2cÎ±2\n-\nÎ±Â·Â·\n2cÎ±3\nÎ±Â·\n2Î±Â·\n3sÎ±3\nÎ±Â·Â·\n1cÎ±2sÎ±3\nÎ±Â·\n1Î±Â·\n2sÎ±2sÎ±3\n-\nÎ±Â·\n1Î±Â·\n3cÎ±2cÎ±3\n+\n+\n-\nÎ±Â·Â·\n1cÎ±2cÎ±3\nÎ±Â·\n1Î±Â·\n2sÎ±2cÎ±3\n-\nÎ±Â·\n1Î±Â·\n3cÎ±2sÎ±3\n-\nÎ±Â·Â·\n2sÎ±3\n-\nÎ±Â·\n2Î±Â·\n3cÎ±3\n-\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\nIrr s\n,\nIrr w\n,\n+\nIrr s\n,\nIrr w\n,\n+\nIzz s\n,\nÎ¸Â·Â·\nx\nÎ¸Â·Â·\ny\nÎ¸Â·Â·\nz\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\nÎ©z w\n, Izz w\n,\nÎ©z w\n, Izz w\n,\n-\nÎ¸Â·\nx\nÎ¸Â·\ny\nÎ¸Â·\nz\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\n+\n=\n0 cÎ±3 sÎ±3\nsÎ±3\n-\ncÎ±3\ncÎ±2 0\nsÎ±2\n-\nsÎ±2 0 cÎ±2\ncÎ±1 sÎ±1 0\nsÎ±1\n-\ncÎ±1 0\nTr\nTÏ\nTÏ\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\n/\n/\n/\n/\n/\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nT\nT\nT\nT\nT\nG\nG\nG\nG\nG\n+\n+\n+\n=\nTr\nTÏ\nTÏ\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\nA\nÎ¼0\n-\nÎ¼AÎ¼B\n32Ïr3\n----------------------\nsÎ±2sÎ²1cÎ²2\nsÎ±1cÎ±2sÎ²2\n-\ncÎ±1cÎ±2sÎ²2\n2sÎ±2cÎ²1cÎ²2\n+\ncÎ±1cÎ±2sÎ²1cÎ²2\n2sÎ±1cÎ±2cÎ²1cÎ²2\n+\nâ©\nâ­\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\n/\nB\nA\n\nDII EMFF Final Review\nAug. 29, 2003\nLinearization: Nominal Point\nLinearization: Nominal Point\n-\nConservation of Angular Momentum:\n-\nNominal State Trajectory:\nIzz w\n,\nÎ©z w\n,\nÏÂ·\n+\n(\n)\nIzz s\n,\nmr0\n+\n(\n)ÏÂ·\n+\n=\nIzz w\n, Î©z w\n,\nmr0\n2Ï0\nÂ·\n+\n=â\nx0\nr0 Ï0 Î¨0 Î±1 0\n,\nÎ±2 0\n,\nÎ±3 0\n,\nÎ²1 0\n,\nÎ²2 0\n,\nÎ²3 0\n,\nrÂ·\n0 ÏÂ·\n0 Î¨Â·\n0 Î±Â·\n1 0\n,\nÎ±Â·\n2 0\n,\nÎ±Â·\n3 0\n,\nÎ²Â·\n1 0\n,\nÎ²Â·\n2 0\n,\nÎ²Â·\n3 0\n,\nT\n=\nr0 Ï0 t( ) 0 0 0 0 0 0 0 0 ÏÂ·\n0 0 0 0 0 0 0 0\nT\n=\nâ\n\nDII EMFF Final Review\nAug. 29, 2003\n1 0 0\n0 r0 0\n0 0 r0\n0 0 0 Izz s\n,\n0 0 0\nIrr s\n,\nIrr w\n,\n+\n0 0 0\nIrr s\n,\nIrr w\n,\n+\n0 0 0\nIzz s\n,\n0 0 0\nIrr s\n,\nIrr w\n,\n+\n0 0 0\nIrr s\n,\nIrr w\n,\n+\nârÂ·Â·\nâÏÂ·Â·\nâÏÂ·Â·\nâÎ±Â·Â· 1\nâÎ±Â·Â· 2\nâÎ±Â·Â· 3\nâÎ²Â·Â·\nâÎ²Â·Â·\nâÎ²Â·Â·\nâ©\nâ­\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ§\nâ«\n2r0ÏÂ·\n-\n0 0\n2ÏÂ·\n0 0\n0 0\n0 0\n0 0\nmr0\n2ÏÂ·\n0 0\n0 0\nm\n-\nr0\n2ÏÂ·\n0 0\n0 0\nmr0\n2ÏÂ·\n0 0\nm\n-\nr0\n2ÏÂ·\nârÂ·\nâÏÂ·\nâÏÂ·\nâÎ±Â· 1\nâÎ±Â· 2\nâÎ±Â· 3\nâÎ²Â·\nâÎ²Â·\nâÎ²Â·\nâ©\nâ­\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ§\nâ«\n+\n5ÏÂ·\n-\nc1\nc1\n0 r0ÏÂ·\nc\n- 1 0\nc1\n-\n2c\n-\nc\n- 0\n2c\n-\n0 0\nc\n- 0 0\nc\n- 0\n- c0\nc\n- 0 0\n- c0 0\nâr\nâÏ\nâÏ\nâÎ±1\nâÎ±2\nâÎ±3\nâÎ²1\nâÎ²2\nâÎ²3\nâ©\nâ­\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ§\nâ«\n+\nc2\nc2\nc2\n2-----\n-\nc2\n2-----\n-\nc2\n2-----\n-\nc2\n2-----\n-\n0 2c3\nc3\nKT 0\n2c3\n-\nc3\n-\n0 KT 0\n0 KT 0\nc3\n0 2c3\n0 KT 0\nc3\n-\n2c3\n-\n0 KT 0\n0 KT\nâÎ¼A1\nâÎ¼A2\nâÎ¼A3\nâÎ¼B1\nâÎ¼B2\nâÎ¼B3\nâiRW A1\n,\nâiRW A2\n,\nâiRW A3\n,\nâiRW B1\n,\nâiRW B2\n,\nâiRW B3\n,\nâ©\nâ­\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ¨\nâ¬\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâª\nâ§\nâ«\n=\nMotion in\nMotion in XX--YY Plane: Linearized\nPlane: Linearized\nEquations\nEquations\nc0\nmr0\n2ÏÂ·\n-\n------------------\nâ¡\nc1\nr0ÏÂ·\n-\n--------------\nâ¡\nc2\nÏÂ·\n-\n3Î¼0\n32Ïmr0\n-------------------\nâ¡\nGyroscopic\nStiffening Terms\n\nDII EMFF Final Review\nAug. 29, 2003\nFull-state system (n=18) has eigenvalues:\n-- Several poles on the\nimaginary axis and\none unstable pole\n-- Î»7,8 at +/- array spin-rate\n-- Poles move away from\norigin as increases\nEMFF Stability\nEMFF Stability\nÎ»1 2 3 4 5 6\n, , , , ,\n=\nÎ»7 8\n,\nÏÂ·\nÂ±\n=\nÎ»9 10\n,\niÏÂ·\nÂ±\n=\nÎ»11 12\n,\ni\nr0ÏÂ·\nIrr s\n,\nIrr w\n,\n+\n(\n)\n--------------------------------\nm mr0\nIrr s\n,\nIrr w\n,\n+\n---------------------------\n+\nâ\nâ \nâ\nâ\nÂ±\n=\nÎ»13 14\n,\ni\nr0ÏÂ·\nIrr s\n,\nIrr w\n,\n+\n(\n)\n--------------------------------\nm mr0\nIrr s\n,\nIrr w\n,\n+\n+\n(\n)\nÂ±\n=\nÎ»15 16\n,\nir0ÏÂ·\nm\n3Izz s\n,\n-------------\nÂ±\n=\nÎ»17 18\n,\nir0ÏÂ·\nm\nIzz s\n,\n---------\nÂ±\n=\nÏ\n\nDII EMFF Final Review\nAug. 29, 2003\nCurrent system is in 2nd order form:\nPlace in 1st order form:\nForm controllability matrix:\nSystem is fully controllable because\nSystem is fully controllable because CC has full rank\nhas full rank\nEMFF Controllability\nEMFF Controllability\n[B\nAB\nA B\nA\nB]\nn\nC\n-\n=\n...\nn : number of states\nu\nx\nx\nB\nA +\n=\n\nT]\n~\n~\n[\nx\nx\nx\n\n=\nA\nI\nM 1\n- K\n-\nM 1\n- C\n-\n=\nB\nM 1\n- F\n=\nrank C\n(\n)\nn\n=\n=\nFu\nx\nK\nx\nC\nx\nM\n=\n+\n+\n~\n~\n~\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Linear Controller Design\nEMFF Linear Controller Design\nFrom state-space equation of motion:\nForm the LQR cost function:\nChoose relative state and control penalties:\n-- âr : 10 : 5 âÏ : 10-15\n: 3 âÏ : 1 : 1\n-- All Euler angles and their derivatives : 1\n-- All electromagnets, all reaction wheels : 1\nThe cost, J, is minimized when:\nRxx: state penalty matrix Ruu: control penalty matrix\n[\n]\nâ«\ninf\n+\n=\ndt\nR\nR\nJ\nuu\nT\nxx\nT\nu\nu\nx\nx\nx\nx\nu\nK\nP\nB\nR\nT\nuu\n-\n=\n-\n=\n-1\nP\nB\nPBR\nP\nA\nPA\nR\nT\nuu\nT\nxx\n-\n-\n+\n+\n=\nAlgebraic\nAlgebraic Ricatti\nRicatti Equation (A.R.E.)\nEquation (A.R.E.)\nu\nx\nx\nB\nA +\n=\n\n[\n]\nx\nx\nu\nx\nx\nCL\nA\nBK\nA\nB\nA\n=\n-\n=\n+\n=\n\nr\nâ\nÏ\nâ\nÏ\nâ\n\nDII EMFF Final Review\nAug. 29, 2003\nSimulation of EMFF Dynamics\nSimulation of EMFF Dynamics\nClosed-loop time simulations were performed of both the\nnonlinear and linearized equations of motion\n-- Both employ the same linear feedback controller\n\"Free vibration\" response was investigated\n-- Initial condition : deviation from nominal state of one or more\ndegrees of freedom (âr in the results shown here)\n-- Closed-loop response to perturbed initial condition is simulated\n-- Perhaps offers more insight than simulating response to random\ndisturbances\nResults demonstrate:\n-- the range in which the linearized equations are valid\n-- the range in which linear control is sufficient\n-- the importance of the relative control penalties chosen for the\nvarious degrees of freedom\n\nDII EMFF Final Review\nAug. 29, 2003\nSimulation of EMFF Dynamics Results\nSimulation of EMFF Dynamics Results\n(I)\n(I)\nInitial conditions: 1% deviation\nfrom nominal array radius\n-- Nonlinear and linear simulations\ndiverge\n-- System remains stable in both\nsimulations\nInitial conditions: 0.001% deviation\nfrom nominal array radius\n-- Simulations of nonlinear and\nlinearized equations are identical,\nexcept for small numerical error in\nangles âÏ, âÎ±2, âÎ±3, âÎ²2, âÎ²3\n-- Both use linear controller\n\nDII EMFF Final Review\nAug. 29, 2003\nSimulation of EMFF Dynamics Results\nSimulation of EMFF Dynamics Results\n(II)\n(II)\nInitial conditions: 4% deviation\nfrom nominal array radius\n--\nDivergence of radial separation shows\nlinear control not sufficient in this case.\nRedesign with greater penalty on âr?\nInvestigate nonlinear control techniques?\n--\nLinear simulation does not capture\ndivergence of dynamics.\nInitial conditions: 3% deviation\nfrom nominal array radius\n--\nRadial separation remains stable\n--\nElevation angle of array may go unstable\n(probably numerical error).\n--\nCheck by increasing relative penalty on\nâÏ and redesigning controller.\n\nDII EMFF Final Review\nAug. 29, 2003\nx\nacent\nÎ©\n=\n16mx\nc\nx\nx\nÎ¼\n-\nÎ©\n=\n\n-\n1-D simplification of linearized 3-D dynamics\n-\nConstant spin rate for data collection\n-\nRelative radial position maintenance: disturbance rejection\nÏ\nÎ¼\nÎ¼\n\n,\n)\n(\n=\n=\nc\nx\nc\nFEM\nm\nF\na\nx\nEM\ncent\n-\n=\n-\n\nN\nS\nN\nS\nacentrifugal\nFEM\nFEM\nÎ©\n2x\nacentrifugal\nSimplified System: Steady\nSimplified System: Steady--State Spin\nState Spin\n\nDII EMFF Final Review\nAug. 29, 2003\navg\nx\nx\nx\nx\nÎ¼\nÎ´Î¼\nÎ´\nÎ´\n\nÎ©\n-\n=\nÎ©\n-\n\nPerturbation Analysis:\nPerturbation Analysis:\nPerturbed Dynamics of Steady\nPerturbed Dynamics of Steady--State\nState\nSpin\nSpin\nÎ´Î¼\nÎ¼\nÎ¼\nÎ´\n+\n=\n+\n=\navg\nx\nx\nx\n\n,\n\n(\n)\n(\n)\n(\n)\n\nx\nx\nm\nc\nx\nx\nx\nx\navg\nÎ´\nÎ´Î¼\nÎ¼\nÎ´\nÎ´\n+\n+\n-\n+\nÎ©\n=\n+\n\nc\nx\nm\navg\n\nÎ©\n=\nÎ¼\nSteady\nSteady--State Control\nState Control\nPerturbation Equation\nPerturbation Equation\nUse binomial formula\nto expand terms\nNeglect H.O.T.\nSolve for S.S. Control\nwhen\n=\nx\nÎ©\nÂ±\n=\n,1s\nUnstable dynamics:\nUnstable dynamics:\n* Same as\n* Same as Î»Î»7,8\n7,8 in 3\nin 3--D EMFF\nD EMFF\nsystem analysis\nsystem analysis\nu\nx\nx\nB\nA +\n=\n\navg\nx\nx\nx\nx\nx\nx\nx\nx\nÎ¼\nÎ´Î¼\nÎ´\nÎ´\nÎ´\nÎ´\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\nÎ©\n-\n+\nâ¥\nâ¥\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ¢\nâ¢\nâ£\nâ¡\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\nÎ©\n=\nâ¥\nâ¥\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ¢\nâ¢\nâ£\nâ¡\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nFollow same control design\nprocess as for full-state, 3-D system:\n-\nSelect state and control penalties:\n-\nSolve the A.R.E. analytically by\nenforcing\nthat P must be positive semidefinite:\n-\nThe displacement and velocity\nfeedback gains are then:\nLinear Control Design\nLinear Control Design\n[\n]\nâ«\ninf\n+\n=\ndt\nR\nR\nJ\nuu\nT\nxx\nT\nu\nu\nx\nx\nx\nx\nu\nK\nP\nB\nR\nT\nuu\n-\n=\n-\n=\n-1\nÏ\n=\nuu\nR\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\n=\nÎ»\nxx\nR\nâ¥\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\n=\nP\nP\nP\nP\nP\n[\n]\nP\nP\nP\nB\nR\nK\nT\nuu\nÏ\nÎ©\n=\n=\n-\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nNow solve for the closed-loop dynamic matrix, where:\n-\nEvaluate as increases from 0Ã\n-\nThe closed-loop poles for\nthe most efficient controller\nlie along this curve.\nState\nState--Space Analysis\nSpace Analysis\n[\n]\nx\nx\nu\nx\nx\nCL\nA\nBK\nA\nB\nA\n=\n-\n=\n+\n=\n\nx\nu\nK\n-\n=\nÏ\nÎ»\ninf\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nNearly frictionless\n1-dimensional airtrack\n-\nCan be set up in a\nstable or unstable\nconfiguration, depending\non the tilt angle\n-\nUnstable mode has dynamics\nnearly identical to a 1-DOF\nsteady-state spinning cluster!\n-\nClosing the loop on the unstable configuration will demonstrate an\nability to control systems such as the steady-state spinning cluster.\nExperimental Validation: 1\nExperimental Validation: 1--D Airtrack\nD Airtrack\nUltrasound\ndisplacement sensor\nFree magnet\non \"slider\"\nFixed\nelectromagnet\n\nDII EMFF Final Review\nAug. 29, 2003\nFree Permanent\nMagnet\nFixed\nElectromagnet\n,1\nmx\ni\ns\np\nÏ\nÎ¼\nÎ¼\nÂ±\n=\nStable poles:\nStable poles:\nSimilar linearization, state-space\nanalysis, and LQR control design\nLQR control design to\nsteady-state spin system\nOpen-loop step response\n-- Very light damping means poles are nearly on\nthe imaginary axis, as expected\nClosed-loop step response has reduced\novershoot and increased damping\n[\n]\n.4\n.\n=\nK\nOptimal gains:\nOptimal gains:\nPole-Zero Map\nReal Axis\nImag Axis\n-2\n-1.5\n-1\n-0.5\n0.5\n1.5\n-2\n-1.5\n-1\n-0.5\n0.5\n1.5\n0.3\n0.35\n0.4\n0.45\n0.5\n0.55\n0.6\n0.65\nStep Response: LQR Control of Stable Airtrack System\nTime [seconds]\nSeparation Distance [meters]\nClosed Loop\nOpen Loop\nExperimental Results: Stable Airtrack\nExperimental Results: Stable Airtrack\n\nDII EMFF Final Review\nAug. 29, 2003\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\n0.8\n0.9\nTime [seconds]\nSeparation Distance [meters]\nLQR Control of Unstable Airtrack System\nClosed Loop\nOpen Loop\nOpen Loop\nPole-Zero Map\nReal Axis\nImag Axis\n-2\n-1.5\n-1\n-0.5\n0.5\n1.5\n-2\n-1.5\n-1\n-0.5\n0.5\n1.5\nUnstable dynamics:\nUnstable dynamics:\n[\n]\n.0\n.2\n-\n=\nK\nOptimal gains:\nOptimal gains:\nFixed\nElectromagnet\nFree Permanent\nMagnet\n,1\nmx\ns\np\nÏ\nÎ¼\nÎ¼\nÂ±\n=\nExperimental Results: Unstable\nExperimental Results: Unstable\nAirtrack\nAirtrack\nSimilar dynamics and control design\ncontrol design to\nsteady-state spin and stable-airtrack\nOpen-loop response is divergent\nClosed-loop response is stable!\nStabilizing this system means we should\nbe able to perform steady-state control\nand disturbance rejection for a spinning\ncluster!\n\nDII EMFF Final Review\nAug. 29, 2003\nOpen-loop response is divergent.\n-- Constant current is applied to EM\n-- Magnets diverge from steady-state\nseparation distance\nFall apart if disturbed one way\nCome together if disturbed the\nother way\nClosed-loop response is stable!\n-- Oscillates at about ~0.2 Hz\n-- Maximum displacement from\nsteady-state location is ~1 cm\n-- Performance limitations due to\nmodel uncertainty and amplifier\nsaturation\nVideo: Control of Unstable Airtrack\nVideo: Control of Unstable Airtrack\n\nDII EMFF Final Review\nAug. 29, 2003\n-\nModeled the dynamics of a two-vehicle EMFF cluster\n-\nNonlinear, unstable dynamics\n-\nLinearized dynamics about a nominal trajectory (steady-state spin)\n--\nStability:\nStability: 3-D system has six poles at the origin, ten poles along the\nimaginary axis, and a stable/unstable pair of poles at the array spin-rate\n--\nControllability:\nControllability: System is fully controllable with 3 electromagnets and 3\nreaction wheels per vehicle\n-\nSimulated two-vehicle EMFF closed-loop dynamics\n-\nDemonstrated stabilization of unstable nonlinear dynamics using linear control\n-\nWe can investigate for future systems:\n-\nwhether linear control is sufficient for a given configuration\n-\nwhat the \"allowable\" disturbances are from the nominal state\n-\nhow the relative state and control penalties may improve the closed-loop\nbehavior\n-\nValidated EMFF dynamics and closed-loop control on simplified hardware system\n-\nAirtrack: stable and unstable configurations (1-DOF)\n-\nDemonstrated stabilization of an unstable system with dynamics similar to an\nEMFF array undergoing steady-state-spin\nControl Summary\nControl Summary\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Roadmap\nEMFF Roadmap\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Applications in 10\nEMFF Applications in 10--20 Years\n20 Years\n-3000\n-1500\n-3000\n-1500\n-1500\n-750\nVelocity vector (m)\nCross Axis (m)\nZenith-Nadir (m)\nDocking\nSparse Apertures\nCluster Reconfiguring\nImage from 1999 TPF Book\nEMFF Secondary Mirrors\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF Applications in 30\nEMFF Applications in 30--40 Years\n40 Years\nReconfigurable Arrays & Staged Deployment\nReconfigurable Artificial Gravity\nSpace Station\nProtective magnetosphere\n\nDII EMFF Final Review\nAug. 29, 2003\nAdditional Mission Applications\nAdditional Mission Applications\nDistributed Optics\nNon-Keplerian Orbits\nPrimary\nmirror\nPrimary\nmirror\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\n''Stationary' Orbits\nStationary' Orbits\n-\nFor telescopes and other observation missions with\nan extended look time, holding an fixed observation\nangle is important\n-\nSatellite formations in Earth's orbit have an intrinsic\nrotation rate of 1 rev/orbit\n-\nEMFF can be used to stop this rotation and provide\na steady Earth relative angle.\n-\nUsing Hill's equations...\nx\ny\nz\nx\nn x\nny\na\ny\nnx\na\nz\nn z\na\n=\n+\n+\n= -\n+\n= -\n+\n\nË\nË\nf\nx mn x\nz mn z\n= -\n+\nG\ny z\nx\nf\nm n\nx z\nx y\nÏ\nÏ\nâ\nâ\nâ\nâ\n=\nÃ\n=\n-\nâ\nâ\nâ\nâ\nâ\nâ \nG\nG\nG\nG\n-\nUnless the required force vector aligns with the\nposition vector, torques are produced\n-\nZero torque solutions are\n- Holding a satellite in the nadir direction\n- Holding a satellite in the cross-track\ndirection\n-\nFor other pointing angles, torques will be\nproduced\n-\nAny angular momentum buildup can be removed\nby:\n-\nMoving to an opposite position.\n-\nInteracting with the Earth's magnetic field\n\nDII EMFF Final Review\nAug. 29, 2003\nRotating Linear Array: 2 vs. 3 Spacecraft\nRotating Linear Array: 2 vs. 3 Spacecraft\nMission Efficiency metric:\nB\nm\nB\na\ni\nn\nF\ntot\no\nÏ\nÏ\nÎ¼\n=\n=\narray\nom\nc\nw\nJ =\ntot\narray\nm\nm\n=\nB\nm\nB\ni\nn\ni\nn\ni\nn\na\nF\ntot\no\no\nB\no\no\ni\ni\no\n)\n(\nÏ\nÏ\nÎ¼\n=\nââ\nâ \nâ\nââ\nâ\nâ\n+\n=\nTwo Spacecraft\n.2\n3 =\nJ\nJ\nB\nc\no\no\nÏ\nÎ¼\n=\nThree Spacecraft\ninner\nouter\ntot\ntot\narray\nm\nm\nm\n+\n= 2\n-\nAdding combiner almost triples mission efficiency\n-\nTrend Continues Ã adding more spacecraft increases\nmission efficiency\n\nDII EMFF Final Review\nAug. 29, 2003\nRLA: Mission Efficiency Trends\nRLA: Mission Efficiency Trends\n-\nNormalized Mission Efficiency\nn\ni\nn\ni\nn\nJ\nn\n-\n-\n=\nâ\nâ\nâ\nâ\n-\nâ\nâ \n= â\no\narray\nnia\nJ\nc m\n=\n-\nComparing J3/J2, then\nJ4/J3, J5/J4, J6/J5, etc.\n-\nDiminishing returns of\nadding S/C\n\nDII EMFF Final Review\nAug. 29, 2003\n3 S/C RLA: EMFF System Trades\n3 S/C RLA: EMFF System Trades\narray\ninner\ntotal\nM\nM\nÎ³\n=\narray\nouter\ntotal\nM\nM\nÎ³ -\n=\n-Define Mass Fractions:\n-Identical or Mother-Daughter Configuration\nCenter Spacecraft experiences no\ntranslation Ã no mass penalty Ã\nsuggests larger center spacecraft\n-Identical Configuration is non-optimal\n-Higher rotation rate for mother-daughter\nconfiguration for fixed masses\n\nDII EMFF Final Review\nAug. 29, 2003\nCase Study: Sparse aperture (TPF)\nCase Study: Sparse aperture (TPF)\nsc\ndry\nsa\ncore\ncoil\nm\nm\nm\nm\nm\n=\n+\n+\n+\n-\nCompare total system mass for various\npropulsion options with EM option for\nthe TPF mission (4 collector and 1\ncombiner spacecraft)\n-\nArray is to rotate at a fixed rotation rate\n(Ï = 1rev/2 hours)\n-\nAll collector spacecraft have same EM\ncore and coil design\n-\nAll spacecraft have the same core\n-\nForce balancing equations:\ns/3\ns/6\ns/6\ns/3\nN\nS\nN\nS\nN\nS\nN\nS\nN\nS\nEM mass components\nSuperconducting wire (msc)\nDensity (ÏSt)\n13608 kg m-3\nCopper coil (mcoil)\nDensity (ÏCu)\n8950 kg m-3\nResistivity (Ï)\n1.7x10-8 Î©m\nSolar Array (msa)\nPower to mass conv (Pconv)\n25 W kg-1\n*Source: TPF Book (JPL 99-3)\nTPF spacecraft* (mdry)\nCollector Spacecraft\nDry\n600 kg, 268 W\nPropulsion\n96 kg, 300 W\nPropellant\n35 kg\nCombiner Spacecraft\nDry\n568 kg, 687 W\nPropulsion\n96 kg, 300 W\nPropellant\n23 kg\ncent\nM\nM\nM\nM\nF\nF\nF\nF\nF\n=\n+\n+\n+\ncent\nM\nM\nM\nM\nF\nF\nF\nF\nF\n= -\n+\n+\n+\n\nDII EMFF Final Review\nAug. 29, 2003\nCase Study: Sparse aperture (TPF\nCase Study: Sparse aperture (TPF--2)\n2)\n-\nCold Gas - Low Isp, high propellant requirements\n-\nNot viable option\n-\nPPTs and Colloids - Higher Isp\n-\nstill significant propellant over mission lifetime\n-\nFEEPs - Best for 5 yr mission lifetime\n-\nMust consider contamination issue\n-\nOnly 15 kg mass savings over EMFF @ 5 yr mark\n-\nEM coil (R = 4 m) (Mtot = 3971 kg)\n-\nLess ideal option when compared to FEEPs even for\nlong mission lifetime\n-\nEM Super Conducting Coil (R = 2 m) (Mtot = 3050 kg)\n-\nBest mass option for missions > 6.8 years\n-\nNo additional mass to increase mission lifetime\n-\nAdditional mass may be necessary for CG offset\n-\nEstimated as ~80 kg\n\n-\nMassachusetts Institute of\nTechnology\n-\nSpace Systems Laboratory\n-\nLockheed Martin Corporation\n-\nAdvanced Technology Center\nEMFF Testbed\nEMFF Testbed\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFFORCE Project Overview\nEMFFORCE Project Overview\n- Goal: Demonstrate the feasibility of electromagnetic\ncontrol for formation flying satellites\n-\nDesign and build a testbed to demonstrate 2-D formation flight\nwith EM control\n- Proof of concept\n- Traceable to 3-D\n- Validate enabling technologies\n- High temperature superconducting wire\n\nFrom Design to Reality\nFrom Design to Reality\nMetrology and\nComm\nGas supply\ntank\nMagnet and\ncryogenic\ncontainment\nElectronics\nboards\nBatteries\nBase and\ngas\ncarriage\nReaction\nwheel\n\nDII EMFF Final Review\nAug. 29, 2003\nTestbed Overview\nTestbed Overview\n-\nFunctional Requirements:\n- System will contain 2 vehicles\n- Robust electromagnetic control will replace thrusters\n- Each vehicle will be:\n- Self-contained (no umbilicals)\n- Identical/interchangeable\n-\nVehicle Characteristics\n-\nEach with 19 kg mass, 2 electromagnets, 1 reaction wheel\n-\nCommunication and processing\n-\n2 internal microprocessors (metrology, avionics/control)\n-\nInter-vehicle communication via RF channel\n-\nExternal \"ground station\" computer (operations, records)\n-\nMetrology per vehicle\n-\n1 rate gyro to supply angular rate about vertical axis\n-\n3 ultrasonic (US) receivers synchronized using infrared (IR) pulses\n\nDII EMFF Final Review\nAug. 29, 2003\nElectromagnet Design\nElectromagnet Design\n-\nCoil wrapped with alternating layers of wire and Kapton\ninsulation\n-\n100 wraps\n-\nRadii of 0.375m and 0.345m\n-\nToroid-shaped casing: Insulation & Structural component\n- Operable temperature at 77 K\n- Surround by liquid nitrogen\n-\nAmerican Superconductor Bi-2223 Reinforced\nHigh Temperature Superconductor Wire\n-\nDimensions\n- 4.1 mm wide\n- 0.3 mm thick\n- 85 m length pieces\n-\nCritical Current\n- 115 amps, 9.2 kA/cm2\n- Below 110 K\n\nDII EMFF Final Review\nAug. 29, 2003\nContainment System Design\nContainment System Design\n-\nRequirements:\n-\nKeep the wire immersed in liquid\nnitrogen.\n-\nInsulate from the environment the wire\nand the liquid N2.\n- Non-conductive material.\n-\nStiff enough to support liquid N2\ncontainer and its own weight.\n-\nMaterial: Foam with fiber glass wrapped\naround it.\nTop view of half of the Container\nSection of\ncontainer\n\nDII EMFF Final Review\nAug. 29, 2003\nPower Subsystem\nPower Subsystem\n-\nCoil & Reaction Wheel Power:\n- Rechargeable NiMH D-cell batteries\n- MOSFET controller - uses H-bridge\ncircuit to control current through gates\n- 20 minute power duration\n-\nCoil: 100 Amps @ 5 Volts\nElectromagnet\n-\n3.6 V\n+\n35 Amps\n35 A\n35 A\n> 100 Amps\n\nDII EMFF Final Review\nAug. 29, 2003\nAir Carriage and Reaction Wheel\nAir Carriage and Reaction Wheel\n-\nReaction Wheel\n-\nStore angular momentum\n-\nProvide counter-torques to electromagnets\n-\nProvide angular control authority\n-\n0.1 Nm Torque at 10 Amps\n-\nFlywheel Requirements:\n- non-metallic Ã Urethane Fly Wheel\n- Maximum wheel velocity at 7000 RPM\n-\nMotor tested in EM field with no variation in performance\n-\n2-D Friction-less environment provided by gas carriage\n- allows demonstration of shear forces, in concert with\nreaction wheel\n- Porous Membrane, Flat air bearings provide\npressurized cushion of gas\n- CO2 gas supply: rechargeable compressed gas\ntank, 20 minute duration\n\nDII EMFF Final Review\nAug. 29, 2003\nModel Calibration\nModel Calibration\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n0.7\nBaxial vs. Axial Distance\nAxial Distance [m]\nB [gauss]\nGauss meter\nInner\ncoil\nstack\nBaxial vs. Radius\nRadius [m]\nB [gauss]\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\n-10\nGauss\nmeter\nInner\ncoil\nstack\nBradial vs. Radius\nRadius [m]\nB [gauss]\n0.1\n0.2\n0.3\n0.4\n0.5\n0.6\nGauss\nmeter\nInner\ncoil\nstack\n-\nB-field measurements\n- Axial and Radial B-field\nmeasurements taken at varying\nradii.\n- Inner coil stack\n- .67 m inner diameter\n- 40 turns\n- I = 30 amps\n\nDII EMFF Final Review\nAug. 29, 2003\nDegrees of Freedom Validation\nDegrees of Freedom Validation\n-\nInitially we had problems demonstrating shear forces\n-\nThe reaction wheel is designed for small shear forces\n-\nVehicle tends to 'stick' to table, so larger forces are needed to move the\nvehicle\n-\nLarger shear forces produce larger torques\n-\nThe torque generated would cause the vehicle to rotate\n-\nAs the vehicle rotated, the dipoles aligned causing the vehicles to attract\n-\nUsed Vehicle's ability to steer the dipole to compensate\nN\nS\nS\nN\nB\nA\n\nDII EMFF Final Review\nAug. 29, 2003\nEMFF: Validation of Degrees of Freedom\nEMFF: Validation of Degrees of Freedom\n\nDII EMFF Final Review\nAug. 29, 2003\nTestbed Future Work\nTestbed Future Work\n-\nControl Testing\na. One vehicle fixed - disturbance rejection\nb. One vehicle fixed - slewing, trajectory following\nc. Both vehicles free - disturbance rejection\nd. Both vehicles free - slewing, trajectory following\ne. Spin-up\n-\nVehicle Design\n-\nContainment system redesign: Plastic or copper tubing\n-\nReaction Wheel\n-\nMotor is too weak to counteract high torque levels\n-\nReaction wheel is also possibly undersized\n-\nThree vehicle Control Testing\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\nCryogenic Containment\nCryogenic Containment\n-\nSignificant research concerning maintaining\ncryogenic temperatures in space\n- Space Telescope Instrumentation\n- Cryogenic propellant storage\n-\nSpacecraft out of Earth orbit can use a sunshield\nthat is always sun-pointing to reflect radiant energy\naway\n-\nFor Earth orbit operation, this won't work, since\neven Earth albedo will heat the 'cold' side of the\nspacecraft\n-\nA cryogenic containment system, similar in concept to that used for the EMFF testbed\nmust be implemented, using a combination of a reflective outer coating, good insulation,\nand a cyo-cooler to extract heat from the coil\n-\nUsing a working fluid to carry heat around to the cry-cooler will be explored, or possibly\nusing the wire itself as the thermal conductor\n\nDII EMFF Final Review\nAug. 29, 2003\nEfficient High Current Supplies\nEfficient High Current Supplies\n-\nThe existing controller for the testbed was based on a\npulse width modulated controller found for use with\nradio controlled cars and planes\n-\nAn H-bridge is used to alternate applied potential to the\ncoil, with the next current delivered dependent on the\namount of time the voltage is applied in a given direction\n-\nThe drawback is that current is always flowing through\nthe batteries, which both provide a power sink as well as\ndissipate heat\n-\nOne solution may be to incorporate very high Farad\ncapacitor instead of a batter, to reduce the internal\nresistance\n-\nAlternatively, a method of 'side-stepping' the storage\ndevice altogether may be employed, allowing the\ncurrent to free-wheel during periods of low fluctuation\n\nDII EMFF Final Review\nAug. 29, 2003\nHigh B\nHigh B--field effects: Findings in literature\nfield effects: Findings in literature\n-\nNASA reports, Lockheed Martin reports, other contractors (when\navailable), IEEE journal articles\n-\nNothing for very high fields (0.1 T and above)\n-\nEffects of earth's magnetic field (0.3 gauss or so)\n-\nEffects of on-board field sources such as\n- Magnetic latching relays\n- Traveling wave tubes\n- Tape recorders\n- Coaxial switches\n- Transformers\n- Solenoid valves\n- Motors\n\nDII EMFF Final Review\nAug. 29, 2003\nVulnerable equipment\nVulnerable equipment\n-\nAll these fields are much smaller than what is being projected\nfor magnetic steering coils\n-\nEquipment traditionally known to be susceptible to magnetic\neffects:\n- Magnetometers\n- Photomultipliers\n- Image-dissector tubes\n- Magnetic memories\n- Low-energy particle detectors\n- Tape recorders\n-\nDigicon detectors in Hubble FOS were found to be vulnerable to\nmagnetic effects\n-\nQuartz-crystal oscillators ditto (AC fields)\n\nDII EMFF Final Review\nAug. 29, 2003\nHigh field concerns\nHigh field concerns\n-\nOther effects may come into play that are negligible at low field\nstrengths\n- Eddy currents in metal harnesses\n- Hall effects in conductors\n- Effects in semiconductors?\n-\nMost EMI requirements hard to meet\n-\nShielding requirement translates into a mass penalty\n-\nPursuing more literature results, but this is effectively a new\nregime - may require testing\n\nDII EMFF Final Review\nAug. 29, 2003\nShielding Considerations\nShielding Considerations\n-\nAttenuation of a DC magnetic field resulting from an enclosure scales approximately as\n-\nWhere Î¼ is the permeability, âis the thickness of the material, and R is the characteristic\nradius of enclosure\n-\nSome high permeability materials:\nA = Î¼\nâ\nR\n-\nReducing a 600 G (0.06 T) field to ambient (0.3 G) requires an attenuation of\n2x103, or a minimum â/R of 0.01\n-\nThis is .1 mm thickness for each 10 cm of radius enclosed\nMaterial\nDensity (lbs/cu-in)\nPermeability\nSaturation (G)\nAmumetal\n0.316\nAmunickel\n0.294\nULCS\n0.0283\n\nDII EMFF Final Review\nAug. 29, 2003\nFurther Shielding Considerations\nFurther Shielding Considerations\n-\nGeometry\n-\nShielding acts to divert field lines around components\n-\nGentle radii are better for re-directing field lines than sharp corners\n-\nSize\n-\nSmaller radii are more effective, so shielding should envelop the component\nto be protected as closely as possible\n-\nContinuity\n-\nSeparate pieces should be effectively connected either mechanically or by\nwelding to insure low reluctance\n-\nClosure\n-\nComponents should be completely enclosed, even if by a rectangular box to\nshield all axes\n-\nOpenings\n-\nAs a rule, fields can extend through a hole ~5x the diameter of the hole\n-\nNested Shields\n-\nIn high field areas, multiple shield layers with air gaps can be used very\neffectively. Lower permeability, higher saturation materials should be used\ncloser to the high field regions\n\nDII EMFF Final Review\nAug. 29, 2003\nShielding with Auxiliary Coils\nShielding with Auxiliary Coils\n-\nIn addition to high permeability materials, shielding can be achieved locally using\nHelmholtz coils\n-\nAn external field can be nullified with an arrangement of coils close to the region\nof interest\n-\nThe small coil size requires proportionally smaller amp-turns to achieve nulling of\nthe field\n-\nWill not significantly affect the main field externally\n\nDII EMFF Final Review\nAug. 29, 2003\nOutline\nOutline\n-\nMotivation\n-\nFundamental Principles\n-\nGoverning Equations\n-\nTrajectory Mechanics\n-\nStability and Control\n-\nMission Applicability\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMission Analyses\n-\nSparse Arrays\n-\nFilled Apertures\n-\nOther Proximity Operations\n-\nMIT EMFFORCE Testbed\n-\nDesign\n-\nCalibration\n-\nMovie\n-\nSpace Hardware Design Issues\n-\nThermal Control\n-\nPower System Design\n-\nHigh B-Field Effects\n-\nConclusions\n\nDII EMFF Final Review\nAug. 29, 2003\nConclusions\nConclusions\n-\nThere are many types of missions that can benefit from propellantless\nrelative control between satellites\n- Provides longer lifetime (even for aggressive maneuvers)\n- Reduces contamination and degradation\n-\nAngular momentum management is an important issue, and methods are\nbeing developed to de-saturate the reaction wheels without using thrusters\n-\nPreliminary experimental results indicate that we are able to perform\ndisturbance rejection in steady state spin dynamics for multiple satellites\n-\nOptimal system sizing has been determined for relatively small satellite\narrays. Currently larger formations are being investigated\n-\nAlthough low frequency magnetic interference data is difficult to find,\nshielding against the relatively low fields inside the coils appears to be\npossible\n-\nPreliminary validation with the MIT Testbed has been achieved, and more\ncomplex maneuver profiles will be accomplished with future upgrades"
    },
    {
      "category": "Resource",
      "title": "sateng_portfolio.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/9cb42c582321b7bb9279c6b0957fe085_sateng_portfolio.pdf",
      "content": "16.851 Satellite Engineering\nPortfolio\nAnna Silbovitz\nDecember 10, 2003\n\nOutline\n\nI.\nOverall Learning Objectives\nII.\nSatellite Topics\na. STK\nb. Orbits\nc. Power\nd. Environment\ne. Attitude Control System\nf. Communication\ng. Software and Automation\nIII.\nReferences\n\nI.\nOverall Learning Objectives\n\nI was hoping from this class to gain a general understanding of how satellite engineering\nworks, and how different satellite subsystems interact. I wanted to learn both technical\nand practical information about how to design the different subsystems.\n\nI do realize that to thoroughly understand most of the subsystems, a separate class full of\nmaterial could be taught on each. Considering this, I thought that what was taught in\nclass did fulfill the objectives of the class. A good overview of each topic was presented;\nthe basic technical material was shown as well as the high-level issues that are a concern\nin thinking how different satellite subsystems interact.\n\nThe homework provided an interesting opportunity to investigate the different topics\ntaught in class. However, I often felt that there was not enough time to develop the\nproblem in depth, so that the tools we produced made so many assumptions and used so\nmany 'short-cut' type equations that, while they did demonstrate to us some of the trade-\noffs, they are probably not very useful in real design. I also felt, by around the fifth\nhomework, that I was running out of fresh ideas; working with new people every week\nmade it difficult to come up with problems unique to the whole group that involved\ninteresting trades. Working with new people did add help to add a different perspective,\nsince many of us have different backgrounds concerning what we already understood\nabout satellites. However, I thought it would have been more beneficial to work with one\ngroup the entire semester, and for each homework to be built on the one done previously.\nThat way, by the end of the class, each group would have a tool that analyzed many\ndifferent subsystems with a large amount of depth and detail. Finally, I would like to add\nthat throughout the semester I was continuously frustrated and confused as to what was\nexpected on the homework. I felt the requests made of us were contradictory; it was\nimpossible to keep each assignment brief but to adequately investigate several trade-offs.\nThe result was that we had to make many assumptions, and restrict the problem, which\nmade it less realistic as mentioned above. And often when my group did restrict the\n\nproblem in that way, in an attempt to keep the code, write-up, and amount of hours\ndedicated to the project reasonable, comments in the grading of the homework indicated\nthat the problem was too restrictive.\n\nIn the remainder of this document, I will discuss many of the topics that were covered in\nclass. Each discussion will include an overview of what was taught, additional\ninformation from outside sources, and also my personal comments on what I gained from\nthe lesson. Each topic is intended to be a bare-bones overview; key equations and\ndefinitions are listed as well as particular points of interest. In the future, this document\nwill be useful for me when I need to quickly reference the main points of a particular\ntopic. Adding more detail would not be beneficial, since more in-depth information is so\neasily accessible through looking through class notes various textbooks, papers, and\nwebpages (many of which are listed in the References section). For this reason as well,\nthe problem sets are not included in this document, and interactions between subsystems\nare only mentioned occasionally. Each problem set provides a thorough explanation of\nhow the different subsystems examined interact, and all problem sets and code are easy to\nreference when needed. Appending them to this would also have made the portfolio\nunnecessarily long, and would just put extra copies of them on my computer.\n\nAll source material is listed in the References section, but at the end of each topic the\nspecific sources used in that topic are referenced. Class notes and handouts are not\nincluded in the References, but they did contribute to this report.\n\nThe topics covered were chosen because I have an interest in them, either because I\ninvestigated them more thoroughly in homework or because they are related to my fields\nof study. Each discussion will of course be influenced by my background and interests:\nmy undergraduate studies were in Electrical Engineering, and my graduate work is being\ncarried out in the Software Engineering Research Laboratory. I have previously taken\nclasses that include Astrodynamics, Software Engineering (from a system design level)\nand System Safety. I am also currently an employee at MIT Lincoln Laboratory, in the\nSpace Control group.\n\nA final note: I do not have an equation editor on my personal computer, and do not easily\nhave access to one that has it. I have rarely used it and do not find it difficult reading\nequations written without it; also I wanted to have the ability to edit this document and\nthe equations at a later time if needed. For these reasons, I did not seek out a computer\nwith an equation editor and instead have typed all equations directly into the Word\ndocument. Hopefully this does not inconvenience anyone else reading this.\n\nII.\nSatellite Topics\n\na.\nSTK\n\nAlthough STK [2] is not a satellite subsystem, I believe that it deserves some attention\nand should have been given more in class. The first class consisted a very brief overview\nof an old version of the tool, with the expectation that we would then be able to use it in\nour homework. STK is a very powerful tool and can assist greatly in satellite system\nanalysis. It is capable of doing a vast number of space-related calculations, such as\ndetermining distances between any objects in space over any length of time, or finding\ntimes that a satellite is in view of the sun. Also, it can propagate space vehicles and\ndisplay in three dimensions the results; using these features, it can be used to verify\nresults of calculations done for problem sets (such as, proving that a given change in\nvelocity actually will transfer a satellite to a desired location) and to provide a visual\ndemonstration of the results, such as the Hohmann Transfer shown in Figure 1.\n\nFigure 1. A Hohmann Transfer in STK\n\nHaving used STK while working at Lincoln over the past two years, I also know that it is\na fairly complicated tool as well. I was able to integrate it with some of my problem sets\nbecause of my previous knowledge; however, if I had not used the tool before, I would\nhave found it nearly impossible to learn in the short amount of time provided to complete\neach homework. I strongly recommend giving students more opportunity to learn and\nuse STK. If a full class was dedicated to teaching it, more of its functionality could be\nshown, including how it can be accessed through MATLAB, which is typically the most\nadvantageous way to use it when designing a software tool. Additionally, it would be\nhelpful if a professor or someone else (perhaps in a teaching assistant-type role) had a\nthorough understanding of STK and was available to help students use it on their\nhomework. Even after using it regularly for two years, I am often on the phone with STK\nsupport (which is generally excellent) to get help on how to do something new, but\nhaving someone provide support at MIT would probably be easier for most students and\nmake them more likely to try using it.\n\nb.\nOrbits\n\nThe orbits section focused mainly on Geocentric orbits. Orbits are typically described by\na set of six orbital elements:\n\nsemi-major axis (a)\neccentricity (e)\ninclination (i)\ntrue anomaly (Î¸, f, or Î½)\nright ascension of the ascending node (Î©)\nargument of perigee (Ï)\n\nOrbits are generally ellipses, and the value for eccentricity describes how elliptical they\nare. The point of closest approach to the planet being orbited is called the perigee, and\nthe farthest point is called the apogee. The semi-major axis is the average of the apogee\nand perigee distances (ra and rp):\n\na = (ra + rp)/2\n\n[1]\n\nThe perigee and apogee distances can also be defined by the semi-major axis and\neccentricity:\n\nra = a*(1 + e)\n\n[2]\n\nrp = a*(1 - e)\n\n[3]\n\nThe eccentricity vector is a vector which points from the center of the Earth to perigee,\nwith magnitude equal to e. The true anomaly is the angle from the eccentricity vector to\nthe spacecraft position. The right ascension of the ascending node is the angle from\nvernal equinox to the ascending node (the point where the spacecraft crosses the\nequatorial plane moving from south to north). The argument of perigee is the angle from\nthe ascending node to the eccentricity vector.\n\nSeveral special orbits were described in class. Geosynchronous orbits have a period\nequal to one sidereal day. A Frozen orbit, such as a Molniya orbit, is very eccentric and\nspends more time over a certain area of the globe. A Sun-synchronous orbit is designed\nusing J2 effects to track the sun, so that its plane of orbit is always normal to the sun.\n\nTransferring from one orbit to another is an important consideration in spacecraft design.\nThere are several ways to make transfers, depending on the time allotted for the transfer,\nand the fuel available. A key equation for computing maneuvers is the equation which\ndefines the velocity of a spacecraft in orbit:\n\nv = sqrt(2*Î¼/r - Î¼/a)\n\n[4]\n\nwhere Î¼ is the gravitational constant of the body being orbited, a is the semi-major axis of\nthe orbit, and r is the location of the spacecraft in the orbit. For circular orbits, this\nreduces to:\n\nv = sqrt(Î¼/a)\n\n[5]\n\nIf only a plane change needs to be done, a Simple Plane Change can be used. In this\ncase, the initial velocity and the final velocity of the spacecraft is the same. A change in\nvelocity must be made in the direction normal to the current orbital plane to change the\ninclination. The change is defined as:\n\nâv = 2*v*sin(Î¸/2)\n\n[6]\n\nwhere v is the initial velocity, and Î¸ is the change in inclination.\n\nIf a change of altitude needs to be made, a Hohmann Transfer, One-Tangent Burn, or Bi-\nElliptic Transfer can be made. When performing one of these transfers, a change in\ninclination or eccentricity can be made as well.\n\nA Hohmann transfer (from a lower altitude orbit to a higher altitude orbit) is made by\nperforming a tangential âv at perigee of the initial orbit that will move it into a transfer\norbit. The âv should be calculated so that the apogee of the transfer orbit is also the\napogee of the final orbit. Another tangential burn is done at this point to place the\nspacecraft in its final orbit. Eccentricity changes are accounted for if the correct above\nequation for velocity is used. If an inclination change needs to be made, it generally\nshould be done at the highest altitude to reduce the amount of velocity needed for the\nchange. The âv for the inclination change is combined with the âv for the orbit change,\nso that only one burn is made. However, a Hohmann transfer including a plane change\ncan be more optimized by performing part of the inclination change at the lower altitude\nburn, and the rest at the higher. This method is known as the Minimum Combined Plane\nChange.\n\nIn a One-Tangent Burn, a tangential burn is also made at perigee of the initial orbit. This\nburn puts the spacecraft into a transfer orbit larger than the one that would be used for a\nHohmann transfer. When the spacecraft reaches the altitude of the final orbit, it makes a\nsecond burn. This burn, however, is not at apogee, so it is not tangential. This transfer is\nquicker than the Hohmann transfer, but uses more âv. Eccentricity and inclination\nchanges could be accounted for as well, however, this topic was not investigated in class\nor in module development.\n\nIn a Bi-Elliptic Transfer, two Hohmann-type transfers are done in succession. The first\ntransfer brings the spacecraft out to an orbit much higher than the final desired orbit. The\nspacecraft does a burn here to immediately enter another transfer orbit that brings it back\ndown to the apogee of the final orbit. This transfer takes the longest; however, it uses\nless âv than a regular Hohmann transfer in some cases. Inclination changes should be\nmade at the highest altitude. Eccentricity changes are accounted for by using the above\nequation for velocity for eccentric orbits.\n\nAnother interesting orbit-related topic is perturbation effects. These were not covered in\ndepth, but it would have been interesting to learn more about how perturbation effects\n\nwork, such as perturbations from the sun and moon on high altitude satellites, and how\norbits are maintained in light of those disturbances.\n\nHill's equations are used for determining relative motion of satellites in orbit. They were\nbriefly mentioned as part of lecture, and it also would have been interesting to discuss\nlocal reference frames in more detail, and how the Clohessy-Wiltshire equations can be\nused to determine how spacecraft can more relative to local frames (such as, how a\nspacecraft could move relative to another spacecraft). I have done some work with these\nequations would have enjoyed hearing a thorough explanation of how and why they\nwork, although perhaps that would have been too detailed considering the scope of the\nclass.\n\nReferences [1], [3], and [4] contributed to the above orbit discussion, and they additional\ninformation on topics such as Hill's equations.\n\nc.\nPower\n\nPower systems typically include solar cells and batteries. Solar arrays are sized based on\naverage power needs of the satellite. Batteries are sized based on peak electrical power\nneeded. The life of the mission, type of orbit, and satellite configuration all influence\npower system design.\n\nThe design of solar arrays was an interesting trade-off in homework problems. Solar\narrays are sized depending on the power needs of the satellite, and the time the satellite is\nsunlit and in eclipse. The solar array must collect enough energy during sunlight to\npower the satellite during the entire orbit. The fraction of time a satellite is sunlit can be\nfound by the following equations:\n\nFraction sunlit = (Ï + 2Î±)/(2Ï)\n\n[7]\n\nÎ± = sin-1(REtanÎ²/(acosÎ¸))\n\n[8]\n\nÎ² = cos-1(RE/a)\n\n[9]\n\nwhere RE is the radius of the Earth, and a is the radius of the Earth plus the height of the\nsatellite above the Earth. The angle Î¸ is the angle between the orbital plane and the sun.\nAlternatively, the amount of the time a satellite is sunlit can be found by modeling the\norbit in STK.\n\nThe solar array power during daylight Psa is found by the following equation:\n\nPsa = ((PeTe/Xe) + (PdTd/Xd))/Td\n\n[10]\n\nwhere Pe and Pd are the satellite's power needs during eclipse and daylight, Te and Td are\nthe times per orbit the satellite is in daylight or eclipse, and Xe and Xd are the efficiencies\nof the paths from the solar arrays through the batteries to the loads, and the path directly\nfrom the arrays to the load. These values depend on the type of power regulation, either\ndirect energy transfer or peak-power tracking.\n\nThe area of a solar array is found by dividing the solar array power Psa by the power at\nthe end of the satellite life, PEOL:\n\nAsa = Psa/PEOL\n\n[11]\n\nThe power at the end of life is equal to the power at the beginning of life, PBOL,\nmultiplied by the lifetime degradation Ld of the solar array. Degradation is caused by\nthermal cycling, micrometeoroids, plume impingement, material outgassing, and\nradiation. The power at the beginning of life is determined by the following equation:\n\nPBOL = PoIdcosÎ¸\n\n[12]\n\nwhere Po is ideal solar output performance per a unit area (based on the material used),\nand Id is the inherent degradation, which is design inefficiencies in the array. The angle Î¸\nis the sun incidence angle.\nDifferent types of batteries are picked for different reasons, depending on their depth of\ndischarge, lifetime, energy density, and other factors. Primary batteries are not\nrechargeable. They are typically used in short missions, and have a specific energy\ndensity of 90-400 Whr/kg. Secondary batteries are rechargeable, and are used for\nproviding power during eclipse or during peak power loading. They typically have a\nspecific energy density in the range of 25-200 Whr/kg. Primary battery types include\nsilver zinc, lithium sulfur dioxide, lithium carbon monofluoride, and lithium thionyl\nchloride. Secondary battery types include silver zinc (again), nickel cadmium, and nickel\nhydrogen. A property used for choosing batteries includes a battery's depth of discharge\n(DOD). The DOD is the percent of the capacity used during a single discharge cycle. A\nhigher DOD means a shorter cycle life.\n\nThe power subsystem focused on how to account for power needs of a spacecraft. How\nto determine what those power needs are was not really covered. Often for homework,\nthe value of average power needed was chosen to be around 110 Watts, since that was\nused in the example for FireSat in the textbook, and the solar array design was based on\n\nthat value. Some other subsystems specifically mentioned what power was needed to\ndrive them (ex. communications), but it would have been interesting to discuss in class\nthe power needs of different satellite components, and how those varied needs\nspecifically drive the design of the power system - such as what power sources (primary\nbattery, secondary battery, solar array, other) best suit what specific needs.\n\nReferences [1], [5], [6], and [7] contributed to the above discussion.\n\nd.\nEnvironment\n\nEnvironmental effects on a satellite include the solar cycle, the Earth's gravity and\natmosphere, aerodynamic drag, the magnetic field, plasma effects, and radiation. How\neach of these factors affects a satellite, and methods to compensate for the effects, were\ndiscussed.\n\nDifferent environmental factors affect space systems in different ways. For example,\nSunlight and Earthshine effect heating and choice of surface materials of satellites. The\nmaterials are chosen based on their thermal properties, such as absorptance and\nemissivity. Solar energy may also degrade materials. The Earth's gravity affects the\nactual orbit of a satellite, as well as its alignment. Gravity gradient torques are applied to\nthe satellite causing it to align in a particular direction that may or may not be desirable.\nThe Earth's magnetic field also causes torques; both the affect of this and gravity are\ndependent on the satellite's distance from Earth. The magnetic field intensity B is found\nby the following equation:\n\nB = (1 + sin2Î»)1/2B0/R3\n\n[13]\n\nwhere Î» is the magnetic latitude, R is the radial distance, and B0 is the magnetic field at\nthe equator at the Earth's surface. The torque resulting from this field can be found by\nmultiplying B by the satellite's residual dipole. The torque due to gravity Tg is found by\nthe following equation:\n\nTg = (3Î¼/2R3)|Iz - Iy|sin(2Î¸)\n\n[14]\n\nwhere Î¼ is the Earth's gravity constant, R is the orbit's radius, Î¸ is the maximum\ndeviation of the Z-axis from local vertical, and Iz and Iy are moments of inertia about z\nand y axes.\n\nIn terms of the textbook's discussion of the space environment, the environment\nsubsystem (if it can even be called that) is coupled tightly with the attitude control\nsystem. Many of the torques produced on the satellite from environmental factors can be\ncounteracted through various attitude control techniques (discussed more in the next\nsection).\n\nThere is certainly a large variety of environmental issues that must be accounted for in\nsatellite design, and which factors are important varies widely depending on the desired\norbit of the satellite. From what I have seen at work, I am under the impression that\nmodels of many of the environmental effects are even much more complicated than what\nwas presented in class and in the textbook. Many of the textbook equations, when used\nin homework, provided a simple way to find the worst-case behavior. However, it would\nbe interesting to learn about a high-fidelity model for one or two of the environmental\neffects, and to examine that effect on a satellite over the course of an orbit or even a\nlifetime.\n\nReferences [1], [8], and [9] contributed to the above discussion.\n\ne.\nAttitude Control System\n\nThe Attitude Control System (ACS) consists of methods to keep the satellite in the\ncorrect position. The satellite may need to slew to face a particular direction, or just\novercome environmental torques. Attitude coordinate systems aid in calculating a\nsatellite's position with respect to a local frame, and rotations are used to convert\nbetween different coordinate frames. There are different types of ACS actuators, such as\nreaction wheels, control moment gyros, magnetic torquers, and thrusters. Additionally,\nsensors such as star trackers and sun sensors are used to help the satellite determine its\nattitude.\n\nAs mentioned in the previous section, the textbook seemed to focus on how ACS\nactuators are used to counteract environmental effects. For example, momentum wheels\ncan be chosen to counter-act the effects of the gravity gradient torque T. The amount of\nmomentum h the wheel must be able to store is calculated based on this value, and based\non the assumption that the disturbance due to gravity gradient accumulates in 1â4 of each\norbit:\n\nh = TP(0.707)/4\n\n[15]\n\nwhere P is the orbital period. Momentum wheels themselves are largely available\ncommercially; once the size needed is known, they may be chosen based on other\nparameters, such as size or mass (see References for data sheets on commercial\nmomentum wheels). Thrusters must be used to dump momentum; the amount of force F\nneeded to dump momentum is found by the equation:\n\nF = h/Lt\n\n[16]\n\nwhere L is the moment arm and t is the burn time. The actual amount of propellant\nneeded for the thrusters is based on this as well as force needed for any large maneuvers\nthe satellite must make.\n\nACS systems often have other jobs as well. These may include rotating solar arrays,\ncontrolling where antennas point, and recovering from failure conditions. Also, they may\nuse sun and earth telemetry data found by the sensors to help determine attitude and\nposition.\n\nA satellite's attitude is often expressed as a quaternion, which describes the attitude of an\nobject's body frame with respect to a reference frame. A quaternion has four elements,\nthree that are part of a vector and one that is a scalar:\n\nq = q1i + q2j + q3k + q4\n\n[17]\n\nA quaternion expresses the rotation about an axis n and an angle Î¸. It can physically be\ninterpreted as:\n\nq = [ nsin(Î¸/2) cos(Î¸/2) ]T\n\n[18]\n\nA quaternion can be propagated over time if the satellite has a rotation rate Ï.\nAdditionally, a vector can be rotated from the reference frame to the body frame by using\na quaternion matrix Î:\n\nÎ(q) = (q4\n2 - qTq)I3x3 + 2qqT - 2q4[qx]\n\n[19]\n\nwhere I3x3 is the identity matrix. If quaternion rotations are known between different\nframes, such as arbitrary local references frames on satellites and Earth centered frames,\nthen a satellite's attitude can be found with respect to any of those frames.\n\nThe ACS information was interesting, but I would have enjoyed it more if it had a\nslightly different focus and went a little more in-depth in some parts of the subject. As\nmentioned in the section on orbits, I am interested in how satellites move in local frames.\nTied to this is how they orient themselves in these frames to keep a desired position. I\nhave done some work with quaternions, but never actually been taught them, and was\n\nhoping that they would be a part of the ACS presentation, instead of just a handout. Also,\nit would have been interesting to look a bit more at exactly how sensors can determine\nattitude movements. A good example of these issues is a satellite attempting to dock with\nanother; if it is dependent on a sensor to track the satellite it is docking with, it must\nmaintain an attitude so that its sensor can get detections, and may perform the docking\nmaneuver in a local frame.\n\nReferences used in this section include [1], [10], and [11] to [21]\n\nf.\nCommunications\n\nThe communications subsystem consists of how to design links between a satellite and\nthe ground. A digital satellite link is governed by the link equation:\n\nEb/No = (PLlGtLsLaGr)/(kTsR)\n\n[20]\n\nwhere Eb/No is the ratio of received energy-per-bit to noise density, P is the transmitter\npower, Ll is the transmitter to antenna line loss, Gt is the transmit antenna gain, Ls is the\nspace loss, La is the transmission path loss, Gr is the receive antenna gain, k is\nBoltzmann's constant, Ts is the system noise temperature, and R is the data rate.\n\nThe power received C at a ground antenna is:\n\nC = (PLlGtLaDr\n2Î·)/(16S2)\n\n[21]\n\nwhere P, Ll, Gt, and La are as described above, Dr is the radius of the receive antenna, Î· is\nthe antenna efficiency, and S is the distance from transmitter to receiver. The gain of the\nreceive antenna Gr is then:\n\nGr = (Ï2Dr\n2Î·)/Î»2\n\n[22]\n\nhere Î» is the wavelength of the transmitted signal.\n\nThe data rate R is a factor in determining how much data can be transmitted during\ncommunication. The total amount of data D a satellite can transmit to a ground station is:\n\nD = R(FTmax - Tinitiate)/M\n\n[23]\n\nwhere Tmax is the maximum time the satellite would be in view (that is, the satellite pass\nduration for a pass directly overhead), Tinitiate is the time required to initiate a\n\ncommunications pass, M is the margin used to account for missed passes, and F is the\nfractional reduction in viewing time due to a satellite passing at an angle away from the\nground station (not directly overhead). Individual passes can be examined if a\ncommunications system is modeled in STK. STK can calculate the access time between\na satellite and a ground station, which helps determine the actual amount of time a\nsatellite is in range of a ground station during each pass.\n\nTransmitting digital data has unique problems. Digital data is a series of bits of sampled\nanalog data; not all of the information is included but enough to reconstruct the original\nwaveform (if it is sampled at a rate of at least 2.2 times the original frequency). Often\nerrors occur in bits; additional data is often sent, such as in Viterbi Decoding, to account\nfor these errors. The data is also typically compressed, or encoded, so that not as much\ndata needs to be sent. Encoding methods include Huffman encoding, Run Length\nencoding, and Differential Pulse Code Modulation. Some methods of compression are\nlossless: when decompressed, all original data will be recovered. Other methods are\nlossy: all original data may not be recovered.\n\nThe text included many of the link equations, as well as how to design telescopes. The\nchapter was very technical, and did not explain everything fully. It seemed that actual\ntelescope design should have been separated from the discussion of how communication\nsystems work.\n\nI found the communications subsystem to be very confusing. It seemed to touch on many\nsubjects, from how to calculate what data can be transmitted, to how to design a\ntelescope, to general schemes for data encoding and compression. I think it would have\nmade more sense to give a high-level overview of how communications systems are used\nin satellite systems - and this would have been more along the lines of how the other\ntopics were covered. Although I am very interested in signal processing and methods for\ndata encoding, it seems that information is very detailed considering the scope of the\nclass. More basic communication needs could have been mentioned, such as when and\nwhy communication is done, and realistically how much data and how often\n\ncommunication can be made. I attempted to find more basic information to supplement\nthis section, but had trouble finding any information with the right balance between\ntechnical and general information, so I realize this topic is complicated and difficult to\ncover in a short period of time.\n\nReferences used in this section include [1], [22] and [23].\n\ng.\nSoftware and Automation\n\nSoftware is a complicated and largely debated topic in safety- and mission-critical\nsystems in general and in satellite systems in particular. Colonel Keesee's lecture\nfocused on the different parts of computer systems, and how safety features such as fault\ntolerance are handled. Kathryn Weiss discussed why software is hard to design, and\nmethods to possibly make it easier. Seung Chung explained ways to safely add\nautonomy in space systems.\n\nThe textbook focused on how to estimate computer needs and choose computer\ncomponents, and did not really discusses issues concerning actual software design.\n\nDesigning software is a much more difficult than most people realize. Different\nlanguages are applicable in different situations, but often choices are made based more on\ntrends. Adding to the problem is the variety of different backgrounds and experience\nlevels many software engineers on the same project may have, and the many COTS\ncomponents available.\n\nOne approach to improving software is to improve how requirements and specifications\nare done. Studies have shown that many perceived software errors can actually be traced\nto errors in specifications. These are often errors of omission (such as forgetting to\nspecify behavior for a certain error state) or not correctly specifying how COTS or older\nversion software fits with a design. While many of these errors do indicate systemic\nissues as well (such as being complacent about safety or just not having any one group in\ncharge of making sure all necessary issues are covered), a using a formal, executable\nspecification language can aid in creating a stable, 'safe' software system. One such\nmethod is called Intent Specifications. Intent Specifications is a way of specifying a\nsystem design (software or otherwise) that is executable (so that behavior can be checked\nat the specifications level). It was designed using cognitive psychology methods, so that\nthe program is easy to use and understand.\n\nAn alternative approach is to reduce the scope of the software system, and to provide\nmany usable methods of formally analyzing and testing software. The Gurkh project\n(part of which I'm working on for my thesis) aims to provide users with a complete\ndevelopment environment for real-time safety-critical systems. It supports the Ravenscar\nsubset of Ada. Ada has been shown in studies and through use to provide cheaper, safter,\nand more robust software systems. Using subsets of Ada, such as Ravenscar, has been a\nkey part in this; the subsets restrict the language in such a way that the software built\nbecomes fully deterministic and predictable. A system with these properties can be more\nthoroughly analyzed. The Gurkh project will provide a custom run-time kernel in VHDL\n(also more deterministic than a traditional software run-time kernel), tools for converting\nVHDL and Ada into formal models that can be analyzed with model checkers, and a\nVHDL component that monitors the system while its running to check for any missed\ndeadlines. Future extensions to the project include adding a way to model specifications,\nperhaps by using Intent Specifications or a different method, and then automatically\ngenerating Ada code from the specifications. When complete, the Gurkh project will\nenable users to create a deterministic software system that they can analyze with a variety\nof tools, and humans will removed from many stages of the design process, thereby\nreducing errors.\n\nReferences used in this section include [1], [24], [25], [26], [27], and [28].\n\nIII.\nReferences\n\nGeneral:\n\n[1] Wertz, Larson, Space Mission Analysis and Design, 3rd Edition, Space Technology\nLibrary, 1999.\n\nSTK:\n\n[2] www.stk.com\n\nOrbits:\n\n[3] Vallado, Fundamentals of Astrodynamics and Applications, 2nd Edition, Space\nTechnology Library, 2001.\n\n[4] Battin, An Introduction to the Mathematics and Methods of Astrodynamics, Revised\nEdition, AIAA Education Series, 1999.\n\nPower:\n\n[5] Jones, Spence, Spacecraft Solar Array Technology Trends, www.aec-\nable.com/corpinfo/Resources/PAJ-IEEE-98.pdf\n\n[6] www.qrg.northwestern.edu/projects/vss/docs/Power/zoom-possible-powers.html\n\n[7] Spacecraft Power Systems, Virginia Tech, mev.btg.cc/BTG-\nLibrary/files/space%20power.pdf\n\nEnvironment:\n\n[8] www.sec.noaa.gov/primer/primer.html\n\n[9] powerweb.grc.nasa.gov/pvsee/publications/seeov/seeov.html\n\nACS:\n\n[10] http://msp.gsfc.nasa.gov/tdrss/attitude.html\n\n[11] Ahronovich, Balling, \"Reaction Wheel and Drive Electronics For LeoStar Class\nSpace Vehicles\", 12th Annual USU Conference on Small Satellites, 1998,\nwww.sdl.usu.edu/conferences/smallsat/proceedings/12/ssc98/1/ssci5.pdf\n\n[12] Dynacon Enterprises Limited, \"Dynacon MicroWheel 200\",\nwww.dynacon.ca/pdf/files/productpdf_6.pdf\n\n[13] Honeywell Aerospace Electronic Systems, \"Constellation Series Reaction Wheels\",\nhttp://content.honeywell.com/dses/assets/datasheets/constellation_series_reaction_wheels\n.pdf\n\n[14] Honeywell Aerospace Electronic Systems, \"Miniature Reaction Wheels\",\nhttp://content.honeywell.com/dses/assets/datasheets/mini-wheel_reaction_wheel.pdf\n\n[15] Honeywell Aerospace Electronic Systems, \"Honeywell Model HR 0610 Reaction\nWheel\", http://content.honeywell.com/dses/assets/datasheets/hr0610_reaction_wheel.pdf\n\n[16] Teldix Space Product Group, \"Momentum and Reaction Wheels 14-68 Nms with\nexternal Wheel Drive Electronics\", http://www.teldix.de/P22/RDR23-68.pdf\n\n[17] Teldix Space Product Group, \"Momentum and Reaction Wheels 14-68 Nms with\nintegrated Wheel Drive Electronics\", http://www.teldix.de/P22/RSI25-68.pdf\n\n[18] Teldix Space Product Group, \"Momentum and Reaction Wheels 2-12 Nms with\nintegrated Wheel Drive Electronics\", http://www.teldix.de/P22/RSI4-12.pdf\n\n[19] Teldix Space Product Group, \"High motor torque Momentum and Reaction Wheels\n14-68 Nms with integrated Wheel Drive Electronics\", http://www.teldix.de/P22/RSI18-\n68.pdf\n\n[20] Teldix Space Product Group, \"Momentum and Reaction Wheels 0.04-0.12 Nms with\nintegrated Wheel Drive Electronics\", http://www.teldix.de/P22/RSI01.pdf\n\n[21] Teldix Space Product Group, \"Momentum and Reaction Wheels 0.2-1.6 Nms with\nintegrated Wheel Drive Electronics\", http://www.teldix.de/P22/RSI02.pdf\n\nCommunications:\n\n[22] http://ctd.grc.nasa.gov/rleonard/regcontents.html\n\n[23] http://www.wtec.org/loyola/satcom/toc.htm\n\nSoftware:\n\n[24] Leveson, \"Systemic Factors in Software-Related Spacecraft Accidents\", AIAA\nSpace 2001 Conference.\n\n[25] Leveson, \"Intent Specifications: An Approach to Building Human-Centered\nSpecifications\", Software Engineering, Volume 26, Number 1, 2000, pp 15-35.\n\n[26] Weiss, \"Component Based Systems Engineering for Autonomous Spacecraft\", MIT\nMasters Thesis, 2003.\n\n[27] Asplund, Lundqvist, \"The Gurkh Project: A Framework for Verification and\nExecution of Mission Critical Applications\", 22nd Digital Avionics Systems Conference,\n2003.\n\n[28] Silbovitz, Lundqvist, \"A Hardware Implementation of a Ravenscar-Compliant Run-\nTime Kernel\", 22nd Digital Avionics Systems Conference, 2003.\n\nThe following references were not mentioned in the previous chapters, but still\nprovided valuable information in completing problem sets:\n\nwww.astronautix.com\n\nTouloukian, Ho, Thermophysical Properties of Selected Aerospace Materials Part I:\nThermal Radiative Properties, Purdue Research, West Layfette IN, 1976\nBoyer, Gall, Metals Handbook, American Society for Metals, Metals Park OH, 1985\nMetals Reference Book, American Society for Metals 2nd Edition, 1983\nSala, Radiative Properties of Materials, Elsevier Science Publishers, New York, 1986\nMetals Handbook: Properties and Selection of Nonferrous Alloys and Pure Metals, 9th\nEdition Vol. 2, American Society for Metals, 1979\nHolman, Heat Transfer, McGraw-Hill, Inc, New York, 1997\nMiller, Lecture Notes: Cost Modeling, Massachusetts Institute of Technology, 16.851,\nWertz, Larson, Reducing Space Mission Cost, Space Technology Series, Space\nTechnology Library, Microcosm Press, Torrance CA, 1996.\nwww.me.poly.edu/hk/subject/me262/notes/chapt9.pdf"
    },
    {
      "category": "Resource",
      "title": "portfolio_nadir1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/533672f84f6c6e3054730b672d53c87b_portfolio_nadir1.pdf",
      "content": "16.851: Satellite Engineering\n\nPortfolio\n\nFall 2003\n\nBill Nadir\n\nTable of Contents\n________________________________________________\nLEARNING OBJECTIVES\nREFLECTIONS\nPROBLEM SET 1: POWER SYSTEM DESIGN AND TRADE STUDY FOR A\nSATELLITE KILLER SPACECRAFT\nPROBLEM SET 2: STUDY OF ORBITAL MINEFIELD FROM ROGUE STATE 13\nPROBLEM SET 3: DESIGN MODULE FOR A SPACECRAFT ATTITUDE\nCONTROL SYSTEM\nPROBLEM SET 4: EFFICIENT ORBIT TRANSFER: USE OF ELECTRIC\nPROPULSION FOR ORBIT RAISING\nPROBLEM SET 5: SPACE HOTEL DESIGN: PRELIMINARY STRUCTURAL\nDESIGN AND COST ESTIMATION\nPROBLEM SET 6: DESIGN OF AN ARTIFICIAL GRAVITY MARS MISSION 103\n\nLearning Objectives\nThe main objectives for my learning in Satellite Engineering were to do significant\nresearch on many spacecraft subsystems, learn how they work together, improve my\ntechnical writing skills, and improve my abilities to work in a group. Other learning\nobjectives included improving my research abilities and learning more about tradeoffs\nbetween various spacecraft subsystems. Finally, I desired to share my knowledge and\nexperience from working for the previous two years at Boeing Satellite Systems in El\nSegundo, CA with other students in the class to help them understand the \"real life\"\naspects about satellite engineering.\n\nReflections\nIn working on the various problem sets throughout the semester, I had the opportunity to\nperform in-depth research on a variety topics related to spacecraft engineering. I\nresearched topics such as lasers, space debris, how to support human life in space,\nattitude control systems, spacecraft shielding from radiation and debris, and cost\nmodeling. Before enrolling in 16.851, I had limited knowledge on these topics, but I now\nhave a more in-depth understanding of them.\n\nWorking in a different group for each problem set was a challenge, but it definitely paid-\noff in the end. I had the experience of working with new people every two weeks on a\nproject. This forced me and other students to meet new people and learn how to schedule\nmeetings, tasks, and delegate work under somewhat stressful circumstances. Friends\nwere made as a result of this process as well as other contacts which may be beneficial in\nthe future.\n\nI had intended to put many of my engineering skills learned while working at Boeing to\nuse in Satellite Engineering, but that turned out not to be the case. Other than using my\nCAD skills, many of my skills at structures and antenna design were not of any use in the\nproblem sets for this class.\n\nOverall, I learned a great deal about spacecraft systems engineering from 16.851 as well\nas gained valuable experience from the class. This portfolio contains the problem sets I\nwas involved in working on as well as a summation of the software modules created.\nFinally, this portfolio details useful references found during the researching phase of each\nproblem set.\n\nProblem Set 1: Power System Design and Trade Study\nfor a Satellite Killer Spacecraft\n\nSummary\nThe purpose of this problem set was to investigate the power system design trades\ninvolved in the engineering of a satellite designed to disable enemy satellites in Low\nEarth Orbit (LEO) using a laser. Based on the power requirements of the laser and the\nconstant power requirements for the remainder of the spacecraft, the solar arrays and\nbatteries for the spacecraft were sized.\n\nVarious laser firing scenarios and battery/solar array designs were investigated to see\nwhich power system design is the most mass efficient. The number of laser firings per\norbit was varied. Also, the possibility of only sending power to the laser from the\nbatteries versus generating enough power constantly from the solar cells such that no\nbattery power was required was investigated.\n\nResults\nAfter the analysis was complete, it was found that the optimal power system\nconfiguration was to draw 100% of the laser firing power from the batteries. In addition,\nit was determined that the lowest power system mass per laser firing was to fire the laser\nfour times per orbit rather than one or two firings.\n\nUseful References\nThis problem set involving only one spacecraft subsystem relied almost completely on\nSpace Mission Analysis and Design by Wertz and Larson. Chapters 10 and 11 were used\nextensively for battery sizing, solar cell sizing, and other power system design\nprocedures.\n\nPower System Design and Trade Study for a Satellite Killer Spacecraft\n\nNames withheld\nMassachusetts Institute of Technology, Cambridge, Massachusetts 02139\n\nA military \"Satellite Killer\" spacecraft is to be put into a Low Earth Orbit at an altitude of 600 km. It\nwill have an average power requirement of 600 W during daylight and eclipse. In action it should be able to\nfire a 10 kW laser at a target enemy satellite in a similar a LEO. It is to be operational for five years.\n\nFirst determine how the laser could be used to disable the target satellite. Next, investigate various\npower system designs that meet the requirements, taking into account the degradation of the system over\nmission duration. Compare different power system designs and options and choose one that realizes the best\ncompromise between the following factors: mass, and frequency of firings. Ignore orbit adjustment\nrequirements to maneuver the \"killer\" spacecraft within striking range of its target. Also, ignore any laser\nrefueling requirements and any laser tracking/pointing requirements.\n\nNomenclature\n\nACL\n= Solar array area required for charging\nbatteries with power to fire laser\nAPL\n= Solar array area required for powering\nlaser directly\nAsa\n= Solar array area required to power satellite\n(not including laser) for one full orbit\nAtar\n= Area of the target spotted by the laser\nCr\n= Required battery capacity\nCtar\n= Average calorific capacity of the target\nDOD = Battery depth-of-discharge\nEcl\n= Energy required from solar cells to charge\nup laser batteries between two firings\nElaser\n= Energy required to fire laser\netar\n= Thickness of the target spotted by the laser\nfE\n= Eclipse fraction\nh\n= Altitude of Satellite Killer spacecraft\nId\n= Inherent degradation of solar array\nLD\n= Lifetime degradation of solar array\nma\n= Solar array mass\nmbatt\n= Mass of batteries\nn\n= Transmission efficiency between batteries\nand laser (assumed to be 0.9)\nN\n= Number of batteries\nP\n= Orbital period\nPCL\n= Power output by solar arrays to charge\nbatteries used by laser\nPd\n= Average power required during \"day\"\nPe\n= Average power required during eclipse\nPlaser\n= Power of the laser\nP0\n= Solar array power output\nPsa\n= Required solar array power for average\nS/C power for one orbit\nR\n= Radius of Earth\ntc\n= Battery charging time\ntcl\n= Laser battery charging time\nTe\n= Eclipse time\nTd\n= Time the S/C is in the sun (\"day\" time)\ntf\n= Laser firing time\nXcl\n= Efficiency of electrical path from solar\narrays to batteries\nXe\n= Efficiency of electrical path from solar\narrays to batteries and to laser\nXd\n= Efficiency of electrical path from solar\narrays to laser\nâTtar\n= Temperature by which the target is heated\nup\nÎ¸\n= Angle of incidence of the sunbeams on the\nsolar cells\nÎ²\n= Angle between the sun and orbit plane\n(Beta angle)\nÎ¼\n= Gravitational constant * Earth's mass\n(constant = 3.986 x 105 km3/s2)\n\nIntroduction\n\nThis paper answers the above question by designing\nthe \"best\" power system for the Satellite Killer\nspacecraft. Our major assumptions are given in the\nquestion. Other assumptions are mentioned in the\ndocument as they are needed.\n\nThis solution is primarily concerned with designing\nthe power system for the Satellite Killer spacecraft.\nThe design of the laser and supporting hardware is\nnot the focus of this paper. However, an attempt was\nmade to make the laser data used in the design of the\npower system as realistic as possible.\n\nOur solution to the proposed question is that a power\nsystem comprised of solar arrays and batteries is the\nbest choice for the Satellite Killer. In addition, the\nmost efficient use of mass for this power system is\ndetermined. This directly influences the laser firing\nrate per orbit. A firing rate of 4 per orbit was found\nto be the most efficient use of the Satellite Killer,\nbased on our assumptions.\n\nUse of the Laser: General Considerations\n\nLasers are now commonly used in industry to cut\nmetals or other materials. To do so, the beam is\nfocused to create a tiny spot of a power density\ngreater than 100 kW/cm2. Such a power density\nrequires a focus on the target that cannot be achieved\nif the target is not close enough to the laser source.\nThis is not the case for the \"Satellite Killer\": it will\nbe shooting at its target from a much greater distance.\n\nThe laser would not be used to damage the target in\nthe way an industrial laser does. Instead, it will be\nused to heat up a larger portion of the target with a\nsmaller power density than the industrial application,\nbut over a much longer period of time. This is to be\ndescribed later in a more quantitative way.\n\nThe equation of heat transfer from the laser beam to\nthe target is the following:\n\ntar\ntar\ntar\ntar\nf\nlaser\ne\nA\nT\nC\nt\nP\nâ\n=\n\n(1)\n\nIt has been assumed here that all the power from the\nlaser source is transferred to the target. The loss of\nenergy of the target by radiation has also been\nignored, which will be justified by the value of Atar.\nCtar will be given equal to 1.6 MJ.K-1.m-3, which is\nthe average value for metals. In the next paragraph,\nwe will explain the choices that we have made for the\nvalues of âTtar, Atar and etar.\n\nQuantitative Design of the Laser\n\nThe aim of the firing is to heat up the target (or some\npart of it) by a sufficient temperature in order to\ndisable it. Hence, the spacecraft should shoot at the\ntarget as it is in daylight, when its temperature is at a\nmaximum. We will choose to heat it up by\nâTtar = 200oC. Typical solar cells have an upper limit\noperating temperature of around 100-120oC. The\ntemperature of the cells after the laser hits the target\nwill be nearly 200oC hotter than this upper\ntemperature limit. This should be enough to severely\ndamage some fragile parts of the solar array.\n\nIn order to hit a part of the target as wide as possible,\nthe diameter of the beam will be chosen equal to the\naverage width of the target, which is about 1.5\nmeters. This corresponds to Atar = 1.77 m2. This\ntarget size was determined by assuming the size of\nthe target satellite's solar array. The width of the\nrectangular-shaped array may be approximately\n1.5 m and several firings of the laser may be required\nto fully disable the target satellite's power source.\n\nNote that we will need an appropriate optical system\nadapted to the laser to create a 1.5 meter spot on the\ntarget; calculations of diffraction would show that we\nwould need a 60 cm lens to do so from 400 km away.\nThis lens diameter dramatically increases with the\ndistance to the target, which is the reason why the\nSatellite Killer and target satellite need to be in\nsimilar orbits. This allows the Satellite Killer to\nshoot at a relatively close range (less than 400 km).\n\nThe value of Atar also implies a power density of\n5,650 W/m2; this is much higher than the power\ndensity of natural radiation from the spacecraft. This\nvalue is given by Stephan-Boltzmann's equation, and\nwould be around 100 W/m2. Therefore, it is a correct\nassumption to ignore radiation cooling of the target in\nequation 1.\n\nAs for the value of etar, it has been chosen equal to\n1 cm. Since the beam would most likely be aimed at\na region of the target with a large surface area,\nperhaps at its solar arrays, one might think that etar\nshould be taken equal to the thickness of the solar\ncells. As a matter of fact, the duration of shooting\nthat is calculated later is not short enough to ignore\ncooling of the target solar array surface by\nconduction through the arrays structure. To take this\ninto account, we shall consider the actual thickness of\nthe solar arrays being heated up to be etar = 1 cm.\n\nFiring Energy Requirements\n\nNow that the values of the different parameters in\nequation 1 have been chosen, we can re-formulate\nthis equation to calculate the firing duration:\n\nlaser\ntar\ntar\ntar\ntar\nf\nP\ne\nA\nT\nC\nt\nâ\n=\n\n(2)\nwhich turns out to be equal to approximately 1 min.\nKnowing this figure, we are now able to determine\nthe total amount of energy required to fire the 10 kW\nlaser, Elaser:\n\n(3)\nf\nlaser\nlaser\nt\nP\nE\n=\n\nWe can infer from equation 3 that Elaser = 170 W.hr.\nThis value, along with the value of Plaser, is the key to\nthe design of the power system associated with the\nlaser.\n\nInvestigation of Solar Array and Battery\nPower Source\n\nThe first power system design to be studied is\ncomprised of solar arrays and batteries. For this\npower system design, the Sun is the primary power\nsource. Several sections to follow document the\ncalculations used to size the appropriate solar power\nsystem for the Satellite Killer spacecraft.\n\nCalculation of Eclipse Time\n\nThe first equation used in the calculation of the\neclipse time of the Satellite Killer spacecraft is the\neclipse fraction, shown in equation 4.\n\n(\n)\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ£\nâ¡\n+\n+\n=\n-\nÎ²\nÏ\ncos\ncos\nh\nR\nRh\nh\nf E\n(4)\n\nSince the maximum eclipse fraction is required for\nthis study, the beta angle, Î², is assumed to be equal to\nzero. The resultant equation can be seen in\nequation 5. The solution for the orbit of the Satellite\nKiller is shown in equation 6.\n\n(\n)\n(\n)\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ£\nâ¡\n+\n+\n=\n-\nh\nR\nRh\nh\nf E\ncos\nmax\nÏ\n(5)\n(\n)\n[\n]\n.\n.\ncos\nmax\n=\n=\n-\nÏ\nEf\n(6)\n\nOnce the eclipse fraction has been determined, the\norbital period, P, must be calculated. This is shown\nin equations 7 and 8.\n\ns\nr\na\nmotion\nmean\n.\n=\n=\n=\nÎ¼\nÎ¼\n(7)\nmin\n.\n=\n=\nmotion\nmean\nP\nÏ\n(8)\n\nNow that the orbital period and eclipse fractions have\nbeen found, the maximum eclipse period,\n, can\nbe calculated using the following equation.\nMAX\neT\n\n(\n)\nmin\n.\nmax =\n=\nE\ne\nf\nP\nT\nMAX\n(9)\n\nSelection of Solar Cell and Battery Types\n\nThe two major types of available solar cells are made\nof silicon (Si) and gallium arsenide (GaAs). For the\npurposes of this study, the GaAs solar cells have been\nchosen. The performance and degradation rate of the\nGaAs cells is significantly better than the Si cells.\nTable 1 below illustrates this.\n\nTable 1 Comparison of Si and GaAs Solar Cells\nCell\nType\nPerformance\n(W/m^2)\nDegradation per\nYear (%)\nSi\n3.75\nGaAs\n2.75\n\nThe decision about which battery to use was\nprimarily made by comparing the specific energy\ndensities of space-qualified secondary batteries.\nBased on the data shown in Table 2, nickel hydrogen\n(NiH2) batteries were chosen to be used for this\nspacecraft.\nTable 2 Battery comparison\nBattery Type\nSpecific Energy\nDensity (W*hr/kg)\nNickel cadmium\n25-30\nNickel hydrogen\n(individual\npressure vessel\ndesign)\n25-40\nNickel hydrogen\n(single pressure\nvessel design)\n43-57\n\nSolar Array Sizing for S/C Average\nPower Requirements\n\nThe solar arrays necessary to provide power for the\nentire spacecraft except the firing of the laser are\nsized in this section. The additional solar arrays\nneeded to power the laser are sized in a later section.\nThe solar arrays for the \"Satellite Killer\" are assumed\nto be of the deployed planar array type.\n\nA beginning-of-life (BOL) efficiency of the GaAs\nsolar arrays is assumed to be 0.18.1 The solar\nillumination intensity on the planar solar arrays is\nassumed to be 1358 W/m2. Also, the inherent\ndegradation of the solar cell power transfer is\nassumed to be a factor of 0.77. Therefore, the\nestimated BOL power output of the GaAs solar cells,\nP0, can be calculated. This is shown in equation 10.\n\n(\n)(\n)(\n)\n9.\n.0\n.0\nm\nW\nm\nW\np\n=\n=\n(10)\n\nWe then need to reduce the value of P0 because the\nangle of the radiation of the sun onto the solar panels\nis not perfectly normal. The following equation is\nused to make this correction.\n\n(\n)\n)\ncos(\nÎ¸\nd\nBOL\nI\np\np\n=\n(11)\n\nwhere p0 = 244 W/m2 for GaAs solar cells, Id = 0.77,\nand Î¸ = 20o (worst case), which gives us\n(p0)BOL = 177 W/m2.\n\nNow that the estimated BOL power output of the\nsolar cells has been determined, the required power\nthe solar array must provide during daylight to power\nthe spacecraft for an entire orbit can be found, Psa.\n\nd\nd\nd\nd\ne\ne\ne\nsa\nT\nX\nT\nP\nX\nT\nP\nP\nââ\nâ \nâ\nââ\nâ\nâ\n+\n=\n(12)\n\nA direct energy transfer power control system has\nbeen chosen for the purposes of this study, so the\nvalues of Xe and Xd are .065 and .085, respectively.1\nOnce the values for the required spacecraft power,\ntime of day, and time of eclipse are put into\nequation 11, the required solar array power is\ndetermined. This is shown in equation 13.\n\nW\nPsa\n=\n(13)\n\nThe solar cell lifetime degradation is required to\ndetermine the solar array area needed to provide the\nrequired power at EOL. This estimated degradation\nterm is calculated using equation 14.\n\n.\n)\n/\ndeg\n1(\n=\n-\n=\nlife\nsatellite\nd\nyr\nradation\nL\n(14)\n\nUsing the degradation term above, the EOL power\noutput of the solar cells can be determined. This is\nshown in equation 15.\n\n(\n)\n(\n)\nm\nW\nd\nBOL\nEOL\nL\np\np\n=\n=\n(15)\n\nNext, the EOL solar array area required for spacecraft\naverage power can be determined. This is shown\nbelow.\n\n(\n)\n(\n)\n1.8 m\np\nP\nA\nEOL\nsa\nEOL\nsa\n=\n=\n(16)\n\nTherefore, 8.1 m2 of solar cells are required to\nprovide 600 W of power to the spacecraft during\ndaytime and eclipse.\n\nThe mass of the planar solar arrays is estimated using\nequation 16.3 The resultant mass of the solar arrays\nfor the spacecraft average power requirements is\n49.6 kg.\n\n(\n)\nkg\nP\nM\nsa\navg\na\n6.\n.0\n=\n=\n(17)\n\nBattery Sizing for S/C Average Power\nRequirements\n\nA major assumption made for the battery sizing was\nthe EOL depth-of-discharge (DOD) of the batteries.\nThis value was assumed to be 38%. Also, a specific\nenergy density of 50 W.hr/kg for the NiH2 batteries is\nassumed for use in the battery sizing calculations (see\nTable 2).\n\nThe solution for the required battery capacity per\nbattery is shown below in equation 17. Note that the\nnumber of batteries, N, has been chosen to be 2 for\nredundancy.\n\n(\n)\nbattery\nhr\nW\nNn\nDOD\nT\nP\nC\ne\ne\nr\nâ\n=\n=\n7.\n(18)\n\nNext, the total mass of batteries required to power the\nspacecraft during eclipse can be determined. This is\nshown in the following equation.\n\nN\nC\nm\nkg\nhr\nW\nr\nbatt\nââ\nâ \nâ\nââ\nâ\nâ\n=\n*\n(19)\n\nIf the battery mass is solved using the required\nbattery capacity, Cr, the battery mass required to\npower the spacecraft during eclipse, is calculated to\nbe 20.74kg.\n\nSolar Array Sizing for Laser Firing\nPower Requirements\n\nThe Satellite Killer is located in such an orbit that it\nwill be in sunlight for approximately one hour per\norbit. Therefore, it is possible to charge the batteries\nto fire the laser once per orbit or perhaps several\ntimes per orbit. The faster the batteries can charge to\nthe energy level required for the laser, Elaser, the\nhigher the possible firing frequency of the laser. For\nthe purposes of this study, the charging times of 15,\n30, and 60 minutes were investigated. This would\nallow firing rates of 4, 2, and 1 per orbit,\nrespectively.\n\nTwo additional scenarios were studied to find the\noptimal combination of solar and battery power\nrequired to power the laser during firing. One\nscenario has 50% of the laser power source from\nbatteries (5 kW) and 50% (5 kW) directly from the\nsolar arrays. The third scenario has no power from\nbatteries and 100% (10 kW) of the laser power source\nfrom the solar arrays.\n\nIn the 100% battery scenario, the following equation\ngives the relation between the energy required by the\nlaser and the actual energy the solar arrays will have\nto deliver:\n\ncl\nlaser\ncl\nX\nE\nE\n=\n\n(20)\n\nwhere Xcl = 0.9. Hence, by expressing energy as the\nproduct of power by duration, we get the actual\npower requirement on the solar cells:\n\ncl\ncl\nf\nlaser\ncl\nt\nX\nt\nP\nP =\n\n(21)\n\nWe can then calculate the BOL power production\ncapability per unit area of the array:\n\n(\n)\n)\ncos(\nÎ¸\nd\nBOL\nI\np\np\n=\n\n(22)\n\nwhere p0 = 244 W/m2 for GaAs solar cells, Id = 0.77,\nand Î¸ = 20o (worst case), which gives us\n(p0)BOL = 177 W/m2.\n\nThen we get (p0)EOL by using equation 15. Based on\na five-year mission, (p0)EOL = 154 W/m2.\n\nNext, with the help of equation 21, the relation\nbetween the area Acl of solar arrays needed and the\ncharging duration tcl can be determined.\n\ncl\ncl\nEOL\nf\nlaser\ncl\nt\nX\nt\nP\nA\nÎ©\n=\n\n(23)\n\nA value is then chosen for Acl. This value depends\non the number of consecutive times the Satellite\nKiller can fire its laser during a an approximate\n60 min daylight period, as shown in Figure 1 (upper\ncurve).\n\nFigure 1 Relation between charging duration tcl\nand area of solar cells Acl, in regard of the firing\nfrequency\ntcl (in min)\nAcl (in m2)\nAcl-100% (in m2)\nAcl-50% (in m2)\n\nNote: to get the curve for the 50%-battery scenario\n(lower curve), Plaser has been divided by 2.\n\nBased on the information in Figure 1, the solar array\nareas required for the different scenarios and various\ncharging times are calculated. The area of the solar\narrays required to charge the batteries, ACL, and the\narea of the solar arrays required to provide direct\npower to the laser, APL, are determined. The values\nfor ACL were determined by using the curves in\nFigure 1. The resulting values are shown in Table 3.\n\nTable 3 shows that the 100% battery charging\nscenario requires significantly smaller solar arrays\nthan the other two scenarios for all three charging\ntimes. This is due to the fact that no solar power is\nrequired to directly power the laser. Only battery\npower is used.\n\nTable 3 Solar array areas for various charging\nscenarios\n% Battery\nPower / %\nSolar\nPower\nBattery\nCharge\nTime,\ntc (min)\nACL(m^2)\nAPL(m^2)\nTotal Area\nRequired\n(m^2)\n100 / 0\n6.66\n6.66\n100 / 0\n3.33\n3.33\n100 / 0\n1.67\n0.00\n1.67\n50 / 50\n3.33\n35.80\n50 / 50\n1.67\n34.14\n50 / 50\n0.83\n32.47\n33.30\n0 / 100\n64.95\n0 / 100\n64.95\n0 / 100\n64.95\n64.95\n\nNext, the masses of the solar arrays required for\ncharging the batteries are calculated. First, the power\noutput of these solar arrays must be determined. This\nis used using equation 24.\n\nc\nf\nL\nc\nlaser\nCL\nt\nt\nP\nt\nE\nP\n=\n=\n(24)\n\nFinally, the total masses of the solar arrays required\nfor three proposed scenarios are calculated using\nequation 17. The results are shown in Table 4. Note\nthat the masses calculated here are only for the\nportion of the solar arrays used to for laser power.\n\nTable 4 Total mass of solar arrays for powering\nlaser\n% Battery Power /\n% Solar Power\nBattery\nCharge\nTime, tc\n(min)\n(ma)laser\n(kg)\n100 / 0\n15.00\n29.63\n100 / 0\n30.00\n14.86\n100 / 0\n60.00\n7.41\n50 / 50\n15.00\n214.86\n50 / 50\n30.00\n207.41\n50 / 50\n60.00\n203.70\n0 / 100\n15.00\n400.00\n0 / 100\n30.00\n400.00\n0 / 100\n60.00\n400.00\n\nTable 4 shows that the 100% battery charging\nscenario requires significantly less mass than the\nother two scenarios for all three charging times.\n\nBattery Sizing for Laser Firing Power\nRequirements\n\nIn order to size the batteries for the various laser\nfiring power scenarios, the required battery capacity\nmust be determined. Equation 18 is used for these\ncalculations. In addition, the battery mass for each\nscenario is calculated using equation 19. Once again,\ntwo batteries have been chosen for this portion of the\nenergy storage (N=2). The results for these\ncalculations are shown below in Table 5. Note that\nthe masses calculated here are only for the portion of\nthe batteries used to power the laser.\n\nTable 5 Required battery capacities and battery\nmasses for various power storage scenarios\n% Battery\nPower / %\nSolar\nPower\nBattery\nCharge\nTime,\ntc (min)\nCr\n(W*hr/battery)\n(mbatt)L\n(kg)\n100 / 0\n15.00\n100 / 0\n30.00\n100 / 0\n60.00\n243.71\n9.75\n50 / 50\n15.00\n50 / 50\n30.00\n50 / 50\n60.00\n121.86\n4.87\n0 / 100\n15.00\n0 / 100\n30.00\n0 / 100\n60.00\n0.00\n0.00\n\nAs seen in Table 5, a significant savings in battery\nmass is achieved by using solar arrays for a portion\nor all of the laser power required to fire.\n\nSolar Power System Design Options\n\nNow that the calculations have been made for the\nvarious solar power system design options, the\nvarious designs can be compared. Mass is an\nimportant quantity to compare for space applications.\nTable 6 below compares the total masses of the solar\npower system design options considered in this study.\n\nTable 6 Mass comparison of solar power system\ndesigns\n% Battery\nPower / %\nSolar\nPower\nBattery\nCharge\nTime,\ntc (min)\nTotal\nSolar\nArray\nMass\n(kg)\nTotal\nBattery\nMass\n(kg)\nArray\nand\nBattery\nMass\n(kg)\n100 / 0\n15.00\n79.23\n109.72\n100 / 0\n30.00\n64.46\n94.95\n100 / 0\n60.00\n57.01\n30.49\n87.50\n50 / 50\n15.00\n264.46\n290.07\n50 / 50\n30.00\n257.01\n282.62\n50 / 50\n60.00\n253.30\n25.61\n278.91\n0 / 100\n15.00\n449.60\n470.34\n0 / 100\n30.00\n449.60\n470.34\n0 / 100\n60.00\n449.60\n20.74\n470.34\n\nFrom Table 6, it is shown that the solar power system\ndesigns which use only battery power to power the\nlaser for firing require significantly less mass than the\nother options.\n\nIn addition, the 50%/50% and 0%/100% options are\nimpractical because they require extremely large\nsolar arrays to generate the constant power needed\nfor the laser. Table 3 shows those scenarios requiring\nover 30 and 60 m2 of solar array area, respectively.\nFor a relatively \"small\" spacecraft like the Satellite\nKiller, those large array sizes would be difficult to\nincorporate into the spacecraft design.\n\nOther Power System Design Options\n\nThe other major types of power systems to choose\nfrom are: nuclear reactors, radioisotope thermo-\nelectric generators (RTGs), and solar thermal\ndynamic power systems.\n\nNuclear reactors typically provide large amounts of\npower (>25 kW) which is more than is required for\nthe Satellite Killer. The excess energy produced by\nthe reactor would need to be dissipated by using large\nthermal radiators. This is unnecessary. In addition,\nnuclear reactors would be an unpopular idea for\nmany people on Earth. People would be afraid of\nhaving a nuclear reactor flying overhead in LEO.\nThey would be worried what about the possible\nconsequences\nif\nthe\nspacecraft\nreentered\nthe\natmosphere with radioactive material onboard. This\nproblem may be avoided, however, if the satellite\nwere a classified military satellites shrouded in\nsecrecy. Therefore, nuclear reactors should not be\nused for the power source on the \"Satellite Killer\"\nspacecraft.\n\nRadioisotope thermoelectric generators (RTGs), a\nsecond alternative to the solar power source for the\nSatellite Killer spacecraft, are not good power\nsources for some of the same reasons as the nuclear\nreactor. People would be worried about having\nradioactive material orbiting in LEO. In addition,\nRTGs are much more expensive than both nuclear\nreactors and solar power systems by nearly a factor\nof 6.4\n\nA solar thermal dynamic power system is another\noption to power the Satellite Killer. However, this\ntype of power system is more suited to interplanetary\nmissions. Since our satellite will \"see\" the same\namount of sun after every orbit, a simple solar array\nand battery system should be necessary. A dynamic\npower system is much more complex system\ninvolving heat exchangers and possibly even a\nnuclear reactor. Therefore, a solar thermal dynamic\npower system is not recommended to power the\nSatellite Killer spacecraft.\n\nConclusion\n\nBased on the sizing done for a solar array and battery\npower system for the Satellite Killer spacecraft and\nthe lack of other reasonable power system options,\nthe \"best\" power system to be used is a solar array\nand battery system.\n\nAs seen in Table 6, the \"best\" solar power system\ndesign would be one in which all of the laser power\nrequired to fire would come from charged-up\nbatteries (100%/0% scenario). The mass savings\nmakes this design attractive. However, an additional\npower system design choice needs to be made. The\nnumber of laser firings per orbit will vary with the\nrequired battery charging time. The charging times\nof 15, 30, and 60 minutes were investigated. Based\non these charging times and since the spacecraft will\nbe in sunlight for approximately one hour per orbit,\nthe satellite has the option of firing the laser one, two,\nor four times per orbit. The \"best\" design will be\nchosen by calculating the power system mass divided\nby the number of possible firings. The results are\nshown in Table 7.\n\nTable 7 Mass per laser firing results\n\n%\nBattery\nPower /\n%\nSolar\nPower\nBattery\nCharge\nTime,\ntc (min)\nFirings\nper\nOrbit\nArray\nand\nBattery\nMass\n(kg)\nMass\nper\nFiring\n(kg)\n100 / 0\n109.72\n27.43\n100 / 0\n94.95\n47.48\n100 / 0\n87.5\n87.50\nTable 7 shows that power system mass is used most\nefficiently if the battery charging time is 15 minutes,\nresulting in four possible laser firings per orbit. This\nis the most efficient design by nearly factors of 2\nand 4 over the second and third options in the table,\nrespectively.\n\nReferences\n\n1Larson, W. and Wertz, J., Space Mission Analysis\nand Design, 2nd Ed., p. 396, paragraph 5\n\n2Larson, W. and Wertz, J., Space Mission Analysis\nand Design, 2nd Ed., p. 404, fig. 11\n\n3Larson, W. and Wertz, J., Space Mission Analysis\nand Design, 2nd Ed., p. 317, eq. 10-11\n\n4Larson, W. and Wertz, J., Space Mission Analysis\nand Design, 2nd Ed., p. 393, Table 11-32\n\nProblem Set 2: Study of Orbital Minefield from Rogue\nState\n\nSummary\nThe increasing dependence of the United States on space assets expressed the need to\ninvestigate the feasibility of a rogue nation of damaging or disabling US space assets in\nLow Earth Orbit (LEO).\n\nThis problem set first involved researching what satellites are in LEO and where they\nwere located. A likely launch vehicle to be used for such an attack was chosen, mines\nwere selected, a mind dispersal device was designed, and software was developed to\npredict the orbit of the minefield and how it changes over time. Finally, several attack\nscenarios were investigated to determine the effectiveness of the minefield against\ncurrent LEO targets.\n\nResults\nOnce the launch vehicle was selected, the type of mine to use was determined. This\nselection process was driven by mine size and mine mass. It was desired to have a mine\nlarge enough to penetrate existing spacecraft shielding but at the same time be fairly\nlightweight. In addition, we desired that the mines be commercially available and\ntherefore easy for terrorists to obtain. We settled on BBs as the mines of choice for this\nexercise.\n\nThe mine dispersal device (MDD) was basically a simple structure containing millions of\nBBs packed around explosives. The amount of explosives required was determined by\nspecifying the initial velocities of the particles after the detonation.\n\nNext, MATLAB code was written to determine how the orbit of the mines changes over\ntime depending on the location of detonation of the minefield. Atmospheric drag was\nconsidered in these calculations.\n\nThree attack scenarios were investigated for this project. First, an attack on Iridium\nsatellites was investigated. It was found that we had a 10% chance of hitting a critical\nzone on an Iridium satellite within the first 30 days after detonation and 85% after 2 years\nin orbit.\n\nThe attack on all LEO satellites was the next attack scenario. This was accomplished by\ndetonating the MDD over the equator. The precession of the longitude of the ascending\nnode allowed the minefield to spread out enough to surround the Earth. Probabilities of\n3.1% and 4.3% over one and two years, respectively, were determined to be the\nlikelihood of a mine impacting a satellite in LEO.\n\nThe final attack scenario was an attack on the International Space Station. It was found\nthat our \"shotgun blast\" of mines would likely hit the space station within the first day of\ndetonation, but the probability of hitting a critical system was only about 10%. However,\nthis would likely be too great of a threat to maintain humans on the space station if this\nscenario was likely to happen.\n\nUseful References\nLaunch Vehicles\nIsakowitz, Steven J., International Reference Guide to Space Launch Systems, 3rd Ed.,\nAIAA, 1999.\n\nThis reference is the complete guide to all launch vehicles. It contains specifications of\neach launch vehicle and as much detail as you will find anywhere.\n\nOrbital Debris\nMilne, Antony, Sky Static, Praeger, 2002,\nJohnson, Nicholas L., Artificial Space Debris, Krieger Publishing Co., 1991,\nGraves, R., Space Station Meteoroid and Orbital Debris Survivability, AIAA-2002-1607\n\nThese references are useful for researching orbital debris, and the current and future\nmethods being employed to protecting manned and unmanned spacecraft from orbital\ndebris.\n\nOrbital Mechanics\nBate, R., Mueller, D., and White, J., Fundamentals of Astrodynamics, Dover\nPublications, Inc., New York.\nBattin, Richard. An Introduction to the Mathematics and Methods of Atsrodynamics,\nRevised Edition.,AIAA, Reston, VA. 1999.\nChobotov, Vladimir A. (editor), Orbital Mechanics, Third Edition, AIAA Educational\nSeries, Reston, VA, 2002.\n\nStudy of Orbital Minefield from Rogue State\nFeasibility Analysis and Defense Mechanisms\n\n16.851 Satellite Engineering\n\nMassachusetts Institute of Technology, Cambridge, MA\nOctober 2003\n\nMotivation\nSince 2001, the Pentagon has warned that reliance on\nspace technology is America's Achilles heel. Countries\nsuch as China and Russia are known to have programs\nunderway to develop \"means to disrupt, degrade, or\ndefeat portions of the U.S. space support system.\"1\n\nTo this day, orbital debris has been mostly a nuisance to\nU.S. space assets. However, it may be possible for an\nenemy of the United States to develop a method of\nsignificantly damaging space assets by intentionally\ninjecting a debris field into orbit. Understanding how\nsuch a debris field could be created and how it would\naffect space assets is a necessary and vital task.\n\nProblem Statement\nStudy the threat of a rogue state \"mining\" low-Earth\norbit (LEO) by utilizing one Delta IV Medium+\nequivalent launch vehicle (near equivalent to China's\nLong March CZ3B).\n\nIntroduction\nOrbital debris has been a growing nuisance for the\nspace community ever since man began launching\nobjects into space in the mid-20th century. Increasingly,\norbital debris is taken into consideration when a\nsatellite is designed. Mission planners specify\nrequirements for the satellite to be able to survive a\ncertain size and frequency of debris impacts. The\ndesign impact of orbital debris has been minimized due\nto engineering efforts.\n\nThe purpose of this study is to determine if it is feasible\nfor a foreign nation to deliberately create an orbital\ndebris field in LEO with the intention of severely\ndamaging US space assets. This may be a method for a\nforeign nation to try to gain ground on the lead the\nUnited States currently has in the area of space assets\nand technology.\n\nSignificant investigation is made to determine an\napproach that would effectively \"mine\" LEO. The\nmines chosen for the purposes of this study are off-the-\nshelf, inexpensive BBs. The mines are dispersed in\norbit by launching a Mine Dispersal Device (MDD),\nwhich deploys the mines at the required orbital\nlocation. The mines are launched into a retrograde orbit\nso their relative velocity with respect to their target is\nroughly twice the circular speed at the target altitude.\nIn LEO, that means a relative velocity of approximately\n15 km/s.\n\nThere are hundreds of vulnerable satellites in LEO that\nare within striking distance of the MDD. The\nInternational\nSpace\nStation,\nthe\nHubble\nSpace\nTelescope, and the Space Shuttle are several high-\nprofile targets to be found in LEO. Several\ncommunications constellations orbit in LEO as well.\nIridium and Orbcomm inhabit the higher regions of\nLEO around 800km in altitude. There are also many\nweather and research satellites orbiting in LEO.\nFigures 1 and 2 are a survey of the altitudes and\ninclinations of satellites in LEO, based on current\norbital elements from the Satellite Toolkit (STK).\n\nMean Altitude (km)\nNumber of spacecraft\nAltitude survey\n\nFigure 1 LEO S/C altitude survey\n\nInclination (deg)\nNumber of spacecraft\nInclination survey\n\nFigure 2 LEO S/C inclination survey\nFigures 1 shows that most LEO satellites are orbiting\nbetween 750 and 850 km altitude. Figure 2 shows that\nmost of these same satellites have inclinations around\n90 (polar) to 97 (sun-synchronous) degrees. There are\nalso a significant number of satellites orbiting at around\n50 degrees inclination.\n\nThree \"attack scenarios\" are investigated in this study.\nFirst, an attack on a group of polar-orbiting spacecraft\nis investigated. Next, an attack on nearly all LEO\nspacecraft is formulated. Finally, a method of attacking\nthe International Space Station (ISS) is studied.\n\nMethods to defeat or neutralize the enemy minefield are\nexamined. Effectiveness of current spacecraft shielding\nand possible use of current technology to provide\nadditional protection when required are investigated for\ntheir effectiveness against the minefield.\n\nLaunch Vehicle Selection\nA Delta IV Medium+ (5, 4) launch vehicle was selected\nfor the purposes of this study. This vehicle was\nselected based on its similarity of launch capability to\nthe Chinese-built Long March CZ3B launch vehicle. It\nwas assumed that launch vehicle data would be easier\nto obtain for a US-built launch vehicle as opposed to a\nChinese-built launch vehicle. Both launch vehicles\nhave the same payload capability of 13,600 kg for a 185\nkm altitude, 28.5 degree inclination, circular orbit.\nTherefore, the Delta IV Medium+ (5, 4) launch vehicle\nis used throughout the rest of this paper in place of the\nLong March CZ3B.\n\nTable 1 shows the Delta IV Medium+ (5, 4) launch\nvehicle payload mass capabilities for the three attack\nscenarios covered in this study.\n\nTable 1 Delta IVM+ payload capabilities2\nAttack\nScenario\nAltitude\n(km)\nInclination\n(deg)\nPayload\nCapability\n(kg)\nISS\n51.6\nIridium/Other\n90.0\n\nPlease note that the launch to attack the ISS is a\nretrograde launch. This means the launch vehicle will\nbe placed into an inclination of 128.4 degrees. Since no\ndata has been provided by the launch vehicle\nmanufacturer about the retrograde launch capability of\ntheir launch vehicle, and launch vehicle calculations are\noutside the scope of this paper, it will be assumed that\nthe launch capability to a retrograde orbit to attack the\nISS will be roughly half that of the capability to a polar\norbit (10,000kg). This results in a retrograde capability\nof 5,000 kg as seen in Table 1.\n\nTable 2 shows the payload volume capabilities for the\ntwo types of fairings used on Delta IVM+ launch\nvehicles.\n\nTable 2 Delta IVM+ fairing volume options3\nFairing Type\nAvailable\nPayload\nVolume (m3)\n4-meter dia.\n75.0\n5-meter dia.\n270.6\n\nBased on the information provided for the Delta IV\nMedium+ (5,4) launch vehicle, the capability of the\nvehicle to deliver mines could now be determined.\n\nMine Selection\nA major factor in the selection of mines to be used in\nthis study was the availability of mine materials. In\nother words, the mines could be easily procured by a\nrogue state. Therefore, it was decided to use simple,\noff-the-shelf objects to launch into orbit to act as mines.\nThe objects used for this study are spherical, 6mm\ndiameter, 0.2 gram, metallic BBs.\n\nMine Effectiveness\nThe size of the BBs was determined by two constraints.\nFirst, the mines must be undetectable from ground\ntracking stations. It is known that \"pieces of space\ndebris that are larger than 10cm ... present no problem\nbecause they can be observed from the ground and the\ncrew can take avoiding action.\"4 Since the BBs used as\nmines for this study are less than 10 cm in diameter, the\n\nminefield created would be undetectable from any\ncurrent ground tracking station. Next, the mines must\nimpact the target with enough energy to damage or\ndestroy it. The benchmark used in this study to\ndetermine if the mine can damage or destroy the target\nis if it can penetrate solid aluminum to a depth of\napproximately 1cm. This number was chosen because\nmost spacecraft structures are made of aluminum and\nwill have an outer wall of a thickness much less than\none centimeter, so the mine will penetrate the satellite\nand cause internal damage. In order to determine the\napproximate penetration depth of the mines, the\nSummer equation is used.5 This equation is shown\nbelow.\n\n/\n/\n.2\n\n=\nc\nV\nd\nP\nT\nP\nÏ\nÏ\n\n(1)\n\nIn Equation 1, P is the penetration depth, d is the\ndiameter of the orbital debris object, ÏP is the density of\nthe orbital debris object, ÏT is the density of the target\nmaterial, V is the relative velocity of the debris, and c is\nthe speed of sound in the target material (5.1x106 for\naluminum). Solving for the penetration depth, it is\nfound that the BBs selected for the minefield in this\npaper can penetrate solid aluminum to a depth of 1.6\ncm. This exceeds the benchmark of 1 cm and therefore\nthese mines are capable of damaging or destroying the\ntarget. However, the Summer equation used here may\nbe very conservative. \"NASA found that a piece of\naluminum debris less than 1 mm had smashed through\nan aluminum wall 2.5 cm thick.\"6\n\nOne important consequence of using spherical-shaped\nobjects as mines is the ability to pack them inside the\nlaunch vehicle. When spheres are packed together as\ndensely as possible, some void will remain. The\nremaining void issue has been addressed in the Kepler\nProblem. According to Kepler, the densest packing of\nspheres possible is 74.048% of a given volume.7\n\nMine Dispersal Device (MDD)\nThe purpose of the MDD is to contain explosives and\nmines, fit inside the required launch vehicle fairing,\nsurvive launch, and detonate the explosives at a\nspecified location in orbit to deploy its payload of\nmines.\n\nThe MDD has three main components. First, it has a\nstructure which contains the payload and mates with the\npayload adapter of the launch vehicle. Second, the\nstructure of the MDD contains millions of BBs being\nused as mines. Third, a core of explosives is in the\nMDD at the core of the mines. Based on the fact that\nthe 4-meter diameter launch vehicle fairing can contain\napproximately 491 million BBs and no more than 50\nmillion BBs are used in any of the attack scenarios in\nthis paper, it is clear that the fairing can easily\naccommodate the required MDD volume.\n\nThe fact that only a small portion of the fairing volume\nis being used for the MDD demonstrates that mass\nlimits the size of the MDD to a much greater extent\nthan fairing volume. Although only a small fraction of\nthe available fairing volume is being used for the MDD,\nthe MDD maximizes the mass launch capability of the\nlaunch vehicle selected for this study.\n\nThe structure of the MDD will most likely be a\nlightweight sack or tube which will only be required to\nkeep the mines and explosives together until detonation.\nThe detailed design of the MDD canister is left as\nfuture work. Being so lightweight, the mass of the\nstructure of the MDD is assumed to be insignificant\ncompared to the overall total mass of the MDD. This\nstructural mass will be neglected for the remainder of\nthis paper.\n\nThe mines are packed around a core of explosives\nwhich detonate in orbit to induce the scattering of the\nmines. This scattering allows the mines to spread out\nquickly and become a hazard to a large volume of space\nin LEO. The amount of explosives to be used depends\non the number of mines in the MDD. While the actual\ndesign of the explosive device is also left as future\nwork, energy equations are used to approximate how\nmuch explosive to use for each attack scenario. The\nchemical energy in TNT is equated to the kinetic\nenergy imparted on the mines. Equation 2 below is the\nmain equation used for this calculation.\n\nTNT\nTNT\nO\nm\nE\nm\nv\nm\n=\n\n(2)\n\nHere v0 is the initial velocity, mm is the mass of the\nmines, mTNT is the mass of the explosive, and ETNT is the\nspecific energy of the explosive. The initial velocity,\nv0, chosen to impart on each mine is 300 ft/s. This\nnumber was chosen because it is a 1-sigma\nrepresentation of the approximate speed of a bullet fired\nfrom a gun, 900 ft/s. This guarantees that 3-sigma, or\n99.73% of the mines will have initial velocities less\nthan 900 ft/s. Knowing the energy stored in TNT is\n4.689 MJ/kg and the number of mines to be used in\neach attack scenario, the mass of TNT required can be\ndetermined. The results are shown below in Table 3.\n\nTable 3 TNT mass required for attack scenarios\nAttack\nScenario\nNumber\nof Mines\n(x106)\nMass of\nMines\n(kg)\nRequired\nTNT\nMass\n(kg)\n1 and 2\n8.9\n4.5\n\nAs can be seen from Table 3, the mass of TNT required\nis insignificant compared to the total weight of the\nMDD shown in Table 1. For the purposes of this study,\nthe mass of explosives will be neglected for the\nremainder of this paper.\n\nAttack Scenario #1: Iridium Satellites\nThe Iridium satellite constellation is used primarily by\nthe US military and the Department of Defense for\nglobal telephone communications. The satellites in this\nconstellation are located in polar orbits and at 780 km\naltitude.8\n\nIridium satellites were picked as a target because they\nare well-known and are a good example of a type of\nsatellite a rogue nation may want to destroy in LEO.\nThere are many other satellites in similar orbits such as\nLandsat, ICEsat, and Orbcomm. These satellites are\nused for research, communications, and other purposes.\n\nTarget Size\nIn order to find the size of the target to strike, a crude\nestimation of the size of the Iridium satellite bus was\nmade from pictures found of the satellite.9 This\nestimation showed that one side of the triangular-\nshaped Iridium bus had an area of 2.58 m2. However, a\nstrike inside this area will not necessarily hit vital\ncomponents of the spacecraft that would disable or\ndestroy it. Therefore, the assumption is made that\nroughly 50% of the total area of the side of the Iridium\nbus is protecting vital, mission-critical components.\nThus, components such as batteries, fuel tanks,\ncomputers, and ACS are assumed to fill an area of\nabout 1.29 m2.\n\nAttack a Polar Orbit (Iridium)\nThe MDD is used in this attack scenario to pose a\nserious threat to polar orbiting satellites in one specific\npolar orbit. An Iridium satellite is located in such an\norbit. The minefield will also pose a smaller threat to\nother orbiting spacecraft which intersect the orbit of the\nminefield.\n\nThe launch capability of the Delta IV Medium+ (5, 4)\nlaunch vehicle is 10000 kg to a 780 km circular, polar\norbit.10 Therefore, it is possible to pack 50 million\nmines into the launch vehicle. Please note that all\nfigures generated using MATLAB only display 10,000\nmines. This allows the Matlab figures to clearly display\nthe distribution of the minefield in orbit. All numerical\nresults use the actual number of mines.\n\nThe MDD is launched into a retrograde orbit in order to\nmaximize the relative velocities of the mines and target.\nSince this attack involves launching into a polar\nretrograde orbit, there is no impact on the payload\ncapability of the launch vehicle.\n\nThe MDD is detonated over the North or South Pole to\nresult in a \"ring\" shape of mines focused on the target\npolar orbit. With the MDD detonation at the pole, the\ninclination angle of every particle is 90 degrees,\nregardless of initial conditions. Thus, even though the\nargument of periapse does change, the longitude of the\nascending node is constant (see Equation 24). This\nprevents the mines from spreading out to completely\nencapsulate the Earth.\n\nMinefield After 30 Days\nFigure 3 shows the distribution of mines in orbit 30\ndays after being detonated over one of the poles. Please\nnote that the black circle in the figure shows the\ntargeted orbit for this attack scenario.\n\nFigure 3 Minefield after 30 days\n\nIt can be seen in Figure 3 that the mines have spread out\nto completely fill the targeted polar orbit. Also note the\n\"necking\" effect at the top and bottom of the plot.\nThose locations are the North and South poles. The\nmines do not appear to be spreading out much at those\nlocations because the precession of the argument of\nperiapse has no visible effect in polar orbits. The\n\"amount\" of spreading out of the mines through various\norbit altitudes can be seen in Figure 4, below.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 4 Semi-major axes of mines after 30 days\n\nIn addition to the initial dispersal of mines from the\nMDD detonation, a major contributor to the spreading\nout of the mines through various altitudes is\natmospheric drag (see Equation 26). Even after 30 days,\nsome mines have moved to orbits around 500km in\naltitude. In fact, 5% of the mines have reentered the\nEarth's atmosphere at this point.\n\nDespite the initial change in velocity caused by the\nexplosion, the orbits of the mines are still largely\ncircular. This is typical of all of the scenarios presented\nin this report, and can be seen in Figure 5 for the\npresent case.\n\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.1\nFinal eccentricity\nNumber of particles\nFinal eccentricity (due to initial dispersion)\n\nFigure 5 Eccentricities of mines after 30 days\n\nThe equation to determine the probability of impacting\nthe target (Equation 29) requires the spatial density of\nthe orbital debris. The spatial density has a major\nimpact on the probability of striking the target. In order\nto achieve realistic probability numbers, the volume of\nthe disk used to determine the spatial density of the\nminefield was refined from the total volume to a 3-\nsigma volume (refer to software description for details).\nThis 3-sigma volume contains approximately 99.73%\nof all particles in the minefield. The following three\nfigures show the difference between the total minefield\nvolume and the 3-sigma volume. The outer, red curves\ndenote the total volume limits and the inner, blue curves\ndenote the 3-sigma volume limits.\n\nFigure 6 Isometric view of minefield disk volume\nlimits\n\nFigure 7 Side view of minefield disk volume limits\n\nFigure 8 Front view of minefield disk volume limits\n\nIt can be seen from Figures 6, 7, and 8 that the\ndifference between the total and 3-sigma volumes is\nquite significant. Since only a small percentage of\nmines are present outside the 3-sigma volume, it much\nmore realistic to use the 3-sigma volume for the\nprobability calculations.\n\nThe probability that the targeted Iridium satellite will\nsuffer a critical hit during the first 30 days of the\ndeployment of the minefield is shown in Table 4 below.\nPlease note that the out-of-plane probabilities are for\ntarget satellites not in the target orbit but are in other\ncircular orbits which intersect the minefield.\n\nTable 4 Probabilities of impacting target satellite\nafter 30 days\nType of Probability\nProbability\n(%)\nIn Plane, 3-sigma STD\nVolume\n9.7\nIn Plane, Total Volume\n3.5\nOut of Plane, 3-sigma\nSTD Volume\n0.2\nOut of Plane, Total\nVolume\n0.1\n\nAlthough the probabilities of impact may seem low,\nthis is the percentage of all satellites in the path of the\nminefield of being critically impacted by a mine. Even\na 9.7% probability could result in the destruction of a\nnumber\nof\nsatellites\nwithin\na\n30-day\nperiod.\nAdditionally, this is a statistic for only thirty days, and\nit will be shown that the minefield will survive for\nsignificantly longer than this.\n\nMinefield After 2 Years\nThe distribution of minefield particles can be seen\nbelow in Figure 9. Please note that the black circle in\nthe figure shows the targeted orbit for this attack\nscenario.\n\nFigure 9 Minefield after 2 years\n\nThe minefield after two years looks similar to the\npicture in Figure 3 of the minefield after 30 days.\nHowever, there are significant differences. First, the\nnumber of particles shown in Figure 9 is significantly\nless than that of Figure 3. In fact, 51.5% of the 50\nmillion mines have reentered the Earth's atmosphere at\nthis point. The second major difference is that the\naltitudes of the remaining mines have dropped\ndramatically closer to the Earth's surface due to drag.\nThe altitudes of the minefield particles after 2 years in\norbit can be seen below in Figure 10.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 10 Semi-major axes of mines after 2 years\n\nFigure 10 shows the mines have dropped in altitude\nsignificantly during 2 years in orbit. Atmospheric drag\nhas been slowly destroying the minefield over time.\n\nThe probability that the targeted Iridium satellite will\nsuffer a critical hit during the first 2 years of the\ndeployment of the minefield is shown in Table 5 below.\n\nTable 5 Probabilities of impact through 2 years\nType of\nProbability\nProbability\n(%)\nIn Plane, 3-\nsigma STD\nVolume\n85.2\nIn Plane, Total\nVolume\n51.9\nOut of Plane, 3-\nsigma STD\nVolume\n1.3\nOut of Plane,\nTotal Volume\n1.5\n\nTable 5 shows that the probability of impact over a long\ntime period such as 2 years significantly increases the\nchances of striking a target spacecraft in the minefield.\nTheoretically, 85% of all satellites inside the minefield\ncould be disabled or destroyed within two years of the\nminefield being deployed. Note also that, as the\naltitude of the minefield is lowered by atmospheric\ndrag, it passes through the less densely populated\nportions\nof\nLEO,\npotentially\ndamaging\nthat\ninfrastructure as well.\n\nMinefield Effectiveness Over Time\nFigure 11 below displays the probability of a critical\nstrike on the targeted Iridium satellite over time. The\nprobabilities in the following figure were calculated\nusing time steps of 30 days. This means that each\nprobability in the plot at a given indicates the\nprobability of strike if a spacecraft were in that\nminefield for 30 days. This time step was chosen due\nto the long minefield duration. Please note that the y-\naxis values are decimal probabilities, not percentages.\n\nFigure 11 Critical impact probability vs. time\n\nFigure 11 clearly shows that the minefield used to\nattack the Iridium satellite will present a significant\nthreat until approximately 700 days in orbit. By the end\nof the 2nd year in orbit, the minefield's 30-day\nprobability of striking a satellite has decreased\ndramatically.\n\nIt can also be seen in Figure 11 that the probability of a\ncritical strike appears to increase slightly over the 1st\nyear in orbit before the probability begins to decrease.\nThis is caused by the method in which the 3-sigma\nvolume in calculated; after a few months the lowest\nparticles have been removed by the atmosphere while\nthe upper particles have moved very little, causing the\ncalculated volume to decrease and thus the apparent\ndensity to increase. There comes a point after around 1\nyear when the minefield has decayed in altitude too\nmuch to remain as much of a threat as it was during the\nfirst year in orbit.\nAttack Scenario #2: All LEO Satellites\nThis attack scenario is similar to the previous scenario\nexcept the MDD is detonated over the equator. This\ndetonation point allows for the spreading of the\nminefield throughout the target orbit altitude around the\nEarth. Since every particle no longer has an inclination\nof 90 degrees, as seen in Figure 14, the longitude of the\nascending node is now free to move. This precession\nover time results in the Earth being completely\nsurrounded by the minefield.\n\nMinefield After 1 Year\nFigure 12 below shows the minefield in orbit after 1\nyear.\n\nFigure 12 Minefield after 1 year\n\nFigure 12 shows the minefield spread out around the\nEarth but mostly concentrated in a \"ring\" shape in the\ninitial polar orbit. Please note that the black circle in\nthe figure shows the targeted orbit for this attack\nscenario.\n\nFigure 13 shows the effect of drag on the semi-major\naxes of the mines after 1 year.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 13 Semi-major axes of mines after 1 year\n\nThe altitudes of the mines are shown in Figure 13 to\nhave spread out through most of the altitudes of LEO.\nSome mines have reentered the Earth's atmosphere by\nthis point. In fact, 17.6% of the mines have reentered\nEarth's atmosphere after 1 year.\n\nFigure 14 shows the distribution of the inclination angle\nof the individual mines. While the data shown is the\nresult of one year of propagation, the dispersion in\ninclination is due solely to the initial explosion at the\nequator.\n\nFinal inclination (deg)\nNumber of particles\nFinal inclination (due to initial dispersion)\n\nFigure 14 Inclinations of mines after 1 year\n\nThe probability that a targeted Iridium satellite will be\nstruck by a minefield particle in a critical area within\nthe first year of this minefield is shown below in Table\n6.\n\nTable 6 Probabilities of impact through 1 year\nType of\nProbability\nProbability\n(%)\nIn Plane, 3-\nsigma STD\nVolume\n3.1\nIn Plane, Total\nVolume\n1.6\nOut of Plane, 3-\nsigma STD\nVolume\nN/A\nOut of Plane,\nTotal Volume\nN/A\n\nThe reason why the out-of-plane probabilities are listed\nas not applicable in Table 6 is that the purpose of this\nattack is to spread the mines to form a spherical cloud\nof mines which surround the Earth. By definition, there\nare no 'out-of-plane' satellites.\n\nThe probabilities shown in Table 6 are somewhat low,\nbut it must be mentioned that these percentages are now\nfor nearly all circularly-orbiting LEO satellites. This\nmeans that of the hundreds of active LEO satellites,\nroughly 3% of them could be destroyed within a year of\nthe minefield being deployed. This could have a major\nimpact on the safety of LEO.\n\nMinefield After 2 Years\nFigure 15 below shows the minefield particles after 2\nyears in orbit.\n\nFigure 15 Minefield after 2 years\nFigure 15 shows that the minefield is now spread out\naround the Earth much more than after only 1 year.\nThe minefield can now be seen virtually enclosing the\nEarth. Please note that the black circle in the figure\nshows the targeted orbit for this attack scenario.\n\nFigure 16 shows the how drag effects the semi-major\naxes of the mines after 2 years in orbit.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 16 Semi-major axes of mines after 2 years\n\nThe altitudes of the mines are shown in Figure 16 to\nhave been lowered due to atmospheric drag effects over\n2 years. Many mines have reentered the Earth's\natmosphere by this point. In fact, 52.3% of the mines\nhave reentered Earth's atmosphere after 2 years.\n\nThe probability that a targeted Iridium satellite will be\nstruck by a minefield particle in a critical area within\nthe first 2 years of this minefield is shown below in\nTable 7.\n\nTable 7 Probabilities of impact through 2 years\nType of\nProbability\nProbability\n(%)\nIn Plane, 3-\nsigma STD\nVolume\n4.3\nIn Plane, Total\nVolume\n2.8\nOut of Plane, 3-\nsigma STD\nVolume\nN/A\nOut of Plane,\nTotal Volume\nN/A\n\nThe probabilities shown in Table 7 are somewhat low\nbut still higher than the percentages after 1 year. The\nprobabilities above mean that of the hundreds of active\nLEO satellites, over 4% of them could be destroyed\nwithin 2 years of the minefield being deployed, in this\nconservative analysis. This could have a major impact\non the safety of LEO.\n\nAttack Scenarios 1 & 2: Environmental\nImpact and Countermeasures\nThe Iridium satellite target will most likely not survive\na direct strike from the minefield on the critical area of\nthe spacecraft bus. Based on the calculations done in\nthe Mine Selection section, it was shown that one of the\nminefield particles can penetrate 1.6 cm of solid\naluminum. An Iridium satellite, or any other\ncommunications satellite, will most likely not have\nthick aluminum shielding to protect the sensitive\ncomponents of the spacecraft. Adding thick aluminum\nwalls to the spacecraft bus would create a serious mass\nproblem as well as potential thermal and structural\nproblems. Therefore, it is not practical for Iridium or\nmost other satellites in similar LEO orbits to install\naluminum shielding to protect their spacecraft from this\nminefield.\n\nIt is also impossible for a ground controller to\nmaneuver the targeted satellite out of the path of the\nminefield since it is not possible to track 6mm diameter\ndebris particles from the ground.\n\nA Whipple-type shield could be integrated into the\nspacecraft design, but this type of shield may not\nprotect the satellite either. This type of shield is\ndiscussed in detail in the Attack Scenario 3:\nEnvironmental Impact and Countermeasures section of\nthis paper.\n\nAttack Scenario #3: International Space\nStation\nThe International Space Station (ISS), shown in Figure\n17, is the result of decades of work by several countries,\nprimarily the United States, and cost many billions of\ndollars. A rogue state could strike a significant blow on\nUS space assets if it were able to destroy or disable the\nISS.\n\nAn attack on the ISS by a deadly minefield may stall\nmanned spaceflight indefinitely and could possibly\neliminate any justification for continuing to use the\nSpace Shuttle.\n\nFigure 17 International Space Station\nTarget Size\nIt can be seen in Figure 17 that the ISS \"flies\" around\nthe earth in an upright \"T\" position. This means the\nISS will be flying into the minefield in this same\nposition. A crude estimation of the critical area of the\nISS was made by multiplying the height of the\nhabitable section of the ISS, 27.5 meters, by the width\nof the ISS components, 5 meters. This results in a\ncross-sectional area of approximately 140m2. Using the\nrule mentioned in the beginning of the Attack Scenario\n#1 section, the critical area was assumed to be 50% of\nthe total habitable section area. This results in a critical\ntarget area of the ISS of 70 m2.\n\nThe total target area of the ISS was calculated by\nadding the 140m2 to the total ISS solar wing area of\n892m2. This results in a total area in view of the\nminefield of 1032m2.11\n\nIt should be mentioned that although the goal is to see\nthe probability of striking a critical hit on the ISS, the\nsolar wings and the Space Shuttle (when docked) will\nsignificantly increase the likelihood of the ISS being hit\nby the minefield. Although these hits outside the\ncritical area may not destroy the station, the repeated\nhits may degrade the power and other systems to a point\nthat keeping the ISS manned and in use may be\nimpractical. In addition, repeated strikes to non-critical\nsystems of the station will cause a local debris cloud\nthat will contribute to the debris problem.\n\nAttack on the ISS\nThe ISS is located at an approximate altitude of 380 km\nat an inclination of 51.6 degrees. In order to maximize\nthe relative velocities of the mines with respect to the\nISS, the MDD is launched into a retrograde orbit which\nmatches that of the ISS. This results in the relative\nvelocities of the mines being roughly 15 km/s.\n\nThe MDD is deployed in this attack scenario to create a\n\"shotgun blast\" of particles which pose a serious threat\nto the ISS. Due to the lack of many spacecraft at 380\nkm in altitude, the minefield will pose a minor threat to\nother orbiting spacecraft which intersect the orbit of the\nminefield.\n\nFor the purposes of this study, it is assumed that the\nDelta IV Medium+ (5, 4) launch vehicle can lift\napproximately 50% of the payload into a retrograde\norbit that it can lift into a polar orbit. This results in a\npayload\ncapability\nof\napproximately\nkg.\nTherefore, it is possible to pack 25 million mines into\nthe launch vehicle.\n\nThe MDD is detonated over the equator to result in a\n\"ring\" shape of mines focused on the target ISS orbit.\nThe precession of periapse and line of nodes of the\nmines (relative to the station) is not a concern in this\nattack scenario. The minefield is deployed fairly low in\nthe atmosphere which results in increased atmospheric\ndrag. This causes the minefield to decay in orbit much\nfaster than the previous two attack scenarios.\nTherefore, since the duration of the minefield is limited\nto days instead of years, the precessions are not a\nsignificant concern.\n\nMinefield After 1 Day\nFigure 18 shows the distribution of mines in orbit 1 day\nafter the MDD was detonated over the equator.\n\nFigure 18 Minefield after 1 day\n\nThe black circle in Figure 18 shows the target orbit of\nthe ISS. Figure 18 also shows that the mines have\nspread out within 1 day to completely fill the targeted\nISS orbit. The various orbit altitudes of the mines after\n1 day can be seen below in Figure 19.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 19 Semi-major axes of mines after 1 day\n\nIt can be seen in Figure 19 that the mines have spread\nout to a wide range of altitudes after the initial\ndeployment from the MDD. However, one major factor\nin the movement of the mines through various altitudes\nis atmospheric drag. (See Equation 26) Even after 1\nday, a significant portion of the minefield has reentered\nthe atmosphere. In fact, roughly 29% of the mines have\nreentered the Earth's atmosphere at this point.\n\nThe probability that the targeted International Space\nStation will suffer a hit during the first day of the\ndeployment of the minefield is shown in Table 8 below.\n\nTable 8 Probabilities of impact through 1 day\nType of\nProbability\nCritical Area\nImpact\nProbability\n(%)\nTotal Area\nImpact\nProbability\n(%)\nIn Plane, 3-\nsigma STD\nVolume\n9.2\n85.5\nIn Plane, Total\nVolume\n5.1\n46.6\nOut of Plane, 3-\nsigma STD\nVolume\n0.1\n0.9\nOut of Plane,\nTotal Volume\n0.1\n0.9\n\nTable 8 shows the probability of impact in the critical\nand total ISS areas through the first day of the minefield\ndeployment. Based on these probabilities, the ISS has a\nroughly 9% chance of suffering a critical hit within the\nfirst day of the deployment of the minefield. However,\nthe probability of the ISS being hit anywhere by a mine\nis quite significant at 85.5%.\n\nIt is also seen in Table 8 that the out of plane\nprobabilities are extremely low for this attack scenario.\nThis is due to the fact that the minefield, although\nspread out through the ISS orbit, is tightly-packed\ntogether and decaying in orbit fairly rapidly. This\nmeans that satellites passing through the minefield orbit\nwill \"see\" a small, concentrated area of mines as\nopposed to a larger, less concentrated mined region.\n\nMinefield After 10 Days\nFigure 20 shows the distribution of mines in orbit 10\ndays after the MDD has been detonated over the\nequator.\n\nFigure 20 Minefield after 10 days\nThe black circle in Figure 20 shows the target orbit of\nthe ISS. Figure 20 shows that after 10 days the\nminefield has become \"bunched-up\" on approximately\nhalf of the ISS orbit. The reason for this is that after 10\ndays, since approximately 85% of the mines have\nreentered Earth's atmosphere (shown in Figure 21), the\nonly remaining particles are those with high perigees.\nThese \"high perigee\" particles were given a greater\nportion of energy in the detonation of the MDD that the\nrest of the mines. This caused these remaining 15% of\nthe mines to remain in orbit with similar perigees for a\nlonger time period. Since the orbits of these particles\nhave similar perigees, they appear in Figure 20 to be\nsomewhat bunched together in roughly half of the target\norbit.\n\nFigure 21 shows the how drag has effected the semi-\nmajor axes of the mines after 10 days in orbit.\n\nFinal semi-major axis (km)\nNumber of particles\nEffect of drag on semi-major axis\n\nFigure 21 Semi-major axes of mines after 10 days\n\nThe altitudes of the mines are shown in Figure 21 to\nhave been lowered due to atmospheric drag effects over\n10 days in LEO. Many mines have reentered the\nEarth's atmosphere by this point. In fact, nearly 85% of\nthe mines have reentered Earth's atmosphere after only\n10 days in orbit. The mines in this attack scenario have\na much shorter duration in orbit than the previous two\nattack scenarios.\n\nThe probability that the targeted International Space\nStation will suffer a hit during the first 10 days of the\ndeployment of the minefield is shown in Table 9 below.\n\nTable 9 Probabilities of impact through 10 days\nType of\nProbability\nCritical Area\nImpact\nProbability\n(%)\nTotal Area\nImpact\nProbability\n(%)\nIn Plane, 3-\nsigma STD\nVolume\n19.2\n99.0\nIn Plane, Total\nVolume\n11.0\n88.7\nOut of Plane, 3-\nsigma STD\nVolume\n0.2\n1.0\nOut of Plane,\nTotal Volume\n0.2\n1.0\n\nTable 9 shows the probability of impact in the critical\nand total ISS areas through the first 10 days of the\nminefield deployment. Based on these probabilities, the\nISS has a roughly 19% chance of suffering a critical hit\nwithin the first 10 days of the deployment of the\nminefield. Although this chance of a critical impact\nmay seem small, the total cross-sectional area of the\nISS has a roughly 99.0% chance of being struck by a\nmine within the first 10 days of the deployment of the\nminefield. This means the minefield is almost\nguaranteed to hit the ISS within 10 days.\n\nIt is also seen in Table 9 that the out of plane\nprobabilities are still extremely low for this attack\nscenario. This occurs for the same reason explained in\nthe previous section (minefield after 1 day).\n\nMinefield Effectiveness Over Time\nFigure 22 below displays the daily probability of a\ncritical strike on the ISS over time. This means that\neach probability in the plot at a given day was\ncalculated through that entire day. Please note that the\ny-axis values are decimal probabilities, not percentages.\n\nFigure 22 Daily probability of critical impact over\ntime\n\nFigure 22 clearly shows that the minefield used to\nattack the ISS will only present a significant threat until\napproximately 8 days in orbit. By the 8th day in orbit,\nthe minefield's daily probability of striking the space\nstation has decreased dramatically.\n\nAttack Scenario 3: Environmental Impact\nand Countermeasures\nThe International Space Station, if it suffered an impact\nat a critical area such as an inhabited module, would\nmost likely need to be abandoned until repairs could be\nmade. However, if repeated critical strikes were made\non the ISS, it may be forced to be abandoned forever.\nThe cost may become too great to repair and protect the\nISS from minefields such as those discussed in this\npaper.\n\nBeing 6mm in diameter, the particles deployed from the\nMDD are not able to be tracked from the ground. This\nprevents the ISS from being maneuvered out of the way\nof the approaching debris field. This removes one\noption of defense from the ISS.\n\nThe ISS designers have taken significant steps to\nprotect the crew and sensitive components from orbital\ndebris impacts. \"For example, the ISS has a shield that\nwill protect it from debris smaller than 1cm across by\nexploding them into even tinier particles, which some\nsay could actually increase the debris problem...pieces\nbetween 1 and 10cm will generate a shower, several of\nwhich could penetrate the hull.\"12 The type of shield\nbeing referred to in the previous quote is a Whipple-\ntype shield. The basic design of the shield is shown\nbelow in Figure 23.\n\nFigure 23 Example Whipple shield13\nThe Whipple shield works by causing impacting orbital\ndebris particles to break apart at the outer, thinner wall\ninto much smaller pieces which then impact the thicker,\ninner hull over a larger area, thus spreading out the\nenergy of impact.\n\nAlthough the earlier quote mentions the protection for\nparticles up to 1cm across, an AIAA paper describing\nthe survivability of the ISS from space debris has a\ndifferent view. A figure in the paper shows that the\nsurvivability of the ISS from a direct impact from an\norbital debris particle traveling at 15 km/s is only for\nparticles less than 5.5cm in diameter.14 Therefore, the\n6mm diameter mines in this study would likely be able\nto penetrate the ISS.\n\nIn addition, the assumption made for the particles is that\nthey are made out of aluminum. Also, the particles\nmost likely to impact the ISS from other debris sources\nare probably irregularly-shaped objects such as paint\nflakes. The 6mm diameter mines used in this study\nhave a density similar to that of aluminum but are in the\nshape of solid spheres of material. This shape may help\nthe particles penetrate the Whipple-type shield more\neasily than an irregularly-shaped debris object.\n\nIn addition, NASA has expressed serious concern about\ndebris objects like the mines used in this study. NASA\nhas shown in a technical paper about the impact of\norbital debris on the Space Shuttle that particles 5mm\nand larger could penetrate all critical portions of the\nShuttle including the crew cabin.15 If objects such as\nthe ones used for the minefield in this study can\npenetrate the crew cabin of the Space Shuttle, it may be\nlikely they can penetrate the crew cabin of the\nInternational Space Station.\n\nOther Countermeasures\nThe Whipple-type shield could be improved to include\nlayers of KevlarTM fabric and/or NextelTM foam\ncladding. The addition of TeflonTM may also improve\nthe effectiveness of the shielding against orbital\ndebris.16\n\nOther Environmental Impacts\nA major potential environmental impact of an\nintentional minefield is the creation of a self-\npropagating minefield. For every collision that takes\nplace between a mine particle and a target object,\npotentially hundreds or thousands of other orbiting\ndebris particles could be created. These particles, in\nturn, could impact other objects and continue the self-\npropagating cycle of orbital debris impacts. This effect\nwas not analyzed in this study, but can only contribute\nto the effectiveness of the minefield.\n\nAnother potential major environmental impact of this\nminefield is the potential of the forced abandonment of\nthe ISS. If, for some reason, the ISS is abandoned and\nreenters the Earth uncontrollably, it could cause damage\non the surface up to and including loss of life. Just as\nSkylab reentered years ago with large pieces crash-\nlanding in Australia, a much larger ISS could break\napart into several large pieces which may cause damage\nsomewhere on Earth.\n\nSoftware Module\nRequirements\nIn order to \"study the threat of a rogue state 'mining'\nlow-Earth orbit (LEO),\" a software tool was written to\nanalyze and quantify the threat posed by several\ndifferent scenarios. Thus, the following requirements\nwere specified for the software:\n\n-\nAllow the user to input a 'reference' minefield\norbit\n-\nAllow the user to describe the mines and\nminefield in a useful way\n-\nAllow the user to specify the nature of the\n'target' spacecraft\n-\nGenerate from the input a reasonable model of\nthe minefield\n-\nUse this model to quantify the 'threat' to LEO\nspacecraft in some way\n-\nVisualize the minefield\n\nThe Matlab module that was created to address these\nrequirements is presented in full in Appendix A, and a\ndescription of the code follows presently.\n\nDescription of Code\nThis section represents a description of the code used to\nanalyze this problem, complete with required inputs,\nsample outputs, applicable formula, and assumptions.\n\nThe first part of this description may also be considered\na users guide for the tool, as the whole program can be\nmanipulated by adjusting the initial parameters.\n\nConstants\nSeveral values were assumed constant and referenced in\nthe code where appropriate. These were the\ngravitational parameter Î¼, the radius of the Earth, Re,\nand the J2 term for the Earth, J2. The values used in the\ncode are presented in Table 10. All of these parameters\ncan be easily updated in the software as required.\n\nTable 10 Program constants\nConstant\nValue\nÎ¼ (m3/s2)\n3.986e14\nRe (m)\n6.38e6\nJ2\n0.00108263\n\nInputs\nAs mentioned in the software requirements, it is\nnecessary to allow the user to adjust various parameters\nof the mines, the minefield, and the target spacecraft.\nThe following list is a description of the available setup\nparameters with their required units.\n\nv_disperse (ft/s): This is the initial dispersion velocity\nof the minefield particles. For this model, it is assumed\nthat the mines are arranged spherically around an\nexplosive mechanism, and that the âV is normally\ndistributed in each axis with mean zero and standard\ndeviation of v_disperse. Thus, the maximum âV per\naxis is 3*v_disperse for 99.73 percent of the particles\n(3-sigma deviation). This value is input in English\nunits so that easy analogy might be made to typical\nterrestrial projectiles, such as bullets. The initial\ndispersion velocity is converted to metric units before\nuse.\n\nalt (km): This is the initial altitude of the minefield\norbit, when it is assumed to be circular. If orbital\nelements or exact position and velocity vectors are\ngiven for the minefield orbit initial condition, then this\nvalue is overridden. This value is converted to meters\nbefore use.\n\ntfinal (days): This is the ending time of the simulation.\nAll results are calculated and presented after the\nminefield has been propagated to tfinal. This value is\nconverted to seconds before use.\n\nobjects: This is the number of mines to propagate for a\ngiven run. The simulator then calculates a random\ninitial velocity for each object (see v_disperse above)\nand performs a Monte-Carlo analysis using this many\ntrials. The user should be careful in choosing extremely\nlarge values of objects, for this directly impacts the run\ntime of the simulation. As an example, 50,000 objects\ncan be computed on a typical desktop computer in a\nfew minutes.\n\ns_objects: This if the number of mines that can be\npacked into the launch vehicle. The simulator performs\na Monte-Carlo analysis on objects number of trials, and\nthen extrapolates the results to s_objects. The\nassumption is that a proportional number of the actual\nmines will re-enter the atmosphere as in the restricted\ncase, and that the actual minefield will occupy a similar\nvolume of space as the restricted case. Thus, it is not\nnecessary to run the simulation for the full number of\nprojectiles in the launch vehicle, only a representative\nnumber. This is a reasonable assumption for large\nvalues of objects. For example, if the code is run for\n10,000 objects, and then 3-sigma boundaries were\ndrawn to enclose the resulting volume, statistically one\nwould expect only 135,000 objects to fall outside of\nthose bounds for a 50 million projectile run. While this\nseems like a large number, it only represents a 0.2\npercent error in the resulting spatial density of the\ncloud.\n\ndp (m): This is the diameter of the mines, assumed to be\nspherical.\n\nCd: This is the coefficient of drag on the mines,\ngenerally assumed to be 2.2 for a sphere, unless actual\nexperimental drag measurement data is available.17\n\nmp (kg): This is the mass of the individual mines.\n\nrho (kg/m2): This is the density of the atmosphere in the\nvicinity of the minefield, referenced from a table (see\nSMAD18, inside back cover). Since the simulator is not\ncapable of adjusting the density as the altitude of the\nparticles decreases due to drag, typically a conservative\nvalue is used. For example, if the mines are to be\ninjected into an 800 km orbit, a value of density for 600\nkm might be used, thus assuring the user that all mines\nremaining above 600 km at the end of the run would\nhave survived at least that long (but probably much\nlonger).\n\nAc (m2): This is the critical cross-sectional area for\ncollision for the target spacecraft. The value Ac\nrepresents a conservative estimate of the planar area of\nthe target vehicle that is vulnerable to catastrophic\nfailure if struck by a piece of debris. In general, solar\narrays and other appendages are not considered in this\narea, and even the main planar area is cut by a large\nfraction. This is to help distinguish critical components\nof the craft such as fuel tanks, attitude control\ncomponents, batteries, and computers, from less critical\ncomponents such as structural members. Obviously,\nthis assumption neglects any secondary consequences\n\nof a non-critical strike (which can only be bad), since\nthe focus of this paper is on the potential of the\nminefield to disable spacecraft in LEO.\n\nt_mission (days): This is a separate time from the\nsimulation time, representing the time period in which\nthe user wants to know the probability of strike. For\nexample, if tfinal was set to 30 days, and t_mission was\nset to 10 days, the equivalent question would be: \"What\nis the probability of a mine striking the target, if the\ntarget orbited for 10 days in the minefield that results\nafter 30 days of dispersal?\" The problem with this\nsetup is immediately obvious: during the t_mission\ntime, the minefield dispersion is changing, and the\norbits are decaying. However, for small t_mission, or\nhigh altitude orbits (small decrease in altitude over\ntime), this is an acceptable approximation.\n\na_target (km): This is the altitude of the target satellite.\nThe parameter a_target is used to calculate how long\nthe target spacecraft is in the debris field when\ncalculating the probability of strike for satellites that are\nnot in the debris plane. Before use it is converted to\nmeters and added to the radius of the Earth, thus\nrepresenting a true radius to the target satellite.\n\nr_cutoff (km): This is the altitude at which the mines\nare assumed to have re-entered the atmosphere. Since\nthe rate of orbital decay is extremely high below 150\nkm, and there are few targets at those low altitudes (if\nany), this value is typically set near 150 to 200 km.\n\nxo (m, m/s): This is a vector of initial conditions for the\nminefield orbit. It can be generated in several ways, as\nwill be presented below. The first three terms are the\ninitial radius vector to the point of detonation, in Earth-\nCentered Inertial (ECI) coordinates, and the last three\nterms are the initial velocity vector also in ECI.\n\nActivations\nSeveral switches have been provided for the user to\ncustomize the output and performance of the program.\nA description of these functions follows:\n\nmake_plots: This switch allows the user to enable or\ndisable all of the graphical output of the code. This\nmight be desirable if running multiple cases in a series\nto fill a table of probabilities.\n\nplot_bounds: This switch turns the visualization of the\nworst-case boundaries off and on (see Figures 6 - 8).\n\nuse_J2: Turning this switch off makes the simulation\nbehave as though the Earth were a uniform sphere.\n\nuse_drag: Turning this switch off disables the drag\ncalculations in the simulation.\n\nuse_keep_list: This option specifies whether the\nsimulation should remove particles that have re-entered\nor not. If this switch is enabled, mines that fall below\nr_cutoff are removed from the plot, and the spatial\ndensity calculation is scaled appropriately.\n\ndisk_volume: This switch tells the software to use a disk\nto approximate the volume of the minefield (see\ndescription below).\n\nsshell_volume: This switch tells the software to use a\nspherical shell to approximate the volume if the\nminefield (see below). If both disk_volume and\nsshell_volume are enabled, the spherical shell technique\noverrides.\n\nOperation and Equations\n\nThe following section details the operation of the\nsoftware tool and presents the necessary theory. The\ndescription is presented in a similar order to the code,\nso the user can compare the implementation if desired.\nThe software is well documented and included in\nAppendix A.\n\nThe operation of the software analysis tool is comprised\nin bulk by the debris_pert.m file, written in Matlab.\nThe code begins by initializing the values above, and\nthen converts all non-standard units into fundamental\nunits. The code then creates the initial condition vector\nfor the minefield, xo, either from user-defined orbital\nelements or a simple description of radius and position\n(for example, a radius vector of {r, 0, 0} and a velocity\nvector of {0, 0, vc} where vc is the circular speed at\nradius r). The bulk of the simulation then begins.\n\nThe idea of the simulation is to propagate the orbits of\nthe individual mines through some time (tfinal), and\nthen use the resulting distribution to determine the\nspatial density of the minefield and thus the probability\nof strike. Each individual mine is given a normally\ndistributed random âV at time zero, to simulate the\nvariation of initial velocities of the particles when\ndispersed by explosion. Each of these new orbits is\nthen simulated in turn.\n\nOne relatively easy and computationally cheap way to\npropagate an orbit, when only the endpoint is desired, is\nto use orbital elements. Many variations on the\nstandard orbital elements are common, but one useful\nset is: semi-major axis, eccentricity, inclination, true\nanomaly, longitude of the ascending node, and\nargument of periapse. These are symbolized as a, e, i,\nÎ½, Î©, and Ï, respectively. A series of relatively simple\ncalculations will yield all six orbital elements from the\nposition and velocity vectors of a spacecraft, as follows:\n\nv\nr\nh\nr\nr\nr\nÃ\n=\n\n(3)\n\nh\nz\nN\nr\nr\nÃ\n= Ë\n\n(4)\n\nÎ¼\nh\np =\n\n(5)\n\n)\n(\nr\nv\na\n-\n-\n=\nÎ¼\n\n(6)\n\nv\nv\nr\nr\nv\ne\nr\nr\nr\nr\nr\n)\n(\nË)\n(\nâ\n-\n-\n=\nÎ¼\nÎ¼\n\n(7)\n\n)\nË\n(\ncos 1\nh\nh\nz\ni\nr\nâ\n=\n-\n\n(8)\n\n)\nË\n(\ncos 1\nN\nN\nx\nr\nâ\n=\nÎ©\n-\n\n(9)\n\n)\n(\ncos 1\neN\nN\ne\nr\nr â\n=\n-\nÏ\n\n(10)\n\n)\n(\ncos 1\ner\nr\ne r\nr â\n=\n-\nÎ½\n\n(11)\n\nHere all quantities not indicated with an over-arrow are\nscalar quantities. The position and velocity vectors r\nand v are given, the gravitational parameter Î¼ is given,\nxË and zË are the unit vectors in the x and z direction, h\nis the angular momentum vector, N is the vector\ndirection of the orbit node, p is the orbit parameter, and\na, e, i, Î½, Î©, and Ï are defined above. This conversion\nfrom position and velocity vectors to orbital elements is\ndone in the software by the rv2orbel.m function,\nincluded in Appendix A. Note also that there are\nseveral sign checks that must be performed due to the\ninverse cosines, and these checks can be examined in\nthe attached code. The software also makes provisions\nfor circular and equatorial orbits, where some of these\nparameters are ill-defined.\n\nOnce the orbital elements have been calculated, the\norbit can be easily propagated. In the absence of\ndisturbing forces, all of the orbital elements remain\nconstant except for the true anomaly. The true anomaly\ncan be propagated relatively easily by converting it to\nthe eccentric anomaly, E, and then using Kepler's\nEquation as follows19:\n\n))\ncos(\n)\ncos(\n(\ncos 1\nÎ½\nÎ½\ne\ne\nE\n+\n+\n=\n-\n\n(12)\n\n)\nsin(E\ne\nE\nM\n-\n=\n\n(13)\n\na\nn\nÎ¼\n=\n\n(14)\n\nnt\nM\nM\nold\nnew\n+\n=\n\n(15)\n\nHere M is the mean anomaly, n is the mean motion of\nthe spacecraft, and t is the time to propagate to (from\nepoch of zero). Having propagated the mean anomaly\nforward, Kepler's Equation (13) can be solved again,\nbut now for the eccentric anomaly, which can then be\nconverted into the true anomaly Î½. Kepler's Equation is\none of the most studied equations of all time, yet still\nthere is no exact analytic solution for E as a function of\nM. Fortunately, Matlab can solve it numerically, and\nthe function kepler.m was created for precisely that\npurpose. Then to get the true anomaly:\n\n))\ncos(\n)\ncos(\n(\ncos 1\nE\ne\ne\nE\n-\n-\n=\n-\nÎ½\n\n(16)\n\nAgain a quadrant check must be performed as indicated\nin the software source code. Once the new true\nanomaly has been calculated, it is a relatively simple\ntask to obtain the position and velocity vectors from the\nnew orbital elements. The necessary equations,\npresented by Battin,20 are as follows:\n\n)\n1(\ne\na\np\n-\n=\n\n(17)\n\nÎ½\ncos\ne\np\nr\n+\n=\n\n(18)\n\nÎ¼\np\nh =\n\n(19)\n\nÎ½\nÏ\nÎ¸\n+\n=\n\n(20)\n\n)]\nsin\n(sin\n),\ncos\nsin\ncos\ncos\n(sin\n),\ncos\ncos\nsin\ncos\n[(cos\ni\ni\ni\nr\nr\nÎ¸\nÎ¸\nÎ¸\nÎ¸\nÎ¸\nÎ©\n+\nÎ©\nÎ©\n-\nÎ©\n=\nr\n(21)\n\n]\nsin\n)\ncos\n(cos\n),\ncos\n)\ncos\n(cos\ncos\n)\nsin\n(sin\n(sin\n),\ncos\n)\ncos\n(cos\nsin\n)\nsin\n(sin\n[(cos\ni\ne\ni\ne\ne\ni\ne\ne\nv\nh\nÏ\nÎ¸\nÏ\nÎ¸\nÏ\nÎ¸\nÏ\nÎ¸\nÏ\nÎ¸\nÎ¼\n+\n-\n+\nÎ©\n-\n+\nÎ©\n+\nÎ©\n+\n+\nÎ©\n-\n=\nr\n(22)\n\nThese equations are implemented in the function\norbel2rv.m, included in Appendix A. The result of this\nformulation, when applied repeatedly to 10,000\nindividual particles, is shown in Figure 24. In this\nexample, the initial path is a polar orbit, the explosion\ntakes place as the MDD crosses the equator, and the\nparticles were propagated forward a year.\n\nFigure 24 Result of 10,000 objects after 1 year, no\ndrag or J2\n\nIt is interesting to note the \"hourglass\" shape of the\nresulting distribution, where the well-defined crossing\nindicates the point of detonation. Because in this run\nthe Earth was assumed to be spherical, the point of\ndetonation is the periapse of every orbit, and it remains\nin the same place over time. One should also be careful\nto observe the scales on this plot. The y-axis is\nmarkedly spread out compared to the x-axis and z-axis,\ngiving the illusion of a thick band; in reality, however,\nthis figure represents a rather thin ring (on an orbital\nscale).\n\nIt is quickly obvious from the compactness of the\nperigee in the plot above that a spherical Earth has been\nassumed. Using the orbital elements, however, it is\neasy to account for the most significant non-spherical\nEarth term, the J2 effect. As mentioned above, in the\nabsence of outside forces, the only orbital element that\nmust change in time is the true anomaly. If J2 is used,\nhowever, there are variations with time in the longitude\nof the ascending node and the argument of periapse\n(and also the mean motion, though not an orbital\nelement in this code). These variations can be\nexpressed as follows, as presented by Chobotov21:\n\n-\nâ\n-\nâ\nâ\n+\nâ\n=\n)\nsin\n1(\ne\ni\np\nr\nJ\nn\ne\na\nÎ¼\n(23)\n\ni\nn\np\nr\nJ\ne\ncos\nâ\n-\n=\nÎ©&\n\n(24)\n\n)\nsin\n(\ni\nn\np\nr\nJ\ne\n-\nâ\n=\nÏ&\n\n(25)\n\nHere the J2 constant is as defined at the top of this\nsection, and Î©& and Ï& are the time rate of change of\nthe longitude of the ascending node and the argument\nof periapse, respectively. The equations above have\nbeen implemented in the code to augment the basic\nstrategy outlined previously. The following figure is an\nexample if this implementation on 10,000 particles\nstarting out in an equatorial orbit and propagated for a\nyear.\n\nFigure 25 Result of 10,000 objects after 1 year, no\ndrag\n\nThe distinction between this result and the \"no J2\"\nresult is readily apparent. Due to the precession of the\nargument of periapse and the longitude of the ascending\nnode, now there is no hourglass structure or evidence of\nthe point of the explosion. The disk of debris is now\nquite uniform.\n\nThis model is more complete than the last; however it is\nstill missing a key component. The spherical particles\nselected have a relatively small ballistic coefficient and\nso it is expected that they will lose a lot of energy to\ndrag. Like J2, drag is also easy to implement using the\nvariational orbital element method. The drag force\n\nacting on the mines has an effect on two orbital\nelements: eccentricity and semi-major axis. Because\nthe drag force operates more strongly at perigee than\napogee for elliptical orbits, it has a tendency to\ncircularize elliptical orbits until the eccentricity is zero.\nFor orbits that are nearly circular to begin with, the only\neffect is to reduce the semi-major axis with time.\nChobotov22 presents this rate as follows:\n\nB\na\na\nÏ\nÎ¼\n-\n=\n&\n\n(26)\n\nHere r is the density of the atmosphere at the particle's\naltitude and B is the ballistic coefficient, defined by\nChobotov as:\n\nM\nA\nC\nB\nD\n/\n=\n\n(27)\n\nHere CD is the coefficient of drag on the particle (2.2\nfor a sphere), A is the cross-sectional area of the\nparticle, and M is the particle's mass. Note that the\nunits of this \"ballistic coefficient\" are m2/kg, which is\ncontrary to the ballistic coefficient defined by many\nother sources (but is the correct definition for the\nequation above).\n\nImplementing this variational parameter makes the\nmodel complete; that is, it is reasonably accurate for the\npresent purposes. A future study might include solar\nradiation pressure as an effect on the particle, however\nsince the direction of this force changes as the Earth\nmoves around the sun, the implementation is\nsignificantly more complex. Similarly, a future model\nmight use a density model that accounts for the\nchanging density over time (as the semi-major axis\nshrinks).\n\nThe figures presented the first sections of this paper (for\nexample, Figures 3 and 9) all use the full model\nincluding J2 and drag effects, so the reader may see\nsample results on those earlier pages.\n\nAfter computing the final location of all of the objects\nrequired, the debris_pert.m code continues to analyze\nthe resulting data. First, the radius of perigee, rp, for\neach particle is determined, where:\n\n)\n1(\ne\na\nrp\n-\n=\n\n(28)\n\nThe code then compares the radii of perigee to the\nminimum allowable altitude as defined by the user, and\nflags every failed particle. The lost particles are not\nplotted and are not counted when calculating the\ndensity (that is, the density goes down).\n\nIf desired, the software will then generate a number of\nplots for the user. Each plot is useful in its own way.\nThe primary plot is the three-dimensional visualization\nof the endpoints as shown in several figures, such as\nFigures 3 and 9. In addition, histograms can be created\nfrom the orbital elements, showing trends among the\nmines. For example, Figures 26 and 27 below show the\ndistribution of inclination angle and eccentricity for the\nparticles from the \"no drag\" example above. Similar\nplots can be generated for all of the orbital elements.\n\n0.5\n1.5\n2.5\nFinal inclination (deg)\nNumber of particles\nFinal inclination (due to initial dispersion)\n\nFigure 26 Final inclinations of 10,000 objects after 1\nyear, no drag\n\n0.01\n0.02\n0.03\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.1\nFinal eccentricity\nNumber of particles\nFinal eccentricity (due to initial dispersion)\n\nFigure 27 Final eccentricities of 10,000 objects after\n1 year, no drag\n\nProbability of Strike\nAfter creating the desired plots, the code then analyzes\nthe data to estimate the spatial density of the minefield,\nin order to calculate the probability of strike. This is\n\ndone in several ways, one of which is very\nconservative, and another which is more realistic but\ndoesn't contain every particle.\n\nLooking at the data, it is apparent that the generated\nminefields take on two major shapes: disks and\nspherical shells. Disks can be generated, for example,\nby initial equatorial orbits or polar orbits with the\nexplosion at the pole. Spherical shells can be generated\nusing a polar orbit with the detonation at the equator.\nThus, knowing the shape that the resulting minefield\nwill take, the volume can be estimated by appropriately\nsizing the sphere or disk.\n\nOne obvious way to size the sphere and disk is to find\nthe pair of radii that enclose every particle in the run.\nThat is, for the spherical shell, the outer radius would\nbe the largest radius of apogee of any particle, and the\ninner radius would be the smallest radius of perigee of\nany particle. This would also work for the disk,\nhowever the thickness of the disk is also required to\nfully define the volume. To contain every object, the\nthickness of the disk needs to be the maximum out-of-\nplane component of any mine, which can be calculated\nas the radius of perigee times the sine of the inclination\n(or, more precisely, the change in inclination from the\nreference orbit). This method generates a very\nconservative volume that encloses every particle, and\nwhen the number of surviving particles is divided by\nthis result, the answer is an estimate for the spatial\ndensity of the minefield.\n\nLooking at the red lines on Figure 7 (calculated in this\nmanner), it is obvious that this estimate is entirely too\nconservative. A more realistic result was arrived at by,\ninstead of finding the maximum radius of apogee and\nminimum radius of perigee, finding the radii that\nenclosed 99.73 percent of all mines. That is, finding\nthe 3-sigma values of ra and rp to enclose the disk or\nsphere. The result of that approach is indicated by the\nblue lines on Figure 7, and is clearly a more\nrepresentative volume.\n\nThe probability of a spacecraft being struck by a piece\nof debris, in a debris cloud with density Ï, is given by\nChobotov23 as:\n\nt\nA\nv\nc\nr\ne\nP\nâ\n-\n-\n=\nÏ\n\n(29)\n\nHere vr is the relative velocity, Ac is the cross-sectional\narea for collision, and ât is the mission time. In this\nsoftware tool, it is assumed that the debris cloud is\nlaunched into an orbit that is retrograde with respect to\nthe target. Thus, the relative velocity is roughly twice\nthe circular speed of the target, for a target that is in the\nplane of the debris field. Since it is not possible that all\ntarget spacecraft will be in the plane of the debris field,\nbut that many (if not most) will cross the field only in\ntwo places per revolution, an out-of-plane probability is\nalso calculated. For a worst case, it is assumed that the\nsecondary target has a crossing orbit that is normal to\nthe minefield. Thus, the relative velocity is the orbital\nvelocity times the square root of two, and the\npercentage of the target vehicle's orbit spent in the\nminefield is only twice the thickness of the disk over\nthe circumference of the orbit. The out-of-plane\nprobability is thus recalculated in this fashion, giving an\nestimate of the probability of strike for an out-of-plane\nspacecraft. In this way, the numbers presented in the\ntables above were calculated, and a quantitative\nmeasure of \"the threat of a rogue state 'mining' low-\nEarth orbit (LEO)\" was obtained.\n\nOrbit Survey\nOne task that was required for this project was to\nunderstand what objects were in orbit, and where they\nwere. This information proved very difficult to find;\nthere are few current surveys available that give the\ngeneral trend of what is in orbit (altitude, semi-major\naxis, etc). Much information is available in the form of\ntwo-line element (TLE) sets, however, so a module was\nwritten to dissect the TLE data and create useful\nrepresentations from them. This program is called\nparse_tle.m, and is included in the Appendix.\n\nThe simplest way to obtain current TLE sets was found\nto be the Satellite Toolkit (STK). STK has a feature\nthat allows it to update its database of known spacecraft\nfrom the internet, and then this current data can be\nsorted and saved to a file of TLE sets. The parse_tle.m\ncode reads this file line by line and extracts the desired\norbital elements for each satellite, namely: semi-major\naxis, eccentricity, and inclination. Many of these\nparameters are in odd units or have decimal places\nassumed,\nso\nthe\ncode\nconverts\neach\nelement\naccordingly. The longitude of the ascending node can\nalso be extracted, however since the epoch of each TLE\nset is different, this data is largely meaningless without\ntransformations in a rotating coordinate frame. After\nparsing the text file to extract a, e, and i, this module\nthen plots histograms of the data, indicating trends in\ncurrent spacecraft orbits and allowing the selection of\npotential minefield orbits. Sample output from this\ncode can be seen in Figures 1 and 2.\n\nConclusion\nThe launch and deployment of the MDD system could\nbe accomplished by a rogue nation for approximately\n100 million dollars. This cost includes the launch\nvehicle, mines, explosives, and MDD structure. Since\nthe launch vehicle is by far the most expensive item in\nthe list, the cost of the other components is insignificant\nby comparison.\n\nIt has been shown that significant damage can be done\nby implementing such a system to attack space assets.\nAttack scenario #1 showed a significant long-term\neffect on the safety of some LEO orbits. However,\nconstellations such as Iridium would likely be able to\ncontinue to function since the constellation has many\ndifferent satellites in different polar orbits. The\nconstellation also has many on-orbit spares.\n\nAttack scenario #2 showed that nearly all LEO orbits\ncould be attacked by the minefield as well. Although\nthe probabilities of being impacted were somewhat\nsmall, these numbers were for all spacecraft in the\nminefield. This means there is a significant potential of\na great number of satellites being critically damaged by\nthe minefield for this type of attack.\n\nThe results from attack scenario #3 show that the ISS\ncan be struck from such a minefield. Although it is\nmuch more likely that a non-critical system will be\nimpacted by a mine, this hazard may require additional\nshielding or possibly the abandonment of the space\nstation. The cost to protect the ISS may end up\ndooming the station. Already, \"the cost of 'armor-\nplating' the ISS against man-made rubbish has added at\nleast $5 billion to\"24 the cost of the station. If\nadditional shielding is required once faced with the\nthreat of this rogue nation's minefield, the nations\nconstructing the ISS may not want or have the cash to\npay the bill.\n\nThe danger of the minefield proposed in this paper,\nalthough having the potential of causing some damage\nto US space assets, could not create the sort of damage\nto US space assets that would give a rogue nation a\nsignificant military advantage. The main US\ncommunications satellites, such as Milstar, are located\nin geosynchronous orbits and are out of the scope of\nthis proposed minefield. Therefore, the US government\nneed not consider the threat from such a weapon as the\nMDD minefield a serious threat from foreign countries.\n\nFuture Work\nOne major topic for future work could be the\ninvestigation of the ability of such a minefield to self-\npropagate. The long-term effects of this self-\npropagation could be investigated. The minefield may\nactually pose more of a danger than realized in this\npaper.\n\nOther types of mines could be investigated as well.\nDifferent sizes, shapes, and materials could be studied\nfor their effectiveness against targets in space.\n\nImproved analysis of the explosion dynamics would\nlead to more accurate initial conditions for the mines\nand a more robust estimate of the mass of the explosive.\nIn addition, a more detailed design of the explosion\nwould lead to necessary design constraints on the MDD\ncontainer itself.\n\nImproved software models that account for the\nchanging density and solar radiation pressure could be\nincluded in the analysis tools.\n\nOther targets beyond those investigated in this paper\ncould be studied as possible targets for the MDD.\nGeosynchronous satellites, much more expensive and\npowerful than satellites in LEO, may be good targets to\nattack with the MDD. Serious damage to US space\nassets\ncould\nbe\ndone\nby\ndestroying\nGEO\ncommunications satellites.\n\nFinally, the use of multiple MDDs could be\ninvestigated to see how several MDDs could be used in\na coordinated fashion to design an effective attack\nstrategy against a specific target.\n\nAppendix A\n\ndebris_pert.m\nclear all\n\n%#############################################\n% Constants\n\nglobal MU;\nglobal re;\ncolorwheel = 'rgbkmc';\nMU = 3.986e14; % [m^3/s^2], this is for the ****Earth****\nre = 6.38e6; % [m], ****Earth**** radius\nJ2 = 0.00108263; % J2 term at the ***Earth***\n\n%###################################################################\n% Here are the setup parameters, note units. Many are in odd units\n% for ease of intuitive thinking\n\nv_disperse = 300; % [ft/s] initial spherical dispersion velocity (this is 1 sigma!!!)\nalt = 780; % [km] initial altitude of explosion\ntfinal = 365; % [days] duration of sim\nobjects = 10000; % [#] number of objects in canister\ns_objects = (50e6); % number of objects to assume in canister w/ same results as above\ndp = 6e-3; % diameter of the projectile\nA = (1/4)*pi*(dp^2); % planar area of projectile in m^2\nCd = 2.2; % coefficient of drag for the projectile\nmp = .2e-3; % mass of the projectile (kg)\nB = Cd*A/mp; % [m^2/kg] ballistic coefficient\nrho = 4.89e-13; % atmospheric density, make sure this matches altitude given above\n% (now using density for 600km at alt of 800km\n% for worst-case) (800 km: 4.39e-14)\n% rho = 1.66e-11; % density for [350m]\n% Ac = 1032;\n% Ac = 70; % [m^2] critical cross section for collision for target spacecraft\n(ISS)\nAc = 1.29; % [m^2] critical cross section for collision for target spacecraft\nt_mission = 30; % [days] duration of the mission (probability of getting struck in this\ntime)\na_target = 780; % [km] semi-major axis of target satellite\nr_cutoff = 200; % [km] cutoff altitude (radius of perigee) below which projectiles are\nassumed to have re-entered\n\n%################################################################\n% Here are some switches for program activations (1=true)\n\nmake_plots = 1;\nplot_bounds = 1;\nuse_J2 = 1;\nuse_drag = 1;\nuse_keep_list = 1;\ndisk_volume = 1; % calculate probabilities using the disk approach for volume\nsshell_volume = 0; % calculate probabilities using the spherical shell approach for\nvolume\n\n%###############################################################\n% Now convert the units to standard SI if required\n\nv_disperse = v_disperse/3.28; % [m/s] (3.28 ft/m)\nr = re + alt*1000; % [m], this is now radius, not altitude\nr_cutoff = re + r_cutoff*1000; % [m] now this is truly a radius of cutoff\na_target = a_target*1000 + re; % [m] semi-major axis of target satellite\ntfinal = tfinal*24*60*60; % [s]\nt_mission = t_mission*24*3600; % [s]\n\n%##############################################################################\n% Calculate initial conditions of bomb and make IC vector\n% NOTE: this doesn't have to be circular, but is an easy way to get IC's\n\n% [ri, vi] = orbel2rv(380e3+re, .000528, 51.6295*pi/180, 166.9733*pi/180, 288.4644*pi/180,\n230.0767*pi/180, MU);\n% vc = sqrt(MU/(380e3+re));\n% xo = [ri; vi];\nvc = sqrt(MU/r);\nxo = [r 0 0 0 vc 0]';\nV_rel = 2*vc; % assume projectiles are travelling in opposite direction, same plane\n\n%##########################################################################\n% Propogate the trajectories and work on the switches above\n\nif use_J2 == 0\nJ2=0;\nend\n\nif use_drag == 0\nB=0;\nend\n\nfor j=1:objects\nv_rand = v_disperse*randn(3,1); % get the random component of the velocity\nxo1 = xo + [0; 0; 0; v_rand]; % build the IC vector\n[a, e, i, nu, node, omega] = rv2orbel(xo1(1:3)', xo1(4:6)',MU); % get the orbital elements\nfrom (r,v)\n\nEa = acos((e+cos(nu))/(1+e*cos(nu)));\nMa = Ea - e*sin(Ea); % calculate the mean anomoly\np = a*(1 - e^2); % calculate the orbit parameter\n\nn = sqrt(MU/a^3)*(1 + (3/2)*((J2*re^2)/(p^2))*(1 - (3/2)*sin(i)^2)*sqrt(1 - e^2)); % J2\nperturbed mean motion\ndNode = (-3/2)*((J2*re^2)/(p^2))*n*cos(i); % J2 perturbed longitude of ascending node\ndomega = (3/2)*((J2*re^2)/(p^2))*n*(2 - (5/2)*sin(i)^2); % J2 perturbed argument of\nperiapse\nda = -n*(a^2)*rho*B; % drag perturbed semi-major axis (assumes constant drag\neven with changing alt!)\n% NOTE: drag eq. assumes near circular, otherwise e\nwould change also!!!\n\nMa = Ma + n*tfinal; % advance the mean anomoly to the new time\nnode = node + dNode*tfinal; % advance node to the new time, only changes if J2 on\nomega = omega + domega*tfinal; % advance omega to the new time, only changes if J2 on\na = a + da*tfinal; % advance a to the new time, only changes if drag is on\n\nglobal e_in M_in;\ne_in = e;\nM_in = Ma;\n\nEa=fzero('kepler',Ma); % solve kepler's equation for the EA at the new time\n\nnu = acos((cos(Ea)-e)/(1-e*cos(Ea))); % recalculate the true anomoly\nif Ea > pi\nnu = 2*pi - nu; % sign check for the arccos\nend\n\n[r_new, v_new] = orbel2rv(a, e, i, nu, node, omega, MU); % get (r,v) back from the orbital\nelements\n\ndata(j,:)=[r_new(1) r_new(2) r_new(3)];\nstat_data(j,:)=[a e i mod(nu,2*pi) mod(node,2*pi) mod(omega,2*pi)];\nif (mod(j,100)==0)\nj\nend\nend\n\nrp = stat_data(:,1).*(1 - stat_data(:,2));\nif (use_keep_list == 1)\nkeep_list = find(r_cutoff < rp);\nelse\nkeep_list = 1:objects;\nend\nlost_count = objects - length(keep_list)\n\n%####################################################################\n% Do all the plotting if desired\n\nif make_plots == 1\n\nfigure\nhold on\nfor j=1:length(keep_list)\nplot3(data(keep_list(j),1)/1000, data(keep_list(j),2)/1000, data(keep_list(j),3)/1000,\n[colorwheel(mod(j,6)+1) '+']);\nend\ngrid on\n\n% plot the reference orbit, must advance this due to J2 also\nglobal MU_in;\nMU_in=MU;\n\n[a, e, i, nu, node, omega] = rv2orbel(xo(1:3)',xo(4:6)',MU); % get the orbital elements\nfrom (r,v)\nEa = acos((e+cos(nu))/(1+e*cos(nu)));\nMa = Ea - e*sin(Ea); % calculate the mean anomoly\np = a*(1 - e^2); % calculate the orbit parameter\nn = sqrt(MU/a^3)*(1 + (3/2)*((J2*re^2)/(p^2))*(1 - (3/2)*sin(i)^2)*sqrt(1 - e^2)); % J2\nperturbed mean motion\ndNode = (-3/2)*((J2*re^2)/(p^2))*n*cos(i); % J2 perturbed longitude of ascending node\ndomega = (3/2)*((J2*re^2)/(p^2))*n*(2 - (5/2)*sin(i)^2); % J2 perturbed argument of\nperiapse\nMa = Ma + n*tfinal; % advance the mean anomoly to the new time\nnode = node + dNode*tfinal; % advance node to the new time, only changes if J2 on\nomega = omega + domega*tfinal; % advance omega to the new time, only changes if J2 on\ne_in = e;\nM_in = Ma;\nEa=fzero('kepler',Ma); % solve kepler's equation for the EA at the new time\nnu = acos((cos(Ea)-e)/(1-e*cos(Ea))); % recalculate the true anomoly\nif Ea > pi\nnu = 2*pi - nu; % sign check for the arccos\nend\n[r_ref, v_ref] = orbel2rv(a, e, i, nu, node, omega, MU); % get (r,v) back from the orbital\nelements\n\n[t, y] = ode45('conic_de', [0 2*pi*sqrt(a^3/MU)], [r_ref v_ref]);\nplot3(y(:,1)/1000, y(:,2)/1000, y(:,3)/1000, 'k','linewidth', 2)\nxlabel('x (km)')\nylabel('y (km)')\nzlabel('z (km)')\n\nfigure\nhist((stat_data(keep_list,1)-re)/1000,20)\nxlabel('Final semi-major axis (km)')\nylabel('Number of particles')\ntitle('Effect of drag on semi-major axis')\n\nfigure\nhist(stat_data(keep_list,2),20)\nxlabel('Final eccentricity')\nylabel('Number of particles')\ntitle('Final eccentricity (due to initial dispersion)')\n\nfigure\nhist(stat_data(keep_list,3)*180/pi,20)\nxlabel('Final inclination (deg)')\nylabel('Number of particles')\ntitle('Final inclination (due to initial dispersion)')\n\nfigure\nhist(stat_data(keep_list,4)*180/pi,20)\nxlabel('Final true anomaly (deg)')\nylabel('Number of particles')\ntitle('Final true anomaly')\n\nfigure\nhist(stat_data(keep_list,5)*180/pi,20)\nxlabel('Final Longitude of ascending node (deg)')\nylabel('Number of particles')\ntitle('Effect of J2 on Longitude of ascending node')\n\nfigure\nhist(stat_data(keep_list,6)*180/pi,20)\nxlabel('Final argument of periapse (deg)')\nylabel('Number of particles')\ntitle('Effect of J2 on argument of periapse')\n\nend\n\n%###############################################################################\n% Calculate the worst case radii of perigee and apogee and out of plane (OOP) for the disk\n\nclear ra rp\n\nra = stat_data(keep_list,1).*(1 + stat_data(keep_list,2));\nrp = stat_data(keep_list,1).*(1 - stat_data(keep_list,2));\n\nra_max = max(ra);\nra_std = mean(ra) + 3*std(ra); % 3-sigma max radius of apogee\nrp_min = min(rp);\nrp_std = mean(rp) - 3*std(rp); % 3-sigma max radius of perigee\n\nif i == pi/2\nmax_oop = max(ra.*sin( (stat_data(keep_list,5)-node) ));\n\nstd_oop = 2*(std(ra.*sin( (stat_data(keep_list,5)-node) )));\nelse\nmax_oop = max(ra.*sin( (stat_data(keep_list,3)-i) ));\nstd_oop = 2*(std(ra.*sin( (stat_data(keep_list,3)-i) )));\nend\n\nif (plot_bounds == 1) & (make_plots == 1) & (disk_volume == 1)\nfigure(1)\nhold on\n[a, e, i, nu, node, omega] = rv2orbel(r_ref, v_ref, MU);\n[r_off, v_off]=orbel2rv(rp_min, e, i, nu, node, omega, MU);\n[t, y] = ode45('conic_de', [0 2*pi*sqrt(rp_min^3/MU)], [r_off v_off]);\noffset = max_oop*cross(r_ref, v_ref)/norm(cross(r_ref, v_ref));\nplot3((y(:,1)+offset(1))/1000, (y(:,2)+offset(2))/1000, (y(:,3)+offset(3))/1000,\n'r','linewidth', 2)\nplot3((y(:,1)-offset(1))/1000, (y(:,2)-offset(2))/1000, (y(:,3)-offset(3))/1000,\n'r','linewidth', 2)\n\n[r_off, v_off]=orbel2rv(ra_max, e, i, nu, node, omega, MU);\n[t, y] = ode45('conic_de', [0 2*pi*sqrt(ra_max^3/MU)], [r_off v_off]);\nplot3((y(:,1)+offset(1))/1000, (y(:,2)+offset(2))/1000, (y(:,3)+offset(3))/1000,\n'r','linewidth', 2)\nplot3((y(:,1)-offset(1))/1000, (y(:,2)-offset(2))/1000, (y(:,3)-offset(3))/1000,\n'r','linewidth', 2)\n\n[r_off, v_off]=orbel2rv(rp_std, e, i, nu, node, omega, MU);\noffset = std_oop*cross(r_ref, v_ref)/norm(cross(r_ref, v_ref));\n[t, y] = ode45('conic_de', [0 2*pi*sqrt(rp_std^3/MU)], [r_off v_off]);\nplot3((y(:,1)+offset(1))/1000, (y(:,2)+offset(2))/1000, (y(:,3)+offset(3))/1000,\n'b','linewidth', 2)\nplot3((y(:,1)-offset(1))/1000, (y(:,2)-offset(2))/1000, (y(:,3)-offset(3))/1000,\n'b','linewidth', 2)\n\n[r_off, v_off]=orbel2rv(ra_std, e, i, nu, node, omega, MU);\n[t, y] = ode45('conic_de', [0 2*pi*sqrt(ra_std^3/MU)], [r_off v_off]);\nplot3((y(:,1)+offset(1))/1000, (y(:,2)+offset(2))/1000, (y(:,3)+offset(3))/1000,\n'b','linewidth', 2)\nplot3((y(:,1)-offset(1))/1000, (y(:,2)-offset(2))/1000, (y(:,3)-offset(3))/1000,\n'b','linewidth', 2)\nend\n\n%############################################################################\n% Calculate the volume and spatial density\n\nif disk_volume == 1\nV_max = 2*max_oop*pi*(ra_max^2 - rp_min^2);\nV_std = 2*std_oop*pi*(ra_std^2 - rp_std^2);\nspatial_d_min = s_objects*(length(keep_list)/objects)/V_max;\nspatial_d_std = s_objects*(length(keep_list)/objects)/V_std;\nend\n\nif sshell_volume == 1\nV_max = (4/3)*pi*(ra_max^3 - rp_min^3);\nV_std = (4/3)*pi*(ra_std^3 - rp_std^3);\nspatial_d_min = s_objects*(length(keep_list)/objects)/V_max;\nspatial_d_std = s_objects*(length(keep_list)/objects)/V_std;\nend\n\n%###############################################################################\n% Calculate the probability of strike for a particle in the debris field\n\nP_strike_ip_min = 1 - exp(-spatial_d_min*t_mission*Ac*V_rel)\nP_strike_ip_std = 1 - exp(-spatial_d_std*t_mission*Ac*V_rel)\n\nif disk_volume == 1\nP_strike_oop_min = (1 - exp(-spatial_d_min*t_mission*Ac*sqrt(2)*V_rel/2)) *\n(4*max_oop/(2*pi*a_target))\nP_strike_oop_std = (1 - exp(-spatial_d_std*t_mission*Ac*sqrt(2)*V_rel/2)) *\n(4*std_oop/(2*pi*a_target))\nend\n\nrv2orbel.m\nfunction [a, e, i, nu, node, omega]=rv2orbel(r,v,MU)\n\n% function to get these 6 orbital elements from r and v\n% (a, e, i, nu, Node, omega)\n\nh = cross(r,v); % angular momentum vector\nN = cross([0 0 1],h); % direction of node\nevect = (1/MU) * ( (norm(v)^2-MU/norm(r))*r - dot(r,v)*v); % eccentricity vector\ne = norm(evect); % magnitude of e\np = (norm(h)^2)/MU; % the orbit 'parameter'\na = -1/((norm(v)^2)/MU-2/norm(r)); % semimajor axis\n\ni = acos(dot([0 0 1],h)/norm(h)); % inclination\n\nif i==0\nnode=0; % node undefined for equatorial, call it zero\nelse\nnode = acos(dot([1 0 0],N)/norm(N)); % calculate node\nif dot(N,[0 1 0]) < 0\nnode = 2*pi - node; % quadrant check\nend\nend\n\nif ((e==0) | (norm(N)==0))\nomega = 0; % argument of periapse undefined for circular, call it\nzero\nelse\nomega = acos(dot(evect,N)/(e*norm(N))); % calculate argument of periapse\nif dot(evect,[0 0 1]) < 0\nomega = 2*pi - omega; % quadrant check\nend\nend\n\nnu = acos(dot(evect,r)/(e*norm(r))); % calculate true anamoly\nif dot(r,v) < 0\nnu = 2*pi - nu; % quadrant check\nend\n\norbel2rv.m\nfunction [r, v] = orbel2rv(a, e, i, nu, node, omega, MU)\n\n% function to get the r and v vectors back from the orbital elements\n\np = a * (1 - e^2); % orbit parameter\nrmag = p/(1 + e*cos(nu)); % magnitude of r at the given 'time'\nh = sqrt(p * MU); % magnitude of angular momentum vector\ntheta = nu + omega; % argument of latitude = true anamoly + argument of periapse\n\nr = rmag*[cos(node)*cos(theta) - sin(node)*sin(theta)*cos(i);\nsin(node)*cos(theta) + cos(node)*sin(theta)*cos(i);\nsin(theta)*sin(i)]; % calculate r\n\nv = -(MU/h)*[cos(node)*(sin(theta)+e*sin(omega)) + sin(node)*(cos(theta) + e*cos(omega))*cos(i);\nsin(node)*(sin(theta)+e*sin(omega)) - cos(node)*(cos(theta) + e*cos(omega))*cos(i);\n-(cos(theta) + e*cos(omega))*sin(i)]; % calculate v\n\nkepler.m\nfunction out=kepler(E)\n\nglobal e_in;\nglobal M_in;\n\nout=E-e_in*sin(E)-M_in;\n\nconic_de.m\nfunction xdot = conic_de(t,x);\n\nglobal MU_in % m^3/s^2\n\nxdot(1:3,1) = x(4:6,1);\nr = x(1:3,1);\nrmag = norm(r);\nrmag3 = rmag*rmag*rmag;\n\nxdot(4:6,1)=(-MU_in/rmag3)*r;\n\nparse_tle.m\nclear all\n\nMU = 3.986e14; % [m^3/s^2], this is for the ****Earth****\nre = 6.38e6; % [m], ****Earth**** radius\n\nfid=fopen('LEO.tle', 'rt')\n% fid=fopen('45degmax.tle', 'rt')\ncount=1;\nwhile 1\ntmp=fgetl(fid);\nif ~ischar(tmp), break, end\ntmp=fgetl(fid);\nif ~ischar(tmp), break, end\ni(count)=str2num(tmp(9:16));\ne(count)=str2num(tmp(27:33))/1e7;\nn(count)=2*pi*str2num(tmp(53:63))/24/3600; % rad/s\nnode(count)=str2num(tmp(18:25));\ncount=count+1;\nend\n\nfclose(fid);\n\na=(MU./n.^2).^(1/3);\nalt=(a-re)/1000; % altitude in [km]\n\nfigure\nhist(i,20)\nxlabel('Inclination (deg)')\nylabel('Number of spacecraft')\ntitle('Inclination survey')\n\nfigure\nhist(e,20)\nxlabel('Eccentricity')\nylabel('Number of spacecraft')\ntitle('Eccentricity survey')\n\nfigure\nhist(alt,20)\nxlabel('Mean Altitude (km)')\nylabel('Number of spacecraft')\ntitle('Altitude survey')\n\nfigure\nhist(node,20)\nxlabel('Ascending Node (deg)')\nylabel('Number of spacecraft')\ntitle('Ascending Node survey')\n\nReferences\n\n1http://www.newsmax.com/archives/articles/2001/2/8/83827.shtml, China, Russia Plot Space Attacks, 2/8/2001\n2 Isakowitz, Steven J., International Reference Guide to Space Launch Systems, 3rd Ed., AIAA, 1999, p. 103\n3 Isakowitz, Steven J., International Reference Guide to Space Launch Systems, 3rd Ed., AIAA, 1999, pp. 119-\n4 Milne, Antony, Sky Static, Praeger, 2002, p. 146\n5 Johnson, Nicholas L., Artificial Space Debris, Krieger Publishing Co., 1991, pp. 68-69\n6 Milne, Antony, Sky Static, Praeger, 2002, p. 138\n7 Weistein, Eric W., http://mathworld.wolfram.com/SpherePacking.html, Sphere Packing, Wolfram Research,\n8 http://www.iridium.com/corp/iri_corp-story.asp?storyid=2, About Iridium - Our Story: Corporate Fact Sheet\n9 http://www.obsat.com/irimage_e.html, Iridium Satellite in Pictures\n10 Isakowitz, Steven J., International Reference Guide to Space Launch Systems, 3rd Ed., AIAA, 1999, p. 103\n11 http://spaceflight.nasa.gov/station/isstodate.html, The ISS to date (09/05/03), Vital Statistics Section\n12 Milne, Antony, Sky Static, Praeger, 2002, p. 146\n13 Graves, R., Space Station Meteoroid and Orbital Debris Survivability, AIAA-2002-1607, p. 8\n14 Graves, R., Space Station Meteoroid and Orbital Debris Survivability, AIAA-2002-1607, p. 6, Figure 4\n15 Theall, J. R., Orbital Debris Impacts on Space Shuttle; Model Predictions and Flight Experience, AIAA 99-\n0256, p. 2\n16 Milne, Antony, Sky Static, Praeger, 2002, pp. 148-149\n17 Chobotov, Vladimir A. (editor), Orbital Mechanics, 2nd Ed., AIAA, 1996, p. 227\n18 Wertz, J. R. and Larson, W. J. (editors), Space Mission Analysis and Design, 3rd Edition, 1999 Microcosm\nPress, El Segundo California.\n19 Bate, R., Mueller, D., and White, J., Fundamentals of Astrodynamics, Dover Publications, Inc., New York,\n1971, p. 216\n20 Battin, Richard. An Introduction to the Mathematics and Methods of Atsrodynamics, Revised Edition.\nAIAA, Reston, VA. 1999, p. 125\n21 Chobotov, Vladimir A. (editor), Orbital Mechanics, Third Edition, AIAA Educational Series, Reston, VA,\n2002, p. 186\n22 Chobotov, Vladimir A. (editor), Orbital Mechanics, Third Edition, AIAA Educational Series, Reston, VA,\n2002, p. 228\n23 Chobotov, Vladimir A. (editor), Orbital Mechanics, Third Edition, AIAA Educational Series, Reston, VA,\n2002, p. 315\n24 Milne, Antony, Sky Static, Praeger, 2002, p. 148"
    },
    {
      "category": "Resource",
      "title": "portfolio_nadir2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/8d0fbfb83d878206fdc0f970eb993e48_portfolio_nadir2.pdf",
      "content": "Problem Set 3: Design Module for a Spacecraft Attitude\nControl System\n\nSummary\nThe software module designed for this problem set calculated the disturbance torques on\na satellite in a specified orbit, sized the required reaction wheels to counteract the\ndisturbance torques, and sized the propulsion system required to dump angular\nmomentum when the reaction wheels become saturated.\n\nResults\nThe software module developed was tested with an orbit similar to the fictional FireSat\nsatellite orbit from SMAD. The results from the software module were similar to those\ngiven in SMAD for the FireSat.\n\nUseful References\nReaction Wheels\n\nE. Ahronovich, M. Balling, Reaction Wheel and Drive Electronics For LeoStar Class\nSpace Vehicles, 12th Annual USU Conference on Small Satellites, 1998,\nwww.sdl.usu.edu/conferences/smallsat/proceedings/12/ssc98/1/ssci5.pdf\nDynacon Enterprises Limited, Dynacon MicroWheel 200,\nwww.dynacon.ca/pdf/files/productpdf_6.pdf\nHoneywell Aerospace Electronic Systems, Constellation Series Reaction Wheels,\nhttp://content.honeywell.com/dses/assets/datasheets/constellation_series_reaction_wheels\n.pdf.\nHoneywell Aerospace Electronic Systems, Miniature Reaction Wheels,\nhttp://content.honeywell.com/dses/assets/datasheets/mini-wheel_reaction_wheel.pdf\nHoneywell Aerospace Electronic Systems, Honeywell Model HR 0610 Reaction Wheel,\nhttp://content.honeywell.com/dses/assets/datasheets/hr0610_reaction_wheel.pdf\nTeldix Space Product Group, Momentum and Reaction Wheels 14-68 Nms with external\nWheel Drive Electronics, http://www.teldix.de/P22/RDR23-68.pdf\nTeldix Space Product Group, Momentum and Reaction Wheels 14-68 Nms with\nintegrated Wheel Drive Electronics, http://www.teldix.de/P22/RSI25-68.pdf\nTeldix Space Product Group, Momentum and Reaction Wheels 2-12 Nms with integrated\nWheel Drive Electronics, http://www.teldix.de/P22/RSI4-12.pdf\nTeldix Space Product Group, High motor torque Momentum and Reaction Wheels 14-68\nNms with integrated Wheel Drive Electronics, http://www.teldix.de/P22/RSI18-68.pdf\nTeldix Space Product Group, Momentum and Reaction Wheels 0.04-0.12 Nms with\nintegrated Wheel Drive Electronics, http://www.teldix.de/P22/RSI01.pdf\n\nTeldix Space Product Group, Momentum and Reaction Wheels 0.2-1.6 Nms with\nintegrated Wheel Drive Electronics, http://www.teldix.de/P22/RSI02.pdf\n\nThe references listed above are for reaction wheels from Honeywell and Teldix. These\ntwo companies are some of the only companies that list their reaction wheel product\nspecifications online. These reaction wheel specifications are useful for students that\nneed real reaction wheel information to use in projects.\n\nAtmospheric Model\n\nBenson, Tom, http://www.grc.nasa.gov/WWW/K-12/airplane/atmosmet.html, Earth\nAtmosphere Model, Metric Units, NASA Glenn Research Center, 2002.\n\nThe website listed above is a good reference to an atmospheric model available online.\nThis NASA developed atmospheric model is somewhat inaccurate, but it is a good\nstarting point for a rough initial design.\n\nACS Equations\n\nWertz, James, and Larson, Wiley, Space Mission Analysis and Design, 2nd Ed.,\nMicrocosm, Inc., 1997.\n\nSMAD, listed above, contains a great deal of ACS information for a first-order spacecraft\ndesign. The equations for determining disturbance torques as well as sizing reaction\nwheels and ACS propulsion systems are contained in SMAD as well.\n\nDesign Module for a Spacecraft Attitude Control System\nSoftware Designed to Help Estimate Spacecraft Design Requirements\n\n16.851 Satellite Engineering\n\nMassachusetts Institute of Technology, Cambridge, MA\nOctober 2003\n\nMotivation\nSpacecraft often have pointing requirements. Satellite\nantennas and optics will generally require that the\nspacecraft remain pointed at the desired target within a\ncertain\npointing\ntolerance.\n\nThere\nare\nmany\nenvironmental effects that disturb the spacecraft, and\nthe attitude control systems (ACS) must be designed to\naccount for this. The ACS system for this project will\nbe designed for a three-axis stabilized spacecraft. This\nmodule will be useful for next semester when the x-ray\ntelescope being designed will require three-axis\nstabilization.\n\nProblem Statement\nDesign a tool that sizes attitude control system actuators\nfor a three-axis stabilized spacecraft given disturbance\ntorques created by various environmental effects.\nEnvironmental effects include gravity gradient, solar\nradiation, magnetic field, and aerodynamic forces.\nACS actuators being investigated include momentum\nwheels and thrusters.\n\nIntroduction\nMATLAB is used to evaluate the disturbance torques\non the spacecraft and select and size appropriate ACS\nactuators to meet the pointing requirements of the\nspacecraft.\n\nFor spacecraft without large slewing requirements,\nmomentum wheels are primarily used to counteract\ndisturbance torques. Momentum wheels and the\npropulsion system to dump the excess momentum will\nbe the primary focus of the software module.\n\nThe user will input information about the satellite\nincluding mass properties, physical dimensions, and\norbit\ninformation\n(altitude,\ninclination,\nand\neccentricity). The tool then examines the relevant\nenvironmental disturbance torques and finds the worst-\ncase torque conditions for the specific spacecraft and\norbit. Next, the tool will size the momentum wheels\nrequired to overcome worst-case disturbance torques.\nThe masses of the momentum wheels are obtained from\na\ndatabase\nof\navailable\nmomentum\nwheel\nspecifications. In addition, the module calculates the\nmass of the propulsion system required to dump\nmomentum from the momentum wheels when they\nbecome saturated over the lifetime of the spacecraft.\n\nFinally, the tool is executed for a test case in order to\ncheck the validity of the module. In addition, other test\ncases are run in order to construct parametric design\nfigures that show trends of the output involving\ndisturbance torques and ACS mass as a function of\nspacecraft size and orbit parameters.\n\nSoftware Module\n\nACS Environmental Disturbance Torque Tool\n\nDescription of Code\nThis MATLAB software tool sizes ACS angular\nmomentum storage and dumping devices for a specified\nvehicle in any orbit. The tool only addresses\ndisturbance torques from the main environmental\nsources: atmospheric drag, solar radiation, magnetic\nfield, and gravity gradient. The ACS sizing is only\nmeant to account for disturbance torques and does not\naddress the design needs for vehicle slewing. The tool\nrequires input data structures to describe the vehicle,\norbit, and planet (Table 1).\n\nTable 1 Software tool inputs\nParameter\nDescription\nveh.dim\n[m], vehicle dimensions (x,y,z)\nveh.CG\n[m], vehicle CG offset from geometric\ncenter\nveh.mass\n[kg], vehicle mass\nveh.mat\nvehicle surface material code (see\nAppendix)\nveh.life\n[years], vehicle design life\nOE.a\n[m], orbit semi-major axis\nOE.e\norbit eccentricity\nOE.i\n[deg], orbit inclination\nOE.Om\n[deg], argument of periapsis\nOE.om\n[deg], longitude of the ascending node\nplanet.mu\n[m\n3/s\n2], earth gravity constant\nplanet.r_pol\n[m], earth polar radius\nplanet.r_equ\n[m], earth equatorial radius\n\nThe vehicle is modeled as a rectangular prism and\ndescribed by the three edge lengths, mass, center of\ngravity, and exterior surface material. Using the\ndimensions and mass, the vehicle's moment of inertia\ncan be determined using1:\n\nâ¥\nâ¥\nâ¥\nâ¦\nâ¤\nâ¢\nâ¢\nâ¢\nâ£\nâ¡\n+\n+\n+\n=\n)\n(\n)\n(\n)\n(\ny\nx\nm\nz\nx\nm\nz\ny\nm\nI\n\n(1)\n\nUsing the orbital elements, the orbital period and\ninertial\nposition\nand\nvelocity\nare\ncalculated2.\nThroughout the orbit, worst case environmental\ndisturbance torques are calculated for the four\nenvironmental sources. Details of the torque\ncalculations will be addressed in the following sections.\n\nThe total disturbance torque is then integrated for one\ncomplete orbit. This provides the worst case angular\nmomentum imposed on the vehicle for one orbital\nperiod. Integrating the orbital torque instead of\nassuming an average from the maximum torque is\nadvantageous because it incorporates the varying\neffects resulting from different orbit types. Two very\ndifferent orbits might have the same maximum torque,\nbut would in reality experience very different\ndisturbance effects (i.e. circular orbit versus highly\nelliptic orbit).\n\nFor the angular momentum experienced by the vehicle,\nit is assumed that 80% is cyclic in nature and therefore\nonly requires temporary storage during the orbit. The\nremaining 20% is secular and will continue to\naccumulate until the momentum dumping system\napplies an external torque and eliminates this\nmomentum. This ratio was chosen because cyclic\nmomentum loads are known to drive the ACS design\nand this ratio matched well with guidance provided in\nSMAD.\n\nThe cyclical angular momentum drives the momentum\nwheel design. The tool selects a momentum wheel\nsystem that can store the calculated cyclical momentum\nand then estimates the mass of the wheel.\n\nNext, the tool selects the thruster system to dump the\naccumulating secular torque for the duration of the\nvehicle life. This determines the thruster system mass\nand thrust capability.\n\nFinally, the tool outputs these calculated ACS specs for\nthe worst case environmental disturbance torques.\nTable 2 shows the software tool output.\n\nTable 2 Software tool output\nParameter\nUnits\nCyclical angular momentum (per orbit)\n[Nms]\nSecular angular momentum (per orbit)\n[Nms]\nACS Momentum wheel mass\n[kg]\nACS Thruster system mass\n[kg]\nACS Thruster thrust\n[N]\n\nProgram Execution\nThe ACS ENV tool is executed using MATLAB. First,\nvarious constant parameters are specified by the user\nwithin the \"ACS_env_ini.m\" file (see Table 1). Next,\nthe tool is executed by entering at the Matlab command\nprompt:\n\n>> [h_cyc,h_sec,wheel_mass,thr_mass,thr_force]\n= ACS_env(OE,veh,planet);\n\nThe five program outputs are specified in Table 2.\nCopies of the initialization file and all program modules\ncan be found in the appendix.\n\nAerodynamic Torque Module\n\nRequirements\nThis MATLAB module, torque_aero.m, calculates the\ntorque due to aerodynamic drag on the spacecraft. This\ndrag is caused by the vehicle flying through the Earth's\natmosphere during close approaches to the planet. An\natmospheric model is used to approximate the density\nof the atmosphere at each position of the spacecraft.\nCombined\nwith\ngeometric\nand\naerodynamic\ninformation, the torque caused by drag is determined.\n\nDescription of Code\nThe code uses an atmospheric model for the \"upper\natmosphere\" from NASA. This model provides an\napproximation of the density of Earth's atmosphere for\nuse in drag calculations on the spacecraft.3\n\nThe code also assumes the spacecraft is shaped as a\nrectangular parallelepiped of edge dimensions X, Y,\nand Z. The origin of the spacecraft is defined to be the\ngeometric center of the 3-D shape. The coordinate\nsystem definition for the assumed spacecraft in the\nMATLAB module is shown below in Figure 1.\n\nFigure 1 S/C coordinate system definition\n\nIn addition, the center of pressure, the location at which\nthe aerodynamic drag is acting, is assumed to be at the\ncenter of one face of the spacecraft. It is assumed that\nthe worst case drag the spacecraft experiences is the\ncase in which the vehicle has one face directly facing\nthe direction of travel though the atmosphere. In\naddition, it is assumed that the face on which the drag is\nacting has the largest surface area on the spacecraft.\nThis results in the worst-case drag possible on the\nvehicle.\n\nThe worst-case of the aerodynamic drag torque also\nresults from the worst-case moment arm of the force\nacting on the vehicle. This worst-case moment arm is\ndetermined from the absolute value of the maximum\nCG offset from the geometric center. The geometric\ncenter is assumed to be the coordinate system origin for\nthe spacecraft. Since the center of pressure acting on\neach face is at the center of the face, the largest moment\narm acting around the center of gravity is the maximum\ndistance in one axis of the center of gravity from the\ngeometric center.\n\nConstants\nThe only constant used in this module was the\ncoefficient of drag, CD, which is assumed to be 2.2.\nThis assumption was made due to a lack of\nexperimental data about the drag and lift characteristics\nof this vehicle. Also, Chobotov recommends that a\ndrag coefficient value of 2.2 be used as a conservative\nestimate.4\n\nInputs\nsize (m): This input was a vector containing the three\nedge lengths of the rectangular parallelepiped-shaped\nspacecraft.\n\nV (m/s): This input is the instantaneous velocity of the\nspacecraft at any given time when the module is called\nby the main program.\n\nh (m): This input is the altitude of the spacecraft at any\ntime in which the module is called by the main\nprogram.\n\nCG (m): This input is a vector of the center-of-gravity\noffset from the geometric center of the spacecraft. This\nis used to determine the worst-case moment arm on\nwhich the drag force is acting.\n\nOutputs\nTa (N*m): This output is the disturbance torque on the\nspacecraft due to atmospheric drag in the spacecraft.\nThis is sent back to the main program when this\nsubroutine is called.\n\nTheory & Equations\nIn order to estimate the atmospheric density at any\ngiven time during the orbit of the spacecraft, a density\nmodel provided by NASA was used. The model used\nwas for the \"upper atmosphere.\" This meant that it was\nacceptable for use above 25km altitude. The equations\nbelow were used for this approximation.5\n\nh\nT\n.\n.\n+\n-\n=\n\n(2a)\n.\n6.\n1.\n.2\n-\nâ¥â¦\nâ¤\nâ¢â£\nâ¡\n+\n=\nT\np\n\n(2b)\n[\n]1.\n.\n+\n=\nT\np\nÏ\n\n(2c)\n\nIn the above equations, T is the atmospheric\ntemperature (degrees Celsius), p is the atmospheric\npressure (KPa), and Ï is the atmospheric density\n(kg/m3).\n\nThe force acting on the spacecraft due to drag was\ndetermined by the following equation.6\n\nAV\nC\nF\nD\nÏ\n=\n\n(3)\n\nThe A in the above equation is the surface area of the\nface of the spacecraft normal to the airflow hitting the\nvehicle.\n\nThe torque due to aerodynamic drag on the spacecraft is\ncalculated using the following equation.\n\nz\ny\nx\ni\nwhere\nD\nF\nT\ni\na\n,\n,\n)),\n(max(\n=\n=\n\n(4)\n\nThe torque, Ta, is calculated by multiplying the drag\nforce on the spacecraft, F, by the maximum distance of\nthe center of gravity from the geometric center out of\nthe x, y, or z directions, Di. This would allow for the\nlargest moment arm and therefore would result in the\nhighest disturbance torque due to aerodynamic drag.\n\nTorque from Solar Radiation\nSolar radiation pressure if found from the equation:\n\n(\n)\n(\ncg\ncps\ni\nq\nA\nc\nF\nT\ns\ns\nsp\n-\n+\n=\ncos\n)\n(5)\n\nwhere Fs is the solar constant, 1367 W/m2, c is the\nspeed of light, 3x108 m/s, As is the surface area of the\nsatellite facing the sun, q is the reflectance factor, i is\nthe angle of incidence to the sun, cps is the location of\nthe center of solar pressure, and cg is the center of\ngravity of the satellite. The units of solar radiation\npressure are Newton-meters.\n\nThe worst case is for an incidence angle of zero\ndegrees, so i=0 was always used in calculations. Also\nin a worst case situation, As would be the surface area\nof the largest face of the satellite. The value for q is\nbased on the material of the satellite, which is specified\non input.\n\nGravity-gradient Disturbance Torques\nThe gravity field of the Earth can place unwanted\ntorques on a satellite. When a satellite is affected by\nthe Earth's gravity field, the longitudinal axis becomes\naligned toward the center of the Earth. The strength of\nthe torque is a function of the distance of the satellite\nfrom the Earth. Also, the torque is symmetric about the\nnadir vector of the satellite.\n\nThe equation for finding the worst case gravity-gradient\ntorque is:\n\n)\ncos(\nÎ¸\nÎ¼\ny\nz\ng\nI\nI\nR\nT\n-\n=\n\n(6)\n\nwhere Î¼ is the gravitational constant of the Earth,\n3.986*1014 m3/s2, R is the orbit radius, Iz and Iy are the\nmoments of inertial about the z and y axes of the\nsatellite, and Î¸ is the maximum deviation of the z-axis\nfrom the local vertical. To calculate the worst case\nscenario, Î¸ is assumed to be 45o.\n\nMagnetic Field Disturbance Torques\nThe magnetic field of the earth can cause torques on a\nsatellite. The strength of the magnetic field torque on a\nsatellite is a function of the satellite's position. The\nmagnetic field intensity B is found by the equation:\n\nÎ»\nsin\n1+\n= R\nB\nB\no\n\n(7)\n\nwhere B0 is the magnetic field at the equator at the\nEarth's surface, 0.3 gauss, R is the radial distance from\nthe Earth, and Î» is the magnetic latitude. The worse\ncase disturbance torque from the magnetic field on the\nsatellite can then be found by multiplying B by the\nresidual dipole of the satellite, D:\n\nTm = DB\n\n(8)\n\nThe vehicle residual magnetic dipole (D) is assumed to\nbe 1 Am2 for this problem.\n\nMass in Reaction Wheels\nUsing the cyclic angular momentum calculated by the\ntool, the reaction wheel mass can be estimated. To\ndetermine mass of a reaction wheel, data was collected\non many existing, commercial reaction wheels. A\nfourth-order polynomial curve was fit to this data using\nMATLAB, to compare momentum storage in reaction\nwheels and their weight in kilograms. From the curve,\nthe approximate mass of a momentum wheel given its\nmomentum storage can be determined. The figure\nbelow illustrates the data collected (red points) as well\nas the polynomial curve fit used (shown as the blue\nline).\n\nFigure 2 Mass vs. angular momentum capability for\nmomentum wheels\n\nSources used for collecting data on reaction wheels are\nincluded\nin\nthe\nreferences\nsection\nof\nthis\npaper.7,8,9,10,11,12,13,14,15,16,17\n\nACS Propulsion System Design Module\n\nRequirements\nThis\nMATLAB\nmodule,\ncalled\nprop_system.m,\ncalculated the thrust required to dump momentum at\neach momentum dump thruster firing as well as the\ntotal ACS propulsion system mass required for\nmomentum dumping.\n\nDescription of Code\nThis code calculates the worst-case moment arm of an\nACS thruster about a spin axis of the spacecraft and\ncombines that moment arm with the required thrust for\ndumping momentum to size the propulsion subsystem.\n\nThe code assumes the spacecraft is shaped as a\nrectangular parallelepiped of edge dimensions X, Y,\nand Z, with thrusters arranged at locations shown in the\nfigure below. The thrusters are the red triangles in the\nfigure below.\n\nFigure 3 Assumed thruster locations on spacecraft\n\nA Hydrazine monopropellant propulsion system is\nassumed to be used for momentum dumping for this\nspacecraft. Although the specific impulse, Isp, for\nHydrazine can be as high as 245 seconds,18 a\nconservative value for the Isp for Hydrazine is assumed\nin this module. This conservative Isp value is 200\nseconds.\n\nAlthough the thrusters and propulsion system plumbing\nare not directly sized, a conservative value for\npropulsion system mass is estimated. It is assumed that\nthe mass of the propulsion system is 85% propellant.19\nThis, by sizing the propellant, the total system mass can\nbe determined by dividing by 0.85.\n\nIt should also be noted that it is assumed in this module\nthat the time for each thruster firing is one second.\n\nConstants\nThe only constant used in this module is the\nacceleration due to gravity at the Earth's surface, g.\nThis is assumed to be 9.8 m/s2.\n\nInputs\nsize (m): This input was a vector containing the three\nedge lengths of the rectangular parallelepiped-shaped\nspacecraft.\n\nCG (m): This input is a vector of the center-of-gravity\noffset from the geometric center of the spacecraft. This\nis used to determine the worst-case moment arm on\nwhich the drag force is acting.\n\nlifetime (years): This input is the lifetime of the\nsatellite. It is used to determine how many thruster\nfirings to dump momentum will be needed throughout\nthe life of the spacecraft.\n\nH (N*m*s): This input is the stored maximum\nmomentum in any one momentum wheel. It is the\nmomentum which will need to be dumped by using the\nthruster firing of the ACS system.\n\nsat_rate (days/saturation): This input is the time it\ntakes for the wheels of the spacecraft to become\nsaturated with angular momentum. It is at this point\nthat the momentum wheels have no more capacity to\ncontrol the attitude of the spacecraft by spinning up any\nfaster.\n\nOutputs\nF (N): This output is the force required for the thruster\nto impart on the spacecraft in order to dump the\nrequired momentum.\n\np_mass (kg): This output is the total mass of the\npropulsion system used to dump momentum when the\nmomentum wheels become saturated throughout the\nlifetime of the spacecraft.\n\nTheory & Equations\nThe force required to dump momentum is obtained by\nusing the following equation.\n\nLt\nH\nF =\n\n(9)\n\nIn the above equations, L is the moment arm of the\nthruster to the required spin axis (meters) and t is the\nthruster firing time.\n\nThe propellant mass, mP, and total propulsion system\nmass, p_mass, are then calculated using the following\nequations.\nrate\nsat\nlifetime\npulses\ntotal\n_\n.\n*\n*\n_\n=\n\n(10)\ng\nI\nt\npulses\ntotal\nF\nm\nsp\nP\n)\n_\n(\n=\n\n(11)\n.0\n_\nP\nm\nmass\np\n=\n\n(12)\n\nTotal_pulses is the total number of thruster firings\nrequired throughout the lifetime of the spacecraft to\ncounteract the environmental disturbance torques. The\nnumerator of the total_pulses equation has a factor of 3\nin it because it is assumed that all three wheels will\nneed to be desaturated at each time momentum is\nrequired to be dumped. The Isp in the equation above is\nfor Hydrazine. The 0.85 factor is explained in the\n\"Description of Code\" section.\n\nResults\nModule test case\nIn order to verify that the MATLAB code is working\nproperly, the module was used to determine the\ndisturbance torques and calculate the required ACS\nmass for a test case. The test case used was the main\nspacecraft example in Space Mission Analysis and\nDesign, by Wertz and Larson. This example is the\nFireSat satellite. The main parameters used to simulate\nthe FireSat example to test this module with are shown\nbelow in Table 3.\n\nTable 3 FireSat-like test case parameters\nParameter\nValue\nDescription\nveh.dim\n[ 1.7 1 1.7]\n[m], vehicle dimensions (x,y,z)\nveh.CG\n[0.2 0 0]\n[m], vehicle CG offset from\ngeometric center\nveh.mass\n[kg], vehicle mass\nveh.mat\nvehicle surface material code\n(corresponds to 0.63 reflectance)\nveh.life\n[years], vehicle design life\nOE.a\n7,078,000\n[m], orbit semi-major axis\nOE.e\n0.0\norbit eccentricity\nOE.i\n[deg], orbit inclination\nOE.Om\n[deg], argument of periapsis\nOE.om\n[deg], longitude of the ascending\nnode\nplanet.mu\n3.986e14\n[m3/s2], earth gravity constant\nplanet.r_pol\n6,357,000\n[m], earth polar radius\nplanet.r_equ\n6,378,000\n[m], earth equatorial radius\n\nBased on the input parameters in the above table, the\nMATLAB module calculated the cyclical and secular\nangular momentum required to counteract disturbance\ntorques on the spacecraft for one orbit, the required\nmomentum wheel mass for the ACS system, the thrust\nrequired for each instance angular momentum of the\nspacecraft needs to be dumped, and the ACS propulsion\nsystem mass required for dumping angular momentum\nfor the life of the spacecraft.\n\nA plot of the orbit of the FireSat spacecraft example is\nshown below in Figure 4.\n\nFigure 4 FireSat orbit\n\nThe disturbance torques imposed on the spacecraft are\nshown in the polar plot in following figure. Zero\ndegrees on the plot corresponds to the orbital ascending\nnode.\n\nFigure 5 Disturbance Torques for FireSat Test Case\n\nThe curves in the plot in Figure 5 show the disturbance\ntorque due to gravity gradient is the largest contributor\nto the overall disturbance torque on the spacecraft. The\ntorque due to magnetic fields is the second-largest\ncontributor to the total disturbance torque. Torque due\nto solar radiation and aerodynamic drag are the two\nminor contributors to overall disturbance torque. Solar\npressure on the spacecraft is a weak force, which results\nin the torque from solar radiation being small. The\ntorque due to drag is low because the spacecraft is in an\n700km orbit. The Earth's atmosphere at an altitude of\n700km is almost nonexistent.\n\nA comparison of the results from SMAD and results\nfrom the MATLAB code is shown below in Table 4.\n\nTable 4 FireSat-like test case solution vs. Module\nParameter\nValue\nSMAD\nSolution\nCyclical angular momentum\n(per orbit)\n0.3845\n[Nms]\n0.4 [Nms]\nSecular angular momentum\n(per orbit)\n0.0961\n[Nms]\nN/A\nACS Momentum wheel mass\n1.41 [kg]\nN/A\nACS Thruster system mass\n2.46 [kg]\n2.43 [kg]\n\nIt can be seen in the above table that the values for\ncyclical angular momentum and ACS thruster system\nmass are nearly identical. The values for secular\nangular momentum and ACS momentum wheel mass\nare not included in SMAD and therefore can not be\ncompared to the module solution.\n\nModule output\nThe following section will display the capabilities of\nthe MATLAB module by presenting data collected by\nrunning the module for various orbits and spacecraft\nsizes.\n\nFirst, required angular momentum to counteract cyclic\ndisturbance torques on the spacecraft is calculated for\nvarious orbit eccentricities and altitudes at perigee. The\nresults are shown below in Figure 6.\n\nFigure 6 Cyclic angular momentum vs. eccentricity\nfor various radii of perigee\n\nThe curves in the figure show several interesting trends\nwhich correspond with reality. First, the highly-\neccentric orbits generally have lower required angular\nmomentum storage capability. This is due to the fact\nthat these orbits are far away from the Earth for most of\nthe orbit. This nearly eliminates disturbance torques\nfrom drag, magnetic fields, and gravity gradient. The\nremaining torque, caused from solar radiation, is a\nsmall contributor to disturbance torque.\n\nThe reason the angular momentum increases slightly\nnear the high end of eccentricity is most likely due to\nthe fact that the satellite in those orbits will be passing\nby Earth at extremely high speeds compared to the\nsmaller-eccentricity orbits. This high speed near Earth\nmay contribute to much larger torque due to drag for\nthat portion of the orbit.\n\nAnother interesting observation from the figure above\nis that the disturbance torque for satellites around 400\nor 500km altitude is much greater than that of satellites\nin slightly higher low-Earth orbits of 600km. This\nshows a potential significant cost savings for an ACS\nsystem if a LEO satellite were placed in a 600km orbit\nas opposed to a 400km orbit, for example.\n\nFigure 7 below graphs ACS mass versus orbit\neccentricity for various radii of perigee.\n\nFigure 7 ACS mass vs. eccentricity for various radii\nof perigee\n\nFigure 7 is interesting because it shows that the ACS\nmass for highly-eccentric orbits does not follow the\nexact same trend as that shown in the previous figure.\nThe reason the ACS mass is reduced for the highly-\neccentric orbits and does not continue with the same\ntrend as the angular momentum is due to the fact that\nthe highly-eccentric orbits have large orbit periods.\nSince the lifetime of the spacecraft is kept constant for\nthese trend studies, a longer orbit period would result in\nfewer ACS angular momentum dumping situations\nduring the lifetime of the satellite. It would take more\ntime for a longer orbit for the attitude control system to\nbecome saturated with angular momentum and then\nrequire thrust to dump the momentum. This reduces the\nmass of the ACS propulsion system and produces the\ntrends seen in the above figure.\n\nThe figure below plots angular momentum versus\naltitude for various inclinations for circular orbits.\n\nFigure 8 Angular momentum vs. altitude for\nvarious inclinations of circular orbits\n\nFigure 8 shows a clear trend that for all circular orbit\ninclinations, there is an altitude at which the required\nangular momentum storage of the ACS system has\nreduced significantly and levels-off. This altitude is\naround 525km. This means there could be a significant\nbenefit to putting LEO spacecraft in circular orbits\nabove 525km in altitude in order to minimize the\nangular momentum capacity required for the ACS\nsystem.\n\nIn addition, there is a difference in angular momentum\nbetween various inclinations. It is especially noticeable\nat lower altitudes. For example, at 400km altitude, the\nangular momentum required for the 0 degree inclination\n(equatorial) orbit is approximately 20 N*m*s greater\nthan that of the 90 degree inclination (polar) orbit. This\ntrend also reverses itself after the 525km altitude mark\nand the polar orbit becomes the maximum angular\nmomentum case.\n\nThe figure below shows the ACS mass versus orbit\naltitude for circular orbits of various inclinations.\n\nFigure 9 ACS mass vs. altitude for various\ninclinations of circular orbits\n\nFigure 9 clearly exhibits the same trend of that shown\nin Figure 8. This shows that the ACS mass is directly\nrelated to the required angular momentum storage of\nthe spacecraft for circular orbits.\n\nThe figure below shows the angular momentum storage\nrequired versus vehicle size for three different types of\norbits. The vehicle density was held constant while\nvolume and the corresponding mass were varied. The\nthree investigated orbits are the Molniya orbit, a\ncircular LEO orbit of 400km, and a GEO orbit.\n\nFigure 10 Angular momentum vs. vehicle volume\nfor three orbit types\n\nAlthough the vertical axis in the above figure is in a\nlogarithmic scale, it can be seen that the angular\nmomentum required for a 400km LEO orbit is much\ngreater than that for a Molniya or a GEO orbit. The\nmain reason for this is the fact that satellites in Molniya\nor GEO orbits spend all or most of an orbit period far\nfrom Earth. This means the spacecraft in those orbits\nwill not experience much aerodynamic drag, will\nexperience a reduced torque due to gravity gradient,\nand may experience less torque due to the Earth's\nmagnetic fields.\n\nFigure 10 also clearly shows that as the spacecraft\ngrows in size, the angular momentum requirement\nincreases as well. This is due to increased aerodynamic\ndrag.\n\nFigure 11 below shows the ACS mass versus vehicle\nvolume for the same orbits as in the previous figure.\n\nFigure 11 ACS mass vs. vehicle volume for three\norbit types\n\nFigure 11 above shows the trend that the ACS mass\nincreases roughly at the same rate as the angular\nmomentum requirement for orbits of the same type as\nvehicle volume is increased.\n\nConclusion\nA MATLAB module was created which took inputs of\norbital parameters, spacecraft dimensions, and the\nspacecraft environment and output cyclical angular\nmomentum,\nsecular\nangular\nmomentum,\nACS\nmomentum wheel mass, and ACS thruster system mass.\nThe module was checked by running the FireSat\nexample. In addition, other cases were checked with\nthe module and realistic data was output from the\nmodule.\n\nThe values of angular momentum and ACS mass are of\nuse for preliminary design of an attitude control system.\nThe designer can input preliminary information about a\nspacecraft design and get rough numbers for\npreliminary sizing of the ACS system and its impact on\nthe spacecraft mass budget.\n\nFuture Work\nThe module can be expanded to include reaction\nwheels, control-moment gyros, and magnetic torquers.\n\nIn addition, the database of momentum wheels can be\nexpanded to include more wheels and include other\nACS actuator specifications as well.\n\nAnother area for future work is to validate the module\nby running a real life example of a satellite and\ncomparing the results to experimental data.\n\nAppendix A\n\nFireSat-like Test Case Input\n\n%###############################\n%## ACS Env\n%##\n%## Initialization file\n%##\n\n%# Vehicle Properties #%\nveh.dim = [1.7 1 1.7]; %[m], Length of edges on rectangular-prism shaped vehicle (length,\nwidth, depth)\nveh.CG = [0.2 0 0]; %[m], center of gravity offset from geometric center\nveh.mass = 200; %[kg] (minus ACS system)\nveh.mat = 9; %Surface material code\nveh.life = 4; %[yrs], Vehicle lifespan\n\n%# Orbital Elements #%\nOE.a = 7078000; %[m], semi-major axis\nOE.e = 0.0; % eccentricity\nOE.i = 45 *pi/180; %[rad], inclination\nOE.Om = 0 *pi/180; %[rad], argument of periapsis (angle from ascending node to periapsis)\nOE.om = 0; % [rad],longitude of the ascending node (angle between x and asc. node)\n\n%# Planet Properties #%\nplanet.mu = 3.986e14; %[m^3/s^2], Earth gravity constant\nplanet.r_pol = 6357000; %[m], Polar radius\nplanet.r_equ = 6378000; %[m], Equitorial radius\n\nACS Env Main Program\n\n% ## ACS sizing for Environmental Disturbance torques ##\n%\n% Input:\n% OE - Orbital elements for vehicle orbit\n% veh - vehicle parameters\n% planet - planet parameters\n%\n% Output:\n% ang_mom_cyc - cyclical ang momentum storage requirement [Nms]\n% ang_mom_sec - secular ang momentum received per orbit [Nms]\n% w_mass - spec for momentum wheel mass [kg]\n% t_mass - spec for thruster mass [kg]\n% thrust - spec for thruster thrust [N]\n%\n\nfunction [ang_mom_cyc, ang_mom_sec, w_mass, t_mass, thrust] = ACS_env(OE,veh,planet);\n\n%## Calculate vehicle moment of inertia ##%\n\nIxx = veh.mass*(veh.dim(1)^2 + veh.dim(2)^2)/12; %[kg*m^2]\nIyy = veh.mass*(veh.dim(1)^2 + veh.dim(3)^2)/12; %[kg*m^2]\nIzz = veh.mass*(veh.dim(2)^2 + veh.dim(3)^2)/12; %[kg*m^2]\nI = diag([Ixx Iyy Izz])\n\n%# Calculate time for one orbit\nt = 2*pi*sqrt(OE.a^3/planet.mu); %[sec]\n\n%# Calculate Solar radiation torques\nTs = torque_solar(veh.dim, veh.CG, 0, veh.mat);\n\nang_step = pi/50; %[rad]\nang_range = [0:ang_step:2*pi];\nii = 1;\n\n%## Calculate max disturbance torque around one complete orbit ##%\nfor ang = ang_range\n\n%# Calculate orbital postion and velocity\n[r,v] = oe2rv([OE.a OE.e OE.i OE.Om OE.om ang], planet.mu);\nv_mag = norm(v); %[m/s], Calculate velocity magnitude\nR(ii,:) = r; %[m]\n\nV(ii,:) = v; %[m/s]\nV_MAG(ii,:) = v_mag;\n\nE = acos((OE.e + cos(ang))/(1+OE.e*cos(ang))); %Eccentric anomoly\ntime(ii,:) = sqrt(OE.a^3/planet.mu)*(E-OE.e*sin(E)); %time to 'ang'\n\n%# Post-process orbit elevation (latitude)\naa = sqrt(r(1)^2 + r(2)^2);\nlat = atan2(r(3), aa); %[rad]\nLAT(ii,:) = lat;\n\n%# Post-process altitude\nr_planet = (planet.r_pol*planet.r_equ)/...\nsqrt(planet.r_pol^2*cos(lat)^2 + planet.r_equ^2*sin(lat)^2); %[m],\nCalculate planet radius\nassuming\noblate\nsphereoid\n\nalt = norm(r)-r_planet; %[m], Subtract planet radius from vehicle position vector\nmagnitude\nALT(ii,:) = alt;\n\n%# Calculate Aerodynamic torques\n\nTa = torque_aero(veh.dim, v_mag, alt, veh.CG);\nTA(ii,:) = Ta;\n\n%# Calculate Magnetic torques\n\nTm = torque_magnetic(lat, norm(r), r_planet);\nTM(ii,:) = Tm;\n\n%# Calculate Gravity torques\n\nTg = torque_gravity(norm(r), planet.mu, I);\nTG(ii,:) = Tg;\n\nTS(ii,:) = Ts;\n\n%# Sum all disturbance torques\nT(ii,:) = Ts + Ta + Tm + Tg; %[Nm]\n\nii=ii+1; %Increment counter\n\nend\n\n%## post-process time values ##%\nmax_t = ceil(length(time)/2);\nfor jj = [max_t+1: length(time)];\ntime(jj) = 2*time(max_t)-time(jj);\nend\n\n%## Integrate max torques around orbit to find total ang mom ##%\nang_mom = trapz(time,T); %[Nms], total angular momentum around one complete orbit\n\nang_mom_cyc = 0.8 * ang_mom; %[Nms], cyclical angular momentum per orbit\nang_mom_sec = ang_mom - ang_mom_cyc; %[Nms], Secular angular momentum per orbit\n\n%## Size ACS actuators for cyclical momentum storage##%\nwheel_data = get_wheel_data; %Loads Reaction wheel data (mass vs Nms)\nw_mass = polyval(wheel_data, ang_mom_cyc);\n\n%## Size ACS thrusters for secular momentum dumping ##%\norb_sat = 1; %[orbits/saturation]\nday_sat = orb_sat*t/86400; %[day/saturation]\n[thrust, t_mass] = prop_system(veh.dim, veh.CG, veh.life, ang_mom_sec, day_sat);\n\n%## Plot results ##%\n\nplot_planet_3D(R,planet);\n\nfigure(23);\n\npolar(ang_range', T, 'k')\n\nhold on\n\npolar(ang_range', TS, 'b');\n\npolar(ang_range', TA, 'm');\n\npolar(ang_range', TM, 'r');\n\npolar(ang_range', TG, 'g');\n\nhold off\n\nlegend('total', 'solar', 'aero', 'magnetic', 'gravity');\nxlabel('[deg]')\n\ntorque_aero.m\n\n% Bill Nadir\n% 16.851 Satellite Engineering\n% 10/11/2003\n\n% Module for calculating external spacecraft torque caused by Aerodynamic forces\n\nfunction Ta = torque_aero(size,V,h,CG)\n\n% Here the force on the S/C, F, is calculated\n\n% INPUTS\n% size = edge lengths of the S/C: vector (x,y,z) side lengths (meters)\n% V = S/C velocity (m/s)\n% h = S/C altitude (m)\n% CG = location of the center of gravity (x,y,z) for the S/C (assumed offset from the\n% geometric center of (0,0,0)) (m)\n\n% OUTPUT\n% Ta = Torque on S/C due to aerodynamic drag (Nm)\n\n% rho is the atmospheric density at the location of the S/C\n% An atmospheric model for the upper atmosphere (h>25000m) is used to\n% approximate the density of the upper atmosphere\n% T is the atmospheric temperature, p is atmospheric pressure\n\nT = -131.21 + .00299*h; % in deg C\np = 2.488*(((T + 273.1)/216.6)^-11.388); % pressure in KPa\nrho = p / (.2869*(T + 273.1)); % in kg/m^3\n\n% C_D is the drag coefficient of the cube-shaped S/C (assumed = 2.2)\n\nC_D = 2.2;\n\n% Cpa = location of the center of aerodynamic pressure (x,y,z)\n% (assumed at the center of the face of one side of the cube which is\n% facing directly into the atmosphere = max drag)\n\n% Here the surface areas of the sides of the S/C are determined\n% This is used to assume the worst-case drag on the vehicle\n% [x*z y*z x*y] => find max\n\narea = [size(1)*size(3) size(2)*size(3) size(1)*size(2)];\nmax_area = max(area);\nF = 0.5*rho*C_D*(max_area^2)*(V^2);\n\n% here the external aerodynamic torque on the S/C is calculated\nTa = F*max(abs(CG));\n\ntorque_gravity.m\n\n% Disturbance torque from gravity gradient\n%\n% Input:\n% r = vehicle radius [m]\n% mu = planet gravity constant [m^3/s^2]\n% I = vehicle moment of inertia [kg*m^2]\n%\n% Output:\n% T_grav = gravity gradient torque [Nm]\n%\n\nfunction T_grav = torque_gravity(r, mu, I)\n\n%# Max moment\nImax = max(diag(I)); %[kg*m^2]\n\n%# Min moment\nImin = min(diag(I)); %[kg*m^2]\n\n%# Angle deviation from vertical\ntheta = 45*pi/180; %[rad], worst case angle chosen\n\n%# Calc gravity gradient torque\nT_grav = 3*mu*sin(2*theta)*(Imax - Imin)/(2*r^3); %[N*m]\n\ntorque_magnetic.m\n\n% Disturbance torque from magnetic field\n%\n% Input:\n% lat = vehicle latitude [rad]\n% r = vehicle position vector magnitude [m]\n% re = earth radius [m]\n%\n% Output:\n% T_mag = magnetic field torque [Nm]\n%\n\nfunction T_mag = torque_magnetic(lat,r,re)\n\n%# Earth magnetic field (approx as dipole)\nB = (1 + sin(lat)^2)^(0.5) * 0.3/((r/re)^3); %[gauss]\n\nB_t = B*1e-4; %[tesla], [N/(A*m)]\n\n%# Vehicle residual dipole\nD = 1; %[A*m^2]\n\n%# Mag torque\nT_mag = B_t*D; %[Nm]\n\ntorque_solar.m\n\nfunction T_solar = torque_solar(A, CG, i, mat)\n\n% function to computer solar radiation pressure\n\n% INPUTS\n% A: vector describing size of object\n% CG: distance from center of solar pressure to center of mass (m)\n% i: angle of incidence of the Sun (radians)\n% mat: ID of material on outside of craft\n\n% OUTPUT\n% T_solar: solar radiation pressure, in N*m\n\n% some constants:\n% speed of light, m/s\nc = 3*10^8;\n\n% solar constant, W/m^2\nF_s = 1367;\n\n% get reflectance, q, from file based on material used\ntmp = xlsread('material_prop.xls','abs');\nq = tmp(mat,3);\n\n% find surface area of largest face of orbit\nA_s = A(1)*A(2);\nif(A(1)*A(3) > A_s)\nA_s = A(1)*A(2);\nend\n\nif(A(2)*A(3) > A_s)\nA_s = A(2)*A(3);\nend\n\nF = (F_s/c)*A_s*(1 + q)*cos(i);\n\nT_solar = F*(max(abs(CG)));\n\nget_wheel_data.m\n\nfunction p = get_wheel_data\n\nwheel(1) = struct('name', 'Teldix RSI 01-5/15', 'ang_moment', 0.04, 'mass', 0.6);\nwheel(2) = struct('name', 'Teldix RSI 01-5/28', 'ang_moment', 0.12, 'mass', 0.7);\nwheel(3) = struct('name', 'LeoStar', 'ang_moment', 4.7, 'mass', 3.628);\nwheel(4) = struct('name', 'Dyncon MicroWheel 200', 'ang_moment', 0.18, 'mass', 0.93);\nwheel(5) = struct('name', 'Honeywell HR12', 'ang_moment', 50, 'mass', 9.5);\nwheel(6) = struct('name', 'Honeywell HR14', 'ang_moment', 75, 'mass', 10.6);\nwheel(7) = struct('name', 'Honeywell HR16', 'ang_moment', 100, 'mass', 12);\nwheel(8) = struct('name', 'Honeywell Miniature Reaction Wheel', 'ang_moment', 1.0, 'mass',\n1.3);\nwheel(9) = struct('name', 'Honeywell HR0610', 'ang_moment', 12, 'mass', 5.0);\nwheel(10) = struct('name', 'Teldix DR23-0', 'ang_moment', 23, 'mass', 6.9);\nwheel(11) = struct('name', 'Teldix RDR68-6', 'ang_moment', 68, 'mass', 9.1);\nwheel(12) = struct('name', 'Teldix RSI 25-75/60', 'ang_moment', 25, 'mass', 6.3);\nwheel(13) = struct('name', 'Teldix RSI 68-75/60x', 'ang_moment', 68, 'mass', 8.5);\nwheel(14) = struct('name', 'Teldix RSI 4-75/60', 'ang_moment', 4, 'mass', 3.7);\nwheel(15) = struct('name', 'Teldix RSI 12-75/60x', 'ang_moment', 12, 'mass', 4.85);\nwheel(16) = struct('name', 'Teldix RSI 18-220/45', 'ang_moment', 18, 'mass', 6.3);\nwheel(17) = struct('name', 'Teldix RSI 30-280/30', 'ang_moment', 30, 'mass', 8.5);\nwheel(18) = struct('name', 'Teldix RSI 68-170/60', 'ang_moment', 68, 'mass', 8.9);\nwheel(19) = struct('name', 'Teldix RSI 02-25/30', 'ang_moment', 0.2, 'mass', 1.7);\nwheel(20) = struct('name', 'Teldix RSI 04-25/60', 'ang_moment', 0.4, 'mass', 1.7);\nwheel(21) = struct('name', 'Teldix RSI 1.6-25/60', 'ang_moment', 1.6, 'mass', 2.4);\n\nfor(i=1:length(wheel))\n%plot(wheel(i).ang_moment, wheel(i).mass, 'r*');\n%hold on;\nang(i) = wheel(i).ang_moment;\nmass(i) = wheel(i).mass;\nend\n\n[p,s] = polyfit(ang, mass, 4);\n%f = polyval(p, ang);\n%plot(ang, f, 'g*');\n\noe2rv.m\n\n% CREDIT: Christopher D. Hall\n% http://www.aoe.vt.edu/~cdhall/\n%\n% oe2rv.m Orbital Elements to r,v\n%\n% [r,v] = oe2rv(oe,mu)\n%\n\noe = [a e i Om om nu]\n%\n\nr,v expressed in IJK frame\n%\n% a = semi-major axis\n% e = eccentricity\n% i = inclination\n% Om = argument of periapsis\n% om = right ascension of the ascending node (longitude of ascending node)\n% nu = true anomaly (at epoch). ***(location on orbit)***\n\nfunction [ri,vi] = oe2rv(oe,mu)\n\na=oe(1); e=oe(2); i=oe(3); Om=oe(4); om=oe(5); nu=oe(6);\n\np = a*(1-e*e);\n\nr = p/(1+e*cos(nu));\n\nrv = [r*cos(nu); r*sin(nu); 0];\n\n% in PQW frame\n\nvv = sqrt(mu/p)*[-sin(nu); e+cos(nu); 0];\n%\n%\nnow rotate\n%\n\ncO = cos(Om); sO = sin(Om);\n\nco = cos(om); so = sin(om);\n\nci = cos(i); si = sin(i);\n\nR = [cO*co-sO*so*ci -cO*so-sO*co*ci sO*si;\n\nsO*co+cO*so*ci -sO*so+cO*co*ci -cO*si;\n\nso*si co*si ci];\n\nri = (R*rv)';\n\nvi = (R*vv)';\n\nprop_system.m\n\n% Bill Nadir\n% 16.851 Satellite Engineering\n% 10/11/2003\n\n% Module for calculating spacecraft propulsion system mass for required\n% momentum dumping\n\nfunction [F, p_mass] = prop_system(size,CG,lifetime,H,sat_rate)\n\n% INPUTS\n% size = edge lengths of the S/C: vector (x,y,z) side lengths (meters)\n% CG = (x,y,z) coordinates of the location of the CG (offset from the\n% geoometric center of the S/C)\n% lifetime = required lifetime of the spacecraft [yrs]\n% H = maximum stored momentum in any one momentum wheel (saturation\n% point of a momentum wheel) [N*m*s]\n% sat_rate = The rate of saturation of a momentum wheel (used to determine\n% how often momentum needs to be dumped) [days/saturation]\n% OUTPUTS\n% p_mass = total mass of the propulsion subsystem which will provide\n% momentum dumping capability for the spacecraft [kg]\n% F = Thrust required to dump momentum\n\n% Hydrazine (monopropellant) is chosen as the fuel for this propulsion\n% system and a conservative specific impulse, Isp, is 200 seconds\nIsp = 200;\n\n% Here the earth's gravity constant is initialized (9.8 m/s^2)\ng = 9.8;\n\n% Here the impulse time, t, of the thruster firing is set\n% It is assumed that the thruster required for momentum dumping will fire\n% for 1 second\nt = 1;\n\n% Here the locations of the six required thrusters are initialized [x y z]\n% Each row is for a different thruster\nthruster = [0 size(2)/2 size(3)/2; 0 size(2)/2 -size(3)/2; size(1)/2 0 size(3)/2; -size(1)/2\n0 size(3)/2; size(1)/2 -size(2)/2 0; -size(1)/2 -size(2)/2 0];\n\n% Here the moment arms for the six thrusters from the CG are determined\n\n% For X-thrusters (spin about X-axis), moment arm is in Y-direction (cols 1,2)\n% For Y-thrusters (spin about Y-axis), moment arm is in Z-direction (cols 3,4)\n% For Z-thrusters (spin about Z-axis), moment arm is in X-direction (cols 5,6)\nmoment_arms = [abs(CG(2) - thruster(1,2)) abs(CG(2)- thruster(2,2)) abs(CG(3) -\nthruster(3,3)) abs(CG(3) - thruster(4,3)) abs(CG(1) - thruster(5,1)) abs(CG(1) - thruster(6,1))];\n\n% Here we will assume the worst-case distance from the thruster to the CG\n% (shortest) which will require the largest thrust to impart the required\n% torque on the S/C for momentum dumping\nworst_moment_arm = min(moment_arms);\n\n% Here the thrust required to dump the momentum is calculated (per pulse)\nF = H / (worst_moment_arm * t);\n\n% Here the required propellant mass for this propulsion system is estimated\ntotal_pulses = (lifetime * 365.25) / sat_rate; % total thruster pulses required over lifetime\nm_prop = (F * total_pulses * t)/(Isp * g); % mass in kg\n\n% Here the total propulsion system mass is determined by assuming that 85%\n% of the propulsion system mass is propellant (SMAD, p. 660) - conservative\np_mass = m_prop / 0.85; % mass in kg\n\nmaterial_prop.xls20\n\nNAME\nInfo\nMaterialNumber\nAbsorptivity\nReflectance\nOpticalSolarReflector\nSSE\n0.07\n0.93\nQuartzOverSilver\nSMAD\n0.077\n0.923\nSilvercoatedFEP\nSSE\n0.08\n0.92\nSilveredTeflon\nSMAD\n0.08\n0.92\nAluminizedTeflon\nSMAD\n0.163\n0.837\nWhiteEpoxy\nAl.Substrate\n0.248\n0.752\nWhiteEnamel\nAl.Substrate\n0.252\n0.748\nAluminizedFEP\nSSE\n0.16\n0.84\nSilverPaint\nSSE\n0.37\n0.63\nSolarCellFusedSilica\nSMAD\n0.805\n0.195\nBlackPaint\nAl.Substrate\n0.975\n0.025\nTitanium6AL4V\nAsReceived\n0.766\n0.234\nSteelAm350\nAsReceived\n0.567\n0.433\nTitanium6AL4V\nPolished\n0.448\n0.552\nAluminiumTape\nSSE\n0.21\n0.79\nAluminum606T6\nPolished\n0.2\n0.8\nGold\nAsRolled\n0.299\n0.701\nAluminum606T6\nAsReceived\n0.379\n0.621\nGoldizedKapton\nSSE\n0.25\n0.75\nPolishedBeryllium\nSSE\n0.44\n0.56\n\nReferences\n\n1 Meriam, J.L., and Kraige, L.G., Engineering Mechanic: Dynamic, 4th Ed, John Wiley, Inc. 1997.\n2 Hall, Christopher D., oe2rv.m software tool, http://www.aoe.vt.edu/~cdhall/\n3 Benson, Tom, http://www.grc.nasa.gov/WWW/K-12/airplane/atmosmet.html, Earth Atmosphere Model, Metric\nUnits, NASA Glenn Research Center, 2002.\n4 Chobotov, Vladimir A. (Editor), Orbital Mechanics, 2nd Ed., AIAA, 1996, p. 227\n5 Benson, Tom, http://www.grc.nasa.gov/WWW/K-12/airplane/atmosmet.html, Earth Atmosphere Model, Metric\nUnits, NASA Glenn Research Center, 2002.\n6 Wertz, James, and Larson, Wiley, Space Mission Analysis and Design, 2nd Ed., Microcosm, Inc., 1997, p. 353.\n7 E. Ahronovich, M. Balling, Reaction Wheel and Drive Electronics For LeoStar Class Space Vehicles, 12th Annual\nUSU Conference on Small Satellites, 1998, www.sdl.usu.edu/conferences/smallsat/proceedings/12/ssc98/1/ssci5.pdf\n8 Dynacon Enterprises Limited, Dynacon MicroWheel 200, www.dynacon.ca/pdf/files/productpdf_6.pdf\n9 Honeywell Aerospace Electronic Systems, Constellation Series Reaction Wheels,\nhttp://content.honeywell.com/dses/assets/datasheets/constellation_series_reaction_wheels.pdf.\n10 Honeywell Aerospace Electronic Systems, Miniature Reaction Wheels,\nhttp://content.honeywell.com/dses/assets/datasheets/mini-wheel_reaction_wheel.pdf\n11 Honeywell Aerospace Electronic Systems, Honeywell Model HR 0610 Reaction Wheel,\nhttp://content.honeywell.com/dses/assets/datasheets/hr0610_reaction_wheel.pdf\n12 Teldix Space Product Group, Momentum and Reaction Wheels 14-68 Nms with external Wheel Drive Electronics,\nhttp://www.teldix.de/P22/RDR23-68.pdf\n13 Teldix Space Product Group, Momentum and Reaction Wheels 14-68 Nms with integrated Wheel Drive\nElectronics, http://www.teldix.de/P22/RSI25-68.pdf\n14 Teldix Space Product Group, Momentum and Reaction Wheels 2-12 Nms with integrated Wheel Drive\nElectronics, http://www.teldix.de/P22/RSI4-12.pdf\n15 Teldix Space Product Group, High motor torque Momentum and Reaction Wheels 14-68 Nms with integrated\nWheel Drive Electronics, http://www.teldix.de/P22/RSI18-68.pdf\n16 Teldix Space Product Group, Momentum and Reaction Wheels 0.04-0.12 Nms with integrated Wheel Drive\nElectronics, http://www.teldix.de/P22/RSI01.pdf\n17 Teldix Space Product Group, Momentum and Reaction Wheels 0.2-1.6 Nms with integrated\nWheel Drive Electronics, http://www.teldix.de/P22/RSI02.pdf\n18 Sellers, Jerry Jon, Understanding Space: An Introduction to Astronautics, 2nd Ed., McGraw Hill, 2000, p. 570.\n19 Wertz, James, and Larson, Wiley, Space Mission Analysis and Design, 2nd Ed., Microcosm, Inc., 1997, p. 660.\n20 Fortescue, Peter, Stark, John, and Swinerd, Graham, Spacecraft Systems Engineering. John Wiley and Sons Ltd.,\nThird Edition.\n\nProblem Set 4: Efficient Orbit Transfer: Use of Electric\nPropulsion for Orbit Raising\n\nSummary\nA software module was developed to size the power and electric propulsion systems for a\nspacecraft based on spacecraft mass, initial and final orbit radii, and a desired transfer\ntime, assuming constant tangential thrust. Several types of electric propulsion systems\nwere investigated for use in orbit raising of satellites, such as Xenon ion propulsion,\nXenon-Hall effect propulsion, and pulsed plasma thrusters (PPT).\n\nResults\nA test case was run for raising the orbit of a communications satellite from a LEO\nparking orbit into geosynchronous orbit. During the investigation of the various types of\nelectric propulsion systems, it was learned that certain types of electric propulsion\nsystems, such as pulsed plasma thrusters, do not have the capability for reasonable\ntransfer times for such an orbit transfer. Therefore, only the Xenon ion and Xenon Hall\nthrusters were considered for this test case.\n\nIt took approximately 600 \"orbits\" in the spiral orbit transfer maneuver to raise the orbit\nof the satellite from a parking orbit to geosynchronous orbit. It was also noticed that this\nsort of orbit raising maneuver was just within the lifetime capabilities of the two types of\nelectronic propulsion systems considered. This means that this type of electric\npropulsion could be a viable option for orbit raising to geosynchronous orbits for\nsatellites that do not have to be urgently rushed into service in GEO.\n\nUseful References\nElectric Propulsion\nMartinez-Sanchez, Manuel, Spacecraft Electric Propulsion - An Overview, Journal of\nPropulsion and Power, Vol. 14, No. 5, 9/98-10/98, p. 690.\nTajmar, Martin, Advanced Space Propulsion Systems, Springer Wien, New York, 2003,\np. 76.\n\nThe references above contain detailed information about all available electric propulsion\nsystems. They contain performance, mass, and additional information about each\npropulsion system.\n\nSpiral Orbit Raising\nCourse notes, AA420, University of Washington Dept. of Aeronautical and Astronautical\nEngineering, 1999.\n\nThe course notes from this University of Washington engineering course contain a useful\nderivation for a simplified spiral maneuver using electric propulsion with constant thrust.\nMore detailed calculations exist for optimal maneuvers using electric propulsion, but the\nderivation from this course is best for the scope of this problem set.\n\nProblem Set 4 Solution\nMEMORANDUM\n\n16.851 Satellite Engineering\n\nTo: Professor David W. Miller\nCol. John E. Keesee\nFrom: 16.851 Students\nDate: 29 October 2003\nSubj: Use of Electric Propulsion for Orbit Raising: Orbits, Propulsion, and Power\ncc: Marilyn Good\nMOTIVATION\nElectric propulsion systems offer the capability for mass-efficient orbit transfers. The\nspecific impulse for electric propulsion is much higher than for chemical propulsion, ranging\nfrom 1,500 to 20,000 seconds;1 however, electric propulsion provides much lower thrust than\nchemical propulsion. This results in much longer spacecraft maneuver times for a given\nchange in velocity. If short maneuver times are not critical, electric propulsion may lend\nitself to be used as the propulsion system for orbit transfer maneuvers.\n\nPROBLEM STATEMENT\nCreate a software module that sizes the power and electric propulsion systems for a\nspacecraft, given the spacecraft mass, initial and final circular orbit radii, and a specified\ntransfer time, assuming constant tangential thrust. Use this module to characterize the\ndependence of propulsion and power system mass on orbit transfer requirements. Investigate\nthis dependency for several different types of electric propulsion, such as pulsed plasma\nthrusters (PPT), Xenon ion propulsion, and Xenon Hall-effect propulsion.\n\nSOLUTION\nSee attached.\n\n1 http://web.mit.edu/dept/aeroastro/www/labs/SPL/electric.htm, MIT Space Propulsion Lab Website, 2002.\n\nEfficient Orbit Transfer: Use of Electric Propulsion for Orbit Raising\nSoftware Designed to Provide Preliminary Sizing of Power and Propulsion Systems\n\n16.851 Satellite Engineering\n\nMassachusetts Institute of Technology, Cambridge, MA\nOctober 2003\n\nMotivation\nElectric propulsion systems offer the capability for\nmass-efficient orbit transfers. The specific impulse for\nelectric propulsion is much higher than for chemical\npropulsion, ranging from 1,500 to 20,000 seconds;1\nhowever, electric propulsion provides much lower\nthrust than chemical propulsion. This results in much\nlonger spacecraft maneuver times for a given change in\nvelocity. If short maneuver times are not critical,\nelectric propulsion may lend itself to be used as the\npropulsion system for orbit transfer maneuvers.\nProblem Statement\nCreate a software module that sizes the power and\nelectric propulsion systems for a spacecraft, given the\nspacecraft mass, initial and final circular orbit radii, and\na specified transfer time, assuming constant tangential\nthrust. Use this module to characterize the dependence\nof propulsion and power system mass on orbit transfer\nrequirements. Investigate this dependency for several\ndifferent types of electric propulsion, such as pulsed\nplasma thrusters (PPT), Xenon ion propulsion, and\nXenon Hall-effect propulsion.\nIntroduction\nInputs to the software module include the initial and\nfinal orbit radii and the orbit transfer time. The module\ndetermines the constant propulsive force required to\nmove the spacecraft from the initial orbit to the final\norbit in the specified time. Using this constant force,\nand given the type of propulsion system, the propulsion\nsystem is sized by determining the total propulsion\nsystem mass required for the orbit transfer. For this\npropulsion system, the batteries and solar arrays\nrequired to support the maneuver are sized. The\nperformance results are compared for several types of\nelectric propulsion systems.\nSoftware Module\nTest Case Script\nRequirements\nThe MATLAB script electric_propulsion.m is used to\nsimplify the use of the primary software modules, and\nto run pre-configured test cases to produce the results\npresented in this report.\nDescription of the code\nThe script initializes the orbit transfer and spacecraft\nproperties, calls each of the primary software modules\nin turn, and plots the results. In summary, the script\nperforms the following functions:\n-\nSet inputs: spacecraft mass, propulsion type,\ntransfer time, initial radius, final radius.\n-\nGet propulsion system properties from\npropulsion_properties.m.\n-\nDetermine the thrust and the orbit\ncharacteristics for the transfer maneuver using\nep_orbit.m.\n-\nSize the power and propulsion systems to\nprovide the needed thrust and âv, using\npropulsion_power.m.\n-\nPlot the results.\nTyping electric_propulsion at the MATLAB prompt\nruns the test case and produces the output shown in this\nreport.\nPropulsion Properties Module\nRequirements\nThe MATLAB module propulsion_properties.m sets\nthe propulsion system-specific values based on the type\nof propulsion system selected.\nDescription of the code\nThe desired type of propulsion system is passed to the\nmodule as a character string (e.g. 'ion'). Propulsion\nsystem constants such as specific impulse and\n\nefficiency for the specified type of electric propulsion\nsystem are returned in a data structure. This structure is\na required input for the electric_propulsion.m and\npropulsion_properties.m modules.\nInputs\np_system: a string specifying which propulsion\nsystem is to be used. Valid values are 'ion' (Xenon\nIon), 'hall' (Xenon Hall), and 'ppt' (Pulsed Plasma\nThrusters).\nOutputs\nproperties: a data structure containing descriptions\nof properties inherent to the propulsion system type,\nsuch as Isp, efficiency, and lifetime.\nOrbital Transfer Module\nRequirements\nThe MATLAB module ep_orbit.m determines the\nconstant tangential thrust required to expand an orbit\nusing an electric propulsion system, and characterizes\nthe expansion path, determining quantities such as the\neclipse entry and exit times and the âv applied during\neach orbit.\nIn order to maintain reasonable scope in the project,\nseveral assumptions were made with respect to the\ninitial and final orbits and transfer path. First, all orbits\nare assumed to be circular and equatorial. This\nsimplification applies to the initial and final orbits, as\nwell as to all intermediate steps in the transfer path.\nThe assumption of circularity during the transfer is\nreasonable both because the âv imparted by the\npropulsion system during the maneuver is far smaller in\nmagnitude than the orbital velocity, and because this âv\nis applied continuously throughout the orbit, rather than\nat discrete points.\nDescription of the code\nThe code first verifies that all input quantities lie within\nvalid ranges. The constant thrust is then calculated\nusing Equation 14. The algorithm then steps through\nthe transfer path one orbit at a time, calculating variable\nquantities such as mass, eclipse time, orbital radius, and\nâv, and recording how these quantities change through\nthe transfer maneuver.\nInputs\nmass (kg): the initial mass of the spacecraft.\nprop: a data structure containing propulsion system\nproperties, as output by propulsion_properties.m.\ntime (s): the required orbital transfer time.\nr0 (m): initial circular orbit radius.\nr1 (m): final circular orbit radius.\nOutputs\nthrust [N]: constant thrust magnitude required to\ncomplete the specified maneuver.\nradii [m]: history of orbit radii.\nperiod [s]: history of orbital period.\neclipse [s]: history of eclipse entry and exit times.\ndeltav [m/s]: history of applied âv.\nDerivation of the spiral orbit v equation2\nFor thrust T<<mg, the specific mechanical energy Îµ of\nthe spacecraft in its orbit changes as:\nm\nv\nT\nt\nm\nE\nt\n\nâ\n=\n=\nd\nd\nd\ndÎµ\n\n(1)\nFor thrust applied in the velocity direction, this can be\nexpressed using the magnitudes of T and v. The\nacceleration of the spacecraft is related to the specific\nmechanical energy as:\nav\nm\nTv\nt\n=\n=\nd\ndÎµ\n\n(2)\nIn a circular orbit, the specific mechanical energy and\nits derivative can also be expressed as:\nr\nÎ¼\nÎµ\n-\n=\n\n(3)\nt\nr\nr\nt\nd\nd\nd\nd\nÎ¼\nÎµ =\n\n(4)\nEquating these two relations for the time derivative of\nthe specific mechanical energy:\nav\nt\nr\nr\nt\n=\n=\nd\nd\nd\nd\nÎ¼\nÎµ\n\n(5)\nSubstituting in the velocity in a circular orbit\nr\nv\nÎ¼\n=\n\n(6)\nleads to:\n\nt\na\nr\nr\nar\nt\nr\nr\na\nt\nr\nr\nd\nd\nd\nd\nd\nd\nÎ¼\nÎ¼\nÎ¼\nÎ¼\n=\n=\n=\n\n(7)\nThis relationship can be integrated to give the change in\nr as a function of the change in time:\n(\n)\nd\nd\nr\nr\nr\nt\nt\na\nr\nr\nt\na\nr\nr\nr\nr\nt\nt\n-\n=\n-\n=\n-\n= â«\nâ«\nÎ¼\nÎ¼\n\n(8)\nRearranging this relationship reveals the âv:\n(\n)\nv\nv\nv\nr\nr\nt\nt\na\nâ\n=\n-\n=\n-\n=\n-\nÎ¼\nÎ¼\n\n(9)\nNote that this result, although simple and apparently\nintuitive, is not generally true for orbital transfers using\nchemical propulsion. The âv required to expand an\norbit using impulsive burns is actually less than this\namount, since the burns can be made at discreet optimal\npoints during the orbit.\nDerivation of thrust equations\nThe thrust T is related to the propellant mass flow rate\nand exit velocity c as\nc\nm\nT\n\n=\n\n(10)\nThis relationship can be integrated for constant mass\nflow rate (i.e. constant thrust and exit velocity) over a\ntime period t to obtain the propellant mass for constant\nT and c:\nc\nTt\nt\nm\nm\nt\nt\np\n=\n= â«\nd\n\n(11)\nThe rocket equation provides a relationship between the\ninitial spacecraft mass, propellant mass, âv, and exit\nvelocity:\nc\nV\np\ne\nm\nm\nâ\n-\n-\n= 1\n\n(12)\nCombining these results gives:\nââ \nâ\nââ\nâ-\n=\nâ\n-\nc\nV\ne\nt\nc\nm\nT\n\n(13)\nUsing the âv equation previously derived, this equation\ncan be solved for the velocity v as a function of time t.\n(\n)\nâ\nâ\nâ \nâ\nâ\nâ\nâ\nâ\n-\n=\n-\nc\nr\nr\ne\nt\nc\nm\nT\nÎ¼\nÎ¼\n\n(14)\n(\n)\nc\nm\ntT\ne\nc\nr\nr\n+\n=\n-\nÎ¼\nÎ¼\n\n(15)\nâ¥â¦\nâ¤\nâ¢â£\nâ¡-\n-\nâ¥\nâ¦\nâ¤\nâ¢\nâ£\nâ¡\n-\n=\nc\nm\ntT\nr\nr\nc\nln\nÎ¼\nÎ¼\n\n(16)\nââ\nâ \nâ\nââ\nâ\nâ\n+\nâ¥â¦\nâ¤\nâ¢â£\nâ¡-\n=\nln\nr\nc\nm\ntT\nc\nr\nÎ¼\nÎ¼\n\n(17)\nThis equation can then be solved for the radius r as a\nfunction of time:\nln\n\n-\nââ\nâ \nâ\nââ\nâ\nâ\n+\nâ¥â¦\nâ¤\nâ¢â£\nâ¡-\n=\nr\nc\nm\ntT\nc\nr\nÎ¼\nÎ¼\n\n(18)\nThis equation can be used to calculate the radius at any\ntime t during the transfer maneuver.\nPropulsion and Power Sizing Module\nRequirements\nThe MATLAB module propulsion_power.m calculates\nthe mass of the electric propulsion system, the required\nsolar array area, the required battery mass, and the mass\nof the solar arrays based on a given spiral-shaped orbit\ntransfer. The module requires inputs of constant thrust\nduring the orbit transfer, transfer time, time information\nwhich specifies when the spacecraft is in eclipse or\nsunlight during the orbit transfer, and the selection\nabout which type of electric propulsion system is being\ninvestigated for the orbit transfer.\n\nDescription of the code\nThe code assumes that the starting point of the spiraling\norbit transfer is at the moment when the satellite enters\nthe earth's eclipse in the initial orbit. Each \"orbit\" of\nthe spiral orbit transfer is considered to be the time\nfrom when the satellite enters the earth's eclipse until\nthe next time it enters the eclipse. These orbits of the\nspiral orbit transfer are used to size the power system of\nthe spacecraft. This is discussed in the Theory &\nEquations section for this module.\nThe code first checks to make sure that the input values\nfrom the user of initial orbit, final orbit, transfer time,\nand propulsion system type, are valid. For example, the\ntransfer time must be less than the lifetime of the\nselected propulsion system.\nConstants\nThe first constant used in this module is the\ngravitational acceleration constant, g. It is input into\nthe module as being equal to 9.81 m/s2.\nThe next sets of constants are specific for each\npropulsion system. Table 1 lists the basic constants\nused to describe the performance of each propulsion\nsystem, and Table 2 lists additional properties and\nconstants.\nTable 1. Propulsion system constants3\nPropulsion\nSystem\nIsp\n(s)\nEfficiency\n(%)\nLifetime\nXe Ion\n10000 hr\nXe Hall\n>7000 hr\nPPT\n4000 N*s\nTable 2. Additional propulsion system constants4\nPropulsion\nSystem\nThrust\nRange5\n(N)\nThruster\nMass\n(kg/kW)\nPPU\nMass\n(kg/kW)\nMisc.\nMass\n(kg/kW)\nXe Ion\n.01 -\n.20\n4.5\nXe Hall\n.08 -\n.20\n2.5\nPPT\n.001 -\n.10\nsmall\n\nTwo additional constants used are used in the\ncalculations for sizing the power system. These\nconstants, Xe and Xd, are the efficiencies of the\nelectrical paths from the solar arrays through the\nbatteries to the loads and the path directly from the\narrays to the loads, respectively.6 Since it is assumed\nthat a direct energy transfer power system is being used,\nthe values for Xe and Xd are 0.65 and 0.85,\nrespectively.\nThe final constant used in this module is the solar\nillumination intensity. This is assumed to be\n1358 W/m2.\nInputs\nthrust (N): This input is the constant thrust required\nfor the spacecraft to achieve its desired final orbit\nwithin the specified transfer time.\norbit (s): This input is an array of times during the\norbit. The numbers specify the time during the orbit\ntransfer when the spacecraft enters and exits the\nearth's eclipse.\nProperties (s): the propulsion system properties, as\noutput by propulsion_properties.m.\nt_transfer (s): This input is the total transfer time\nspecified\nfor\nthe\nspiral-shaped\norbit\nraising\nmaneuver.\nOutputs\npower.A_cells_req (m2): This output is the total solar\narray area required to provide the necessary power\nfor the propulsion system being used in the orbit\ntransfer maneuver.\npower.m_cells_req (kg): This output is the total mass\nof the solar arrays required to power the propulsion\nsystem as well as charge the batteries when in\nsunlight.\npower.m_batt_req (kg): This output is the total mass\nof the batteries needed to provide power to the\npropulsion system during the worst case eclipse\n(longest duration).\npropulsion.m_thruster (kg): This output is the mass\nof the thrusters in the chosen propulsion system.\npropulsion.m_ppu (kg): This output is the mass of the\npower processing unit in the chosen propulsion\nsystem.\npropulsion.m_misc (kg): This output is the mass of\nmiscellaneous components in the chosen propulsion\nsystem.\npropulsion.m_propellant (kg): This output is the\nmass of the propellant in the chosen propulsion\nsystem.\nTheory & Equations\nBased on the inputs to the module, the first desired\nquantity to be calculated is the required power for the\npropulsion system. In order to calculate the required\npower, the mass flow rate of the propellant must be first\ndetermined. This is done using Equation 19 below.7\n\ng\nI\nF\nm\nsp\n=\n\n(19)\nIn the above equation, F is the propulsion system\nconstant thrust, Isp is the specific impulse of the\npropulsion\nsystem,\nand\ng\nis\nthe\ngravitational\nacceleration constant.\nNext, the required power for the propulsion system is\ndetermined in Equation 20.8\nÎ·\nm\nF\nP\n\n=\n\n(20)\nIn the above equation,\nis the efficiency of the\npropulsion system, as reported in Table 1.\nThe next required quantity to be determined is the\npower required to be generated by the solar arrays for\neach orbit. This would include the power provided to\nthe propulsion system as well as the power provided to\nthe batteries for charging. The following equation is\nused to determine this required power for each \"orbit\"\nportion of the orbit transfer.\n,...\n2,1\nwhere =\nââ\nâ \nâ\nââ\nâ\nâ\n+\n=\ni\nT\nX\nT\nX\nT\nP\nP\ni\ni\ni\ni\nd\nd\nd\ne\ne\nsa\n\n(21)\nIn Equation 21, Te and Td are the durations of the\neclipse and daylight times for each orbit portion of the\nspiral orbit transfer. Each orbit is determined by the\ntime at which the satellite enters the earth's eclipse until\nthe time it next enters the eclipse. These orbits are\ndenoted in the equation with the subscript i. It can be\nseen that only the eclipse and daylight times change\nwith each successive orbit.\nNormally, the numerator of Equation 21 has different\npower values for daytime and eclipse, but in this case,\nsince the power required by the propulsion system does\nnot vary from daylight to eclipse, this quantity is held\nconstant at the value P, determined earlier.\nNext, the power generated per area by the solar arrays\nis determined. This calculation is shown in\nEquation 22. It should be noted here that Gallium\nArsenide solar cells are being used for the purposes of\nthis software module. In addition, it should be noted\nhere that it is assumed that beyond the inherent\ninefficiencies in the solar cells, no additional\ndegradation is assumed for the solar cells during the\norbit transfer. This assumption is made because the\norbit transfer is relatively short compared to the life of\nthe satellite and the arrays will likely not degrade\nsignificantly during this orbit raising maneuver.\nTherefore, the power determined in the following\nequation is assumed to be an end-of-life (EOL) power\nfor the solar arrays as far as the orbit raising maneuver\nis concerned.\nd\nm\nW\ncells\nEOL\nI\np\n)\n(\n)\n(\nÎ·\n=\n\n(22)\n\ncells is the efficiency of the\nGaAs cells, which is approximately 18%. In addition,\nthe quantity Id is the inherent degradation of the solar\ncells. This is assumed to be 0.77.9\nIt should also be mentioned here that the solar arrays\nare assumed to track the sun and therefore it is assumed\nthat the radiation from the sun is perfectly incident at all\ntimes on the solar arrays. This means that any reduced\nperformance to any incidence angle to the solar\nradiation is ignored.\nNext, the required solar array area for each orbit during\nthe transfer maneuver is determined. This is shown in\nthe equations below.\nEOL\nsa\ncells\np\nP\nA\ni\ni\n)\n(\n=\n\n(23)\n)\nmax(\n_\n_\ni\ncells\nA\nreq\ncells\nA\n=\n\n(24)\nEquation 24 show how module determines the required\nsolar array area to be the maximum of all the areas\ncalculated for all orbit portions of the spiral orbit\nraising maneuver.\nNext, the required solar array mass can be determined.\nThis is done using the following equation from\nSMAD.10\n)\nmax(\n.0\n_\n_\ni\nsa\nP\nreq\ncells\nm\nâ\n=\n\n(25)\nNext, the battery capacity is determined to allow for\nsizing of the batteries for the spacecraft. It is assumed\nthat NiH2 batteries are being used with a specific\nenergy density of approximately 50 W*hr/kg.11 It is\nalso assumed that only a single battery is being used.\nEquation 26 below is used to determine the battery\ncapacity required for each orbit eclipse during the orbit\ntransfer.\nn\nDOD\nPT\nC\ni\ni\ne\nr\n)\n(\n=\n\n(26)\nIn the above equation, DOD is the depth-of-discharge\nof the nickel-hydrogen batteries. This assumed to be\n75% since the number of cycles the batteries will need\nto be cycled for throughout the orbit transfer will not\ndegrade the depth-of-discharge capability of the\nbatteries to any significant amount.12\n\nThe quantity n is the power transfer efficiency to the\nbatteries. This is assumed to be 0.9.13\nNext, the required battery mass is determined. This is\nshown in the following two equations.\nkg\nhr\nW\nr\ni\ni\nC\nbatt\nm\n*\n_\n=\n\n(27)\n)\n_\nmax(\n_\n_\ni\nbatt\nm\nreq\nbatt\nm\n=\n\n(28)\nFinally, the propulsion system mass is determined using\ninformation from Table 2. The required figures from\nthe table are multiplied by the propulsion system power\nto determine the masses of all the components of the\npropulsion system. In addition, the mass of the\npropellant is determined from the following equation.\ntransfer\nt\nm\nmpropellant\n_\n*\n\n=\n\n(29)\nOnce the propellant mass is determined, the total\npropulsion system mass is calculated as the sum of the\nthruster, power processing unit, miscellaneous, and\npropellant masses.\nResults\nThe software module was run for a specific test case of\nraising a satellite from a circular parking orbit at an\naltitude of 10,000 km to a geosynchronous orbit. In\naddition, the transfer time was varied by the user within\nthe ranges allowed for Xenon ion and Xenon Hall\npropulsion systems.\nIt should be noted that the orbit number being used in\nmany of the following charts is how the spiral orbit\ntransfer is broken up into individual parts. Each orbit in\nthe transfer is determined from the time the satellite\nenters the earth's eclipse until it reenters the eclipse.\nIn Figure 1, it can be seen how the orbital period\nchanges with the orbit number, as the radius of the orbit\nincreases.\nOrbit number\nOrbital period [hours]\n\nFigure 1. Orbit period vs. orbit number\nThe data in Figure 1 agree with what is expected for a\nspiraling orbit transfer, where the radius is constantly\nincreasing. Figure 2 shows how the orbit radius varies\nwith the orbit number for the test case.\n1.5\n2.5\n3.5\n4.5\nx 10\nOrbit number\nRadius [km]\n\nFigure 2. Orbit radius expansion with orbit number\nIt can be seen in Figure 2 that the orbit radius increases\nfrom the initial parking orbit until it reaches the orbit\nradius for geosynchronous orbit.\nFigure 3 shows the time spent in eclipse during each\norbit of the spiral transfer, and Figure 4 shows the\nfraction of each orbit during which the satellite is in\neclipse.\n\nOrbit number\nTime in eclipse [s]\n\nFigure 3. Eclipse time vs. orbit number\n2.5\n3.5\n4.5\n5.5\n6.5\n0.04\n0.05\n0.06\n0.07\n0.08\n0.09\n0.1\n0.11\n0.12\n0.13\nNormalized radius (r/RE)\nEclipse fraction\n\nFigure 4. Eclipse fraction vs. normalized radius\nAs seen in Figure 3, as the radius increases, the time\nspent in eclipse should increase; however, as seen in\nFigure 4, the ratio of time spent in eclipse to the orbital\nperiod should decrease as the orbit radius increases. It\nshould also be noted from Figure 4 that the orbit\ntransfer ends when the orbit radius is 6.5 times the\nradius of the Earth, in geosynchronous orbit.\nFigure 5 displays how the âv per orbit provided by the\npropulsion system varies for each successive orbit\nduring the transfer.\n\nOrbit number\nSingle-orbit âV [m/s]\n\nFigure 5. Single-orbit deltaV vs. orbit number\nAs expected, the âv per orbit imparted by the electric\npropulsion system is continuously increasing as time\nelapses during the transfer orbit. This occurs because\nthe orbital radius is constantly increasing throughout\nthe orbit transfer due to the constant thrust provided by\nthe electric propulsion system.\nFigure 6 shows a perspective view of the complete path\ntraversed during the spiral orbit transfer, from the initial\norbit to the final orbit. The color of the spiral orbit\ntransfer path varies from red at the 10,000 km altitude\nparking orbit to blue at the final, geosynchronous orbit.\n-5\n-6\n-4\n-2\n-1\n\nFigure 6. Orbit transfer path\nApproximately 600 orbits are required to reach the final\ndesired orbit, resulting in the densely-packed path\nshown above. Figure 7 shows a blown-up view of a\nportion of the spiral orbit track, in which individual\nspiral tracks are visible.\n\n2.5\n2.6\n2.7\n2.8\n2.9\n3.1\n3.2\nx 10\n2.5\n2.6\n2.7\n2.8\n2.9\n3.1\n3.2\nx 10\nDistance [km]\nDistance [km]\n\nFigure 7. Blown-up view of spiral orbit path\nIt can be seen from Figure 7 that the change in orbital\nradius in each successive orbit is very small as\ncompared to the orbital radius. This behavior is\nexpected for low-thrust, long term maneuvers.\nFigure 8 shows the required thrust from the propulsion\nsystem as a function of the user-specified transfer time.\n\nFigure 8. Dependency of thrust on transfer time\nAs expected, the thrust required to complete the transfer\nin the specified time decreases as the transfer time\nincreases, for both the Xenon Ion and Hall propulsion\nsystems. This makes sense because the required\nacceleration (and therefore thrust) should decrease as\nthe transfer time increases.\nIt can also be seen in Figure 8 that the required thrust\nfor each transfer time differs for the ion and Hall\npropulsion systems. This is due to the differences in\nmass flow rate of propellant out of the thrusters. The\nXenon Hall thrusters have a lower Isp than the Ion\nthrusters, which corresponds to a higher mass flow rate\nto produce a given thrust magnitude. The mass of the\nspacecraft\ndecreases\nmore\nrapidly\nwith\nhigher\npropellant mass flow rates, leading to more rapidly\ndecreasing spacecraft mass, with the result that lower\naverage thrust is requirement to achieve a given\nacceleration. This effect is likely due in part to the\nassumption that the initial spacecraft mass is\nindependent of the type of propulsion system used.\nFigure 9 shows how the total mass of the propulsion\nand power systems varies as a function of the specified\norbit transfer time.\nTransfer time [hr]\nPropulsion and power mass [kg]\nIon\nHall\n\nFigure 9. Total propulsion and power system mass\nas a function of transfer time\nIt can be seen in Figure 9 that no designs exist for\ntransfer times less than approximately 5000 hours. This\nis due to the fact that neither the Xenon Ion nor the Hall\npropulsion systems are capable of producing high\nenough thrust to complete the orbit transfer maneuver\nin less time than 5000 hours. The maximum thrust\ncapability of the two propulsion systems is shown\nexplicitly in Figure 8 with a red horizontal line.\nIt should also be mentioned that the preceding figures\ndo not show any data for the pulsed plasma propulsion\nsystem. It was determined during the testing of this\nsoftware module that the PPT propulsion system does\nnot have the capability to provide the âV necessary to\nperform the orbit transfer maneuver test case. Although\nPPT results are not shown, the software module is\ndesigned to handle such types of propulsion systems,\nand will return performance results given input\nrequirements appropriate to the types of propulsion\nsystems being considered.\nTable 3 summarizes the final results for the sizing of\nthe power and propulsion systems for the orbital\ntransfer test case, using the Xenon Ion propulsion\nsystem. Table 4 summarizes the results for sizing the\nsystem using the Xenon Hall effect propulsion system.\n\nTable 3. Sizing results using Xenon Ion propulsion\nSolar cell area\nSolar cell mass\nBattery mass\nThruster mass\nPPU mass\nMisc. mass\nPropellant mass\nTotal mass\n19.0 m2\n142.7 kg\n81.5 kg\n6.4 kg\n20.4 kg\n25.5 kg\n223.3 kg\n499.8 kg\nTable 4. Sizing results using Xenon Hall propulsion\nSolar cell area\nSolar cell mass\nBattery mass\nThruster mass\nPPU mass\nMisc. mass\nPropellant mass\nTotal mass\n26.2 m2\n197.0 kg\n112.6 kg\n15.8 kg\n28.1 kg\n35.2 kg\n130.9 kg\n519.5 kg\n\nBased on these results, the Ion and Hall propulsion\nsystems appear to have similar performance for the test\ncase transfer scenario. The Ion system is slightly less\nmassive than the Hall-effect system, even though it\nrequires 70% more propellant to accomplish the\ntransfer. The mass savings is due to the lesser power\nrequirement for the ion engine, which translates directly\ninto smaller, less massive solar arrays and batteries.\nConclusion\nA software module was created to size the propulsion\nand power systems for a spacecraft that uses electric\npropulsion for simple orbital transfers. The module\nrequires the spacecraft mass, the initial and final\ncircular orbit radii, a transfer time, and a propulsion\nsystem type. The software then determines the constant\ntangential thrust required to complete the orbit transfer\nin the specified time, the path of the satellite during the\ntransfer maneuver, and the masses of the power and\npropulsion systems.\nThis tool is useful for preliminary sizing of propulsion\nand power requirements for a satellite when electric\npropulsion is used for orbital transfer. Although the\ntangential thrust approach to orbital transfer is sub-\noptimal, it is useful for rapid comparison of the relative\nperformance of different types of propulsion system.\nThis tool can be easily extended to compare an arbitrary\nnumber of different types of electric propulsion system\ntypes. If the transfer scenario investigated is not within\nthe capability of a propulsion system, results for that\nsystem are not displayed.\nFuture Work\nOne major task that could be undertaken in the future to\nimprove and expand the capability of this software\nmodule would be to allow for plane changes during the\norbit transfer. Another task would be to implement the\nequations for optimal thrust. Either one of these tasks\nwould\ninvolve\na\nsignificant\namount\nof\nwork\n(appropriate for Master's thesis-level research14), but\nwould result in an extremely useful tool which could be\nused to provide detailed results for a greater number of\norbit transfer scenarios.\n\nAppendix A: MATLAB source code\nThe MATLAB files containing the implementations of the equations and relations described in this document are\nlisted below. To run the test case, simply type electric_propulsion at the MATLAB prompt.\n\nelectric_propulsion.m\n% constants\nR_earth = 6378.1363; % [km] Earth average radius\ngeo = 42164.169637; % [km] geostationary, from STK.\nfignum = 0;\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% begin user-configurable inputs %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% initial spacecraft mass\nm0 = 2000;\n\n% propulsion system type ('ion', 'hall', 'ppt')\nprop_type = 'ion';\n\n% orbital transfer time\nttime = 3600*24*250;\n\n% initial orbital radius\nr0 = R_earth + 10000;\n\n% final orbital radius\nr1 = geo;\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% end user-configurable inputs %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% get the propulsion system properties\nprop = propulsion_properties(prop_type);\n\n% get the orbital transfer properties\n[thrust, radii, period, eclipse, deltav] = ep_orbit(m0, prop, ttime, r0*1000,\nr1*1000);\n\n% size the propulsion and power systems\n[propulsion, power] = propulsion_power(thrust,eclipse,prop,ttime);\n\n%%%%%%%%%%%%%%%%%%%\n% display results %\n%%%%%%%%%%%%%%%%%%%\n\nradii = radii/1000; % change from [m] to [km]\norbits = 1:length(radii); % orbit numbers\netime = eclipse(2,:)-eclipse(1,:); % time spent in eclipse\n\nfignum=fignum+1;\nfigure(fignum)\nplot(orbits, period/3600);\nxlabel('Orbit number')\nylabel('Orbital period [hours]');\n\nfignum=fignum+1;\nfigure(fignum)\nplot(orbits, radii);\nxlabel('Orbit number');\n\nylabel('Radius [km]');\n\nfignum=fignum+1;\nfigure(fignum)\nplot(orbits, etime);\nxlabel('Orbit number');\nylabel('Time in eclipse [s]');\n\nfignum=fignum+1;\nfigure(fignum)\nplot(orbits, deltav);\nxlabel('Orbit number');\nylabel('Single-orbit {\\Delta}V [m/s]');\n\nfignum=fignum+1;\nfigure(fignum)\nplot(radii/R_earth, etime./period);\nxlabel('Normalized radius (r/R_E)');\nylabel('Eclipse fraction');\n\n% plot all the orbit tracks around the Earth\nfignum=fignum+1;\nfigure(fignum)\nt = 0:pi/40:2*pi;\nx = cos(t);\ny = sin(t);\nz = zeros(size(x));\n[sx,sy,sz] = sphere(20);\ncolormap('white');\nh1 = surf(sx,sy,sz);\nset(h1,'EdgeColor',[.5 1.0 .5]);\nset(h1,'FaceColor',[.8 1.0 .8]);\nhold on\nc = 'bgrcmyk';\nscale = radii/R_earth;\nfor i=orbits\nh2 = plot3(scale(i)*x,scale(i)*y,scale(i)*z);\nr = 1.0 - i/orbits(end)/2;\nb = 0.5 + i/orbits(end)/2;\nset(h2, 'Color', [r 0.3 b]);\nend\nhold off\naxis equal;\n\n% zoom in to see some of the tracks closer up\nfignum=fignum+1;\nfigure(fignum)\nfor i=orbits\nh3 = plot(radii(i)*x,radii(i)*y);\nr = 1.0 - i/orbits(end)/2;\nb = 0.5 + i/orbits(end)/2;\nset(h3, 'Color', [r 0.3 b]);\nhold on\nend\nhold off\naxis equal;\nmaxrad = max(radii);\naxis([maxrad/sqrt(3) 1.1*maxrad/sqrt(2) maxrad/sqrt(3) 1.1*maxrad/sqrt(2)]);\nxlabel('Distance [km]')\nylabel('Distance [km]')\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% trade over prop type and transfer time %\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% propulsion system type ('ion', 'hall', ppt')\n\nprop_types = {'ion', 'hall'};\n\n% orbital transfer time\nttimes = 3600*24*[150:20:290];\n\ndata = [];\nfor i=1:length(prop_types)\nprop_type = prop_types{i};\n\nfor j=1:length(ttimes)\nttime = ttimes(j);\n\n% get the propulsion system properties\nprop = propulsion_properties(prop_type);\n\n% get the orbital transfer properties\n[thrust, radii, period, eclipse, deltav] = ...\nep_orbit(m0, prop, ttime, r0*1000, r1*1000);\n\n% size the propulsion and power systems\n[propulsion, power] = propulsion_power(thrust,eclipse,prop,ttime);\n\n% save the interesting data\ndata(i,j).thrust = thrust;\ndata(i,j).time = ttime;\nif ~isempty(propulsion) & ~isempty(power)\ndata(i,j).mass = propulsion.m_thruster + propulsion.m_ppu + ...\npropulsion.m_misc + propulsion.m_propellant + ...\npower.m_cells_req + power.m_batt_req;\nelse\n% no design was feasible for this case\ndata(i,j).mass = NaN;\nend\nend\nend\n\ntimes = [];\nthrusts = [];\nmasses = [];\n\n% sort the data into standard vectors\nfor i=1:length(prop_types)\ntimes = [times cat(2,data(i,:).time)'];\nthrusts = [thrusts cat(2,data(i,:).thrust)'];\nmasses = [masses cat(2,data(i,:).mass)'];\nend\n\nfignum=fignum+1;\nfigure(fignum)\nplot(times/3600,thrusts);\nxlabel('Transfer time [hr]');\nylabel('Required thrust [N]');\nlegend('Ion','Hall');\n\nfignum=fignum+1;\nfigure(fignum)\nplot(times/3600,masses);\nxlabel('Transfer time [hr]');\nylabel('Propulsion and power mass [kg]');\nlegend('Ion','Hall');\n\npropulsion_properties.m\nfunction [properties] = propulsion_properties(p_system)\n%PROPULSION_PROPERTIES sets propulsion system properties\n%\n% [PROPERTIES] = PROPULSION_PROPERTIES(P_SYSTEM);\n% Returns a structure containing properties for the selected\n% type of propulsion system. This structure is used as an\n% input to EP_ORBIT and PROPULSION_POWER.\n%\n% Inputs\n% P_SYSTEM A string describing the type of propulsion system\n% to use. Valid strings are 'ION', 'HALL', or 'PPT'.\n%\n% Outputs\n% PROPERTIES A structure containing propulsion system\n% characteristics in the following fields:\n%\n% type - descriptive string\n% Isp - specific impulse (s)\n% eta - efficiency\n% lifetime - lifetime (hours)\n% th_mass - thruster mass (kg/kW)\n% ppu_mass - power processor unit mass (kg/kW)\n% misc_mass - misc. prop. system mass (kg/kW)\n% max_thrust - Maximum thrust allowed (N)\n% min_thrust - Minimum thrust allowed (N)\n%\n% An empty set is returned if P_SYSTEM is not a\n% valid string.\n\n% William Nadir\n% 16.851: Satellite Engineering\n% 10/26/2003\n\nproperties = [];\nswitch lower(p_system)\n\ncase 'ion' % Xenon Ion propulsion system\ntype = 'ion';\nIsp = 2800; % specific impulse (s)\neta = 0.65; % efficiency\nlifetime = 10000; % lifetime (hours)\nth_mass = 4.5; % thruster mass (kg/kW)\nppu_mass = 8; % power processor unit mass (kg/kW)\nmisc_mass = 10; % miscellaneous prop system mass (kg/kW)\nmax_thrust = .2; % Maximum thrust allowed (N)\nmin_thrust = .01; % Minimum thrust allowed (N)\n\ncase 'hall' % Xenon Hall propulsion system\ntype = 'hall';\nIsp = 1600; % specific impulse (s)\neta = 0.50; % efficiency\nlifetime = 7000; % lifetime (hours)\nth_mass = 2.5; % thruster mass (kg/kW)\nppu_mass = 8; % power processor unit mass (kg/kW)\nmisc_mass = 10; % miscellaneous prop system mass (kg/kW)\nmax_thrust = .2; % Maximum thrust allowed (N)\nmin_thrust = .08; % Minimum thrust allowed (N)\n\ncase 'ppt' % Pulsed plasma (Teflon) propulsion system\ntype = 'ppt';\nIsp = 1000; % specific impulse (s)\neta = 0.07; % efficiency\nlifetime = 4000; % lifetime (N*s)\n\nth_mass = 120; % thruster mass (kg/kW)\nppu_mass = 110; % power processor unit mass (kg/kW)\nmisc_mass = 0; % miscellaneous prop system mass (kg/kW)\nmax_thrust = .1; % Maximum thrust allowed (N)\nmin_thrust = .001; % Minimum thrust allowed (N)\n\notherwise\ndisp('Invalid input for p_system');\nreturn\nend\n\nproperties.type = type;\nproperties.Isp = Isp;\nproperties.eta = eta;\nproperties.lifetime = lifetime;\nproperties.th_mass = th_mass;\nproperties.ppu_mass = ppu_mass;\nproperties.misc_mass = misc_mass;\nproperties.max_thrust= max_thrust;\nproperties.min_thrust= min_thrust;\n\nep_orbit.m\nfunction [thrust, radii, per, eclipse, deltav] = ep_orbit(m0, prop, ttime, r0, r1)\n%EP_ORBIT Calculates circular orbit data for electric propulsion maneuvers\n%\n% [THRUST, RADII, PERIOD, ECLIPSE, DELTAV] = EP_ORBIT(MASS, PROP, TIME, R0, R1)\n%\n% Determines the constant tangential thrust needed to expand a circular orbit\n% of radius R0 to radius R1 in the specified time TTIME. Calculates the start\n% and end times of each eclipse period, assuming an orbit in the plane of the\n% ecliptic. Solves for the constant direction (tangential), constant thrust\n% case, rather than the optimal case, which is beyond the scope of this project.\n%\n% Inputs\n% MASS [kg] Initial spacecraft mass\n% PROP [-] Propulsion data structure (output of PROPULSION_PROPERTIES)\n% TIME [s] Required orbital transfer time\n% R0 [m] Initial circular orbit radius\n% R1 [m] Final circular orbit radius\n%\n% Outputs\n% THRUST [N] Constant thrust required to complete the maneuver\n% RADII [m] History of orbit radii\n% PERIOD [s] History of orbit period\n% ECLIPSE [s] Eclipse enter and exit times for each orbit\n% DELTAV [m/s] Delta V applied through each orbit\n\n% constants\nmu = 3.986004415e14; % [m^3/s^2]\nR = 6378136.3; % [m] Earth radius\ng = 9.80665; % [m/s^2] gravitational acceleration at Earth radius\n\n% propellant specific impulse and exit velocity\nIsp = prop.Isp;\nc = Isp*g;\n\n% check for invalid inputs\nif (m0 <= 0)\nerror('Initial mass must be positive');\nend\nif (Isp <= 0)\nerror('Isp must be positive');\n\nend\nif (ttime <= 0)\nerror('Transfer time must be positive');\nend\nif (r0 <= R)\nerror(['Initial radius must be greater than Earth radius (' num2str(R) ' m)']);\nend\nif (r1 < r0)\nerror('Final radius must be greater than or equal to initial radius');\nend\n\n% constant thrust required to perform this maneuver in the specified time\nthrust = (m0*c/ttime)*(1-exp((sqrt(mu/r1)-sqrt(mu/r0))/c));\n\n% initial values\ntimein = 0;\ntimesun = 0;\norbit = 0;\ncdeltav = 0;\neclipse = [];\ndeltav = [];\nr = r0;\nm = m0;\n\n% iterate through the orbits, saving data\nwhile (r<r1)\norbit = orbit+1;\n\n% assume slow variation, so radius and mass are constant through each orbit\nradii(orbit) = r;\nmass(orbit) = m;\n\n% time required to complete one orbit\nperiod = 2*pi*sqrt(r^3/mu);\nper(orbit) = period;\n\n% the delta V applied through this orbital period\ndeltav(orbit) = 2*period*thrust/m;\n\n% angle off eclipsed sun line at which eclipse begins\ntheta = asin(R/r);\n\n% time at which s/c crosses the eclipsed sun line\nif (orbit == 1)\ntimesun = period*theta/(2*pi);\ntimein = 0;\nelse\ntimesun = timesun + period;\ntimein = timesun - period*theta/(2*pi);\nend\n\n% time at which s/c leaves eclipse\ntimeout = timesun + period*theta/(2*pi);\n\n% save eclipse data\neclipse(1,orbit) = timein; % enter eclipse\neclipse(2,orbit) = timeout; % leave eclips\n\n% determine starting radius and mass for next iteration\nr = mu*(c*log(1-period*thrust/(m*c))+sqrt(mu/r))^-2;\nm = m-thrust*period/c;\nend\n\npropulsion_power.m\nfunction [propulsion, power] = propulsion_power(thrust,orbit,properties,t_transfer)\n% Here the basic information for the propulsion systems is input\n%\n% This module is used for sizing the electric propulsion system along with\n% the required solar arrays and batteries for a circular orbit transfer\n%\n% Inputs\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% THRUST = Constant thrust required to put complete the orbit\n% transfer within the specific transfer time (N)\n% ORBIT = Data specifying times at which the satellite is in sun\n% and eclipse during sprialing orbit transfer (times of\n% entering and exiting eclipse)\n% PROPERTIES = a structure containing propulsion system properties,\n% as created by the function PROPULSION_PROPERTIES.\n% T_TRANSFER = transfer time specified by user (seconds)\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n% Outputs\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n% PROPULSION = structure containing fields with propulsion system data\n% m_thruster\n% m_ppu\n% m_misc\n% m_propellant\n%\n% POWER = structure containing fields with power system data\n% A_cells_req = total required solar cell area (m^2)\n% m_cells_req = total estimated solar array mass (kg)\n% m_batt_req = total battery mass required (kg)\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n% William Nadir\n% 16.851: Satellite Engineering\n% 10/26/2003\n\npropulsion = [];\npower = [];\n\ntype = properties.type;\nIsp = properties.Isp;\neta = properties.eta;\nlifetime = properties.lifetime;\nth_mass = properties.th_mass;\nppu_mass = properties.ppu_mass;\nmisc_mass = properties.misc_mass;\nmax_thrust = properties.max_thrust;\nmin_thrust = properties.min_thrust;\n\n% Here a check is performed to determine whether the input values of thrust\n% and transfer time are acceptable for use with the chosen propulsion system\nvalidity = 1;\nswitch type\ncase {'ion', 'hall'}\nif t_transfer > lifetime*3600\ndisp(['ERROR: transfer time (' num2str(t_transfer/3600) ...\n' hr) exceeds life of propulsion system (' num2str(lifetime) ' hr).']);\nvalidity = 0;\nend\n\ncase {'ppt'}\nif t_transfer > lifetime/thrust\ndisp(['ERROR: transfer time (' num2str(t_transfer/3600)...\n\n' hr) exceeds life of propulsion system ('\nnum2str(lifetime/thrust/3600)...\n' hr) at ' num2str(thrust) ' N thrust.']);\nvalidity = 0;\nend\nend\n\n% is thrust within the allowed range?\nif thrust > max_thrust\ndisp('ERROR: thrust is over the capability range of propulsion system')\nvalidity = 0;\nend\nif thrust < min_thrust\ndisp('ERROR: thrust is under the capability range of propulsion system')\nvalidity = 0;\nend\n\n% this lets all error messages display before returning\nif (~validity)\nreturn\nend\n\ng = 9.81; % gravitational acceleration constant (m/s^2)\n\n% This is the constant power required for the electric propulsion system to\n% get the satellite from orbit A to orbit B\nmass_flow_rate = thrust / (Isp * g); % (kg/s)\n\nprop_power_continuous = (thrust^2) / (2 * mass_flow_rate * eta); % (Watts)\n\n% Constants for direct energy power control system\nXe = 0.65;\nXd = 0.85;\n\neta_cells = 0.18; % cell efficiency for GaAs cells (conservative = 18%)\n\nI_degradation = 0.77; % inherent degradation of solar cells\n\np_sun = 1358; % solar input power density (W/m^2)\n\n% Here we calculate the energy collection effectiveness of GaAs solar cells\n% assuming no degradation over the time of orbit transfer (short time span)\npower_per_area = eta_cells * p_sun * I_degradation; % (W/m^2)\n\n% Initialize parameters for for loop to utilize 'orbit' vector data\n[A, B] = size(orbit);\n\n% The number of columns in the 'orbit' array is the number of orbits + 1\nN_orbit = B - 1;\n\n% Here the 'orbit' array is analyzed to determine the total eclipse and day\n% times for each 'orbit' in the spiral orbit transfer\nfor I = 1:N_orbit\n\neclipse_times(I) = orbit(2,I) - orbit(1,I); % (seconds)\nday_times(I) = orbit(1,I+1) - orbit(2,I); % (seconds)\n\nend\n\n% Here the depth-of-discharge (DOD) for the battery is defined (NiH2\n% battery)\nDOD = .80;\n\n% Here the battery charging efficiency is defined (90%)\ncharge_efficiency = 0.9;\n\n% Here the battery specific energy density is defined for NiH2 batteries\nsp_energy_density = 50; % (W*hr/kg)\n\n% this for loop determines the power required for each portion of the\n% spiral orbit transfer as well as the solar array area and battery mass\n% required for each portion of the orbit transfer\nfor M = 1:N_orbit\n\n% P_sa is the required power for the propulsion system for one entire\n% orbit (Watts)\nP_sa(M) = (((prop_power_continuous * eclipse_times(M)) / Xe) + ...\n((prop_power_continuous * day_times(M)) / Xd)) / day_times(M);\n\nA_cells(M) = P_sa(M) / power_per_area; % required area of solar arrays (m^2)\n\nm_cells(M) = 0.04 * P_sa(M); % estimated mass of solar arrays (kg)\n\n% Here the required battery capacity is calculated for one battery with\n% an efficiency of 0.9 for each eclipse during the spiral orbit\n% transfer (W*hr)\nCr(M) = (prop_power_continuous * (eclipse_times(M)/3600)) / ...\n(DOD * charge_efficiency);\n\n% Here the required battery mass is determined\nm_batt(M) = Cr(M) / sp_energy_density; % (kg)\n\nend\n\n% required solar cell area to provide power for the orbit transfer (m^2)\nA_cells_req = max(A_cells);\n\n% required solar array mass (kg)\nm_cells_req = max(m_cells);\n\n% required battery mass to provide power for the orbit transfer (kg)\nm_batt_req = max(m_batt);\n\nm_thruster = th_mass * prop_power_continuous / 1000; % (kg)\nm_ppu = ppu_mass * prop_power_continuous / 1000; % (kg)\nm_misc = misc_mass * prop_power_continuous / 1000; % (kg)\nm_propellant = mass_flow_rate * t_transfer; % (kg)\n\n% power output structure\npower.A_cells_req = A_cells_req;\npower.m_cells_req = m_cells_req;\npower.m_batt_req = m_batt_req;\n\n% propulsion output structure\npropulsion.m_thruster = m_thruster;\npropulsion.m_ppu = m_ppu;\npropulsion.m_misc = m_misc;\npropulsion.m_propellant = m_propellant;\n\nReferences\n\n1 http://web.mit.edu/dept/aeroastro/www/labs/SPL/electric.htm, MIT Space Propulsion Lab Website, 2002.\n2 Course notes, AA420, University of Washington Dept. of Aeronautical and Astronautical Engineering, 1999.\n3 Martinez-Sanchez, Manuel, Spacecraft Electric Propulsion - An Overview, Journal of Propulsion and Power,\nVol. 14, No. 5, 9/98-10/98, p. 690.\n4 ibid.\n5 Tajmar, Martin, Advanced Space Propulsion Systems, Springer Wien, New York, 2003, p. 76.\n6 Wertz, James, and Larson, Wiley, Space Mission Analysis and Design, 2nd Ed., Microcosm, Inc., 1997, p. 396.\n7 Sellers, Jerry Jon, Understanding Space: An Introduction to Astronautics, 2nd Ed., McGraw-Hill, 2000, p. 537.\n8 Tajmar, Martin, Advanced Space Propulsion Systems, Springer Wien, New York, 2003, p. 74.\n9 Wertz, James, and Larson, Wiley, Space Mission Analysis and Design, 2nd Ed., Microcosm, Inc., 1997, p. 397.\n10 ibid, p. 317.\n11 ibid, p. 403.\n12 ibid p. 404.\n13 ibid, p. 405.\n14 Kimbrel, Scott, Optimization of Electric Propulsion Orbit Raising, SM thesis, Massachusetts Institute of\nTechnology, 2002.\n\nProblem Set 5: Space Hotel Design: Preliminary\nStructural Design and Cost Estimation\n\nSummary\nA space hotel was designed based on a modular concept, the capability of modern launch\nvehicles, and various human factors. Finally, a cost model is used to estimate the cost of\nmanufacturing, assembling, launching, and operating the space hotel. The software\nmodule created is used to investigate how the duration of each guest's stay at the hotel\nand the maximum occupancy of the hotel affect the total cost of the hotel.\n\nResults\nBased on the design constraints of the hotel design, the only variation in the structural\ndesign was the number of habitation modules around the outer ring of the hotel. This had\na major cost impact on the hotel.\n\nAnother major cost impact on the hotel was the duration of the stay of each guest. The\nlonger a guest stayed, the less frequently a vehicle would need to dock with the hotel to\nbring and take home guests. Launching people to the hotel is a significant cost.\n\nBased on these constraints, it was found that the most economical space hotel design is\none in which there are few guests and they stay for long durations of time. This is the\nlowest cost design for a space hotel.\n\nUseful References\nHuman Factors\nConners, M.M., et al., Living Aloft, NASA, 1985.\nWieland, Paul., Designing For Human Presence in Space, NASA Marshall Space Flight\nCenter , 1999, Â§ 2.1.\nStafford, K.W., et al., Advanced Life Support Systems Integration, Modeling, and\nReference Missions Document, NASA-Lyndon B. Johnson Space Center, 2001.\nSloan, James H., Commercial Space Station Requirements, AIAA-2000-5228, 2000.\nWoodcock, Gordon, Space Stations and Platforms, Orbit Book Company, 1986.\n\nThe references listed above contain a great amount of useful information about what is\nrequired to support human life in space. Beyond these references, there are many AIAA\npapers that discuss manned space missions and what is required beyond unmanned space\nmissions once humans are involved. Information such as shielding, food, water, and\natmosphere is presented in these references. This information is key in estimating\nspacecraft volume and mass sizes.\n\nCost Modeling\nReynerson, Dr. Charles M., A Space Tourism Platform Model for Engineering and\nEconomic Feasibility, 2000.\n\nThe reference listed above contains a useful cost model for estimating cost for space\ntourism missions. The main input to the cost model is mass, so if a realistic mass\nestimate can be made, it may be possible to calculate a reasonable first-order cost\nestimate based on the cost model presented in the reference.\n\nSpace Hotel Design: Preliminary Structural Design and Cost Estimation\nSoftware Designed to Determine Preliminary Cost Estimate Based on Human Factors and Structural\nDesign\n\n16.851 Satellite Engineering\n\nMassachusetts Institute of Technology, Cambridge, MA\nNovember 2003\n\nMotivation\nThroughout history, people have been fascinated with\nexploring outer space. Until recently, only astronauts\nhave had the privilege of being able to experience life\nin outer space. However, in 2001, the first space\ntourist, Dennis Tito, traveled to the International Space\nStation onboard a Russian Soyuz rocket.\n\nThe travels of Dennis Tito are just the beginning for\nspace tourism. A new space tourism industry would be\nan entirely new commercial use of space and a huge\npotential new market. Space tourism may encourage\nother private investment in the use of space, which may\nin turn support significant future space exploration.\n\nProblem Statement\nDesign a concept for a Space Hotel orbiting Earth.\nCreate a CAD model of the hotel to \"rough-out\" the\nstructural design as well as visualize the concept. The\nSpace Hotel should provide all the amenities required\nby a tourist. These amenities should include gravity,\npower, food, water, and waste removal.\n\nDesign a MATLAB module to size the hotel structure\nas well as estimate the requirements for supporting\nhuman life. The user will set the number of hotel\nguests and the duration of the stay of each guest on the\nSpace Hotel. These inputs will be the driving factors\nfor the concept design. Based on the design concept for\nthe hotel, estimate the costs involved in launching,\nassembling, and operating the hotel. The module will\ninvestigate cost with respect to the number of guests\nand the duration the stay of each guest.\n\nIntroduction\nFirst, a conceptual design is created of the Space Hotel.\nA CAD model of the hotel is created with enough detail\nto present the rough conceptual design of the Space\nHotel.\n\nThe spin rate of the hotel in order to produce artificial\ngravity is determined. Also, determine the other needs\nof the human guests of the hotel are determined. These\nneeds will include electricity, food, water, waste\nremoval, and crew.\n\nCost models are developed to estimate the cost for\nlaunch, assembly, and operation of the hotel. Using\nthese cost models, the cost with respect to the number\nof guests and the duration of the stay of each guest is\ndetermined. In addition, trends are shown which\nillustrate how a Space Hotel can be operated in a cost-\nefficient manner.\n\nSpace Hotel Structural Design\nComponents\nThe Space Hotel consists of four main components:\nhabitation modules, nodes, a center module, and\nconnecting modules between the habitation modules\nand the center module. Figure 1 shows the\nconfiguration of the Space Hotel.\n\nFigure 1 Isometric view of Space Hotel\n\nAll four components are visible in Figure 1, above. The\nlarge cylindrical components in the shape of a ring are\nthe habitation modules. The spherical-shaped objects in\nbetween the habitation modules are the nodes. The\nlong, thin, cylindrical components connecting the nodes\nto the center component can be seen as well. The large\ncylindrical component in the middle is the \"center\nmodule.\"\n\nHabitation Modules\nThe habitation modules are broken up into several\ncompartments for hotel guests to live in. In addition,\nthere is a large volume inside the module reserved for\nequipment to maintain the station as well as other\nstorage space.\n\nFigure 2 Habitation module internal compartments\n\nThe habitation modules are design in order to fit inside\na realistic launch vehicle fairing. For the purposes of\nthis project, an Atlas V, 5-meter fairing was chosen.\nThe Atlas V is a likely launch vehicle to be used to\nlaunch components for a Space Hotel into orbit. The\nfigure below shows one of the habitation modules\nfitting inside the launch vehicle fairing envelope.\n\nFigure 3 Habitation module inside Atlas V fairing\n\nIn addition, the size and shape of the habitation module\nis limited by the payload mass capability of the Atlas V\nlaunch vehicle. The estimated mass of one of the\nhabitation modules, which is explained later in this\npaper, is roughly 10,000 kg. This mass is less than the\npayload capability of the Atlas V launch vehicle to\nmany LEO orbits. For example, the Atlas V has the\ncapability of launching 20,050 kg into a 185 km\naltitude, 28.5 degree inclination orbit.i\nNodes\nThe spherical shaped components between the\nhabitation modules are simply interconnecting nodes\nwhich allow guests to transfer from one habitation\nmodule to another as well as to the center module. The\nspheres in the picture are simply placeholders for the\ncomponents in a more detailed design.\n\nConnecting Cylindrical Components\nThe long, thin, cylindrical components connecting the\nnodes to the center component are simply tubes which\nallow hotel guests to pass from the habitation module\nsection of the hotel to the center module.\n\nCenter Module\nThe center module of the hotel is designed to roughly\nthe same dimensions as the habitation modules in order\nfor it to fit inside the same launch vehicle fairing. The\npurpose of the center module is to allow the hotel\nguests the experience of floating in a zero-gravity\nenvironment. Leisure activities can be held in this\nsection of the hotel.\n\nLife Support System\n\nOur Space Hotel is situated in orbit around the earth,\nwhere the environment system for the passengers of the\nhotel is isolated except for the periodical supply by\nspace transportation systems.\n\nTo support the life of passengers in the space\nenvironment, specific needs need to be met. The basic\nneeds are the appropriate air composition, temperature,\nand humidity which should be maintained continuously.\nThe consumables such as food and water should be\nsupplied on passengers' demands. Wastes should be\nseparately stored or removed periodically to maintain\nthe optimal mass of the hotel and to keep the\ncleanliness.\n\nIn addition to those metabolic needs and effluents of\nhumans, other supplies such as food preparation device,\nface/hand washing water, urinal flushing and etc should\nbe also included. For a facility which stays in the\n\nspace environment for a long period, such as our Space\nHotel, or International Space Station, functions such as\nO2 recovery and recycling of waste water and solid\nwaste become important to keep the re-supply and\nstorage expenses from becoming too high.\nECLSS\nThe current state-of-the-art system for long duration life\nsupport is embodied in the International Space Station\n(ISS) environmental control and life support system\n(ECLSS). ECLSS includes the function of providing a\nhabitable environment, including clean air and water,\nplus solid waste processing, food processing, biomass\nproduction and thermal control, and supporting\ninterfaces with other subsystems.\n\nConsidering the similar nature of the ISS and our Space\nHotel, such as a durable structure for a long stay in the\nspace environment, the choice was made to use ECLSS\nfor our Space Hotel. In the following section, the\ndetails of each requirement and corresponding ECLSS\ndevice which satisfy the need will be presented.\n\nSupporting System to meet Human Requirements\nInterior Space\nThe ISS model is again utilized to estimate the personal\nvolume necessary to experience a comfortable stay at\nour Space Hotel. In the limited space inside the\nstructure, the astronauts rest, sleep (in a separate\nsection), eat, shower, and also exercise on treadmills on\nthe ISS. The volume of personal space on the ISS was\ncalculated by dividing the volume of the habitat module\nby the number of the crewmembers, and was computed\nto be 645.6 (ft^3/person). This number was feasible\nconsidering that the minimum volume requirement\ncalculated by Breeze (1961)ii was:\n50ft^3/person\n(1-2 days)\n260 ft^3/person (more than 1 or 2 months)\n600 ft^3/person (for more than 2 months)\nThe mission length of the space station is between 3-6\nmonths.\n\nHowever, there are three concerns that we have to think\nabout:\n- The nature difference between ISS and Space\nHotel. More space required for comfort\n- Weightless state which allows passengers to\nutilize the space well is unavailable inside our\nSpace Hotel. With the artificial gravity, more\nspace is needed.\n- Less space per person is needed as crew size\nincreases\n2. Thermal system\nAlthough people can endure a relatively wide range of\ntemperature and humidity conditions, the proper range\nin the habitat is important to maintain high work\nefficiency. For our hotel, it is crucial to provide\ncomfort as a service. The ideal temperatures range from\n18 to 27 C (65 to 80 F) and \"ideal\" humidity ranges\nfrom dew points of 4 to 16 C (40 to 60 F). Thermal\nmanagement is divided into two systems, the internal\nand external thermal control systems. The former\nincludes the avionic air assemblies which provide air-\ncooling for equipment, the common cabin air\nassemblies which control cabin air, condensate storage,\nand the water flow loops for hear transport. The\nexternal control system is included in the assessed\ncooling-mass penalty.\nFood subsystem\nFood will be provided in individual entrees from Earth.\nA mix of fresh, dehydrated, and full-water preserved,\nshelf-stable or frozen food will be used. This system\nrequired\nthe\nsignificant\namount\nof\npackaging.\nSupporting technology includes freezers and some food\npreparation equipment.\nAir\nIn order to generate air conditions as close as the\natmospheric configuration, oxygen, carbon dioxide,\nnitrogen, water vapor, trace contaminants, dust, and\nsmoke particles are used as the components in the space\nhabitats. Four separate systems, CO2 removal, CO2\nreduction, O2 generation, and trace gas contaminants\ncontrol systems, works to revitalize the air and maintain\nthe quality of the air. Regenerative CO2 removal\nequipment based on molecular sieve technology, which\ndoes not require periodical replacement or storage\nspace, is installed in the ISS ECLSS. CO2 Reduction is\nnecessary to extract O required to generate O2. For a\nstructure designed for the longer stay in the apace, the\nloss of the mass of CO2 leads to increased storage or\nre-supply requirements. O2 generation maintains\nsufficiently high oxygen partial pressure (21.4 kPa at\nnear sea-level). Trace gas contaminants control\nsystems is important in a closed structure like the Space\nHotel because the volume is limited relative to\ncontainment sources. In addition, Atmosphere Control\nand Supply system is required to maintain proper\ncomposition and pressure of the air during the flight.\nThe following chart shows the flow of air component in\na recycle loop. This flowchart was extracted from a\ndesign report written by NASA.iii\n\nFigure 4 Atmosphere control and supply\nWater\nEnsuring a clean supply of potable water and water for\nbathing is essential. Water management consists of\nthree parts, water storage and distribution, water\nrecovery, and water quality monitoring.\n\nFor water recovery, urine is processed by vapor\ncompression distillation, which claims 88 percent water\nrecovery. The brine is either returned to Earth or\ndumped. The water processor deals with all\nunconfirmed water such as hygiene water, effluent from\nthe vapor compression distillation, and condensation\nfrom dehumidification.\n\nWhen recycled waste water is used, the potential for\ncontamination is higher than when using stored water.\nThus, process control water quality monitor provides\nwater quality assurance. The following chart shows the\nflow of water management systems, extracted again\nfrom the report by NASA.iv\n\nFigure 5 Water recovery and management\n6. Waste Subsystems\nThe wastes generated on a space habitat can be\nclassified into four general types: metabolic wastes\nconsisting of moist solids including feces and vomit,\nother solid wastes, liquid wastes including urine and\nwaste hygiene water, and gaseous wastes. For long\nduration missions this mass lost when the waste is\ndumped becomes prohibitive and methods are needed\nto recover to useable products as much mass as\npossible. On ISS, urine is recycled as explained in the\nWater section. Solid waste is stored and returned on\nthe transfer vehicle or burned upon re-entry in an\nexpendable re-supply vehicle. The toilet is also\nincluded under the subsystems.\n\nOther Considerations\n\nAlthough omitted in our design of the Space Hotel, we\ncould aim to provide an even higher grade comfortable\nenvironment. For example, additional devices to\ndecrease the level of odor and noise, or some decorative\ninterior lighting could be installed. Other possibilities\nare to expand recreational facilities such as a plant\ngrowth facility, and improve safety devices such as fire\ndetection and suppression systems.\n\nMass Estimation\n\nMass estimation for each component of human\nrequirement was calculated using the actual data from\nthe ISS. The optimization of ECLSS design in terms of\nthe lowest launch cost was computed applying of\nEquivalent System Mass as related to the mass volume,\npower cooling and crew time needs.v Considering that\nmasses of most of the components are proportional to\nthe number of crews and the duration, the values shown\nin the following table is calculated by simple division\nwith the number of crews and the duration time of ISS.\nThese values are part of inputs for software module\ndescribed in the following section.\n\nTable 1 Mass estimation of human requirements\nConsumables\n[kg/CM-d]\n\nSupply\nAir\n0.84\n\n( + 0.29)\ntank mass\n\nFood\n1.37\n\n( + 0.24)\ndeposable packaging\n\nThermal\n0.003515\n\nWater\ndrink,\nfood preparation,\nhand/face washing,\nand urinal flushing\n\nClothing\n1.6\nincluding\nEVA\nclothe\nWaste\nWaste\n0.15\n\nInfrastructure\n[kg/CM]\n\nISS ECLSS\ntechnology\nincluding air tank,\nfood freezers, CO2\nremoval\ndevice,\nEVA support\n\nSoftware Module\nStructural Sizing Module\nRequirements\nThe MATLAB module structure.m determines the mass\nof the Space Hotel and the required spin rate of the\nhotel to maintain 1g of artificial gravity in the\nhabitation modules of the spacecraft.\n\nDescription of Code\nThe code uses the inputs of the number of guests and\nthe duration of the stay of each guest to calculate the\nnumbers and sizes of the various components in the\nSpace Hotel. The code calculates the masses of each\ncomponent in the hotel and outputs the total structural\nmass of the hotel.\nConstants\nThe first constant used in this module is the\ngravitational acceleration constant, g. It is input into\nthe module as being equal to 9.81 m/s2.\n\nThe remaining constants are the \"free volumes\" of the\nhabitation and center modules in the Space Hotel.\nThese volumes are determined from the fairing size of\nthe Atlas V 5-meter fairing as well as the payload lift\ncapability of the launch vehicle. Taking these\nconstraints into consideration, the habitation modules\nwere determined to have a \"free volume,\" Vhab, of\napproximately 4500 ft3.\n\nThe center module was determined to have a \"free\nvolume\" of approximately 4500 ft3.\n\nFigure 6 Dimensions of habitation and center\nmodules (inches)\n\nInputs\nN_guests: This input is the total number of people\nliving onboard the Space Hotel at any given time.\n\nduration (days): This input is the time each person\nliving on the Space Hotel will spend onboard before\nthey head back to earth.\n\nOutputs\nstr_mass (kg): This output is the total structural mass\nof the entire Space Hotel. This is a sum of all of the\nhabitation modules, the interconnecting cylindrical\nmodules, as well as the center structural module.\n\nspin_rate (m/s): This output is the spin rate of the\nSpace Hotel which is required to create artificial gravity\nof 1g in the habitation modules of the hotel.\n\nTheory & Equations\nThe first step in determining the structural mass of the\nhotel is to determine how much volume each guest of\nthe hotel will need during his/her stay. In 1961, Breeze\nnoted that a person on a space station should need\napproximately 50, 260, and 600 cubic feet of volume\nfor durations on the space station of 2, 30, and 60 days,\nrespectively. This is discussed in the \"Supporting\nSystem to Meet Human Requirements\" section earlier\nin this paper.\n\nSince this is a Space Hotel and should be somewhat\nluxurious and relaxing for the hotel guests, the numbers\nprovided from Breeze are multiplied by a factor of 3 to\nresult in volumes of 150, 780, and 1800 cubic feet for\ndurations of 2, 30, and 60 days, respectively. In\naddition, since it has been estimated that the minimum\nvolume for a space station is 700 cubic feet per personvi\nand it is unlikely that any person would stay on the\nhotel for a short time (i.e. less than one week), the\nvolume per person estimated here is reasonable.\n\nIn order to determine guest required volumes for\ndurations between the data points given, linear\ninterpolation was done. This can be seen below in\nFigure 7.\n\nFigure 7 Linear interpolation of volume vs. duration\nNext, the total required volume for the guests is\ncalculated by multiplying the number of guests by the\nvolume required per guest.\n\nguest\ntotal\nV\nguests\nN\nV\n*\n_\n=\n\n(1)\n\nThe number of habitation modules is then determined\nfrom the following equation and then rounding up to\nthe next highest integer.\n\nhab\ntotal\nhab\nV\nV\nN\n=\n\n(2)\n\nBased on the sizing requirements given from the launch\nvehicle fairing constraints, the overall size of the\nhabitation modules is then given. Next, the mass of the\nhabitation modules is calculated. This is shown in the\nequation below.\n\n(\n)\n)\n(\nt\nr\nr\nL\nm\nhab\nhab\nhab\nhab\n-\n-\n=\nÏ\nÏ\n\n(3)\n\nIn the above equation, the density of the habitation\nmodule is given to be 0.103 lb/in^3 for a material of\nAluminum 2219. The wall thickness, t, of the module\nis given to be 0.4 inches.vii\n\nThe calculated mass of each habitation module is\naugmented with additional mass for welds, weld lands,\nand thickness tolerances. This adds an additional 1% to\nthe mass of the habitation module.viii\n\nNext, an additional 10% is added to the mass to take\ninto account the internal, non-load-bearing structure of\nthe habitation module. This is an extremely rough\nestimate.\n\nIn addition, the mass of the required shielding to protect\nthe hotel from space debris is added to the weight\ncalculation. A Whipple Shieldix is used for this\npurpose. This requires an additional thin Aluminum\ncovering around the outside of the habitation module.\nThis additional Aluminum piece is 0.080 inches thick.\nThe design of the Whipple Shield can be seen in the\nfigure below.\n\nFigure 8 Example Whipple shield\n\nFinally a factor of 1.5 is multiplied by the mass\nestimate due to the lack of design maturity and heritage.\n\nThe same procedure of calculating mass is done for the\nthin, cylindrical interconnecting structural members\nconnecting the habitation modules to the center module.\nIt is also done for the center module as well.\n\nFinally, the spin rate of the hotel required to produce\nartificial gravity in the habitation modules is\ndetermined. The equation for centripetal acceleration is\nused. This is shown below.\n\nR\nV\na\n=\n\n(4)\n\nIn order to keep a simulated gravity of 1g in the\nhabitation modules, the value of a is set to g, which is\n9.81 m/s2, and the value of R is the radius of the Space\nHotel to the ends of each habitation module. See the\nfigure below to illustrate this.\n\nFigure 9 Radius of habitation module ring\n\nIn order to approximate the value of R for all sizes of\nthe Space Hotel, the circumference of the ring of\nhabitation modules is assumed to be equal to the\nlengths of the habitation modules plus the lengths of the\nnodes connecting the modules together. If this\nassumption is made, the radius can be determined form\nthe equations 5a and 5b.\n\n)\n(\nnode\nhab\nD\nL\nN\nD\nC\n+\n=\n= Ï\n\n(5a)\nÏ\nÏ\n)\n(\nnode\nhab\nD\nL\nN\nC\nD\nR\n+\n=\n=\n=\n\n(5b)\n\nRearranging equation 4 from above, the following\nequation produces the required spin rate, V, for the\nSpace Hotel.\n\naR\nV =\n\n(6)\n\nCost Model Module\nRequirements\nThe MATLAB module cost_model.m estimates the cost\nof the Space Hotel including the construction costs,\nlogistics, and operation costs.\n\nDescription of Code\nThe code uses the inputs of the number of guests, the\nduration of the stay of each guest, the number of years\nin operation, and the weight of the Space Hotel to\ncalculate total cost. The code calculates the individual\ncosts such as the space structure, the ground support\ncosts and logistics. These are summed together for total\ncost.\nInputs\nYears(yrs): This input is number of years the Space\nHotel expects to be in operation.\n\nn_crew: This input is number of people staying onboard\nthe Space Hotel at any time\n\nduration (days): This input is the time each person\nliving on the Space Hotel will spend onboard before\nthey head back to earth.\n\nw_f (kg): This input is the weight of Space Hotel\nstructure.\nOutputs\ntotal_cos ($): This output is the total cost of\nconstructing and operating a Space Hotel for a\nparticular number of years, a maximum capacity of\ncrew, and for a specified duration.\n\nTheory & Equations\nVarious cost factors that result from space facility\ndesigns and an estimation of rough order of magnitude\ncost are included in this cost model. The required\ninvestment areas addressed include the space segment,\nlaunch vehicles, operations, and logistics.x\n\nSpace Segment Cost:\n\nThe space segment cost is calculated using:\n\nSc = Scf * Pcf * Rcf * Wf\n\n(7)\n\nSc: space segment cost ($)\nScf: the price per kg of facility on orbit, for manned\nspace programs the mean is 104 $K/kg\nPcf: the program cost normalized over the number of\nmanned vehicles produced (non-dimensional)\nRcf: research, test, development, and engineering cost\nfactor is used to compensate for new development cost.\nThe Rcf should be 3 for new development programs,\nand 1 for a program based on existing hardware. We\nwill use 2. (non_dimensional)\nWf: weight of facility (kg)\n\nLaunch Vehicle Cost:\n\nThe launch vehicle cost is calculated using:\n\nLc = Lcf * Icf * Wf\n\n(8)\n\nLc: launch vehicle cost ($)\nLcf: launch cost factor estimated using historical data\nand planned cost goals for future development, a mean\nof 15.2 $K/kg ($/kg)\nIcf: insurance cost factor, 1/3 of the launch vehicle cost,\nwill use then 1.333. (non-dimensional)\n\nGround Operation and Support:\n\nA good estimate for the purposes of this model is $80M\nper year for yearly operations and support costs.\n\nLogistics:\n\nThe logistic cost was calculated using:\n\nWcl = 365 * ( ( Î´cs + Î´crew + Î´cg) * (Nc/Ec) + Îµ) (9)\n\nWcl: yearly crew logistics weight (kg)\nÎ´cs: equipment weight needed for crew support during\nthe trip to and from orbit, assumed to be 2000\nkg/person (kg/person)\nÎ´crew: weight/person (kg/person)\nÎ´cg: weight of gear/person (kg/person)\n\nÎµ: consumption rate for the entire facility (kg/person-\nday)\n\nWmm = Wf * Mmf\n\n(10)\n\nWmm: materials yearly delivery weight Wmm (kg)\nMmf: maintenance materials weight fraction, assumed to\nbe 0.01 for this model (non-dimensional)\n\nWl = Wcl + Wmm\n\n(11)\nLgc = Lcf * Icf * Wl\n\n(12)\n\nLgc: yearly logistics cost ($)\n\nOsc = Ny * (Yosc + Lgc)\n\n(13)\n\nOsc: total life cycle operations and support ($)\nNy: life cycle of station (yrs.)\nYosc: ground operations and support cost, as above\n$80M/year ($)\n\nTotal Investment = Sc + Lc + Osc\n\n(14)\n\nResults\nPlease refer to the figure below for the graph of results.\n\nx 10\nCost ($)\nNumber of Hotel Guests\n\nFigure 10 Cost vs. number of Space Hotel guests\n\nIn Figure 10, the different colors represent different\ndurations of stay in increments of 20 days starting from\nthe minimum of 30 days up to 170 days. The colors\ncloser to the bottom of the graph represent long\ndurations of stay. Here a trade was conducted in which\nthe weight of the Space Hotel is calculated for the\nnumber of guests and duration and then cost is\nestimated based the above factors plus the weight of\nSpace Hotel.\n\nIt can be seen in Figure 10 that the cost estimation is\nlinear. This prevents any sort of minimization of the\ncost of building, launching, assembling, and running a\nSpace Hotel. However, it can be seen that a Space\nHotel business model which is designed around fewer\nguests staying for longer durations is a way to keep\ncosts low.\n\nConclusion\nA conceptual design for a Space Hotel was created and\nsoftware was written to estimate the cost required to\nbuild, launch, assemble, and run the hotel. These costs\nwere estimated based upon mass estimates for structure\nand environmental control systems required to support\nhuman life onboard the Space Hotel.\n\nIf we examine Figure 10, we notice that as duration of\nstay increases, costs decrease. This can be seen\nbecause the colored sections on the plot at the bottom\nare the longer guest stay durations. This makes sense\nbecause this lowers the logistical cost of shuttling\npeople to and from the Space Hotel. Launches become\nprohibitively expensive if there are large numbers of\nguests and that are staying for short durations. As the\nnumber of guests increases, the smaller duration have a\nlarge effect on the cost. However, if the duration of\nstay is large, then duration has a smaller effect on costs\nbecause construction and ground support costs\ndominate. With long durations, it is possible to keep a\nlarge number of guests in space with a relatively small\nchange in costs.\n\nIf one were looking to profit from this type of venture,\nit would be beneficial to require stays of up to 6 months\nand have 100 guests. The costs would be lower by a\nlong duration and large revenues could possibly be seen\ndue to the large number of guests staying at the hotel.\n\nFuture Work\nA major area for future work would be to create a more\ndetailed cost model for the Space Hotel. This enhanced\ncost model may result in a nonlinear distribution of\ncosts, unlike the results shown in Figure 10. This may\nyield a minimum cost design for the Space Hotel.\n\nIn addition, a more detailed structural design of the\nSpace Hotel could be created which would yield a more\naccurate mass estimate of the structure.\n\nAppendix A: MATLAB source code\n\nstructure.m\n% William Nadir\n% 16.851 Satellite Engineering\n% Problem Set 5\n%\n% Space Hotel Structural Design Software Module\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% INPUTS\n%\n% N_guests = Number of people staying on board the Space Hotel at any time\n% duration = Duration of stay for guests of the Space Hotel (days)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% OUTPUTS\n%\n% str_mass = Mass estimate of structure of Space Hotel (kg)\n% spin_rate = Spin rate of hotel to produce artificial gravity in\n% habitation modules (m/s)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n\nfunction [str_mass,spin_rate] = structure(N_guests, duration)\n\n% Here the volume required per passenger onboard the hotel is determined\ntime = [2 30 60]; % duration of stay (days)\nreq_volume = [150 780 1800]; % required \"free volume\" per passenger (ft^3)\n\nif duration <= time(1)\nvol = req_volume(1);\nelseif duration > time(1) && duration < time(2)\nvol = interp1(time,req_volume,duration,'linear');\nelseif duration == time(2)\nvol = req_volume(2);\nelseif duration > time(2) && duration < time(3)\nvol = interp1(time,req_volume,duration,'linear');\nelseif duration == time(3)\nvol = req_volume(3);\nend\n\n% Input habitation module volume here\nhab_free_volume = 4500; % (ft^3)\n\n% Calculate how much free volume is required for the hotel guests\ntotal_free_vol = N_guests * vol; % (ft^3)\n\n% Determine how many habitation modules are required to house all the\n% guests (rounding up)\nN_habs = ceil(total_free_vol / hab_free_volume);\n\n% Here we determine the mass of each hotel component\nbulkhead_thickness = .4; % (in)\nrho = .103; % Al 2219 (lb/in^3)\n\n% Habitation modules\nhab_dia = 170; % (in)\nhab_length = 500; % (in)\nnode_dia = 96; % Nodes at the ends of each habitation module (in)\n\nhab_mass = rho * hab_length * pi * (((hab_dia/2)^2) - ...\n(((hab_dia - 2*bulkhead_thickness)/2)^2));\n\n% Here the mass for welds (1%) and internal structure (10%) are added\nhab_mass = hab_mass + (hab_mass * .01) + (hab_mass * .1);\n\n% Here the Whipple Shield mass is determined (radius is 4.2\" larger than\n% module)\nwhipple_density = .0975; % Al 6061 (lb/in^3)\nwhipple_thk = .08; % (in)\nwhipple_mass_hab = whipple_density * hab_length * pi * ...\n((((hab_dia/2) + 4.2)^2) - ...\n((((hab_dia - 2*whipple_thk)/2) + 4.2)^2));\n\n% Final habitation module mass plus 1.5 factor since calculations are very\n% rough\nhab_mass = (hab_mass + whipple_mass_hab)* 1.5; % (lb)\n\n% Determine dimensions of overall hotel structure\n% Assume that the circumference of the habitation module ring is roughly\n% equivalent to the sum of the lengths of the habitation modules\nhotel_dia = (N_habs * (hab_length + node_dia)) / pi; % (in)\n\n% Interconnecting cylidrical structural elements\nic_dia = 48; % (in)\n\n% Assume the lengths of the interconnecting tubes is roughly equivalent to\n% the radius of the hotel ring\nic_length = hotel_dia / 2; % (in)\n\nic_mass = rho * ic_length * pi * (((ic_dia/2)^2) - ...\n(((ic_dia - 2*bulkhead_thickness)/2)^2));\n\n% Here the mass for welds (1%) and internal structure (10%) are added\nic_mass = (ic_mass * .01) + (ic_mass * .1);\n\n% Here we determine the Whipple Shield mass for the IC modules\nwhipple_mass_ic = whipple_density * ic_length * pi * ...\n((((ic_dia/2) + 4.2)^2) - ...\n((((ic_dia - 2*whipple_thk)/2) + 4.2)^2));\n\n% Final habitation module mass plus 1.5 factor since calculations are very\n% rough\nic_mass = (ic_mass + whipple_mass_ic)* 1.5;\n\n% Here we assume the center cylinder mass is equivalent to that of a habitation\n% module\ncenter_module_mass = hab_mass; % (lb)\n\n% Here the total structural mass is calculated (lb)\nstr_mass = (hab_mass * N_habs) + (ic_mass * N_habs) + center_module_mass;\n\n% Convert to kilograms from pounds\nstr_mass = str_mass * .454; % (kg)\n\n% Determine spin rate required to produce artificial gravity in habitation\n% modules\ng = 32.2; % (ft/s^2)\nspin_rate = sqrt(g * (hotel_dia/2)); % (ft/s)\n\n% Convert to meters/sec\nspin_rate = spin_rate * .3048; % (m/s)\n\ncost_model.m\n% Christopher Hynes\n% 16.851 Satellite Engineering\n% Problem Set 5\n%\n% Space Hotel Cost Software Module\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% INPUTS\n%\n% years = number of years in operation\n% n_crew = Number of people staying on board the Space Hotel at any time\n% duration = Duration of stay for guests of the Space Hotel (days)\n% w_f = weight of structure (kgs)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% OUTPUTS\n%\n% total_cost = amount (dollars) of total investment required for\n% construction, logistics, and operation\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\nfunction total_cost = cost_model(years, n_crew, duration, w_f)\n\n%Please see paper for explanations\ns_cf = 104e3; %space segment cost factor [$/kg]\np_cf = 1.0; %\nr_cf = 2.0; % research and development cost factor\n\ns_c = s_cf*p_cf*r_cf; %space cost\n\nl_cf = 15.2e3; %launch cost factor\ni_cf = 1.33; %insurance cost factor\n\nl_c = l_cf*i_cf*w_f; %launch cost\n\ny_osc = 80e6; %yearly operation cost\n\ndelta_cs = 2000; %crew support specific weight [kg/person]\n\ndelta_crew = 170; %crew specific weight [kg/person]\ndelta_gear = 72; %crew specific gear weight [kg/person]\n\nconsumption_rate = 9.453515; %rate of consumption [kg/person]\n\nw_cl = 365*((delta_cs + delta_crew + delta_gear)*(n_crew/duration) + consumption_rate*n_crew); %yearly crew\nlogistics weight\n\nm_mf = 0.01; %maintenance materials weight fraction\n\nw_mm = w_f*m_mf; %materials yearly delivery weight\n\nw_l = w_cl + w_mm; %logistics weight\nl_gc = l_cf*i_cf*w_l; %logistics cost (per year)\n\no_sc = years*(y_osc + l_gc); % operational cost\n\ntotal_cost = s_c + l_c + o_sc;\n\ncost_modeltest.m\n% Christopher Hynes\n% 16.851 Satellite Engineering\n% Problem Set 5\n%\n% Space Hotel Cost Software Module\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% INPUTS\n%\n% years = number of years in operation\n% n_crew = Number of people staying on board the Space Hotel at any time\n% duration = Duration of stay for guests of the Space Hotel (days)\n% w_f = weight of structure (kgs)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% OUTPUTS\n%\n% total_cost = amount (dollars) of total investment required for\n% construction, logistics, and operation\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%\n% function total_cost = cost_model(years, n_crew, duration, w_f)\n\nN_guests_min = 20;\nN_guests_max = 100;\nduration_min = 30;\nduration_max = 180;\n\ncost_matrix = zeros(N_guests_max - N_guests_min + 1, duration_max - duration_min + 1);\n\nfor N_guests = N_guests_min:N_guests_max\nfor duration = duration_min:duration_max\n\n[str_mass,spin_rate] = structure(N_guests, duration);\ntotal_cost = cost_model(10, N_guests, duration, str_mass);\n\ncost_matrix(N_guests - N_guests_min + 1,duration - duration_min + 1) = total_cost;\nend\nend\n\nfigure(1)\nfor i = 1:duration - duration_min + 1\nhold on\nduration = duration_min + i;\nif duration < 30\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'k*');\nelseif duration >= 30 && duration < 50\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'b*');\nelseif duration >=50 && duration < 70\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'r*');\nelseif duration >=70 && duration < 90\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'m*');\nelseif duration >= 90 && duration < 110\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'g*');\nelseif duration >= 110 && duration < 130\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'c*');\nelseif duration >= 130 && duration <= 150\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'y*');\nelseif duration >= 150 && duration <= 170\nplot([N_guests_min:N_guests_max],cost_matrix(:,i),'b*');\nend\nend\nylabel('Cost ($)')\nxlabel('Number of Hotel Guests')\n\nReferences\n\ni Isakowitz, Steven J., International Reference Guide to Space Launch Systems, AIAA, 1999, p. 55.\nii Conners, M.M., et al., Living Aloft, NASA, 1985, p60.\niii Wieland, Paul., Designing For Human Presence in Space, NASA Marshall Space Flight Center , 1999, Â§ 2.1.\niv ibid, Â§ 2.4.\nv Stafford, K.W., et al., Advanced Life Support Systems Integration, Modeling, and Reference Missions Document,\nNASA-Lyndon B. Johnson Space Center, 2001.\nvi Sloan, James H., Commercial Space Station Requirements, AIAA-2000-5228, 2000, p. 5.\nvii Woodcock, Gordon, Space Stations and Platforms, Orbit Book Company, 1986, p. 145.\nviii ibid, p. 145.\nix Graves, R., Space Station Meteoroid and Orbital Debris Survivability, AIAA-2002-1607, 2002, p. 8.\nx Reynerson, Dr. Charles M., A Space Tourism Platform Model for Engineering and Economic Feasibility, 2000.\n\nProblem Set 6: Design of an Artificial Gravity Mars\nMission\n\nSummary\nThe purpose of this problem set was to investigate four possible vehicle designs to allow\nfor a crew traveling to Mars to experience artificial gravity for the duration of the transit\nto and from Earth. The four designs investigated were a toroidal-shaped monolith\nstructure, a two-module EMFF design, a multi-module, tethered spacecraft, and a two-\nmodule tethered spacecraft. The main focus of the project was on structures, human\nfactors, and cost. Areas such as power systems and propulsion were investigated in a\nrough manner in order to have realistic numbers for those parts of the spacecraft.\n\nA manned mission to Mars onboard a spacecraft which provides artificial gravity during\nthe transit to Mars would allow the crew to be immediately productive as soon as they\narrive at Mars. Without artificial gravity, the musculoskeletal deterioration of the crew\nduring the transit to Mars would render the crew incapable of most tasks on Mars due to\nthe .38g of gravity.\n\nThe cost model to determine the total program cost for each vehicle was made possible\nby a cost model that has been developed for just this purpose. In addition, the technology\nreadiness levels (TRLs) of each spacecraft were estimated in order to scale the program\ncosts to realistic values.\n\nResults\nIt was found that the ideal crew size was approximately 9 people for a mission to Mars.\nThis requirement drove the internal volumes of the vehicles which in turn sized the\nstructure and determined the program cost. In addition, human factors such as gravity\ngradient and cross-coupled acceleration effects drove the sizing of the spacecraft.\n\nBased on all of these issues, several MATLAB modules were written to size the\nspacecraft and estimate the program costs for each. The results showed that the toroidal-\nshaped monolith was the cheapest vehicle while the multi-module tethered spacecraft was\nthe most expensive. This is most likely due to the relatively high TRL of the monolith\nvehicle. It was also found that the multiple-tethered spacecraft had the highest mass of\nthe four designs. In fact, the other three designs had fairly similar masses but the\nmultiple-tethered spacecraft had more than double the total mass.\n\nCrew size was also varied to see its effect on the total program cost of each vehicle\ndesign. The cost for the multiple-tethered spacecraft increased at a significantly higher\nrate than that of the other three designs. Also, at a crew size of five and greater, the\ntoroidal spacecraft is the cheapest of the four designs.\n\nFinally, the cost of each design increased as the artificial gravity requirement was raised.\n\nUseful References\nLarson, Wiley, Human Spaceflight: Mission Analysis and Design, McGraw-Hill, 1999.\n\nFor this project, I found many useful human factors references dealing with humans in\nspace for long duration missions. The most useful of all the references was HSMAD.\nThis book contains information about all types of human spaceflight, including long\nduration manned missions to Mars.\n\nIn addition to using HSMAD, several useful AIAA papers were found which dealt with\nlong duration human spaceflight. The most useful of these papers dealt with the\nimplications of crew size on long duration missions in extreme environments. This paper\ninvestigated the interactions of the crew on many space missions as well as long duration\nexpeditions to places such as the Antarctic. The paper found that more heterogeneous\nand larger crews ended up working better together than smaller, more homogeneous\ncrews. This reference is shown below.\n\nDudley-Rowley, Marilyn, et. al., Crew Size, Composition, and Time: Implications for\nExploration Design, AIAA 2002-6111, AIAA, 2002.\n\nDesign of an Artificial Gravity Mars Mission\nMission Design Considering Human Factors, Structures, and Cost\n\n16.851 Satellite Engineering\n\nMassachusetts Institute of Technology, Cambridge, MA\nDecember 2003\n\nMotivation\nMars exploration is one of the main directions of\nNASA. One overarching goal is to someday have a\nmanned mission to Mars. This is the next major step\nfor space exploration beyond the moon and out into the\nsolar system.\n\nA manned mission to Mars poses several significant\ntechnological challenges for engineers. One such\nchallenge is to minimize the physiological impact on\nthe astronauts during prolonged spaceflight. A possible\nsolution to this is using artificial gravity. Once the\ncrew arrives on Mars, they will almost immediately be\nable to begin useful scientific research, rather than\nspending significant time rehabilitating due to problems\nlike bone decalcification. Using current or planned\ntechnology, artificial gravity almost certainly requires\nsome sort of spinning spacecraft.\n\nThe extended mission to Mars also poses psychological\nchallenges for the crew. The psychological well-being\nof the crew may depend on the number of astronauts,\nthe gender makeup of the crew, the ages of the crew\nmembers, and the \"free volume\" available per\nastronaut. Many of these human factors will contribute\nto the design of the spacecraft used to transport humans\nto Mars.\n\nProblem Statement\nCreate a tool to evaluate the feasibility of an artificial\ngravity Mars mission. The tool should output the cost\nfor four designs: a large monolithic station, a tethered\nmulti-spacecraft station, a tethered two-spacecraft\nsystem, and an EMFF system (see Figure 1). In\naddition, the tool will determine how Mars mission\ninputs such as number of crew members affect the\ndesign of each system. A systems engineer using the\ntool will be able to vary these parameters to fit a launch\nor cost constraint.\n\nFigure 1 Four designs: (a) monolithic station\n(Toroid), (b) multi-spacecraft tethered, (c) two-\nspacecraft tethered, and (d) EMFF.\nIntroduction\nThis study analyzes human, structural, and cost aspects\nof the various spacecraft types in order to determine\ntheir feasibility. In addition, the power and propulsion\nsystems of these spacecraft are modeled. The number\nof crew members is treated as a variable in order to\nanalyze the effects of this parameter on the designs.\n\nSome of the human factors that are considered, in\naddition to the area issues, are requirements for\nreducing motion sickness (since the spacecraft will be\nspinning) and support systems and maintenance (such\nas food, waste management, thermal and power needs\netc.).\n\nThe structural aspects are dictated by the design\nconfiguration and human factors. For instance, in order\nto prevent motion sickness, a minimum distance to the\nspin axis is required. Similarly, the space/area needs for\nthe crew are imposed requirements on the habitable\nvolume of the spacecraft. In addition, volume must be\nallocated for the Mars science payload, equipment, and\nspacecraft subsystems. This tool assumes an Earth\n(b)\n(c)\n(d)\n(a)\n\nreturn vehicle already exists on Mars for the astronauts\nto use. The design of each particular system has unique\nstructural requirements.\n\nTotal cost of each type of spacecraft is evaluated based\non the structural and mass requirements of the design.\nFactors such as launch and operations are included.\n\nFigure 2 summarizes the map of how the various\nsubsystems relate to each other.\n\nFigure 2. Relationships between the various\nsubsystems of the tool.\n\nCrew Size and Composition\nA long journey such as the one to and from Mars would\nput any crew under extreme stress. The size and\ncomposition of the crew for a manned Mars mission are\nfactors that can be controlled in such a way as to\nminimize the stress during such a mission.\n\nThe human-human interface is the most important with\nrespect to the psychological and sociological aspects of\nthe extreme environment of a manned Mars mission.\nThe success of the mission depends on the ability of the\ncrew to effectively work together to accomplish their\nmission objectives.\n\nBased on an ongoing study of this human-human\ninterface in extreme environments, several important\nobservations have been documented. First, larger crews\ntend to have lower rates of deviance and conflict.\nSecond, deviance and conflict tend to decline with\nincreasing length of mission. Third, heterogeneous\ncrews have lower rates of deviance and conflict.1\n\nAlthough it was found that a larger crew had fewer\nincidents of deviance and conflict, a maximum value\nfor crew size needs to be set. In the study previously\nmentioned, it was found that the least dysfunction of\nany crew studied was a crew of nine people.2 This\nfavorable crew size of 9 and the fact that a manned\nmission to Mars could take as long as nine months, a\ncrew size of nine was set for a mission length of nine\nmonths.\n\nThe other end of the spectrum, a shorter mission, needs\nto have a limit for crew size as well. As the duration of\nthe mission gets shorter, the \"extremeness\" of the\nenvironment decreases. This is because the crew\nknows that they will not be as far from home as they\nmight be on a longer mission and they are closer to\nreality than a nine-month expedition to Mars. This\nlessening of the \"extremeness\" of the trip makes it\nplausible for a crew of two members to run a mission\nfor duration of approximately one month. Several\nmanned missions to Mars even suggest using a crew of\ntwo.3 Therefore, it is reasonable to assume a crew of\ntwo could handle a month-long space mission.\n\nBased on these two limits, linear interpolation is used to\nestimate the crew sizes for mission durations between\none and nine months. However, since a worst-case\nscenario is assumed in which the crew must stay in the\nvehicle and return to Earth without landing on Mars, the\nmission durations are doubled for the same estimated\ncrew size. This effectively places a cap of 9 as the crew\nsize for a mission to Mars using a Hohmann transfer\n(roughly 9 months transit time each way). These crew\nsize estimates are shown below in Figure 3.\n\nCrew Size vs. Mission Duration\nDays\nMission Duration (Days)\nCrew Size\n\nFigure 3 Crew size vs. mission duration\n\nIn addition to the crew size, the gender, ethnic, and\ncultural makeup of the crew plays a large role in the\nperformance of the crew during the mission. It was\nfound that more heterogeneous crews begin a mission\nwith some deviance, conflict, and dysfunction, but these\nproblems seem to decline as the mission progresses.\nOn the other hand, a more homogeneous crew tends to\nbegin a mission without much, if any, deviance,\nconflict, or dysfunction, but these problems tend to\nincrease throughout the duration of the mission.4\nTherefore, a heterogeneous crew, most likely half men\n\nand half women, with a mix of various ethnicities and\ncultures, would tend to produce a more effective crew\nfor an extreme mission such as a manned mission to\nMars.\n\nHuman Factors\nInterior \"Free\" Space for Crew\nThe long duration of a mission to Mars requires that\nextra comfort be given to the crew than that given to\nastronauts on a one or two week mission to low Earth\norbit. Significant comfort can be given to the crew in\nthe form of increased interior volume to use for work\nand leisure activities. This would result in improved\nmental health of the crew at the time of their arrival at\nMars.\n\nBreeze (1961) estimated that a crew on a space mission\nwould require a minimum volume of 600 ft3 per crew\nmember for space missions longer than two months.5\nSloan,6 on the other hand, estimates the minimum\nvolume per crew member for life on a space station to\nbe approximately 700 ft3. Being conservative, a value\nof 700 ft3 is assumed for the free volume required per\ncrew member for a manned Mars exploration mission.\n\nLife\nSupport\nSystem\nEquipment\nVolume and Mass\nCrew Systems\nThe crew systems onboard the spacecraft for a manned\nmission to Mars contain equipment such as galley and\nfood system, waste collection system, personal hygiene,\nclothing,\nrecreational\nequipment,\nhousekeeping,\noperational supplies, maintenance, sleep provisions, and\nhealth care. HSMAD contains a detailed breakdown on\nthe mass and volume requirements of crew systems\nspecifically designed for a manned Mars mission.7 By\ndividing the numbers provided in HSMAD by the\nestimated mission duration and specified crew size, a\nnormalized crew systems mass and volume per crew\nmember per day can be determined. These values are\nshown below in Table 1.\n\nTable 1 Crew systems normalized volume and mass.\nCrew Systems\nMass (kg/CM-d)\n7.55\nCrew Systems\nVol. (ft^3/CM-d)\n1.51\n\nECLSS Atmosphere Management\nThe Environmental Control Life Support System\n(ECLSS) manages the air, water, waste, and other\nsystems onboard the spacecraft which support human\nlife in space. The portion of the ECLSS which\nmanages the atmosphere onboard the spacecraft utilizes\nphysio-chemical (P/C) technology in order to remove\ncarbon dioxide from the air, control trace contaminants,\nand provide oxygen to the crew. An atmosphere\nmanagement system suggested by HSMAD is used for\nthe purposes of this study. This suggestion is a triple-\nredundant system of three different types of P/C\natmospheric management systems.\n\nThe three types of P/C systems used in this manned\nMars mission spacecraft are 4BMS (4-bed molecular\nsieve),\nTCCS,\nand\nSabatier\nP/C\natmosphere\nmanagement systems.8 A basic flow chart of the\nmethod used to manage the atmosphere on board the\nspacecraft is shown in the figure below.\n\nFigure 4 Atmosphere control and supply9\n\nBased on the mass and volume requirements provided\nin HSMAD, the mass per crew member of these\nenvironmental support systems could be estimated. The\nthree types of atmospheric management systems were\nsummed and multiplied by a factor of three for\nredundancy. These values are shown below in Table 2.\n\nTable 2 ECLSS atmosphere management mass and\nvolume per crew member10\nECLSS Atm.\nMass (kg/CM)\nECLSS Atm.\nVol. (ft3/CM)\n35.3\n\nECLSS Water Management\nBased on the manned Mars mission design example in\nHSMAD, the ECLSS water management system design\nfor this project was estimated. HSMAD assumes a P/C\nwater management system of vapor compression\ndistillation (VCD) for use on the spacecraft. A basic\nflow chart detailing the process of water recovery and\nmanagement is shown in the figure below.\n\nFigure 5 Water recovery and management11\n\nThis technology requires a mass of approximately 25 kg\nper crew member and a volume of 3.53 ft3 per crew\nmember.12 A redundancy of two water management\nsystems is assumed,13 which brings the total mass per\ncrew member to 50 kg and total volume per crew\nmember to 7.1 ft3.\n\nArtificial Gravity\nA manned mission to Mars requires that the crew be\nsubjected to the space environment for a significant\nperiod of time. A travel time of nearly one year would\nresult in significant musculoskeletal deterioration of the\ncrew members if the transit period were completely\nzero-g.14 This would result in the crew members being\nphysically incapable of performing much work, if any,\nwhen they arrive at Mars.\n\nThe downtime as a result of the crew's required\nphysical rehabilitation would dramatically reduce the\navailable time on Mars for the crew to perform valuable\nresearch activities.\n\nIn order for the crew to be productive when they reach\nMars, an artificial gravity of 0.38g, the magnitude of\ngravity on Mars, is created on board the spacecraft\nduring the transit to Mars. The artificial gravity is set to\nMars gravity because it is unnecessary to provide\nartificial gravity of 1g if the crew will need to adjust to\nMars gravity of 0.38g when they arrive. Also, a smaller\nartificial gravity requirement reduces the propellant\nrequired to spin-up and spin-down the spacecraft, as\nwell as the structural requirements on the spinning\nspacecraft (and tethers).\n\nGravity Gradient, Coriolis, and Cross-\ncoupled Acceleration Effects\nDue to the fact that the centrifugal acceleration\nresulting from the spin of the spacecraft varies with\nradial distance from the spin center, a different level of\ngravity will exist between various levels of the structure\nas well as throughout the human body. If this gravity\ngradient is too large, it could become uncomfortable for\nthe crew members.15\n\nIn addition, crew members will experience pseudo\nweight changes depending on their direction of motion\ndue to radial and tangential Coriolis effects. When\nwalking parallel to the spacecraft spin axis, crew\nmembers will feel heavier when walking in the\ndirection of the spin and lighter when walking in the\nopposite direction. Tangential Coriolis effects will be\nfelt by crew members walking moving radially about\nthe spacecraft (possible in the Toroid spacecraft). They\nwill feel a push in the direction of the spacecraft spin\nwhen climbing towards or away from the spacecraft's\ncenter of motion.\n\nAnother potential uncomfortable result of the spinning\nspacecraft, cross-coupled angular acceleration effects,\ncan be felt by crew members. This occurs when a crew\nmember moves his/her head in directions transverse to\nthe axis of rotation and the direction of flight of the\nspacecraft. Interior design of the spacecraft may help to\nalleviate this problem. In addition, researchers at Slow\nRotating Room in Pensacola, Florida, found that human\ntest subjects in a room rotating at speeds up to 10 rpm\ncould be trained to adapt to the rotating environment.\n\nThese potential impacts to the human crew for the\nmanned Mars mission result in design requirements in\norder to minimize the impacts of these potential\nproblems and create a safer, healthier, and more\nenjoyable environment for the crew during their long\njourney to Mars. The two requirements imposed on the\nspacecraft design are a maximum spin rate and a\nminimum spin radius.\n\nStone (1970) and Thompson (1965) recommend a\nrotation radius greater than 14.6 meters and spin rate\nless than 6 rpm, while Shipov (1997) thinks a minimum\nradius of 20 meters is appropriate. In order to be\nconservative, a minimum spin radius of 30 meters and a\nrotation rate of 6 rpm were used for the purposes of this\nproject.\n\nRadiation Design Considerations\nDuring the journey from Earth to Mars, the crew will\nnot enjoy the protection of the Earth's atmosphere from\nhigh energy particles from the Sun. Solar particle\nevents (SPEs) cause large numbers of these high energy\nparticles to emanate from the Sun. These particles may\nimpact the spacecraft and could result in harmful health\neffects for the crew.\n\nBackground radiation in space, such as galactic cosmic\nrays, may also affect the crew during transit to Mars.\n\nIn order to design a spacecraft to provide reasonable\nprotection for the crew from radiation, the thickness of\nthe aluminum hull of the spacecraft must be designed\nwith a minimum thickness. This thickness is\n\ndetermined from the maximum allowable radiation dose\nfor crews. This is given to be 1 Gy.16\n\nThis allowable radiation exposure for crews is\ncompared to the dose the crew would receive based on\nthe aluminum hull thickness to obtain the minimum\nthickness. The data table used to make this decision is\nshown below.\n\nTable 3 Radiation dose from an unusually large\nsolar particle event\nShielding Depth (cm Al)\nDose\n(Gy)\n0.5\n4.68\n1.0\n1.95\n1.5\n1.02\n2.0\n0.59\n2.5\n0.37\n\nSince an acceptable dose for the crew is 1 Gy, a\nminimum hull thickness of 1.5cm of aluminum is\nchosen for this spacecraft.\nSpacecraft Power\nIn order to obtain an estimate for the power system for\nthe\nEarth-Mars\ncruise\nspacecraft,\na\nrough\napproximation of spacecraft power per crew member\nwas required. Several opinions exist as to exactly how\nmuch power per crew member is required for the Earth-\nMars cruise phase of a manned Mars mission.\n\nHSMAD assumes 20kW for a six-crew member\nmission to mars. This normalizes to 3.33kW per crew\nmember.17 In addition, Sloan notes that 2kW per crew\nmember is required purely for life support.18\n\nIt is realistic to assume that more power will be\nrequired than the minimum for life support. Research\nand other activities will require additional power\nbeyond life support. Therefore, it is assumed for the\npurposes of this project that 3.3kW is required per crew\nmember for the Earth-Mars cruise phase of a manned\nMars mission.\n\nStructures\nCylinder\nA cylindrical pressure vessel is used as the structure for\nthe tethered multiple spacecraft, two tethered spacecraft\nand EMFF spacecraft designs. A cylindrical habitat\nmodule was chosen because they have a high TRL and\ncan fit easily into a launch vehicle. The diameter of the\nlaunch vehicle was used as the diameter of the cylinder.\nGiven the required volume and the number of\nspacecraft in the array, the length of the cylinder was\nthen determined. The volume is equally distributed\namong the spacecraft. The material selected for the\ncylinder was Aluminum 606a-T6, based on the design\nfor a habitat module in HSMAD (Chapter 21). The\nthickness of the cylinder can be determined by the\nHoop stress (since the hoop stress is greater than the\nlongitudinal stress)\ntu\nh\nF\nt\npr\nf\nâ¤\n=\n\n(0.1)\nwhere fh is the Hoop stress, p is the pressure, r is the\nradius of the cylinder, t is the thickness of the cylinder,\nand Ftu is the allowable tensile ultimate stress for\naluminum. The thickness is set as 0.015 cm if it is\nfound to be less than that because of radiation shielding\nrequirements. The maximum internal pressure of\n0.1096 times a safety factor of 2 is used as the pressure\ninside the cylinder (based on HSMAD). Finally the\nmass of the cylinder including the two ends is found by\n\nAL\nAL\nrlt\nt\nr\nmass\nÏ\nÏ\nÏ\n+\nâ\n=\n\n(0.2)\n\nThe dry mass of each spacecraft includes the structural\nmass plus the solar array mass (see Power Module\nsection) and the life support equipment mass.\nToroid\nThe toroid for the monolithic system is found in a\nsimilar fashion as the cylindrical case. The inner radius\nof the toroid, rt, is found by the following\n\nR\nr\nV\nt\n2Ï\n=\n\n(0.3)\n\nwhere V is the required volume and R is the radius of\nrotation. The minimum radius is set as 3 feet (0.9144\nm) if the radius, rt, is found to be less than that. The\nthickness is found using the hoop stress requirement.\nThe mass of the toroid is found by the following\n\n(\n)(\n)\nAL\nt\ntoroid\nt\nR\nr\nmass\nÏ\nÏ\nÏ\n=\n\n(0.4)\n\nThe dry mass for the monolithic system includes\nspacecraft includes the toroid mass plus the solar array\nmass (see Power Module section) and the life support\nequipment mass.\nEMFF Coil Mass\nThe superconducting EMFF coils are used to rotate the\ntwo habitat modules for the EMFF design by creating\ntorque at a distance17. The EMFF system assumes that\nspin-up of the array has occurred and the reaction\nwheels will not saturate during the steady state spin by\nrephrasing the array to dump momentum.19\n\nTo determine the mass of the coils, the force generated\nby the coils must equal the centripetal force from steady\nstate rotation as seen in Equation (0.5) where R is the\ncoil radius, It is the total current, S is the array baseline,\nÏ is the rotation rate, and mtot is the total mass of a\nhabitat module.\n\nt\ntot\no\nm S\nF\nI R\nS\nS\nÏ\nÎ¼ Ï\nâ\nâ\nâ\nâ\nâ\nâ\n=\n+\n=\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ\nâ \nâ\nâ \n(0.5)\n\nFor further clarification, Equation (0.5) uses a three\nidentical satellite system, where the two outer\nspacecraft are the habitat modules, and the center\nspacecraft contains only the EMFF coil as shown in\nFigure 6. The reason for this design is to increase the\namount of electromagnetic force in the system. The\ncenter spacecraft increases the electromagnetic force by\n17 times the force produced by the outer spacecraft.\nThe result is that the three spacecraft design contains\nEMFF coils that are 17-0.5 times lighter than those in a\ntwo spacecraft design.\n\nFigure 6 EMFF System Layout\nTo find the mass of the EMFF coils, the left hand side\nof Equation (0.5) can be rearranged to include the mass\nof the coil, Mc, and the wire current density over the\nwire density, Ic/pc\n\n3 17 10\ntot\nc\nc\nc\nm S\nM\nI\nR\np\nÏ\n-\n=\nâ\nâ\n\n(0.6)\n\nFor a high temperature superconducting coil, the Ic/pc\nfrom the EMFF lecture is 16250 A m/kg.\n\nTether Sizing\nTethers are required for two of the system designs, so\ntheir mass is calculated based on the requirements of\neach design. For the single tether setup, the radius from\nthe habitation module to the center of rotation is\ncalculated according to the following equation.\n\nmax\nÏ\ndes\ndes\ng\nr\n=\n\n(0.7)\n\nHere rdes is the radius that is 'desired' by the system\ngiven the desired force, gdes, and the maximum\nallowable rotation rate, Ïmax (Ïmax is determined by\nhuman factors). If the calculated radius is larger than\nthe minimum radius allowed by human factors, then rdes\ncan be used to calculate the tether length. If not, the\nminimum radius is used and the rotation rate must be\nslowed accordingly. Assuming that the two payloads\nare equal mass, the tether length for this system is then\ntwice the desired radius. The tension in the tether may\nbe calculated as:\n\n(0.8)\nÏ\ndes\nmr\nT =\n\nHere T is the tension in the tether, m is the mass of one\npayload, and rdes and Ï are as above. This is simply an\nexpression of Newton's Second Law, where the radial\nacceleration is calculated as the radius times the square\nof the angular velocity. The axial stress equation can\nthen be used to calculate the required cross-sectional\narea to support the tension T, given the ultimate tensile\nstrength of the chosen material.\n\nuts\nT\nA\nÏ\n=\n\n(0.9)\n\nFor this analysis, two materials were considered, as\nshown in Table 4.20\n\nTable 4 Tether material properties\nMaterial\nÏuts (GPa)\nÎ¡ (kg/m3)\nKevlar\n3.6\nSpectra\n2.6\n\nSince the area, length, and density of the tether are now\nknown, the mass can be easily calculated as follows.\n\nÏ\nlA\nm =\n\n(0.10)\n\nThe multiple tether design requires a different\ncalculation of tether length, but similar techniques are\nused to compute the final mass. From Figure 1 it is\nclear that the multiple tether system is overconstrained.\n\nFor a system of tethers in tension this is not necessarily\na bad thing, it simply makes analysis more tedious. For\nexample, the multiple tether system would maintain its\nshape (while spinning) if it consisted of either the\nspokes or the rim tethers alone. However, if only the\nspoke tethers were used, there would be a small risk of\ncollision between the pods during spin up, etc, so it\nmight be wise to include the rim tethers. The solution\nto this problem is to analyze these systems separately\nand add the results.\n\nAllowing the angle between two spokes to be Î±, and the\nangle between any spoke and its adjacent rim tether to\nbe Î², it is clear that:\n\n)\n(\nÎ±\nÏ\nÎ²\nÎ±\nÏ\n-\n=\n=\nn\n\n(0.11)\n\nHere n is the number of spokes. The pods are each at\ndistance rdes (or rmin, whichever is larger), as calculated\nabove, so the total length of the spokes, ls, is n times r.\nThe total length of the rim tether, lr, can be calculated\nas:\n\n)\nsin(\nÎ±\nnr\nlr =\n\n(0.12)\n\nThe tension in the spokes is calculated without the rim\ntethers in place as:\n\n(0.13)\nÏ\nmr\nTs =\n\nThe tension in the rim tethers is calculated without the\nspokes as:\n\nÎ²\ncos\ns\nr\nT\nT =\n\n(0.14)\n\nThe area and mass of the rim and spoke tethers can then\nbe calculated as before for each type of tether, and the\nresults added for total tether mass. The following table\ngives examples of total tether mass for various systems.\nSystems labeled 'tether' are single tether systems, while\nsystems labeled 'mult-n' are multiple tether systems\nwith n pods. The subscript r represents the rim tethers,\nand the subscript s represents the spoke tethers. To get\nthe total tether mass for a mult-n system, add the spoke\nmass to the rim mass. For single tether systems, the\nmass of both pods is 70,000 kg, and for mult-n systems\nthe individual pod mass is taken as 40,000 kg.\n\nTable 5 Example tether properties\nSystem\nMaterial\nForce\nkN\nArea\n(mm2)\nLength\n(m)\nMass\n(kg)\nTether\nKevlar\n72.5\n75.5\n39.4\nTether\nSpectra\n100.4\n75.5\n36.8\nMult-5r\nKevlar\n35.2\n56.3\nMult-5s\nKevlar\n41.4\n56.3\nMult-5r\nSpectra\n48.8\n52.5\nMult-5s\nSpectra\n57.4\n52.5\n\nIn general, it is not wise to base a design on the ultimate\ntensile strength of a material, so a factor of safety of\nfive is included in the implementation of these\nequations. It was found that the tether is a small portion\nof the total system mass, so this factor does not have a\nlarge impact. In addition, it helps to account for other\ntether properties that have been ignored, such as\ncoatings against atomic oxygen, connecting hardware,\netc.\n\nSpacecraft Propulsion\nA major contributor to total system mass is the\npropulsion system. While propulsion is not the main\nfocus of this analysis, it is recognized that the fuel\nrequired by these spacecraft will be a significant portion\nof total system mass. Several parts of the required\npropulsion are treated in some detail, and others are left\nfor a future study. The current analysis is of a high-\nrisk, one-shot Mars approach. Enough fuel is provided\nto initiate the Mars transfer and the spin required for\nartificial gravity. It is assumed that the mission will\nsucceed spectacularly. That is, the landing craft will\nreach Mars interface with hyperbolic velocity, and\nperform an aerocapture-assisted entry and descent\nphase. The astronauts will return on a vehicle that is\nalready in place at their landing site. There is no\nprovision for deceleration on Mars approach, for Earth-\nentry in case of an aborted mission, or other margin of\nany kind. This is obviously no way to design a manned\nmission to Mars, but since the primary thrusts of this\nanalysis are cost, structures, and human factors, this\ngreatly simplified propulsion model has been used.\n\nMars Transfer\nIn terms of fuel, the cheapest trip to Mars on high-\nimpulse chemical thrusters is a Hohmann transfer. The\nHohmann transfer assumes that the transfer orbit is\ntangent to both the initial and final circular orbits, so it\nis very efficient and easy to analyze.21 Knowing the\nradii of the initial and final orbits, r1 and r2 respective,\nthe semi-major axis, a, of the transfer orbit can be\ncalculated as follows.\n\n1 r\nr\na\n+\n=\n\n(0.15)\n\nThe velocity of the spacecraft in the transfer orbit, but\nat the point of making the impulsive injection\nmaneuver, can then be calculated from the energy\nintegral as:\n\n)\n(\na\nr\nv\n-\n=\nÎ¼\n\n(0.16)\n\nHere v is the required velocity of the spacecraft in the\ntransfer orbit, Î¼ is the gravitational parameter for the\ncentral body (the Sun), and r1 and a are as above. The\nrequired change in velocity can then be calculated as:\n\ncv\nv\nV\n-\n=\nâ\n\n(0.17)\n\nWhere âV is the required change in velocity, v is the\nrequired spacecraft velocity above, and vc is the circular\nvelocity that the spacecraft already has due to the\norbital motion of the Earth, given by:\n\n1r\ncv\nÎ¼\n=\n\n(0.18)\n\nThe required âV in the solar frame is only half of the\ncalculation, however, for it takes extra fuel to escape\nfrom the Earth's sphere of influence. The âV required\nin the solar frame can be considered the \"hyperbolic\nexcess velocity\" that is required in the Earth-centered\nframe, or the speed that the spacecraft has with respect\nto Earth as it leaves the sphere of influence. The\nchange in velocity required from a low Earth parking\norbit can be found by first calculating:\n\ncr\ni\nv\nv\nÎ¼\n+\n=\ninf\n\n(0.19)\n\nHere vi is the insertion velocity that is required from\nLEO, vinf is the hyperbolic excess speed that is required\nin the heliocentric frame (the âV solved for above), and\nrc is the radius of the parking orbit where the spacecraft\nis holding until departure. For this study, rc was taken\nto be 200km. The required âV is then calculated as\nabove, where vc is recalculated for the parking orbit in\nthe Earth frame.\n\nFor the Hohmann transfer from Earth to Mars studied\nhere, the required change in velocity in the solar frame\n(vinf) is calculated as 2.942 km/s. Using a circular\nparking orbit at 200 km, the burn required for the\nspacecraft is calculated to be 3.61 km/s.\n\nThe required âV can be used to calculate the fuel\nrequired to get the spacecraft to Mars. Using the classic\nrocket equation, the fuel mass is seen to be a function of\nrequired change in velocity, spacecraft dry mass, and\nthe efficiency of the thruster (or specific impulse, Isp).\n\n[\n]\n)\n/\n(\ng\nI\nV\no\np\nsp\ne\nm\nm\nâ\n-\n-\n=\n\n(0.20)\n\nHere mp is the mass of the propellant, mo is the dry\nmass of the vehicle, Isp is the specific impulse of the\nchosen thruster, and g is the acceleration due to gravity\nat the Earth's surface (where Isp is defined). For this\nstudy, a value of 350 seconds is assumed for the\nspecific impulse, a typical value for a bipropellant\nchemical thruster [see Ref 23, pg 692]. Thus, for a\ngiven spacecraft dry mass, the required fuel mass can\nbe determined for each structural design. Note that the\nrequired fuel masses to insert the desired payloads into\nMars orbit are quite large, so it is a reasonable\nassumption to ignore the thruster hardware at this stage\nof analysis. Additionally, for potentially massive\ncomponents such as fuel tanks, all of the systems under\nconsideration will have similarly scaled components so\nthe relative error here is not significant. Finally, the\nquestion of thruster location is not specifically\naddressed here. It is assumed that the Mars transfer\nburn will be performed before the various designs have\ninitiated their spin. Thus, all tethers will be retracted,\nand the EMFF system will be docked into a single unit.\nThis way, the whole system can be started on the\ntransfer orbit as a unit, and then the rotations can be\ninitiated en route.\n\nSpacecraft Rotation\nA unique feature of the EMFF system is that it does not\nrequire fuel to initiate and maintain the nominal spin\nrate. All other designs, however, will require some\nmanner of external thrust to start spinning. It will be\nassumed that the monolith structure has a pair of\nthrusters on opposite sides of the wheel (i.e. at the ends\nof a line of diameter) to create a couple. The single and\nmultiple tether systems will have a single thruster on\neach individual pod, oriented to create a pure moment\nwith no net force. The selected thruster has the same\nspecific impulse, 350 s, as the primary thruster.\n\nUnder these assumptions, the fuel required to spin up\ncan be calculated from the rocket equation above,\nnoting that:\n\nr\nV\nÏ\nâ\n=\nâ\n\n(0.21)\n\nHere âÏ is the change in angular velocity, and r is the\nradius from the center of rotation to the thruster. When\ncalculating the fuel requirement from the rocket\nequation, the total fuel requirement is the dry mass of\neach individual spacecraft times the number of\nspacecraft. The following table shows example fuel\nrequirements for spin up for the monolith, single tether,\nand multiple tether systems. In this table, both 'mass'\nand 'fuel mass' represent the individual spacecraft\n\nmasses, and should be multiplied by the total number of\nspacecraft if total system mass is desired.\n\nTable 6 Propellant mass for system designs\nSystem\nDry Mass (kg)\nFuel Mass (kg)\nMonolith\n86,774\n56,704\nTether\n44,344\n28,971\nMultiple\n43,027\n28,117\n\nCost Estimation\nA first order model was developed to estimate\napproximate costs of the manned Mars mission. A\ndetailed work breakdown structure (WBS) was not\ncreated since this study considers high-level concept\ndesigns that focus only on certain aspects of the\nmission,\ni.e.\nhuman\nfactors,\nand\nstructural\nconfigurations. The cost model utilized a mix of\nanalogy based estimation, and parametric estimation in\ndetermining the costs of the various segments.\n\nThe cost model determines the mission cost in FY03$\nby evaluating the required expenses in the following\ncategories:\n\nSpace Segment\nThis is driven by the space segment cost factor (Scf), the\nprogram level cost factor (Pcf), the heritage cost factor\n(Hcf), and the space system mass, M.\n\nThe space segment cost, Sc, in dollars is calculated,\nafter adjusting the relationship given by Reynerson, as:\n\n(\n)\ncf\ncf\ncf\nc\nP\nM\nH\nS\nS\n+\n=\n\n(0.22)\n\nThe Scf ($/kg) is the price per kg of facility on orbit. For\ngovernment run, manned space programs it ranges from\n38 to 157 $K/kg, with the mean being 104 $K/kg.22 The\nmaximum value of 157 $K/kg is used in the model in\norder to get a conservative estimate.\n\nThe Pcf ($) accounts for the program level costs such as\ncontractor costs for system engineering, management,\nquality assurance, and other costs that cannot be\ndirectly assigned to individual hardware or software\ncomponents. The Pcf was determined from the\nparametric cost estimation data provided in table 20-4\nin SMAD.\n\nThe heritage cost factor, Hcf, is a dimensionless quantity\nand accounts for the technology readiness level (TRL)\ncosts. SMAD discusses the development heritage factor\nin space segment cost (pg 798) as a multiplicative\nfactor. It defines heritage as the percentage of a\nsubsystem that is identical to one or more previous\nspacecraft, by mass. This idea is applied in the cost\nmodel by assuming that the TRL can be considered as\nthe system's heritage. A TRL of 3 is thus considered to\nhave a heritage of only 30%, and the basic RDT&E cost\nestimate is increased by 70% to account for additional\ncosts that will be accrued due to the development\nrequired for the new technology. This assumption\nprovides a means to roughly estimate effects of\ndifferent design TRLs on the cost. Note that the\nheritage factors are more appropriate to consider at the\nsubsystem level, and it would be more accurate if they\nwere considered when determining costs of specific\nsubsystems. However, in this study only structures and\nhuman life support systems were considered in detail.\nTherefore, a blanket 'heritage factor' to the whole\nsystem cost estimate in this model really means an\napplication to only these two subsystems.\n\nThe mass, M (kg), of the system is the total mass of the\nfacility in space. The mass is often the primary cost\ndriver of space systems.23 The model used in the study\nalso uses the facility's mass as a chief factor in the cost.\n\nLaunch Segment\nThe launch segment costs are determined by using the\nlaunch cost factor, Lcf, the insurance cost factor, Icf, and\nthe mass of the system, M, to be placed in orbit.\n\nThe launch cost is determined as:\n\nM\nI\nL\nL\ncf\ncf\nc =\n\n(0.23)\n\nThe launch cost factor, Lcf, is based on historical data\nand planned future cost goals. It is the cost per kilogram\nof placing a payload in LEO orbit. Table 20-14 in\nSMAD lists the cost per kg to LEO for various launch\nvehicles in FY00$. The average value for US launch\nvehicles comes out to be 14.66 $K/kg. Only US launch\nvehicles were considered since it is assumed that the\nmars mission will be a government run program. Lcf was\ntaken as 15.4 $K/kg (after converting the dollar value\nfrom FY00 to FY03).\n\nThe insurance cost factor, Icf, was used to account for\ninsurance related expenses associated with launch. For\ncommercial launches, the insurance is a third of the\nlaunch costs and Icf is typically 1.33. The cost model in\nthis study assumes a value of 1.5 to account for\nsomewhat higher insurance costs that would probably\nbe involved for a new type of mission. Furthermore, a\nhigher factor would give a conservative estimate.\n\nThe mass, M (kg) used in this cost portion is the same\nfacility mass that was used in determining the space\nsegment cost.\n\nGround Operations and Support\nThe ground operations and support cost is usually much\nsmaller than the space segment and launch cost. For\nmissions that extend over long periods of time however,\nthis cost can become quite significant. The ground\nsegment costs are normally evaluated by considering\nthe requirements for the ground station facilities such as\nsquare footage, equipment, personnel, etc. However\nsince such details are not available at concept level\nstudies, an analogy-based estimation was done to\ndetermine the operations and support cost for the\nmanned mars mission. The International Space Station\nhas a $13 billion operations budget for its ten-year life.\nThe yearly operations costs are therefore earmarked as\n$1.3 billion. The cost model in this study uses a value\nof $1.5 billion per year for operations cost.\n\nThe total cost is obtained by summing the space\nsegment, launch and operations cost of the mission.\n\nSoftware Modules\nVolume and Equipment Mass Module\nRequirements\nThe MATLAB module constants.m determines the\nnumber of crew required for the mission as well as the\nvolume and mass of the vehicle, life support equipment,\nas well as the required power for the spacecraft.\n\nDescription of Code\nThe code uses the input of the mission duration to\ncalculate the number of crew members required for the\nmission. The number of crew members combined with\nthe mission duration is used to size the free volume of\nthe vehicle along with the life support system and\npower requirements.\n\nConstants\nThe constants used in this module are the values for\nspacecraft volume, mass, and power which are given\nand explained in the \"human factors\" and \"spacecraft\npower\" sections of this document.\n\nInputs\nduration (days): This input is the mission duration\nfrom Earth to Mars.\n\nOutputs\ncrew: This output is the total number of crew required\nfor the mission to Mars.\n\nfree_vol (ft3): This output is the total required \"free\nvolume\" in the spacecraft.\n\ncs_vol (ft3): This output is the total required volume for\nthe crew systems equipment.\n\ncs_mass (ft3): This output is the total required mass of\nthe crew systems equipment.\n\nls_air_vol (ft3): This output is the total required\nvolume for the atmosphere management equipment.\n\nls_air_mass (kg): This output is the total mass of the\nrequired atmosphere management equipment.\n\nls_water_vol (ft3): This output is the total required\nvolume of the water recovery and management\nequipment.\n\nls_water_mass (kg): This output is the total mass of the\nrequired water recovery and management equipment.\n\npower (W): This output is the total power required for\nthe spacecraft during the Earth-Mars transit. This is\npurely based on the number of crew members in the\nspacecraft.\n\nPower Module\nRequirements\nThe MATLAB module SolarArrays.m determines mass\nof the solar array and the area of the solar array. This\nmodule was used by Kwon, Vaughan, and Siddiqi in\nProblem Set 5.\n\nDescription of Code\nThe code uses the required power to determine the mass\nof the solar array. Multijunction arrays with no ellipse\nperiods were used in the calculation\n\nConstants\nThe constants used in this module are the specific\npowers for each type of solar array design.\nInputs\nAverage_power (W): This input is the required power\nthat the solar arrays need to deliver.\n\nEllipse_fraction (0-1): This input is the fraction of the\norbit spent in eclipse.\n\ntype (number): This input is selects the solar array type\n(1, 2, or 3 for Si, GaAs, or multijunction respectively).\n\nMission_duration (years): This input is the mission\nduration in years.\n\nOutputs\nMass_solarArray (kg): This output is the mass of the\nsolar array..\n\nArea_solarArray (m3): This output is the area of the\nsolar array.\n\nStructures Module\nRequirements\nThe MATLAB module structures.m determines mass of\nthe structure given the total volume required, the\nnumber of vehicles, and the type of architecture. The\narchitecture options are a toroidal monolithic spinning\nspacecraft, a tethered multiple spacecraft, two tethered\nspacecraft, or two EMFF spacecraft.\n\nDescription of Code\nThe code uses the required volume and calculates the\ndimensions of a cylindrical pressure vessel. The\ndiameter of the cylinder is constrained by the launch\nvehicle diameter. For the toroidal monolith system, it is\nassumed that the toroid is cut into sections while it is in\nthe launch vehicle. The total volume is divided equally\nbetween the number of spacecraft for the design.\nAdditionally the radius of rotation is used to determine\nthe length of the cylinder. Once the dimensions of the\nstructure are determined, its mass is calculated and\noutputted.\n\nConstants\nThe constants used in this module are the values for\ndensity and allowable tensile ultimate stress for\nAluminum 6061-T6 and the maximum internal pressure\nfor design of the pressure vessel. These values are\ngiven and explained in the \"structures\" section of this\ndocument.\n\nInputs\nV (m3): This input is the total volume required for the\nstructure to contain.\n\nD (m): This input is the launch vehicle diameter.\n\nN (number): This input is the number of vehicles in the\narray.\n\nR (m): This input is the radius of rotation.\n\nw (rad/s): This input is the rotation rate of the system.\n\ndesign ('text'): This input is the desired design, options\ninclude 'monolith', 'multiple', 'tether', and 'emff'.\n\nOutputs\nMass (kg): This output is the total mass of the\nstructure.\n\nTether Mass Module\nRequirements\nThe MATLAB module tether_mass.m determines mass\nof the tether given the type of architecture, number of\nvehicles, dry mass, tether material, and desired\nacceleration.\n\nDescription of Code\nThe code takes the system architecture and decides how\nto calculate the tether length and tension. For the\nmonolith and EMFF, there is no tether. For the single\nand multiple tether systems, the values are computed\nappropriately as described above. Mass of the tether is\nthen calculated from the material properties of the\ntether and the required length and tension.\n\nConstants\nThe constants used in this module are the values for\nmaximum allowable spin rate and minimum allowable\nradius, as defined by human factors.\n\nInputs\nAG_type ('text'): This input is the desired design,\noptions include 'monolith', 'multiple', 'tether', and\n'emff'.\n\nn (number): This input is the number of vehicles in the\narray.\n\nw (rad/s): This input is the rotation rate of the system.\n\ndry_mass (kg): This is the mass of the spacecraft. For\nthe single tether, an array of 2 masses (can be unique).\nFor the multiple tether, one mass is provided and the\nmodules are assumed to be identical.\n\ntether_mat ('text'): Input describes what material to\nuse for the tether. Current options are 'spectra' and\n'kevlar'.\n\ng_des (m/s2): This desired acceleration at the rim.\n\nOutputs\nMass (kg): This output is the total mass of the tether(s).\n\nPropulsion Module\nRequirements\nThe MATLAB module propulsion.m determines mass\nof the required fuel for orbit transfer and spin-up, given\nthe type of architecture, number of vehicles, dry mass,\ntether material, and the moment arm to the thruster.\n\nDescription of Code\nThe code calculates the change in velocity required for\na Hohmann transfer to Mars, and then solves the Earth-\ncentered problem for âV required from a LEO parking\norbit. The rocket equation is then used for an assumed\nthruster to find the fuel mass for the transfer. Given the\ntype of system and the thruster moment arm, the rocket\nequation is used again to find the propellant required\nfor spin-up. This function calls several auxiliary\nfunctions that are included and commented in\nAppendix A,\nnamely:\nic_circ.m,\nhohmann.m,\np_conic.m, and r_equation.m.\n\nConstants\nThe constants used in this module are the gravitational\nconstants for the Earth and Sun, the radius of the Earth,\nthe Earth-Sun distance, the parking orbit radius, and the\nMars-Sun distance.\n\nInputs\nAG_type ('text'): This input is the desired design,\noptions include 'monolith', 'multiple', 'tether', and\n'emff'.\n\nn (number): This input is the number of vehicles in the\narray.\n\nw (rad/s): This input is the rotation rate of the system.\n\ndry_mass (kg): This is the mass of the spacecraft. For\nthe single tether, an array of 2 masses (can be unique).\nFor the multiple-tethered spacecraft, one mass is\nprovided and the modules are assumed to be identical.\n\nr_outer (m): The moment arm for the thruster.\n\nOutputs\nMass (kg): This output is the mass of the propulsion\nsystem per pod.\n\nEMFF Module\nRequirements\nThe MATLAB module emff.m determines mass of the\nsuperconducting EMFF coils needed to rotation rate for\na given amount of artificial gravity.\n\nDescription of Code\nThe code uses the size of the cylinder as the size of the\ncoils, the total dry mass each satellite, the radius of\nrotation, and the rotation rate to determine the mass of\nthe coils for a three spacecraft collinear array. The\nequation used for this is explained in the \"emff coil\nmass\" section.\n\nConstants\nThe\nconstant\nused\nin\nthis\nmodule\nis\nthe\nSuperconducting coil current density divided by the\nwire density as given in the EMFF Lecture.\nInputs\nV (m3): This input is the total volume required for the\nstructure to contain.\n\nD (m): This input is the launch vehicle diameter.\n\nR (m): This input is the radius of rotation.\n\nw (rad/s): This input is the rotation rate of the system.\n\nMass_tot (kg): This input is the total dry mass of one\nof the satellites.\n\nOutputs\nMass_coil (kg): This output is the total mass of the\nEMFF coil.\n\nCost Module\n\nThe MATLAB module cost.m calculates the total cost\nof a manned mission based on the system mass,\ntechnology readiness level of the system, and mission\nduration.\n\nInputs\nmass (kg): This is the total mass of the system /facility\nin space.\n\nTRL: The Technology Readiness Level of the system\n\nduration (days): The mission duration from Earth to\nMars.\n\nOutputs\nTotalCost ($): This is the total cost of the mission in\n$FY03. It is the sum of all the cost segments that are\nalso given out by the module.\n\nSpaceSegCost ($): The space segment cost in $FY03\n\nLVCost ($): Launch cost in $FY03\n\nOpSupCost ($): Operations support cost in $FY03\n\nResults\nThe total program costs for a 1.5 year mission for the\ndifferent designs are shown in the figure below. It is\nseen that the cheapest design option is the monolith\nwhile the multiple tether configuration is the most\nexpensive.\n\nFigure 7 Cost of different designs\nThe cost breakdown shows that the space segment cost\nis by far the largest portion as compared to launch and\noperation costs. A comparison with Apollo and Orbiter\ncosts show that the model estimates lie within a\nreasonable range.\n\nSince the cost model is driven primarily by the system\nmass, an analysis of the mass of the different designs\nshows a trend that matches with the cost results. The\nfigure below illustrates the total mass estimates\nobtained for the different designs.\n\nFigure 8 Mass comparison of different designs\nAlthough the mass of the EMFF, monolith and tether\ndesigns are in the same range, the monolith is cheaper\nthan the other two designs due to a higher TRL value.\nEMFF and tether designs have lower TRLs (the model\nassumed 3 and 4 respectively), therefore they cost more\nthan the monolith. The dry mass in each design\nincluded the power subsystem, the structural mass, and\ncrew and life support equipment mass. It also included\nmass of subsystems that were unique to each particular\nconfiguration, for instance the dry mass of the EMFF\ndesign includes the mass of coils while in the multiple\ntether and tether options it includes the mass of tethers.\nFrom these results it appears that the monolith design\noffers the lightest and cheapest option.\n\nVarying Crew Size\nOne interesting plot is the change in total program cost\nversus the number of crew used in the mission to Mars.\nAs the number of crew increases, the required structure\nvolume increases, which in turn increases the mass and\ncost. The results for the four designs considered are\nshown in the figure below.\n\nx 10\nCrew Size\nTotal Cost (FY03$M)\nEMFF\nTether\nMultiple Module/Tether\nToroid\nCrew size\ninvestigated\n\nFigure 9 Cost vs. crew size\n\nThe above figure shows significant differences in the\nrate of change of cost as the crew size changes for the\nvarious spacecraft designs. The single tether and\nEMFF designs have nearly identical curves in the figure\nas well. This is due to the fact that they both have the\nsame basic structural design: each design has two main\nmodules and little or no mass connecting the two\nmodules. Also, these two designs have nearly identical\nTRL values.\n\nThe other two designs, the toroid and the multiple-\ntethered module, are radically different designs than the\nprevious two. It can be seen that the cost of the\nmonolith increases much less dramatically than the cost\nof the multiple-tethered module vehicle. This\ndifference is mainly the result of the fact that the TRL\nof the toroid is much higher than that of the other three\ndesigns, especially the multiple-tethered module.\n\nFinally, it can be seen in Figure 9 that the cost of the\nToroid spacecraft becomes the most cost effective\ndesign for crew sizes greater than five. Based on this\ninformation, a Toroid may be the most cost effective\ndesign for a large crew of approximately nine members\nfor a manned mission to Mars.\n\nEffect of Varying Artificial Gravity\nThe artificial gravity is created by rotation of the\nvehicle(s). A higher artificial gravity results in a higher\nrotation rate, given a fixed radius of rotation. For the\ntethered two spacecraft, multiple spacecraft, and\nmonolith systems, a higher rotation rate results in a\nlarger âV needed for spin-up and results in more\npropellant. For the EMFF system, the EMFF coil mass\nis directly related to the rotation rate as seen in equation\n(0.6). Figure 10 illustrates these results for the four\ndifferent systems. Each of the systems shown an\nincrease as the Earth's gravity is approached. None of\nthe curves overlap and the multiple-tethered spacecraft\nshows the highest mass while the two tethered\nspacecraft is the least massive option.\n\n0.2\n0.4\n0.6\n0.8\n1.465\n1.4655\n1.466\n1.4665\n1.467\nx 10\nMass of EMFF[kg]\nFraction of the Earth's gravity\n0.2\n0.4\n0.6\n0.8\n1.468\n1.47\n1.472\n1.474\nx 10\nMass of Tether[kg]\nFraction of the Earth's gravity\n0.2\n0.4\n0.6\n0.8\n3.57\n3.58\n3.59\n3.6\n3.61\nx 10\nMass of Multiple Tethered[kg]\nFraction of the Earth's gravity\n0.2\n0.4\n0.6\n0.8\n1.434\n1.435\n1.436\n1.437\nx 10\nMass of Monolith[kg]\nFraction of the Earth's gravity\n\nFigure 10 Effect of varying the fraction of Earth's\ngravity on total system mass\n\nFigure 11 illustrates the effect of varying the fraction of\nEarth's gravity on the total system cost. Since the cost\nvaries directly with the mass, these results show an\nexpected trend; the cost shows an increase as the\nEarth's gravity is approached.\n\nFigure 11 Effect of varying the fraction of Earth's\ngravity on cost\nConclusion\nThe preceding design of an artificial gravity Mars\nmission demonstrates that the mission has feasibility in\nterms of cost since the cost is less than the Apollo\nprogram. The mass of the systems are high mainly due\nto the significant propellant mass, but more advanced\npropulsion systems could help decrease this. The\nmonolith system is currently the most favorable design\nfor cost and mass, and for large crew sizes. The tether\nand EMFF designs may become more favorable with\nfurther development of their technology boosting their\nTRL.\n\nFuture Work\nThis is an exciting project with much potential for\nfuture work. An improvement that is immediately\nobvious is to allow different mission durations and to\nevaluate the effect of that change on mission cost and\nmass. Currently, a Hohmann transfer from Earth to\nMars is specified, but other orbits should be examined\nsuch as faster one-tangent burns, or perhaps longer\norbits with free-return trajectories. Changing the\nmission duration will impact the number of desired\ncrew-members as well as the required propellant for\ntransfer, and so could have a large impact on mass and\ncost.\n\nAnother improvement would be to add a detailed\npropulsion system model to this analysis. Current all\npropulsion system hardware is neglected, along with\nany propellant margin, corrective maneuvers, terminal\nrendezvous burn, or mission-abort scenarios. All of\nthese things could be added to increase the fidelity of\nthe overall model. Certainly, including these things\nwill increase the total mass and cost of the systems.\n\nThere are many other systems that could be added as\nwell. Power, while mentioned in this study, could be\ninvestigated in a much more thorough fashion. Issues\ncould be addressed relating to human needs such as\nthermal controls, debris and radiation mitigation, and\ncommunications. Each of these improvements could\ngreatly enhance the quality of the analysis and make\nthis an even more valuable tool for future use.\n\nAppendix A: MATLAB source code\n\nmain.m\n%Constants\ng_des = 1/3 * 9.81;\nrmin = 30; %meters\nwmax = 6; %rpm\nw = wmax * pi/30;\n\nD = 5; %m, Launch vehicle width\n\nmission_duration = 1.5; %years\n\n%first call constants\n%Get the required volume and average_power\n[crew, free_vol, cs_vol, cs_mass, ls_air_vol, ls_air_mass, ls_water_vol, ...\nls_water_mass, power] = constants(mission_duration*365);\nV_ft = free_vol + cs_vol + ls_air_vol + ls_water_vol; %Total Volume, ft^3\nV = V_ft * 2.83168*10^-2; %Total Volume, conversion from ft^3 to m^3\n\nM_systems = cs_mass + ls_air_mass + ls_water_mass; %Mass of crew and support systems\n\n%Find Power Mass\n[M_power, Area_power] = SolarArrays (power,0,3,mission_duration);\n\nr_des = g_des/w/w; % calculate 'desired' radius to get desired acceleration\nif (r_des < rmin);\nr_des = rmin;\nw = sqrt(g_des/r_des);\nend\n\n%Now For Each Design\n%EMFF%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\nN=2;\n%Find structural mass\n%mass of each cylinder (note that there are two for emff, tether)\nM_struct_emff = structure(V, D, N, r_des, w,'emff');\n%Find Propulsion system Mass\nMass_dry_emff = M_struct_emff + M_power + M_systems;\nM_coil_emff = emff(V, D,r_des, w, Mass_dry_emff);\nM_wet_emff=propulsion('emff', N, w, Mass_dry_emff+M_coil_emff, r_des);\n%Compute the total mass\nM_total_emff = Mass_dry_emff + M_coil_emff+M_wet_emff;\n%Computer system mass\nM_system_emff = N * M_total_emff;\n%Find cost\n[TotalCost_emff, SpaceSegCost_emff, LVCost_emff,\nOpSupCost_emff]=cost(M_system_emff,3,mission_duration);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%Tether%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\nN=2;\n%Find structural mass\n%mass of each cylinder (note that there are two for emff, tether)\nM_struct_tether = structure(V, D, N, r_des, w,'tether');\n%Find Propulsion system Mass for each spacecraft\nMass_dry_tether = M_struct_tether + M_power + M_systems;\nM_wet_tether=propulsion('tether', N, w, Mass_dry_tether, r_des);\nM_tether = tether_mass('tether', N, w, [(Mass_dry_tether+M_wet_tether)\n(Mass_dry_tether+M_wet_tether)], 'kevlar', g_des);\n%Compute the total mass\nM_total_tether = Mass_dry_tether + M_wet_tether;\nM_system_tether = N * M_total_tether + M_tether;\n%Find cost\n[TotalCost_tether, SpaceSegCost_tether, LVCost_tether,\nOpSupCost_tether]=cost(M_system_tether,4,mission_duration);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%Multiple Tethered 5 spacecraft%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\nN=5;\n%Find structural mass\n%mass of each cylinder (note that there are two for emff, tether)\nM_struct_multiple = structure(V, D, 5, r_des, w,'multiple');\n%Find Propulsion system Mass\nMass_dry_multiple = M_struct_multiple + M_power + M_systems;\nM_wet_multiple=propulsion('multiple', N, w, Mass_dry_multiple, r_des);\n\nM_tether_multiple = tether_mass('multiple', 5, w, Mass_dry_multiple+M_wet_multiple, 'kevlar',\ng_des);\n%Compute the total for each spacecraft\nM_total_multiple = Mass_dry_multiple + M_wet_multiple;\n%Computer system mass\nM_system_multiple = N * M_total_multiple + M_tether_multiple;\n%Find cost\n[TotalCost_multiple, SpaceSegCost_multiple, LVCost_multiple,\nOpSupCost_multiple]=cost(M_system_multiple,4,mission_duration);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n%Monolithic Spacecraft%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%Find structural mass\n%mass of each cylinder (note that there are two for emff, tether)\nM_struct_monolith = structure(V, D, 1, r_des, w,'monolith');\n%Find Propulsion system Mass\nMass_dry_monolith = M_struct_monolith + M_power + M_systems;\nM_wet_monolith=propulsion('monolith', N, w, Mass_dry_monolith, r_des);\n%Compute the total mass\nM_total_monolith = Mass_dry_monolith + M_wet_monolith;\n%Find cost\n[TotalCost_monolith, SpaceSegCost_monolith, LVCost_monolith,\nOpSupCost_monolith]=cost(M_total_monolith,8,mission_duration);\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\nconstants.m\n% William Nadir\n% 16.851 Satellite Enginnering\n% Module to estimate Mars mission crew size and vehicle volume and mass requirements\n%\n% INPUTS\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n% duration = Mission duration (days)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n% OUTPUTS\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%\n% crew = Crew size (number of people)\n% free_vol = Amount of total \"free\" volume required for crew (ft^3)\n% cs_vol = Amount of total volume required for crew systems (ft^3)\n% cs_mass = Mass of crew systems (kg)\n% ls_air_vol = Life support equpment (air) total volume (ft^3)\n% ls_air_mass = Mass of life support equipment (air) (kg)\n% ls_water_vol = Life support equpment (water) total volume (ft^3)\n% ls_water_mass = Mass of life support equipment (water) (kg)\n% power = Required total spacecraft power (W)\n%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\nfunction [crew,free_vol, cs_vol, cs_mass, ls_air_vol, ls_air_mass, ls_water_vol, ...\nls_water_mass, power] = constants(duration)\n\n% Here the required crew size is determined based on the duration of the\n% mission to Mars\ncrew = ceil((.0292 * duration + (9/8))/2); % (No. of crew members)\n\nfree_vol = 700 * crew; % Total free volume required (ft^3)\n\ncs_vol = 1.512* crew * duration; % Total crew systems volume required (ft^3)\ncs_mass = 7.55 * crew * duration; % Total crew systems mass (kg)\n\nls_air_vol = 35.3 * crew; % Total ECLSS air control system volume (ft^3)\nls_air_mass = 255 * crew; % Total ECLSS air control system mass (kg)\n\nls_water_vol = 7.1 * crew; % Total ECLSS water control system volume (ft^3)\nls_water_mass = 50 * crew; % Total ECLSS water control system mass (kg)\n\npower = 3300 * crew; % required S/C power (W)\n\nSolarArrays.m\n%This function calculates the mass, cost, and size of a given type of solar array.\n%The inputs are eclipse fraction, average power, shadow fraction, mission duration, and cell\ntype.\n\nfunction [Mass_solarArray,Area_solarArray]=SolarArrays\n(average_power,eclipse_fraction,type,mission_duration)\n\n%P_solarArray: power produced by solar arrays\n%Pe :power required during eclipse period\n%Pd : power required during daylight period\n%Xe :path efficiency from solar array, through battery to loads\n%Xd :path efficiency from solar array to loads\n%Xcell :cell efficiency\n%Isolar :solar illumination intensity\n%Id :Inherent degredation\n%DSi etc : degredation/yr\n%Ld :lifetime degredation\n\n%********************************\n% Constants\nXe = 0.65;\nXd = 0.85;\nXSi = 0.148;\nXGaAs= 0.185;\nXmulti= 0.22;\nIsolar = 1367;\nId = 0.77;\nDSi = 0.0375;\nDGaAs = 0.0275;\nDmulti = 0.005;\nSpSi = 0.55; %16.89 design doc kg/m^2\nSpGaAs = 0.85; %kg/m^2\nSpmulti= 0.85; %kg/m^2\n%******************************\n\nPe = average_power;\nPd = average_power;\n\n%Te = orbit_period*eclipse_fraction; %eclipse time\n%Td = orbit_period-Te; %daylight time\n%P_solarArray = ((Pe*Te )/(Xe*Td)) + (Pd/Xd) %power produced by solar arrays\n\nP_solarArray = Pd/Xd;\n\n%Silicon is type 1, GaAs is type2, and multijunction is 3\n\nif type == 1\nXcell = XSi;\nDegredation = DSi;\nMassPerArea = SpSi;\nSpecificPower = 25;\n%SpecificCost = SpCostSi;\nend\n\nif type == 2\nXcell = XGaAs;\nDegredation = DGaAs;\nMassPerArea = SpGaAs;\nSpecificPower = 60; %ref:\nhttp://lheawww.gsfc.nasa.gov/docs/balloon/2nd_tech_workshop/Loyselle.pdf\n%SpecificCost = SpCostGaAs;\nend\n\nif type ==3\n\nXcell = Xmulti;\nDegredation = Dmulti;\nMassPerArea = Spmulti;\nSpecificPower = 66; %assumed based on info in SMAD\n%SpecificCost = SpCostmulti;\nend\n\n%Power out of solar cell assuming sun rays are normal to solar panels\nPout = Xcell * Isolar;\n\n%Power at begining of life\n\nPbol = Pout *Id;\nLd = (1-Degredation)^mission_duration;\n\n%Power at end of life\n\nPeol = Pbol*Ld;\n\nArea_solarArray = P_solarArray/Peol;\n\nMass_solarArray = P_solarArray/SpecificPower;\n\n%Cost = SpecificCost * Mass_solarArray;\n\n%Cost = NaN;\n\nstructure.m\nfunction [mass] = structure(V, D, N, R, w,design)\n\n% V = 85; %m^3\n% D = 5; % Launch vehicle diameter\n% N = 2; %number of vehicles\n% R = 20; % distance from center of rotation to floor(really ceiling)\n% design = 'monolith'; %choices: monolith, multiple, tether, emff\n% w = 6; %rotation rate in rpm\n%Material Selection: AL 6061-T6\nrho = 2.85 * 10^3; %kg/m^3, density\nFtu = 290 * 10^6; %Pa, Allowable Tensile Ultimate Stress\n\n% Design Factors\nPmax = 0.1096 * 10^6; %Pa, Maximum Internal Pressure\nSF = 2.0; %Safety Factor\n\nPu = SF * Pmax; %Design Ultimate Internal Pressure\n\nswitch lower(design)\ncase {'emff', 'tether'}\nr = D/2; %m, Radius of the cylinder\nl = (V/N)/(pi*r^2); %m, Length of the Cylinder\n% Thin-Walled pressure cylinder thickness\nt = Pu * r / (Ftu); %m\n\nif t < 0.015\nt = 0.015; %minimum thickness necessary for radiation dosage\nend\n\n%Calculating the mass of the cylinder structure\nMcyl = 2 * r * l * t * rho;\nMends = pi * r^2 * t * rho;\nmass = 2 * Mends + Mcyl;\n\ncase {'multiple'}\nVi = V/N;\nr = D/2; %m, Radius of the cylinder\nl = Vi/(pi*r^2); %m, Length of the Cylinder\n\n% Thin-Walled pressure cylinder thickness\nt = Pu * r / (Ftu); %m\n\nif t < 0.015\nt = 0.015; %minimum thickness necessary for radiation dosage\nend\n\n%Calculating the mass of the cylinder structure\nMcyl = 2 * r * l * t * rho;\nMends = pi * r^2 * t * rho;\nmass = (2 * Mends + Mcyl);\ncase {'monolith'}\n%Given V\n%R is set from minimum radius needed for artifical gravity\n\nrt = 1/pi * sqrt(V/(2*R)); %inner toroid radius\n%if rt < some height, then rt = minimum height\nif rt < 1.8288/2 % if height is less than six feet\nrt = 1.8288/2; %meters\nend\n\nt = Pu * rt / Ftu; %m\nif t < 0.015\nt = 0.015; %minimum thickness necessary for radiation dosage\nend\n\n%Calculating the mass of the toroid structure\nMass_toroid = rho * t * (2*pi*rt) * (2*pi*R);\n\n%Calculating the mass of the center spherical shell\n% rs = 1/10 * R;\n% t_shell = 0.015;\n% Mass_shell = 4*pi*rs^2 * t_shell*rho;\n%\n% %Calculating the mass of the beams\n% Num_beams = 4;\n% rb = R - rs;\n% h = 0.1; %beam width\n% Mass_beam = rb * h^2 *rho;\n\n%Calculating total monolith mass\n\n% mass = Mass_toroid + Mass_shell + Mass_beam * Num_beams;\nmass = Mass_toroid;\notherwise\ndisp('Unknown method.')\nend\n\ntether_mass.m\nfunction [mass]=tether_mass(AG_type, n, w, dry_mass, tether_mat, g_des)\n\n% Function \"tether_mass.m\" takes parameters of the system and returns the\n% calculated mass of the tether.\n%\n% Inputs:\n% AG_type [] - The type of system in question (monolith, multiple, tether, emff)\n% n [] - The number of spacecraft, only applicable for the pinwheel design\n% w [rad/s] - The desired rotational rate of the system [to be hardcoded?]\n% dry_mass [kg] - The dry mass of the spacecraft. This should be a row\n% vector with appropriate dimensions as follows:\n% * Monolith: N/A\n% * EMFF: N/A\n% * Single Tether: [(habitation module) (other mass)] ###[1x2]\n% * Pinwheel: (mass of nodes, assumed uniform) ###[1x1]\n% tether_mat [] - Indicates what tether material should be used\n% g_des [m/s^2] - The desired acceleration at the habitation module\n%\n% Outputs:\n% mass [kg] - The mass of the tether\n\n% Constants\n\nrmin = 30; %meters\nwmax = 6; %rpm\nverbose = 1;\n\n% /Constants\n\n% Tether\n\n% source for this stuff 'http://callisto.my.mtu.edu/my4150/props.html' is ok\n\nif strcmp(tether_mat, 'kevlar')\nsig_uts = 3.6e9; % [Pa]\ndensity = 1440; % [kg/m^3]\nelseif strcmp(tether_mat, 'spectra')\nsig_uts = 2.6e9; % [Pa]\ndensity = 970; % [kg/m^3]\nelse\nfprintf('Error :: tether_mass :: Unknown tether material!\\r')\nend\n\n% /Tether\n\nwmax = wmax*pi/30; % rad/s\nif (w > wmax)\nfprintf('Warning :: tether_mass :: Spacecraft spinning too fast!\\r')\nend\n\nif strcmp(AG_type, 'monolith')\nmass=0;\nelseif strcmp(AG_type, 'emff')\nmass=0;\nelseif strcmp(AG_type, 'tether')\nm1=dry_mass(1);\nm2=dry_mass(2);\nr_des = g_des/w/w; % calculate 'desired' radius to get desired acceleration\nif (r_des < rmin);\nr_des = rmin;\nw = sqrt(g_des/r_des);\nfprintf(['Warning :: tether_mass :: Calculated radius is below minimum, used minimum\nradius of ' num2str(rmin) ' [m].\\r'])\nfprintf([' Angular rate should be less than ' num2str(w*30/pi) '\n[rpm].\\r'])\nend\ntlength=r_des*(m1+m2)/m2; % calculate tether length based on desired radius and relative\nmasses\nF=m1*r_des*w*w; % calculate tension in the tether\nA=F/sig_uts; % required tether area is tension/ultimate tensile strength\n\nmass=density*tlength*A * 5; % calculate tether mass using factor of safety of 5\n\nif (verbose == 1)\n\nfprintf(' \\r')\nfprintf(['Designed a ''' AG_type ''' tether of ' tether_mat '.\\r'])\nfprintf(['Desired radius: ' num2str(r_des) ' [m].\\r'])\nfprintf(['Tether length: ' num2str(tlength) ' [m].\\r'])\nfprintf(['Tether tension: ' num2str(F) ' [N].\\r'])\nfprintf(['Tether area: ' num2str(A) ' [m^2].\\r'])\nfprintf(['Tether mass: ' num2str(mass) ' [kg].\\r'])\nfprintf(' \\r')\nend\n\nelseif strcmp(AG_type, 'multiple')\nm=dry_mass(1);\nr_des = g_des/w/w; % calculate 'desired' radius to get desired acceleration\nif (r_des < rmin);\nr_des = rmin;\nw = sqrt(g_des/r_des);\nfprintf(['Warning :: tether_mass :: Calculated radius is below minimum, used minimum\nradius of ' num2str(rmin) ' [m].\\r'])\nfprintf([' Angular rate should be less than ' num2str(w*30/pi) '\n[rpm].\\r'])\nend\nalpha=2*pi/n; % angle between the spokes\nbeta=.5*(pi-alpha); % angle betwen spokes and outer strands\ntlength1=n*r_des; % calculate length for the spokes\ntlength2=n*2*r_des*sin(alpha/2); % calculate length for outer strands\n\nF1=m*r_des*w*w; % calculate tension in the spoke tethers\nF2=F1/2/cos(beta); % calculate tension in the rim tethers\n\nA1=F1/sig_uts; % required tether area is tension/ultimate tensile strength\nA2=F2/sig_uts;\n\nmass1=density*tlength1*A1 * 5; % calculate spoke tether masses using factor of safety of 5\nmass2=density*tlength2*A2 * 5; % calculate rim tether masses using factor of safety of 5\n\nmass=mass1+mass2;\n\nif (verbose == 1)\nfprintf(' \\r')\nfprintf(['Designed a ''' AG_type ''' tether of ' tether_mat '.\\r'])\nfprintf(['Desired radius: ' num2str(r_des) ' [m].\\r'])\nfprintf(['Spoke tether length (total): ' num2str(tlength1) ' [m].\\r'])\nfprintf(['Outer tether length (total): ' num2str(tlength2) ' [m].\\r'])\nfprintf(['Spoke tether tension: ' num2str(F1) ' [N].\\r'])\nfprintf(['Outer tether tension: ' num2str(F2) ' [N].\\r'])\nfprintf(['Spoke tether area: ' num2str(A1) ' [m^2].\\r'])\nfprintf(['Outer tether area: ' num2str(A2) ' [m^2].\\r'])\nfprintf(['Spoke tether mass: ' num2str(mass1) ' [kg].\\r'])\nfprintf(['Outer tether mass: ' num2str(mass2) ' [kg].\\r'])\nfprintf(['Total tether mass: ' num2str(mass) ' [kg].\\r'])\nfprintf(' \\r')\nend\n\nelse\nfprintf('Error :: tether_mass :: Unknown spacecraft type!\\r')\nend\n\npropulsion.m\nfunction mass=propulsion(AG_type, n, w, dry_mass, r_outer)\n\n% function 'proplusion.m' calculates the required fuel mass for both\n% \"spin-up\" and initiation of the interplanetary transfer orbit.\n\n% dry_mass should be the dry mass of a single 'pod'\n\n% Inputs:\n% AG_type [] - The type of system in question (monolith, multiple, tether, emff)\n% n [] - The number of spacecraft, only applicable for the pinwheel design\n% w [rad/s] - The desired rotational rate of the system [to be hardcoded?]\n% dry_mass [kg] - The dry mass of the spacecraft. This should be a row\n% vector with appropriate dimensions as follows:\n% * Monolith: N/A\n% * EMFF: N/A\n% * Single Tether: [(habitation module) (other mass)] ###[1x2]\n% * Pinwheel: (mass of nodes, assumed uniform) ###[1x1]\n% r_outer [m] - moment arm to the thruster\n%\n% Outputs:\n% mass [kg] - The mass of the propulsion system per pod\n\nMU_s=1.327e20; %m^3/s^2, gravitational constant for the sun\nMU_e=3.986e14; %m^3/s^2, gravitational constant for the earth\n\nres=1.5e11; %m, earth-sun distance\nre_mag=6.38e6; %m, earth radius\n\nparking=200e3; % parking orbit ALTITUDE in km\n\nplanet1 = 3; % choose Earth as the origin\nplanet2 = 4; % choose Mars as the destination\n\nplanet(1)=0.3871; % define planetary radii for future use\nplanet(2)=0.7233;\nplanet(3)=1;\nplanet(4)=1.524;\nplanet(5)=5.203;\nplanet(6)=9.519;\nplanet(7)=19.28;\nplanet(8)=30.17;\nplanet(9)=39.76;\n\nplanet = planet * res; % put planet distances in [m]\n\n[r, v] = ic_circ(MU_s, planet(planet1)); % get circular initial conditions for the Earth\n[dv, t_trans]=hohmann(MU_s, r, v, planet(planet2)); % calculate dV and transfer time for hohmann\nto mars\n\n[re, ve] = ic_circ(MU_e, re_mag+parking); % get circular initial conditions for circular 200km\nparking orbit\n[eta, dv_earth, t_soi] = p_conic(MU_e, MU_s, norm(dv), re, ve, res); % find the dV required to\nMars from the parking orbit\n\ni_mass=r_equation(dry_mass, dv_earth); % find the mass required for insertion\n\n% s_mass is the spin-up propulsion system mass\n\nif strcmp(AG_type, 'monolith')\n% assumes a pair of thrusters at the rim of the craft, to set up a couple\ndv_req=w*r_outer;\ns_mass=r_equation(dry_mass, dv_req);\nelseif strcmp(AG_type, 'emff')\ns_mass=0;\nelseif strcmp(AG_type, 'tether')\ndv_req=w*r_outer;\ns_mass=r_equation(dry_mass, dv_req);\nelseif strcmp(AG_type, 'multiple')\ndv_req=w*r_outer;\ns_mass=r_equation(dry_mass, dv_req);\nend\n\nmass=i_mass + s_mass;\n\nic_circ.m\nfunction [r, v] = ic_circ(MU, r_init)\n\n% calculate circular initial conditions (position and velocity) given\n% a central body and an initial radius\n\nr = [r_init 0 0];\nvc = sqrt(MU/r_init);\nv = [0 vc 0];\n\nhohmann.m\nfunction [dv, t_trans]=hohmann(MU, r, v, r_target)\n\n% Function ip_hohmann takes the current (sun-centered inertial) position\n% and velocity vectors, verifies an initial circular orbit, and then\n% calculates the delta-V required at that instant to enter a\n% minimum-energy (Hohmann) transfer to a given radius (scalar). The\n% function also returns the time of transfer, which is half the period\n% of the transfer orbit.\n\n% MU is the gravitational parameter of the central body (m^3/s^2)\n% r is the radius vector to the spacecraft (sun-centered)\n% v is the velocity vector of the spacecraft (sun-centered)\n% r_target is the orbital radius of the target planet\n\nh = cross(r,v); % angular momentum vector\nh_mag = norm(h);\np = h_mag*h_mag/MU; % orbit parameter\na = -1/((norm(v)^2)/MU-2/norm(r)); % semimajor axis\ne = sqrt(1-p/a);\n\nif ( e > .01)\nfprintf('Error :: IC :: Initial orbit is not circular!\\r')\nfprintf(['Orbital eccentricity is ' num2str(e) '!\\r'])\nend\n\nr_mag = norm(r);\n\na_trans = (r_mag + r_target)/2;\nv_trans_i = sqrt(MU*(2/r_mag - 1/a_trans));\n\ndv_trans = v_trans_i - norm(v);\ndv = dv_trans*v/norm(v);\n\nt_trans=2*pi*sqrt((a_trans^3)/MU)/2;\n\np_conic.m\nfunction [eta, dv, t_soi] = p_conic(MU1, MU2, v_inf, r, v, rps)\n\n% inputs:\n% MU1: MU for the primary body, i.e. escaping from Earth orbit\n% MU2: MU for the contending body in the SOI problem, typically the sun\n% v_inf: the scalar velocity required at r_inf to enter the desired\n% helicentric transfer. Found by solving heliocentric problem.\n% r: the radius vector to the spacecraft\n% v: the velocity vector of the spacecraft\n% rps: the distance between the two SOI bodies, i.e. the Earth and Sun\n\n% returns:\n% eta: the angle between the velocity vector of primary body and radius vector to s/c\n% dv: the scalar change in velocity required to get the desired v_inf\n% t_soi: the time required to reach the sphere of influence (SOI)\n\nrc = norm(r);\nvc = norm(v);\n\nv1 = sqrt(v_inf^2 + 2*MU1/rc); % required velocity at the parking orbit radius\n\nenergy = (v_inf^2)/2;\nh = rc*v1;\nei = sqrt(1 + 2*energy*h^2/MU1^2); % eccentricity of the transfer orbit\n\neta = acos(-1/ei); % angle between the velocity vector of primary body and radius vector to\ns/c\ndv = v1 - vc; % the required delta-v\n\np = 2*rc;\nr_soi=(rps)*(MU1/MU2)^(2/5); % the radius of the sphere of influence\n\nf = acos((p/r_soi-1)/ei); % the true anomaly there\n\nH = 2*atanh(sqrt((ei-1)/(ei+1))*tan(.5*f)); % the hyperbolic anomaly there\n\nN = ei*sinh(H) - H; % kepler's equation for hyperbolas, N ~~ Mean anomaly\n\na = p/(1-ei^2); % the 'semi-major axis' of the hyperbola (<0!)\n\nt_soi = N/sqrt(MU1/(-a)^3); % the time to reach the sphere of influence (r = r_inf, v = v_inf)\n\nr_equation.m\n\nfunction mass=r_equation(dry_mass, dV)\n\n% !!!The Rocket Equation!!!\n\n% function 'r_equation.m' takes the dry mass of the vehicle and the\n% required dV to gain the transfer orbit, and computes the mass of\n% fuel required for injection (given a particular thrusting system)\n%\n% Inputs:\n% dry_mass [kg] - The mass of the spacecraft w/o fuel\n% dV [m/s] - The change in velocity required to gain the transfer orbit\n%\n% Outputs:\n% mass [kg] - The mass of the fuel required\n\n% Assume typical bipropellant chemical thruster w/ Isp ~ 350s\n\nIsp = 350;\ng = 9.81;\n\nmass = dry_mass * (1-exp(-(dV/(Isp*g))));\n\nemff.m\nfunction [mass_coil] = emff(V, D,R, w, Mass_tot)\n%The code uses the size of the cylinder as the size of the coils,\n%the total dry mass each satellite, the radius of rotation,\n%and the rotation rate to determine the mass of the coils\n%for a three spacecraft collinear array.\n\nr = D/2; %m, Radius of the cylinder\nl = V/(pi*r^2); %m, Length of the Cylinder\nIc_pc = 16250; %Superconducting coil current density divided by wire density.\nw_rad = w * 2*pi/60;%converting rpm to rad/sec\n\nmass_coil = w_rad/(l*Ic_pc)*sqrt(Mass_tot * (R + r)^5 /(3 * 17 * 10^-7));\n\ncost.m\n%This module determines cost of a mars transfer vehicle based on vehicle\n%weight.\n\n%References:\n% 1. Reynerson, C. \"Human Space System Modeling: A tool for designing\n%inexpensive Moon and Mars exploration missions\"\n\n% 2. SMAD\n\nfunction [TotalCost, SpaceSegCost, LVCost, OpSupCost]=cost(mass,TRL,duration)\n\n%mass: is total mass of vehicle in kg\n%TRL: is technology readiness level and should range from 1 to 9.\n%duration: is duration of mission in years\n\nInfl = 1.052; %inflation factor to convert from FY00$ to FY03$ [2]\n\n%Space segment costs\n\n%Space Segment Cost Factor\nScf = 157e3; % ($/Kg) we use maximum value to obtain conservative estimate [1]\n\n%Program level Cost Factor\nPcf = Infl * 1.963*(523e6)^0.841; %($) Program level cost estimated from table 20-4 [2]\n\n%RTDECF of 1 means program based on existing hardware,\n%3 means new development program, 2 is somewhere in between [1]\n%Rcf = 2;\n\n%Heritage Cost Factor: assume that a TRL of 9 means 90% heritage,\n%therefore 10% extra needs to be spent in RDTE, [2] pg 798.\nHcf = 2-TRL/10;\n\n%SpaceSegCost = Scf*Rcf*Hcf*Mass+Pcf;\nSpaceSegCost = Scf*Hcf*mass+Pcf;\n%****************************************************************\n\n%Launch Vehicle Cost\n\n%Launch Vehicle cost factor\nLcf = 15.4e3; %($/Kg) [1]\n\n%Insurance cost factor\nIcf = 1.5; %for commercial launches it is 1.33, for govt. we are assuming a bit higher number [1]\n\nLVCost = Lcf*Icf*mass;\n\n%********************************************************************\n\n%Ground Operations and Support Costs\n\nOpSupCost = 1.5e9*(duration); %($) ISS operational budget is $13 billion for 10 years [1]\n\n%**************************************************************************\n\nTotalCost = SpaceSegCost+LVCost+OpSupCost;\n\nReferences\n\n1 Dudley-Rowley, Marilyn, et. al., Crew Size, Composition, and Time: Implications for Exploration Design, AIAA\n2002-6111, AIAA, 2002, p. 4.\n2 ibid, p. 13.\n3 Zubrin, Robert, Athena: A Potential First Step in a Program of Human Mars Exploration, AIAA-96-4465, AIAA,\n1996, p. 1.\n4 Dudley-Rowley, Marilyn, et. al., Crew Size, Composition, and Time: Implications for Exploration Design, AIAA\n2002-6111, AIAA, 2002, p. 13.\n5 Conners, M.M., et al., Living Aloft, NASA, 1985, p60.\n6 Sloan, James, Commercial Space Station Requirements, AIAA-2000-5228, AIAA, 2000, p. 5.\n7 Larson, Wiley, Human Spaceflight: Mission Analysis and Design, McGraw-Hill, 1999, Table 18-8.\n8 ibid, p. 554.\n9 Wieland, Paul., Designing For Human Presence in Space, NASA Marshall Space Flight Center , 1999, Â§ 2.1.\n10 ibid, Table 17-9, p. 554.\n11 Wieland, Paul., Designing For Human Presence in Space, NASA Marshall Space Flight Center , 1999, Â§ 2.4.\n12 ibid, p. 558.\n13 ibid, p. 998.\n14 Borowski, Stanley, and Dudzinsky, Leonard, Artificial Gravity Design Option for NASA's Human Mars Mission\nUsing \"Bimodal\" NTR Propulsion, AIAA-99-2545, AIAA, 1999, p. 3.\n15 ibid, p. 4.\n16 ibid, p. 71.\n17 ibid, p. 994.\n18 Sloan, James, Commercial Space Station Requirements, AIAA-2000-5228, AIAA, 2000, p. 5.\n19 Miller, David, Course lecture notes, Electromagnetic Formation Flight, Presented 10/2002.\n20 Properties of Selected Materials, http://callisto.my.mtu.edu/my4150/props.html.\n21 Vaughan, A., Figgess, A., Interaction between mission orbit, space environment, and human needs, course\nproject, 2003.\n22 Reynerson, C., Human Space System Modeling: A Tool for Designing Inexpensive Moon and Mars Exploration\nMissions, AIAA 2000-5240, AIAA, 2000.\n23 Wertz, J. R. and Larson, W. J. (editors), Space Mission Analysis and Design, 3rd Edition, 1999 Microcosm Press,\nEl Segundo California."
    },
    {
      "category": "Resource",
      "title": "16_851_portfolio.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/16-851-satellite-engineering-fall-2003/1b24b751674a5d7db79cad58eefe2ade_16_851_portfolio.pdf",
      "content": "Portfolio\n\nSatellite Engineering\n16.851\n\nDepartment of Aeronautics and Astronautics\nMassachusetts Institute of Technology\n\nFall 2003\n\nMatthew Richards\nProfessor David W. Miller\nCol. John E. Keesee\n\nTables of Contents\n\n1. Introduction..................................................................................................................... 3\n2. Launch Systems .............................................................................................................. 5\n3. Orbital Mechanics......................................................................................................... 11\n4. Power Systems.............................................................................................................. 18\n5. Propulsion Systems....................................................................................................... 24\n6. Space Environment....................................................................................................... 31\n7. Optics............................................................................................................................ 34\n8. Attitude Control Systems.............................................................................................. 36\n9. Electromagnetic Formation Flight................................................................................ 38\n10. Spacecraft Computers and Software........................................................................... 40\n11. Thermal System .......................................................................................................... 41\n12. Communications, Telemetry, Tracking, & Command................................................ 44\n13. Human Factors............................................................................................................ 51\n14. Cost Modeling............................................................................................................. 64\n15. Structures .................................................................................................................... 66\n\n1. Introduction\nThis section describes the teaching goals of Satellite Engineering and my overall\nexperience in the class.\n\nCourse Description\nThis course covered the fundamentals of satellite engineering design. We studied the\norbital environment and analyzed problems of station keeping, attitude control,\ncommunications, power generation, structural design, thermal balance, and subsystem\nintegration. In class and in our problem sets, we considered trade-offs among weight,\nefficiency, cost, and reliability. Many topics were discussed in the context of current\nsatellite systems, including choice of design parameters, such as size, weight, power\nlevels, temperature limits, frequency, and bandwidth.\n\nLearning Objectives\nSix primary learning objectives were identified in the syllabus:\n\n- Understand the function of spacecraft subsystems.\n- Apply orbital mechanics formula and tools to spacecraft mission design.\n- Select appropriate launch systems and understand their affect on satellite and\npayload design and performance.\n- Evaluate spacecraft subsystem performance and trades\n- Estimate space system costs\n- Trade subsystem performance requirements to optimize higher-level system\nperformance, cost, or weight.\n\nPersonal Motivation for Taking 16.851\nThere were many reasons I chose to take 16.851. First and foremost, I wanted to increase\nmy knowledge of space systems. Having worked at JPL on instrumentation for a rover\npoint design and on a DARPA satellite servicing project as a systems engineer, I had\nsome applied experience in the area but little academic grounding on the subject.\nSecondly, I am interested in space systems as an area of concentration in graduate school\nand recognized 16.851 as an opportunity to both explore this area of interest and\npotentially earn units which could be applied to a graduate degree.\n\nReflections on Learning Experience\nThis term, Satellite Engineering has been my most challenging, most frustrating, and\nmost enjoyable course. Working on self-created problem sets offered a level of academic\nfreedom I have not experienced ever before. As I learned the hard way (i.e. Problem Set\nTwo, cryo-cooled optics and thermal subsystem), this freedom required well-scoped\nproblem statements while satisfying trades across all subsystems. Additionally, it was\n\ninspiring to work with master's and doctorate students who were often very accomplished\nin their fields.\n\nTaking Satellite Engineering and 16.83 during the same term, I found the courses to be\nmutually complimentary and did not get tired of the subject material. After spending my\njunior year at the University of Cambridge in England where few aerospace subjects are\noffered in the Engineering Department, I was glad to immerse myself in space systems\ncoursework.\n\nGeneral References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\nFundamentals of Space Systems, Pisacane and Moore, Oxford, 1994\nSpace Systems Engineering, Fortesque and Stark, John Wiley and Sons, 1995\nSpace Vehicle Design, Griffin and French, AIAA 1991\nCommunications Satellite Handbook, Morgan and Gordon, 1989\n\n2. Launch Systems\nThe launch system includes a single or multi-stage launch vehicle and a launch site with\nassociated ground support. Since the 1960's launch vehicle performance has increased\nby an order of magnitude while reliability of launch systems have increased from 85% to\n95%. For a typical spacecraft, the propellant mass fraction of the launch system is 0.85,\nwhile the structure and payload mass fractions are 0.14 and 0.01, respectively. The\nfollowing graph from my fifth problem set solution depicts the trade between payload\ncapacity and achievable orbit altitude.\n\nLearning Objectives\n- Understand launch system characteristics, sizing and trade-offs\n- Estimate launch system sizes, staging requirements\n- Be able to select appropriate launch system for a given mission from available\nsystems\n- Be able to estimate spacecraft requirements driven by launch vehicle induced\nenvironments\n- Determine costs of launch systems\n\nReflections on Learning Experience\nLaunch systems have become one of my strongest systems in 16.851. Launch site\nselection was the topic of the first problem set I worked on and it was the module I coded\nin MATLAB for the fifth problem set. I found launch vehicles to be a good choice for\nconducting trades given the readily-available metrics on various systems, especially those\nincluded in the 1999 AIAA Reference Guide to Space Launch Systems.\n\nProminent U.S. Launch Vehicles\n\nAtlas\nLockheed Martin's Atlas family of launch vehicles is one of the largest commercial\nlaunch vehicle lines in the United States. Four Atlas launch vehicles are included in the\nlaunch vehicle database. The Atlas IIA has an upgraded RL 10 engine with optional\nnozzle extension for the Centaur stage. The Atlas IIAS adds solid strap-on boosters to\nthis architecture. The relatively new Atlas IIIA (2000) is a re-engineered Atlas II,\nutilizing a high-performance RD-180 engine from Russia. The Atlas IIIB has a stretched\nCentaur that can use single or dual Centaur configurations.\n\nDelta\nFollowing the Challenger shuttle disaster in 1986, President Reagan announced that the\nSpace Shuttle would carry no more commercial payloads. To fill this gap, the Delta II\nwas built by Boeing (1989) to launch medium-sized NASA payloads and small\ncommercial payloads. Delta III development began in 1995 to launch heavier\ncommercial payloads. The Delta III includes a larger fairing, larger strap-on motors, and\na cryogenic second stage. The Delta IV line of medium-to-heavy launch vehicles is\nBoeing's most advanced product in the Evolved Expendable Launch Vehicle (EELV)\nprogram. The Delta IV Heavy is capable of delivering a payload directly to geostationary\norbit.\n\nPegasus\nOrbital Sciences Corporation's Pegasus XL (1994) is designed to launch small\ncommercial and government payloads. The Pegasus XL is air-launched from Orbital's L-\n1011 Stargazer aircraft at an altitude of approximately 12 km and a speed of Mach 0.8.\nThe Pegasus XL consists of a solid-propellant booster with wings. Advantages to the air\nlaunch concept include added initial velocity, lower drag, and flexible inclination angles.\n\nSpace Shuttle\nNASA's Space Shuttle (first launched in 1981) consists of two recoverable solid-\npropellant rocket boosters, an expendable liquid propellant tank, and a reusable delta-\nwing space plane. Primary Space Shuttle missions include launch of heavy payloads to\nLEO, and transfer of humans and cargo to the International Space Station.\n\nTaurus\nThe Taurus launch vehicle (1994) is Orbital Sciences Corporation's ground-launched\nderivative of the Pegasus. The Taurus incorporates the motors and avionics of the\nPegasus with a larger first stage (the government-provided Peacekeeper missile). Taurus\nwas funded by DARPA to supporting a rapid-response launch capability.\n\nTools Developed\nThe launch vehicle module launch_vehicle.m functions in two capacities. When\nthe function is called with no arguments, it returns the complete database of launch\n\nvehicles. The second capacity takes the apogee radius of the parking orbit and the\npayload mass as inputs, and outputs the cheapest capable launch vehicle and 'actual'\napogee and perigee radii. It is assumed that launch occurs at Cape Canaveral and that the\nlaunch vehicle only needs to get the payload to a parking orbit, which may be either\ncircular or eccentric. Reliability, procurement lead time, and other factors that may\ninfluence the selection of a launch vehicle are not incorporated into this analysis.\n\nInputs to the launch vehicle module\nQuantity Units Description\nradius km\nMinimum required apogee radius for the parking orbit.\nmass\nkg\nSpacecraft mass.\n\nOutputs of the launch vehicle module\nQuantity\nUnits Description\nlv_index\nIndex into the launch vehicle database of the optimum vehicle\napogee\nkm\nActual achievable parking orbit apogee.\nperigee\nkm\nParking orbit perigee.\n\nlaunch_vehicle.m\n\nfunction varargout=launch_vehicle(varargin)\n%LAUNCH_VEHICLE Outputs appropriate launch vehicle for a mission\n%\n% [LV_DATABASE] = LAUNCH_VEHICLE\n% Outputs a structure containing information on each launch vehicle.\n%\n% [LV_INDEX,APOGEE,PERIGEE] = LAUNCH_VEHICLE(RADIUS,MASS)\n% Outputs the index into the LV_DATABASE of the launch vehicle that\n% can most cost-effectively deliver a satellite of MASS kilograms\n% into a circular parking orbit of RADIUS kilometers. If no launch\n% vehicle can meet the demands, LV_INDEX is set to zero. APOGEE and\n% PERIGEE are the actual values achievable for the specified MASS.\n\n% Assumptions\n% 1. Best launch vehicle is determined as a function of cost\n% 2. Launch vehicle only needs to get payload to parking orbit\n% 3. Reliability (i.e. 98% successful Space Shuttle) is not\n% incorporated into the analysis\n% 4. Lead time is not factored into the module\n% 5. Launch occurs from Cape Canaveral (28.5 inclination)\n\n% Input launch vehicle characteristics, including Excel performance equations\n% 1999 AIAA International Reference Guide to Space Launch Systems\n% Inflation factor for 1999 launch vehicle estimates (source: SMAD, Chapter 20)\n% min and max are range of validity for performance equation\n% 0 perigee means circular orbit\ni=0;\ni=i+1;lvdata(i) = struct('name','Atlas IIA',...\n'company','Lockheed Martin',...\n'cost',91,...\n'x2',NaN,'x',NaN,'intercept',NaN,...\n\n'c_log',-847.55,'c_int',12041,...\n'perigee',185,...\n'min',0,'max',36000);\n\ni=i+1;lvdata(i) = struct('name','Atlas IIAS',...\n'company','Lockheed Martin',...\n'cost',112,...\n'x2',NaN,'x',NaN,'intercept',NaN,...\n'c_log',-968.15,'c_int',13978,...\n'perigee',185,...\n'min',0,'max',36000);\n\ni=i+1;lvdata(i) = struct('name','Atlas IIIA',...\n'company','Lockheed Martin',...\n'cost',112,...\n'x2',NaN,'x',NaN,'intercept',NaN,...\n'c_log',-969.02,'c_int',14319,...\n'perigee',185,...\n'min',0,'max',36000);\n\ni=i+1;lvdata(i) = struct('name','Atlas IIIB',...\n'company','Lockheed Martin',...\n'cost',112,...\n'x2',NaN,'x',NaN,'intercept',NaN,...\n'c_log',-1248.6,'c_int',17808,...\n'perigee',185,...\n'min',0,'max',36000);\n\ni=i+1;lvdata(i) = struct('name','Delta II 7320',...\n'company','Boeing',...\n'cost',59,... )\n'x2',0,'x',-1.6,'intercept',4800,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',2000);\n\ni=i+1;lvdata(i) = struct('name','Delta II 7420',...\n'company','Boeing',...\n'cost',59,...\n'x2',0,'x',-1.4815,'intercept',4888.9,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',2000);\n\ni=i+1;lvdata(i) = struct('name','Delta II 7920',...\n'company','Boeing',...\n'cost',64,...\n'x2',0,'x',-1.0526,'intercept',5789.5,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',2000);\n\ni=i+1;lvdata(i) = struct('name','Delta III',...\n'company','Boeing',...\n'cost',96,...\n'x2',NaN,'x',NaN,'intercept',NaN,...\n'c_log',-848.91,'c_int',12723,...\n'perigee',0,...\n'min',0,'max',36000);\n\ni=i+1;lvdata(i) = struct('name','Pegasus XL',...\n'company','Orbital Sciences',...\n'cost',16,...\n\n'x2',0,'x',-4,'intercept',2000,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',2000);\ni=i+1;lvdata(i) = struct('name','Space Shuttle',...\n'company','NASA',...\n'cost',320,...\n'x2',-.025,'x',-6,'intercept',25300,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',600);\n\ni=i+1;lvdata(i) = struct('name','Taurus 2110',...\n'company','Orbital Sciences',...\n'cost',21,...\n'x2',0,'x',-2.1622,'intercept',3243.2,...\n'c_log',NaN,'c_int',NaN,...\n'perigee',0,...\n'min',0,'max',2000);\n\n% determine which output type given the arguments\nif (nargin==0 & nargout<=1)\n% return the LV databse\nvarargout{1} = lvdata;\nreturn\nelseif (nargin==2 & nargout==3)\n% eventually return the LV index\nA_po = varargin{1}-6378.136; % change radius to altitude\nmass = varargin{2};\nelse\n% something is wrong\nerror('Invalid number of input or output arguments');\nend\n\n% Get matrices\ncost = cat(2,lvdata.cost);\nx2 = cat(2,lvdata.x2);\nx = cat(2,lvdata.x);\nc_log = cat(2,lvdata.c_log);\nc_int = cat(2,lvdata.c_int);\nintercept = cat(2,lvdata.intercept);\nperigee = cat(2,lvdata.perigee);\namin = cat(2,lvdata.min);\namax = cat(2,lvdata.max);\n\n% Eliminate launch vehicles unable to launch to desired apogee radius\nbound_indices = find(A_po<=amax & A_po>=amin);\n\n% Compute maximum payload capability for a given altitude\npcap_a = x2.*A_po.^2 + x.*A_po + intercept;\npcap_b = c_log.*log(A_po)+c_int;\nfor i=1:length(lvdata)\nif ~isnan(pcap_a(i))\npcap(i) = pcap_a(i);\nelseif ~isnan(pcap_b(i))\npcap(i) = pcap_b(i);\nelse\npcap(i) = 0;\nend\nend\n\n% Eliminate launch vehicles unable to meet mass requirement\ncap_indices = find(pcap>=mass);\n\n% intersection of the sets\nindices = intersect(cap_indices, bound_indices);\n\n% find the minimum cost vehicle\n[cost, index] = min(cost(indices));\nindex = indices(index);\n\nif isempty(index)\nvarargout{1} = NaN;\nvarargout{2} = 0;\nvarargout{3} = 0;\nreturn\nend\n\nif x2(index)==0\napoapsis = (mass-intercept(index))/x(index);\nelseif isnan(x2(index))\napoapsis = min([exp((mass-c_int(index))/c_log(index)) amax(index)]);\nelse\napoapsis = (-x2(index)-sqrt(x(index)^2-4*x2(index)*...\n(intercept(index)-mass)))/(2*x2(index));\nend\n\nif perigee==0\nperiapsis=apoapsis;\nelse\nperiapsis=perigee(index);\nend\n\nvarargout{1} = index;\nvarargout{2} = apoapsis;\nvarargout{3} = periapsis;\n\nUseful References\nAtlas II Family. International Launch Services. http://www.ilslaunch.com/atlas/atlasii/\n(10 November 2003).\n\nAtlas III Summary. Space and Tech Database of Expendable Launch Vehicles.\nhttp://www.spaceandtech.com/spacedata/elvs/atlas3_sum.shtml (13 November 2003).\n\nDelta II Payload Planners Guide. The Boeing Company. January 2003.\nhttp://www.boeing.com/defense-\nspace/space/delta/docs/delta_lI_ppg_update_january_2003.pdf (10 November 2003).\n\nDelta III Payload Planners Guide. The Boeing Company. October 2000.\nhttp://www.boeing.com/defense-space/space/delta/docs/DELTA_III_PPG_2000.PDF\n(10 November 2003).\n\nIsakowitz, Steven J. International Reference Guide to Space Launch Systems. Reston:\nAIAA, September 1999.\n\nOrbital Launch Vehicle Index. Encyclopedia Astronautica.\nhttp://astronautix.com/lvs/orbindex.htm (9 November 2003).\n\n3. Orbital Mechanics\nOrbital mechanics, also called flight mechanics, is the study of the motions of artificial\nsatellites and space vehicles moving under the influence of forces such as gravity,\natmospheric drag, thrust, etc. Orbital mechanics is a modern offshoot of celestial\nmechanics which is the study of the motions of natural celestial bodies such as the moon\nand planets. The root of orbital mechanics can be traced back to the 17th century when\nmathematician Isaac Newton (1642-1727) put forward his laws of motion and formulated\nhis law of universal gravitation. The engineering applications of orbital mechanics\ninclude ascent trajectories, reentry and landing, rendezvous computations, and lunar and\ninterplanetary trajectories. (Note: this introduction, the 'Orbital Elements' and 'Types of\nOrbits' sections are taken from http://users.commkey.net/Braeunig/space/orbmech.htm#elements)\n\nLearning Objectives\n- Understand orbital elements, including: Semi-Major Axis, Eccentricity,\nInclination, Argument of Periapsis, Time of Periapsis Passage, Longitude of\nAscending Node\n- Study different types of orbits\n- Newton's laws of motion and universal gravitation\n- Uniform circular motion\n- Motions of planets and satellites\n\nReflections on Learning Experience\nHaving had no instruction in orbits since touching on the basic laws in Unified, I had a lot\nof catching up to do for this section of the class. Sedwick's lecture was fast-paced and I\ngot lost in the math. However, two of my problem sets included orbits as a subsystem\nand these are where I was able to learn the basic principles and apply them in the\nmodules. Learning how to integrate STK and MATLAB is a valuable skill I will likely\nuse in the future.\n\nOrbital Elements\nAn orbiting satellite follows an oval shaped path\nknown as an ellipse with the body being orbited,\ncalled the primary, located at one of two points\ncalled foci. An ellipse is defined to be a curve\nwith the following property: for each point on an\nellipse, the sum of its distances from two fixed\npoints, called foci, is constant (see figure to\nright). The longest and shortest lines that can be\ndrawn through the center of an ellipse are called\nthe major axis and minor axis, respectively. The\nsemi-major axis is one-half of the major axis and\n\nrepresents a satellite's mean distance from its primary. Eccentricity is the distance\nbetween the foci divided by the length of the major axis and is a number between zero\nand one. An eccentricity of zero indicates a circle.\n\nInclination is the angular distance between a satellite's orbital plane and the equator of its\nprimary (or the ecliptic plane in the case of heliocentric, or sun centered, orbits). An\ninclination of zero degrees indicates an orbit about the primary's equator in the same\ndirection as the primary's rotation, a direction called prograde (or direct). An inclination\nof 90 degrees indicates a polar orbit. An inclination of 180 degrees indicates a retrograde\nequatorial orbit. A retrograde orbit is one in which a satellite moves in a direction\nopposite to the rotation of its primary.\n\nPeriapsis is the point in an orbit closest to the primary. The opposite of periapsis, the\nfarthest point in an orbit, is called apoapsis. Periapsis and apoapsis are usually modified\nto apply to the body being orbited, such as perihelion and aphelion for the Sun, perigee\nand apogee for Earth, perijove and apojove for Jupiter, perilune and apolune for the\nMoon, etc. The argument of periapsis is the angular distance between the ascending node\nand the point of periapsis (see figure below). The time of periapsis passage is the time in\nwhich a satellite moves through its point of periapsis.\n\nNodes are the points where an orbit crosses a plane, such as a satellite crossing the Earth's\nequatorial plane. If the satellite crosses the plane going from south to north, the node is\nthe ascending node; if moving from north to south, it is the descending node. The\nlongitude of the ascending node is the node's celestial longitude. Celestial longitude is\nanalogous to longitude on Earth and is measured in degrees counter-clockwise from zero\nwith zero longitude being in the direction of the vernal equinox.\n\nIn general, three observations of an object in orbit are required to calculate the six orbital\nelements. Two other quantities often used to describe orbits are period and true anomaly.\nPeriod is the length of time required for a satellite to complete one orbit. True anomaly is\nthe angular distance of a point in an orbit past the point of periapsis, measured in degrees.\n\nTypes of Orbits\nFor a spacecraft to achieve earth orbit, it must be launched to an elevation above the\nEarth's atmosphere and accelerated to orbital velocity. The most energy efficient orbit,\nthat is one that requires the least amount of propellant, is a direct low inclination orbit. To\nachieve such an orbit, a spacecraft is launched in an eastward direction from a site near\nthe Earth's equator. The advantage being that the rotational speed of the Earth contributes\nto the spacecraft's final orbital speed. At the United States' launch site in Cape Canaveral\n(28.5 degrees north latitude) a due east launch results in a \"free ride\" of 915 mph (1,470\nkph). Launching a spacecraft in a direction other than east, or from a site far from the\nequator, results in an orbit of higher inclination. High inclination orbits are less able to\ntake advantage of the initial speed provided by the Earth's rotation, thus the launch\nvehicle must provide a greater part, or all, of the energy required to attain orbital velocity.\nAlthough high inclination orbits are less energy efficient, they do have advantages over\nequatorial orbits for certain applications. Below we describe several types of orbits and\nthe advantages of each:\nGeosynchronous orbits, also called geostationary orbits (GEO), are circular, low\ninclination orbits around the Earth having a period of 24 hours. A spacecraft in a\ngeosynchronous orbit appears to hang motionless above one position on the Earth's\nsurface. For this reason, they are ideal for some types of communication and\nmeteorological satellites. To attain geosynchronous orbit, a spacecraft is first launched\ninto an elliptical orbit with an apogee of 22,240 miles (35,790 km) called a geostationary\ntransfer orbit (GTO). The orbit is then circularized by firing the spacecraft's engine at\napogee.\nPolar orbits (PO) are orbits with an inclination of 90 degrees. Polar orbits are useful for\nsatellites that carry out mapping and/or surveillance operations because as the planet\nrotates the spacecraft has access to virtually every point on the planet's surface.\nWalking orbits: An orbiting satellite is subjected to a great many gravitational influences.\nFirst, planets are not perfectly spherical and they have slightly uneven mass distribution.\nThese fluctuations have an effect on a spacecraft's trajectory. Also, the sun, moon, and\nplanets contribute a gravitational influence on an orbiting satellite. With proper planning\nit is possible to design an orbit which takes advantage of these influences to induce a\nprecession in the satellite's orbital plane. The resulting orbit is called a walking orbit, or\nprecessing orbit.\nSun synchronous orbits (SSO) are walking orbits whose orbital plane precesses with the\nsame period as the planet's solar orbit period. In such an orbit, a satellite crosses periapsis\nat about the same local time every orbit. This is useful if a satellite is carrying\ninstruments which depend on a certain angle of solar illumination on the planet's surface.\nIn order to maintain an exact synchronous timing, it may be necessary to conduct\noccasional propulsive maneuvers to adjust the orbit.\nHohmann transfer orbits are interplanetary trajectories whose advantage is that they\nconsume the least possible amount of propellant. A Hohmann transfer orbit to an outer\nplanet, such as Mars, is achieved by launching a spacecraft and accelerating it in the\n\ndirection of Earth's revolution around the sun until it breaks free of the Earth's gravity and\nreaches a velocity which places it in a sun orbit with an aphelion equal to the orbit of the\nouter planet. Upon reaching its destination, the spacecraft must decelerate so that the\nplanet's gravity can capture it into a planetary orbit.\nTo send a spacecraft to an inner planet, such as Venus, the spacecraft is launched and\naccelerated in the direction opposite of Earth's revolution around the sun (i.e. decelerated)\nuntil in achieves a sun orbit with a perihelion equal to the orbit of the inner planet. It\nshould be noted that the spacecraft continues to move in the same direction as Earth, only\nmore slowly.\nTo reach a planet requires that the spacecraft be inserted into an interplanetary trajectory\nat the correct time so that the spacecraft arrives at the planet's orbit when the planet will\nbe at the point where the spacecraft will intercept it. This task is comparable to a\nquarterback \"leading\" his receiver so that the football and receiver arrive at the same\npoint at the same time. The interval of time in which a spacecraft must be launched in\norder to complete its mission is called a launch window.\n\nTools Developed\nThe parking orbit into which a spacecraft is initially placed by a launch vehicle is often\nelliptical. The orbit is circularized to the desired radius, and plane changes are\nperformed,\nusing\nthe\nonboard\npropulsion\nsystem.\n\nThe\norbit\nmodule\ncalculate_delta_v.m takes as inputs the parking orbit apogee, perigee, and\ninclination, and the destination orbit radius and inclination, and determines the change in\nvelocity needed to achieve the final orbit.\n\nThe first burn takes place at the apogee of the parking orbit, and is used to raise the\nperigee. The required change in velocity for this first burn is determined by the following\nequations, where ra and rp are the apogee and perigee radii, respectively, a is the semi-\nmajor axis, e is the eccentricity, p is the semi-latus rectum and h is the angular\nmomentum. The constant Î¼=GMEarth is the gravitational parameter of Earth.\n\nÎ¼\np\nh\ne\na\np\na\nr\ne\nr\nr\na\na\np\na\n=\n-\n=\n-\n=\n+\n=\n)\n1(\n)\n/\n(\n\nSecond Burn\nThird Burn\nFirst Burn\nOrbit transfer burns\n\nThe specific energy Îµ is calculated for both the initial and final orbits. This allows for the\ncalculation of initial and final velocities at each orbit. The change in velocity is equal to\nthe difference between the final and initial velocities. These calculations are then\nrepeated for the second burn, which brings the orbit from its new altitude at perigee to its\nnew altitude at apogee, thereby circularizing the orbit.\n\n)\n(\nr\nv\nr\nr\nh\na\nÎ¼\nÎµ\nÎ¼\nÎµ\n+\n=\n-\n=\n\nThe final burn changes the plane, if needed, through a simple plane change using the\nfollowing equations, where if and ii are the final and initial inclinations, respectively.\n\n)\n/\nsin(\ni\ni\nÎ¸\nÎ¸\ni\ni\nf\nv\nv =\nâ\n-\n=\n\nAfter the magnitudes of the three changes in velocity are determined, the orbit module\ncalculates the period of each orbit using the following equation.\n\n)\n/\n(\n3 Î¼\nÏ\na\nP =\n\nThe orbit module outputs the changes in velocity required for each of the three burns, and\nthe orbital periods for each of the three orbits.\n\nInputs to the orbit module.\nQuantity Units\nDescription\napo_i\nkm\nParking orbit (initial) apogee.\nperi_i km\nParking orbit (initial) perigee.\ninc_i\nrad\nParking orbit (initial) inclination.\nrad_f\nkm\nDestination orbit (final) radius.\ninc_f\nrad\nDestination orbit (final) inclination.\n\nOutputs from the orbit module.\nQuantity\nDescription\ndvinfo A data structure containing information on the required âVs\nand the orbital periods of the parking, transfer, and final orbits.\n\ncalculate_delta_v.m\n\nfunction [output] = calculate_delta_v(parking_apogee, parking_perigee,...\nparking_inclination, final_radius, final_inclination)\n\n%CALCULATE_DELTA_V determines the delta V required for an orbit transfer\n%\n% [DVINFO] = CALCULATE_DELTA_V(APO_I, PERI_I, INC_I, RAD_F, INC_F)\n% Given the apogee, perigee, and inclination of the initial orbit\n% (APO_I, PERI_I, INC_I) and the circular radius RAD_F and inclination\n% INC_F of the final orbit, determines the delta V required for each\n% of three burns and the orbital periods of the initial, transfer, and\n% final orbits. These data are contained in the structure DVINFO.\n\n% Date: November 10, 2003\n\n% This module returns the change in velocity needed to perform an orbit\n% transfer from an initial parking orbit to an intermediate orbit and a\n% circular final orbit, including, if needed, a plane change.\n% The time of flight is also returned for the three burns is also output.\n\nmu = 3.98600e5; % Earth's gravitational constant in: km^3 / s^2\nthird_burn_delta_v = 0;\n\nsemimajor_axis = (parking_apogee + parking_perigee) / 2;\neccentricity = (parking_apogee / semimajor_axis) - 1;\nsemilatus_rectum = semimajor_axis * (1 - eccentricity ^ 2);\nangular_momentum = sqrt(semilatus_rectum * mu);\n\nintermediate_semimajor_axis = (final_radius + parking_apogee) / 2;\nintermediate_eccentricity = (final_radius / intermediate_semimajor_axis) - 1;\nintermediate_semilatus_rectum = intermediate_semimajor_axis *...\n(1 - intermediate_eccentricity ^ 2);\nintermediate_angular_momentum = sqrt(intermediate_semilatus_rectum * mu);\n\nspecific_energy_parking_orbit = ((angular_momentum^2) / (2 * parking_apogee^2)) ...\n- (mu / parking_apogee);\n\nspecific_energy_intermediate_orbit = ((intermediate_angular_momentum ^ 2) /...\n(2 * parking_apogee ^ 2)) - (mu / parking_apogee);\nvelocity_parking_orbit = sqrt(2 * (specific_energy_parking_orbit + ...\n(mu / parking_apogee)));\nvelocity_intermediate_orbit = sqrt(2 * (specific_energy_intermediate_orbit + ...\n(mu / parking_apogee)));\n\nfirst_burn_delta_v = velocity_intermediate_orbit - velocity_parking_orbit;\n\nspecific_energy_intermediate_orbit = ((intermediate_angular_momentum ^ 2) /...\n(2 * final_radius ^ 2)) - (mu / final_radius);\nspecific_energy_final_orbit = -(mu / (2 * final_radius));\nvelocity_intermediate_orbit = sqrt(2 * (specific_energy_intermediate_orbit + ...\n(mu / final_radius)));\nvelocity_final_orbit = sqrt(2 * (specific_energy_final_orbit + (mu / final_radius)));\n\nsecond_burn_delta_v = velocity_final_orbit - velocity_intermediate_orbit;\n\nif(~(parking_inclination == final_inclination))\ninclination_angle_change = (final_inclination - parking_inclination) * (pi / 180);\nthird_burn_delta_v = 2 * velocity_final_orbit * sin(inclination_angle_change / 2);\nend\n\nperiod_parking_orbit = 2 * pi * sqrt((semimajor_axis ^ 3) / mu);\nperiod_intermediate_orbit = 2 * pi * sqrt((intermediate_semimajor_axis ^ 3) / mu);\nperiod_final_orbit = 2 * pi * sqrt((final_radius ^ 3) / mu);\n\noutput.deltaV = [first_burn_delta_v second_burn_delta_v third_burn_delta_v];\noutput.period_parking = period_parking_orbit;\noutput.period_intermediate = period_intermediate_orbit;\noutput.period_final = period_final_orbit;\n\nUseful References\nBate, Roger R., Mueller, Donald D., and White, Jerry E., Fundamentals of\nAstrodynamics, New York, Dover Publications, Inc., 1971.\nBraeunig, David A. Rocket and Space Technology.\nhttp://users.commkey.net/Braeunig/space/orbmech.htm#types (21 November 2003).\nOrbital Mechanics Educational Network. http://www.omenet.co.uk/omen16.htm\n\n4. Power Systems\nThe power system is responsible for providing, storing, distributing, and regulating\nelectricity throughout the spacecraft. Mission life, orbital parameters, spacecraft\nconfiguration, and average and peak electrical power requirements all effect design. The\ntraditional source of power for Earth-orbiting spacecraft is solar photovoltaics. Solar\nthermal dynamics are also a potential source of power for satellites in LEO. Sources of\npower for interplanetary spacecraft include radioisotopes, nuclear reactors, and fuel cells.\n\nLearning Objectives\nStudy of the following issues are critical to understanding the power system:\n\n- Strengths and weaknesses of different solar cell types\n- Relationship between the spacecraft's orbital parameters (i.e. altitude) and the\nallowable Depth-of-Discharge of solar arrays\n- Characteristics of fuel cells\n- Issues associated with RTG's\n- Solar cell operating characteristics and temperature effects\n\nReflections on Learning Experience\nSMAD has a well-documented approach (section 11.4) to designing solar arrays and the\nbattery storage system. Given the readily-available data in this section and the\ndependency of the power subsystem on other subsystems of the spacecraft, it is a good\nselection for conducting trades in the problem sets. In the second problem set I dealt with\nthe degradation of solar arrays due to radiation in the space environment. In the fourth\nproblem set I coded modules which sized the solar array and battery storage system.\n\nIn the first five problem sets my group always dealt with LEO satellites, offering little\nchance to explore radioisotopes, nuclear reactors, and fuel cells. I am hoping to explore\nthese alternative power system in our sixth problem set which deals with a manned\nmission to Mars\n\nTools Developed\nThe power production module coded on the fourth problem set outputs the mass of the\nsolar array, the area the solar array, and the solar cell type (either Silicon, Thin Sheet\nAmorphous Si, Gallium Arsenide, Indium Phosphide, or Multijunction GaInP/GaAs) that\nwill minimize the solar array area.. (See MATLAB function Power_Optimizing to follow)\nThe inputs to the module are mission life, power required (not including data transmission\nneeds), power required for data transmission needs, time to downlink data, average time of\neclipse, average time of sunlight, and inclination of the orbit.\n\nMany assumptions were made in coding the power production module. Energy transfer\nefficiencies (Xe =.65 during eclipse and Xd =.85 during sunlight) were taken as constants\nfrom SMAD. The input power required for data transmission was assumed to include\nenergy transfer efficiency losses (\n=1). Also, the non-transmitting power required was\nassumed to be constant in sunlight and eclipse (P\ndl\nX\ne=Pd). Calculating a dynamic value of\ninherent degradation--entailing analysis of the solar cell design and assembly process,\ntemperature of array, and shadowing of cells-- falls outside of the scope of our problem so\na constant value of inherent degradation (.77) was taken from SMAD.\nThe first step in the power production module is to compute the power the solar array is\nrequired to collect during sunlight,\n.\n,\n, and\nare time in eclipse, time in sunlight,\nand time to downlink respectively.\nsa\nP\ne\nT\nd\nT\ndl\nT\nd\ndl\ndl\ndl\nd\nd\nd\ne\ne\ne\nsa\nT\nX\nT\nP\nX\nT\nP\nX\nT\nP\nP\nâ\nâ \nâ\nâ\nâ\nâ\n+\n+\n=\n\nThe second step is to compute beginning-of-life power,\n, per unit area. The solar\nillumination intensity,\n, is reduced by solar cell efficiency, degradation, and angle-of-\nincidence factors. Each solar cell efficiency is fed into the equation using array\n. The\norbit's inclination, inc, is taken as an input. The worst-case sun angle between equatorial and\necliptic planes is taken as 23.5 degrees.\nbol\nP\niS\nss\nX\nâ\nâ \nâ\nâ\nâ\nâ\n+\n=\nâ\nâ\nâ\ninc\nI\nX\nS\nP\nd\nss\ni\nbol\n5.\ncos\nÏ\n\nThe third step is to compute end-of-life power collection capability,\n, of the solar array.\nFor the duration of the mission each solar cell experiences life degradation,\n, due to\nthermal cycling in and out of eclipses and other factors. Mission life,\n, is an obvious\ninput.\neol\nP\nss\nD\nm\nL\n(\n)\nm\nss\nbol\neol\nL\nD\nP\nP\n-\n=\n\nThe fourth and final step of the power production module is to determine the solar array\narea,\n, that meets the power collection requirements,\n. We must design for the end-\nof-life power collection capability,\n.\nsa\nA\nsa\nP\neol\nP\neol\nsa\nsa\nP\nP\nA\n=\n\nsa\nA and\nvary for each solar cell variety. The module selects a solar cell type that\nminimizes array area and proceeds to compute mass of the power subsystem using equation\n10-13 in SMAD.\neol\nP\n\nPower_optimizing.m\n\n% Matthew Richards\nfunction [cell_type, M_sa, area] = Power_Optimizing(L_m, P_av, P_dl, T_dl, T_e, T_d, inc)\n% This function selects the optimal solar cell type as a function of area\n\n% INPUTS\n% L_m: mission life (years)\n% P_av: power requirement, not including data transmission needs (W)\n% P_dl: power required for data tranmission needs (W)\n% T_dl: time to downlink data (minutes)\n% T_e: average time of eclipse (minutes)\n% T_d: average time not in eclipse (minutes)\n% inc: incliation of the orbit (rad)\n\n% OUTPUTS\n% cell_type: name of solar cell\n% M_sa: mass of solar array (kg)\n% area: area of solar array (m^2)\n\ndisp('Finding Solar Array...');\n\n% Defining problem variables (source: SMAD)\nX_e = .65; %energy transfer efficiency during eclipse, direct energy transfer\nX_d = .85; %energy transfer efficiency during daylight, direct energy transfer\nS_i = 1367; %solar illumination intensity, W/m^2\nX_si = .148; %solar cell production efficiency, Silicon\nX_th = .050; %solar cell production efficiency, Thin Sheet Amorphous Si\nX_ga = .185; %solar cell production efficiency, Gallium Arsenide\nX_ip = .180; %solar cell production efficiency, Indium Phosphide\nX_mj = .220; %solar cell production efficiency, Multijunction GaInP/GaAs\nI_d = .77; %inherent degradation\ntheta = 23.5 * (pi/180) + inc; %worst-case sun angle, radians\n\n% Compute power collected by solar array during daylight\nP_sa = (P_av * T_e / X_e + P_av * T_d / X_d + P_dl * T_dl) / T_d;\n\n% Vector of solar cell efficiencies\nX = [X_si X_th X_ga X_ip X_mj];\n\n% Compute power ouptut for various solar cell types (W/m^2)\nP_o = S_i .* [X];\n\n% Compute beginning-of-life power (W) per unit area for various solar cell types\nP_bol = (cos(theta) * I_d) .* P_o;\n\n% Compute actual lifetime degradation for various solar cell types\nA_d = [.0375 .0375 .0275 .0375 .0375];\nL_d = (1 - A_d) .^ L_m;\n\n% Compute end-of-life power (W) per unit area for various solar cell types\nP_eol = P_bol .* L_d;\n\n% Compute solar array area (m^2) required to support input power requirement\nA_sa = P_sa ./ P_eol;\n\n% List best solar cell type (smallest cell area)\nfprintf('\\n');\ndisp('Best solar cell type, minimizing for area:');\nMin = min(A_sa);\nif Min == A_sa(1);\n\ncell_type = 'Silicon'\nelseif Min == A_sa(2);\ncell_type = 'Thin Sheet Amorphous Si'\nelseif Min == A_sa(3);\ncell_type = 'Gallium Arsenide'\nelseif Min == A_sa(4);\ncell_type = 'Indium Phosphide'\nelseif Min == A_sa(5);\ncell_type = 'Multijuction GaInP/GaAs'\nend\n\n% Compute mass (kg) of solar array\nM_sa = .04 * P_sa;\n\n% Area of chosen solar array\narea = Min;\n\ndisp('Solar array mass (kg): ');\ndisp(M_sa);\ndisp('Solar array area (m^2): ');\ndisp(area);\n\nThe power storage module (also coded on the fourth problem set) outputs the optimal\nsecondary battery type (choosing among Nickel-Cadium and three Nickel-Hydrogen\nvarieties) as a function of mass. (See MATLAB function Storage_Optimizing to follow.)\nInputs to the function include the mission lifetime, number of times the satellite goes in\nand out of eclipse, power required (not including data transmission needs), power\nrequired for data transmission needs, time to downlink data, and average time of eclipse.\nOne assumption made in the module is that transmission efficiency between the battery\nand the load, n , is 90%. Also, in our module we are designing to meet a battery capacity\nrequirement. Whether or not to have additional batteries to provide redundancy is a trade\nwhich may become the subject of future work.\nThe depth-of-discharge (DOD), or battery capacity removed during a discharge period\nsuch as eclipse, is the first calculation performed in the power storage module. The DOD\nis inversely related to the number of charge and discharge cycles undergone by a battery\nthroughout its life. The number of cycles is determined by our spacecraft's orbital\nparameters (i.e. altitude). Figure 11-11 from SMAD is used in our function to determine\nDOD for our Nickel-Cadmium and Nickel Hydrogen battery types. To simply the\ncalculation, cycle life is broken into seven groups for each secondary battery (less than\n1000 cycles, between 1000 and 2000 cycles, etc.). The DOD for a given range of values\nis taken as the average of the maximum DOD and minimum DOD of that range.\nThe second step of the power storage module determines power required during eclipse,\n. Designing for the batteries for the worst-case scenario, we assume the data\ntransmission down to Earth occurs during eclipse.\ne\nP\n(\n)\ne\ndl\ndl\ne\nav\ne\nT\nT\nP\nT\nP\nP\n+\n=\n\nThe third step determines the battery capacity,\n, required for the spacecraft. Depth-of-\ndischarge,\n, is input to this calculation as an array representing the four battery types.\nr\nC\ndod\nX\ndod\ne\ne\nr\nnX\nT\nP\nC\n=\n\nThe fourth and final step of the function selects among the battery types to minimize\nmass, M . Specific energy density,\n, is fed into this function as an array.\ned\nX\ned\nr\nX\nC\nM =\n\nStorage_optimizing.m\n\n% Matthew Richards\nfunction [battery_name, mass] = Storage_Optmizing(L_m, cyc, P_av, P_dl, T_dl, T_e)\n% This function selects the optimal battery as a function of mass\n\n% INPUTS\n% L_m: life of mission (years)\n% cyc: cycle life (number of times satellite goes in and out of sun)\n% P_av: average power requirement, not including for data transmission (W)\n% P_dl: power for data transmission (W)\n% T_dl: time of each data transmission (minutes)\n% T_e: time of eclipse (minutes)\n\n% OUTPUTS\n% battery_name\n% mass: mass of battery (kg)\n\ndisp('Finding Battery...');\n% Defining problem variables (source: SMAD)\nX_nc = 30; %Nickel-Cadium specefic energy (W*hr/kg)\nX_nhi = 43; %Nickel-Hydrogen (individual pressure) specefic energy (W*hr/kg)\nX_nhc = 56; %Nickel-Hydrogen (common pressure) specefic energy (W*hr/kg)\nX_nhs = 57; %Nickel-Hydrogen (single pressure) specefic energy (W*hr/kg)\nX_li = 110; %Lithium-Ion specefic energy (W*hr/kg)\nX_ss = 210; %Sodium-Sulfur specefic energy (W*hr/kg)\nn = 0.90; %Transmission effeciency between the battery and the load\n\n% Vector of specific energy densities\nX = [X_nc X_nhi X_nhc X_nhs];\n\n% Determine Depth-of-Discharge\nif cyc < 1000\nDoD_nc = .65;\nDoD_nhi = .90;\nDoD_nhc = .90;\nDoD_nhs = .90;\nelseif cyc >= 1000 & cyc < 2000\nDoD_nc = .55;\nDoD_nhi = .75;\nDoD_nhc = .75;\nDoD_nhs = .75;\nelseif cyc >= 2000 & cyc < 4000\nDoD_nc = .45;\nDoD_nhi = .65;\n\nDoD_nhc = .65;\nDoD_nhs = .65;\nelseif cyc >= 4000 & cyc < 10000\nDoD_nc = .35;\nDoD_nhi = .55;\nDoD_nhc = .55;\nDoD_nhs = .55;\nelseif cyc >= 10000 & cyc < 20000\nDoD_nc = .30;\nDoD_nhi = .50;\nDoD_nhc = .50;\nDoD_nhs = .50;\nelseif cyc >= 20000 & cyc < 40000\nDoD_nc = .20;\nDoD_nhi = .40;\nDoD_nhc = .40;\nDoD_nhs = .40;\nelseif cyc > 40000\nDoD_nc = .15;\nDoD_nhi = .35;\nDoD_nhc = .35;\nDoD_nhs = .35;\nend\n\n% Determine Power Required During Eclipse, design for worst-case: assume downlink during eclipse\nP_e = (P_av * T_e + P_dl * T_dl) / T_e;\n\n% Determine Battery Capacity (W*hr)\nDoD = [DoD_nc DoD_nhi DoD_nhc DoD_nhs];\nC_r = (P_e * T_e/60) .* ((n * DoD).^-1);\n\n% Determine Mass of Storage System\nM = C_r ./ X;\n\n% Display Lightest Power Storage System\ndisp('Best secondary battery type (lightest):');\nMin = min(M);\nif Min == M(1);\nbattery_name = 'Nickel-Cadium'\nelseif Min == M(2);\nbattery_name = 'Nickel-Hydrogen (individual pressure vessel)'\nelseif Min == M(3);\nbattery_name = 'Nickel-Hydrogen (common pressure vessel)'\nelseif Min == M(4);\nbattery_name = 'Nickel-Hydrogen (single pressure vessel)'\nend\n\n% Display Mass of Lightest Power Storage System\ndisp('Battery Mass (kg):');\nMin = min(M);\ndisp(Min)\nmass = Min;\n\nUseful References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\n\nFundamentals of Space Systems, Pisacane and Moore, Oxford, 1994.\n\n5. Propulsion Systems\nSpace propulsion systems are typically responsible for three tasks: lifting the launch\nvehicle and payload into a parking orbit in LEO, orbital transfer maneuvers, and thrust\nfor attitude control and orbit corrections.\nLearning Objectives\nSMAD identifies five areas of study for space propulsion systems:\n\n- Propulsion subsystem selection and sizing\n- Basics of rocket propulsion\n- Types of rockets\n- Component selection and sizing\n- Staging\n\nReflections on Learning Experience\nI enjoyed this lecture and found the chapter in SMAD (17) to be strong in both covering\nthe fundamentals of rocket propulsion and in providing tables with metrics on current\npropulsion systems.\n\nRocket Propellants\nThis section taken from: http://users.commkey.net/Braeunig/space/propel.htm\n\nPropellant is the chemical mixture burned to produce thrust in rockets and consists of a\nfuel and an oxidizer. A fuel is a substance which burns when combined with oxygen\nproducing gas for propulsion. An oxidizer is an agent that releases oxygen for\ncombination with a fuel. Propellants are classified according to their state - liquid, solid,\nor hybrid.\nThe gauge for rating the efficiency of rocket propellants is specific impulse, stated in\nseconds. Specific impulse indicates how many pounds (or kilograms) of thrust are\nobtained by the consumption of one pound (or kilogram) of propellant in one second.\nSpecific impulse is characteristic of the type of propellant, however, its exact value will\nvary to some extent with the operating conditions and design of the rocket engine.\nLiquid Propellants\nIn a liquid propellant rocket, the fuel and oxidizer are stored in separate tanks, and are fed\nthrough a system of pipes, valves, and turbopumps to a combustion chamber where they\nare combined and burned to produce thrust. Liquid propellant engines are more complex\nthen their solid propellant counterparts, however, they offer several advantages. By\ncontrolling the flow of propellant to the combustion chamber, the engine can be throttled,\nstopped, or restarted.\n\nA good liquid propellant is one with a high specific impulse or, stated another way, one\nwith a high speed of exhaust gas ejection. This implies a high combustion temperature\nand exhaust gases with small molecular weights. However, there is another important\nfactor which must be taken into consideration: the density of the propellant. Using low\ndensity propellants means that larger storage tanks will be required, thus increasing the\nmass of the launch vehicle. Storage temperature is also important. A propellant with a\nlow storage temperature, i.e. a cryogenic, will require thermal insulation, thus further\nincreasing the mass of the launcher. The toxicity of the propellant is likewise important.\nSafety hazards exist when handling, transporting, and storing highly toxic compounds.\nAlso, some propellants are very corrosive, however, materials that are resistant to certain\npropellants have been identified for use in rocket construction.\nLiquid propellants used by NASA and in commercial launch vehicles can be classified\ninto three types: petroleum, cryogenics, and hypergolics.\nPetroleum fuels are those refined from crude oil and are a mixture of complex\nhydrocarbons, i.e. organic compounds containing only carbon and hydrogen. The\npetroleum used as rocket fuel is kerosene, or a type of highly refined kerosene called RP-\n1 (refined petroleum). It is used in combination with liquid oxygen as the oxidizer.\nRP-1 and liquid oxygen are used as the propellant in the first-stage boosters of the\nAtlas/Centaur and Delta launch vehicles. It also powered the first-stages of the Saturn 1B\nand Saturn V rockets. RP-1 delivers a specific impulse considerably less than cryogenic\nfuels.\nCryogenic propellants are liquefied gases stored at very low temperatures, namely liquid\nhydrogen (LH2) as the fuel and liquid oxygen (LO2) as the oxidizer. LH2 remains liquid at\ntemperatures of -423 degrees F (-253 degrees C) and LO2 remains in a liquid state at\ntemperatures of -298 degrees F (-183 degrees C).\nBecause of the low temperatures of cryogenic propellants, they are difficult to store over\nlong periods of time. For this reason, they are less desirable for use in military rockets\nwhich must be kept launch ready for months at a time. Also, liquid hydrogen has a very\nlow density (0.59 pounds per gallon) and, therefore, requires a storage volume many\ntimes greater than other fuels. Despite these drawbacks, the high efficiency of liquid\nhydrogen/liquid oxygen makes these problems worth coping with when reaction time and\nstorability are not too critical. Liquid hydrogen delivers a specific impulse about 40%\nhigher than other rocket fuels.\nLiquid hydrogen and liquid oxygen are used as the propellant in the high efficiency main\nengines of the space shuttle. LH2/LO2 also powered the upper stages of the Saturn V and\nSaturn lB rockets as well as the second stage of the Atlas/Centaur launch vehicle, the\nUnited States' first LH2/LO2 rocket (1962).\nHypergolic propellants are fuels and oxidizers which ignite spontaneously on contact\nwith each other and require no ignition source. The easy start and restart capability of\nhypergolics make them ideal for spacecraft maneuvering systems. Also, since hypergolics\n\nremain liquid at normal temperatures, they do not pose the storage problems of cryogenic\npropellants. Hypergolics are highly toxic and must be handled with extreme care.\nHypergolic fuels commonly include hydrazine, monomethyl hydrazine (MMH) and\nunsymmetrical dimethyl hydrazine (UDMH). The oxidizer is typically nitrogen tetroxide\n(N2O4) or nitric acid (HNO3). UDMH is used in many Russian, European, and Chinese\nrockets while MMH is used in the orbital maneuvering system (OMS) and reaction\ncontrol system (RCS) of the Space Shuttle orbiter. The Titan family of launch vehicles\nand the second stage of the Delta use a fuel called Aerozine 50, a mixture of 50% UDMH\nand 50% hydrazine.\nHydrazine is also frequently used as a mono-propellant in catalytic decomposition\nengines . In these engines, a liquid fuel decomposes into hot gas in the presence of a\ncatalyst. The decomposition of hydrazine produces temperatures of about 1700 degrees F\nand a specific impulse of about 230 or 240 seconds.\nSolid Propellants\nSolid propellant motors are the simplest of all rocket designs. They consist of a casing,\nusually steel, filled with a mixture of solid compounds (fuel and oxidizer) which burn at a\nrapid rate, expelling hot gases from a nozzle to produce thrust. When ignited, a solid\npropellant burns from the center out towards the sides of the casing. The shape of the\ncenter channel determines the rate and pattern of the burn, thus providing a means to\ncontrol thrust. Unlike liquid propellant engines, solid propellant motors can not be shut\ndown. Once ignited, they will burn until all the propellant is exhausted.\nThere are two families of solids propellants: homogeneous and composite. Both types are\ndense, stable at ordinary temperatures, and easily storable.\nHomogeneous propellants are either simple base or double base. A simple base propellant\nconsists of a single compound, usually nitrocellulose, which has both an oxidation\ncapacity and a reduction capacity. Double base propellants usually consist of\nnitrocellulose and nitroglycerine, to which a plasticiser is added. Homogeneous\npropellants do not usually have specific impulses greater than about 210 seconds under\nnormal conditions. Their main asset is that they do not produce traceable fumes and are,\ntherefore, commonly used in tactical weapons. They are also often used to perform\nsubsidiary functions such as jettisoning spent parts or separating one stage from another.\nModern composite propellants are heterogeneous powders (mixtures) which use a\ncrystallized or finely ground mineral salt as an oxidizer, often ammonium perchlorate,\nwhich constitutes between 60% and 90% of the mass of the propellant. The fuel itself is\naluminum. The propellant is held together by a polymeric binder, usually polyurethane or\npolybutadienes. Additional compounds are sometimes included, such as a catalyst to help\nincrease the burning rate, or other agents to make the powder easier to manufacture. The\nfinal product is rubberlike substance with the consistency of a hard rubber eraser.\nSolid propellant motors have a variety of uses. Small solids often power the final stage of\na launch vehicle, or attach to payloads to boost them to higher orbits. Medium solids such\n\nas the Payload Assist Module (PAM) and the Inertial Upper Stage (IUS) provide the\nadded boost to place satellites into geosynchronous orbit or on planetary trajectories.\nThe Titan, Delta, and Space Shuttle launch vehicles use strap-on solid propellant rockets\nto provide added thrust at liftoff. The Space Shuttle uses the largest solid rocket motors\never built and flown. Each booster contains 1,100,000 pounds (499,000 kg) of propellant\nand can produce up to 3,300,000 pounds (14,680,000 Newtons) of thrust.\nHybrid Propellants\nHybrid propellant engines represent an intermediate group between solid and liquid\npropellant engines. One of the substances is solid, usually the fuel, while the other,\nusually the oxidizer, is liquid. The liquid is injected into the solid, whose fuel reservoir\nalso serves as the combustion chamber. The main advantage of such engines is that they\nhave high performance, similar to that of solid propellants, but the combustion can be\nmoderated, stopped, or even restarted. It is difficult to make use of this concept for vary\nlarge thrusts, and thus, hybrid propellant engines are rarely built.\n\nTools Developed\nThe purpose of the propulsion system module propulsion.m is to determine the mass\nof the propulsion system required to support three orbital maneuvers, characterized by\ntheir âVs. The module uses the rocket equation to determine the propellant mass\nrequired for each maneuver.\n\n(\n)\ng\nI\nV\no\np\nsp\ne\nm\nm\nâ\n-\n-\n=\n\nA check is performed to ensure that each candidate propulsion system is capable of\nperforming each of the maneuvers in a reasonable amount of time; the argument values\nused here specify that the burn time must be less than the time it takes to travel 2Â°\nthrough the current orbit. This check is necessary because the orbital transfer equations\nwere derived under the assumption of instantaneous application of âV.\n\nInputs to the propulsion module\nQuantity\nUnits\nDescription\nsc_mass\nkg\nThe mass of the spacecraft.\ndV1\nm/s\nThe magnitude of the first âV.\ndT1\ns\nThe time in which dV1 must be completed.\ndV2\nm/s\nThe magnitude of the second âV.\ndT2\ns\nThe time in which dV2 must be completed.\ndV3\nm/s\nThe magnitude of the third âV.\ndT4\ns\nThe time in which dV3 must be completed.\n\nOutputs from the propulsion module\nQuantity\nDescription\n\np_data A data structure containing information on the propulsion system\nsuch as mass and index into the propulsion database.\n\npropulsion.m\n\nfunction [varargout] = propulsion(varargin)\n%PROPULSION Sizes the propulsion system to provide a particular delta V\n%\n% [P_DATA] = PROPULSION\n% Returns the propulsion system database.\n%\n% [PROP] = PROPULSION(SC_MASS, DV1,DT1, DV2,DT2, DV3,DT3)\n% [PROP] = PROPULSION(SC_MASS, DV1,DT1, DV2,DT2, DV3,DT3, P_INDEX)\n% Determines the mass of the propulsion system, given a spacecraft initial\n% mass SC_MASS and required changes in velocity DVn in times DTn. Selects\n% the optimal propulsion system from among the choices in P_DATA, unless\n% a specific P_INDEX is specified as an argument. PROP is a structure\n% with the following fields:\n%\n% PROP\n% .P_INDEX index into the P_DATA structure\n% .MASS_TOTAL total propulsion system mass\n% .MASS_PROPELLANT propellant mass\n% .MASS_DRY propulsion system dry mass (thrusters, tanks, etc)\n% .FIRE_TIMES\nfiring times required to reach each DVn\n\ng = 9.806; % [m/s^2] gravitational acceleration at sea level\npIndex = 0;\n\n% load in all the propulsion data\npdata = propulsion_data;\n\n% check for invalid number of outputs\nif (nargout > 1)\nerror('Invalid number of output arguments');\nvarargout{1} = [];\nreturn\nend\n\n% determine which output type given the arguments\nswitch nargin\ncase 0\n% return the P databse\nvarargout{1} = pdata;\nreturn\ncase {7,8}\nsc_mass = varargin{1};\ndV(1) = varargin{2};\ndT(1) = varargin{3};\ndV(2) = varargin{4};\ndT(2) = varargin{5};\ndV(3) = varargin{6};\ndT(3) = varargin{7};\nif nargin==8\npIndex = varargin{8};\nend\notherwise\nerror('Invalid number of input arguments');\nvarargout{1} = [];\n\nreturn\nend\n\n% find the propulsion system mass\nIsps = cat(2,pdata.Isp);\nm_prop1 = sc_mass*(1-exp(-dV(1)./(Isps*g)));\nm_prop2 = sc_mass*(1-exp(-dV(2)./(Isps*g)));\nm_prop3 = sc_mass*(1-exp(-dV(3)./(Isps*g)));\nm_dry = cat(2,pdata.mass);\nm_total= m_prop1+m_prop2+m_prop3+m_dry;\n\n% make sure the maneuver can complete in the specified time\nindices = 1:length(pdata);\nfor i=1:3\ntimes = sc_mass*dV(i)./cat(2,pdata.thrust);\nindices = intersect(indices, find(times<=dT(i)));\nfire_times(i,:) = times;\nend\n\n% if the user did not specify a system, select the mass-optimal one\nif ~pIndex\n[opt_mass, pIndex] = min(m_total(indices));\nif isempty(pIndex)\nvarargout{1} = [];\nreturn\nend\npIndex = indices(pIndex);\nend\n\nprop.p_index = pIndex;\nprop.mass_total = m_total(pIndex);\nprop.mass_dry = m_dry(pIndex);\nprop.mass_propellant = [m_prop1(pIndex) m_prop2(pIndex) m_prop3(pIndex)];\nprop.fire_times = fire_times(:,pIndex);\n\nvarargout{1} = prop;\n\n%%------------------------------------------------------%%\n\nfunction [pdata] = propulsion_data\n%PROPULSION_DATA\n%\n% [P_DATA] = PROPULSION_DATA\n% Returns a data structure containing information on several\n% propulsion systems.\n%\n% Data are from http://www.asi.org/adb/04/03/09/01/ and SMAD III page 694.\n\ni=0;\ni=i+1;pdata(i)=struct('name','MR-103','company','Rocket\nResearch','thrust',0.89,'Isp',216,'fuel','hydrazine','ox','hydrazine','life',NaN,'mass',0.332);\ni=i+1;pdata(i)=struct('name','MR-104','company','Rocket\nResearch','thrust',445,'Isp',228,'fuel','hydrazine','ox','hydrazine','life',NaN,'mass',1.86);\ni=i+1;pdata(i)=struct('name','MR-106','company','Rocket\nResearch','thrust',26.7,'Isp',225,'fuel','hydrazine','ox','hydrazine','life',NaN,'mass',0.476);\ni=i+1;pdata(i)=struct('name','MR-107','company','Rocket\nResearch','thrust',178,'Isp',226,'fuel','hydrazine','ox','hydrazine','life',NaN,'mass',0.885);\ni=i+1;pdata(i)=struct('name','Dual mode liquid apogee\nengine','company','TRW','thrust',454,'Isp',314.5,'fuel','hydrazine','ox','MON','life',NaN,'mass',4.8);\ni=i+1;pdata(i)=struct('name','S400','company','DASA','thrust',9.7,'Isp',287,'fuel','MMH','ox','MON','life',NaN,'mass',0.35\n);\n\ni=i+1;pdata(i)=struct('name','Ariane\nL9','company','DASA','thrust',27500,'Isp',324,'fuel','MMH','ox','N2O4','life',NaN,'mass',111);\ni=i+1;pdata(i)=struct('name','XLR-\n132','company','Rocketdyne','thrust',16700,'Isp',340,'fuel','N2O4','ox','MMH','life',5000,'mass',51.26);\ni=i+1;pdata(i)=struct('name','Transtar','company','Aerojet','thrust',16700,'Isp',334,'fuel','N2O4','ox','MMH','life',5400,'m\nass',57.15);\ni=i+1;pdata(i)=struct('name','Transtage','company','Aerojet','thrust',35600,'Isp',315,'fuel','N2O4','ox','A-\n50','life',1000,'mass',107.95);\ni=i+1;pdata(i)=struct('name','Delta-\nII','company','Aerojet','thrust',43600,'Isp',320,'fuel','N2O4','ox','MMH','life',1200,'mass',99.79);\ni=i+1;pdata(i)=struct('name','R-\n4D','company','Marquardt','thrust',4000,'Isp',309,'fuel','N2O4','ox','MMH','life',25000,'mass',7.26);\ni=i+1;pdata(i)=struct('name','OME/UR','company','Aerojet','thrust',26700,'Isp',340,'fuel','N2O4','ox','MMH','life',1200,'\nmass',90.72);\ni=i+1;pdata(i)=struct('name','RL10-A','company','Pratt &\nWhitney','thrust',73400,'Isp',446,'fuel','LO2','ox','LH2','life',400,'mass',138.35);\ni=i+1;pdata(i)=struct('name','DM/LAE','company','TRW','thrust',445,'Isp',302,'fuel','N2O4','ox','MMH','life',20000,'mas\ns',5.22);\ni=i+1;pdata(i)=struct('name','R-\n4D','company','Marquardt','thrust',489,'Isp',310,'fuel','N2O4','ox','MMH','life',20000,'mass',3.76);\ni=i+1;pdata(i)=struct('name','R-42','company','Marquardt','thrust',890,'Isp',305,'fuel','MON-\n3','ox','MMH','life',20000,'mass',4.54);\ni=i+1;pdata(i)=struct('name','MMBPS','company','TRW','thrust',445,'Isp',302,'fuel','N2O4','ox','MMH','life',20000,'mass'\n,5.22);\ni=i+1;pdata(i)=struct('name','RS-\n41','company','Rocketdyne','thrust',11100,'Isp',312,'fuel','N2O4','ox','MMH','life',2000,'mass',113.40);\ni=i+1;pdata(i)=struct('name','ADLAE','company','TRW','thrust',445,'Isp',330,'fuel','N2O4','ox','MMH','life',28000,'mass'\n,4.5);\ni=i+1;pdata(i)=struct('name','HS601','company','ARC/LPG','thrust',489,'Isp',312,'fuel','N2O4','ox','MMH','life',10000,'m\nass',4.08);\ni=i+1;pdata(i)=struct('name','R-\n40A','company','Marquardt','thrust',4000,'Isp',309,'fuel','N2O4','ox','MMH','life',25000,'mass',7.26);\ni=i+1;pdata(i)=struct('name','HPLAM','company','TRW','thrust',445,'Isp',325,'fuel','N2O4','ox','MMH','life',30000,'mass'\n,4.6);\n\n% there are also electric propulsion systems, but these are beyond the scope of this project\n% i=i+1;pdata(i)=struct('name','MR-508 Arcjet','company','Rocket\nResearch','thrust',0.21,'Isp',502,'fuel','hydrazine','ox','','life',NaN,'mass',1.338);\n\nUseful References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\nBraeunig, David A. Rocket and Space Technology.\nhttp://users.commkey.net/Braeunig/space/propel.htm (21 November 2003).\nThe Artemis Project, http://www.asi.org/adb/04/03/09/01/, 13 Nov 2003.\n\n6. Space Environment\nA spacecraft around Earth orbit is irradiated by many types of radiations, including\ntrapped radiation, solar particle events, and Galactic cosmic rays. In particular, the\ntrapped radiation of the Van Allen radiation belts is problematic to Earth orbiting\nsatellites' solar arrays performance.\nLearning Objectives\n- Overview of effects: Outgassing in near vacuum, Atmospheric drag, Chemical\nreactions, Plasma-induced charging, Radiation damage of microcircuits, solar\narrays, and sensors, Single event upsets in digital devices, Hyper-velocity impacts\n- Solar Cycle\n- Gravity\n- Neutral Atmosphere\n- Ionosphere\n- Geomagnetic Field\n- Plasma\n- Radiation\n\nReflections on Learning Experience\nMy third problem set on characterizing the degradation of a solar array given orbit\nposition was a good opportunity to study the near-Earth space environment. I found\nlecture fascinating on this subject and am glad it was broken into two parts. I did not\ndelve into the hardness and survivability issues as much as I would have liked--\nparticularly the issue of reducing satellite vulnerability to nuclear weapon effects.\n\nTools Developed\n% Predicting Solar Cell Degradation as a Function of Radiation\n% 16.851 Problem Set #3\n\n% This module performs two tasks\n% 1. Model power loss of GaAs/Ge cells following proton irradiation\n% 2. Model power loss of n/p Si cells following electron irradiation\n\n% Define Constants\nP_o = 1\nC = .1295\nD_x = 1.295*10^9\n\n% Input Dose of Protons\nD = [10^7 10^7.5 10^8 10^8.5 10^9 10^9.5 10^10 10^10.5 10^11 10^11.5 10^12] % MeV/g\n\n% Calculate Characteristic Curve For Proton Damage of GaAs/Ge cells\nP_max = (1-C*log(1+D./D_x)).*P_o\n\n% Graph P_max / P_o, the normalized maximum power of GaAs/Ge cells as a function of absorbed proton dose\nfigure\nsemilogx(D, P_max, '-');\n\ntitle('Power loss of GaAs/Ge cells following proton irradiation as a function of absorbed dose')\nxlabel('Absorbed dose (MeV/g)')\nylabel('P_max / P_o')\nAXIS([10^7 10^12 .4 1])\nhold\n\n% Electron induced damage\n% Overall equation: D_eff = D * (S_e(E) / S_e(1.0))^(n-1)\n\n% Defining variables\nD_eff = 1.0; % Measured in MeV\n\n% Experimentally determined exponents\n% n=1 for n-type silicon\n% n=2 for p-type silicon, GaAs, and InP\n\n% Calculate Characteristic Curve For Electron Damage of n/p Si cells\nP_o = 1\nC = 0.06593\nD_x = 1.841*10^8\nP_max = (1-C*log(1+D./D_x)).*P_o\n\n% Input Dose of Electrons\nD = [10^7 10^7.5 10^8 10^8.5 10^9 10^9.5 10^10 10^10.5 10^11 10^11.5 10^12]\n% MeV/g\n\n% Graph P_max / P_o, the normalized maximum power of n/p Si cells as a function of absorbed electron dose\nfigure\nsemilogx(D, P_max, '-');\ntitle('Power loss of n/p Si cells following electron irradiation as a function of absorbed dose')\nxlabel('Absorbed dose (MeV/g)')\nylabel('P_max / P_o')\nAXIS([10^7 10^12 .4 1])\nHold\n\nUseful References\nN. A. Tsyganenko, A. V. Usmanov, Determination of the Magnetospheric Current\nSystem Parameters and Development of Experimental Geomagnetic Field Models Based\non Data from IMP and HEOS Satellites, Planet. Space Sci. 30, 985-998, 1982.\nhttp://nssdc.gsfc.nasa.gov/space/model/\nAllen, Douglas M. \"A survey of next generation solar arrays (for spacecraft electric\npower).\" W. J. Schafer Associates. AIAA, 1997.\n\nAnspaugh, Bruce E. \"Proton and Electron Damage Coefficients for GaAs/Ge Solar Cells.\nJet Propulsion Laboratory. IEEE, 1991.\n\nGaddy, Edward M. \"Relative cost effectiveness of multi-junction, gallium arsenide, and\nsilicon solar cells.\" NASA Goddard Space Flight Center. AIAA, 1996.\n\nGardner, B. M. \"A Tool for Assessing Photovoltaic Array End-of-Life Power\nPerformance.\" NASA Lewis Research Center. AIAA, 1997.\n\nKerslake, Thomas W. \"Solar Power System Options for the Radiation and Technology\nDemonstration Spacecraft.\" NASA Glenn Research Center. AIAA, 2000.\n\nLandis, Geoffrey A. \"Photovoltaic Power for Future NASA Missions.\" NASA John\nGlenn Research Center. AIAA, 2002.\n\nRalph, E. \"Solar Cell Array System Trades - Present and Future.\" TECSTAR/ASD.\nAIAA, 1999.\n\n\"Research on Radiation Damage Mechanisms of Si Solar Cell.\" NASDA Office of\nResearch and Development. No. 73, July 1998. http://www.nasda.go.jp/lib/nasda-\nnews/1998/07/solar_e.html (5 October 2003).\n\nSharps, P. R. \"High Efficiency Advanced Triple-Junction Space Solar Cell Production at\nEmcore Photovoltaics.\" Emcore Photovoltaics. AIAA, 2003.\n\n\"Solar Radiation Handbook.\" Jet Propulsion Laboratory. Third Edition, 1982.\nSummers, Geoffrey P. \"A General Method for Predicting Radiation Damage to Solar\nCells in the Space Environment.\" Naval Research Laboratory. IEEE, 1991.\nSummers, Geoffrey P. \"A New Approach To Damage Prediction For Solar Cells Exposed\nTo Different Radiations.\" Naval Research Laboratory. IEEE, 1994.\nVisentine, J. \"MIR Solar Array Return Experiment.\" Boeing Space Station Program\nOffice. AIAA, 1999.\n\n7. Optics\nLightweight infrared optical systems technologies will enable future NASA missions\nincluding earth observation and remote sensing systems, satellite-to-satellite\ncommunications systems, aircraft-borne LIDAR (light detection and ranging) systems for\ndetection of wind shear and military surveillance and early warning systems.\n\nLearning Objectives\nThe goal of the optics lecture was to provide the necessary optics background to tackle a\nspace mission, which includes an optical payload. Topics covered in the lecture notes\ninclude:\n\n- Light\n- Interaction of Light w/ environment\n- Optical design fundamentals\n- Optical performance considerations\n- Telescope types and CCD design\n- Interferometer types\n- Sparse aperture array\n- Beam combining and Control\n- ARGOS overview\n\nReflections on Learning Experience\nSMAD offers a strong introduction to basic telescope optics. Our lecture on this subject\nwas a fast-paced overview of the fundamentals, proposed future missions, and ARGOS. I\nwas intrigued by the Michelson and Fizeau interferometer missions.\n\nThermal-Optical Interaction\nOne of the key performance drivers of infrared systems is temperature. CCD (charge-\ncoupled devices) detectors perform best when they are cool. At ordinary temperatures,\nthe signal output of a photon detector is swamped by the background noise. This is due\nto random generation and recombination of carriers in the semiconductor. Cooling is\nessential for maintaining a signal-to-noise ratio that permits useful observations for\ninfrared instruments. We need to avoid any contribution to instrumental noise by the\ntelescope.\n\nThere are a variety of methods to cool detectors in flight. The method of cooling chosen\nfor a space system depends on the operating temperature and the system's logistical\nrequirements. Passive-cooling methods such as mounting detectors to a thermally\nconductive metal part that thermally connects to a radiator facing deep space is an easy\nway to maintain detector temperatures around 50 K. Thermal shields are also used to\nprotect instruments from sunlight, and even earthlight and moonlight. Active cooling\n\ntechniques, such as cryogenic coolers or Adiabatic Demagnetization Refrigerators, are\noften necessary to deal with higher heat loads.\n\nSample Infrared Imagers\nThe Space Infrared Telescope Facility (SIRTF)--which was\nrecently launched from Cape Canaveral, Florida on 25 August\n2003--is designed to obtain IR images and spectra by detecting\nwavelengths of 3 and 180 microns during its 2.5 year mission.\nSIRTF is the largest infrared telescope ever launched into space and\nit needs to be cooled to near absolute zero (5.5K). In addition to\nprotection from its own heat, the telescope also must be protected\nfrom the heat of the Sun and the infrared radiation put out by the\nEarth.\nThe Near Infrared Camera (NIRCam) is to be the primary James Webb Space Telescope\n(JWST) imager operating over the wavelength range of 0.6 to 5 microns at a temperature\nof 50K. The NIRCam is designed for detection of the early phases of star and galaxy\nformation such as detection of distant supernovae and mapping dark matter through\ngravitational lensing. The camera consists of two broad-band and intermediate-band\nimaging modules and two tunable filter imaging modules, each with a 2.3 x 2.3 arcmin\nfield of view. The short wavelength channels and the long wavelength channels are to be\nsampled at 4096 x 4096 pixels and 2048 x 2048 pixels, respectively. One tunable filter\nmodule is optimized for wavelengths from about 1.2 to 2.5 microns, the other from 2.5 to\n4.5 microns.\nHubble's Near Infrared Camera and Multi-Object Spectrometer (NICMOS) provides\nimaging capabilities in the broad, medium, and narrow band filters, broad-band imaging\npolarimetry, coronographic imaging, and slitless grism spectroscopy. It covers the\nwavelength range of 0.8-2.5 microns and has a current temperature requirement of 77.1K.\nNICMOS has three adjacent cameras designed to operate independently. Each has a\ndedicated array at a different magnification scale.\n\nUseful References\nLarson, W.J., Wertz, J.R., \"Space Mission Analysis and Design\", Second Edition, 9.5\nDesigning Visual and IR Payloads, pp.. 249-274, Microcosm, Inc,1992\n\nBorn Max, Wolf Emil, \"Principles of Optics\", Electromagnetic Theory of propagation\ninterference and diffraction of light, Sixth Edition, Cambridge University Press, 1998\n\nHecht E. \"Optics\", Addison-Wesley, 1987\n\nGunter Diethmar Roth, \"Compendium of Practical Astronomy\", Volume 1,\nInstrumentation and Reduction Techniques, Springer Verlag, Berlin, New York, ISBN 3-\n540-56273-7, 1994\n\n8. Attitude Control Systems\nThe purpose of the attitude determination and control system is to stabilize the spacecraft\nand orient it during mission operations. It compensates for external torques acting on the\nvehicle. Attitude is determined using sensors (GPS, star trackers, limb sensors, rate\ngyros, inertial measurement units) and controlled using actuators (Reaction Wheel\nAssemblies, Control Moment Gyros, magnetic torque rods, thrusters).\n\nLearning Objectives\nAs defined in the lecture notes, the learning objectives are to understand:\n\n- Coordinate Systems and Mathematical Attitude Representations\n- Rigid Body Dynamics\n- Disturbance Torques in Space\n- Passive Attitude Control Schemes\n- Actuators\n- Sensors\n- Active Attitude Control Concepts\n- ADCS Performance and Stability Measures\n- Estimation and Filtering in Attitude Determination\n- Maneuvers\n- Other System Consideration, Control/ Structure interaction\n- Technological Trends and Advanced Concepts\n\nReflections on Learning Experience\nI did not trade this subsystem in any of the problem sets so my learning experience is\nrestricted to reading section 11.1 in SMAD and the material covered in class. I\nunderstand the concepts behind the passive and active attitude control schemes and the\ndifferences in their performance, but did not absorb some of the math theory covered in\nthe fast-paced lecture. In the future, I would like to explore the implications of satellite\nservicing on the attitude control systems of two interacting satellites.\n\nExcerpts from Lecture\n\nUseful References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\nFundamentals of Space Systems, Pisacane and Moore, Oxford, 1994.\nSmith, J. L. Low-Cost Attitude Determination and Control for Small Satellites.\nhttp://www.sdl.usu.edu/conferences/smallsat/proceedings/10/sess10/alowcost.pdf\nSpace Systems Engineering, Fortesque and Stark, John Wiley and Sons, 1995.\n\n9. Electromagnetic Formation Flight\nThe traditional use of propellant as a reaction mass has the advantages of a mobile\nspacecraft center of gravity and independent control of each spacecraft. However,\ndisadvantages include the fact that propellant is a limited resource and that propellant can\ncontaminate precision optics. Electromagnetic Formation Flight provides the opportunity\nfor propellant-less control (excluding absolute position of the center of mass of a cluster\nof spacecraft) for image construction, Earth coverage, disturbance rejection, and docking\nmissions.\n\nLearning Objectives\n- Fundamental Principles\nGoverning Equations\nTrajectory Mechanics\nStability and Control\n- Mission Applicability\nSparse Arrays\nFilled Apertures\nOther Proximity Operations\n- Mission Analyses\nSparse Arrays\nFilled Apertures\nOther Proximity Operations\n- MIT EMFFORCE Testbed\nDesign\nCalibration\nMovie\n- Space Hardware Design Issues\nThermal Control\nPower System Design\nHigh B- Field Effects\n\nReflections on Learning Experience\nThis was a fascinating subject, especially given the ongoing research at MIT SSL in this\narea. Prior to coverage of EMFF in lecture, I was not aware of its potential to provide\nlonger satellite mission lifetime and to reduce contamination and degradation.\n\nExcerpts from Lecture\n\nUseful References\nCDIO Project: http://cdio-prime.mit.edu/CDIO3/\n\nCDIO Progress Report:\nhttp://cdio-prime.mit.edu/CDIO3/NRO_REPORTS/NRO3_200206.pdf\n\n10. Spacecraft Computers and Software\nAs stated in the lecture notes, \"spacecraft systems and their software provide\nunprecedented capability on orbit, but drive system cost and complexity.\" Computer\nsystems in space are similar to desktop applications, but require low power, low volume,\nlow mass, and high reliability and fault tolerance.\n\nLearning Objectives\nTopics covered in lecture on spacecraft computers include:\n- Definitions\n- Computer system specification\n- Estimating throughput and processor speed requirements\n- Computer selection\n- Memory\n- Mass storage\n- Input/ouput\n- Radiation hardness\n- Fault tolerance\n- Error detection and correction\n- Integration and test\n\nTopics on space systems software:\n- Types of software\n- Computer resource estimation\n- Functional partitioning\n- Software maintenance and life-cycle support\n- Costing (I think we decided that this was impossible)\n\nReflections on Learning Experience\nSMAD and lecture were both good introductions to these topics. Coming in to the class,\nthe only course I had taken on computers and software was 16.070, and I appreciated the\ncoverage of the fundamentals. I did not develop any MATLAB modules nor did I review\nany problems sets that dealt with these subsystems.\n\nUseful References\nHistory of Computers on NASA Space Missions:\nhttp://www.hq.nasa.gov/office/pao/History/computers/Part1.html\n\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\nFundamentals of Space Systems, Pisacane and Moore, Oxford, 1994\n\n11. Thermal System\nThe thermal subsystem maintains operational or survival temperatures for all parts of the\nspacecraft during all mission phases. Temperature control is critical for batteries,\nhydrazine propulsion equipment, pointing structures (to minimize differential thermal\nexpansion), and electronic components. Typically, the thermal control subsystem\naccounts for 2-5% of the spacecraft cost and dry weight.\nLearning Objectives\n- Principles of Heat Transfer, including convection, conduction, radiation\n- Thermal Control Components (materials and components, optical solar reflectors,\nsilver-coated Teflon, multiplayer insulation, electrical heaters, thermostats...)\n- Thermal Subsystem Design\n- Thermal Analysis Components (equilibrium temperature, temperature of insulated\nsurfaces in space, solar array/flat plate analysis...)\n- Development of new thermal control materials having resistance to extreme\ntemperatures and controlled outgassing behavior\n\nReflections on Learning Experience\nI found thermal to be one of the more difficult subsystems covered, especially in the\ndevelopment of modules trading parameters with other subsystems. SMAD Chapter 11.5\non the thermal subsystem offered a good introduction to the principles of thermal control\nbut little in the way of tables or design approaches useful for module development. In\nproblem set two we traded optical temperature parameters with various passive and active\ncooling techniques.\nTools Developed\nThe list of inputs to our thermal model includes the following:\n\n-\nemissivity and absorptivity of all entity surfaces\n-\narea of these surfaces\n-\ngeometrical factors: view factors and area fractions\n-\ntemperature of the sunshield and the satellite core\n-\ncooling power and minimum reachable temperature of the cryocooler\n-\nthermal resistance of the different conductive paths.\n\nThe outputs are the different temperatures of the entities, and the radiative and conductive\nfluxes from and to each spacecraft entity. Excerpts from the Excel thermal model:\n\nRadiative Characteristics\n\neps2Emissivity\n(Black paint)\n0.874\nalpha2Absorptivity\n\n0.975\nAbsorptivity/Emissivity ratio\nalpha2/eps2\n1.115560641\nrho2Reflectivity\n1-alpha2\n0.025\n\nGeometry Factors\n\nA2Area (m2)\n\nView Factors (VIEW FROM SHIELD)\n\nf20Uncoated optical device\nf20\n0.114\nf21Coated optical device\nf21\n0.1425\nf22Thermal shield\n\n0.5\nf24Radiator\n\nf25Other parts of the spacecraft (including cryocooler)\n\nSpecial Factors\n\nxA27Fraction of device in the sunlight\n\nxA26Fraction of device in view of outer space\nxA28Fraction of device in view of Earth\n\nView Factors (VIEW FROM OUT THERE)\n\nf02Uncoated optical device\nf20*A2/A0\n0.8\nf12Coated optical device\nf21*A2/A1\nf22Thermal shield\nf22\n0.5\nf42Radiator\nf24*A2/A4\nf52Other parts of the spacecraft (including\ncryocooler)\nf25*A2/A5\n\nSome Incident Radiative Fluxes\nPer Unit Area Of Shield (W/m2)\n\nphi62From outer space\nphi60\n4.5927E-06\nphi72From Sun\nphi70\nphi82From Earth\nphi80\n754.3\n\nIncident Radiative Fluxes (W)\n\nPHI02From uncoated optical device\nf02*PHI0x\n0.014918897\nPHI12From coated optical device\nf12*PHI1x\n0.023307504\nPHI22From thermal shield\nf22*PHI2x\n0.081780715\nPHI42Radiator\nf42*PHI4x\nPHI52From other parts of the spacecraft\n(including cryocooler)\nf52*PHI5x\nPHI62From outer space\nphi62*A2*xA26\n1.83708E-05\nPHI72From Sun\nphi72*A2*xA27\nPHI82From Earth\nphi82*A2*xA28\nPHIx2Sum of the incoming radiative fluxes\n\n0.120025486\n\nTemperature (oC)\n\n306.15\nT2Temperature (K)\n\nOutgoing Fluxes (W)\n\nOutgoing Radiative Fluxes\n\nPHI_E2xEmitted radiation flux (W)\nA2*eps2*sigma*\nT2^4\n0.160560792\nPHI_R2xReflected flux (W)\nrho2*PHIx2\n0.003000637\nPHI2xSum of outgoing radiative fluxes\n\n0.16356143\n\nUseful References\nhttp://cryowwwebber.gsfc.nasa.gov/ADR/ADR.html\nhttp://eo1.gsfc.nasa.gov/miscPages/TechForumReports/CCR-2.pdf\nhttp://ircamera.as.arizona.edu/nircam/features.html\nhttp://sirtf.caltech.edu/about/index.shtml\nhttp://techreports.larc.nasa.gov/ltrs/PDF/1998/mtg/NASA-98-13asc-wlv.pdf\nhttp://www.astrium-space.com/corp/prod/index.htm\nhttp://www.cme.rl.ac.uk/cryo/cooler.htm\nhttp://www.emsstg.com/pdf/sunshield.pdf\nhttp://www.enae.umd.edu/ASC/abstracts/abs146.pdf\nhttp://www.engin.umich.edu/class/ae483/Lander/Power_Thermal/FINALPowerThermalReport.doc\nhttp://www.estec.esa.nl/thermal/cryo2a.html\nhttp://www.estec.esa.nl/thermal/cryo2b.html\nhttp://www.ilcdover.com/SpaceInf/SunShields/ngst.htm\nhttp://www.ilcdover.com/SpaceInf/SunShields/skylab.htm\nhttp://www.ilcdover.com/WebDocs/isis.pdf\nhttp://www.jpl.nasa.gov/adv_tech/coolers/Cool_ppr/C11-tes.pdf\nhttp://www.jpl.nasa.gov/adv_tech/coolers/Cool_ppr/C12-ovr.pdf\nhttp://www.lgarde.com/people/papers/highpower.pdf\nhttp://www.mssl.ucl.ac.uk/~lbcw/epsrcdadr/epsrcdadr2.htm\nhttp://www.ngst.nasa.gov/public/unconfigured/doc_1008/rev_01/NGST-ARTL-001944.PDF\nhttp://www.space.com/businesstechnology/technology/webb_ngst_030108.html\nhttp://www.starsys.com/catalog/pdf/src_103.pdf\nhttp://www.starsys.com/catalog/pdf/src_105.pdf\nhttp://www.sunpower.com/products/index.html\nhttp://www.sunpower.com/products/m77_gs.html\nhttp://www.swift.psu.edu/xrt/Documents/XRT-GSFC-004.pdf\nhttp://www.tsgc.utexas.edu/archive/subsystems/thermal.pdf\n\nhttp://www-glast.slac.stanford.edu/MechanicalSystems/Meetings&Talks/I-\nPDR/PublishedIPDRDocs/LAT-TD-00330-2(RadPDRDesignReport).pdf\n\n12. Communications, Telemetry, Tracking, & Command\nThe telemetry, tracking, and command subsystem provides the interface between the\nspacecraft and the ground systems, including carrier tracking, command reception and\ndetection, telemetry modulation and transmission, ranging, and subsystem operations. A\ncommunications architecture is the arrangement of satellites and ground stations and the\ncommunications links that transfer information between them.\n\nLearning Objectives\nAs outlined in lecture, the learning objectives of this section include understanding:\n\n- Communication terminology (i.e. uplink, downlink, crosslink, relays)\n- Communication architecture as defined by satellite-ground geometry, including\nstore & forward, geostationary, and Molniya\n- Communication selection criteria\no Orbit\no RF spectrum\no Data rate\no Duty factor\no Link availability\no Link access time\no Threat\n- Link design process\n- Modulation, bit error rate, and coding\n\nReflections on Learning Experience\nChapter 13 in SMAD on communications offers a lengthy introduction to this subsystem\nwith plenty of equations for implementation in MATLAB functions. I thought that this\nlecture had a good balance between breadth and detail, with interesting case studies of\nSATCOM and Milstar. I found communications an easy subsystem to pass parameters to\nand from--but not necessarily a good choice for the problem sets. In the one problem I\nworked on this term involving communications, it did not seem to have a significant\nimpact on the other subsystems.\n\nTools Developed\nA MATLAB program has been designed to solve the proposed problem. The tool flow is\nas follows:\n\n- The orbit is found so that the satellite passes through perigee over the ground site\nonce each sidereal day.\n- STK is opened, and a scenario is set up with the ground site and satellite. STK\nreturns data indicating how long each pass used for ground communication is, and\nhow long the satellite is in eclipse each orbit.\n\n- The amount of data that can be transmitted to the ground each pass is determined,\nas well as the power needed for each transmission.\n- The solar arrays are designed and a battery is chosen. Each of these parts of the\ntool will be described in detail in this section.\n\nOrbit Model\nThe orbit is determined using the ground site latitude and longitude, the altitude of the\nsatellite at perigee, and the time the satellite is first at perigee. The following\nassumptions and decisions are made:\n\n- The earth is circular with radius = 6378.137 km\n- Site elevation is not significant enough to use\n- A nearly circular orbit is desirable, so eccentricity will be minimized\n- Inclination will be set to 5 degrees above the value of the site latitude; for site\nlatitude over 85 degrees, it will be set to 90\n\nFirst the radius of perigee rp is found by adding the radius of the earth to the altitude of\nperigee. Next, the initial eccentricity ei is set to 0.01, for a nearly circular orbit. Using\neccentricity and the radius of perigee, an initial value for the orbit's semi-major axis ai\nand period pi can be found (Î¼ is the earth's gravitational constant in the correct units):\n\nai = rp/(1.0 - ei) [km]\npi = 2 Ã° *sqrt(ai 3 /Î¼) [minutes]\n\nHowever, the orbit must be a repeating ground track, which requires that the period p be\nequal to an integer number of sidereal days divided by an integer number of revolutions.\nThe number of revolutions using the initial period is found:\n\nnrevs = (1436.068167 minutes)/pi\n\nThe number of revolutions is rounded down to an integer, and the final period, semi-\nmajor axis, and eccentricity is found. The eccentricity will always be larger than 0.01, but\nit will be small. For the satellite to pass over the ground site, inclination i can be in the\nrange:\n\nsite_latitude <= i <= 180 deg - site_latitude\n\nAs mentioned, inclination is arbitrarily chosen to be site_latitude + 5 degrees. The\nargument of perigee u and longitude of ascending node Â§U are found so that the satellite\nwill be at perigee over the site at the desired starting time. Argument of perigee is found\nby the equation:\n\nu = asin(sin(site_latitude)/sin(i)) [deg]\n\nLongitude of ascending node is found by the following series of equations:\n\ntemp1 = asin(cos(i)/cos(site_latitude)) [deg]\ntemp2 = acos(cos(temp1)/sin(i)) [deg]\nÂ§U = gst + site_longitude - temp2; [deg]\n\nWhere gst is Greenwich sidereal time, found from the starting time (see MATLAB\nfunction find_gst).\n\nSTK\nThe orbit found is entered into STK by connecting through MATLAB and setting up a\nnew scenario (see MATLAB function run_stk). The ground site is also added to the STK\nscenario as a facility. STK can return reports detailing scenario behavior for a given time\ninterval. STK is used in this tool to return a report indicating the length of time the\nsatellite is in eclipse each orbit, and to find all of the time periods the satellite has line-of-\nsight access to the ground site.\n\nIdeally, the STK scenario should be run for the entire lifetime of the satellite, and\naverages taken over this time period. However, connecting to STK through MATLAB is\nslow, and STK is slow in doing calculations needed for the reports. Averaging over a 5 or\neven 1 year life time would make each individual run very slow, and repeated runs for\ntrending would not have been possible. To solve this problem, averages are taken over a\nmuch smaller period. While it is acknowledged that this will not provide the most\naccurate answer, particularly with eclipse times since those may vary over the course of a\nyear, it was decided that this method would be sufficient for the scope of this project.\n\nThe scenario is set to run for 12 days. For ground access times, the first and last days are\neliminated, since the passes on each of those days will be partial (since the satellite is at\nperigee at the beginning of the scenario). Note that a sidereal day is nearly 4 minutes\nshorter than a calendar day. This will cause the pass over the ground site to occur\napproximately 4 minutes earlier each day. STK reports the eclipse time for each orbit\nover the 12 days. The first and last eclipse times are thrown out since they may reflect\npartial eclipses. The remaining values are used and an average is taken.\n\nRun_stk.m\n\nfunction [eclipse, pass_time] = run_stk(orbit, site_lat, site_lon, date)\n% opens stk, sets up the orbit and the ground site\n% runs scenario\n% finds average time craft is in eclipse each orbit\n% finds average time of each pass over ground site (average of closest pass\n% each day)\n% INPUTS\n% orbit: [semi-major axis (km), eccentricity, i (degrees), w (degrees), ascending node (degrees)]\n% site_lat: site latitude in degrees\n% site_lon: site longitude in degrees\n% date: start date of orbit (time of first perigee)\n% [year, month, day, hour, minute]\n% OUTPUTS\n% eclipse: average time each orbit craft is in eclipse, in minutes\n% pass_time: average time of the longest pass each day, in minutes\ndisp('Connecting to STK...');\n\nyear = date(1);\nday = date(3);\nhour = date(4);\nmin = date(5);\n% initialize connection to STK, if this has not yet been done\nstkinit;\n% use the default connection data for connecting to STK\n% port should be 5001, hostname 'localhost': this setup is what STK\n% recommends and guides you to do when STK and Matlab are on the same\n% machine\nremMachine = stkDefaultHost;\n%open the connection to STK\nconid=stkOpen(remMachine);\n% first check to see if a scenario is open\n% if there is, close it\nscen_open = stkValidScen;\nif scen_open == 1\nstkUnload('/*')\nend\n% set up scenario\ncmd = 'New / Scenario ground_comm';\nstkExec(conid, cmd);\n% put the satellite in the scenario\ncmd = 'New / */Satellite sat1';\nstkExec(conid, cmd);\n% put the ground site in the scenario\ncmd = 'New / */Facility ground_site';\nstkExec(conid, cmd);\nif(date(2) == 1)\nmonth = 'Jan';\nelseif(date(2) == 2)\nmonth = 'Feb';\nelseif(date(2) == 3)\nmonth = 'Mar';\nelseif(date(2) == 4)\nmonth = 'Apr';\nelseif(date(2) == 5)\nmonth = 'May';\nelseif(date(2) == 6)\nmonth = 'June';\nelseif(date(2) == 7)\nmonth = 'July';\nelseif(date(2) == 8)\nmonth = 'Aug';\nelseif(date(2) == 9)\nmonth = 'Sept';\nelseif(date(2) == 10)\nmonth = 'Oct';\nelseif(date(2) == 11)\nmonth = 'Nov';\nelseif(date(2) == 12)\nmonth = 'Dec';\nelse\ndisp('invalid date, month must be 1 through 12');\nend\nstartDate = ['\"', num2str(day), ' ', month, ' ', num2str(year), ' ', num2str(hour), ':', num2str(min), ':00.0\"'];\nstopDay = day + 12;\nstopDate = ['\"', num2str(stopDay), ' ', month ' ', num2str(year), ' ', num2str(hour), ':', num2str(min) ':00.0\"'];\nepochDate = startDate;\n% set the scenario epoch\ncmd = 'SetUnits / km sec GregUTC';\nstkExec(conid, cmd);\n\ncmd = ['SetEpoch * ' epochDate];\nstkExec(conid, cmd);\nstkSyncEpoch;\n% set the time period for the scenario\nstkSetTimePeriod(startDate, stopDate, 'GREGUTC');\n% set the animation parameters\ntmp = ['SetValues ', startDate, ' 60 0.1'];\nrtn = stkConnect(conid,'Animate','Scenario/ground_comm',tmp);\nrtn = stkConnect(conid,'Animate','Scenario/ground_comm','Reset');\n% set orbit elements\ncmd = ['SetState */Satellite/sat1 Classical TwoBody ' startDate, ' ', stopDate, ' 60 J2000 ', epochDate, ' ',\nnum2str(orbit(1)), ' ', ...\nnum2str(orbit(2)), ' ', num2str(orbit(3)), ' ', num2str(orbit(4)), ' ', num2str(orbit(5)), ' 0.0'];\nstkExec(conid, cmd);\n% set ground site position\ncmd = ['SetPosition */Facility/ground_site Geocentric ', num2str(site_lat), ' ', num2str(site_lon), ' 0.0'];\nstkExec(conid, cmd);\n% get access data, satellite to ground site\nintervals = stkAccess('*/Satellite/sat1', '*/Facility/ground_site');\n[n,m] = size(intervals);\n% loop through access data, eliminating first partial day and last partial day,\n% find the pass overhead - at perigee, the repeating pass once a sidereal\n% day - that we want to use\n% length of sidereal day in minutes\nsid_day = 1436.068167;\nperigee_pass = zeros(1,10);\nfor(j=1:10)\nfor(i=1:n)\nstart_min = intervals(i).start/60;\nstop_min = intervals(i).stop/60;\nif(start_min < j*sid_day && stop_min > j*sid_day)\nperigee_pass(1,j) = stop_min - start_min;\nend\nend\nend\n% get average pass length\npass_time = mean(perigee_pass);\n% find average eclipse time\n[data, names] = stkReport('*/Satellite/sat1', 'Eclipse Times');\nall_times = stkFindData(data{1}, 'Total Duration');\necl_numbers = stkFindData(data{1}, 'Start Pass Number');\n% for some reason ecl_numbers is not numeric, and won't convert right as an\n% array, so convert one at a time\nfor(i=1:length(ecl_numbers))\necl_n(i) = str2num(ecl_numbers(i,:));\nend\n% the eclipse report lists several lines of data for each eclipse; the\n% total duration values are repeated, but we don't want duplicates - find\n% uniques; i are the indices we want\n[b, i, j] = unique(ecl_n);\nunique_times = all_times(i);\n% remove first and last times, in case they are partial eclipse values\n% average the rest\nlen = length(unique_times);\neclipse = mean(unique_times(2:len-1))/60;\nstkClose(conid);\n\nTelecommunications Model\nNext the power needed for each transmission can be found, as well as the amount of data\nthat can be transmitted each pass (see MATLAB function transmitter). The following\nassumptions were made:\n\n- The ground station's antenna has a diameter of 5 meters\n- Each pass that should result in a transmission will be successful\n- The time needed to initialize a transmission is two minutes\n\nThe power needed was found from figure 13-5 in SMAD. Since the tool is only designed\nfor low-earth orbits, the line indicating 'Earth coverage case' with a 5 meter ground\nantenna was used. From visual examination of this graph, the power needed is\napproximately equal to 10 times the data rate in Mbps:\n\nPtrans = 10*(data_rate [Mbps]) [W]\n\nFor finding total data sent each pass, equation X.X from SMAD was used:\n\nData_Sent = data_rate*(F*Topass - Tinit)/M [bits]\n\nM represents how often transmissions are successful. Because of assumption (2) above,\nand because the amount of data sent on each successful transmission is what we want to\ncalculate, M can be set to 1. Tinit is the time needed to initialize each transmission, and\nhas been set to 2 minutes, which is a typical value according to SMAD. Topass is the time\na pass directly over the ground site has line-of-sight access, and F alters this to account\nfor passes that are not directly overhead. Since this tool is only using passes that are\ndirectly overhead, and STK calculates the line-of-sight time taking any slight variation\ninto account, the pass time found by the STK module (Tpass) replaces this term. So the\nequation reduces to:\n\nData_Sent = data_rate*(Tpass - Tinit) [bits]\n\ntransmitter.m\n\nfunction [data_sent, power] = transmitter(dr, pass_time)\n% INPUTS\n% dr: data rate of data transmitted from spacecraft to groundsite, in bps\n% pass_time: average time of each spacecraft pass where downlink is made (minutes)\n% OUTPUTS\n% data_sent: average amount of data that can be sent each pass (bits)\n% power: power needed for each tranmission (W)\n% From figure 13-5 from SMAD\n% power for different data rates\n% for the ground station diameter of 5 meters, the plot indicates that\n% power is equal to approximately 10x the data rate, in Mbps\npower = 10*(dr/10e5);\n% total data sent on each pass (on average)\ndata_sent = dr*(pass_time*60 - 2*60);\n\ndisp('Power needed for data transmission (W): ');\ndisp(power);\ndisp('Bits of data sent each transmission: ');\ndisp(data_sent);\n\nUseful References\nWertz and Larson, Space Mission Analysis and Design, Third Edition, El Segundo:\nMicrocosm Press, 1999.\nVallado, Fundamentals of Astrodynamics and Applications, New York: McGraw-Hill\nCo, 1997.\n\n13. Human Factors\nHuman assets in space provide an unparalleled situational awareness capability while\ngreatly increasing mission cost and political risk. The Environment Control and Life\nSupport System (ECLSS) is a complex subsystem composed of various components.\nTwo important design metrics are power and system mass, but reliability, and safety are\nalso vital factors that are difficult to enumerate. The ECLSS also has interdependencies\non the power, thermal and structure subsystems.\n\nLearning Objectives\nMission design for manned missions requires an understanding of the various life support\nsubsystems.\n\nSchematic diagram of Environment Control and Life Support System [Lawson, 2003]\n\nThe Air Revitalization Subsystem maintains the atmospheric environment, including\npressure control, composition maintenance, and trace elements. In addition to interfacing\nwith all of the other life support systems, it also is responsible for detecting and\nresponding to fires.\n\nThe Biomass Subsystem produces and stores agricultural products for the Food\nSubsystem. The Biomass Subsystem also serves to regenerate air and water.\n\nThe Food Subsystem stores ready-to-eat, prepackaged foods, beverages, and ingredients\nincluded on the spacecraft at launch. It also receives agricultural products from the\nBiomass Subsystem and stores them for consumption as necessary.\n\nThe Thermal Subsystem maintains temperature and humidity ranges for the crew and\nrejects waste heat to the space environment as needed. It is assumed that the rejection of\nheat to the environment provides an adequate amount of air circulation.\n\nThe Waste Subsystem collects and processes solid waste material, including human\nwaste, inedible biomass, and food packaging materials.\n\nThe Water Subsystem stores and distributes water as necessary for consumption, hygiene,\nand other purposes. The Water Subsystem is also responsible for collecting, transporting,\nand processing wastewater.\n\nReflections on Learning Experience\nI enjoyed Professor Hoffman's lectures a great deal. His stories on the Hubble repair\nmission made for a truly memorable class. He also touched upon practical design issues\nfor manned missions. These included more restrictive pressure, thermal, and radiation\nrequirements, in addition to providing for bodily functions and a safe return to Earth. In\nwasn't until the sixth problem set when I worked on a life support module for a Mars\nmission that I implemented some of these principles in code.\n\nECLSS Design Principles\nTwo conflicting design principles exist. One approach is to minimize power use and\ntechnology development costs by using pre-existing flight-tested technologies, for\nexample, technologies currently in use on the ISS, and the second approach is to\nimplement what is sometimes referred to as an ALS, or advanced life support system.\nThe idea behind using an ALS is to close the mass loop through the use of regenerative\nsystems and hence to recover as much mass as possible over the mission duration. This\ncan help to minimize initial launch mass and put less stress on the propulsion system.\nThe development of ALS systems is especially important if current propulsion\ntechnology - i.e. Chemical rockets - are to be used for a Mars mission. For example,\nlaundering clothing during the mission as opposed to launching enough clothing required\nfor the entire mission would help to reduce launch mass.\n\nIn this problem set six we looked at possible ECLSS designs for a Mars-Transit vehicle.\nFrom an ECLSS design point of view, and indeed from a human mission point of view,\nthe optimal solution is to minimize transfer time from Earth to Mars as much as possible.\nThis would help not only from a mass point of view, but also to limit the adverse affects\n\nof radiation (Mars transit involves possibly high levels of galactic cosmic rays and solar\nprotons) and microgravity on the crew members. However, decreasing transfer time is\nonly feasible up to a certain point after which the propellant mass becomes prohibitive.\n\nVarious methods can be used to compare technologies when designing an ECLSS\nsystem. The NASA/MSFC and McDonnell Douglas Method uses eight trade study\nparameters to compare the available systems: mass, power consumption, volume,\nresupply (for shorter missions), development potential, emergency operation, reliability\nand safety. The method we implemented in the sixth problem set is based on NASA's\nEquivalent System Mass (ESM) metric that expresses mass, volume, power consumption,\ncooling requirement and crew-time requirement in terms of a so-called \"equivalent\"\nmass. Development potential, emergency operation, reliability and safety are considered\nin selecting the technologies to compare via the ESM metric and are not expressed\nquantitatively. ESM is often used as a transportation cost measure in studies comparing\nAdvanced Life Support Systems (ALS) since the cost to transport a payload is\nproportional to its mass [Levri, 2003].\n\nIn this analysis the power subsystem is being studied in detail, so the ESM equation has\nbeen modified to remove the power equivalency factor. Instead, estimated power\nconsumption is determined for each subsystem and used as an input into the power\nmodule. Further analysis follows the discussion of ESM, although power values are\nincluded in description of ECLSS options for comparison purposes. ESM* refers to the\nversion of ESM without power equivalency.\n\nThe equation used for the ESM is that developed in [Levri, 2003]. It is a sum of the ESM\nvalues over the ECLSS subsystems being considered. The subscript i indicates the index\nof the subsystem.\n\n(\n) (\n) (\n)\n(\n) (\n) (\n)\n*\nn\ni\ni\ni\neqi\ni\neqi\ni\ni\neqi\nTDi\nTDi\nTDi\neqi\nM\nSF\nV V\nC C\nESM\nCT\nD CT\nM\nD SF\nV\nD V\n=\nâ¡\nâ¤\nâ\n+\nâ\n+\nâ\n+\nâ¢\nâ¥\n=\nâ¢\nâ¥\nâ\nâ\n+\nâ\nâ\n+\nâ\nâ\nâ£\nâ¦\nâ\n\nMass equivalency factors are used to express the non-mass parameters volume, cooling\nrequirement and crewtime in terms of mass units. For example, the volume equivalency\nis computed as the total empty mass of the spacecraft divided by the total volume\ncapacity. Mass is considered to be a resource and each unit of volume (power, cooling,\ncrewtime) is expressed in terms of the amount of mass it uses.\n\nThe rationale for using crewtime as an equivalency factor is explained in detail in [Levri,\n2003]. Briefly, crewtime used in maintenance or operation of the life support system\ntakes away from crewtime available to carry out mission objectives. If the life support\nsystem requires too much crewtime, the crew size would have to be increased to achieve\nscientific objectives and hence the life support system would be incrementally larger.\n\nThe following table describes the parameters involved in the ESM calculation for each\nsubsystem of the ECLSS onboard the spacecraft.\n\nParameters involved in ESM* equation.\nVariable\nDescription\nUnits\nComments\nMIi\nInitial mass\nKg\n\nSFIi\nInitial mass stowage factor\nkg/kg\nAccounts for additional hardware\nrequired to fasten and contain\nequipment\nVIi\nInitial volume\nm3\nAny pressurized volume necessary\nfor life support hardware\nVeqi\nMass equivalency factor for the\npressurized volume support\ninfrastructure\nkg/m3\n\nCi\nCooling requirement\nkW\nTypically equivalent to subsystem\npower needs\nCeqi\nMass equivalency factor for the\ncooling infrastructure\nkg/kW\n\nCTi\nCrewtime requirement\nCM-h/y\nTime spent by the crew in\noperation/maintenance\nCTeqi\nMass equivalency factor for the\ncrewtime\nkg/CM-h\n\nD\nDuration of the mission segment of\ninterest\ny\nCalculated in trajectory generation\nmodule (dependent on orbit)\nMTDi\nTime/Event-dependent mass\nkg/y\nNeglected in this analysis\nSFTDi\nTime/Event-dependent stowage factor\nkg/kg\nNeglected in this analysis\nVTDi\nTime/Event-dependent volume\nm3\nNeglected in this analysis\n\nGeneral notes and assumptions:\n- Subsystem-specific equivalencies are not used [Levri, 2003]. The equivalency\nfactors are instead constant over all subsystems for the mission segment under\nconsideration. Since the volume equivalency factor depends on the amount of\nradiation shielding provided, it may vary according to subsystem if for example\nthe plant-growth area has less shielding. A more detailed model of the desired\nvehicle design would be required to approximate this parameter. Similarly, if\ndifferent power systems are used to power the various subsystems, the power\nequivalency should be variable.\n\n- Time dependent mass, stowage factor and volume values are not used in the code.\nIncorporating these variables could be an extension to the current work.\n\n- A crew size of 6 is assumed for equipment sizing.\n\n- Assumed food consumption is 1.82 kg/CM-d plus 0.23 kg/CM-d of disposable\npackaging for a total packaged food mass of 2.05 kg/CM-d.\n\n- The expected oxygen generation and carbon dioxide removal from the biomass\nchamber are not currently incorporated into the ALS air revitalization design.\n\n-\nPlants grown in the biomass chamber could also be used for water regeneration\nthrough a transpiration process however this is not taken into consideration in this\nstudy.\n\nTwo types of systems are compared in the following analysis from our sixth problem set\nto develop a life support system for a Mars transit vehicle. The first is model of the ISS-\nBaseline approach to life support, and the second is a model of an Advanced Life Support\nsystem, which makes use of as many regenerative technologies as possible. This section\nof the report builds on previous work and thus detailed descriptions of the function of\nsubsystem components will not be developed in detail here. The following two figures\nshow schematics of the ISS-Baseline and ALS Mars Transfer vehicle ECLSS designs\nrespectively.\n\nSchematic diagram of Environment Control and Life Support System for a Mars Transfer Vehicle\nusing ISS-Baseline Technology [Stafford, 2001]\n\nSchematic diagram of Environment Control and Life Support System for a Mars Transfer Vehicle\nusing ALS Technology [Stafford, 2001]\n\nAir Revitalization Subsystem -ISS\nThe ISS air revitalization subsystem can be broken down into three main components: a\nCO2 removal system, an O2 generation system and a trace contaminant control system\n(TCCS). The function and operation of various implementations of these subsystems are\ndiscussed in detail in previous work as well as in [Lawson, 2003] and will not be\nexplained in detail here. C02 removal on the ISS is accomplished via a 4-Bed Molecular\nSieve (4BMS), electrolysis is used to generate molecular oxygen from oxygen-containing\ncompounds available in the spacecraft (Solid Polymer Water Electrolysis SPWE), and the\nISS Baseline TCCS system uses activated carbon to remove non-combustible gases and\nbacteria filters to remove particulate [Hanford, 2003].\n\nESM value for ISS Air Regeneration System\nOption\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nISS\n3.63\n2.35\n8.1\n1643.65\n\nAir Revitalization Subsystem -ALS\nALS options for an air revitalization subsystem were introduced in previous work and are\nas follows [Drysdale, 1999]:\n\n1. 4-Bed Molecular Sieve (4BMS) + Sabatier Carbon Dioxide Removal System\n(CRS) + Solid Polymer Water Electrolysis (SWPE) Oxygen Generation System\n(OGS) + Node 3 Advanced TCCS (regenerable sorbent bed)\n\n2. Sabatier CGS + SWPE OGS + Node 3 TCCS\n\n3. Improved Carbon Dioxide Removal Assembly (CDRA) + Sabatier CGS + SPWE\nOGS + Node 3 TCCS\n\n4. 4BMS + Bosch CRS + SPWE OGS + ISS Baseline TCSS\n\nComparison of ESM values for Air Regeneration System Options\nMission Duration 0.49y\nOption\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\n3.00\n3.17\n8.1\n1732.2\n1.60\n2.39\n8.1\n1385.7\n1.90\n2.53\n8.1\n1377.8\n2.99\n3.33\n8.1\n1631.7\n\nMission Duration 0.73y (8.67months - Hohmann Transfer)\nOption\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\n3.00\n3.17\n8.1\n1734.4\n\nUsing the ESM metric, various air-regeneration systems can be constructed and\ncompared. With increased mission duration, there is minimal increase in equivalent mass\nsince the only part of the ESM equation where this comes into play is the crewtime\ncomponent. To minimize mass and power required, Option 2 with a reduced mission\nduration of 0.49y is the optimal choice.\n\nFood and Biomass Subsystem-ISS\nThe food subsystem calculations assume that the majority of food is provided from Earth\nin the form of prepackaged dehydrated entrees. The food storage unit is approximated\nusing values from an ISS freezer/refrigerator component [Hanford, 2002]. The ESM for\nfood is proportional to mission duration since it is a consumable resource.\n\nComparison of ESM Values for Food System\nSystem Component\nESM* [kg]\nRefrigerator/Freezer\nPrepackaged Food from Earth (D=0.49)\n3719.2\nPrepackaged Food from Earth (D=0.73)\n5540.8\n\nFood and Biomass Subsystem-ALS\nFor a long duration mission, salad greens and possibly other fresh vegetables such as\npotatoes could supplement packaged food if a small biomass chamber was included on\nboard the transit vehicle. The equivalent system mass for this component takes into\naccount grow-lamps and ballasts as well as the crops and the required growth space.\nSince this technology is still under development, a small unit of approximately 5m2 is\nincluded in the ALS system. This growth space factor multiplies the ESM* baseline\nvalue for 1m2 of space and also multiplies the power required. The addition of fresh\nproduce to the astronauts' diet would probably be more of a psychological boost than a\npackaged meal replacement. However, with further study and testing it is possible that a\nmore advanced biomass chamber could be added to a transit vehicle to increase the\nvariety of foods available to the crew.\n\nESM Values for Biomass System\nSystem Component\nESM* [kg]\nBiochamber (5m2 potato, salad greens)\n2433.9\n\nTemperature and Humidity Control (THC) System-ISS/ALS\nTemperature and humidity must be kept within a nominal range to ensure comfortable\nworking conditions for the crew. Human metabolism as well as cabin equipment must be\ntaken into account when calculating the amount of heat produced and hence the amount\nof cooling required. Temperature control is usually accomplished by removing heat from\nthe atmosphere using a heat exchange with the excess heat eventually vented to space.\nHumidity control can be accomplished using a desiccant or phase change process.\nVentilation and air circulation are also important concerns when designing the THC\nSystem.\n\nThe ISS baseline thermal control system details were difficult to find at the component\nlevel, so the entire THC system is considered as a unit. This system includes avionic air\nassemblies to cool equipment, cabin air assemblies for cooling and dehumidification of\nthe crew quarters, and condensate storage/water flow loops for heat transport. Heat\nexchangers are considered to be part of the external Thermal Control System as opposed\nto part of the ECLSS.\n\nESM for Thermal Control System\nSubsyst\nem\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nTherma\nl\n2.31\n3.02\n1734.4\n\nWater Recovery System-ISS\nThe water recovery system must achieve loop closure approaching 100% to alleviate the\nneed for resupply. No single system for water recovery has been designed to remove all\ncontaminants or treat all types of wastewater that need to be processed. A trade study\nmust therefore compare combinations of technologies that serve to fulfill all treatment\nrequirements including storage, filtration or phase change processes, urine processing,\nwater quality monitoring and disinfect ion. The ISS Baseline system uses Vapor\nCompression Distillation in combination with Multifiltration and Volatile Removal\nAssembly.\n\nESM for ISS Water Recovery System\nOption\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nISS\n0.5\n0.99\n8.0\n811.8\n\nWater Recovery System-ALS\nThe ALS water treatment schemes offer a significant improvement in recovery over the\nISS baseline model. For the systems outlined below, loop closure approaches 100% and\nhence the amount of water launched can be significantly reduced. The five combinations\navailable for comparison according to ESM are as follows:\n\n1. Vapor Compression Distillation (VCD) + Ultrafiltration/Reverse Osmosis\n(UF/RO) + Aqueous Phase Catalytic Oxidation Subsystem (APCOS)\n\n2. VCD + UF/RO + Milli-Q Post Processor (MilliQ)\n\n3. Biological Water Processor (BWP) + RO + MilliQ\n\n4. BWP + RO + Air Evaporation Subsystem (AES) + MilliQ\n\nComparison of ESM values for ALS Water Recovery System Options\nOption\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\n0.5\n1.56\n8.0\n471.0\n0.5\n0.72\n8.0\n386.6\n0.5\n0.68\n8.0\n296.2\n0.5\n1.68\n8.0\n401.2\n\nAll simulations are for nominal mission duration of 0.49 years. Varying the mission\nduration will not have a strong effect on the water recovery system since most of the\nassociated costs are infrastructure related rather than consumable. From the above chart\nwe can see that option 3 is currently the best from an ESM perspective. These values are\napproximate however since CrewTime and Volume data are not yet available for the\ntechnologies under study and therefore are set to be constant across all options.\n\nWaste Processing System-ISS\nThe waste processing system involves the collection and storage of waste material. For\nshorter duration missions, storage is usually preferred to in-situ treatment, and hence the\nISS waste processing system consists of toilet facilities and a storage tank. Again, since a\ndetailed breakdown of power and mass values for individual components was\nunavailable, the system is treated and analyzed as a whole.\n\nESM for ISS-Baseline Waste Processing System\nSubsyst\nem\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nWaste\n0.09\n0.17\n228.9\n\nWaste Processing System-ALS\nFor a Mars transit mission, waste treatment may become an issue due to the long mission\nduration and the desire to recover as much material as possible from waste. Techniques\nto consider include incineration, dessication, freezing, heat sterilization and chemical\ntreatment. The ALS system can either use the ISS-Baseline components for storage alone\nor add to this a treatment component. The only option considered for treatment is super-\ncritical wet oxidization (SCWO), which is a physiochemical process used to treat waste.\nThe process is able to breakdown waste products quite completely, with the resulting\nproducts being water vapor, carbon dioxide, nitrogen and salts. Other processes are\nlikely to produce toxins and hence are not as viable for a Mars transit mission where\nsafety and reliability are critical.\n\nESM for ALS Waste Processing System\nSubsyst\nem\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nWaste-\nISS\n0.09\n0.17\n228.9\nSCWO\n0.5\n0.2\n820.7\n\nHuman Accommodations-ISS\nAll clothing is assumed to be brought from Earth. The relationship used to calculate\nclothing mass is 1.5 * CrewSize * Mission Duration (days) [Hanford, 2003].\n\nHuman Accommodations-ALS\nA smaller amount of clothing may be brought from Earth if there is an aqueous laundry\navailable to the astronauts. Since water recovery is increasingly possible with an ALS\nsystem, it can be used to wash clothing and thus reduce the vehicle launch mass. With a\nlaundry system available, clothing mass at launch can be estimated as 0.267 * CrewSize *\n\nMission Duration (days) [Hanford, 2003]. Assume the crew do a load of laundry once a\nweek, so the Crew Time value is multiplied by a factor of 52.\nESM for ALS Waste Processing System\nSubsystem\nMass [kg]\nVolume [m3]\nPower [kW]\nCrew Time [ch/y]\nESM* [kg]\nLaundry\n0.66\n0.31\n0.33*52\n288.4\n\nLogistics ISS/ALS\nBecause the ALS systems tend to have greater recycling capabilities, the amount of air,\nwater and clothing that must be launched is lower for the ALS systems. This comparison\nis shown in Table 12 [Hanford, 2003] with values calculated for a mission duration of\n0.49y.\n\nComparison of Logistics for ISS and ALS Systems\nECLSS\nO2 and N2 [kg]\nWater [kg]\nClothing [kg]\nISS-Baseline\n294.9\n863.87\n1609.7\nALS\n99.9\n11.76\n286.5\n\nECLSS Summary and Comparison\nThe ISS-Baseline approach to ECLSS design has the advantage of being technologically\nproven over a long-term mission duration, however, the mass of this system tends to be\nhigher than the mass of an ECLSS that incorporates advanced regenerative technologies.\nThe biomass chamber is the single highest contributor to mass for the ALS system, and\nso the ALS is examined with and without a biomass chamber to show that in general, the\nALS mass is less than that of the ISS (less-regenerative) system.\n\nComparison of Logistics for ISS and ALS Systems\nECLSS\nESM*[kg] (min)\nESM*[kg] (nominal)\nESM*[kg] (max)\nISS-Baseline\n\n10339.66\n\nALS\n8609.258\n\n9138.508\nALS+Biomass\n11043.17\n\n11572.42\n\nComparison cannot be done on the basis of mass alone however, as the ESM in this case\ndoes not include power. Power use of the different approaches must also be compared, as\nmust technological development cost and reliability/safety. For a Mars mission\nscheduled to leave in the next two or three years, the ISS technologies would probably be\npreferable for the added safety relative to the minor mass improvement in using ALS.\nThe figure below shows a plot of the ISS and ALS ESM* as mission duration varies. The\nfour ALS plots correspond to minimum ALS value with and without the biomass\nchamber and maximum ALS value with and without the biochamber respectively. As\nexpected, the tendency to higher masses with longer mission durations is close to linear,\nand the ECLSS system design favours low mission duration in terms of mass.\n\nComparison of ESM* for ISS and ALS Technologies\n0.3\n0.4\n0.49\n0.6\n0.7\n0.8\n0.9\nMission Duration (y)\nESM* [kg]\nISS\nmin+bc\nmin-bc\nmax+bc\nmax-bc\n\nComparison of ESM* for ISS and ALS Systems\n\nChallenges for a Manned Mars Mission\nA manned flight to Mars also embodies a host of new safety challenges. For one, given\nthe long duration of a mission to Mars, there is an increased chance of failure of dynamic\nsystems such as pumps, valves, and electronics. These failures may be caused by the\nincreases in operating times, on/off cycles, structural flexing, corrosion, and abrasion.\nSecondly, there is no opportunity to receive equipment or supplies from Earth,\nunderscoring the need for reusable, robust systems. A third challenge is the increasing\ncommunications lag between the transportation vehicle and Mission Control as the\nvehicle approaches Mars. Once in a Mars orbit, this lag will vary from eight to forty\nminutes depending upon orbital positions. Data rates will also decrease dramatically, on\nthe order of 10-6 compared to Earth orbiters. One obvious challenge facing the power\nsystem is the reduction in available solar energy as the vehicle approaches Mars. In fact,\nthe power available to solar array will decrease by 50% from the start of the mission.\n\nUseful References\nDrake, Bret G. \"Technologies for Human Space Exploration: Earth's Neighborhood and\nBeyond.\" AIAA, 2001.\n\nDrysdale, A. E. Advanced Life Support Systems Modeling and Analysis Project Baseline\nValues and Assumptions Document. NASA CTSD-ADV-371. Houston TX, 1999.\n\nHanford, A. J. Advanced Life Support Baseline Values and Assumptions Document.\nNASA CTSD-ADV-484. Houston TX, 2002.\n\nHanford, A. J. Advanced Life Support Research and Technology Development Metric -\nFiscal Year 2003. Lockheed Martin Space Operations. Houston TX, 2003.\n\nKennedy, Kriss J. \"The Vernacular of Space Architecture.\" AIAA, 2002.\n\nLawson, Mike. Advanced Life Support. NASA Johnson Space Center. Updated August\n2003. http://advlifesupport.jsc.nasa.gov\n\nLevri, Julie. Advanced Life Support Equivalent System Mass Guidelines Document.\nNASA/TM-2003-2112278. Washington DC , 2003.\n\nOliver, Fernando Abilleira. \"Mars Generations Mission, a Manned Mission to Mars.\"\nAIAA, 2002.\n\nPeterson, Donald H. \"Safety Concepts for a Crewed Mars Mission.\" AIAA, 2000.\n\nStafford, Kristin W. \"Advanced Life Support, Systems Integration, Modeling, and\nAnalysis Reference Missions Document.\" Lockheed Martin Space Operations--Crew\nand Thermal Systems Division. 5 November 2001.\nhttp://peer1.nasaprs.com/peer_review/prog/RMD.pdf (30 November 2003).\n\nWertz, James R. and Larson, Willey J., Space Mission Analysis and Design, Third\nEdition, Microcosm Press, 1999.\n\nZubrin, Robert. The Case for Mars. Touchstone, New York, 1997.\n\n14. Cost Modeling\nDetailed bottom-up estimating is accurate for established programs but it is a weak\nmethod for immature designs with a high number of technical uncertainties. Analogy-\nbased estimating is the application of an existing cost model to a similar system, adjusted\nfor size and complexity differences. When known physical, technical, and performance\nparameters can be related to cost, the parametric costing method is best for conducting\nconceptual designs under time constraints, and is the preferred method of the Department\nof Defense. In the real world, Professor Miller points out that cost is the \"size of the\nstanding army times the length of the program.\"\n\nLearning Objectives\nUnderstand the following concepts covered in lecture:\n\n- Cost Estimating Methods\n- Work Breakdown Structure\n- Software Cost Estimation\n- Technology Readiness Levels\n- Management Reserves\n- Production Costs\n- Annual Funding Profiles\n- Inflation\n- Cost Analysis Requirements Document\n\nReflections on Learning Experience\nChapter 20 on cost in SMAD is an excellent introduction to cost estimating for space\nsystems. I enjoyed lecture and the coverage of the material in the context of the\n'Resource Plan\" for the Stellar Interferometer Tracking Experiment.\n\nSoftware Cost Estimation\nSMAD estimates that flight software and ground software RDTE&E cost $435 and $220,\nrespectively. These estimates are then multiplied by the language factor:\n\nTechnology Readiness Levels\n\nUseful References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\nReducing Space Mission Cost , Wertz and Larson\nInternational Reference Guide to Space Launch Systems , Isakowitz, AIAA\nJane's Space Directory\nCost Models (Aerospace Corporation Small Satellite Cost Model (SSCM), Air Force\nUnmanned Spacecraft Cost Model (USCM), NASA Goddard Multivariable Instrument\nCost Model (MICM), NASA World Wide Web sites)\nhttp://www.jsc.nasa.gov/bu2/guidelines.html\n\n15. Structures\nThe structures subsystem mechanically supports all spacecraft subsystems, mates the\nspacecraft to the launch vehicle, and is responsible for ordnance-activated separation.\nThe structures subsystem must meet strength and stiffness requirements of all primary\nloads and secondary loads such as wire bundles and propellant lines.\n\nLearning Objectives\nThe learning objectives identified in lecture include understanding:\n\n- The role of the thermal subsystem in shielding the payload from extreme thermal\nand radiation environments, maintaining system geometry, and carrying loads\n- Power and thermal management applications\n- Issues associated with light-weight structures and thermal distortion\n- Multifunctional structural technologies\n- Deployment and geometry maintenance of deployable booms, mesh antennas,\nmembrane structures, inflatables, and tethers\n\nReflections on Learning Experience\nSMAD (11.6) and lecture were both clear on this subject. I especially enjoyed the\ndiscussion of multifunctional structures and advanced materials and composites. The\nstructures subsystem is difficult to trade and hence was not a popular subsystem in the\nproblem set modules.\n\nThermal Issues with Structures\n(Taken from lecture notes)\n\n- Sunshields\nTo observe in the thermal infrared requires cold optics and detectors\nSunshields are used to block sunlight from heating these elements\nNeed to be large and lightweight\n- Thermal Snap\nThe heat load into a structure can change due to Earth eclipse in LEO or due\nto a slew of the S/C\nNonzero or differential coefficient of thermal expansion (CTE) can cause\nstresses to build\nFriction joints in deployment mechanisms can eventually slip causing an\nimpulsive input\nThis high frequency vibration can disturb precision instruments\n- Thermal Flutter\nDifferential thermal expansion can cause a portion of the structure to curve\nand reduce its exposure to a heat source\nThe structure then curves back thereby increasing its heat load\n\nThis can lead to a low frequency instability (flutter)\n- Thermal Distortions\nDifferential thermal expansion in optics and optical mounts can dramatically\ndegrade performance\nKinematic mounts ensure that only 6-DOF loads are applied thereby holding\nthe optic's 6-DOF in place without applying bending and shearing loads\n\nUseful References\nSpace Mission Analysis and Design (SMAD), Wertz & Larson, Third edition, Microcosm\nPress, 1999.\n\nFundamentals of Space Systems, Pisacane and Moore, Oxford, 1994\n\nSpace Systems Engineering, Fortesque and Stark, John Wiley and Sons, 1995\n\nSpace Vehicle Design, Griffin and French, AIAA 1991\n\nMEMS for Inflatable Space Structures article:\nhttp://www.spacedaily.com/news/nanotech-01h.html"
    }
  ]
}