{
  "course_name": "Geometric Folding Algorithms: Linkages, Origami, Polyhedra",
  "course_description": "This course focuses on the algorithms for analyzing and designing geometric foldings. Topics include reconfiguration of foldable structures, linkages made from one-dimensional rods connected by hinges, folding two-dimensional paper (origami), and unfolding and folding three-dimensional polyhedra. Applications to architecture, robotics, manufacturing, and biology are also covered in this course.\nAcknowledgments\nThanks to videographers Martin Demaine and Jayson Lynch.",
  "topics": [
    "Engineering",
    "Computer Science",
    "Algorithms and Data Structures",
    "Fine Arts",
    "Visual Arts",
    "Mathematics",
    "Topology and Geometry",
    "Engineering",
    "Computer Science",
    "Algorithms and Data Structures",
    "Fine Arts",
    "Visual Arts",
    "Mathematics",
    "Topology and Geometry"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nOpen Problem Sessions (Optional): 1 session / week, 2 hours / session\n\nCourse Description\n\nWhenever you have a physical object to be reconfigured, geometric folding often comes into play. This course is about algorithms for analyzing and designing such folds. Motivating applications include:\n\nAutomated design of new and complex origami, such as\n\nFreeform Origami, Origamizer, and Rigid Origami Simulator\nby Tomohiro Tachi\n\nTreeMaker\nby Robert J. Lang\n\nTransforming robots by\nself-folding sheets\nor chains\n\nHow to\nfold robotic arms without collision\n\nHow to bend sheet metal into desired 3D shapes, such as\n\nUnunfoldable polyhedra with convex faces\n\nOrthostacks\n\nUnderstanding how\nproteins fold\n\nMajor progress has been made in recent years in many of these directions, thanks to a growing understanding of the mathematics and algorithms underlying folding. Nonetheless, many fundamental questions remain tantalizingly unsolved. This course covers the state-of-the-art in folding research, including a variety of open problems, enabling the student to do research and advance the field.\n\nFormat\n\nThis year we will be experimenting with an inverted lecture format. Students will be expected to watch recorded, online lectures prior to attending class. In-class time will then be more interactive and dedicated to folding experiments, answering questions, collaborative projects, clarifying proofs, and exploring new results and applications.\n\nWe will also organize optional problem-solving sessions, during which we can jointly try to solve open problems in folding. In the past, these sessions have led to important new results and published papers, as well as class projects.\n\nTopics\n\nThis is an advanced class on computational geometry focusing on folding and unfolding of geometric structures including linkages, proteins, paper, and polyhedra. Examples of problems considered in this field include:\n\nWhat forms of origami can be designed automatically by algorithms?\n\nWhat shapes can result by folding a piece of paper flat and making one complete straight cut?\n\nWhat polyhedra can be cut along their surface and unfolded into a flat piece of paper without overlap?\n\nWhen can a linkage of rigid bars be untangled or folded into a desired configuration?\n\nMany folding problems have applications in areas including manufacturing, robotics, graphics, and protein folding. This class covers many of the results that have been proved in the past few years, as well as the several exciting open problems that remain open.\n\nPrerequisites\n\n6.046J/18.410J Design and Analysis of Algorithms\n, or equivalent background in discrete mathematics and algorithms. Alternatively, permission from the instructor.\n\nTextbooks\n\nRequired\n\nDemaine, Erik\n, and\nJoseph O'Rourke\n.\nGeometric Folding Algorithms: Linkages, Origami, Polyhedra\n. Cambridge University Press, 2007. ISBN: 9780521857574.\n\nRecommended\n\nLang, Robert\n.\nOrigami Design Secrets: Mathematical Methods for an Ancient Art\n. 2nd ed. A K Peters / CRC Press, 2011. ISBN: 9781568814360. [Preview with\nGoogle Books\n]\n\nGrading\n\nStudents will be given a small number of problem sets to complete during the first half of the course.\n\nThe other requirement for the course is a project, which can take the form of folding-inspired sculptures; formulations of clean, new open problems; implementations of existing algorithms; or well-written descriptions of one or more papers in the area. Projects can be purely mathematical (geometric) and/or theoretical computer science (algorithmic/complexity theoretic) and/or artistic. Students are required to complete a write-up of the project, and deliver a project presentation.",
  "files": [
    {
      "category": "Assignment",
      "title": "Problem Set 1 Solutions, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/9a2007a7a3c77208ce26867ab25d21a8_MIT6_849F12_ps1_sol.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 1 Solutions\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1.\nPose any problem related to folding (mathematical, computational, application,\netc.). The problem should be original to the best of your knowledge (though it's fine if it turns out\nthat the problem has been posed or even solved).\nSolution: There is no one correct answer.\nProblem 2.\nFor each of the two 3 × 3 maps linked below,1 fold along all the creases to obtain a\nflat packet of 1 × 1 squares that satisfy the following restrictions. Submit your folded solutions.\n(a) Respect the specified mountain-valley pattern.\n(b) The top and bottom of the packet should both show the same image of an MIT building,\nthrough a \"frame\" of MIT logos. (Only one identical pair of images will work.)\nSolution: Layering given below. Stata appears in the windows.\n5 4 6\n2 3 7\n1 9 8\nMIT New Lab Folding Puzzle\nYour goal is to fold the 3x3 puzzle\ninto a one-square packet so that\nthe top and bottom of the packet\nboth show the same image of\nMIT, through a \"frame\" of MIT\nlogos. (See reverse.) There is only\none solution. Only one identical\npair of images will work. You can\nonly fold along the black lines.\nDesigned by Erik Demaine & Martin Demaine, 2003\nCUT\nSQUARE\nHOLE\nCUT\nSQUARE\nHOLE\n3 9 8\n4 5 6\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/map crease 2.pdf\nhttp://erikdemaine.org/puzzles/LCS2003/\n1The puzzle in 2(b) was handed out in class. If you missed it, follow the link and print the two-sided PDF on a\nduplex printer. Note that the puzzle has two sides; only the front side is shown here.\nPhotographs of MIT Stata Center, dome, and Simmons Hall (c) source unknown.\nAll rights reserved. This content is excluded from our Creative Commons license.\nFor more information, see http://ocw.mit.edu/help/faq-fair-use/.\n\nProblem 3.\nGive a polynomial-time algorithm to compute the minimum number of simple folds\nneeded to fold a given 2D map (mountain-valley pattern), assuming that the map is already known\nto be flat foldable by simple folds.\nSolution: We intended this problem to ask about all-layers simple-folds.\nWe apologize for\nwriting it ambiguously. For one-layer simple folds, we must make exactly one fold for every crease,\nand so minimizing the number of folds is trivial. For some-layers simple folds, the problem appears\nto be open. This problem seems to be difficult because the layering of the folds affects what folds\nare legal in the future and we don't always need to ensure creases line up. This seems to lead to\nan exponential number of cases that need to be checked. Special thanks to Brian Hamrick who\npointed out the ambiguity and gave clear arguments on both sides.\nFor the case of all-layers simple folds, we can solve it in the following manner. A crease line is\na crease that extends all the way across the rectangle and is either all mountain or all valley. We\nknow that to be flat foldable, at least one crease line must exist, and by Lemma 14.2.1 in GFALOP\nwe know that all crease lines in a given orientation must be folded before any other creases. Thus\nwe can reduce the problem to a series of one-dimensional subproblems which we will call sections.\nNow, for the one-dimensional case, we notice that once a fold is make, it can never be unfolded\nin this model. Thus, for a fold to be legal, the crease pattern must match on both the top and\nbottom. Further, after a fold is made, we can imagine the paper 'fusing' together, because it must\nall be folded at the same time. This has two important implications. First, the order in which\ncreases are folded in each section does not change what folds are possible in future sections. Because\nthis is the case, it suffices to solve each section optimally. Second, every time we make a fold, the\nresulting one-dimensional subproblem has at least one less crease than the original. This leaves\nO(n2) subproblems. Each of these subproblems can have at most O(n) creases to fold. Thus, we can\nthen use dynamic programming to check how many creases are needed and to choose the sequence\nthat minimizes this number with only O(n4) operations. This running time can be reduced further\nwith more careful handling of the dynamic programming and crease condition checking, but already\nachieves our polynomial-time goal.\n\nProblem 4.\nWhich of the following crease patterns are flat foldable? Are any simply foldable\n(foldable by a sequence of simple folds)? Justify each answer by either submitting a flat folding or\narguing why the crease pattern cannot fold flat.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1d.pdf\n(a) The middle triangle violates Bern and Hayes. All pairs of edges must have opposite MV\nassignments which is impossible.\n(b) This was intended to be flat foldable by simple folds. Violation of Kawasaki's theorm is also\ntrue and acceptable.\n(c) The lower-right vertex violates Kawasaki's theorem.\n(d) This is flat foldable, but not by simple folds.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 1, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/ef51ee9275dbdee54d5e2d16ae1af98a_MIT6_849F12_ps1.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 1\nDue: Tuesday, September 18th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1.\nPose any problem related to folding (mathematical, computational, application,\netc.). The problem should be original to the best of your knowledge (though it's fine if it turns out\nthat the problem has been posed or even solved).\nProblem 2.\nFor each of the two 3 × 3 maps linked below,1 fold along all the creases to obtain a\nflat packet of 1 × 1 squares that satisfy the following restrictions. Submit your folded solutions.\n(a) Respect the specified mountain-valley pattern.\n(b) The top and bottom of the packet should both show the same image of an MIT building,\nthrough a \"frame\" of MIT logos. (Only one identical pair of images will work.)\nMIT New Lab Folding Puzzle\nYour goal is to fold the 3x3 puzzle\ninto a one-square packet so that\nthe top and bottom of the packet\nboth show the same image of\nMIT, through a \"frame\" of MIT\nlogos. (See reverse.) There is only\none solution. Only one identical\npair of images will work. You can\nonly fold along the black lines.\nDesigned by Erik Demaine & Martin Demaine, 2003\nCUT\nSQUARE\nHOLE\nCUT\nSQUARE\nHOLE\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/map crease 2.pdf\nhttp://erikdemaine.org/puzzles/LCS2003/\nProblem 3.\nGive a polynomial-time algorithm to compute the minimum number of simple folds\nneeded to fold a given 2D map (mountain-valley pattern), assuming that the map is already known\nto be flat foldable by simple folds.\n1The puzzle in 2(b) was handed out in class. If you missed it, follow the link and print the two-sided PDF on a\nduplex printer. Note that the puzzle has two sides; only the front side is shown here.\nPhotographs of MIT Stata Center, dome, and Simmons Hall (c) source unknown.\nAll rights reserved. This content is excluded from our Creative Commons license.\nFor more information, see http://ocw.mit.edu/help/faq-fair-use/.\n\nProblem 4.\nWhich of the following crease patterns are flat foldable? Are any simply foldable\n(foldable by a sequence of simple folds)? Justify each answer by either submitting a flat folding or\narguing why the crease pattern cannot fold flat.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps1d.pdf\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 2 Solutions, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/48887fd9952e6fffb70a0e888af1d4a5_MIT6_849F12_ps2_sol.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 2 Solutions\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1.\nDesign a piece of origami using either TreeMaker or Origamizer, and fold it. Use\nyour judgement of reasonable complexity to work within your folding ability. This problem aims\nto give you experience using algorithmic tools for origami design, and some practice for how well\nthese work (or fail) to fold. Submit your intended design, any issues you encountered, resulting\ncrease pattern, and your folded origami.\nSolution: There is no one correct answer.\nProblem 2.\nIdentify the shadow tree in the TreeMaker designs given by the crease patterns\nbelow.\nSolution: Given below by the light blue tree with length labels.\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n1.0000\n_\n2.0000\n1.0000\n1.0000\n1.0000\n1.0000\n2.0000\n1.0000\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker b.pdf\n\nProblem 3.\nIdentify all paths that are active at any time during the universal molecule construc-\ntion process (not just at the beginning), in the TreeMaker diagrams given by the crease patterns\nabove.\nSolution: Given below.\ng\n_\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker b.pdf\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 2, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/996872b3cae796b08d5fafdc3f29472d_MIT6_849F12_ps2.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 2\nDue: Tuesday, September 25th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Design a piece of origami using either TreeMaker or Origamizer, and fold it. Use your\njudgement of reasonable complexity to work within your folding ability. This problem aims to give\nyou experience using algorithmic tools for origami design, and some practice for how well these work\n(or fail) to fold. Submit your intended design, any issues you encountered, resulting crease pattern,\nand your folded origami.\nProblem 2.\nIdentify the shadow tree in the TreeMaker designs given by the crease patterns\nbelow.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/treeMaker b.pdf\nProblem 3.\nIdentify all creases in the above TreeMaker diagrams which are active paths at any\ntime during the universal molecule construction process.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 3 Solutions, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/cb07741d1a2b4ec9ce6b363df3cf8fdb_MIT6_849F12_ps3_sol.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 3 Solutions\nDue: Tuesday, October 2nd, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Design and fold a piece of origami using Tomohiro Tachi's Freeform Origami software\nor Alex Bateman's Tess. Submit the physical folded piece in class with your name on it, and send\na digital copy of the crease pattern.\n- Freeform Origami can be downloaded from http://www.tsg.ne.jp/TT/software/#ffo\n(Windows only. If you do not have a Windows machine, use a Windows Athena cluster, e.g.,\nin building 37-3.)\n- Tess can be downloaded from http://www.papermosaics.co.uk/software.html\n(Requires Perl/Tk, or use the Windows binary.)\nSolution: There is no one correct answer.\nθ\nρ\n4,1\nρ\n1,2\nρ2,3\nρ3,4\nθ\nθ\nθ\nProblem 2.\nGiven a flat-foldable degree-4 vertex, we\ncan represent its configuration in 3D space by the four an-\ngles between the creases (θ1, θ2, θ3, θ4) and by four fold-\ning angles (ρ1,2, ρ2,3, ρ3,4, ρ4,1), as shown on the right. We\nmeasure a folding angle between -180*and 180*: a fold-\ning angle of 0 indicates no folding, while a folding angle of\n±180*indicates a mountain/valley flat fold. Prove that,\nfor any 3D configuration of a flat-foldable degree-4 vertex,\n|ρ1,2| = |ρ3,4| and |ρ2,3| = |ρ4,1|. (For the mountain-valley\nassignment in the figure, ρ1,2 = ρ3,4 and ρ2,3 = -ρ4,1.)\nHint: Use spherical trigonometry.\nSolution: Choose points along the creases all at distance 1 from the vertex of the fold. These\npoints form a spherical quadrilateral on the surface of a sphere of radius 1, whose edge lengths are\nθ1, θ2, θ3, θ4, and whose vertex angles are ρ1, ρ2, ρ3, ρ4. Call the interior diagonal of this quadrilateral\nx. Then, by the Spherical Law of Cosines, we have:\ncos x = cos θ2 cos θ3 + sin θ2 sin θ3 cos ρ2,3,\n(1)\ncos x = cos θ1 cos θ4 + sin θ1 sin θ4 cos ρ4,1.\n(2)\nFurther, by Kawasaki's Theorem, we know:\nθ1 + θ3 = θ2 + θ4 = π.\n(3)\n\nFrom trigonometry, we know:\ncos(π -θ) = -cos θ,\n(4)\nsin(π -θ) = sin θ.\n(5)\nCombining Equations 1 through 6, we get:\ncos x = cos θ2 cos θ3 + sin θ2 sin θ3 cos ρ2,3 = cos θ1 cos θ4 + sin θ1 sin θ4 cos ρ4,1\n(6)\ncos θ2 cos θ3 + sin θ2 sin θ3 cos ρ2,3 = cos(π -θ3) cos(π -θ2) + sin(π -θ3) sin(π -θ2) cos ρ4,1\n(7)\ncos θ2 cos θ3 + sin θ2 sin θ3 cos ρ2,3 = (-1)(-1) cos θ2 cos θ3 + sin θ2 sin θ3 cos ρ4,1\n(8)\ncos θ2 cos θ3 + sin θ2 sin θ3 cos ρ2,3 = cos θ2 cos θ3 + sin θ2 sin θ3 cos ρ4,1\n(9)\ncos ρ2,3 = cos ρ4,1\n(10)\nBecause we know the values of our fold angles are restricted to the range [-π, π], we know ρ2,3 =\n±ρ1,4. A similar argument using different angles and spherical triangles gives the other pair of\nangles.\nProblem 3.\nMake a cool maze-folding design using the following webapp:\nhttp://erikdemaine.org/fonts/maze/\nEmail us a link to your design using the \"link to this view\" feature. You do not need to fold this\npiece. If you decide to try folding it, we will expect a much less complex design.\nSolution: There is no one correct answer.\nProblem 4.\nProve that the following problem is NP-hard:\nGiven a 1D piece of paper with a 1D crease pattern, find the subset of creases to fold\nthat produces the smallest length of the resulting flat folding.\nNote that not all creases need to be folded and there is no mountain-valley assignment.\nHint: Reduce from Partition.\nSolution:\nWe prove NP-hardness of the above problem by reduction from Partition.\nThe\nPartition problem asks, given a multi-set S = {a0, a1, . . . , an}, whether there exists a partition into\ntwo subsets S1 and S2 such that the sum of the elements of S1 equals the sum of the elements of S2.\nWe construct an instance of the folding problem with creases placed with the following distances\nbetween them: {L, L/2, a0, a1, . . . , an, L/2, L}, where T = Pn\ni=0 ai and L > 2 T.\n\nL\nL/2\nL/2\nL\na0, a1, ... an\nL/2\nL\nL\nL/2\nUnfolded State\nFolded State\nBecause of the edges of length L, it is impossible to fold the paper smaller than length L. To\nachieve this minimum length, both bars of length L must lie on top of each other, and thus the\nbars of length L/2 must have endpoints at 0, L/2 or L/2, L. This property can occur only if the\nsections in the middle come back to the same location they start at, i.e., position L/2. Now, when\nwe decide not to fold a crease, we have lengths continuing in the same direction, while when we\nfold the crease, they then move in the opposite direction. Thus, to have the start and end of this\nsubsection of the paper return to the same place, we must be able to pick lengths traveling to the\nright and lengths traveling to the left such that the sum of the lengths in each group is the same.\n(You may have noticed a similarity to Kawasaki's Theorem, because in that case the paper needed\nto meet itself to be circular.)\nThus, we can instantiate the Partition problem in the folding problem. If the minimum length\nis L, then we know that there is a partition of the sets. In addition, if we know the partition, we\ncan construct a folding of length L by folding a crease whenever the next corresponding segment is\npartitioned into a different set than the previous one, and not folding a crease when they are both\nin the same set. Therefore the folding problem is NP-Hard.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 3, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/d338b4ed7deb0bbb5670f9aace013f34_MIT6_849F12_ps3.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 3\nDue: Tuesday, October 2nd, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Design and fold a piece of origami using Tomohiro Tachi's Freeform Origami software\nor Alex Bateman's Tess. Submit the physical folded piece in class with your name on it, and send\na digital copy of the crease pattern\n- Freeform Origami can be downloaded from http://www.tsg.ne.jp/TT/software/#ffo\n(Windows only. If you do not have a Windows machine, use a Windows Athena cluster, e.g.,\nin building 37-3.)\n- Tess can be downloaded from http://www.papermosaics.co.uk/software.html\n(Requires Perl/Tk, or use the Windows binary.)\nθ\nρ\n4,1\nρ\n1,2\nρ2,3\nρ3,4\nθ\nθ\nθ\nProblem 2.\nGiven a flat-foldable degree-4 vertex, we\ncan represent its configuration in 3D space by the four an-\ngles between the creases (θ1, θ2, θ3, θ4) and by four fold-\ning angles (ρ1,2, ρ2,3, ρ3,4, ρ4,1), as shown on the right. We\nmeasure a folding angle between -180*and 180*: a fold-\ning angle of 0 indicates no folding, while a folding angle of\n±180*indicates a mountain/valley flat fold. Prove that,\nfor any 3D configuration of a flat-foldable degree-4 vertex,\n|ρ1,2| = |ρ3,4| and |ρ2,3| = |ρ4,1|. (For the mountain-valley\nassignment in the figure, ρ1,2 = ρ3,4 and ρ2,3 = -ρ4,1.)\nHint: Use spherical trigonometry.\nProblem 3.\nMake a cool maze-folding design using the following webapp:\nhttp://erikdemaine.org/fonts/maze/\nEmail us a link to your design using the \"link to this view\" feature. You do not need to fold this\npiece. If you decide to try folding it, we will expect a much less complex design.\nProblem 4.\nProve that the following problem is NP-hard:\nGiven a 1D piece of paper with a 1D crease pattern, find the subset of creases to fold\nthat produces the smallest length of the resulting flat folding.\nNote that not all creases need to be folded and there is no mountain-valley assignment.\nHint: Reduce from Partition.\n.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 4 Solutions, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/f87c2dd278c31de207d324dd05ad8a39_MIT6_849F12_ps4_sol.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 4\nDue: Thursday, October 11th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Prove that, for any polygon with n vertices, its straight skeleton has O(n) vertices,\nedges, and faces (as mentioned in lecture). You may assume any other properties of the straight\nskeleton mentioned in lecture.\nSolution: We will look at the graph created by the union of the polygon and the straight skeleton\nby induction. Let us consider how many edges, vertices, and faces it contains.\nFaces: The method of construction by shrinking edges leads to a correspondence between every\nedge in the original polygon and two faces in the new graph. Since there are n edges in a polygon\nwith n vertices, the new graph will have 2n faces.\nVertices: A splitting event only occurs when there is a reflex angle in the polygon. The number\nof events where an edge or face shrink to zero are bounded by the number of edges in the region.\nAn edge can only be part of two regions. Thus the number of vertices is bounded by twice the\nedges plus the number of reflex angles.\nEdges: Since the resulting graph is planar, we can use Euler's Formula, V - E + F = 2, and\nthe bounds for the number of faces and vertices to bound the number of edges.\nA more general proof about the linear complexity of straight skeletons can be found in Aichholzer\nand Aurenhammer's Straight Skeletons for General Polygonal Figures in the Plane.\nProblem 2.\nDesign and fold (but do not cut) a fold-and-cut model using the straight-skeleton\nmethod. Email us a copy of your design (including crease pattern, in vector format) and submit a\nfolded one with your pset. We highly recommend that you use a vector drawing program that can\ncompute accurate intersections, such as Inkscape (free), Cinderella (mostly free), Adobe Illustrator\n(commercial), AutoCAD (commercial), or Rhino3D (commercial).\nSolution: There is no one correct answer.\nProblem 3. Which of the following graphs can be cut by all-layers simple folds and one complete\nstraight cut? For each, draw a folding sequence or argue why there is none.\n\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3d.pdf\nSolution: Refer to the figure below.\n(a) This cannot be constructed by all-layers simple folds. All the edge lengths are different and\nthus there is no axis of symmetry.\n(b) This can be constructed by all-layers simple folds. It is a regular heptagon and thus can be\nfolded in half. After that the angles can be bisected.\n(c) This can be constructed by all-layers simple folds. First, note the hexagons are reflections\nover a horizontal and vertical line. In a single polygon this is a problem, as two reflections\nmay not be decomposable into one, and any fold not along symmetry intersecting the polygon\nwill move lines over non-lined paper. Here we can fold the edges down, so the hexagons lie\nalong a strip. Now fold the strip so the hexagons lie reflected across from each other, and\nthen fold again so they lie on top of each-other. It is easy to see a single hexagon can be\nconstructed by all-layers simple folds.\nAnother solution is provided in the diagram below. This involves two folds to effectively\nrotate the hexagons relative to each other, allowing them to be folded directly onto each\nother.\n(d) This cannot be constructed by all-layers simple folds. The only initial line of symmetry is\ndown the middle. After the initial fold, we have most of a triangle and may notice that the\nbisectors of the two remaining angle intersect the opposite sides at angles other than 90* .\n\nNope.\nYep.\n(a)\n(b)\nYep.\nNope.\n(c)\n(d)\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 4, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/df0d8fb94b64f3ef2c8a2edd642323b2_MIT6_849F12_ps4.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 4\nDue: Thursday, October 11th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Prove that, for any polygon with n vertices, its straight skeleton has O(n) vertices,\nedges, and faces (as mentioned in lecture). You may assume any other properties of the straight\nskeleton mentioned in lecture.\nProblem 2.\nDesign and fold (but do not cut) a fold-and-cut model using the straight-skeleton\nmethod. Email us a copy of your design (including crease pattern, in vector format) and submit a\nfolded one with your pset. We highly recommend that you use a vector drawing program that can\ncompute accurate intersections, such as Inkscape (free), Cinderella (mostly free), Adobe Illustrator\n(commercial), AutoCAD (commercial), or Rhino3D (commercial).\nProblem 3. Which of the following graphs can be cut by all-layers simple folds and one complete\nstraight cut? For each, draw a folding sequence or argue why there is none.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/ps4-3d.pdf\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 5 Solutions, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/751dda24a5fd90adf419381e1fc96bf0_MIT6_849F12_ps5_sol.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 5\nDue: Tuesday, October 23th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Characterize which of the following graphs are generically minimally rigid, generically\nnon-minimally rigid, or generically flexible. Justify your answer using any of the theorems from\nlecture.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid d.pdf\n\nSolution:\n(a) This graph is generically flexible. It has 12 vertices and 16 edges, which is too few to be rigid\nby Laman.\n(b) This graph is generically flexible. It has 8 vertices and 11 edges, which is too few to be rigid\nby Laman.\n(c) This graph is non-minimally generically rigid. By removing any of the non-crossing edges, it\nis easy to see the resulting graph can be constructed by type 1 Henneberg operations.\n(d) This graph is minimally generically rigid. The first three reverse-Henneberg operations are\nshown and the rest of the type-1 Henneberg operations needed can be seen easily.\nProblem 2. Give an efficient algorithm that checks whether a given graph is redundantly rigid,\ni.e., the removal of any single edge results in a graph that is generically rigid (not necessarily\nminimally).\nSolution: One simple way of doing this is to run the pebble covering algorithm on every sub-\ngraph created by removing a single edge. If all of these are generically rigid, then our condition is\nmet. This algorithm runs in O(V 2E) time.\nWe can do this more efficently. First, run the original pebble algorithm, making note of the\nedges which are redundant. We now enter a new phase, where we move pebbles from edges not\nmarked as redundant to edges marked as redundant, in a BFS manner, untill we see there is no\npath allowing a pebble to be moved off of an edge, or the entire graph is marked as redundant.\nPerforming this additional search requires O(V 2) time giving the same running time as the original\npebble algorithm.\nProblem 3.\nWrite down and solve the linear programs for the infinitesimal motion of the\ntensegrities below. You should be able to solve the linear programs (or prove they have no solution)\nby hand, using geometric arguments. Alternatively, Matlab, Mathematica, and Maple have linear-\nprogram solvers, and there are also online applications to do so. Blue lines represent bars; green,\ndouble lines represent struts; and red, dashed lines represent cables. Vertices with a box around\nthem are pinned to the plane.\n\n(1,0)\n(0,0)\n(0,1)\n(1,1)\n(0,3)\n(1,0)\n(2,3)\n(1,6)\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/tenseg a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/tenseg b.pdf\nSolution:\n(a) First, let us label the vertices as such:\na\nb\nc\nd\nThe two pinned vertices give us the following constraint:\ndx(a) = dy(a) = dx(c) = dy(c) = 0\nThe edges give us the following inequalities:\nab → dx(b) ≥ 0\nad → dx(d) ≤ dy(d)\nbc → dx(b) + dy(b) ≤ 0\nbd → dy(b) ≥ dy(d)\ncd → dx(d) ≥ 0\nSolving, either by symmetry or standard methods, we discover that there are no infinitesimal\nmotions.\n(b) First, let us label the vertices as such:\na\nb\nc\nd\nThe two pinned vertices give us the following constraint:\ndx(b) = dy(b) = dx(d) = dy(d) = 0\n\nThe edges give us the following inequalities:\nab → dx(a) - 3dy(a) = 0\nac → 3dx(a) - 3dx(c) - dy(a) + dy(c) = 0\nbc → dx(c) ≥ 0\ncd → dx(c) - dx(d) + 3dy(c) - 3dy(d) = 0\nAfter manipulating the equations, one can see this admits an instantaneous motion in which\npoints a and c move down and to the right with a horizontal velocity three times that of the\nvertical velocity.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Assignment",
      "title": "Problem Set 5, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/8669657089f6b6aadd64157a8bf150fd_MIT6_849F12_ps5.pdf",
      "content": "6.849: Geometric Folding Algorithms\nFall 2012 -- Prof. Erik Demaine,\nProblem Set 5\nDue: Tuesday, October 23th, 2012\nWe will drop (ignore) your lowest score on any one problem.\nProblem 1. Characterize which of the following graphs are generically minimally rigid, generically\nnon-minimally rigid, or generically flexible. Justify your answer using any of the theorems from\nlecture.\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid b.pdf\n(c)\n(d)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid c.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/rigid d.pdf\n\nSolution:\n(a) This graph is generically flexible. It has 12 vertices and 16 edges, which is too few to be rigid\nby Laman.\n(b) This graph is generically flexible. It has 8 vertices and 11 edges, which is too few to be rigid\nby Laman.\n(c) This graph is non-minimally generically rigid. By removing any of the non-crossing edges, it\nis easy to see the resulting graph can be constructed by type 1 Henneberg operations.\n(d) This graph is minimally generically rigid. The first three reverse-Henneberg operations are\nshown and the rest of the type-1 Henneberg operations needed can be seen easily.\nProblem 2. Give an efficient algorithm that checks whether a given graph is redundantly rigid,\ni.e., the removal of any single edge results in a graph that is generically rigid (not necessarily\nminimally).\nSolution: One simple way of doing this is to run the pebble covering algorithm on every sub-\ngraph created by removing a single edge. If all of these are generically rigid, then our condition is\nmet. This algorithm runs in O(V 2E) time.\nWe can do this more efficently. First, run the original pebble algorithm, making note of the\nedges which are redundant. We now enter a new phase, where we move pebbles from edges not\nmarked as redundant to edges marked as redundant, in a BFS manner, untill we see there is no\npath allowing a pebble to be moved off of an edge, or the entire graph is marked as redundant.\nPerforming this additional search requires O(V 2) time giving the same running time as the original\npebble algorithm.\nProblem 3.\nWrite down and solve the linear programs for the infinitesimal motion of the\ntensegrities below. You should be able to solve the linear programs (or prove they have no solution)\nby hand, using geometric arguments. Alternatively, Matlab, Mathematica, and Maple have linear-\nprogram solvers, and there are also online applications to do so. Blue lines represent bars; green,\ndouble lines represent struts; and red, dashed lines represent cables. Vertices with a box around\nthem are pinned to the plane.\n\n(1,0)\n(0,0)\n(0,1)\n(1,1)\n(0,3)\n(1,0)\n(2,3)\n(1,6)\n(a)\n(b)\nhttp://courses.csail.mit.edu/6.849/fall12/psets/tenseg a.pdf\nhttp://courses.csail.mit.edu/6.849/fall12/psets/tenseg b.pdf\nSolution:\n(a) First, let us label the vertices as such:\na\nb\nc\nd\nThe two pinned vertices give us the following constraint:\ndx(a) = dy(a) = dx(c) = dy(c) = 0\nThe edges give us the following inequalities:\nab → dx(b) ≥ 0\nad → dx(d) ≤ dy(d)\nbc → dx(b) + dy(b) ≤ 0\nbd → dy(b) ≥ dy(d)\ncd → dx(d) ≥ 0\nSolving, either by symmetry or standard methods, we discover that there are no infinitesimal\nmotions.\n(b) First, let us label the vertices as such:\na\nb\nc\nd\nThe two pinned vertices give us the following constraint:\ndx(b) = dy(b) = dx(d) = dy(d) = 0\n\nThe edges give us the following inequalities:\nab → dx(a) - 3dy(a) = 0\nac → 3dx(a) - 3dx(c) - dy(a) + dy(c) = 0\nbc → dx(c) ≥ 0\ncd → dx(c) - dx(d) + 3dy(c) - 3dy(d) = 0\nAfter manipulating the equations, one can see this admits an instantaneous motion in which\npoints a and c move down and to the right with a horizontal velocity three times that of the\nvertical velocity.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 1 Notes: Course Overview, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/30e4ceb32e2dd3b9cd53bedb1d69290e_MIT6_849F12_C01.pdf",
      "content": "MIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 1 Slides: Course Overview, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/3901d9bb3530ef39eaff7a1bddc89a3f_MIT6_849F12_slidesC01.pdf",
      "content": "Robotic Paper\n[MIT, Harvard,\nBerkeley, Penn]\nTo view video: http://erikdemaine.org/papers/Matter_PNAS/.\n\n[Iben, O'Brien, Demaine 2006/2009]\nFigures removed due to copyright restriction.\nRefer to: Fig. 4, 5, 7, 8 from Hayley N. Iben, James F. O'Brien, et al.\n\"Refolding Planar Polygons.\" In Proceedings of the 22nd Annual ACM\nSymposium on Computational Geometry (2006): 71-9.\nSee also http://graphics.berkeley.edu/papers/Iben-RPP-2006-06/.\n\nWatt 1784\nPeaucellier\n\nThese images are in the public domain, and are available at Project Gutenberg.\nSource: Kempe, A. B. How to Draw a Straight Line. MacMillan and Co., 1877. Co.\n\nWatt 1784\nPeaucellier\n\nThese images are in the public domain, and are available at Project Gutenberg.\nSource: Kempe, A. B. How to Draw a Straight Line. MacMillan and Co., 1877. C o.\n\nDIWire [Pensa, 2012]\nTo view videos of DIWire from Pensa Labs: http://vimeo.com/43278619 and http://vimeo.com/41460834.\n\n[You & Kuribayashi 2003]\nCourtesy of Zhong You, and Kaori Kuribayashi. Used with permission.\n\n5m →\n100m\nImages removed due to copyright restrictions.\nRefer to: Diagrams (p. 14 and 16) from Hyde, Rob. \"A Giant Leap\nfor Space Telescopes.\" Science & Technology Review (2003): 12-18.\nPhotograph of Robert J. Lang and his telescope prototype removed due to copyright restrictions.\nRefer to: Bell, Susan. \"Know How to Fold 'Em: How Origami Changed Science, From Heart\nStents to Airbags,\" LA Weekly, April 26, 2012.\n\nImage of hexameric assembly of dendrimers removed due to copyright restrictions.\nRefer to: Cover of Science 271, no. 5252 (1996): 1039-138.\nImage of molecule removed due to copyright restrictions.\nRefer to: http://www.stanford.edu/group/pandegroup/images/PS3-shot-00008.jpg\n\nCerberus\nSatoshi Kamiya\nNazgul 8.1\nJason Ku\nphoto by Jason Ku\nCourtesy of Jason Ku. Used with permission.\n\nPhotograph of Cerberus (2005) removed due to copyright restrictions.\n\nRenwick Gallery,\nSmithsonian American\nArt Museum, 2012\nDemaine &\nDemaine\n\nPhotographs of Hoberman arch removed due to copyright restrictions.\nRefer to: http://www.hoberman.com/portfolio/hobermanarch.php?projectname=Hoberman+Arch.\n\n[Cantarella,\nDemaine,\nIben, O'Brien\n2004]\n13Rectangle outline with zigzag lines folding inside; pentagon with equilateral segments spiraling inward; concentric circles formed by reduced radius; concentric circles formed by reduced radius at alternating layers.\nImage by MIT OpenCourseWare.\nRefer to: Cantarella, J., E. Demaine, et al. \"An Energy-Driven Approach to Linkage Unfolding\". SCG\n'04 Proceedings of the Twentieth Annual Symposium on Computational Geometry (2004): 134-43.\n\n[Cantarella,\nDemaine,\nIben, O'Brien\n2004]\n14Rectangle outline with zigzag lines folding inside; pentagon with equilateral segments spiraling inward; concentric circles formed by reduced radius; concentric circles formed by reduced radius at alternating layers.\nImage by MIT OpenCourseWare.\nRefer to: Cantarella, J., E. Demaine, et al. \"An Energy-Driven Approach to Linkage Unfolding\". SCG\n'04 Proceedings of the Twentieth Annual Symposium on Computational Geometry (2004): 134-43.\n\n[Cantarella,\nDemaine,\nIben, O'Brien\n2004]\n15Rectangle outline with zigzag lines folding inside; pentagon with equilateral segments spiraling inward; concentric circles formed by reduced radius; concentric circles formed by reduced radius at alternating layers.\nImage by MIT OpenCourseWare.\nRefer to: Cantarella, J., E. Demaine, et al. \"An Energy-Driven Approach to Linkage Unfolding\". SCG\n'04 Proceedings of the Twentieth Annual Symposium on Computational Geometry (2004): 134-43.\n\n[Cantarella,\nDemaine,\nIben, O'Brien\n2004]\n16Rectangle outline with zigzag lines folding inside; pentagon with equilateral segments spiraling inward; concentric circles formed by reduced radius; concentric circles formed by reduced radius at alternating layers.\nImage by MIT OpenCourseWare.\nRefer to: Cantarella, J., E. Demaine, et al. \"An Energy-Driven Approach to Linkage Unfolding\". SCG\n'04 Proceedings of the Twentieth Annual Symposium on Computational Geometry (2004): 134-43.\n\n[Cantarella & Johnston 1998]\n\n18Crease pattern on a square sheet and illustration of folded origami crane.\nImage by MIT OpenCourseWare.\n\n[Demaine, Demaine, Mitchell 1999]\n3D model by\nBitmapworld\n\nTomohiro Tachi\n\nOrigamizer\n[Tachi 2006;\nDemaine & Tachi\n2009-2012]\nCourtesy of Tomohiro Tachi. Used with permission. Under CC-BY-NC.\nCourtesy of Stanford University Computer\nGraphics Laboratory. Used with permission.\n\nMetamorphosis of the Cube\nDemaine, Demaine, Lubiw, O'Rourke, Pashchenko 1999\nTo view video: http://erikdemaine.org/metamorphosis/.\n\nTo view video: http://erikdemaine.org/metamorphosis/.\n\nAlbrecht Durer (self-portrait)\nThe Painter's Manual [1525]\nSnub Cube drawn by Cyp, licensed under Creative Commons Attribution-Share Alike 3.0 Unported\nImage of Snub cube removed\ndue to copyright restrictions.\n\nDurer's self-portrait and scan of Durer's The Painter's Manual are in the public domain.\n\n[Bern, Demaine,\nEppstein, Kuo, Mantler,\nSnoeyink 2003]\n25Perspective of tetrahedra with spikes protruding from each face; unfolded sheet of many polygons forming the tetrahedra.\nImage by MIT OpenCourseWare.\nSee also http://erikdemaine.org/papers/Ununfoldable/.\n\n[Bern, Demaine,\nEppstein, Kuo, Mantler,\nSnoeyink 2003]\n26Perspective of tetrahedra with spikes protruding from each face; unfolded sheet of many polygons forming the tetrahedra.\nImages by MIT OpenCourseWare.\nSee also http://erikdemaine.org/papers/Ununfoldable/.Perspective of tetrahedra with spikes protruding from each face; unfolded sheet of many polygons forming the tetrahedra.\n\n[Dudeney 1902]\nThis image is in the public domain.\n\n[Abbott, Abel, Charlton, Demaine, Demaine, Kominers 2010]\nCourtesy of Timothy G. Abbott, Zachary Abel, David Charlton, Erik D. Demaine,\nMartin L. Demaine, and Scott Duke Kominers. Used with permission.\n\nHinged Blocks\n\nThe Helium Stockpile\n[Demaine, Demaine,\nPalmer 2006]\nSee also http://erikdemaine.org/papers/HingedPolyforms3D_Leonardo/.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Lecture Notes",
      "title": "Lecture 1 Notes: Course Overview, 6.849 Fall 2010",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/5220fdb2c230b57027f8286c65522af5_MIT6_849F12_L01.pdf",
      "content": "MIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 2 Notes: Origami, Universality, and Simple Folds, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/3f72ba5c8eb6a7999c65b01ec0300f67_MIT6_849F12_C02.pdf",
      "content": "MIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 2 Slides: Origami, Universality, and Simple Folds, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/08215ebe04be2f94f8b17fbfdadf8b25_MIT6_849F12_slidesC02.pdf",
      "content": "I'm worried after listening to\nyour voice slightly sped up, it\nwill sound weird in person!\nI quite enjoyed the Double\nRainbow joke. :)\n\nI hope every lecture is this\nexciting! All results were really\ninteresting and proved much\nmore elegantly than I would have\nexpected.\nI'm sort of surprised we proved\nsuch a powerful theorem, so\nquickly in the class...\n\nClass should probably include\nfolding practice.\n\nCrease patterns for numbers 4, 6, 8, 9 removed due to copyright restrictions.\n\n\"Typeset\"\nJason Ku\nCourtesy of Jason Ku. Used with permission.\n\nMosely, 2002\nconvention on\nOctober 27!\nmeetings\nSunday\n(c) OrigaMIT. All rights reserved. This content is excluded from our Creative Commons\nlicense. For more information, see http://ocw.mit.edu/help/faq-fair-use/.\n\nI'm curious why page 3 of the\nnotes refer to the universality\nresults as silhouette and gift-\nwrapping.\n\n.\n.\n\n[Bern & Hayes 1996]\n[Demaine, Demaine, Mitchell 1998/2000]\n[Demaine, Demaine, Mitchell 1998/2000]\n\nHave you ever actually folded a\nmodel using this method, of\ntriangulating the surface and\nthen zigzagging across the\ntriangles? Is this technique\nused in any \"real\" or \"sensible\"\nor \"pretty\" origami models or\nis it purely for the sake of the\nuniversality result?\n\nKate / Mini-eco\nJune 2011\n\"Geeky weaves\"\n\"Woven paper\ngift topper\"\n\"woven paper basket\"\nDasa Severova\nJuly 2012\n(c) Dasa Severova. All rights reserved. This content is\n(c) Minieco. All rights reserved. This content is excluded from our Creative Commons\nexcluded from our Creative Commons license. For more\nlicense. For more information, see http://ocw.mit.edu/help/faq-fair-use/.\ninformation, see http://ocw.mit.edu/help/faq-fair-use/.\n\nCarol / extremecards.blogspot.com\n\"Inexpensive\nValentine\nKid-Crafts\"\nSplaneyo\nFebruary 2009\n\"Woven Paper Discs\"\nJanuary 2011\n\"Woven\nPaper\nHeart\nOrnament\"\n\nFebruary\n(c) Extreme Cards and Papercrafting. All rights reserved. This content\nis excluded from our Creative Commons license. For more\ninformation, see http://ocw.mit.edu/help/faq-fair-use/.\n(c) Splaneyo. All rights reserved. This content is excluded from\nour Creative Commons license. For more information,\nsee http://ocw.mit.edu/help/faq-fair-use/.\n\n\"Woven Paper Pods\" Zachary Futterer November 2011\nCourtesy of Zachary Futterer. Used with permission.\n\nGum/candy wrapper\nhandbags\n\nPhoto courtesy of garysoup on Flickr. Used with permission. Under CC-BY.\n\nperimeter\n2n2 + O(n)\nCourtesy of Erik D. Demaine, Martin L. Demaine, Goran Konjevod, and Robert J. Lang. Used with permission.\n\nWhat are unmentioned open\nquestions from slide 5?\n[Demaine, Demaine, Mitchell 1998/2000]\n\nWhat are unmentioned open\nquestions from ... Slide 6?\n\n[Demaine, Demaine, Mitchell 1998/2000]\nShift gadget\nStrip-width gadget\nCourtesy of Elsevier, Inc., http://www.sciencedirect.com. Used with permission.\n\nWas the open problem with the\n\"hide gadget\" solved? (i.e. is it\npossible with just simple folds?)\nCouldn't we fold the long strip of\npaper behind the adjacent\ntriangle so to avoid any collision?\nIt seems like you can get this by making\nvalley folds instead of mountain folds\n(folding the excess on top), then folding it\nback halfway to ensure the right color is up.\n\nCourtesy of Elsevier, Inc., http://www.sciencedirect.com. Used with permission.\nRead the rest of the abstract: http://erikdemaine.org/papers/MapFolding/.\n\nMotivation. In addition to its inherent interest in the\nmathematics of origami, our study is motivated by\napplications in sheet metal and paper product\nmanufacturing, where one is interested in determining\nwhether a given structure can be manufactured using a\ngiven machine.\n[Arkin, Bender, Demaine, Demaine, Mitchell, Sethia, Skiena 2000/2004]\nCourtesy of Elsevier, Inc., http://www.sciencedirect.com. Used with permission.\nRead the rest of the motivation of the paper: http://erikdemaine.org/papers/MapFolding/.\n\nElectrabrake Manual Folder\nPress & Shear\nI mages of Electrabrake removed due to copyright restrictions.\nRefer to: http://www.youtube.com/watch?v=l_stw54dfZ4.\n\nLuxury and Elegant\nHome Design In\nThe World /\ndesigninteriorart.com\nJuly 2011\nPh\n\notographs of Flatform 322 removed due to copyright restrictions.\nRefer to: http://www.dezeen.com/2010/07/22/flatform-322-by-toby-horrocks-and-kristian-aus/.\nPhotograph of cardboard sheet folded into furniture removed due to copyright restrictions.\n\n\"S\nUf\nhe\nuk\ne\nK\ntse\nesk\nat\ni\n\"\nn & Efecem Kut\nC\nuk\nourtesy of Ufuk Keskin & Efecem Kutuk. Used with permission.\n\n\"Flat-Pack Furniture\" dornob\nCourtesy of Kapteinbolt. Used with permission.\n\nI mages of tables removed due to copyright restrictions.\nRefer to: http://homegallerydesign.com/folded-steel-design-furniture-ideas-unique-coffee-table/.\n\nIn a simple fold, when I fold\n180 along a crease is it\nallowed to bend the rest of the\npaper so that the parts of the\npaper can pass through each\nother? And the end product\nafter each simple fold step\nmust be a flat 1-D surface,\nright?\n\nI got lost on the proof on flat\nfoldable → mingling and\ninducting from a sequence of\ncrimps and end folds (page 8,\nhandwritten notes). Can we go\nthrough an example?\nI wouldn't mind hearing more\ndetail/explanation/deconfusion\nabout mingling and \"forever\",\nsince that confused us quite a bit\n\nIf given a mountain-valley\nassignment, I am still confused\nabout how an algorithm would\nwork to determine through\ncrimps/end folds if the folding\nwould be valid.\n\n\"forever\" (from about the 1-hour\nmark) is unsatisfying. Does\ncrimping change the parenthesis\npattern? (Fortunately, the proof\nthat flat-foldability implies\nmingling also gives mingling\nforever.) Is there an easierly\ncheckable condition?\n\nIs it correct that you can\nalways take a 1-D MV pattern\nand make it flat foldable by\nadding folds? It seems like\nyou can always create the\nmingling property at any\nmaximal non-mingling\nsequence by adding a fold\nnear the end.\n\nWhat could it possibly mean\nto fold something in 4+\ndimensions? How does one\nimagine such a folding?\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Lecture Notes",
      "title": "Detailed Descriptions of Class 2 and Lecture 2",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/0e97da43326794c1cb8197af1081cfa2_MIT6_849F12_desc02.pdf",
      "content": "Session 2 (In preparation for Class 2, students are asked to view Lecture 2.)\nTopics for Class 2\nOrigami intro: Origami alphabet, higher dimensions.\nUniversality: Terminology history, practical strip folding, pseudopolynomial bounds, seam placement,\nhide gadget via simple folds?\nSimple folds: Metal/wood/plastic motivation, definition, examples, linear‐time algorithm, extra creases.\nDetailed Description of Class 2\nThis class is structured around the many excellent questions that students asked and suggestions they\nmade (with a few highlights in bold):\n-\nActual folding (we'll fold the numerals 6, 8, 4, 9 from an origami alphabet!)\n-\nSome history of where a few terms come from.\n-\nPractical examples of strip folding.\n-\nPseudopolynomial bounds on strip folding: what they are and what's (un)known.\n-\nSeam placement (some skipped content in L02's notes)\n-\nOpen problem about simply folding the hide gadget: let's solve it together!\n-\nMotivation for simple folds: metal/wood/plastic bending\n-\nDefinition of simple folds: more precise\n-\nExamples of flat‐foldable vs. mingling 1D mountain‐valley patterns\n-\nAlgorithm for testing 1D flat foldability in linear time (new ‐‐ simpler than textbook!)\n-\nMaking any mountain‐valley pattern flat foldable by adding extra creases\n-\nHigher‐dimensional folding\nTopics for Lecture 2\nOrigami intro: Piece of paper, crease pattern, mountain‐valley assignment.\nUniversality: Folding any shape (silhouette or gift wrapping).\nSimple folds: 1D flat‐foldability characterization, 2D map‐folding algorithm.\nDetailed Description of Lecture 2\nThis lecture kicks off a series of lectures about origami. It focuses on a relatively simple kind of origami,\ncalled \"simple folds\", which involve folding along one straight line by ±180 degrees. These are some of\nthe most \"practical\" types of folds from an automated manufacturing standpoint, are well‐studied\nmathematically, and a good warm‐up before we get to complex origami folds which fold many creases\nat once.\nOn the design side, we'll see how simple folds are enough to fold any 2D shape, and with slightly more\ngeneral folds, we can fold any 3D shape even with a two‐color pattern on the surface.\nOn the foldability side, we'll see how to efficiently determine whether a crease pattern with mountains\nand valleys indicated can be folded flat in two interesting cases: 1D pieces of paper (in other words,\nparallel creases in a strip of paper) and 2D rectangular maps.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Lecture Notes",
      "title": "Lecture 2 Notes: Origami, Universality, and Simple Folds, 6.849 Fall 2010",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/8035c9293c1c49bdfb2cbb4c478e5fdd_MIT6_849F12_L02.pdf",
      "content": "MIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Lecture Notes",
      "title": "Lecture 2 Slides: Origami, Universality, and Simple Folds, 6.849 Fall 2010",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/8c0a1b4eaa7ceb04936f6fb47792556e_MIT6_849F12_slidesL02.pdf",
      "content": "Image by MIT OpenCourseWare.\n\nThree diagrams of a zebra outline with differing amount of detail in folds.\nImage by MIT OpenCourseWare.\n\nProcess diag\nrams showing\na strip of\np\na\np\ne\nr folded in half\na\nt\nvarying angles.\nImage by MIT OpenCourseWare.\n\nP\nr\no\nc\ness diagrams showing\na strip of paper folded in half at varying angles.\nProcess diag\nrams showing\na strip of\np\na\np\ne\nr folded in half\na\nt\nvarying angles.\nImages by MIT OpenCourseWare.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 3 Notes: Single-Vertex Crease Patterns, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/ba8055ff116099a8c4fd0f058ad83b7a_MIT6_849F12_C03.pdf",
      "content": "MIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    },
    {
      "category": "Resource",
      "title": "Class 3 Slides: Single-Vertex Crease Patterns, 6.849 Fall 2012",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/6-849-geometric-folding-algorithms-linkages-origami-polyhedra-fall-2012/7196e7c1993ca0b0dfd18c84440ab471_MIT6_849F12_slidesC03.pdf",
      "content": "[...] you refer to a result from L2\nthat you can determine in linear\ntime whether something folds\nflat. Is this referring to the\nmingling algorithm? I haven't\nthought about this in detail, but\nit appears to take something like\nquadratic time [...]\n\nI was a tad confused on the local\nfoldability algorithm. An\nexample in class actually running\nthe algorithm would probably\nclear it up.\nCan you clarify what you\nmean by a path or cycle?\n\nT\nw\no\n\ns\nq\nu\na\nr\ne\ns\n=\nw\ni\nt\nh\n\na\nn\ng\nles marked with equal or non-equal signs, and edges highlighted in pink.\nImage by MIT OpenCourseWare.\n\n>360° cones could be made by\nfabric -- perhaps you want to\nfold a garment along its seams,\nbut the seamed sections meet in\na point and the sum of the angles\nis greater than 360° (e.g.,\nunderarm of a shirt)\nIllustration of a green t-shirt.\nImage by MIT OpenCourseWare.\n\nScreen capture of videos removed due to copyright restrictions.\n\n\"T-Shirt Folding Machine\" gotcsin February 2008 youtu.be/rMnNHA_GrT8\nScreen capture of videos removed due to copyright restrictions.\n\nIf flat foldability is to fold a 2D\nsheet of paper in 2 dimensions,\nare there results for \"flat\nfoldability\" in higher dimensions,\ni.e. to fold a d-dimensional sheet\nof paper in d dimensions? Can the\nresult be generalized to higher\ndimensions?\n\nImages removed due to copyright restrictions.\n\nRefer to: Kawasaki, Toshikazu. \"On High Dimensional Flat Origamis.\" Proceedings of the First\nInternational Meeting of Origami Science and Technology (1989): 131-41.\n\nImages removed due to copyright restrictions.\n\nRefer to: Kawasaki, Toshikazu. \"On High Dimensional Flat Origamis.\" Proceedings of the First\nInternational Meeting of Origami Science and Technology (1989): 131-41.\n\nFig. 1.1, 1.2, 1.3 removed due to copyright restrictions.\n\nRefer to: Kawasaki, Toshikazu. \"On High Dimensional Flat Origamis.\" Proceedings of the First\nInternational Meeting of Origami Science and Technology (1989): 131-41.\n\nRead the abstract: Inoue, A., R. Itohara, et al. \"CG Image Generation of Four-Dimensional Origami.\"\nThe Journal of The Institute of Image Information and Television Engineers 60 (2006):1630-47.\n\nD\niag\nram\nof\na plane rotated around its x-\na\nxis\n\na\nn\nd\n\nwireframe d\niagrams of tetrahed\nrons.\nImage by MIT OpenCourseWare.\nRefer to: Inoue, A., R. Itohara, K. Yajima, et al. \"CG Image Generation of Four-Dimensional Origami.\"\nThe Journal of The Institute of Image Information and Television Engineers 60 (2006): 1630-47.\n\nS\ni\nx\n\nd\ni\na\ngra\nms of clusters of lin\ne\ns\n\nt\nh\na\nt\n\nf\no\nr\nm\nth e wireframe of a b\nird .\nImage by MIT OpenCourseWare.\nRefer to: Inoue, A., R. Itohara, K. Yajima, et al. \"CG Image Generation of Four-Dimensional Origami.\"\nThe Journal of The Institute of Image Information and Television Engineers 60 (2006): 1630-47.\n\nWe've spent a good chunk of time\ntalking about flat foldability.\nWhat is the significance to this?\nWhy is so much work done\ncoming up with proofs and\nalgorithms regarding this?\n\n\"Ralf Konrad's\nRubik's Cube\nTessellation\"\n\nJorge Jaramillo\n/ georigami\n\nJanuary 2007\nPhoto courtesy of georigami on Flickr. Used with permission. Under CC-BY.\n\n[EASi Engineering]\nAirbag Folding\n[BRL Inc]\ncompu\nc\nta\nre\ntional\nases ba\nor\nse\nig\nd o\nam\nn\ni d\n\nesign\nCourtesy of EASi Engineering GmbH. Used with permission.\n(c) Biomx Consulting. All rights reserved. This content is excluded from our Creative\nCommons license. For more information, see http://ocw.mit.edu/help/faq-fair-use/.\n\nThree sets of diagrams of contracting ridges in a surface.\nMiura-ori\nPerturbation of Miura-ori\nFreeform Miura-ori\nImage by MIT OpenCourseWare.\nRefer to: Tachi, Tomohiro. \"Generalization of Rigid Foldable Quadrilateral Mesh Origami.\" Proceedings\nof the International Association for Shell and Spatial Structures (IASS) Symposium 2009.\n\nMIT OpenCourseWare\nhttp://ocw.mit.edu\n6.849 Geometric Folding Algorithms: Linkages, Origami, Polyhedra\nFall 2012\nFor information about citing these materials or our Terms of Use, visit: http://ocw.mit.edu/terms."
    }
  ]
}