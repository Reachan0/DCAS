{
  "course_name": "Computing and Data Analysis for Environmental Applications",
  "course_description": "This subject is a computer-oriented introduction to probability and data analysis. It is designed to give students the knowledge and practical experience they need to interpret lab and field data. Basic probability concepts are introduced at the outset because they provide a systematic way to describe uncertainty. They form the basis for the analysis of quantitative data in science and engineering. The MATLAB® programming language is used to perform virtual experiments and to analyze real-world data sets, many downloaded from the web. Programming applications include display and assessment of data sets, investigation of hypotheses, and identification of possible casual relationships between variables. This is the first semester that two courses, Computing and Data Analysis for Environmental Applications (1.017) and Uncertainty in Engineering (1.010), are being jointly offered and taught as a single course.",
  "topics": [
    "Engineering",
    "Computer Science",
    "Data Mining",
    "Environmental Engineering",
    "Mathematics",
    "Probability and Statistics",
    "Engineering",
    "Computer Science",
    "Data Mining",
    "Environmental Engineering",
    "Mathematics",
    "Probability and Statistics"
  ],
  "syllabus_content": "Course Meeting Times\n\nLectures: 2 sessions / week, 1.5 hours / session\n\nLecturer\n\nProf. Dennis Mc Laughlin\n\nPrerequisites\n\n18.01, 18.02\n\nDescription\n\nClass periods will generally be divided into 40 minutes of lecture and 40 minutes of related hands-on computer work using laptops available in the classroom. In the beginning of the semester recitations will provide computer programming background for students without previous programming experience. Later, these recitations will be used for more in-depth virtual experiments and data analysis exercises and for discussion of homework problems.\n\nAssignments\n\nThe class includes several homework sets and three quizzes held during the two hour recitation periods. The grade will be based 40% on homework and in-class exercises and 20% on each of the three quizzes. The lowest homework grade will not be counted. There will be no final exam.\n\nReferences\n\nThe primary text is Devore, Jay L.\nProbability and Statistics for Scientists and Engineers.\nDuxbury Press, 2000. (Noted by D in the\nreadings\nsection.) Students not familiar with MATLAB(r) should also consider purchasing one of the many introductory texts on this programming package. A reasonable choice that is easy to read and moderately priced is Etter, D.\nIntroduction to MATLAB(r) for Engineers and Scientists.\nPrentice-Hall, 1996. (Noted by E in the\nreadings\nsection.)",
  "files": [
    {
      "category": "Resource",
      "title": "ps03_1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/204d32a95ee646ab3562425169e137ad_ps03_1.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017/1.010 Computing and Data Analysis for Environmental\nApplications/Uncertainty in Engineering\n\nProblem Set 1: Displaying data, MATLAB programming\nDue: Thursday, Sept. 18, 2003\n\nPlease turn in a hard copy of your MATLAB source file as well as all printed outputs\n(tables, plots, etc.) required to solve the problem.\n\nProblem 1\n\nGo to the US census bureau web site at http://www.census.gov/statab/www/ranks.html to\ndownload data giving personal income and other information by state. To do this click\non the \"Personal Income Per Person\" Excel link on the web site and save an Excel file\ncontaining the desired (1999) income data as well as various other things in your own\nworking directory. Open the file in Excel and copy all lines in column 2: income per\ncapita for each of the 50 states plus DC. Go into MATLAB and open a new file. Paste\nthe income data in the file and save it as a .txt file. The file should consist of one column\nof numbers, with no text. Use the find and replace ... option under edit to remove all\ncommas (the commas confuse MATLAB). You can use another editor if you prefer.\nAfter you have simplified the file in this way save it.\n\nYou should write a MATLAB script in a file called census.m to process the census data.\nTo bring the data into MATLAB you can use the load command:\nload filename.txt\n\nNow repeat the entire download process for the \"Energy Consumption Per Person\"\nlink in the census web site, creating a new array called energy in your script. Pick two\nother variables of interest to you from the list provided on this site. In your script create\narrays for each of these indicators with appropriate names, just as you did for income and\nenergy. Be sure to divide totals by population if you want to compare per capita values.\n\nNow include in your MATLAB script the ability to plot histograms and CDFs for each of\nthe four data sets you downloaded from the census site. Also compute the mean, median,\nand variance for each data set. Plot a scatter diagram of energy consumption vs. income.\nPlot two other scatter diagrams of interest to you, selecting from the variables offered on\nthe web site. Briefly indicate what each of these three scatter diagrams suggest to you.\nIn your discussion pay particular consideration to outliers that may violate a general\ntrend.\n\nBe sure to include labels on the plots you produce. The preferred approach is to create\nthese labels from within the script, by using the xlabel, ylabel, and title functions (see\nMATLAB Help and the example from Recitation 1). Be sure also to turn in the\nMATLAB output giving the values you calculated for mean, median, and variance in\naddition to the plots and your program.\n\nProblem 2\n\nWrite a MATLAB script that computes tidal elevation h (in m) from the following three\nterm series:\n\nh(t) = 0.2Sin(0.5ω t) + 3.0Sin(ω t) + 1.0Sin(2ω t)\n\nwhere ω = 2π/24 hr-1. Define a vector time with 1001 values [0. 0.1 0.2 ..... 100.0.]\nspaced every 0.1 hours from t = 0 to t = 100 hrs. Use the vector capabilities of the\nMATLAB sin function to compute a vector of 1001 corresponding tidal elevations with a\nsingle equation. Read the MATLAB help discussion of the sin(X) function to make sure\nthat you understand how it provides element-wise evaluations of vector arguments. Plot\nthe tidal elevations from vs. time. Label both axes and include a plot title."
    },
    {
      "category": "Resource",
      "title": "ps03_2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/9d963049934c1ad32a9204c09c27e96c_ps03_2.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017/1.010 Computing and Data Analysis for Environmental\nApplications/Uncertainty in Engineering\n\nProblem Set 2: Combinatorial Methods for Deriving Probabilities\nDue: Thursday, September 25, 2003\n\nProblem 1\n\nThis is a classic combinatorial probability problem that can be solved by applying the\ncounting and combinatorial principles from Lecture 4. Suppose that three balls are\ndrawn successively and randomly from a box containing 6 red balls, 4 white balls, and 5\nblue balls that are identical except for their colors. Determine the probability that these\nballs are drawn in the order red, white, blue if 1) each ball is replaced after it is drawn\n2) each ball is not replaced after it is drawn. Note that since order is important you need\nto consider permutations rather than combinations when evaluating the number of\noutcomes for each event.\n\nProblem 2\n\nThe figure provided below shows a simple (five pipe) water distribution network\ndesigned to deliver water from a reservoir to a town. Suppose that the probability of any\nsingle pipe failing during an 7.0 Richter earthquake is p. What is the probability that\nsome water will still get through after such an earthquake? Evaluate for p=0.3.\n\nReservoir\nTown\n\nProblem 3\n\nIn the game of poker five cards are drawn from a pack of 52 well shuffled cards. Find the\nprobability of drawing 3 tens and 2 jacks.\n\nProblem 4\n\nSuppose that cracks are present in 8 out of 20 bridges in a particular city. If a sample of 5\nbridges is inspected at random what is the probability that exactly 4 will these will have\ncracks? At least 4?\n\nProblem 5 (another classic)\n\nWhat is the probability that at least two students in a class of 30 students (e.g.\n1.017/1.010) will have the same birthday? This problem requires the computation of\nvery large factorials, which is best done on MATLAB or a calculator.\n\nProblem 6\n\nWrite a MATLAB program that duplicates one of the 5 experiments described in the\nabove problems (your choice). Use a virtual experiment/relative frequency approach to\ncompute all probabilities. Use at least 10,000 replicates to obtain a reasonable estimate\nof the exact probabilities. Please contact us if you need help with the required MATLAB\nprogramming. Also, feel free to do more than one program if you like (it's optional but\nwe will check your codes for you)."
    },
    {
      "category": "Resource",
      "title": "ps03_3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/dbe4047eb475e9ab207f0f98a0d2a411_ps03_3.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017 Computing and Data Analysis for Environmental Applications\n\nProblem Set 3: Conditional Probability, Bayes Theorem, and Random Variables\nDue: Thursday, October 2, 2003\n\nPlease turn in a hard copy of your MATLAB source file as well as all printed outputs\n(tables, plots, etc.) required to solve the problem.\n\nProblem 1\n\nThere are three modes of transporting material from Boston to Houston: by land (either\nby highway or railway), sea, or air. Half of the materials are transported by land, 20% by\nsea, and the rest by air. Also, 60% of all land transportation is by highway and the rest is\nby rail shipments.\n\nCargo traveling by each mode of transportation has a different probability of being\ndamaged during shipment. The percentages of damaged cargo are as follows: 12% by\nhighway, 3% by rail, 5% by sea, and 2% by air.\n\nAnswer the following two questions both analytically and through a virtual experiment\nusing MATLAB.\n\na.) What percentage of all cargoes may be expected to be undamaged?\nb.) If a damaged cargo is received, what is the probability that it was shipped by\nland? By sea? By air?\n\nProblem 2\n\nThe National Ambient Air Quality Standard (NAAQS) for Ozone is 0.08 parts per\nmillion. In Los Angeles during the month of August, the probability that this standard is\nexceeded on any given day is approximately 0.3.\n\nPlot the Probability Mass Function (PMF) and the Cumulative Distribution Function\n(CDF) of the number of days during the month of August that exceed the NAAQS for\nOzone in LA by hand.\n\nPerform a Monte Carlo simulation using MATLAB to simulate 1000 months of August.\nUse the results to plot the PMF and CDF from your simulation. What is the probability\nthat the NAAQS will be exceeded on at least 5 out of 31 days? What is the probability\nthat the NAAQS will be exceeded on fewer than 15 days? On between 2 and 10 days?"
    },
    {
      "category": "Exam",
      "title": "quiz00_1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/2d1fae925747a28a863982130aa9c119_quiz00_1.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017 Computing and Data Analysis for Environmental Applications\n\nQuiz 1 (Solutions)\nThursday, October 5, 2000\n\nPlease answer Problems 1-5 and either Problem 6 or Problem 7 (maximum score = 100 points):\n\nProblem 1 (15 points)\n\nSuppose a = [ 4 3 1]\nb = [ -3 2 7]\n\nEvaluate the following expressions ...\n\ntest=a.*b>6\nftest=find(a.*b>6)\n\nProblem 2 (15 points)\n\nWrite a MATLAB script which generates the sequence given by:\n\nN(i) = 1 i = 1,2\nN(i) = N(i - 1) + N(i - 2) i > 2\n\nThe first few number of this sequence are: 1, 1, 2, 3, 5, 8, 13, ...\n\nProblem 3 (15 points)\n\nSoil saturation (S) is the fraction of a soil's pore space filled by water. Suppose that this saturation\nis related to the capillary pressure (P) of soil water as follows:\n\nS = 1\n\nfor P < 10\nS = 1 + 0.01(10 - P)\nfor 10 ≤ P < 100\nS = 0.1\n\nfor P>100\n\na) Write a MATLAB function called sp which takes a vector of P values and returns a vector of\ncorresponding S values.\nb) Write a MATLAB function called plotsp that plots an S vs P curve over the range P = 0 to\n150. The function plotsp should call the function sp to obtain values for the plotting.\n\nProblem 4 (15 points)\n\nWrite a MATLAB function srand which computes y = sin(x) when x is a vector of n random\nnumbers distributed uniformly over the interval between 0 and 2π (inclusive). The function should\ntake n as an argument. It should also plot a histogram of y . All statements in this program should\nuse arrays.\n\nProblem 5 (15 points)\n\nPlease identify errors in the following MATLAB program and write a revised version with these\nerrors corrected.\n\nfunction main(b)\nx=subfunc(a)\na=b+4;\nreturn\nfunction subfunc(a)\nx=a.^2+1;\nreturn\n\nProblem 6 (25 points)\n\nWrite a MATLAB function called check that uses the internal function load to read in two\nvectors of rainfall data from two separate files (e.g. rain1.dat and rain2.dat). The two\nvectors can be of different lengths. If they are of different lengths, call the shorter array short\nand the longer array long. If the two input arrays are of the same length either could be called\nshort and the other called long. The function check should define a new array called\nextended which is the same length as long. The first length(short) values in extended\nshould be the same as those in short. The remaining should be equal to the values in the\ncorresponding positions at the end of long. The function check should return the minimum and\nmaximum values of short, long and extended (6 numbers) in an array.\n\nProblem 7 (25 points)\n\nThe simple water distribution system shown below consists of a 2 pipes with conductivities K12\nand K23 and 3 junctions. The pressure P1 at junction 1 is specified (e.g. it is proportional to the\nconstant height of water in a supply reservoir). The pressures P2 and P3 at junctions 2 and 3 are\nunknown. Water is withdrawn at a rate Q2 at junction 2 and Q3 at junction 3.\n\nK23\nK12\nQ12\nQ23\nQ3\nQ2\nP3\nP2\nP1\n\nThe pressures and flows in the system satisfy the following equations, which are derived from the\nconservation of mass principle and the definition of conductivity as the ratio of flow rate to\npressure difference:\n\nQ12 = (P1-P2)*K12\nQ23 = (P2-P3)*K23\nQ12-Q2-Q23=0\nQ23=Q3\n\nWrite a MATLAB function that obtains the inputs P1, K12, K23, Q1, and Q2 through the function\nargument and returns an array consisting of the values P2, P3, Q12, and Q23 obtained by solving\nthe above set of 4 equations in the 4 unknowns P2, P3, Q12, and Q23. [HINT: Rearrange the four\nequations so they have the standard matrix form needed to use the MATLAB equation solution\noperator \\]."
    },
    {
      "category": "Exam",
      "title": "quiz00_2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/03b862231aac81c61856ae82b89ae9fb_quiz00_2.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017 Computing and Data Analysis for Environmental Applications\n\nQuiz 2\nThursday, November 9, 2000\n\nPlease answer any 5 of the following 6 problems (maximum score = 100 points):\n\nProblem 1 (20 points)\n\nSuppose that a remote sensing signal z (measured in watts/m2) is the sum of two components x and\ny which represent emissions from two adjacent regions on the ground (i..e. z = x + y ). The\nindependent discrete random variables x and y can have the following values x = {1 ,2 }, y = { 1 ,\n2}, depending on land use. The probabilities of these x and y values are:\n\npx(1) = 0.3 px(2) = 0.7\npy(1) = 0.8 py(2) = 0.2\n\na) What are the possible values for z (present as a table)?\n\nb) Derive the probability mass function pz(z), assuming that x and y are independent (i.e. pXY(x,y) =\npX(x)pY(y)). Plot the probability mass function and cumulative distribution of z vs z.\n\nc) What is the mean of z?\n\nProblem 2 (20 points)\n\nSuppose that we want to have a representative set of air samples to evaluate air quality in a city.\nWe suspect that ozone levels exceed air quality standards 20% of the days. These high ozone days\nare distributed randomly throughout the year. We collect 12 samples, one on the first of each\nmonth. Use a normal approximation to evaluate the probability that we obtain 4 or more samples\nthat violate the standard (tables attached) if the ozone levels do, in fact, exceed the standard on 20%\nof the days?\n\nProblem 3 (20 points)\n\na) A geological formation consists of 9 layers -- 4 shale layers, 3 sandstone layers, and 2 limestone\nlayers. We presume that these layers were laid down at random. Now suppose that we drill a\nborehole through the top 3 layers. What is the probability that these sampled layers are all shale?\n\nb) Write a MATLAB program which estimates the probability in Problem 3 using a Monte Carlo\ntechnique.\n\nProblem 4 (20 points)\n\n(Try to answer Part b for 1/2 credit even if you cannot answer Part a)\n\na) Consider the following simple model of runoff production, where Q = runoff (mm/hr), R =\nrainfall (mm/hr), and I = infiltration capacity:\n\nQ = 0 if R < I\nQ = R - I if R ≥ I\n\nSuppose that R has an exponential probability density function fR(R) = aexp(-aR) with\ndistributional parameter a = 0.2 (mm/hr)-1. Plot the cumulative distribution function of Q when I =\n3 mm/hr. Make your plot as accurate as possible. {HINT: The random variable Q is a mixed\ndiscrete/continuous random variable).\n\nb) Write a MATLAB program which uses a Monte Carlo approach to evaluate the probability that\nQ = 0. Assume that you have available the internal MATLAB function exprnd(mu,m,n),\nwhich provides an m by n array of independent exponentially distributed random variables with\nparameter mu = 1/a.\n\nProblem 5 (20 points)\n\nA few days after a heavy rain storm a particular Boston harbor beach can be affected by combined\nsewer discharges at three points (A1, A2, and A3) with probabilities of overflowing of 0.2, 0.5, and\n0.3, respectively (one and only one of the points will discharge in any given storm). The\nprobability that post-discharge coliform levels are high enough to require a beach closing is 0.3,\n0.4, 0.2, for a discharge from A1, A2, and A3, respectively. What is the probability that A1\ndischarged during a particular storm if the beach was subsequently required to close? What is the\nprobability that the beach will have to be closed after a storm?\n\nProblem 6 (20 points)\n\nFind the mean and variance of a random variable x with the following probability density function:\n\nfX(x) = 6x(1 - x) for 0 < x ≤ 1\n\nPlot the density function and the cumulative distribution function of x."
    },
    {
      "category": "Exam",
      "title": "quiz00_3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/96ab3676c5f58e6ca08ea3e43f46f465_quiz00_3.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017 Computing and Data Analysis for Environmental Applications\n\nQuiz 3\nTuesday December 12, 2000\n\nPlease answer any 5 of the following 6 problems (maximum score = 100 points):\n\nProblem 1 (20 points)\nConsider a random sample consisting of n pairs of concentrations (X1, Y1), (X2, Y2),..., (Xn, Yn) for\ntwo solutes X and Y. Suppose that you wish to fit the following trend function to the data:\n\ny(x) = a1x\n\nAssume that the measurements can be described by:\n\nYi = a1Xi + Vi ; i = 1,... n\n\nwhere the Vi are a set of independent, identically distributed random variables with mean 0 and\nvariance 1.0.\n\na) Derive an estimator for the parameter a1.\n\nb) Show that this estimator is unbiased\n\nProblem 2 (20 points)\n\nDerive a two-sided 90% confidence interval for the mean of a normally distributed random variable\nX given the following random sample of X. State any assumptions that you need to make.\n\n[x1, x2 , ... xn] = [ 2, 1, -8, 3, 6, 4, 2, 0, 5, -4]\n\nProblem 3 (20 points)\n\nThe results of a water quality screening test are summarized by assigning X = 0 if the sample fails\nand X = 1 if it passes. A series of tests on a set of n = 100 independent samples drawn from the\nsame population yields 80 passes and 20 fails. Define a test statistic and provide the p value for a\ntwo-sided test of the hypothesis that the fraction of passes in the population is equal to 0.7. Use a\nsketch to illustrate the test statistic distribution and the p value.\n\nProblem 4 (20 points)\n\nWrite a MATLAB program which uses a Monte Carlo approach to evaluate and plot a sample\ndensity function of the maximum annual streamflow observed in a random sample of 20 values.\nAssume that the annual streamflow has the following exponential probability density:\n\notherwise\n\n;\n\n)\n(\n\n;\n\nexp\n)\n(\n=\n≥\n\n-\n=\nx\nf\nx\na\nx\na\nx\nf\nX\nX\n\nwhere a is the mean annual streamflow. The probability distribution of the maximum for this case\nis an example of an extreme value distribution. Suppose that the mean and maximum\nstreamflows obtained from 20 actual annual stream flow measurements are 10 m3/sec and 50\nm3/sec. How would you use your program to estimate the probability of obtaining, in another 20\nyear sample, a maximum greater than 50 m3/sec.?\n\nProblem 5 (20 points)\n\nSuppose that you are given the MATLAB function ahatcdf(aval,a) which returns the\ncumulative distribution function (CDF) value of a test statistic ahat for any value aval of this\nstatistic. The test statistic is used to test hypotheses about the distributional property a of a sampled\nrandom variable X (e.g a could be the mean of X). Note that the CDF of ahat depends on the\nparameter a. You are also given a function ahat(x) that returns the ahat (test statistic) value\nobtained from a particular random sample of X. The n measurements in the sample are assembled\nin an n vector x.\n\na) Write a MATLAB function pvalue which returns the p value for a one-sided test of the\nhypothesis H0: a = 1 vs. the alternative H1: a > 1 The data vector x should be passed to\npvalue through the function argument.\n\nb) Suppose that ahat is a positive continuous random variable (e.g. a sum of squares). Sketch a\nhypothetical probability density function of ahat showing the H0 acceptance region (A0) for the\nhypothesis test in Part a). Indicate on your sketch the relationship between the p value and the value\nof ahat derived from the sample x.\n\nProblem 6 (20 points)\n\nSuppose that you wish to test the hypothesis H0: θ = 0 vs. the alternative H1: θ = 1. You have\nderived that the probability distribution function of your test statistic given H0: θ = 0 is normal with\nmean 0.0 and variance 1. Also, you have derived that the probability distribution function of your\ntest statistic given H1: θ = 1 is normal with mean 1.0 and variance 4. What are the Type I and Type\nII error probabilities if your H0 acceptance region is A0 = [-inf, 0.5]? Provide a sketch which\nidentifies each of these probabilities."
    },
    {
      "category": "Resource",
      "title": "practice01_3sol.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/a0a9d0ccbd556d6f188de0865c57b6ea_practice01_3sol.pdf",
      "content": "MASSACHUSETTS INSTITUTE OF TECHNOLOGY\nDepartment of Civil and Environmental Engineering\n\n1.017 Computing and Data Analysis for Environmental Applications\n\nPractice Quiz 3\nDecember 5, 2001\n\nPlease answer all questions on a separate piece(s) of paper with your name clearly identified:\n\nProblem 1 (15 points)\n\nAnswer each of the following questions in a few sentences:\n\na) Suppose that y is a random variable (e.g nitrate concentration in a lake). Also, suppose that\nyou have taken 20 nitrate measurements y1, y2, ..., y20 at various times and locations.\nExplain the difference between E[y], the expectation of y, and my, the sample mean of y.\nb) Define the concept of a random sample and explain why it is useful\nc) Why is the sample mean of y1, y2, ..., y20 a \"good' estimate of E[y]?\n\nSolution:\n\na) The random variable y is characterized by its probability density, which describes the\nlikelihood of obtaining an observation in a given range (or interval) of values. The\nexpectation E[y] is the first moment of this density. It is a property of the density rather\nthan any particular set of data. The sample mean my is the arithmetic average of a\nparticular set of data and is derived from the data rather than the density.\n\nb) A sample is a set of measurements y1, y2, ..., yn of some random variable y with a\nprobability density fy(y). The n measured values can be viewed as particular outcomes\nassociated with n related random variables, one for each member of the sample. Generally\nspeaking, these n random variables are described by a multivariate probability distribution.\nIf the sample is random, the yi's are independent and all have the same marginal probability\ndensity fy(y) as the original variable y. These properties greatly simplifies the task of\nderiving the probability distributions of estimates computed from the sample.\n\nc) The sample mean is a good estimate of E[y] because it is unbiased [E(my)=E(y)] and\nconsistent [Var(my) goes to zero as the sample size approaches infinity]. Together, these\nproperties imply that the sample mean converges to the expected value of y as the sample\nsize increases.\n\nProblem 2 (15 points)\n\nSuppose that the soil porosity y is a random variable that varies over space. Porosity is a fraction\ndefined as the volume of voids (volume not occupied by soil grains) divided by the total volume of\nthe soil sample. Suppose that you wish to estimate the expected value E[y] of the porosity from 5\nobservations.\n\na) What is a reasonable probability density to assume for y ? Is it better to estimate this\ndensity from the 5 samples or to simply postulate it's form?\nb) What would you use as an estimate of E[y]?\nc) How would you derive the probability distribution (e.g. CDF) of your estimate? What\ncould you do with this distribution?\n\nSolution:\n\na) Since porosity is constrained between 0.0 and 1.0 a uniform probability over this (or\nperhaps a more limited range is a reasonable choice. A CDF or PDF estimated from a\nsample size as small as 5 is unlikely to be very informative. An assumed uniform density is\nprobably a better choice.\nb) The sample mean is a good choice, for the reasons given in the solution to Problem 1c.\nc) Since the sample is quite small a large sample assumption is not really justified. It is\nprobably better to carry out a stochastic simulation by generating many (thousands) of 5\nmeasurement samples from a uniform random number generator with specified lower and\nupper bounds. The sample CDF obtained from the simulation could be used to test\nhypotheses about the properties of y or, if the bounds used in the generator are varied, to\nconstruct confidence intervals for these properties.\n\nProblem 3 (20 points)\n\nConsider the following 10 samples of suspended sediment concentration (in mg/L), taken at various\ndistances up an estuary (rounded off to facilitate calculation):\n\n6 10 11 10 14 10 13 4 7 6\n\na) Derive a two-sided 90% confidence interval (10% significance level) for the expected value\nof sediment concentration, using a large sample assumption. Do you think this assumption\nis justified?\n\nb) Formulate a large sample two-sided test to accept or reject the hypothesis that the mean\nconcentration is equal to 12 mg/L. What is the p value obtained with the data set given\nabove?\n\nSolution:\na) The appropriate estimator for the mean concentration is the sample mean my, which has the\nvalue ξ = 9.1 for this particular sample.\n\nIf we adopt a large sample approximation we assume that the sample mean is normally\ndistributed with mean E[my] = E[y] ((the unknown true mean) and standard deviation\nSD[my] = sy/n1/2 = 3.25/(10)1/2 =1. The critical points for a two-sided 90% confidence\ninterval are given by:\n\nmyl,0.9 = ξ - SD[my](1.64) = 9.1 - (1)(1.64) = 7.5\nmyu,0.9 = ξ + SD[my](1.64) = 9.1 + (1)(1.64) = 10.7\n\nSo we infer from the data that E[y] lies in the interval between 7.5 and 10.7. In fact, the\nsamples were generated from a log normal distribution with a mean of 8.33.\n\nThe large sample assumption is reasonable, even for a sample of 10, for a significance level\nof 10% but becomes less accurate as this level decreases.\n\nb) The hypothesis is H0: E[y] = 12. The hypothesis test is based on the same estimate and\nprobability density as the confidence interval calculation. In the two-sided case the decision\nrule is:\n\nAccept H0 : if myl, α ≤ my ≤ myu, α\n\nReject H0 : otherwise\n\nwhere myl, α and myu, α are the critical values for a significance level of α.\n\nFor this problem we do not need to carry out the test or evaluate the critical values. Instead,\nwe look for the p value. The p value is the value of α that we would give an my critical\nvalue equal to ξ. This can be found by setting the appropriate critical value (myl, p if ξ <\nE[y] and myu, p if ξ > E[y] ) equal to ξ . In this example, ξ < E[y] so we use myl, p = ξ. This\nis equivalent to a standardized (unit normal) critical value of:\n\n9.2\n0.1\n1.9\n]\n[\n]\n[\n,\n,\n-\n=\n-\n=\n-\n=\n-\n=\ny\ny\np\nyl\np\nl\nm\nSD\nm\nSD\nm\nz\nξ\n\nThe probability that a unit normal variable is less than -2.9 is (from the tables in the text)\n0.002. For a two-sided test the p value is twice this probability, so p = 0.004. This is a very\nlow value, indicating that my = ξ =9.1 is quite unlikely if E[y] = 12. So we would reject the\nnull hypothesis, unless we wanted to use a significance level less than 0.004 (an unusually\nlow value).\n\nProblem 4 (25 points)\n\nConsider the following 4 values of the independent variable (daily precipitation) and the dependent\nvariable (streamflow the same day) in a small watershed.\n\nRainfall (mm): 10 15 8 20\n\nRunoff (mm): 6 8.5 4 15\n\nDerive a regression (least-squares) model\nx\na\na\na\na\nx\ny\n)\n,\n,\n(\n+\n=\nwhich has an intercept of zero (a1\n= 0) and a slope to be determined from the data. Use this model to predict the runoff that would\noccur when the precipitation is 25.\n\nSketch the data on an x-y plot. Include a plot of the regression line over the range x = 0 to x = 25.\n\nSolution:\n\nThe least-squares estimate minimizes the sum-squared error:\n\n]\n[\n]\n[\n]\n5.8\n[\n]\n[\n]\n[\na\na\na\na\nx\na\ny\nSSE\nn\ni\ni\ni\n-\n+\n-\n+\n-\n+\n-\n=\n-\n=∑\n=\n\nwith respect to a2. The minimizing value of a2 may be found by applying the general least-squares\nestimation equations or by setting the derivative of SSE (taken with respect to a2) equal to zero and\nsolving for a2.:\n\n]\n[\n]\n[\n]\n5.8\n[\n]\n[\n=\n+\n-\n=\n-\n+\n-\n+\n-\n+\n-\n=\na\na\na\na\na\na\nd\nSSE\nd\n\nThis gives\n= 0.658. Substituting a\nˆa\n1=0,\n= 0.658, and a precipitation of x = 25 into the\noriginal model, we obtain the prediction\nˆa\n.\n)\n)(\n.0\n(\n)\n.0\n,0.0\n,\n(\n=\n=\ny\n. The requested\nplot is shown below:\n\nProblem 5 (25 points)\n\nConsider the following random sample of 8 measurements of a chi-squared distributed variable y:\n\n7.0295 6.1062 2.1105 7.8423 10.7457 6.2128 9.4727 6.569\n\nThe mean of a chi-squared random variable is E[y] = n, the number of degrees of freedom used in\nthe probability distribution.\n\na) Write a stochastic simulation program that evaluates and plots on a normal probability scale\nthe cumulative distribution function of an appropriate estimate of the number of degrees of\nfreedom n of the distribution that generated the above measurements. How would you pick\na value for the unknown value of n required in the random number generator of the\nstochastic simulation?\n\nb) Explain how you would use your stochastic simulation program to test the null hypothesis\nthat n = 9 (use a 5% significance level). Also, explain how you would obtain the p value.\n\nSolution\n\na) The natural (method of moments) estimate of n is the sample mean my . The required\nprogram is given below with a typical output:\n\nfunction chi2meas\nclose all\nysamp=[7.0295 6.1062 2.1105 7.8423 10.7457 ...\n6.2128 9.4727 6.5692]\nnhatsamp=mean(ysamp)\nnrep=1000\nndof=9\nfor i=1:nrep\ny=chi2rnd(ndof,1,8);\nndofhat(i)=mean(y);\nend\nnormplot(ndofhat)\nreturn\n\nξ = 7.01\nTwo-sided acceptance region\n(5% significance level)\np/2 = 0.05\n\nb) Derive and plot the CDF for\nusing a random number generator with n = 9 (the null\nhypothesis value). Then read off critical values for a two-sided acceptance region from the\n2.5% and 97.5% CDF values. Also, read off the CDF value corresponding to\n=7.01\n(the estimate derived from the sample). This is the p value.\nnˆ\nnˆ"
    },
    {
      "category": "Exam",
      "title": "combinatorial_examples.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/c69f9d32e20c31fb8ac6509e8dc062ac_combinatorial_examples.pdf",
      "content": "1.017/1.010 Examples of Combinatorial Probability\nDerivations\n\nExample 1\n\nSuppose we toss a die twice. Then the number of possible outcomes is the product of n1\n= 6 outcomes on the first toss and n1 = 6 outcomes on the second toss, or n1n2 = 36. Now\ndefine the event A to correspond to exactly one 3 in 2 tosses. This can occur in two\nways. First, we can obtain a 3 on the first toss (n1= 1, because there is only one way to\nachieve a 3 on the first toss) but not on the second (n5= 5 because there are 5 ways to not\nobtain a 3 on the second toss), giving n1n2 = 5. Alternatively, we can obtain a 3 on the\nsecond toss but not on the first, giving another n1n2 = 5 outcomes, for a total of 10\noutcomes in A. Compute P(A) from:\n\n.0\n)\n(\n)\n(\n)\n(\n=\n=\n=\nS\nn\nA\nn\nA\nP\n\nThe same result can be obtained by enumerating all 36 outcomes of two die tosses (e.g.\non a tree) and then counting the number with exactly one 3 (do this to check the above\nresult). This die toss experiment is an example of sampling with replacement, because\noutcomes are drawn from the same set of 6 possibilities on each toss (or sub-experiment).\nExample 2\nSuppose you draw 2 letters at random from a set of 4 (say A, B, C, and D). Each\nsuccessive draw is from a smaller set of possible outcomes (once the A has been drawn it\ncannot be drawn again and there is one less possible outcome for the second draw). If the\norder of the letters is relevant, it follows from the product rule that the number of\npossible letter pairs is:\nThe 12 ordered pairs produced by this experiment are:\n{AB, AC, AD, BA, BC, BD, CA, CB, CD, DA, DB, DC}\nMore generally, an ordered subset of k objects drawn from a set of n objects is called a\npermutation of n objects taken k at a time. The number of permutations of n objects\ntaken k at a time is written Pk,n :\n)!\n(\n!\n)1\n)...(\n)(\n(\n,\nk\nn\nn\nk\nn\nn\nn\nn\nP n\nk\n-\n=\n+\n-\n-\n-\n=\n\nThis number can be used to count simple events that result from sampling without\nreplacement experiments where sampling order is important. The MATLAB function\nfactorial(n) can be used to evaluate Pk,n for relatively small n.\nIf the order in which objects are drawn in sampling without replacement is not relevant\nthe number of possibilities decreases. In our example, if order is ignored in our letter\nexample the pairs AB and BA, AC and CA, AD and DA, BC and CB, BD and DB, CD\nand DC are equivalent. The number of equivalent pairs obtained when order is ignored is\nthe number of permutations (12) divided by the number of ways the same two letters can\nbe arranged ( n = n1·n2 = 2·1=2). Consequently, the number of equivalent unordered\npairs is 12/2 = 6.\nMore generally, an unordered subset of k objects drawn a set of n objects is called a\ncombination of n objects taken k at a time. The number of combinations of n objects\ntaken k at a time is Ck,n\n)!\n(!\n!\n/\n,1\n,\n,\nk\nn\nk\nn\nP\nP\nC\nk\nn\nk\nn\nk\n-\n=\n=\n\nThe k! in the denominator is the number of ways that the k objects can be arranged\namong themselves (i.e. P1,k). The MATLAB function nchoosek(n,k) evaluates\nCk,n.for relatively small n.\nExample 3\nSuppose that a box contains:\n-\n8 red balls\n-\n3 white balls\n-\n9 blue balls\n3 balls are drawn without replacement. The sample space consists of all possible\narrangements of three balls that can be drawn from the box. Since order is unimportant\nthis implies that the total number of outcomes in the sample space is the number of\ncombinations of 20 balls taken 3 at a time:\nTotal outcomes = n(S) = C3,20 =1140\nFind the probabilities of the following events in the sample space using combinatorial\nand virtual experiment (Monte Carlo) approaches. The MATLAB function balls carries\nout the virtual experiment.\na) Probability that all 3 balls are red.\n\nThe number of outcomes in the event A = \"all 3 balls are red\" is the number of possible\nways to draw 3 balls from the supply of 8 red balls. This is the number of combinations\nof 8 red balls taken 3 at a time:\nOutcomes in A = n(A) = C3,8 = 56\nThe probability of the event is therefore:\n.0\n8,3\n)\n(\n=\n=\n=\n,\nC\nC\nA\nP\n\nb) Probability that at least 1 ball is white\nFor events involving \"at least one\" specifications it is usually best to begin by considering\nthe complementary event \"none\". The number of outcomes in the event A' = \"no balls are\nwhite\" is the number of possible arrangements of 17 nonwhite balls taken 3 at a time:\nOutcomes in A' = n(A') = C3,17 = 680\nConsequently the probability of this event is:\n.0\n,3\n)\n(\n=\n=\n=\n,\nC\nC\nA\nP\n\nAnd the probability of the complementary event A = \"at least one white ball\" is:\n.0\n)\n(\n=\n-\n=\nA\nP\n\nc) Probability that 2 balls are red and 1 ball is white\nThis is an example of an event A resulting from 2 actions (Action 1 is selection of 2 red\nballs and Action 2 is selection of 1 white ball). From the product rule the number of\ncombinations resulting from both actions is:\nOutcomes in A = n(A) = (C2,8)(C1,3) = (28)(3) = 84\nThe probability is therefore:\n.0\n3,1\n8,2\n)\n(\n=\n=\n=\n,\nC\nC\nC\nA\nP\n\nd) Probability that 1 ball is red, 1 ball is white, and 1 ball is blue\nThis is basically the same problem as c). The event A now consists of 3 actions (Action 1\nis the selection of 1 red balls, Action 2 is the selection of 1 white ball, and Action 3 is the\nselection of 1 blue ball). From the fundamental principle of counting the number of\ncombinations resulting from all three actions is:\nOutcomes in A = n(A) = (C1,8)(C1,3)(C1,9) = (8)(3)(9) = 216\nThe probability of A is therefore:\n.0\n9,1\n3,1\n8,1\n)\n(\n=\n=\n=\n,\nC\nC\nC\nC\nA\nP\n\nExample 4\nSuppose we draw 4 cards from a well-shuffled deck of 52 cards. What is the probability\nof obtaining exactly 2 aces? Use combinatorial and virtual experiment methods.\nHere the sample space S consists of all 4-card hands that can be constructed from a deck\nof 52 cards. Since the cards are drawn without replacement and order is not important the\ntotal number of outcomes in the sample space is the number of combinations of 52 cards\ntaken 4 at a time:\nTotal outcomes in S = C4,52 = 270,725\nThe event A results from two actions - Action 1 is the selection of 2 aces and Action 2 is\nthe selection of 2 cards that are not aces. There are C2,4 ways to obtain 2 aces out of 4 in\nthe deck and C2,48 ways to obtain 2 non-aces from the remaining 48 cards. Consequently\nthe product rule tells us that the total number of ways to obtain exactly 2 aces is:\nOutcomes in A = n(A) = (C2,4)(C2,48) = (6)(1128) = 6768\nThe probability is therefore:\n.0\n,\n,2\n4,2\n)\n(\n=\n=\n=\n,\nC\nC\nC\nA\nP\n\nExample 5\nA shelf has 6 math books and 4 physics books that have been placed there at random.\nFind the probability that 3 particular math books will be grouped together (adjoining),\nusing both combinatorial and virtual experiment methods.\n\nHere it is convenient to define the sample space S to be all possible arrangements of the\nmath books, with order considered (because the books must be adjoining). The number\nof ordered outcomes in this space is the number of permutations of 10 books arranged in\n10 locations:\nTotal outcomes in S = P10,10 = 10! = 3,628,800\nNow treat the 3 adjoining math books as one group and each of the other 7 books as a\ndistinct group, giving a total of 8 groups. The number of ways for Event A to occur is the\nnumber of ways that these 8 groups can be arranged in the 8 \"spaces\" on the shelf.\nConsidering order, this is P8,8. For each of these arrangements there are P3,3 ways to\narrange the 3 books. Consequently, the total number of ways to obtain the specified\nevent is:\nOutcomes in A = n(A) = (P3,3)(P8,8) = (3!)(8!) = (6)(40320) = 241,920\nThe probability is therefore:\n.0\n,\n,3\n,\n,\n8,8\n3,3\n)\n(\n=\n=\n= P\nP\nP\nA\nP\n\nExample 6\nWhat is the probability of obtaining exactly 3 \"6's\" in 5 tosses of a single fair die? Use\nboth combinatorial and virtual experiment methods.\nThis experiment mixes aspects of sampling with and without replacement. The sample\nspace S consists of 65 possible outcomes from the 5 rolls (sampling with replacement):\nTotal outcomes in S =65 = 7776\nAs in earlier examples, the event A results from 2 actions, Action 1 being the roll of 3\n\"6's\" and Action 2 being the roll of 2 other numbers (not \"6's\"). Since order is not\nimportant there are 5C3 ways to obtain the 3 \"6's\" (sampling without replacement). There\nare 52 ways to obtain results other than 6 on the remaining 2 tosses (sampling with\nreplacement). Consequently, the total number of ways to obtain the specified event A is:\nOutcomes in A = (C3,5)(52) = 250\nThe probability is therefore:\n.0\n)\n(\n)\n(\n5,3\n)\n(\n=\n=\n=\nC\nA\nP"
    },
    {
      "category": "Resource",
      "title": "class03_1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/5bd02c2e1d61aa89875174187d26bfe2_class03_1.pdf",
      "content": "1.017/1.010 Class 1\nCourse Introduction\n\nClass logistics\n\nStaff, grading, web site, in-class use of laptop computers, programming\nworkshops\nCheck out 1.017 web site.\n\nProbability/statistics\n\nDescribing uncertainty, using measurements to characterize the natural\nworld, making inferences from data\n\nExercise: Repeated trials -- Real and virtual coin tosses\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "class03_10.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/92f3f600192b10c8388a25b5ccde5216_class03_10.pdf",
      "content": "1.017/1.010 Class 10\nSome Common Probability Distributions\n\nSome common continuous PDFs and CDFs\n\nEach depends on a few distributional parameters\n\n1. Uniform (distributional parameters a,b):\n\nb\nx\na\na\nb\na\nx\na\nx\nF\na\nb\nx\nf\nx\nx\n≤\n≤\n-\n-\n+\n=\n-\n=\n;\n)\n(\n)\n(\n\n)\n(\n)\n(\n)\n(\na\nb\nx\nVar\nb\na\nx\nE\n-\n=\n+\n=\n\n2. Exponential (distributional parameter a):\n\n;\nexp\n)\n(\nexp\n)\n(\n≥\n\n-\n-\n=\n\n-\n=\nx\na\nx\nx\nF\na\nx\na\nx\nf\nx\nx\n\n)\n(\n)\n(\na\nx\nVar\na\nx\nE\n=\n=\n\n3. Univariate Normal (Gaussian) (distributional parameters\nσ\nμ,\n):\n\ntabulated\nform,\n\nclosed\n\nno\n)\n(\n)\n(\nexp\n)\n(\n=\n\n-\n-\n=\nx\nF\nx\nx\nf\nx\nx\nσ\nμ\nπ\nσ\n\n)\n(\n)\n(\nσ\nμ\n=\n=\nx\nVar\nx\nE\n\n4. Lognormal (distributional parameters\nx\nx\nln\nln ,σ\nμ\n):\n\ntabulated\nform,\n\nclosed\n\nno\n)\n(\n)\n(ln\nexp\n)\n(\n=\n≥\n\n-\n-\n=\nx\nF\nx\nx\nx\nx\nf\nx\nx\nσ\nμ\nπ\nσ\n\n[\n][\n)\nexp(\nexp\n)\n(\nexp\n)\n(\nln\nln\nln\nln\nln\n-\n+\n=\n\n+\n=\nx\nx\nx\nx\nx\nx\nVar\nx\nE\nσ\nσ\nμ\nσ\nμ\n]\n\nExercise: Fitting distributions to data\n\nGo to the British Geological Survey web site at :\nhttp://www.bgs.ac.uk/arsenic/bangladesh/DataDownload.htm\nand select \"Village survey (59kB)\" to download water supply well arsenic data for\nBangladesh.\n\nWhen you select the \"Village survey (59kB)\" link you should see an EXCEL\nspreadsheet in your browser. The data of interest are the \"As arsenator' values in\ncolumn O (\"arsenator\" refers to particular field method for measuring total\narsenic). Rather than downloading this data with MATLAB commands simply\nselect the values in column O, copy, and then paste into a MATLAB script. You\ncan do this by pasting the data after the following expression:\n\narsenic_data = [\n\nand then entering a final ] after the data appear in your script. The result should\nbe a long column vector called arsenic_data containing the values from the\nspreadsheet. You can insert this statement directly in your program (there are\nother ways to bring the data in -- feel free to do something else if you want).\n\nIn the rest of your script plot the sample CDF and histograms for the arsenic\ndata.\n\nConstruct a MATLAB function cdffit(data,ndist,p1,p2) that fits the\nsample arsenic CDF to one of the above common CDFs, indexed by ndist =\n1,2,3,or 4. The inputsp1 and p2 are distributional parameters. Adjust these\nto achieve the best possible fit.\n\nDisplay the sample and postulated distributions on the same set of axes (using\nthe MATLAB hold function).\n\nProvide copies of plots for your preferred choice of postulated distribution and\ninclude a few sentences describing why you made this choice. Repeat the entire\nprocess for the iron data in column AA. Be sure to edit out any non-numeric\ncharacters (such as <). Also, compute from your fitted distribution the probability\nthat the arsenic level exceeds the new (lowered) US standard (upper limit) of 10\nuG/L.\n\nSome relevant MATLAB functions: cdfplot,hold,unifcdf, expcdf,\nnormcdf, logncdf\n\nMATLAB function: cdffit.m\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "class03_11.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/f9d41246885e9c5e9d784753d4e9ac14_class03_11.pdf",
      "content": "1.017/1.010 Class 11\nMultivariate Probability\n\nMultiple Random Variables\nRecall the dart tossing experiment from Class 4. Treat the 2 dart\ncoordinates as two different scalar random variables x and y.\nIn this experiment the experimental outcome is the location where the dart\nlands. The random variables x and y both depend on this outcome (they\nare defined over the same sample space). In this case we can define the\nfollowing events:\nAB\nB\nA\ny\nx\nC\ny\nB\nx\nA\n=\n=\n≤\n≤\n=\n≤\n=\n≤\n=\nI\n]\n)\n(\n,\n)\n(\n[\n]\n)\n(\n[\n\n]\n)\n(\n[\nξ\nξ\nξ\nξ\ny\nx\ny\nx\n\nx and y are independent if A and B are independent events for all x and y:\nP(C) = P(AB) = P(A)P(B)\nAnother example ...\nConsider a time series constructing from a sequence of random variables\ndefined at different times (a series of n seismic observations or stream\nflows x1, x2, x3, ..., xn.). Each possible time series can be viewed as an\noutcome ξ of an underlying experiment. Events can be defined as above:\nj\ni\nj\ni\nj\nj\ni\ni\nij\ni\ni\ni\nA\nA\nA\nA\nx\nx\nA\nx\nA\n=\n=\n≤\n≤\n=\n≤\n=\nI\n]\n)\n(\n,\n)\n(\n[\n]\n)\n(\n[\nξ\nξ\nξ\nx\nx\nx\n\nxi and xj are independent if:\nP(Aij) = P(Ai Aj) = P(Ai)P(Aj)\nMultivariate Probability Distributions\nMultivariate cumulative distribution function (CDF), for x, y continuous\nor discrete:\n)]\n)\n(\n)(\n)\n(\n[(\n)\n,\n(\ny\nx\nP\ny\nx\nF\n≤\n≤\n=\nξ\nξ\ny\nx\nxy\n\nMultivariate probability mass function (PMF), for x, y discrete:\n)]\n)\n(\n)(\n)\n(\n([\n)\n,\n(\nj\ni\nj\ni\ny\nx\nP\ny\nx\np\n=\n=\n=\nξ\nξ\ny\nx\nxy\n\nMultivariate probability density function (PDF), for x, y continuous:\n\ny\nx\ny\nx\nF\ny\nx\nf\nxy\nxy\n∂\n∂\n∂\n=\n)\n,\n(\n)\n,\n(\n\nIf x and y are independent:\n)\n(\n)\n(\n]\n[\n]\n[\n)\n,\n(\ny\nF\nx\nF\ny\nP\nx\nP\ny\nx\nF\ny\nx\nxy\ny\nx\n=\n≤\n≤\n=\n)\n(\n)\n(\n)\n,\n(\nj\ni\nj\ni\ny\np\nx\np\ny\nx\np\ny\nx\nxy\n=\n)\n(\n)\n(\n)\n,\n(\ny\nf\nx\nf\ny\nx\nf\ny\nx\nxy\n=\n\nComputing Probabilities from Multivariate Density Functions\nProbability that (x, y)∈ the region D:\n\n∫\n∈\n=\n∈\nD\ny\nx\ndxdy\ny\nx\nf\nD\ny\nx\nP\nxy\n)\n,\n(\n)\n,\n(\n]\n)\n,\n[(\n\nCovariance and Correlation\n\nDependence between random variables x and y is frequently described with the\ncovariance and correlation:\n\n∫\n+inf\ninf\n=\n=\n-\n)\n(\n)\n)(\n(\n)]\n)(\n[(\n)\n,\n(\ndy\ndx\nx,y\nf\n-\n-\n-\n-\nE\nCov\nxy\ny\ny\nx\nx\ny\ny\nx\nx\ny\nx\n\n)\n(\n)\n(\n)\n,\n(\n)]\n(\n)\n(\n[\n)\n,\n(\n)\n,\n(\n/\ny\nx\ny\nx\ny\nx\ny\nx\ny\nx\nStd\nStd\nCov\nVar\nVar\nCov\nCorrel\n=\n=\n\nUncorrelated x and y: Cov(x, y) = Correl (x, y) = 0\n\nIndependence implies uncorrelated (but not necessarily vice versa)\nExamples\n\nTwo independent exponential random variables (parameters ax and ay):\n\n-\n-\n=\n\n-\n\n-\n=\n=\ny\nx\ny\nx\ny\ny\nx\nx\ny\nx\nxy\na\ny\na\nx\na\na\na\ny\na\na\nx\na\ny\nf\nx\nf\ny\nx\nf\nexp\nexp\nexp\n)\n(\n)\n(\n)\n,\n(\n\nax = E(x), ay = E(y), Correl(x,y) = 0\n\nTwo dependent normally distributed random variables (parameters μx, μy, σx ,\nσy, and ρ):\n\n-\n-\n-\n=\n-\n)\n(\n)'\n(\nexp\n)\n,\n(\n5.0\nμ\nμ\nπ\nZ\nC\nZ\nC\ny\nx\nf xy\n\nZ = vector of random variables = [x y]′\n\nμ = vector of means = [ E(x) E(y) ] ′\n\nC = covariance matrix =C\n\nσ\n\n=\ny\ny\nx\ny\nx\nx\nσ\nσ\nρσ\nσ\nρσ\nσ\nx = Std(x), σy = Std(y), ρ = Correl(x,y)\n\n|C| = determinant of C =\n\nC\n)\n1(\nρ\nσ\nσ\n-\ny\nx\n-1 = inverse of C =\n\nx\ny\nx\nC\nσ\n-\n-\ny\nx\ny\nσ\nσ\nρσ\nρσ\nσ\n\nMultivariate probability distributions are rarely used except when:\n\n1. The random variables are independent\n2. The random variables are dependent but normally distributed\nExercise:\nUse the MATLAB function mvnrnd to generate scatterplots of correlated\nbivariate normal samples. This function takes as arguments the means of x and\ny and the covariance matrix defined above (called SIGMA in the MATLAB\ndocumentation).\n\nAssume E[x] = 0, E[y] = 0, σx = 1, σy = 0. Use mvnrnd to generate 100 (x, y)\nrealizations . Use plot to plot each of these as a point on the (x,y) plane (do not\nconnect the points). Vary the correlation coefficient ρ to examine its effect on\nthe scatter. Consider ρ = 0., 0.5, 0.9. Use subplot to put plots for all 3 ρ values\non one page.\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "class03_13.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/0d973af89e87046db04147be8c25690f_class03_13.pdf",
      "content": "1.017/1.010 Class 13\nPopulations and Samples\n\nSampling and Repeated Trials:\nStatistics relies on sets of observations of random variables, commonly\ncalled samples.\n\nA sample can be viewed as a collection of outcomes from repeated trials.\nRandom trial i yields an outcome (a particular number) corresponding to\nan underlying random variable xi. The collection of random variables\nassociated with a sample of N observations is [x1, x2, x3, ..., xN].\nSamples are used to estimate distributional properties of the underlying\nrandom variables or to make inferences about relationships among\ndifferent variables.\nSamples are sometimes supposed to be drawn from a larger population\nof (which may actually exist or may be hypothesized).\nExample:\nDefine the random variable x to be the height of an MIT student drawn at\nrandom from the population of all MIT students. Suppose we record the\nheights of 10 MIT students selected at random. This can be viewed as a\ncomposite experiment composed of 10 repeated trials with 10\ncorresponding random heights [x1, x2, x3, ..., x10]. The outcomes obtained\nfrom this set of trials constitute a sample.\nThe 10 student sample can be used to estimate the unknown mean and\nvariance (or other properties) of the height probability distribution or to\nmake inferences about this distribution (e.g. to compare it to a similar\ndistribution from Stanford).\nThe following is a sample of 10 student heights (in inches).\n[56.25, 59.90, 54.64, 65.73, 56.45, 57.45, 61.26, 57.23, 56.61, 53.67]\nWhat are reasonable estimates of the mean and variance of the student\nheight probability distribution?\nRandom samples:\n[x1, x2, x3, ..., xN] is a random sample if:\n\n1. The xi's are independent Fx1, x2, ... xN = Fx1(x1)Fx2(x1)...FxN(xN)\n2. The xi's all have the same distribution Fxi(xi) = Fx(x)\nFunctions of many random variables\nA function y = g(x1, x2, ... xN) of a sample of N random variables is a random\nvariable with CDF Fy(y).\nIf [x1, x2, ... xN ] is a random sample Fy(y) can be derived from g(x1, x2, ... xN)\nand Fx(x). In general, this derived distribution problem can be solved with\nstochastic simulation.\nMean and variance of a linear function (prove)\nSuppose that x1 and x2 are random variables (not necessarily independent)\nand a1, a2 , b are constants (not random):\nE[a1x1+ a1x2] = a1E[x1]+ a2E[x2] + b\nVar[a1x1+ a1x2+ b] = a1\n2Var[x1] + a2\n2Var[x2] + 2a1a2Cov[x1, x2]\nIf x1, x2 are uncorrelated\nVar[a1x1+ a1x2+ b] = a1\n2Var[x1] + a2\n2Var[x2]\nExample:\n\nA reasonable estimate of the mean of an unknown probability distribution is the\narithmetic average (sample mean) mx of N observations drawn at random from\nthis distribution.\n\nIf the observations are outcomes associated with a random sample x1, x2, ... xN\nthe sample mean is:\n∑\n=\n=\nN\ni\ni\nN\nx\nm x\n\nThis is a linear function of the random sample. The mean and variance of\nmx are (prove):\n]\n[\n]\n[\n]\n[\n]\n[\nx\nm\nx\nx\nm\nx\nx\nVar\nN\nVar\nE\nE\n=\n=\n=\n\nA reasonable estimate of the standard deviation of the unknown distribution is\nthe mean sum of squares (sample variance) sx\ncomputed from the random\nsample:\n]\n[\nx\nx\nm\nx\ns\n-\n-\n=\n∑\n=\nN\ni\ni\nN\n\nThis is a linear function of the set of variables [xi - mx]2., i = 1...N. The\nmean and variance of sx\n2 are:\nN\nVar\nE\nx\n]\n[\n]\n[\n∝\n=\nx\nx\ns\ns\nσ\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "class03_14.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/9b6ec151dea248d0268529381d441d5c_class03_14.pdf",
      "content": "1.017/1.010 Class 14\nEstimation\n\nEstimating Distributional Properties\nWe can use random samples to estimatethe unknown properties of\nrandom variable x. These may be:\n1. Distributional parameters, such as the lower and upper limits of a\nuniform distribution (a and b)\n2. Other distributional properties such as the mean, variance, 90th\npercentile value, etc.\nParametric statistics assumes that the form of the x distribution of\nx is known. Nonparametric statistics makes no assumptions\nabout distribution of x.\nEstimators\nAn Estimator (or a statistic) a\nis a function used to derive\nan estimate\nof the unknown distributional property a from a random\nsample x\n)\n,...,\n,\n(\nˆ\nN\nx\nx\nx\naˆ\n1, x2,..., xN\n)\n,...,\n,\n(\nˆ\nˆ\nN\nx\nx\nx\na\na =\n\nExample:\nSuppose we want to estimate from the random sample x1, x2,..., xN\nthe mean of Fx(x). A possible choice for the estimator is the sample\nmean mx . Then:\na = E[x]\n∑\n=\n=\n=\n=\nN\ni\ni\nx\nN\nN\na\n)\n,...,\n,\n(\nˆ\nˆ\nx\nm\nx\nx\nx\na\n\nHow do we know if this is a \"good\" estimator?\nProperties of Good Estimates\nWe would like the estimate a to be as \"close\" as possible to the true value a.\nˆ\n\nSince a is derived from a random sample (a set of random variables) it is also a\nrandom variable, defined by the probability distribution\n. This distribution\ndescribes how much\nmight deviate from a.\nˆ\n)ˆ\n(\nˆ a\nFa\naˆ\n\nWe can sometimes derive\nor we may use the Central Limit theorem to\njustify the assumption that\nis a normal distribution (if a is derived from a\nlarge random sample).\n\nIf\nis normal, it is completely defined by the mean\nand variance\nof a .\n)ˆ\n(\nˆ a\nFa\n)ˆ\n(\nˆ a\nFa\n)ˆ\n(\nˆ a\nFa\n]ˆ\n[a\nVar\n]ˆ\n[a\nE\nˆ\nEven if\nis not normal we can use the mean and variance of\nto\nmeasure the quality of the estimate. \"Good\" estimates should be\nunbiased and consistent:\n)ˆ\n(a\nFˆa\naˆ\n1.Unbiased\nThe expected value of the estimate is the true property value:\na\nE\n=\n]ˆ\n[a\n\n2. Consistent:\nThe variability of the estimate goes to zero as the sample size\nincreases:\ninf\n→\n→\nN\nas\nVar\n]ˆ\n[a\n\nIf the estimate is unbiased and consistent it will converge to the true value\nas the sample size increases.\nIn general, the mean and variance of an estimate are most readily\nestimated with stochastic simulation (see exercise below). In some\ncases they can be derived directly from the estimator function\n.\naˆ\nExample - Properties of the Sample mean:\nReconsider the sample mean mx used to estimate the mean E[x] of Fx(x):\n∑\n=\n=\n=\n=\nN\ni\ni\nx\nN\nN\na\n)\n,...,\n,\n(\nˆ\nˆ\nx\nm\nx\nx\nx\na\n\nThe mean and variance of this estimate are:\na\nE\nN\nE\nE\nE\nN\ni\ni\nx\n=\n=\n\n=\n=\n∑\n=\n]\n[\n]\n[\n]ˆ\n[\nx\nx\nm\na\n\n]\n[\n]\n[\n]ˆ\n[\nx\nx\nm\na\nVar\nN\nN\nVar\nVar\nVar\nN\ni\ni\nx\n=\n\n=\n=\n∑\n=\n\nSo the sample mean is an unbiased and consistent estimator of the\npopulation mean.\nFor large samples the Central Limit Theorem implies that mx is normally\ndistributed. The distribution of mx is centered on E[x] and gradually\nconverges to E[x] as N increases.\nExercise: Comparing Alternative Estimates of Population Properties\nSuppose that you have a sample of 10 observations of a random variable\nx that you believe to be exponentially distributed. Your objective is to\nestimate the 90 percentile value x90 of this variable. This value of the\nsolution of the equation Fx(x90) = 0.9 [i.e. Fx\n-1(0.9) = x90]\nPropose at least two different methods for estimating x90 from the 10\nobservations.\n\nCompare the performance of these alternative estimators with a stochastic\nsimulation that performs the following steps:\n\n1. Generate many (e.g. 1000) replicates, each consisting of 10 observations\ndrawn from an exponential distribution. Select your own value of the\ndistributional parameter a = E[x].\n2. For each replicate derive an estimate\nof x\nˆx\n90 from each of your two\nproposed estimators.\n3. For each estimator compute the sample mean and variance of\nover all\nreplicates. Also, use the replicates to construct a histogram and a CDF\nplot (using MATLAB's normplot function) for each\n.\nˆx\nˆx\n4. Determine whether your estimators are unbiased and consistent (check\nconsistency by plotting the rerunning your simulation for a much larger\nnumber of observations).\n\nWhich of your estimators is better? Explain your reasoning.\n\nSome relevant MATLAB functions: exprnd, hist, normplot, mean,var\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "class03_15.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/ee094e230c8816c8ada1062849072ef2_class03_15.pdf",
      "content": "1.017/1.010 Class 15\nConfidence Intervals\n\nInterval Estimates\nParameter estimates computed from a random sample x1, x2,..., xN can\nvary around the unknown true value. For any given estimate, we seek a\ntwo-sided confidence interval that is likely to include the true value a:\nU\nL\na\na\na\n≤\n≤\n\n[aL, aU] is called an interval estimate.\nStandardized Statistics\nInterval estimate is often derived from a standardized statistic. This is a\nrandom variable that depends on both the unknown true value a and its\nestimate\n.\naˆ\nAn example is the z statistic:\n)ˆ\n(\nˆ\n)\n,ˆ\n(\na\na\na\nz\nSD\na\na\n-\n=\n\nIf the estimate is unbiased E[z] = 0 and Var[z] = 1, for any x or a probability\ndistribution with finite moments (prove).\nˆ\nExample:\nSuppose:\na = E[x] = mean of the x probability distribution\n= m\naˆ\nx = sample mean (of random sample outcome x1, x2,..., xN).\nThen:\nN\nx\nSD\nE\nSD\nE\na\nx\nx\nx\n)\n(\n]\n[\n)\n(\n]\n[\n)\n,ˆ\n(\nx\nm\nm\nx\nm\na\nz\n-\n=\n-\n=\n\nDeriving Interval Estimates\nIf we know the probability distribution of the standardized statistic z we\ncan derive an interval estimate. Specify the probability 1-α that z falls in\nthe interval [zL, zU] for a given value of a (e.g. 0.95):\nα\n-\n=\n≤\n≤\n]\n)\n,ˆ\n(\n[\nU\nL\nz\na\nz\nP\na\nz\n\nSuppose that [zL, zU] is selected so that the probability that z lies above the\ninterval is the same as the probability that it lies below the interval. This\ngives a two-sided interval [zL, zU] for z:\n)\n(\n]\n)\n,ˆ\n(\n[\nα\n=\n=\n≤\nL\nz\nL\nz\nF\nz\na\nP\na\nz\n\n)\n(\n]\n)\n,ˆ\n(\n[\nα\n=\n-\n=\n≥\nU\nz\nU\nz\nF\nz\na\nP\na\nz\n\n-\n=\n\n=\n-\n-\nα\nα\nZ\nU\nZ\nL\nF\nz\nF\nz\n\nFrom the Central Limit Theorem we know that\nis normal and that z has a\nunit normal distribution [i.e. z~ N(0,1)] for large sample sizes. In this\ncase the CDF F\naˆ\nz(z) and its inverse can be evaluated from standard normal\ndistribution tables or with the MATLAB functions normcdf and norminv.\nIf 1-α = 0.95 then zL = -1.96 and zU = +1.96.\nSubstitute the definition of z to obtain the corresponding two-sided interval\nfor a :\nˆ\nα\n-\n=\n+\n≤\n≤\n+\n=\n≤\n-\n≤\n]\n]ˆ\n[\nˆ\n]ˆ\n[\n[\n]\n]ˆ\n[\nˆ\n[\na\na\na\na\na\nSD\nz\na\nSD\nz\na\nP\nz\nSD\na\nz\nP\nU\nL\nU\nL\n\n]ˆ\n[\nˆ\n]ˆ\n[\nˆ\na\na\nSD\nz\na\na\nSD\nz\na\na\nU\nL\n+\n≤\n+\n≥\n\nProbability is 1-α that actual sample estimate\nlies in this interval.\naˆ\nNow suppose that this relatively likely event occurs when the outcome of a\nparticular experiment (i.e. the\nobtained from a particular random\nsample) is a . Then the true a must satisfy the following inequality:\naˆ\nˆ\n]ˆ\n[\nˆ\n]ˆ\n[\nˆ\na\na\nSD\nz\na\na\nSD\nz\na\nL\nU\n-\n≤\n≤\n-\n\nThis gives the desired 1-α confidence interval for a:\n]ˆ\n[\nˆ\n]ˆ\n[\nˆ\na\na\nSD\nz\na\na\nSD\nz\na\na\nL\nU\nU\nL\n-\n=\n-\n=\n\nWe can obtain SD[a ] in two ways:\nˆ\n1. Derive directly from the definition of the estimator\n(not always possible). This usually requires\nreplacing population statistics [e.g. Std(x)] by sample statistics [e.g.\ns\n)\n,...,\n,\n(\nˆ\nˆ\nN\nx\nx\nx\na\na =\nx]\n\n2. Stochastic simulation, using a = a in random number\ngenerator (usually possible but not exact). This generally requires\nan assumption about the form of the underlying distribution F\nˆ\nx(x).\nThe confidence interval is wider for larger SD[\n]\n\nThe confidence interval is wider for larger 1-α (e.g. 99%)\naˆ\nSummary\nTo derive a two-sided confidence interval:\n1. Specify significance level α\n2. Compute estimate\nfrom the data\naˆ\n3. Compute Std [\n] in one of two ways:\naˆ\n- If possible, relate Std(\n) to Std(x) and use the approximation\nStd(x) ≈ s\naˆ\nx (i.e assume the unknown population standard\ndeviation is equal to the sample standard deviation\ncomputed from data).\n- Otherwise, derive Std(a ) using stochastic simulation\nˆ\n4. Compute zL and zU from and the specified α, assuming an\nappropriate form for the CDF Fx(x)\n5. Apply the two-sided confidence interval formula\nExample - Large-sample two-sided confidence interval for the population mean:\nConsider the sample mean mx, used to estimate the population mean E[x].\nIn this case, a = E[x] and a = m\nˆ\nx\nUse result from Class 13 to derive SD[mx] directly, replacing SD[x] by the\nsample standard deviation sx :\nN\ns\nN\nSD\nSD\nx\nx\n≈\n=\n]\n[\n]\n[\nx\nm\n\nSo the large sample (assume z is normal) two-sided 95% confidence\ninterval for the population mean is:\nN\ns\nm\nE\nN\ns\nm\nx\nx\nx\nx\n.1\n]\n[\n.1\n+\n≤\n≤\n-\nx\n\nSuppose:\n\n[x1, x2,..., x10 ] = [ 0.1 2.9 1.0 1.4 0.23 0.54 1.57 8.0 0.40 1.6]\n\nThen mx = 1.77, sx = 2.34, N = 10 and:\n.3\n]\n[\n.0\n.2\n.1\n.1\n]\n[\n.2\n.1\n.1\n≤\n≤\n+\n≤\n≤\n-\nx\nx\nE\nE\n\nSuppose we don't know the probability distribution of z (e.g. because the\nsample size is too small to justify using the Central Limit Theorem) but we\nknow the distribution of x (except for a few unknown parameters).\nThen we can approximate Fz(z) with a virtual experiment, replacing\nunknown parameters with estimates computed from the random sample.\nOnce this is done we can plot Fz(z) vs z and identify from the plot the Fz\n-1\nvalues needed to derive zL and zU. Usually we make a large sample\n(normal) assumption.\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "rec03_1.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/0062abd9e08a2168b2fe8b6eef4edc0b_rec03_1.pdf",
      "content": "1.017/1.010 Recitation 1\nProgramming in MATLAB\n\nDownloading and editing data\n\nAccessing Internet and MATLAB on your lap-top and on ATHENA\nDownloading a simple data set from the web to a text file in the mit_1017\ndirectory on your laptop.\n\nData at http://www.co2science.org/ushcn/ma/ma.htm\nUse data from Blue Hills, MA, average yearly temperature and\nprecipitation.\nSave as bh_temp.txt and bh_precip.txt in MIT_1017 directory\nEdit the data set with the MATLAB editor (see MATLAB help)\nLoad data from a text file into MATLAB, the load command:\nload bh_temp.txt\nload bh_precip.txt\n\nMATLAB variables\n\nVariables/arrays -- scalars, lists/vectors (1 dim), tables/matrices (2 dim)\nAccessing elements of arrays:\n\nbh_temp(i,j), bh_temp(:,j), bh_temp(i,end),\nbh_temp(1:3,j), etc.\nsize command\nAssignment Statements\n\nUsing the equal sign to define/modify variables\nExample:\ntemp=bh_temp(:,2)\nprecip=bh_precip(:,2)\nyear=bh_temp(:,1)\nPlotting Data\n\nPlotting array elements using plot\nSome plotting guidelines:\n- open a separate window for each plot with the\nfigure command\n- If you run a program many times it is advisable to\nprecede your first plot command by the command\nclose all. This closes figure windows generated\npreviously.\n- Plot titles, axis labels and legends can be added\nusing MATLAB functions or interactively by using\npulldown menus in plot window.\n- See documentation of hold function re. plotting\nmultiple curves on one set of axes\n- See documentation of subplot function re. arranging\nseveral plots in a single window\nTime series plot (e.g. temperature vs. time)\nScatter plot (e.g. precipitation vs. temperature)\n\nMATLAB scripts\n\nInteractive calculations in command window vs. collection/batch of\ncommands stored in a file (a program). Batch can be saved, modified,\ncalled in command window\nMATLAB scripts, .m files\nExercise: Displaying data in MATLAB:\n1. Go back to climate data: http://www.co2science.org/ushcn/ushcn.htm\nand download temperature and precipitation data from any available\nUS location.\n2. Edit the data file so that it can be loaded into MATLAB. Keep only the\nyears that are common to both sets of data.\n3. Create a new file and name it. You can now run filename.m by\ntyping filename in the command window.\n4. In the new program, load the data and name it.\n5. Plot Temperature vs. Time and Precipitation vs. Time on the same\naxis. Create a legend\n6. In a new figure window, plot Temperature vs. Time and Precipitation\nvs. Time on two separate axes.\n7. In a new figure window, plot Temperature vs. Precipitation as a scatter\nplot.\n8. Title and label all plots\n\n9. Create comments using a '%' at the beginning of a line. MATLAB will\nthen ignore the line. This is important when saving a file and going\nback to it later so you (or someone else) can easily understand what\neach set of commands is doing.\nRelevant MATLAB functions: load, figure, plot, close all, xlabel,\nylabel, title, subplot, axis, axes\nDownload example program climate_plot.m\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "rec03_2.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/343a4646e1275dd77bcec332cd8d075c_rec03_2.pdf",
      "content": "1.017/1.010 Recitation 2\nMATLAB Operations\n\nCommon MATLAB operations\n\nFeature\nClassical Notation\nMATLAB notation\nAssignment (=) Operation\n\nScalar\nx = 1.6\nx = 1.6\nRow vector\na = [2 3]\na = [2 3]\nMatrix\n\nA = [4 5; -3 2]\nArithmetic Operations\n\nSum - scalars and arrays\nz = x + y\nz = x+y\nDifference - scalars and arrays\nz = x - y\nz = x-y\nMultiplication - scalars and arrays\nof consistent dimension\nz = xy\nz = x*y\nMultiplication - arrays elementwise\nz(i) = x(i) y(i), each i\nz = x.*y\nDivision - scalars\nz = x / y\nz = x/y\nDivision - arrays elementwise\nz(i) = x(i) / y(i), each i\nz = x./y\nExponentiation -scalars\nz = x y\nz = x^y\nExponentiation -arrays elementwise\nz(i) = x(i) y(i), each i\nz = x.^y\n\nFeature\nClassical Notation\nMATLAB notation\nSequences stored as arrays\n\nIncrement by 1\n5, 6, 7, 8 (array)\n5:8\nIncrement by 0.3\n3, 3.3, 3.6, 3.9 (array)\n3:0.3:4\nSelected elements of an array\na(3), a(5), a(7), a(9)\na(3:2:9)\nSimple Functions of arrays\n\nSine, Cosine (elementwise)\nsin(x), cos(x)\nsin(x), cos(x)\nExponential (elementwise)\ne x\nexp(x)\nMaximum\nmax(x)\nmax(x)\nSquare root (elementwise)\n\nsqrt(x)\nRecursive computations and loops\n\nStatements inside a for loop are repeated a specified number of times.\n\nExample 1:\nfor i = 1:5\nm(i) = i*2;\nend\n\nReturns:\nm = 2 4 6 8 1\n\nExample 2:\nfor i=1:3:11\nm=i;\nend\nReturns:\nm = 10\n\nRemember to always end the loop with end.\nExample 3: 1D translation of a particle in a time-dependent velocity field:\ndelta_t=.1; % define time step\nx(1:41)= zeros; % initialize x\nx(1) = 2;\nfor t=1:40 % begin time loop\nv(t)=10*cos(t);\nx(t+1) = x(t) + v(t)*delta_t; % update x(t)\nend % end time loop\nplot(0:40,x)\nTranslating equations to program commands\nExercise: Equations describing oxygen consumed by decaying organic\nmatter in a stream:\nSolution for oxygen conc. (Streeter-Phelps Eq):\n\nPlot oxygen depletion vs. distance in a stream (oxygen.m)\nSome relevant MATLAB functions: axis\n\nParameter Values:\nKd=0.8\norganic matter decay rate, day^(-1)\nKa=1.0 aeration rate, day^(-1)\ncs=8 saturation concentration dissolved oxygen, mg/L\nc0=6 upstream concentration dissolved oxygen, mg/L\nL0=10 concentration of oxygen-consuming organic matter injetced at\nx=0, mg/L\nU=4 stream velocity km/day\n\n1.State the problem clearly (as if you were writing it up for someone else to\nsolve). What do you want to calculate? What procedures will you rely\nupon?\n2.Itemize the input and output information needed for the calculation and\ndetermine how you want the answers to be displayed (e.g. sketch plots\nsimilar to those you wish to produce)\n3.Write down a detailed solution procedure. You may want to work out a\nsimplified version of the problem by hand or with a calculator (for some\ntypical inputs) to clarify the operations that need to be carried out.\n4.Translate the solution into MATLAB code, correct syntax errors identified\nby MATLAB, make sure program reproduces your manual solution, debug\nas required. Keep things as simple as possible at first. If you have\nproblems, simplify even more.\n5. Solve the problem two ways: first using vector notation only, and second\nusing a for loop.\n6.Test the MATLAB program with different input data and extend the\nprogram as desired once it seems to be working\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "rec03_3.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/5dfb68068ac137801ad1e7e199438d85_rec03_3.pdf",
      "content": "1.017/1.010 Recitation 3\nMATLAB Tests and Loops\n\nMore MATLAB operations\nFeature\nClassical Notation\n(Each element of result is true\nor false)\nMATLAB notation\n(Each element of result is\n1or 0)\nRelational\nOperations\na ,b scalars or arrays of\nnumbers\na, b scalars or arrays of\nnumbers\nGreater than\na > b, a(i) > b(i)\na > b\nLess than\na < b, a(i) < b(i)\na < b\nGreater than or\nequal\na ≥ b, a(i) ≥ b(i)\na >= b\nLess than or equal\na ≤ b, a(i) ≤b(i)\na <= b\nLogical Operations A,B scalars or arrays of true or\nfalse\nA,B arrays of 1 or 0\nLogical OR\nA OR B, A\nB\nU\nA|B\nLogical AND\nA AND B, AI B\nA&B\nLogical NOT\nNOT A\n~A\nRelational and logical operations for arrays\nOperations are elementwise:\n[1 3 -2] > [0 4 1] yields [1 0 0]\n\n1 in this result signifies true, 0 signifies false\n([1 5] > [2 3])|([-3 9] <= [-3 8]) yields [1 1]\nUsing relational and logical operations in tests\nRunoff generation:\nif (precip>infilt) % begin test\nrunoff = precip - infilt % if inequality true\nelse\nrunoff=0 % if inequality false\nend %end test\nRecursive computations and loops\n\n1D translation of a particle in a time-dependent velocity field:\ndelta_t=.1 % define time step\nx(1)=2 % initialize x\nfor(t=1:40) % begin time loop\nv(t)=10*cos(t);\nx(t+1) = x(t) + v(t)*delta_t; % update x(t)\nend % end time loop\nplot(0:40,x)\nUser-defined functions\nUser defined function is stored in m-file of same name:\nstats.m . . . .\nfunction [mdata, vdata]=stats(data)\n% Computation of sample mean and variance\nn=length(data)\nmdata=sum(data)/n % sample mean\nvdata=sum((data-mdata).^2)/n % sample variance\nreturn\nRun function by typing name, specifying appropriate input and output\nvariables:\n>> load arsenic.txt\n>> [marsenic, varsenic]=stats(arsenic)\nFunction returns marsenic and varsenic\nApplication to Virtual Experiments\nMATLAB's vector, loop and logical operations can be used to derive\nprobabilities from virtual experiments. The procedure is:\n1. Generate a random outcome for each replicate (repeated experiment)\n2. Test the outcome to see if it satisfies the requirements that define a\nparticular event\n3. Record the number of replicates that yield the event\n4. Compute the probability of the event by dividing the number of event\noccurrences by the total number of replicates\nSometimes one or more steps are combined.\n\nExample: Coin toss\nUse virtual experiment to compute probability of obtaining at least 3 heads\nin 5 coin tosses.\nWrite user-defined function toss:\nfunction toss\nnrep=10000 % number of replicates\nntoss=5 % number of tosses\nfor i=1:nrep\n% generate random outcome for repl. i\ntoss=unidrnd(2,ntoss,1)-1; % head=1, tail=0\nheads(i)=sum(toss); % count heads\nend\n% test outcomes and count event occurrences\nn_atleast_3=sum(heads>=3)\n% compute probability of event\np_atleast_3=n_atleast_3/nrep\nreturn\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "rec03_4.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/88f95cd759e28ddd539936b49ed9acb2_rec03_4.pdf",
      "content": "1.017/1.010 Recitation 4\nRainfall Simulation\n\nExample: Simple Probabilistic Model of Rainfall\n\nConsider a series of 365 consecutive days that may have rain or no rain.\nThe conditional probabilities of rain today are:\n\nP(rain today | rain yesterday) = 0.6\n\nP(rain today | no rain yesterday) = 0.2\n\nAssume that the annual series starts with a no rain day (Day 0).\n\nThe intensity of rainfall on rainy days is described by an exponentially\ndistributed random variable (see MATLAB help exprnd documentation)\nwith a parameter (mean value) of:\n\nMU=10 mm/day.\n\nThis rainfall model accounts for the persistence of rainy or dry weather\nover time. It also presumes that low rainfall intensities are more likely than\nhigh intensities.\n\nWrite a program to generate many (e.g. 1000) replicates of the 365\nprobabilistic rainfall series described above. Carry out the following tasks:\n\n1. Plot the rainfall intensity vs. day (1-365) obtained for 1 replicate.\nUse MATLAB's stairs plot command.\n\n2. Derive the probabilities of the following events:\n\nA: The rainfall intensity exceeds 50 mm/day for at least one day\nduring the year\n\nB: The total annual rainfall (summed over all 365 days) exceeds\n1500 mm.\n\nC: During the year there is at least 1 drought period with no rain for\n30 or more days.\n\nHint for C: Use the MATLAB find function to obtain a vector of\nrainy day numbers (scattered between 1-365). Then use the\n\nMATLAB diff function to obtain a vector of differences between\nthese rainy day numbers. These differences are the lengths of the\ndry periods between rainy days. Then determine how many of the\ndry period lengths are greater than or equal to 30 days.\n\n3. Turn in your MATLAB program listing together with the plot from 1).\nWrite the probabilities from 2) on your listing.\n\nThese probabilities are useful for assessing the risks of floods and droughts but are\nquite difficult to derive without carrying out a virtual simulation.\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    },
    {
      "category": "Resource",
      "title": "rec03_5.pdf",
      "type": "PDF",
      "source_url": "https://ocw.mit.edu/courses/1-017-computing-and-data-analysis-for-environmental-applications-fall-2003/4fddff574dd43d1cbf73ec957d6210bc_rec03_5.pdf",
      "content": "1.017/1.010 Recitation 5\nTime Series and Central Limit Theorem\n\nExercise 1: Computing joint probabilities and correlations of a time\nseries\nSuppose that the total streamflows (in m3/month) Qt and Qt+1 over two successive\nmonths t and t+1 are related by the following equation:\nQt+1 = 0.6Qt + et t = 1....10\nIn deterministic applications such time series expressions are solved one step at\na time, starting with a specified value of the initial value of the dependent (in this\ncase, the initial streamflow Q1) and using a specified series of et values (for t =\n10). The resultis a series of Qt values for t > 1.\nWhen Q1 and the et values are uncertain, we can use the time series equation to\nderive the mean, variance, and covariance of the streamflow for t > 1. These\ngive a probabilistic description of the temporally variable streamflow.\nSuppose that the random excitation values e1 ... e10 are independent normally\ndistributed random variables, each with mean 4.0 and variance 0.64 (standard\ndeviation 0,8). In addition, suppose that the initial streamflow Q1 is normally\ndistributed with mean 10.0 and variance 1.0 (standard deviation 1.0). Assume\nthat Q1 and the et values are independent.\nUse the definitions of variance and correlation to evaluate the correlation\nbetween the two successive streamflows Q2 and Q3. First use the defining time\nseries difference equation and the properties of the mean and variance of a\nlinear function to find the means and variances of Q2 and Q3. Then use the\nsame equation to derive an expression for the covariance and correlation\nbetween Q2 and Q3. Are Q2 and Q3 independent? Why? What do you think\nyou would get for the means and variances of Q9 and Q10. Why?\nUse MATLAB to determine the joint probability that Q2 and Q3 are both greater\nthan 12.0. Also, plot a typical replicate of streamflow vs. time.\nSome relevant MATLAB functions: normrnd, sum\n\nExercise 2: The Central Limit Theorem\nThe Central Limit Theorem states that the distribution of a linear function of\nindependent random variables approaches the normal distribution as the number\nof variables increases. Use MATLAB to demonstrate this by carrying out the\nfollowing virtual experiment:\n\nGenerate a random array of 1000 replicates (rows) each consisting of 32\nindependent identically distributed sample values (columns), using one of the\nnon-normal random number generators provided in the MATLAB statistics\ntoolbox (e.g. exponential, uniform, lognormal, etc.). Select your own values for\nall required distributional parameters. Plot histograms and CDFs (over all\nreplicates) for the sample mean:\n∑\n=\n=\nN\ni\ni\nN\nx\nm x\n\nFor N = 1, 4, 16, and 64. Plot all 4 CDFs on the same axis using the MATLAB\nnormplot function, which displays normally distributed data as a straight line.\nYour CDFs should more closely approach a straight line as N increases,\nindicating convergence to a normal probability distribution. The approach to\nnormality should also be apparent in your 4 histograms (try plotting all four on\none page, using the MATLAB subplot function)\nSome relevant MATLAB functions: exprnd, chi2rnd, lognrnd, hist,\nnormplot, mean, subplot.\n\nCopyright 2003 Massachusetts Institute of Technology\nLast modified Oct. 8, 2003"
    }
  ]
}